<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_fdm_bates_solver" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::FdmBatesSolver</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_lazy_object" prot="public" virt="non-virtual">QuantLib::LazyObject</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_bates_solver_1ab764e9a06820ad78b8eeb8687fdeec5e" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_bates_process" kindref="compound">BatesProcess</ref> &gt;</type>
        <definition>const Handle&lt;BatesProcess&gt; QuantLib::FdmBatesSolver::process_</definition>
        <argsstring></argsstring>
        <name>process_</name>
        <qualifiedname>QuantLib::FdmBatesSolver::process_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/solvers/fdmbatessolver.hpp" line="60" column="22" bodyfile="ql/methods/finitedifferences/solvers/fdmbatessolver.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_bates_solver_1a3ada5bc90fb032209e72ccaf2b55180f" prot="private" static="no" mutable="no">
        <type>const <ref refid="struct_quant_lib_1_1_fdm_solver_desc" kindref="compound">FdmSolverDesc</ref></type>
        <definition>const FdmSolverDesc QuantLib::FdmBatesSolver::solverDesc_</definition>
        <argsstring></argsstring>
        <name>solverDesc_</name>
        <qualifiedname>QuantLib::FdmBatesSolver::solverDesc_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/solvers/fdmbatessolver.hpp" line="61" column="29" bodyfile="ql/methods/finitedifferences/solvers/fdmbatessolver.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_bates_solver_1ab36b3d8aca7b294fe02b4d3a51bd7440" prot="private" static="no" mutable="no">
        <type>const <ref refid="struct_quant_lib_1_1_fdm_scheme_desc" kindref="compound">FdmSchemeDesc</ref></type>
        <definition>const FdmSchemeDesc QuantLib::FdmBatesSolver::schemeDesc_</definition>
        <argsstring></argsstring>
        <name>schemeDesc_</name>
        <qualifiedname>QuantLib::FdmBatesSolver::schemeDesc_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/solvers/fdmbatessolver.hpp" line="62" column="29" bodyfile="ql/methods/finitedifferences/solvers/fdmbatessolver.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_bates_solver_1abb9131f89bdb85d0e585763d0694c4d5" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>const Size QuantLib::FdmBatesSolver::integroIntegrationOrder_</definition>
        <argsstring></argsstring>
        <name>integroIntegrationOrder_</name>
        <qualifiedname>QuantLib::FdmBatesSolver::integroIntegrationOrder_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/solvers/fdmbatessolver.hpp" line="63" column="20" bodyfile="ql/methods/finitedifferences/solvers/fdmbatessolver.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_bates_solver_1aba43f5eef8168fbe904c5af46e4dd0d2" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_fdm_quanto_helper" kindref="compound">FdmQuantoHelper</ref> &gt;</type>
        <definition>const Handle&lt;FdmQuantoHelper&gt; QuantLib::FdmBatesSolver::quantoHelper_</definition>
        <argsstring></argsstring>
        <name>quantoHelper_</name>
        <qualifiedname>QuantLib::FdmBatesSolver::quantoHelper_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/solvers/fdmbatessolver.hpp" line="64" column="22" bodyfile="ql/methods/finitedifferences/solvers/fdmbatessolver.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_bates_solver_1a5673c96d842268751a1489b9a7fcb4a7" prot="private" static="no" mutable="yes">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_fdm2_dim_solver" kindref="compound">Fdm2DimSolver</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;Fdm2DimSolver&gt; QuantLib::FdmBatesSolver::solver_</definition>
        <argsstring></argsstring>
        <name>solver_</name>
        <qualifiedname>QuantLib::FdmBatesSolver::solver_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/solvers/fdmbatessolver.hpp" line="66" column="33" bodyfile="ql/methods/finitedifferences/solvers/fdmbatessolver.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_bates_solver_1ac71e68e71819fcc15d3acbb56bbd765f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FdmBatesSolver::FdmBatesSolver</definition>
        <argsstring>(Handle&lt; BatesProcess &gt; process, FdmSolverDesc solverDesc, const FdmSchemeDesc &amp;schemeDesc=FdmSchemeDesc::Hundsdorfer(), Size integroIntegrationOrder=12, Handle&lt; FdmQuantoHelper &gt; quantoHelper=Handle&lt; FdmQuantoHelper &gt;())</argsstring>
        <name>FdmBatesSolver</name>
        <qualifiedname>QuantLib::FdmBatesSolver::FdmBatesSolver</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_bates_process" kindref="compound">BatesProcess</ref> &gt;</type>
          <declname>process</declname>
        </param>
        <param>
          <type><ref refid="struct_quant_lib_1_1_fdm_solver_desc" kindref="compound">FdmSolverDesc</ref></type>
          <declname>solverDesc</declname>
        </param>
        <param>
          <type>const <ref refid="struct_quant_lib_1_1_fdm_scheme_desc" kindref="compound">FdmSchemeDesc</ref> &amp;</type>
          <declname>schemeDesc</declname>
          <defval>FdmSchemeDesc::Hundsdorfer()</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>integroIntegrationOrder</declname>
          <defval>12</defval>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_fdm_quanto_helper" kindref="compound">FdmQuantoHelper</ref> &gt;</type>
          <declname>quantoHelper</declname>
          <defval><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_fdm_quanto_helper" kindref="compound">FdmQuantoHelper</ref> &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/solvers/fdmbatessolver.hpp" line="39" column="9" bodyfile="ql/methods/finitedifferences/solvers/fdmbatessolver.cpp" bodystart="32" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_bates_solver_1a3e13d1211dbf4fe071c54171d113af65" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::FdmBatesSolver::valueAt</definition>
        <argsstring>(Real s, Real v) const</argsstring>
        <name>valueAt</name>
        <qualifiedname>QuantLib::FdmBatesSolver::valueAt</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/solvers/fdmbatessolver.hpp" line="45" column="14" bodyfile="ql/methods/finitedifferences/solvers/fdmbatessolver.cpp" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_bates_solver_1a28df9535458cca5f1998dda0cdfd5774" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::FdmBatesSolver::thetaAt</definition>
        <argsstring>(Real s, Real v) const</argsstring>
        <name>thetaAt</name>
        <qualifiedname>QuantLib::FdmBatesSolver::thetaAt</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/solvers/fdmbatessolver.hpp" line="46" column="14" bodyfile="ql/methods/finitedifferences/solvers/fdmbatessolver.cpp" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_bates_solver_1ade30803fcda952e2aaa5af9760fecdbf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::FdmBatesSolver::deltaAt</definition>
        <argsstring>(Real s, Real v) const</argsstring>
        <name>deltaAt</name>
        <qualifiedname>QuantLib::FdmBatesSolver::deltaAt</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/solvers/fdmbatessolver.hpp" line="53" column="14" bodyfile="ql/methods/finitedifferences/solvers/fdmbatessolver.cpp" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_bates_solver_1a2578ea058116a2e7446940d25728a55c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::FdmBatesSolver::gammaAt</definition>
        <argsstring>(Real s, Real v) const</argsstring>
        <name>gammaAt</name>
        <qualifiedname>QuantLib::FdmBatesSolver::gammaAt</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/solvers/fdmbatessolver.hpp" line="54" column="14" bodyfile="ql/methods/finitedifferences/solvers/fdmbatessolver.cpp" bodystart="65" bodyend="69"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_bates_solver_1a88e9f8ecdb898820ae7be18e7c26ac5b" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::FdmBatesSolver::performCalculations</definition>
        <argsstring>() const override</argsstring>
        <name>performCalculations</name>
        <qualifiedname>QuantLib::FdmBatesSolver::performCalculations</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_lazy_object_1aafa5583a3743d9f93fa40da5b62e1ff8">performCalculations</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must implement any calculations which must be (re)done in order to calculate the desired results. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/solvers/fdmbatessolver.hpp" line="57" column="14" bodyfile="ql/methods/finitedifferences/solvers/fdmbatessolver.cpp" bodystart="43" bodyend="53"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::FdmBatesSolver</label>
        <link refid="class_quant_lib_1_1_fdm_bates_solver"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::FdmBatesSolver</label>
        <link refid="class_quant_lib_1_1_fdm_bates_solver"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </collaborationgraph>
    <location file="ql/methods/finitedifferences/solvers/fdmbatessolver.hpp" line="37" column="5" bodyfile="ql/methods/finitedifferences/solvers/fdmbatessolver.hpp" bodystart="37" bodyend="67"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_lazy_object_1a02070ea7442d30625992c1711030d4b8" prot="protected" virt="non-virtual"><scope>QuantLib::FdmBatesSolver</scope><name>alwaysForward_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a17c9433135a259e4776baec66204a484" prot="public" virt="non-virtual"><scope>QuantLib::FdmBatesSolver</scope><name>alwaysForwardNotifications</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a5244c7f83592375a0ea9048296435fd1" prot="protected" virt="virtual"><scope>QuantLib::FdmBatesSolver</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a58b4986a80efa18634483a92c121e26e" prot="protected" virt="non-virtual"><scope>QuantLib::FdmBatesSolver</scope><name>calculated_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::FdmBatesSolver</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_fdm_bates_solver_1ade30803fcda952e2aaa5af9760fecdbf" prot="public" virt="non-virtual"><scope>QuantLib::FdmBatesSolver</scope><name>deltaAt</name></member>
      <member refid="class_quant_lib_1_1_fdm_bates_solver_1ac71e68e71819fcc15d3acbb56bbd765f" prot="public" virt="non-virtual"><scope>QuantLib::FdmBatesSolver</scope><name>FdmBatesSolver</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1afac6ee19c3107c453e1347dd8000e023" prot="public" virt="non-virtual"><scope>QuantLib::FdmBatesSolver</scope><name>forwardFirstNotificationOnly</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7157f41e83f2c5d924f5c5bafda04d1d" prot="public" virt="non-virtual"><scope>QuantLib::FdmBatesSolver</scope><name>freeze</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7bb721fe00c6854e602758aba629ab77" prot="protected" virt="non-virtual"><scope>QuantLib::FdmBatesSolver</scope><name>frozen_</name></member>
      <member refid="class_quant_lib_1_1_fdm_bates_solver_1a2578ea058116a2e7446940d25728a55c" prot="public" virt="non-virtual"><scope>QuantLib::FdmBatesSolver</scope><name>gammaAt</name></member>
      <member refid="class_quant_lib_1_1_fdm_bates_solver_1abb9131f89bdb85d0e585763d0694c4d5" prot="private" virt="non-virtual"><scope>QuantLib::FdmBatesSolver</scope><name>integroIntegrationOrder_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a0a7c5d42815a4e16ee2158e24dbfc748" prot="public" virt="non-virtual"><scope>QuantLib::FdmBatesSolver</scope><name>isCalculated</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::FdmBatesSolver</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a26f18f4ff7faaaebd8eae50e064b493e" prot="public" virt="non-virtual"><scope>QuantLib::FdmBatesSolver</scope><name>LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::FdmBatesSolver</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::FdmBatesSolver</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::FdmBatesSolver</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::FdmBatesSolver</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::FdmBatesSolver</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::FdmBatesSolver</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::FdmBatesSolver</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::FdmBatesSolver</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::QuantLib::Observer::"><scope>QuantLib::FdmBatesSolver</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_fdm_bates_solver_1a88e9f8ecdb898820ae7be18e7c26ac5b" prot="protected" virt="virtual"><scope>QuantLib::FdmBatesSolver</scope><name>performCalculations</name></member>
      <member refid="class_quant_lib_1_1_fdm_bates_solver_1ab764e9a06820ad78b8eeb8687fdeec5e" prot="private" virt="non-virtual"><scope>QuantLib::FdmBatesSolver</scope><name>process_</name></member>
      <member refid="class_quant_lib_1_1_fdm_bates_solver_1aba43f5eef8168fbe904c5af46e4dd0d2" prot="private" virt="non-virtual"><scope>QuantLib::FdmBatesSolver</scope><name>quantoHelper_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a70c9b24e50132408d8d9ce4f6674662a" prot="public" virt="non-virtual"><scope>QuantLib::FdmBatesSolver</scope><name>recalculate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::FdmBatesSolver</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::FdmBatesSolver</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_fdm_bates_solver_1ab36b3d8aca7b294fe02b4d3a51bd7440" prot="private" virt="non-virtual"><scope>QuantLib::FdmBatesSolver</scope><name>schemeDesc_</name></member>
      <member refid="class_quant_lib_1_1_fdm_bates_solver_1a5673c96d842268751a1489b9a7fcb4a7" prot="private" virt="non-virtual"><scope>QuantLib::FdmBatesSolver</scope><name>solver_</name></member>
      <member refid="class_quant_lib_1_1_fdm_bates_solver_1a3ada5bc90fb032209e72ccaf2b55180f" prot="private" virt="non-virtual"><scope>QuantLib::FdmBatesSolver</scope><name>solverDesc_</name></member>
      <member refid="class_quant_lib_1_1_fdm_bates_solver_1a28df9535458cca5f1998dda0cdfd5774" prot="public" virt="non-virtual"><scope>QuantLib::FdmBatesSolver</scope><name>thetaAt</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a2e0e4786666453024b9d4e0761f2770b" prot="public" virt="non-virtual"><scope>QuantLib::FdmBatesSolver</scope><name>unfreeze</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::FdmBatesSolver</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::FdmBatesSolver</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1adee2bf49be5c4c78736be293321a856d" prot="public" virt="virtual"><scope>QuantLib::FdmBatesSolver</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_fdm_bates_solver_1a3e13d1211dbf4fe071c54171d113af65" prot="public" virt="non-virtual"><scope>QuantLib::FdmBatesSolver</scope><name>valueAt</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a9d719c43bb627177a90d7d12324a2d6e" prot="public" virt="non-virtual"><scope>QuantLib::FdmBatesSolver</scope><name>~LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::FdmBatesSolver</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::FdmBatesSolver</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

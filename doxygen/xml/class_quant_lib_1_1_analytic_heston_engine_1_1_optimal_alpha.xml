<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::AnalyticHestonEngine::OptimalAlpha</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1a2c4fd388b97e2961c90e969de7744adb" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::AnalyticHestonEngine::OptimalAlpha::t_</definition>
        <argsstring></argsstring>
        <name>t_</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::OptimalAlpha::t_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="297" column="20" bodyfile="ql/pricingengines/vanilla/analytichestonengine.hpp" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1aa3ae22c61a8e9319f833a732b5b0430d" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::AnalyticHestonEngine::OptimalAlpha::fwd_</definition>
        <argsstring></argsstring>
        <name>fwd_</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::OptimalAlpha::fwd_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="297" column="23" bodyfile="ql/pricingengines/vanilla/analytichestonengine.hpp" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1ae86b9cd35bc4a561bacbb8340c463fad" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::AnalyticHestonEngine::OptimalAlpha::kappa_</definition>
        <argsstring></argsstring>
        <name>kappa_</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::OptimalAlpha::kappa_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="297" column="28" bodyfile="ql/pricingengines/vanilla/analytichestonengine.hpp" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1a9cc1cf32c473addfc3635842b7af458e" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::AnalyticHestonEngine::OptimalAlpha::theta_</definition>
        <argsstring></argsstring>
        <name>theta_</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::OptimalAlpha::theta_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="297" column="35" bodyfile="ql/pricingengines/vanilla/analytichestonengine.hpp" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1a2ef44465cce519d492393cca09ae3010" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::AnalyticHestonEngine::OptimalAlpha::sigma_</definition>
        <argsstring></argsstring>
        <name>sigma_</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::OptimalAlpha::sigma_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="297" column="42" bodyfile="ql/pricingengines/vanilla/analytichestonengine.hpp" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1ab80a325520de78a4fce5a18abc48013c" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::AnalyticHestonEngine::OptimalAlpha::rho_</definition>
        <argsstring></argsstring>
        <name>rho_</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::OptimalAlpha::rho_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="297" column="49" bodyfile="ql/pricingengines/vanilla/analytichestonengine.hpp" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1aacf702b1baa9f0f353b9a7b7fa3b4cd1" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::AnalyticHestonEngine::OptimalAlpha::eps_</definition>
        <argsstring></argsstring>
        <name>eps_</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::OptimalAlpha::eps_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="299" column="20" bodyfile="ql/pricingengines/vanilla/analytichestonengine.hpp" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1a17d640134ed629508a4641eed960245f" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_quant_lib_1_1_analytic_heston_engine" kindref="compound">AnalyticHestonEngine</ref> *const</type>
        <definition>const AnalyticHestonEngine* const QuantLib::AnalyticHestonEngine::OptimalAlpha::enginePtr_</definition>
        <argsstring></argsstring>
        <name>enginePtr_</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::OptimalAlpha::enginePtr_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="301" column="42" bodyfile="ql/pricingengines/vanilla/analytichestonengine.hpp" bodystart="301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1a29f9d2a13a2a1c488db7cd71d9f390cc" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticHestonEngine::OptimalAlpha::km_</definition>
        <argsstring></argsstring>
        <name>km_</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::OptimalAlpha::km_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="302" column="14" bodyfile="ql/pricingengines/vanilla/analytichestonengine.hpp" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1a187cdfd0690c2df5d0b2f286b2587cce" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticHestonEngine::OptimalAlpha::kp_</definition>
        <argsstring></argsstring>
        <name>kp_</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::OptimalAlpha::kp_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="302" column="18" bodyfile="ql/pricingengines/vanilla/analytichestonengine.hpp" bodystart="302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1a9b35c0afe1ffb4a96f6991d378b6a551" prot="private" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::AnalyticHestonEngine::OptimalAlpha::evaluations_</definition>
        <argsstring></argsstring>
        <name>evaluations_</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::OptimalAlpha::evaluations_</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="303" column="22" bodyfile="ql/pricingengines/vanilla/analytichestonengine.hpp" bodystart="303" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1a1b5129759010fbfff3aebf3572e3593f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::AnalyticHestonEngine::OptimalAlpha::OptimalAlpha</definition>
        <argsstring>(Time t, const AnalyticHestonEngine *enginePtr)</argsstring>
        <name>OptimalAlpha</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::OptimalAlpha::OptimalAlpha</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_analytic_heston_engine" kindref="compound">AnalyticHestonEngine</ref> *</type>
          <declname>enginePtr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="280" column="9" bodyfile="ql/pricingengines/vanilla/analytichestonengine.cpp" bodystart="300" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1aaed1135d6fc0f1b2d82f00dd991a23ef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticHestonEngine::OptimalAlpha::operator()</definition>
        <argsstring>(Real strike) const</argsstring>
        <name>operator()</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::OptimalAlpha::operator()</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>strike</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="284" column="14" bodyfile="ql/pricingengines/vanilla/analytichestonengine.cpp" bodystart="389" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1abbcf3fffca235debfe654dd6912c539d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>, <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::pair&lt; Real, Real &gt; QuantLib::AnalyticHestonEngine::OptimalAlpha::alphaGreaterZero</definition>
        <argsstring>(Real strike) const</argsstring>
        <name>alphaGreaterZero</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::OptimalAlpha::alphaGreaterZero</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>strike</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="285" column="19" bodyfile="ql/pricingengines/vanilla/analytichestonengine.cpp" bodystart="359" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1a9b74a544697fdebd22ac29f8f7cd5cbf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>, <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::pair&lt; Real, Real &gt; QuantLib::AnalyticHestonEngine::OptimalAlpha::alphaSmallerMinusOne</definition>
        <argsstring>(Real strike) const</argsstring>
        <name>alphaSmallerMinusOne</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::OptimalAlpha::alphaSmallerMinusOne</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>strike</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="286" column="19" bodyfile="ql/pricingengines/vanilla/analytichestonengine.cpp" bodystart="380" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1ad9b05a6820f81f8e7492e5260a0320ba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::AnalyticHestonEngine::OptimalAlpha::numberOfEvaluations</definition>
        <argsstring>() const</argsstring>
        <name>numberOfEvaluations</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::OptimalAlpha::numberOfEvaluations</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="288" column="14" bodyfile="ql/pricingengines/vanilla/analytichestonengine.cpp" bodystart="407" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1a4c12ab7f8a544ae1a3f9e92697f2737e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticHestonEngine::OptimalAlpha::M</definition>
        <argsstring>(Real k) const</argsstring>
        <name>M</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::OptimalAlpha::M</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="289" column="14" bodyfile="ql/pricingengines/vanilla/analytichestonengine.cpp" bodystart="426" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1a5a60e84cec69405820367d522b07dd9d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticHestonEngine::OptimalAlpha::k</definition>
        <argsstring>(Real x, Integer sgn) const</argsstring>
        <name>k</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::OptimalAlpha::k</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
          <declname>sgn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="290" column="14" bodyfile="ql/pricingengines/vanilla/analytichestonengine.cpp" bodystart="442" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1a4a4c6434188926d0094b2d901753cf41" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticHestonEngine::OptimalAlpha::alphaMin</definition>
        <argsstring>(Real strike) const</argsstring>
        <name>alphaMin</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::OptimalAlpha::alphaMin</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>strike</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="291" column="14" bodyfile="ql/pricingengines/vanilla/analytichestonengine.cpp" bodystart="365" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1a9eadf32af53562f43fe1c3ff98e59223" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticHestonEngine::OptimalAlpha::alphaMax</definition>
        <argsstring>(Real strike) const</argsstring>
        <name>alphaMax</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::OptimalAlpha::alphaMax</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>strike</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="292" column="14" bodyfile="ql/pricingengines/vanilla/analytichestonengine.cpp" bodystart="318" bodyend="356"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1a9e1a27cc4c49f7e17a8f8f30d9cb5067" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>, <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::pair&lt; Real, Real &gt; QuantLib::AnalyticHestonEngine::OptimalAlpha::findMinima</definition>
        <argsstring>(Real lower, Real upper, Real strike) const</argsstring>
        <name>findMinima</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::OptimalAlpha::findMinima</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>lower</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>upper</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>strike</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="295" column="19" bodyfile="ql/pricingengines/vanilla/analytichestonengine.cpp" bodystart="411" bodyend="424"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="278" column="5" bodyfile="ql/pricingengines/vanilla/analytichestonengine.hpp" bodystart="278" bodyend="304"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1abbcf3fffca235debfe654dd6912c539d" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::OptimalAlpha</scope><name>alphaGreaterZero</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1a9eadf32af53562f43fe1c3ff98e59223" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::OptimalAlpha</scope><name>alphaMax</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1a4a4c6434188926d0094b2d901753cf41" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::OptimalAlpha</scope><name>alphaMin</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1a9b74a544697fdebd22ac29f8f7cd5cbf" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::OptimalAlpha</scope><name>alphaSmallerMinusOne</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1a17d640134ed629508a4641eed960245f" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::OptimalAlpha</scope><name>enginePtr_</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1aacf702b1baa9f0f353b9a7b7fa3b4cd1" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::OptimalAlpha</scope><name>eps_</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1a9b35c0afe1ffb4a96f6991d378b6a551" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::OptimalAlpha</scope><name>evaluations_</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1a9e1a27cc4c49f7e17a8f8f30d9cb5067" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::OptimalAlpha</scope><name>findMinima</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1aa3ae22c61a8e9319f833a732b5b0430d" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::OptimalAlpha</scope><name>fwd_</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1a5a60e84cec69405820367d522b07dd9d" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::OptimalAlpha</scope><name>k</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1ae86b9cd35bc4a561bacbb8340c463fad" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::OptimalAlpha</scope><name>kappa_</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1a29f9d2a13a2a1c488db7cd71d9f390cc" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::OptimalAlpha</scope><name>km_</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1a187cdfd0690c2df5d0b2f286b2587cce" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::OptimalAlpha</scope><name>kp_</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1a4c12ab7f8a544ae1a3f9e92697f2737e" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::OptimalAlpha</scope><name>M</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1ad9b05a6820f81f8e7492e5260a0320ba" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::OptimalAlpha</scope><name>numberOfEvaluations</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1aaed1135d6fc0f1b2d82f00dd991a23ef" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::OptimalAlpha</scope><name>operator()</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1a1b5129759010fbfff3aebf3572e3593f" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::OptimalAlpha</scope><name>OptimalAlpha</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1ab80a325520de78a4fce5a18abc48013c" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::OptimalAlpha</scope><name>rho_</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1a2ef44465cce519d492393cca09ae3010" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::OptimalAlpha</scope><name>sigma_</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1a2c4fd388b97e2961c90e969de7744adb" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::OptimalAlpha</scope><name>t_</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_optimal_alpha_1a9cc1cf32c473addfc3635842b7af458e" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::OptimalAlpha</scope><name>theta_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

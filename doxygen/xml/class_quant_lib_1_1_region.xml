<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_region" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::Region</compoundname>
    <derivedcompoundref refid="class_quant_lib_1_1_australia_region" prot="public" virt="non-virtual">QuantLib::AustraliaRegion</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_custom_region" prot="public" virt="non-virtual">QuantLib::CustomRegion</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_e_u_region" prot="public" virt="non-virtual">QuantLib::EURegion</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_france_region" prot="public" virt="non-virtual">QuantLib::FranceRegion</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_generic_region" prot="public" virt="non-virtual">QuantLib::GenericRegion</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_u_k_region" prot="public" virt="non-virtual">QuantLib::UKRegion</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_u_s_region" prot="public" virt="non-virtual">QuantLib::USRegion</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_z_a_region" prot="public" virt="non-virtual">QuantLib::ZARegion</derivedcompoundref>
    <includes refid="region_8hpp" local="no">region.hpp</includes>
    <innerclass refid="struct_quant_lib_1_1_region_1_1_data" prot="public">QuantLib::Region::Data</innerclass>
    <sectiondef kind="user-defined">
      <header>Inspectors</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_region_1ab533685bdb2846ff040b2f0b162e60e0" prot="protected" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="struct_quant_lib_1_1_region_1_1_data" kindref="compound">Data</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;Data&gt; QuantLib::Region::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <qualifiedname>QuantLib::Region::data_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/region.hpp" line="46" column="25" bodyfile="ql/indexes/region.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_region_1a21d44e1631b6c679e5074d53380f1210" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; QuantLib::Region::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <qualifiedname>QuantLib::Region::name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/region.hpp" line="40" column="27" bodyfile="ql/indexes/region.hpp" bodystart="113" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_region_1a569819110dfa120ea6aa73fd414a75a8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; QuantLib::Region::code</definition>
        <argsstring>() const</argsstring>
        <name>code</name>
        <qualifiedname>QuantLib::Region::code</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/region.hpp" line="41" column="27" bodyfile="ql/indexes/region.hpp" bodystart="117" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_region_1a4d5eca03f40d217b6234514eb0057f3a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Region::Region</definition>
        <argsstring>()=default</argsstring>
        <name>Region</name>
        <qualifiedname>QuantLib::Region::Region</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/region.hpp" line="44" column="9"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="related">
      <memberdef kind="function" id="class_quant_lib_1_1_region_1a2693369a6f504bb273441569e0487054" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const Region &amp;, const Region &amp;)</argsstring>
        <name>operator==</name>
        <qualifiedname>QuantLib::Region::operator==</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_region" kindref="compound">Region</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_region" kindref="compound">Region</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/region.hpp" line="56" column="10" bodyfile="ql/indexes/region.hpp" bodystart="121" bodyend="123" declfile="ql/indexes/region.hpp" declline="56" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_region_1a91999f0d2a4817c3d44e56f8fa9b3a38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const Region &amp;, const Region &amp;)</argsstring>
        <name>operator!=</name>
        <qualifiedname>QuantLib::Region::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_region" kindref="compound">Region</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_region" kindref="compound">Region</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/region.hpp" line="59" column="10" bodyfile="ql/indexes/region.hpp" bodystart="125" bodyend="127" declfile="ql/indexes/region.hpp" declline="59" declcolumn="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para><ref refid="class_quant_lib_1_1_region" kindref="compound">Region</ref> class, used for inflation applicability. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::AustraliaRegion</label>
        <link refid="class_quant_lib_1_1_australia_region"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::CustomRegion</label>
        <link refid="class_quant_lib_1_1_custom_region"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::EURegion</label>
        <link refid="class_quant_lib_1_1_e_u_region"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::FranceRegion</label>
        <link refid="class_quant_lib_1_1_france_region"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::GenericRegion</label>
        <link refid="class_quant_lib_1_1_generic_region"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::Region</label>
        <link refid="class_quant_lib_1_1_region"/>
      </node>
      <node id="7">
        <label>QuantLib::UKRegion</label>
        <link refid="class_quant_lib_1_1_u_k_region"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::USRegion</label>
        <link refid="class_quant_lib_1_1_u_s_region"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QuantLib::ZARegion</label>
        <link refid="class_quant_lib_1_1_z_a_region"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="ql/indexes/region.hpp" line="36" column="5" bodyfile="ql/indexes/region.hpp" bodystart="36" bodyend="47"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_region_1a569819110dfa120ea6aa73fd414a75a8" prot="public" virt="non-virtual"><scope>QuantLib::Region</scope><name>code</name></member>
      <member refid="class_quant_lib_1_1_region_1ab533685bdb2846ff040b2f0b162e60e0" prot="protected" virt="non-virtual"><scope>QuantLib::Region</scope><name>data_</name></member>
      <member refid="class_quant_lib_1_1_region_1a21d44e1631b6c679e5074d53380f1210" prot="public" virt="non-virtual"><scope>QuantLib::Region</scope><name>name</name></member>
      <member refid="class_quant_lib_1_1_region_1a91999f0d2a4817c3d44e56f8fa9b3a38" prot="public" virt="non-virtual"><scope>QuantLib::Region</scope><name>operator!=</name></member>
      <member refid="class_quant_lib_1_1_region_1a2693369a6f504bb273441569e0487054" prot="public" virt="non-virtual"><scope>QuantLib::Region</scope><name>operator==</name></member>
      <member refid="class_quant_lib_1_1_region_1a4d5eca03f40d217b6234514eb0057f3a" prot="protected" virt="non-virtual"><scope>QuantLib::Region</scope><name>Region</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

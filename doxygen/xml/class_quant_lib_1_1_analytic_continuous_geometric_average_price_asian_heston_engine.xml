<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_continuous_averaging_asian_option_1_1engine" prot="public" virt="non-virtual">QuantLib::ContinuousAveragingAsianOption::engine</basecompoundref>
    <includes refid="analytic__cont__geom__av__price__heston_8hpp" local="no">analytic_cont_geom_av_price_heston.hpp</includes>
    <innerclass refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1_1_dcf_integrand" prot="public">QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::DcfIntegrand</innerclass>
    <innerclass refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1_1_integrand" prot="public">QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::Integrand</innerclass>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1a76c9a4927f78f1493835b6dabe6fa5cb" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::v0_</definition>
        <argsstring></argsstring>
        <name>v0_</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::v0_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" line="82" column="14" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1a179e335d782cf500c4bfde3202742f00" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::rho_</definition>
        <argsstring></argsstring>
        <name>rho_</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::rho_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" line="82" column="18" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1ae897d3cdc1442e47afe5f4cd61dd429e" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::kappa_</definition>
        <argsstring></argsstring>
        <name>kappa_</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::kappa_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" line="82" column="23" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1ab1deb8bc48938a6f529ee8050db5762e" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::theta_</definition>
        <argsstring></argsstring>
        <name>theta_</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::theta_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" line="82" column="30" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1a7617ec083a195efec09da726fa296bbc" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::sigma_</definition>
        <argsstring></argsstring>
        <name>sigma_</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::sigma_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" line="82" column="37" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1a490466e1bdf287ef0a26e9a1e0da7613" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
        <definition>Handle&lt;YieldTermStructure&gt; QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::dividendYield_</definition>
        <argsstring></argsstring>
        <name>dividendYield_</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::dividendYield_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" line="83" column="16" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1a1477987dd8f9854a21a0f5e261e6f6c9" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
        <definition>Handle&lt;YieldTermStructure&gt; QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::riskFreeRate_</definition>
        <argsstring></argsstring>
        <name>riskFreeRate_</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::riskFreeRate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" line="84" column="16" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1a17ef0e8a7dc50dd137bb6f93f198733e" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
        <definition>Handle&lt;Quote&gt; QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::s0_</definition>
        <argsstring></argsstring>
        <name>s0_</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::s0_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" line="85" column="16" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1aab1b39ee01296168fbee75ec9e1e5771" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_heston_process" kindref="compound">HestonProcess</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;HestonProcess&gt; QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::process_</definition>
        <argsstring></argsstring>
        <name>process_</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::process_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" line="87" column="25" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1a9f72be807be34142647b32b11f938f3c" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::a1_</definition>
        <argsstring></argsstring>
        <name>a1_</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::a1_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" line="90" column="14" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1a952e175309228b2a02804551092a2afd" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::a2_</definition>
        <argsstring></argsstring>
        <name>a2_</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::a2_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" line="90" column="18" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1a54d5e8f8139df398f10eaeab9f89e4ee" prot="private" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::a3_</definition>
        <argsstring></argsstring>
        <name>a3_</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::a3_</qualifiedname>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" line="91" column="22" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1ad837f0134279d313bedd82caa248537a" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::a4_</definition>
        <argsstring></argsstring>
        <name>a4_</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::a4_</qualifiedname>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" line="91" column="27" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1a2c513b040a2ec0dbea31f547391bd353" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::a5_</definition>
        <argsstring></argsstring>
        <name>a5_</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::a5_</qualifiedname>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" line="91" column="32" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1a206b145eeaefb45342885114228c0da0" prot="private" static="no" mutable="yes">
        <type>std::map&lt; int, std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &gt;</type>
        <definition>std::map&lt;int, std::complex&lt;Real&gt; &gt; QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::fLookupTable_</definition>
        <argsstring></argsstring>
        <name>fLookupTable_</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::fLookupTable_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" line="94" column="26" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1addb8949e08d4e736cc07960e5b7afa6f" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::summationCutoff_</definition>
        <argsstring></argsstring>
        <name>summationCutoff_</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::summationCutoff_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" line="97" column="14" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1a8a08dd1cfdf25843aa806bc91bf62603" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::xiRightLimit_</definition>
        <argsstring></argsstring>
        <name>xiRightLimit_</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::xiRightLimit_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" line="98" column="14" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1a2798f19dd0737ca5e0d896532230aa2a" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_gauss_legendre_integration" kindref="compound">GaussLegendreIntegration</ref></type>
        <definition>GaussLegendreIntegration QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::integrator_</definition>
        <argsstring></argsstring>
        <name>integrator_</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::integrator_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" line="101" column="34" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1a157c844c4ac792b7593656eed6468b87" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</definition>
        <argsstring>(ext::shared_ptr&lt; HestonProcess &gt; process, Size summationCutoff=50, Real xiRightLimit=100.0)</argsstring>
        <name>AnalyticContinuousGeometricAveragePriceAsianHestonEngine</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_heston_process" kindref="compound">HestonProcess</ref> &gt;</type>
          <declname>process</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>summationCutoff</declname>
          <defval>50</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>xiRightLimit</declname>
          <defval>100.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" line="68" column="18" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.cpp" bodystart="76" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1ab75048e4235b799d2413df818ab2a7cd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::calculate</definition>
        <argsstring>() const override</argsstring>
        <name>calculate</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::calculate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_pricing_engine_1ad2be11cff80d9792f0cc8231711fcb06">calculate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" line="72" column="14" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.cpp" bodystart="208" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1a0b24a3c251b87f15e8dc28179caabeff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::complex&lt; Real &gt; QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::Phi</definition>
        <argsstring>(const std::complex&lt; Real &gt; &amp;s, const std::complex&lt; Real &gt; &amp;w, Real T, Real t=0.0, Size cutoff=50) const</argsstring>
        <name>Phi</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::Phi</qualifiedname>
        <param>
          <type>const std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>T</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>t</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>cutoff</declname>
          <defval>50</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" line="76" column="22" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.cpp" bodystart="184" bodyend="206"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1a3945e5cc415246e4de3742f486a5ed10" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::complex&lt; Real &gt; QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::z1_f</definition>
        <argsstring>(const std::complex&lt; Real &gt; &amp;s, const std::complex&lt; Real &gt; &amp;w, Real T) const</argsstring>
        <name>z1_f</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::z1_f</qualifiedname>
        <param>
          <type>const std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>T</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" line="108" column="22" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.cpp" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1aa8df0da671f7c69311666ee4dd1b089e" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::complex&lt; Real &gt; QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::z2_f</definition>
        <argsstring>(const std::complex&lt; Real &gt; &amp;s, const std::complex&lt; Real &gt; &amp;w, Real T) const</argsstring>
        <name>z2_f</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::z2_f</qualifiedname>
        <param>
          <type>const std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>T</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" line="109" column="22" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.cpp" bodystart="103" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1aadd8769d03c96a9c22c5ce8ffc9c62fb" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::complex&lt; Real &gt; QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::z3_f</definition>
        <argsstring>(const std::complex&lt; Real &gt; &amp;s, const std::complex&lt; Real &gt; &amp;w, Real T) const</argsstring>
        <name>z3_f</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::z3_f</qualifiedname>
        <param>
          <type>const std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>T</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" line="110" column="22" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.cpp" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1af6f4ef274cc82c4bf8308456233ab1dc" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::complex&lt; Real &gt; QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::z4_f</definition>
        <argsstring>(const std::complex&lt; Real &gt; &amp;s, const std::complex&lt; Real &gt; &amp;w) const</argsstring>
        <name>z4_f</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::z4_f</qualifiedname>
        <param>
          <type>const std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" line="111" column="22" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.cpp" bodystart="113" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1adec41534ef2918e82591df701c96c4b1" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;, std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &gt;</type>
        <definition>std::pair&lt; std::complex&lt; Real &gt;, std::complex&lt; Real &gt; &gt; QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::F_F_tilde</definition>
        <argsstring>(const std::complex&lt; Real &gt; &amp;z1, const std::complex&lt; Real &gt; &amp;z2, const std::complex&lt; Real &gt; &amp;z3, const std::complex&lt; Real &gt; &amp;z4, Real tau, Size cutoff=50) const</argsstring>
        <name>F_F_tilde</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::F_F_tilde</qualifiedname>
        <param>
          <type>const std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>z1</declname>
        </param>
        <param>
          <type>const std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>z2</declname>
        </param>
        <param>
          <type>const std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>z3</declname>
        </param>
        <param>
          <type>const std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>z4</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>tau</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>cutoff</declname>
          <defval>50</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" line="114" column="19" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.cpp" bodystart="162" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1a1bc5b253778f69f965778726ffd46584" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::complex&lt; Real &gt; QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::f</definition>
        <argsstring>(const std::complex&lt; Real &gt; &amp;z1, const std::complex&lt; Real &gt; &amp;z2, const std::complex&lt; Real &gt; &amp;z3, const std::complex&lt; Real &gt; &amp;z4, int n, Real tau) const</argsstring>
        <name>f</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::f</qualifiedname>
        <param>
          <type>const std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>z1</declname>
        </param>
        <param>
          <type>const std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>z2</declname>
        </param>
        <param>
          <type>const std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>z3</declname>
        </param>
        <param>
          <type>const std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>z4</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>tau</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" line="123" column="22" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.cpp" bodystart="118" bodyend="159"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Pricing engine for European continuous geometric average price Asian. </para>
    </briefdescription>
    <detaileddescription>
<para>This class implements a continuous geometric average price Asian option with European exercise under the Heston stochastic vol model where spot and variance follow the processes</para>
<para><formula id="27">\[\begin{array}{rcl}
dS(t, S)  &amp;=&amp; (r-d) S dt +\sqrt{v} S dW_1 \\
dv(t, S)  &amp;=&amp; \kappa (\theta - v) dt + \sigma \sqrt{v} dW_2 \\
dW_1 dW_2 &amp;=&amp; \rho dt \\
\end{array}
\]</formula></para>
<para>References:</para>
<para>Implements the analytical solution for continuous geometric Asian options developed in &quot;Pricing of geometric Asian options under
Heston&apos;s stochastic volatility model&quot;, B. Kim &amp; I. S. Wee, Quantative Finance 14:10, 1795-1809 (2014)</para>
<para><xrefsect id="test_1_test000004"><xreftitle>Test</xreftitle><xrefdescription><para><itemizedlist>
<listitem><para>the correctness of the returned value is tested by reproducing results in Table 1 and Table 4 of the paper</para>
</listitem></itemizedlist>
</para>
</xrefdescription></xrefsect></para>
<para><xrefsect id="todo_1_todo000004"><xreftitle>Todo</xreftitle><xrefdescription><para>handle seasoned options </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</label>
        <link refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::ContinuousAveragingAsianOption::engine</label>
        <link refid="class_quant_lib_1_1_continuous_averaging_asian_option_1_1engine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::GenericEngine&lt; ContinuousAveragingAsianOption::arguments, ContinuousAveragingAsianOption::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_engine"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="4">
        <label>QuantLib::PricingEngine</label>
        <link refid="class_quant_lib_1_1_pricing_engine"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8">
        <label>OneAssetOption::arguments</label>
      </node>
      <node id="1">
        <label>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</label>
        <link refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::ContinuousAveragingAsianOption::arguments</label>
        <link refid="class_quant_lib_1_1_continuous_averaging_asian_option_1_1arguments"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::ContinuousAveragingAsianOption::engine</label>
        <link refid="class_quant_lib_1_1_continuous_averaging_asian_option_1_1engine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::GenericEngine&lt; ContinuousAveragingAsianOption::arguments, ContinuousAveragingAsianOption::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_engine"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>arguments_</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="4">
        <label>QuantLib::PricingEngine</label>
        <link refid="class_quant_lib_1_1_pricing_engine"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" line="65" column="5" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.hpp" bodystart="66" bodyend="129"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1a9f72be807be34142647b32b11f938f3c" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>a1_</name></member>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1a952e175309228b2a02804551092a2afd" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>a2_</name></member>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1a54d5e8f8139df398f10eaeab9f89e4ee" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>a3_</name></member>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1ad837f0134279d313bedd82caa248537a" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>a4_</name></member>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1a2c513b040a2ec0dbea31f547391bd353" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>a5_</name></member>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1a157c844c4ac792b7593656eed6468b87" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>AnalyticContinuousGeometricAveragePriceAsianHestonEngine</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1ad2371cdbafa1989afb0e4733b1212c0d" prot="protected" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>arguments_</name></member>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1ab75048e4235b799d2413df818ab2a7cd" prot="public" virt="virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1a490466e1bdf287ef0a26e9a1e0da7613" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>dividendYield_</name></member>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1a1bc5b253778f69f965778726ffd46584" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>f</name></member>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1adec41534ef2918e82591df701c96c4b1" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>F_F_tilde</name></member>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1a206b145eeaefb45342885114228c0da0" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>fLookupTable_</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1ad9c6e8dc65ca072d5e6e17640d74db3e" prot="public" virt="virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>getArguments</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1aea8272ef6e5e0ea1cffadfed0454fa88" prot="public" virt="virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>getResults</name></member>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1a2798f19dd0737ca5e0d896532230aa2a" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>integrator_</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1ae897d3cdc1442e47afe5f4cd61dd429e" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>kappa_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1a0b24a3c251b87f15e8dc28179caabeff" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>Phi</name></member>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1aab1b39ee01296168fbee75ec9e1e5771" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>process_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1a81c5390ba1e713e57ca87d5f841d37f2" prot="public" virt="virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>reset</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1a41281f2ea4990dbce90be1f9f2e231f6" prot="protected" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>results_</name></member>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1a179e335d782cf500c4bfde3202742f00" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>rho_</name></member>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1a1477987dd8f9854a21a0f5e261e6f6c9" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>riskFreeRate_</name></member>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1a17ef0e8a7dc50dd137bb6f93f198733e" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>s0_</name></member>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1a7617ec083a195efec09da726fa296bbc" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>sigma_</name></member>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1addb8949e08d4e736cc07960e5b7afa6f" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>summationCutoff_</name></member>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1ab1deb8bc48938a6f529ee8050db5762e" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>theta_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1aaf5ef54d9e1abf8b1b50b48804edf3dc" prot="public" virt="virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1a76c9a4927f78f1493835b6dabe6fa5cb" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>v0_</name></member>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1a8a08dd1cfdf25843aa806bc91bf62603" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>xiRightLimit_</name></member>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1a3945e5cc415246e4de3742f486a5ed10" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>z1_f</name></member>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1aa8df0da671f7c69311666ee4dd1b089e" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>z2_f</name></member>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1aadd8769d03c96a9c22c5ce8ffc9c62fb" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>z3_f</name></member>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1af6f4ef274cc82c4bf8308456233ab1dc" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>z4_f</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_pricing_engine_1a66b279a54578cd7e60d402e5147eb526" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine</scope><name>~PricingEngine</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_lattice" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::Lattice</compoundname>
    <derivedcompoundref refid="class_quant_lib_1_1_tree_lattice" prot="public" virt="non-virtual">QuantLib::TreeLattice&lt; BlackScholesLattice&lt; T &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_tree_lattice" prot="public" virt="non-virtual">QuantLib::TreeLattice&lt; OneFactorModel::ShortRateTree &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_tree_lattice" prot="public" virt="non-virtual">QuantLib::TreeLattice&lt; TwoFactorModel::ShortRateTree &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_tree_lattice" prot="public" virt="non-virtual">QuantLib::TreeLattice&lt; Impl &gt;</derivedcompoundref>
    <includes refid="numericalmethod_8hpp" local="no">numericalmethod.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Numerical method interface</header>
      <description><para>These methods are to be used by discretized assets and must be overridden by developers implementing numerical methods. Users are advised to use the corresponding methods of <ref refid="class_quant_lib_1_1_discretized_asset" kindref="compound">DiscretizedAsset</ref> instead. </para>
</description>
      <memberdef kind="variable" id="class_quant_lib_1_1_lattice_1ad4983a465b76964a8f794ba1c6a6843d" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_time_grid" kindref="compound">TimeGrid</ref></type>
        <definition>TimeGrid QuantLib::Lattice::t_</definition>
        <argsstring></argsstring>
        <name>t_</name>
        <qualifiedname>QuantLib::Lattice::t_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/numericalmethod.hpp" line="95" column="18" bodyfile="ql/numericalmethod.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_lattice_1a49d43dd157ad0cb33c529a00bac27f74" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void QuantLib::Lattice::initialize</definition>
        <argsstring>(DiscretizedAsset &amp;, Time time) const =0</argsstring>
        <name>initialize</name>
        <qualifiedname>QuantLib::Lattice::initialize</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_tree_lattice_1a33d74ea97e97eb59a0e54e79a51c9a86">initialize</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_tree_lattice_1a33d74ea97e97eb59a0e54e79a51c9a86">initialize</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_tree_lattice_1a33d74ea97e97eb59a0e54e79a51c9a86">initialize</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_tree_lattice_1a33d74ea97e97eb59a0e54e79a51c9a86">initialize</reimplementedby>
        <param>
          <type><ref refid="class_quant_lib_1_1_discretized_asset" kindref="compound">DiscretizedAsset</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>initialize an asset at the given time. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/numericalmethod.hpp" line="58" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_lattice_1a82f57b8f21105fa56a4eebbfddf7c972" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void QuantLib::Lattice::rollback</definition>
        <argsstring>(DiscretizedAsset &amp;, Time to) const =0</argsstring>
        <name>rollback</name>
        <qualifiedname>QuantLib::Lattice::rollback</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_tree_lattice_1ad4df1c2dd46c759fa2553fdb3d95ab0b">rollback</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_tree_lattice_1ad4df1c2dd46c759fa2553fdb3d95ab0b">rollback</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_tree_lattice_1ad4df1c2dd46c759fa2553fdb3d95ab0b">rollback</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_tree_lattice_1ad4df1c2dd46c759fa2553fdb3d95ab0b">rollback</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_tsiveriotis_fernandes_lattice_1aa011e7dbe8d9970c1068fa22beef736a">rollback</reimplementedby>
        <param>
          <type><ref refid="class_quant_lib_1_1_discretized_asset" kindref="compound">DiscretizedAsset</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Roll back an asset until the given time, performing any needed adjustment. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/numericalmethod.hpp" line="64" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_lattice_1a96be0dfbf31527220bd7aac2217b4c51" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void QuantLib::Lattice::partialRollback</definition>
        <argsstring>(DiscretizedAsset &amp;, Time to) const =0</argsstring>
        <name>partialRollback</name>
        <qualifiedname>QuantLib::Lattice::partialRollback</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_tree_lattice_1a09aedab2e04fc74f4924b7a7eddb37d4">partialRollback</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_tree_lattice_1a09aedab2e04fc74f4924b7a7eddb37d4">partialRollback</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_tree_lattice_1a09aedab2e04fc74f4924b7a7eddb37d4">partialRollback</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_tree_lattice_1a09aedab2e04fc74f4924b7a7eddb37d4">partialRollback</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_tsiveriotis_fernandes_lattice_1acb89e35250cfa99d1189a59929b21304">partialRollback</reimplementedby>
        <param>
          <type><ref refid="class_quant_lib_1_1_discretized_asset" kindref="compound">DiscretizedAsset</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Roll back an asset until the given time, but do not perform the final adjustment.</para>
<para><simplesect kind="warning"><para>In version 0.3.7 and earlier, this method was called rollAlmostBack method and performed pre-adjustment. This is no longer true; when migrating your code, you&apos;ll have to replace calls such as: <programlisting><codeline><highlight class="normal">method-&gt;rollAlmostBack(asset,t);</highlight></codeline>
</programlisting> with the two statements: <programlisting><codeline><highlight class="normal">method-&gt;partialRollback(asset,t);</highlight></codeline>
<codeline><highlight class="normal">asset-&gt;preAdjustValues();</highlight></codeline>
</programlisting> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/numericalmethod.hpp" line="84" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_lattice_1aa61cde9479e924b633714eb5afa9dc37" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::Lattice::presentValue</definition>
        <argsstring>(DiscretizedAsset &amp;) const =0</argsstring>
        <name>presentValue</name>
        <qualifiedname>QuantLib::Lattice::presentValue</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_tree_lattice_1a64f73976b6ca374d7db218bb17325265">presentValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_tree_lattice_1a64f73976b6ca374d7db218bb17325265">presentValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_tree_lattice_1a64f73976b6ca374d7db218bb17325265">presentValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_tree_lattice_1a64f73976b6ca374d7db218bb17325265">presentValue</reimplementedby>
        <param>
          <type><ref refid="class_quant_lib_1_1_discretized_asset" kindref="compound">DiscretizedAsset</ref> &amp;</type>
        </param>
        <briefdescription>
<para>computes the present value of an asset. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/numericalmethod.hpp" line="88" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_lattice_1ae3039e18f2760ade4924ca994ab799dd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>virtual Array QuantLib::Lattice::grid</definition>
        <argsstring>(Time) const =0</argsstring>
        <name>grid</name>
        <qualifiedname>QuantLib::Lattice::grid</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_tree_lattice1_d_1ac9c82080e75c1c0049ef1cf53e050f0e">grid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_tree_lattice1_d_1ac9c82080e75c1c0049ef1cf53e050f0e">grid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_tree_lattice1_d_1ac9c82080e75c1c0049ef1cf53e050f0e">grid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_tree_lattice2_d_1aeb3c00e5e75b610ac28232a9e0f36cb3">grid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_tree_lattice2_d_1aeb3c00e5e75b610ac28232a9e0f36cb3">grid</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/numericalmethod.hpp" line="93" column="23"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Inspectors</header>
      <memberdef kind="function" id="class_quant_lib_1_1_lattice_1a4c14b1590e92d0b198934bbce3c7666e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_time_grid" kindref="compound">TimeGrid</ref> &amp;</type>
        <definition>const TimeGrid &amp; QuantLib::Lattice::timeGrid</definition>
        <argsstring>() const</argsstring>
        <name>timeGrid</name>
        <qualifiedname>QuantLib::Lattice::timeGrid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/numericalmethod.hpp" line="44" column="24" bodyfile="ql/numericalmethod.hpp" bodystart="44" bodyend="44"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_lattice_1aff24a1110ca7dc6869aa7bdde456101f" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Lattice::Lattice</definition>
        <argsstring>(TimeGrid timeGrid)</argsstring>
        <name>Lattice</name>
        <qualifiedname>QuantLib::Lattice::Lattice</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_time_grid" kindref="compound">TimeGrid</ref></type>
          <declname>timeGrid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/numericalmethod.hpp" line="39" column="18" bodyfile="ql/numericalmethod.hpp" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_lattice_1adad7ac14bff456a9cf05967e6df004d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual QuantLib::Lattice::~Lattice</definition>
        <argsstring>()=default</argsstring>
        <name>~Lattice</name>
        <qualifiedname>QuantLib::Lattice::~Lattice</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/numericalmethod.hpp" line="40" column="17"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Lattice (tree, finite-differences) base class </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>QuantLib::BlackScholesLattice&lt; T &gt;</label>
        <link refid="class_quant_lib_1_1_black_scholes_lattice"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::Lattice</label>
        <link refid="class_quant_lib_1_1_lattice"/>
      </node>
      <node id="8">
        <label>QuantLib::OneFactorModel::ShortRateTree</label>
        <link refid="class_quant_lib_1_1_one_factor_model_1_1_short_rate_tree"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>QuantLib::TreeLattice&lt; Impl &gt;</label>
        <link refid="class_quant_lib_1_1_tree_lattice"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::TreeLattice1D&lt; BlackScholesLattice&lt; T &gt; &gt;</label>
        <link refid="class_quant_lib_1_1_tree_lattice1_d"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>QuantLib::TreeLattice1D&lt; Impl &gt;</label>
        <link refid="class_quant_lib_1_1_tree_lattice1_d"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::TreeLattice1D&lt; OneFactorModel::ShortRateTree &gt;</label>
        <link refid="class_quant_lib_1_1_tree_lattice1_d"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>QuantLib::TreeLattice2D&lt; Impl, T &gt;</label>
        <link refid="class_quant_lib_1_1_tree_lattice2_d"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QuantLib::TreeLattice2D&lt; TwoFactorModel::ShortRateTree, TrinomialTree &gt;</label>
        <link refid="class_quant_lib_1_1_tree_lattice2_d"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::TreeLattice&lt; BlackScholesLattice&lt; T &gt; &gt;</label>
        <link refid="class_quant_lib_1_1_tree_lattice"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::TreeLattice&lt; OneFactorModel::ShortRateTree &gt;</label>
        <link refid="class_quant_lib_1_1_tree_lattice"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QuantLib::TreeLattice&lt; TwoFactorModel::ShortRateTree &gt;</label>
        <link refid="class_quant_lib_1_1_tree_lattice"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::TsiveriotisFernandesLattice&lt; T &gt;</label>
        <link refid="class_quant_lib_1_1_tsiveriotis_fernandes_lattice"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>QuantLib::TwoFactorModel::ShortRateTree</label>
        <link refid="class_quant_lib_1_1_two_factor_model_1_1_short_rate_tree"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::Lattice</label>
        <link refid="class_quant_lib_1_1_lattice"/>
        <childnode refid="2" relation="usage">
          <edgelabel>t_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::TimeGrid</label>
        <link refid="class_quant_lib_1_1_time_grid"/>
      </node>
    </collaborationgraph>
    <location file="ql/numericalmethod.hpp" line="37" column="5" bodyfile="ql/numericalmethod.hpp" bodystart="37" bodyend="96"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_lattice_1ae3039e18f2760ade4924ca994ab799dd" prot="public" virt="pure-virtual"><scope>QuantLib::Lattice</scope><name>grid</name></member>
      <member refid="class_quant_lib_1_1_lattice_1a49d43dd157ad0cb33c529a00bac27f74" prot="public" virt="pure-virtual"><scope>QuantLib::Lattice</scope><name>initialize</name></member>
      <member refid="class_quant_lib_1_1_lattice_1aff24a1110ca7dc6869aa7bdde456101f" prot="public" virt="non-virtual"><scope>QuantLib::Lattice</scope><name>Lattice</name></member>
      <member refid="class_quant_lib_1_1_lattice_1a96be0dfbf31527220bd7aac2217b4c51" prot="public" virt="pure-virtual"><scope>QuantLib::Lattice</scope><name>partialRollback</name></member>
      <member refid="class_quant_lib_1_1_lattice_1aa61cde9479e924b633714eb5afa9dc37" prot="public" virt="pure-virtual"><scope>QuantLib::Lattice</scope><name>presentValue</name></member>
      <member refid="class_quant_lib_1_1_lattice_1a82f57b8f21105fa56a4eebbfddf7c972" prot="public" virt="pure-virtual"><scope>QuantLib::Lattice</scope><name>rollback</name></member>
      <member refid="class_quant_lib_1_1_lattice_1ad4983a465b76964a8f794ba1c6a6843d" prot="protected" virt="non-virtual"><scope>QuantLib::Lattice</scope><name>t_</name></member>
      <member refid="class_quant_lib_1_1_lattice_1a4c14b1590e92d0b198934bbce3c7666e" prot="public" virt="non-virtual"><scope>QuantLib::Lattice</scope><name>timeGrid</name></member>
      <member refid="class_quant_lib_1_1_lattice_1adad7ac14bff456a9cf05967e6df004d1" prot="public" virt="virtual"><scope>QuantLib::Lattice</scope><name>~Lattice</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_inflation_index" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::InflationIndex</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_index" prot="public" virt="non-virtual">QuantLib::Index</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_yo_y_inflation_index" prot="public" virt="non-virtual">QuantLib::YoYInflationIndex</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_zero_inflation_index" prot="public" virt="non-virtual">QuantLib::ZeroInflationIndex</derivedcompoundref>
    <includes refid="inflationindex_8hpp" local="no">inflationindex.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Inspectors</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_inflation_index_1abb5bebc90f4cf2e75fd15ac402e503b6" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::InflationIndex::referenceDate_</definition>
        <argsstring></argsstring>
        <name>referenceDate_</name>
        <qualifiedname>QuantLib::InflationIndex::referenceDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="139" column="14" bodyfile="ql/indexes/inflationindex.hpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_inflation_index_1a60ed625ab3df6d23b3eff86776da9470" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string QuantLib::InflationIndex::familyName_</definition>
        <argsstring></argsstring>
        <name>familyName_</name>
        <qualifiedname>QuantLib::InflationIndex::familyName_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="140" column="21" bodyfile="ql/indexes/inflationindex.hpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_inflation_index_1a40b911726fe5587919986adce24c11e8" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_region" kindref="compound">Region</ref></type>
        <definition>Region QuantLib::InflationIndex::region_</definition>
        <argsstring></argsstring>
        <name>region_</name>
        <qualifiedname>QuantLib::InflationIndex::region_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="141" column="16" bodyfile="ql/indexes/inflationindex.hpp" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_inflation_index_1a631849758c2cacca98aa124499c2c6d7" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::InflationIndex::revised_</definition>
        <argsstring></argsstring>
        <name>revised_</name>
        <qualifiedname>QuantLib::InflationIndex::revised_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="142" column="14" bodyfile="ql/indexes/inflationindex.hpp" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_inflation_index_1a09809507840cfcbccfdcdf5eee0f084a" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
        <definition>Frequency QuantLib::InflationIndex::frequency_</definition>
        <argsstring></argsstring>
        <name>frequency_</name>
        <qualifiedname>QuantLib::InflationIndex::frequency_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="143" column="19" bodyfile="ql/indexes/inflationindex.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_inflation_index_1a4d3981071a8d47462964b278cca87423" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref></type>
        <definition>Period QuantLib::InflationIndex::availabilityLag_</definition>
        <argsstring></argsstring>
        <name>availabilityLag_</name>
        <qualifiedname>QuantLib::InflationIndex::availabilityLag_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="144" column="16" bodyfile="ql/indexes/inflationindex.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_inflation_index_1adfc9057afc5cf1f21b202874d8a57a97" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_currency" kindref="compound">Currency</ref></type>
        <definition>Currency QuantLib::InflationIndex::currency_</definition>
        <argsstring></argsstring>
        <name>currency_</name>
        <qualifiedname>QuantLib::InflationIndex::currency_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="145" column="18" bodyfile="ql/indexes/inflationindex.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_inflation_index_1a7de6fa7124f32d2f2e804266df3d5291" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string QuantLib::InflationIndex::name_</definition>
        <argsstring></argsstring>
        <name>name_</name>
        <qualifiedname>QuantLib::InflationIndex::name_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="148" column="21" bodyfile="ql/indexes/inflationindex.hpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_index_1a32a23527e3464521d859e7797c0a606a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string QuantLib::InflationIndex::familyName</definition>
        <argsstring>() const</argsstring>
        <name>familyName</name>
        <qualifiedname>QuantLib::InflationIndex::familyName</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="123" column="21" bodyfile="ql/indexes/inflationindex.hpp" bodystart="299" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_index_1abe9256a3ff78e865be8d2dc384bd31af" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_region" kindref="compound">Region</ref></type>
        <definition>Region QuantLib::InflationIndex::region</definition>
        <argsstring>() const</argsstring>
        <name>region</name>
        <qualifiedname>QuantLib::InflationIndex::region</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="124" column="16" bodyfile="ql/indexes/inflationindex.hpp" bodystart="303" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_index_1a348c72285b3a757cc1386b8bb0f515b6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::InflationIndex::revised</definition>
        <argsstring>() const</argsstring>
        <name>revised</name>
        <qualifiedname>QuantLib::InflationIndex::revised</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="125" column="14" bodyfile="ql/indexes/inflationindex.hpp" bodystart="307" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_index_1a8669a23706c52bb326120a6a11083d4c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
        <definition>Frequency QuantLib::InflationIndex::frequency</definition>
        <argsstring>() const</argsstring>
        <name>frequency</name>
        <qualifiedname>QuantLib::InflationIndex::frequency</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="126" column="19" bodyfile="ql/indexes/inflationindex.hpp" bodystart="311" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_index_1a1404972bc87b13c7a47f908463480662" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref></type>
        <definition>Period QuantLib::InflationIndex::availabilityLag</definition>
        <argsstring>() const</argsstring>
        <name>availabilityLag</name>
        <qualifiedname>QuantLib::InflationIndex::availabilityLag</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The availability lag describes when the index might be available; for instance, the inflation value for January may only be available in April. This doesn&apos;t mean that that inflation value is considered as the April fixing; it remains the January fixing, independently of the lag in availability. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="134" column="16" bodyfile="ql/indexes/inflationindex.hpp" bodystart="315" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_index_1a1bb3a5c5be9e129af132ad0387b941b9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_currency" kindref="compound">Currency</ref></type>
        <definition>Currency QuantLib::InflationIndex::currency</definition>
        <argsstring>() const</argsstring>
        <name>currency</name>
        <qualifiedname>QuantLib::InflationIndex::currency</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="135" column="18" bodyfile="ql/indexes/inflationindex.hpp" bodystart="319" bodyend="321"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Index interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_index_1a85bd99f2d2371874d1186ff5a9826dfd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string QuantLib::InflationIndex::name</definition>
        <argsstring>() const override</argsstring>
        <name>name</name>
        <qualifiedname>QuantLib::InflationIndex::name</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_index_1a1d71da32dc59a99b5e6bc9cbafa357fe">name</reimplements>
        <briefdescription>
<para>Returns the name of the index. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This method is used for output and comparison between indexes. It is <bold>not</bold> meant to be used for writing switch-on-type code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="95" column="21" bodyfile="ql/indexes/inflationindex.hpp" bodystart="295" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_index_1a4e8ca760eca7688c36e3269f7f948ea7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref></type>
        <definition>Calendar QuantLib::InflationIndex::fixingCalendar</definition>
        <argsstring>() const override</argsstring>
        <name>fixingCalendar</name>
        <qualifiedname>QuantLib::InflationIndex::fixingCalendar</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_index_1a698fe28c856980f06db27a49ebd0fb05">fixingCalendar</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inflation indices are not associated to a particular day, but to months or quarters. Therefore, they do not have fixing calendars. Since we&apos;re forced by the base <computeroutput><ref refid="class_quant_lib_1_1_index" kindref="compound">Index</ref></computeroutput> interface to add one, this method returns a <ref refid="class_quant_lib_1_1_null_calendar" kindref="compound">NullCalendar</ref> instance. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="103" column="18" bodyfile="ql/indexes/inflationindex.cpp" bodystart="132" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_index_1a0d7763430eafc11354c0455865953a79" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool QuantLib::InflationIndex::isValidFixingDate</definition>
        <argsstring>(const Date &amp;) const override</argsstring>
        <name>isValidFixingDate</name>
        <qualifiedname>QuantLib::InflationIndex::isValidFixingDate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_index_1a9c26de5ae6c178fff2d898660e777b2a">isValidFixingDate</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>fixingDate</declname>
        </param>
        <briefdescription>
<para>returns TRUE if the fixing date is a valid one </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="104" column="14" bodyfile="ql/indexes/inflationindex.hpp" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_index_1adf5505d0cf89ba6d8fec944d41878ea5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::InflationIndex::fixing</definition>
        <argsstring>(const Date &amp;fixingDate, bool forecastTodaysFixing=false) const override=0</argsstring>
        <name>fixing</name>
        <qualifiedname>QuantLib::InflationIndex::fixing</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_index_1afe813b1909717dc0bcd1fa54105ee9d4">fixing</reimplements>
        <reimplementedby refid="class_quant_lib_1_1_yo_y_inflation_index_1a768a58fd577da972ba08163d08b143d8">fixing</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_zero_inflation_index_1a3f8536c0f81d7f7a1dac9df3e9335c52">fixing</reimplementedby>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>fixingDate</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forecastTodaysFixing</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Forecasting index values requires an inflation term structure, with a base date that is earlier than its asof date. This must be so because indices are available only with a lag. Usually, it makes sense for the base date to be the first day of the month of the last published fixing. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="113" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_index_1a09b3a0586a9f9190d18a178d91ea5dcb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::InflationIndex::pastFixing</definition>
        <argsstring>(const Date &amp;fixingDate) const override=0</argsstring>
        <name>pastFixing</name>
        <qualifiedname>QuantLib::InflationIndex::pastFixing</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_index_1a56f55745a69269f98c5ccc9b7e94d90e">pastFixing</reimplements>
        <reimplementedby refid="class_quant_lib_1_1_yo_y_inflation_index_1a3f0e7411aa1d8ad5d0daf9d11306ac7a">pastFixing</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_zero_inflation_index_1a3057f95c8765f5af0cde6af8a7ffa737">pastFixing</reimplementedby>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>fixingDate</declname>
        </param>
        <briefdescription>
<para>returns a past fixing at the given date </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="116" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_index_1abee8154093d859b0368607fcbbdb7e5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::InflationIndex::addFixing</definition>
        <argsstring>(const Date &amp;fixingDate, Rate fixing, bool forceOverwrite=false) override</argsstring>
        <name>addFixing</name>
        <qualifiedname>QuantLib::InflationIndex::addFixing</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_index_1a99d2677cae4cd185b34a170ee36eca9d">addFixing</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>fixingDate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>fixing</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forceOverwrite</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="118" column="14" bodyfile="ql/indexes/inflationindex.cpp" bodystart="137" bodyend="152"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_index_1ae2e21a8cb72f6138d11e9fba41ad3219" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::InflationIndex::InflationIndex</definition>
        <argsstring>(std::string familyName, Region region, bool revised, Frequency frequency, const Period &amp;availabilitiyLag, Currency currency)</argsstring>
        <name>InflationIndex</name>
        <qualifiedname>QuantLib::InflationIndex::InflationIndex</qualifiedname>
        <param>
          <type>std::string</type>
          <declname>familyName</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_region" kindref="compound">Region</ref></type>
          <declname>region</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>revised</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
          <declname>frequency</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>availabilitiyLag</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_currency" kindref="compound">Currency</ref></type>
          <declname>currency</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="86" column="9" bodyfile="ql/indexes/inflationindex.cpp" bodystart="119" bodyend="130"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Base class for inflation-rate indexes,. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="15">
        <label>QuantLib::AUCPI</label>
        <link refid="class_quant_lib_1_1_a_u_c_p_i"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>QuantLib::EUHICP</label>
        <link refid="class_quant_lib_1_1_e_u_h_i_c_p"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>QuantLib::EUHICPXT</label>
        <link refid="class_quant_lib_1_1_e_u_h_i_c_p_x_t"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>QuantLib::FRHICP</label>
        <link refid="class_quant_lib_1_1_f_r_h_i_c_p"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>QuantLib::GenericCPI</label>
        <link refid="class_quant_lib_1_1_generic_c_p_i"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Index</label>
        <link refid="class_quant_lib_1_1_index"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::InflationIndex</label>
        <link refid="class_quant_lib_1_1_inflation_index"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="20">
        <label>QuantLib::UKHICP</label>
        <link refid="class_quant_lib_1_1_u_k_h_i_c_p"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>QuantLib::UKRPI</label>
        <link refid="class_quant_lib_1_1_u_k_r_p_i"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>QuantLib::USCPI</label>
        <link refid="class_quant_lib_1_1_u_s_c_p_i"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::YYAUCPI</label>
        <link refid="class_quant_lib_1_1_y_y_a_u_c_p_i"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::YYEUHICP</label>
        <link refid="class_quant_lib_1_1_y_y_e_u_h_i_c_p"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::YYEUHICPXT</label>
        <link refid="class_quant_lib_1_1_y_y_e_u_h_i_c_p_x_t"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QuantLib::YYFRHICP</label>
        <link refid="class_quant_lib_1_1_y_y_f_r_h_i_c_p"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QuantLib::YYGenericCPI</label>
        <link refid="class_quant_lib_1_1_y_y_generic_c_p_i"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>QuantLib::YYUKRPI</label>
        <link refid="class_quant_lib_1_1_y_y_u_k_r_p_i"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>QuantLib::YYUSCPI</label>
        <link refid="class_quant_lib_1_1_y_y_u_s_c_p_i"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>QuantLib::YYZACPI</label>
        <link refid="class_quant_lib_1_1_y_y_z_a_c_p_i"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::YoYInflationIndex</label>
        <link refid="class_quant_lib_1_1_yo_y_inflation_index"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>QuantLib::ZACPI</label>
        <link refid="class_quant_lib_1_1_z_a_c_p_i"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>QuantLib::ZeroInflationIndex</label>
        <link refid="class_quant_lib_1_1_zero_inflation_index"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8">
        <label>QuantLib::Currency</label>
        <link refid="class_quant_lib_1_1_currency"/>
      </node>
      <node id="5">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="2">
        <label>QuantLib::Index</label>
        <link refid="class_quant_lib_1_1_index"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::InflationIndex</label>
        <link refid="class_quant_lib_1_1_inflation_index"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>referenceDate_</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>region_</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>availabilityLag_</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>currency_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="7">
        <label>QuantLib::Period</label>
        <link refid="class_quant_lib_1_1_period"/>
      </node>
      <node id="6">
        <label>QuantLib::Region</label>
        <link refid="class_quant_lib_1_1_region"/>
      </node>
    </collaborationgraph>
    <location file="ql/indexes/inflationindex.hpp" line="84" column="5" bodyfile="ql/indexes/inflationindex.hpp" bodystart="84" bodyend="149"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_inflation_index_1abee8154093d859b0368607fcbbdb7e5e" prot="public" virt="virtual"><scope>QuantLib::InflationIndex</scope><name>addFixing</name></member>
      <member refid="class_quant_lib_1_1_index_1a91fce2b65887f04e2cbcae5d9ffcc15e" prot="public" virt="non-virtual"><scope>QuantLib::InflationIndex</scope><name>addFixings</name></member>
      <member refid="class_quant_lib_1_1_index_1a46b3d6241bd06bd76a49123c5c0011cf" prot="public" virt="non-virtual"><scope>QuantLib::InflationIndex</scope><name>addFixings</name></member>
      <member refid="class_quant_lib_1_1_index_1aedde403ec6db8211816d7d1d0a883155" prot="public" virt="virtual"><scope>QuantLib::InflationIndex</scope><name>allowsNativeFixings</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1a1404972bc87b13c7a47f908463480662" prot="public" virt="non-virtual"><scope>QuantLib::InflationIndex</scope><name>availabilityLag</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1a4d3981071a8d47462964b278cca87423" prot="protected" virt="non-virtual"><scope>QuantLib::InflationIndex</scope><name>availabilityLag_</name></member>
      <member refid="class_quant_lib_1_1_index_1a6ebd31a5c6890f2dc0b25fc7824c809c" prot="public" virt="non-virtual"><scope>QuantLib::InflationIndex</scope><name>clearFixings</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1a1bb3a5c5be9e129af132ad0387b941b9" prot="public" virt="non-virtual"><scope>QuantLib::InflationIndex</scope><name>currency</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1adfc9057afc5cf1f21b202874d8a57a97" prot="protected" virt="non-virtual"><scope>QuantLib::InflationIndex</scope><name>currency_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::InflationIndex</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1a32a23527e3464521d859e7797c0a606a" prot="public" virt="non-virtual"><scope>QuantLib::InflationIndex</scope><name>familyName</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1a60ed625ab3df6d23b3eff86776da9470" prot="protected" virt="non-virtual"><scope>QuantLib::InflationIndex</scope><name>familyName_</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1adf5505d0cf89ba6d8fec944d41878ea5" prot="public" virt="pure-virtual"><scope>QuantLib::InflationIndex</scope><name>fixing</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1a4e8ca760eca7688c36e3269f7f948ea7" prot="public" virt="virtual"><scope>QuantLib::InflationIndex</scope><name>fixingCalendar</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1a8669a23706c52bb326120a6a11083d4c" prot="public" virt="non-virtual"><scope>QuantLib::InflationIndex</scope><name>frequency</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1a09809507840cfcbccfdcdf5eee0f084a" prot="protected" virt="non-virtual"><scope>QuantLib::InflationIndex</scope><name>frequency_</name></member>
      <member refid="class_quant_lib_1_1_index_1a3ca2ef1910e74b22dd55c39013642a5c" prot="public" virt="non-virtual"><scope>QuantLib::InflationIndex</scope><name>hasHistoricalFixing</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1ae2e21a8cb72f6138d11e9fba41ad3219" prot="public" virt="non-virtual"><scope>QuantLib::InflationIndex</scope><name>InflationIndex</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1a0d7763430eafc11354c0455865953a79" prot="public" virt="virtual"><scope>QuantLib::InflationIndex</scope><name>isValidFixingDate</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::InflationIndex</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1a85bd99f2d2371874d1186ff5a9826dfd" prot="public" virt="virtual"><scope>QuantLib::InflationIndex</scope><name>name</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1a7de6fa7124f32d2f2e804266df3d5291" prot="private" virt="non-virtual"><scope>QuantLib::InflationIndex</scope><name>name_</name></member>
      <member refid="class_quant_lib_1_1_index_1aa9172bf19d428e1d212ef2e331ad8785" prot="protected" virt="non-virtual"><scope>QuantLib::InflationIndex</scope><name>notifier</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::InflationIndex</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::InflationIndex</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::InflationIndex</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::InflationIndex</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::InflationIndex</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::InflationIndex</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::InflationIndex</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::InflationIndex</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::InflationIndex</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1a09b3a0586a9f9190d18a178d91ea5dcb" prot="public" virt="pure-virtual"><scope>QuantLib::InflationIndex</scope><name>pastFixing</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1abb5bebc90f4cf2e75fd15ac402e503b6" prot="protected" virt="non-virtual"><scope>QuantLib::InflationIndex</scope><name>referenceDate_</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1abe9256a3ff78e865be8d2dc384bd31af" prot="public" virt="non-virtual"><scope>QuantLib::InflationIndex</scope><name>region</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1a40b911726fe5587919986adce24c11e8" prot="protected" virt="non-virtual"><scope>QuantLib::InflationIndex</scope><name>region_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::InflationIndex</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::InflationIndex</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1a348c72285b3a757cc1386b8bb0f515b6" prot="public" virt="non-virtual"><scope>QuantLib::InflationIndex</scope><name>revised</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1a631849758c2cacca98aa124499c2c6d7" prot="protected" virt="non-virtual"><scope>QuantLib::InflationIndex</scope><name>revised_</name></member>
      <member refid="class_quant_lib_1_1_index_1a373faa497820b43992d18ead1a8b87a8" prot="public" virt="non-virtual"><scope>QuantLib::InflationIndex</scope><name>timeSeries</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::InflationIndex</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::InflationIndex</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_index_1a790ff8bc3caa48efbdb968f6fd23edf0" prot="public" virt="virtual"><scope>QuantLib::InflationIndex</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_index_1a5e8202e51d4c2053f61cb47d3f76b42f" prot="public" virt="non-virtual"><scope>QuantLib::InflationIndex</scope><name>~Index</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::InflationIndex</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::InflationIndex</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

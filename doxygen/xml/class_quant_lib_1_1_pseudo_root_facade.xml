<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_pseudo_root_facade" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::PseudoRootFacade</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_market_model" prot="public" virt="non-virtual">QuantLib::MarketModel</basecompoundref>
    <sectiondef kind="user-defined">
      <header>MarketModel interface</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_pseudo_root_facade_1a073405cac1e7a230f4d6d21c15556ce3" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::PseudoRootFacade::numberOfFactors_</definition>
        <argsstring></argsstring>
        <name>numberOfFactors_</name>
        <qualifiedname>QuantLib::PseudoRootFacade::numberOfFactors_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/pseudorootfacade.hpp" line="51" column="14" bodyfile="ql/models/marketmodels/models/pseudorootfacade.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_pseudo_root_facade_1ac96f44591f3d794db75d3d5945273876" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::PseudoRootFacade::numberOfRates_</definition>
        <argsstring></argsstring>
        <name>numberOfRates_</name>
        <qualifiedname>QuantLib::PseudoRootFacade::numberOfRates_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/pseudorootfacade.hpp" line="51" column="31" bodyfile="ql/models/marketmodels/models/pseudorootfacade.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_pseudo_root_facade_1ad9726b32fc8eb0de8a9dfd9c38e3bf98" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::PseudoRootFacade::numberOfSteps_</definition>
        <argsstring></argsstring>
        <name>numberOfSteps_</name>
        <qualifiedname>QuantLib::PseudoRootFacade::numberOfSteps_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/pseudorootfacade.hpp" line="51" column="46" bodyfile="ql/models/marketmodels/models/pseudorootfacade.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_pseudo_root_facade_1adc3b1db6dc0fe17faadbecd94290fde8" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>std::vector&lt;Rate&gt; QuantLib::PseudoRootFacade::initialRates_</definition>
        <argsstring></argsstring>
        <name>initialRates_</name>
        <qualifiedname>QuantLib::PseudoRootFacade::initialRates_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/pseudorootfacade.hpp" line="52" column="21" bodyfile="ql/models/marketmodels/models/pseudorootfacade.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_pseudo_root_facade_1a743b36d506e8b04aa93a2a59c25e3416" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1ad61d2e1a3f01154233de0d5fbb85177c" kindref="member">Spread</ref> &gt;</type>
        <definition>std::vector&lt;Spread&gt; QuantLib::PseudoRootFacade::displacements_</definition>
        <argsstring></argsstring>
        <name>displacements_</name>
        <qualifiedname>QuantLib::PseudoRootFacade::displacements_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/pseudorootfacade.hpp" line="53" column="21" bodyfile="ql/models/marketmodels/models/pseudorootfacade.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_pseudo_root_facade_1ad9a236acb377b23cf5b24fed43210d06" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_evolution_description" kindref="compound">EvolutionDescription</ref></type>
        <definition>EvolutionDescription QuantLib::PseudoRootFacade::evolution_</definition>
        <argsstring></argsstring>
        <name>evolution_</name>
        <qualifiedname>QuantLib::PseudoRootFacade::evolution_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/pseudorootfacade.hpp" line="54" column="30" bodyfile="ql/models/marketmodels/models/pseudorootfacade.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_pseudo_root_facade_1aaf1832038e36d6985aab59da47c7e15d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &gt;</type>
        <definition>std::vector&lt;Matrix&gt; QuantLib::PseudoRootFacade::covariancePseudoRoots_</definition>
        <argsstring></argsstring>
        <name>covariancePseudoRoots_</name>
        <qualifiedname>QuantLib::PseudoRootFacade::covariancePseudoRoots_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/pseudorootfacade.hpp" line="55" column="21" bodyfile="ql/models/marketmodels/models/pseudorootfacade.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_pseudo_root_facade_1a10273f67271934d82b1af86cb88a6730" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; Rate &gt; &amp; QuantLib::PseudoRootFacade::initialRates</definition>
        <argsstring>() const override</argsstring>
        <name>initialRates</name>
        <qualifiedname>QuantLib::PseudoRootFacade::initialRates</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_market_model_1ac85da2cde3ff98b5475eeb8bbcc8fdd3">initialRates</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/pseudorootfacade.hpp" line="42" column="27" bodyfile="ql/models/marketmodels/models/pseudorootfacade.hpp" bodystart="60" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_pseudo_root_facade_1a78adaa3b48369fc89be34a92302f0116" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const std::vector&lt; <ref refid="namespace_quant_lib_1ad61d2e1a3f01154233de0d5fbb85177c" kindref="member">Spread</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; Spread &gt; &amp; QuantLib::PseudoRootFacade::displacements</definition>
        <argsstring>() const override</argsstring>
        <name>displacements</name>
        <qualifiedname>QuantLib::PseudoRootFacade::displacements</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_market_model_1a2d25fc9061e62841893e61f4ce46a569">displacements</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/pseudorootfacade.hpp" line="43" column="27" bodyfile="ql/models/marketmodels/models/pseudorootfacade.hpp" bodystart="64" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_pseudo_root_facade_1a29233cfd5c3ab2e53ddb4b53708e8c5b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="class_quant_lib_1_1_evolution_description" kindref="compound">EvolutionDescription</ref> &amp;</type>
        <definition>const EvolutionDescription &amp; QuantLib::PseudoRootFacade::evolution</definition>
        <argsstring>() const override</argsstring>
        <name>evolution</name>
        <qualifiedname>QuantLib::PseudoRootFacade::evolution</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_market_model_1ad40600d650ed9b8ea7b9291a383fcb87">evolution</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/pseudorootfacade.hpp" line="44" column="36" bodyfile="ql/models/marketmodels/models/pseudorootfacade.hpp" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_pseudo_root_facade_1af039f5151a72d414aad854cb6c545fcc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::PseudoRootFacade::numberOfRates</definition>
        <argsstring>() const override</argsstring>
        <name>numberOfRates</name>
        <qualifiedname>QuantLib::PseudoRootFacade::numberOfRates</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_market_model_1a50ec308a207e15a48a7d1f70f943f6b0">numberOfRates</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/pseudorootfacade.hpp" line="45" column="14" bodyfile="ql/models/marketmodels/models/pseudorootfacade.hpp" bodystart="72" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_pseudo_root_facade_1a8bb99959b15b5830a5ad5a430180b562" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::PseudoRootFacade::numberOfFactors</definition>
        <argsstring>() const override</argsstring>
        <name>numberOfFactors</name>
        <qualifiedname>QuantLib::PseudoRootFacade::numberOfFactors</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_market_model_1af9fa5e91c77a4498133edbfe0b92a602">numberOfFactors</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/pseudorootfacade.hpp" line="46" column="14" bodyfile="ql/models/marketmodels/models/pseudorootfacade.hpp" bodystart="76" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_pseudo_root_facade_1aabea1789c76295210133e97b046e4731" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::PseudoRootFacade::numberOfSteps</definition>
        <argsstring>() const override</argsstring>
        <name>numberOfSteps</name>
        <qualifiedname>QuantLib::PseudoRootFacade::numberOfSteps</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_market_model_1a6e16e6f566721c0e4d6d19919dc6dd11">numberOfSteps</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/pseudorootfacade.hpp" line="47" column="14" bodyfile="ql/models/marketmodels/models/pseudorootfacade.hpp" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_pseudo_root_facade_1a4724703f15e34f0c0ad8dea4d0cfe863" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
        <definition>const Matrix &amp; QuantLib::PseudoRootFacade::pseudoRoot</definition>
        <argsstring>(Size i) const override</argsstring>
        <name>pseudoRoot</name>
        <qualifiedname>QuantLib::PseudoRootFacade::pseudoRoot</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_market_model_1ab64c28f48231ca2aad2899b515169700">pseudoRoot</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/pseudorootfacade.hpp" line="48" column="22" bodyfile="ql/models/marketmodels/models/pseudorootfacade.hpp" bodystart="84" bodyend="89"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_pseudo_root_facade_1a055931ce78e3ee44c9173dafb291d47f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::PseudoRootFacade::PseudoRootFacade</definition>
        <argsstring>(const ext::shared_ptr&lt; CTSMMCapletCalibration &gt; &amp;calibrator)</argsstring>
        <name>PseudoRootFacade</name>
        <qualifiedname>QuantLib::PseudoRootFacade::PseudoRootFacade</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_c_t_s_m_m_caplet_calibration" kindref="compound">CTSMMCapletCalibration</ref> &gt; &amp;</type>
          <declname>calibrator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/pseudorootfacade.hpp" line="35" column="9" bodyfile="ql/models/marketmodels/models/pseudorootfacade.cpp" bodystart="28" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_pseudo_root_facade_1ad453fce3071ae158e70ee8df49836343" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::PseudoRootFacade::PseudoRootFacade</definition>
        <argsstring>(const std::vector&lt; Matrix &gt; &amp;covariancePseudoRoots, const std::vector&lt; Rate &gt; &amp;rateTimes, std::vector&lt; Rate &gt; initialRates, const std::vector&lt; Spread &gt; &amp;displacements)</argsstring>
        <name>PseudoRootFacade</name>
        <qualifiedname>QuantLib::PseudoRootFacade::PseudoRootFacade</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &gt; &amp;</type>
          <declname>covariancePseudoRoots</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
          <declname>rateTimes</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
          <declname>initialRates</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1ad61d2e1a3f01154233de0d5fbb85177c" kindref="member">Spread</ref> &gt; &amp;</type>
          <declname>displacements</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/pseudorootfacade.hpp" line="36" column="9" bodyfile="ql/models/marketmodels/models/pseudorootfacade.cpp" bodystart="36" bodyend="78"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::MarketModel</label>
        <link refid="class_quant_lib_1_1_market_model"/>
      </node>
      <node id="1">
        <label>QuantLib::PseudoRootFacade</label>
        <link refid="class_quant_lib_1_1_pseudo_root_facade"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::MarketModel</label>
        <link refid="class_quant_lib_1_1_market_model"/>
      </node>
      <node id="1">
        <label>QuantLib::PseudoRootFacade</label>
        <link refid="class_quant_lib_1_1_pseudo_root_facade"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/models/marketmodels/models/pseudorootfacade.hpp" line="33" column="5" bodyfile="ql/models/marketmodels/models/pseudorootfacade.hpp" bodystart="33" bodyend="56"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_market_model_1ad1b900e0eaf5951661c7f71f1fcf0245" prot="public" virt="virtual"><scope>QuantLib::PseudoRootFacade</scope><name>covariance</name></member>
      <member refid="class_quant_lib_1_1_pseudo_root_facade_1aaf1832038e36d6985aab59da47c7e15d" prot="private" virt="non-virtual"><scope>QuantLib::PseudoRootFacade</scope><name>covariancePseudoRoots_</name></member>
      <member refid="class_quant_lib_1_1_pseudo_root_facade_1a78adaa3b48369fc89be34a92302f0116" prot="public" virt="virtual"><scope>QuantLib::PseudoRootFacade</scope><name>displacements</name></member>
      <member refid="class_quant_lib_1_1_pseudo_root_facade_1a743b36d506e8b04aa93a2a59c25e3416" prot="private" virt="non-virtual"><scope>QuantLib::PseudoRootFacade</scope><name>displacements_</name></member>
      <member refid="class_quant_lib_1_1_pseudo_root_facade_1a29233cfd5c3ab2e53ddb4b53708e8c5b" prot="public" virt="virtual"><scope>QuantLib::PseudoRootFacade</scope><name>evolution</name></member>
      <member refid="class_quant_lib_1_1_pseudo_root_facade_1ad9a236acb377b23cf5b24fed43210d06" prot="private" virt="non-virtual"><scope>QuantLib::PseudoRootFacade</scope><name>evolution_</name></member>
      <member refid="class_quant_lib_1_1_pseudo_root_facade_1a10273f67271934d82b1af86cb88a6730" prot="public" virt="virtual"><scope>QuantLib::PseudoRootFacade</scope><name>initialRates</name></member>
      <member refid="class_quant_lib_1_1_pseudo_root_facade_1adc3b1db6dc0fe17faadbecd94290fde8" prot="private" virt="non-virtual"><scope>QuantLib::PseudoRootFacade</scope><name>initialRates_</name></member>
      <member refid="class_quant_lib_1_1_pseudo_root_facade_1a8bb99959b15b5830a5ad5a430180b562" prot="public" virt="virtual"><scope>QuantLib::PseudoRootFacade</scope><name>numberOfFactors</name></member>
      <member refid="class_quant_lib_1_1_pseudo_root_facade_1a073405cac1e7a230f4d6d21c15556ce3" prot="private" virt="non-virtual"><scope>QuantLib::PseudoRootFacade</scope><name>numberOfFactors_</name></member>
      <member refid="class_quant_lib_1_1_pseudo_root_facade_1af039f5151a72d414aad854cb6c545fcc" prot="public" virt="virtual"><scope>QuantLib::PseudoRootFacade</scope><name>numberOfRates</name></member>
      <member refid="class_quant_lib_1_1_pseudo_root_facade_1ac96f44591f3d794db75d3d5945273876" prot="private" virt="non-virtual"><scope>QuantLib::PseudoRootFacade</scope><name>numberOfRates_</name></member>
      <member refid="class_quant_lib_1_1_pseudo_root_facade_1aabea1789c76295210133e97b046e4731" prot="public" virt="virtual"><scope>QuantLib::PseudoRootFacade</scope><name>numberOfSteps</name></member>
      <member refid="class_quant_lib_1_1_pseudo_root_facade_1ad9726b32fc8eb0de8a9dfd9c38e3bf98" prot="private" virt="non-virtual"><scope>QuantLib::PseudoRootFacade</scope><name>numberOfSteps_</name></member>
      <member refid="class_quant_lib_1_1_pseudo_root_facade_1a4724703f15e34f0c0ad8dea4d0cfe863" prot="public" virt="virtual"><scope>QuantLib::PseudoRootFacade</scope><name>pseudoRoot</name></member>
      <member refid="class_quant_lib_1_1_pseudo_root_facade_1a055931ce78e3ee44c9173dafb291d47f" prot="public" virt="non-virtual"><scope>QuantLib::PseudoRootFacade</scope><name>PseudoRootFacade</name></member>
      <member refid="class_quant_lib_1_1_pseudo_root_facade_1ad453fce3071ae158e70ee8df49836343" prot="public" virt="non-virtual"><scope>QuantLib::PseudoRootFacade</scope><name>PseudoRootFacade</name></member>
      <member refid="class_quant_lib_1_1_market_model_1a0ad1c89356987a2c4b7d924dd96cf9e8" prot="public" virt="non-virtual"><scope>QuantLib::PseudoRootFacade</scope><name>timeDependentVolatility</name></member>
      <member refid="class_quant_lib_1_1_market_model_1a910d9f4ccb516fa50c598ee95857191b" prot="public" virt="virtual"><scope>QuantLib::PseudoRootFacade</scope><name>totalCovariance</name></member>
      <member refid="class_quant_lib_1_1_market_model_1aac715ff90b45540fb8c1689af21f1660" prot="public" virt="virtual"><scope>QuantLib::PseudoRootFacade</scope><name>~MarketModel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

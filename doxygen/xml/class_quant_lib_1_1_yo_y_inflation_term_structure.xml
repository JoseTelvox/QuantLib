<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_yo_y_inflation_term_structure" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::YoYInflationTermStructure</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_inflation_term_structure" prot="public" virt="non-virtual">QuantLib::InflationTermStructure</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_interpolated_yo_y_inflation_curve" prot="public" virt="non-virtual">QuantLib::InterpolatedYoYInflationCurve&lt; Linear &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_interpolated_yo_y_inflation_curve" prot="public" virt="non-virtual">QuantLib::InterpolatedYoYInflationCurve&lt; Interpolator &gt;</derivedcompoundref>
    <includes refid="inflationtermstructure_8hpp" local="no">inflationtermstructure.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Inspectors</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_yo_y_inflation_term_structure_1ae4f21251e423b660f21edabad6ffefd0" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::YoYInflationTermStructure::indexIsInterpolated_</definition>
        <argsstring></argsstring>
        <name>indexIsInterpolated_</name>
        <qualifiedname>QuantLib::YoYInflationTermStructure::indexIsInterpolated_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000147"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This data member will disappear. When it does, the curve will behave as if it was false. Deprecated in version 1.37. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/inflationtermstructure.hpp" line="388" column="14" bodyfile="ql/termstructures/inflationtermstructure.hpp" bodystart="388" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_term_structure_1a2ebce4ecb644f325ca06f274353fc3ef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>QL_DEPRECATED_ENABLE_WARNING Rate QuantLib::YoYInflationTermStructure::yoyRate</definition>
        <argsstring>(const Date &amp;d, const Period &amp;instObsLag=Period(-1, Days), bool forceLinearInterpolation=false, bool extrapolate=false) const</argsstring>
        <name>yoyRate</name>
        <qualifiedname>QuantLib::YoYInflationTermStructure::yoyRate</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>instObsLag</declname>
          <defval><ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref>(-1, Days)</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>forceLinearInterpolation</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>year-on-year inflation rate. </para>
        </briefdescription>
        <detaileddescription>
<para>The forceLinearInterpolation parameter is relative to the frequency of the TS.</para>
<para><simplesect kind="note"><para>this is not the year-on-year swap (YYIIS) rate. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/inflationtermstructure.hpp" line="361" column="14" bodyfile="ql/termstructures/inflationtermstructure.cpp" bodystart="372" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_term_structure_1a507929ea0caf1dc44e6168bbaad04609" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::YoYInflationTermStructure::yoyRate</definition>
        <argsstring>(Time t, bool extrapolate=false) const</argsstring>
        <name>yoyRate</name>
        <qualifiedname>QuantLib::YoYInflationTermStructure::yoyRate</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>year-on-year inflation rate. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>Since inflation is highly linked to dates (lags, interpolation, months for seasonality, etc) this method cannot account for all effects. If you call it, You&apos;ll have to manage lag, seasonality etc. yourself. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/inflationtermstructure.hpp" line="371" column="14" bodyfile="ql/termstructures/inflationtermstructure.cpp" bodystart="416" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_term_structure_1a5a91177ad922d2daf5017bd6b38e4681" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool QuantLib::YoYInflationTermStructure::indexIsInterpolated</definition>
        <argsstring>() const</argsstring>
        <name>indexIsInterpolated</name>
        <qualifiedname>QuantLib::YoYInflationTermStructure::indexIsInterpolated</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000146"><xreftitle>Deprecated</xreftitle><xrefdescription><para>This method will disappear. When it does, the curve will behave as if it returned false. Deprecated in version 1.37. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/inflationtermstructure.hpp" line="379" column="22" bodyfile="ql/termstructures/inflationtermstructure.hpp" bodystart="427" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_term_structure_1af80fafca20a6497f501da5672654ea69" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>virtual Rate QuantLib::YoYInflationTermStructure::yoyRateImpl</definition>
        <argsstring>(Time time) const =0</argsstring>
        <name>yoyRateImpl</name>
        <qualifiedname>QuantLib::YoYInflationTermStructure::yoyRateImpl</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_interpolated_yo_y_inflation_curve_1a5a1a580b7987cc355350cda1aeab8306">yoyRateImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_interpolated_yo_y_inflation_curve_1a5a1a580b7987cc355350cda1aeab8306">yoyRateImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_interpolated_yo_y_inflation_curve_1a5a1a580b7987cc355350cda1aeab8306">yoyRateImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_piecewise_yo_y_inflation_curve_1a856dbf9746332cf2fca7ee6e4879636c">yoyRateImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_piecewise_yo_y_inflation_curve_1a856dbf9746332cf2fca7ee6e4879636c">yoyRateImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_piecewise_yo_y_inflation_curve_1a856dbf9746332cf2fca7ee6e4879636c">yoyRateImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_piecewise_yo_y_inflation_curve_1a856dbf9746332cf2fca7ee6e4879636c">yoyRateImpl</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>to be defined in derived classes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/inflationtermstructure.hpp" line="382" column="22"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Constructors</header>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_term_structure_1a1991a4a1fa9157d0781583c5b03c0887" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QL_DEPRECATED_DISABLE_WARNING QuantLib::YoYInflationTermStructure::YoYInflationTermStructure</definition>
        <argsstring>(Date baseDate, Rate baseYoYRate, Frequency frequency, const DayCounter &amp;dayCounter, const ext::shared_ptr&lt; Seasonality &gt; &amp;seasonality={})</argsstring>
        <name>YoYInflationTermStructure</name>
        <qualifiedname>QuantLib::YoYInflationTermStructure::YoYInflationTermStructure</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
          <declname>baseDate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>baseYoYRate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
          <declname>frequency</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_seasonality" kindref="compound">Seasonality</ref> &gt; &amp;</type>
          <declname>seasonality</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/inflationtermstructure.hpp" line="254" column="9" bodyfile="ql/termstructures/inflationtermstructure.cpp" bodystart="268" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_term_structure_1a2511b3f9eee3292820e78d44bdab257d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::YoYInflationTermStructure::YoYInflationTermStructure</definition>
        <argsstring>(const Date &amp;referenceDate, Date baseDate, Rate baseYoYRate, Frequency frequency, const DayCounter &amp;dayCounter, const ext::shared_ptr&lt; Seasonality &gt; &amp;seasonality={})</argsstring>
        <name>YoYInflationTermStructure</name>
        <qualifiedname>QuantLib::YoYInflationTermStructure::YoYInflationTermStructure</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>referenceDate</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
          <declname>baseDate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>baseYoYRate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
          <declname>frequency</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_seasonality" kindref="compound">Seasonality</ref> &gt; &amp;</type>
          <declname>seasonality</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/inflationtermstructure.hpp" line="260" column="9" bodyfile="ql/termstructures/inflationtermstructure.cpp" bodystart="276" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_term_structure_1a6cf6d9f7b26052e5f0bfb3b464ef635e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::YoYInflationTermStructure::YoYInflationTermStructure</definition>
        <argsstring>(Natural settlementDays, const Calendar &amp;calendar, Date baseDate, Rate baseYoYRate, Frequency frequency, const DayCounter &amp;dayCounter, const ext::shared_ptr&lt; Seasonality &gt; &amp;seasonality={})</argsstring>
        <name>YoYInflationTermStructure</name>
        <qualifiedname>QuantLib::YoYInflationTermStructure::YoYInflationTermStructure</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>settlementDays</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>calendar</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
          <declname>baseDate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>baseYoYRate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
          <declname>frequency</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_seasonality" kindref="compound">Seasonality</ref> &gt; &amp;</type>
          <declname>seasonality</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/inflationtermstructure.hpp" line="267" column="9" bodyfile="ql/termstructures/inflationtermstructure.cpp" bodystart="285" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_term_structure_1aa67821d1c91ccdd21eea7fe92bcc1112" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::YoYInflationTermStructure::YoYInflationTermStructure</definition>
        <argsstring>(Date baseDate, Rate baseYoYRate, Frequency frequency, bool indexIsInterpolated, const DayCounter &amp;dayCounter, const ext::shared_ptr&lt; Seasonality &gt; &amp;seasonality={})</argsstring>
        <name>YoYInflationTermStructure</name>
        <qualifiedname>QuantLib::YoYInflationTermStructure::YoYInflationTermStructure</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
          <declname>baseDate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>baseYoYRate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
          <declname>frequency</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>indexIsInterpolated</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_seasonality" kindref="compound">Seasonality</ref> &gt; &amp;</type>
          <declname>seasonality</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000140"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use an overload with an explicit base date and without indexIsInterpolated. Deprecated in version 1.37. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/inflationtermstructure.hpp" line="279" column="9" bodyfile="ql/termstructures/inflationtermstructure.cpp" bodystart="295" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_term_structure_1a21a009a9c23feaa5479d58cb6c9252b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::YoYInflationTermStructure::YoYInflationTermStructure</definition>
        <argsstring>(const Date &amp;referenceDate, Date baseDate, Rate baseYoYRate, Frequency frequency, bool indexIsInterpolated, const DayCounter &amp;dayCounter, const ext::shared_ptr&lt; Seasonality &gt; &amp;seasonality={})</argsstring>
        <name>YoYInflationTermStructure</name>
        <qualifiedname>QuantLib::YoYInflationTermStructure::YoYInflationTermStructure</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>referenceDate</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
          <declname>baseDate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>baseYoYRate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
          <declname>frequency</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>indexIsInterpolated</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_seasonality" kindref="compound">Seasonality</ref> &gt; &amp;</type>
          <declname>seasonality</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000141"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use an overload with an explicit base date and without indexIsInterpolated. Deprecated in version 1.37. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/inflationtermstructure.hpp" line="290" column="9" bodyfile="ql/termstructures/inflationtermstructure.cpp" bodystart="306" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_term_structure_1a86a0c6cf492de21ed8267b4d81fd1530" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::YoYInflationTermStructure::YoYInflationTermStructure</definition>
        <argsstring>(Natural settlementDays, const Calendar &amp;calendar, Date baseDate, Rate baseYoYRate, Frequency frequency, bool indexIsInterpolated, const DayCounter &amp;dayCounter, const ext::shared_ptr&lt; Seasonality &gt; &amp;seasonality={})</argsstring>
        <name>YoYInflationTermStructure</name>
        <qualifiedname>QuantLib::YoYInflationTermStructure::YoYInflationTermStructure</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>settlementDays</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>calendar</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
          <declname>baseDate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>baseYoYRate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
          <declname>frequency</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>indexIsInterpolated</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_seasonality" kindref="compound">Seasonality</ref> &gt; &amp;</type>
          <declname>seasonality</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000142"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use an overload with an explicit base date and without indexIsInterpolated. Deprecated in version 1.37. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/inflationtermstructure.hpp" line="302" column="9" bodyfile="ql/termstructures/inflationtermstructure.cpp" bodystart="319" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_term_structure_1ad04874f6248941f8853e9343c4b531dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::YoYInflationTermStructure::YoYInflationTermStructure</definition>
        <argsstring>(const DayCounter &amp;dayCounter, Rate baseYoYRate, const Period &amp;lag, Frequency frequency, bool indexIsInterpolated, const ext::shared_ptr&lt; Seasonality &gt; &amp;seasonality={})</argsstring>
        <name>YoYInflationTermStructure</name>
        <qualifiedname>QuantLib::YoYInflationTermStructure::YoYInflationTermStructure</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>baseYoYRate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>lag</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
          <declname>frequency</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>indexIsInterpolated</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_seasonality" kindref="compound">Seasonality</ref> &gt; &amp;</type>
          <declname>seasonality</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000143"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use an overload with an explicit base date and without indexIsInterpolated. Deprecated in version 1.34. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/inflationtermstructure.hpp" line="315" column="9" bodyfile="ql/termstructures/inflationtermstructure.cpp" bodystart="333" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_term_structure_1a6f00110723362964a52f11a97bea0120" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::YoYInflationTermStructure::YoYInflationTermStructure</definition>
        <argsstring>(const Date &amp;referenceDate, const Calendar &amp;calendar, const DayCounter &amp;dayCounter, Rate baseYoYRate, const Period &amp;lag, Frequency frequency, bool indexIsInterpolated, const ext::shared_ptr&lt; Seasonality &gt; &amp;seasonality={})</argsstring>
        <name>YoYInflationTermStructure</name>
        <qualifiedname>QuantLib::YoYInflationTermStructure::YoYInflationTermStructure</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>referenceDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>calendar</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>baseYoYRate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>lag</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
          <declname>frequency</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>indexIsInterpolated</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_seasonality" kindref="compound">Seasonality</ref> &gt; &amp;</type>
          <declname>seasonality</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000144"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use an overload with an explicit base date and without indexIsInterpolated. Deprecated in version 1.34. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/inflationtermstructure.hpp" line="326" column="9" bodyfile="ql/termstructures/inflationtermstructure.cpp" bodystart="344" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_term_structure_1a84b00ea458acd1a869c97218a05ff1b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::YoYInflationTermStructure::YoYInflationTermStructure</definition>
        <argsstring>(Natural settlementDays, const Calendar &amp;calendar, const DayCounter &amp;dayCounter, Rate baseYoYRate, const Period &amp;lag, Frequency frequency, bool indexIsInterpolated, const ext::shared_ptr&lt; Seasonality &gt; &amp;seasonality={})</argsstring>
        <name>YoYInflationTermStructure</name>
        <qualifiedname>QuantLib::YoYInflationTermStructure::YoYInflationTermStructure</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>settlementDays</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>calendar</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>baseYoYRate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>lag</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
          <declname>frequency</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>indexIsInterpolated</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_seasonality" kindref="compound">Seasonality</ref> &gt; &amp;</type>
          <declname>seasonality</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000145"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use an overload with an explicit base date and without indexIsInterpolated. Deprecated in version 1.34. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/inflationtermstructure.hpp" line="339" column="9" bodyfile="ql/termstructures/inflationtermstructure.cpp" bodystart="357" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_term_structure_1a4772288652f15ba59519b73418dda418" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QL_DEPRECATED_DISABLE_WARNING</type>
        <definition>QL_DEPRECATED_DISABLE_WARNING QuantLib::YoYInflationTermStructure::~YoYInflationTermStructure</definition>
        <argsstring>() override=default</argsstring>
        <name>~YoYInflationTermStructure</name>
        <qualifiedname>QuantLib::YoYInflationTermStructure::~YoYInflationTermStructure</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/inflationtermstructure.hpp" line="350" column="9"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Base class for year-on-year inflation term structures. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="6">
        <label>QuantLib::Extrapolator</label>
        <link refid="class_quant_lib_1_1_extrapolator"/>
      </node>
      <node id="2">
        <label>QuantLib::InflationTermStructure</label>
        <link refid="class_quant_lib_1_1_inflation_term_structure"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::InterpolatedYoYInflationCurve&lt; Interpolator &gt;</label>
        <link refid="class_quant_lib_1_1_interpolated_yo_y_inflation_curve"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::InterpolatedYoYInflationCurve&lt; Linear &gt;</label>
        <link refid="class_quant_lib_1_1_interpolated_yo_y_inflation_curve"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="11">
        <label>QuantLib::PiecewiseYoYInflationCurve&lt; Interpolator, Bootstrap, Traits &gt;</label>
        <link refid="class_quant_lib_1_1_piecewise_yo_y_inflation_curve"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QuantLib::PiecewiseYoYInflationCurve&lt; Interpolator, Bootstrap, Traits &gt;</label>
        <link refid="class_quant_lib_1_1_piecewise_yo_y_inflation_curve"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QuantLib::PiecewiseYoYInflationCurve&lt; Interpolator, IterativeBootstrap, YoYInflationTraits &gt;</label>
        <link refid="class_quant_lib_1_1_piecewise_yo_y_inflation_curve"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::TermStructure</label>
        <link refid="class_quant_lib_1_1_term_structure"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::YoYInflationTermStructure</label>
        <link refid="class_quant_lib_1_1_yo_y_inflation_term_structure"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7">
        <label>QuantLib::Calendar</label>
        <link refid="class_quant_lib_1_1_calendar"/>
      </node>
      <node id="6">
        <label>QuantLib::Extrapolator</label>
        <link refid="class_quant_lib_1_1_extrapolator"/>
      </node>
      <node id="2">
        <label>QuantLib::InflationTermStructure</label>
        <link refid="class_quant_lib_1_1_inflation_term_structure"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>observationLag_</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="8">
        <label>QuantLib::Period</label>
        <link refid="class_quant_lib_1_1_period"/>
      </node>
      <node id="3">
        <label>QuantLib::TermStructure</label>
        <link refid="class_quant_lib_1_1_term_structure"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>calendar_</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::YoYInflationTermStructure</label>
        <link refid="class_quant_lib_1_1_yo_y_inflation_term_structure"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/termstructures/inflationtermstructure.hpp" line="250" column="5" bodyfile="ql/termstructures/inflationtermstructure.hpp" bodystart="250" bodyend="389"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_extrapolator_1ab3936a9b5b5c163d3e511437c16c1d9e" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>allowsExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_inflation_term_structure_1a5619ff52d19c58cf3264b50c222b88c1" prot="public" virt="virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>baseDate</name></member>
      <member refid="class_quant_lib_1_1_inflation_term_structure_1afd997ed730b603a73385172ed7a3f3b1" prot="public" virt="virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>baseRate</name></member>
      <member refid="class_quant_lib_1_1_inflation_term_structure_1ac41352ffa0a6dd02435dde9ede7fccda" prot="protected" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>baseRate_</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac4ea5cbce495c9a47a44eeaedf7a9d45" prot="public" virt="virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>calendar</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a0a09e3fa8cdfbc9aa9685da0c35ccb90" prot="protected" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>calendar_</name></member>
      <member refid="class_quant_lib_1_1_inflation_term_structure_1aa6ea3d4c8d8a33d3e8f59ecd0af90583" prot="protected" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>checkRange</name></member>
      <member refid="class_quant_lib_1_1_inflation_term_structure_1a4127c05b619c7a8404a5cc1e8d25e778" prot="protected" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>checkRange</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac03e725e4e0685b209caa626b00924ca" prot="public" virt="virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>dayCounter</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1a6af69387d5cae0fe84d6a0c858406218" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>disableExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1a5f7b5650a44d6c63095bc739470c8bfb" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>enableExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1af1c3adaccdfaf07d3d07edaa234444f7" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>Extrapolator</name></member>
      <member refid="class_quant_lib_1_1_inflation_term_structure_1a390aecbee81316adfb83ada135f11a51" prot="public" virt="virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>frequency</name></member>
      <member refid="class_quant_lib_1_1_inflation_term_structure_1a258c56f2310a280a80225bdee677e276" prot="protected" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>frequency_</name></member>
      <member refid="class_quant_lib_1_1_inflation_term_structure_1a1f93822f8ba2fc7d4627804662f79d9b" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>hasExplicitBaseDate</name></member>
      <member refid="class_quant_lib_1_1_inflation_term_structure_1ad1c79822823d498d3751747d4ec77b02" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>hasSeasonality</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_term_structure_1a5a91177ad922d2daf5017bd6b38e4681" prot="public" virt="virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>indexIsInterpolated</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_term_structure_1ae4f21251e423b660f21edabad6ffefd0" prot="protected" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>indexIsInterpolated_</name></member>
      <member refid="class_quant_lib_1_1_inflation_term_structure_1a8eea8607045954f627c208d48225bd43" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>InflationTermStructure</name></member>
      <member refid="class_quant_lib_1_1_inflation_term_structure_1a1cfced2e5a587284f3720d63978a591a" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>InflationTermStructure</name></member>
      <member refid="class_quant_lib_1_1_inflation_term_structure_1a5112176ee4b48173b06a029c28d78b9f" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>InflationTermStructure</name></member>
      <member refid="class_quant_lib_1_1_inflation_term_structure_1abab0f95e920b2f4a490fa5026cbf4a1c" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>InflationTermStructure</name></member>
      <member refid="class_quant_lib_1_1_inflation_term_structure_1a5b0317e013dc62557a787e05104212d5" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>InflationTermStructure</name></member>
      <member refid="class_quant_lib_1_1_inflation_term_structure_1a2bf753bcc49a18f68f0bdf2cda7ebb88" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>InflationTermStructure</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ae9af756bbddc15962711f77f514f08fa" prot="public" virt="pure-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>maxDate</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a2f820c32e198e1046d97ca3dd9a807c5" prot="public" virt="virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>maxTime</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a8319e5c2c37b09a825d61210c9cb8e2a" prot="protected" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>moving_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::"><scope>QuantLib::YoYInflationTermStructure</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::"><scope>QuantLib::YoYInflationTermStructure</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_inflation_term_structure_1a1dfa653f3786b30c7fd58fa52b25b871" prot="public" virt="virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>observationLag</name></member>
      <member refid="class_quant_lib_1_1_inflation_term_structure_1a685bc033b835b027628ffdf28bc18046" prot="protected" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>observationLag_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::"><scope>QuantLib::YoYInflationTermStructure</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::YoYInflationTermStructure</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::QuantLib::Observable::"><scope>QuantLib::YoYInflationTermStructure</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::YoYInflationTermStructure</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1accbf3d4af41db0333d456eb5616c4e1e" prot="public" virt="virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>referenceDate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_inflation_term_structure_1a856088a570c3a0fd576285971eb6a56e" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>seasonality</name></member>
      <member refid="class_quant_lib_1_1_inflation_term_structure_1a20bcd269f00489dc4be0752ca8d6bcae" prot="protected" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>seasonality_</name></member>
      <member refid="class_quant_lib_1_1_inflation_term_structure_1ae9bf5f77a2a54d23b151c5656b10cd62" prot="protected" virt="virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>setBaseRate</name></member>
      <member refid="class_quant_lib_1_1_inflation_term_structure_1ad116c16d4e68e8231a1bd3107ce02077" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>setSeasonality</name></member>
      <member refid="class_quant_lib_1_1_inflation_term_structure_1a2ff75623469f02626df85f02f322a171" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>setSeasonality</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1abeb79eefda70a9414f206ca9e70ced0f" prot="public" virt="virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>settlementDays</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac8365997e6d41134b4e0998fe6b4e949" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>TermStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a95764a49e0368b653eadbe619d9ef334" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>TermStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1aab73d2acafdc8fbdf9336e7084bd88a1" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>TermStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac8da61eb0f06ae07a35e8e4bbe7146b0" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>timeFromReference</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a016528f1fe9cabca6472d8f4776351e2" prot="public" virt="virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a2fcf1c78e57786ad5c123f52dbf619e8" prot="protected" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>updated_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_term_structure_1a1991a4a1fa9157d0781583c5b03c0887" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>YoYInflationTermStructure</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_term_structure_1a2511b3f9eee3292820e78d44bdab257d" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>YoYInflationTermStructure</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_term_structure_1a6cf6d9f7b26052e5f0bfb3b464ef635e" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>YoYInflationTermStructure</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_term_structure_1aa67821d1c91ccdd21eea7fe92bcc1112" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>YoYInflationTermStructure</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_term_structure_1a21a009a9c23feaa5479d58cb6c9252b0" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>YoYInflationTermStructure</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_term_structure_1a86a0c6cf492de21ed8267b4d81fd1530" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>YoYInflationTermStructure</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_term_structure_1ad04874f6248941f8853e9343c4b531dc" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>YoYInflationTermStructure</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_term_structure_1a6f00110723362964a52f11a97bea0120" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>YoYInflationTermStructure</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_term_structure_1a84b00ea458acd1a869c97218a05ff1b3" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>YoYInflationTermStructure</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_term_structure_1a2ebce4ecb644f325ca06f274353fc3ef" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>yoyRate</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_term_structure_1a507929ea0caf1dc44e6168bbaad04609" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>yoyRate</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_term_structure_1af80fafca20a6497f501da5672654ea69" prot="protected" virt="pure-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>yoyRateImpl</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1af0ca0156436ffbce159183198eb27e2e" prot="public" virt="virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>~Extrapolator</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ad202ddcc14fc4a6c16686d6164d7b36c" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>~TermStructure</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_term_structure_1a4772288652f15ba59519b73418dda418" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationTermStructure</scope><name>~YoYInflationTermStructure</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

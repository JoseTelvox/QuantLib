<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_nelson_siegel_fitting" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::NelsonSiegelFitting</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_fitted_bond_discount_curve_1_1_fitting_method" prot="public" virt="non-virtual">QuantLib::FittedBondDiscountCurve::FittingMethod</basecompoundref>
    <includes refid="nonlinearfittingmethods_8hpp" local="no">nonlinearfittingmethods.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_nelson_siegel_fitting_1af18001aea095826635f14e4dcb4e7695" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::NelsonSiegelFitting::NelsonSiegelFitting</definition>
        <argsstring>(const Array &amp;weights=Array(), const ext::shared_ptr&lt; OptimizationMethod &gt; &amp;optimizationMethod={}, const Array &amp;l2=Array(), Real minCutoffTime=0.0, Real maxCutoffTime=QL_MAX_REAL, Constraint constraint=NoConstraint())</argsstring>
        <name>NelsonSiegelFitting</name>
        <qualifiedname>QuantLib::NelsonSiegelFitting::NelsonSiegelFitting</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>weights</declname>
          <defval><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref>()</defval>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_optimization_method" kindref="compound">OptimizationMethod</ref> &gt; &amp;</type>
          <declname>optimizationMethod</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>l2</declname>
          <defval><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref>()</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>minCutoffTime</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>maxCutoffTime</declname>
          <defval><ref refid="group__limit_macros_1ga31675a375a563ed7a1bba05c664489af" kindref="member">QL_MAX_REAL</ref></defval>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_constraint" kindref="compound">Constraint</ref></type>
          <declname>constraint</declname>
          <defval><ref refid="class_quant_lib_1_1_no_constraint" kindref="compound">NoConstraint</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/nonlinearfittingmethods.hpp" line="98" column="9" bodyfile="ql/termstructures/yield/nonlinearfittingmethods.cpp" bodystart="103" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_nelson_siegel_fitting_1a40bb9b4289db1280b135efd9990cbe26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::NelsonSiegelFitting::NelsonSiegelFitting</definition>
        <argsstring>(const Array &amp;weights, const Array &amp;l2, Real minCutoffTime=0.0, Real maxCutoffTime=QL_MAX_REAL, Constraint constraint=NoConstraint())</argsstring>
        <name>NelsonSiegelFitting</name>
        <qualifiedname>QuantLib::NelsonSiegelFitting::NelsonSiegelFitting</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>l2</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>minCutoffTime</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>maxCutoffTime</declname>
          <defval><ref refid="group__limit_macros_1ga31675a375a563ed7a1bba05c664489af" kindref="member">QL_MAX_REAL</ref></defval>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_constraint" kindref="compound">Constraint</ref></type>
          <declname>constraint</declname>
          <defval><ref refid="class_quant_lib_1_1_no_constraint" kindref="compound">NoConstraint</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/nonlinearfittingmethods.hpp" line="104" column="9" bodyfile="ql/termstructures/yield/nonlinearfittingmethods.cpp" bodystart="113" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_nelson_siegel_fitting_1ab08f15a92281b758c3289002106cc3df" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::unique_ptr&lt; <ref refid="class_quant_lib_1_1_fitted_bond_discount_curve_1_1_fitting_method" kindref="compound">FittedBondDiscountCurve::FittingMethod</ref> &gt;</type>
        <definition>std::unique_ptr&lt; FittedBondDiscountCurve::FittingMethod &gt; QuantLib::NelsonSiegelFitting::clone</definition>
        <argsstring>() const override</argsstring>
        <name>clone</name>
        <qualifiedname>QuantLib::NelsonSiegelFitting::clone</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fitted_bond_discount_curve_1_1_fitting_method_1a70b66bfb9823d64c97f0510231476223">clone</reimplements>
        <briefdescription>
<para>clone of the current object </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/nonlinearfittingmethods.hpp" line="109" column="25" bodyfile="ql/termstructures/yield/nonlinearfittingmethods.cpp" bodystart="123" bodyend="125"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_nelson_siegel_fitting_1abdda93396b3d33a1df9b301bde1ab4fa" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::NelsonSiegelFitting::size</definition>
        <argsstring>() const override</argsstring>
        <name>size</name>
        <qualifiedname>QuantLib::NelsonSiegelFitting::size</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fitted_bond_discount_curve_1_1_fitting_method_1abf97c55767dd73cd02e5541c930617f6">size</reimplements>
        <briefdescription>
<para>total number of coefficients to fit/solve for </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/nonlinearfittingmethods.hpp" line="111" column="14" bodyfile="ql/termstructures/yield/nonlinearfittingmethods.cpp" bodystart="127" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_nelson_siegel_fitting_1ab6e37bcba68b5d04e0e1ca7c6a3d70a9" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a05e8e288a4bdedfe5b4e16d8cec14f1c" kindref="member">DiscountFactor</ref></type>
        <definition>DiscountFactor QuantLib::NelsonSiegelFitting::discountFunction</definition>
        <argsstring>(const Array &amp;x, Time t) const override</argsstring>
        <name>discountFunction</name>
        <qualifiedname>QuantLib::NelsonSiegelFitting::discountFunction</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fitted_bond_discount_curve_1_1_fitting_method_1ac9a84e710d167996e6ab70d3513480f2">discountFunction</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>discount function called by <ref refid="class_quant_lib_1_1_fitted_bond_discount_curve" kindref="compound">FittedBondDiscountCurve</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/nonlinearfittingmethods.hpp" line="112" column="24" bodyfile="ql/termstructures/yield/nonlinearfittingmethods.cpp" bodystart="131" bodyend="140"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Nelson-Siegel fitting method. </para>
    </briefdescription>
    <detaileddescription>
<para>Fits a discount function to the form <formula id="515">$ d(t) = e^{-r t}, $</formula> where the zero rate <formula id="516">$r$</formula> is defined as    <formula id="517">\[r \equiv c_0 + (c_1 + c_2) \left( \frac{1 - e^{-\kappa t}}{\kappa t} \right) -
c_2 e^{ - \kappa t}.
\]</formula> See: Nelson, C. and A. Siegel (1985): &quot;Parsimonious modeling of yield
curves for US Treasury bills.&quot; NBER Working Paper Series, no 1594. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::FittedBondDiscountCurve::FittingMethod</label>
        <link refid="class_quant_lib_1_1_fitted_bond_discount_curve_1_1_fitting_method"/>
      </node>
      <node id="1">
        <label>QuantLib::NelsonSiegelFitting</label>
        <link refid="class_quant_lib_1_1_nelson_siegel_fitting"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="11">
        <label>QuantLib::Array</label>
        <link refid="class_quant_lib_1_1_array"/>
      </node>
      <node id="9">
        <label>QuantLib::Calendar</label>
        <link refid="class_quant_lib_1_1_calendar"/>
      </node>
      <node id="8">
        <label>QuantLib::Extrapolator</label>
        <link refid="class_quant_lib_1_1_extrapolator"/>
      </node>
      <node id="3">
        <label>QuantLib::FittedBondDiscountCurve</label>
        <link refid="class_quant_lib_1_1_fitted_bond_discount_curve"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::FittedBondDiscountCurve::FittingMethod</label>
        <link refid="class_quant_lib_1_1_fitted_bond_discount_curve_1_1_fitting_method"/>
        <childnode refid="3" relation="usage">
          <edgelabel>curve_</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>guessSolution_</edgelabel>
          <edgelabel>solution_</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::NelsonSiegelFitting</label>
        <link refid="class_quant_lib_1_1_nelson_siegel_fitting"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="5">
        <label>QuantLib::TermStructure</label>
        <link refid="class_quant_lib_1_1_term_structure"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>calendar_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::YieldTermStructure</label>
        <link refid="class_quant_lib_1_1_yield_term_structure"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/termstructures/yield/nonlinearfittingmethods.hpp" line="95" column="5" bodyfile="ql/termstructures/yield/nonlinearfittingmethods.hpp" bodystart="96" bodyend="113"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_nelson_siegel_fitting_1ab08f15a92281b758c3289002106cc3df" prot="public" virt="virtual"><scope>QuantLib::NelsonSiegelFitting</scope><name>clone</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1_1_fitting_method_1a1a70aa58b58d49e27750d684c4d3ed84" prot="public" virt="non-virtual"><scope>QuantLib::NelsonSiegelFitting</scope><name>constrainAtZero</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1_1_fitting_method_1a2c0780f412eb30de6bda3dae5bfa931b" prot="protected" virt="non-virtual"><scope>QuantLib::NelsonSiegelFitting</scope><name>constrainAtZero_</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1_1_fitting_method_1a2c8e4660b600fcd54b9d0ea84dbb9beb" prot="public" virt="non-virtual"><scope>QuantLib::NelsonSiegelFitting</scope><name>constraint</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1_1_fitting_method_1ae85a63da8f68ece27bef34f05660966b" prot="protected" virt="non-virtual"><scope>QuantLib::NelsonSiegelFitting</scope><name>costFunction_</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1_1_fitting_method_1a3dee794ba5dac372f875b62d3b6e5c43" prot="protected" virt="non-virtual"><scope>QuantLib::NelsonSiegelFitting</scope><name>curve_</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1_1_fitting_method_1a82287eb87d77404b5a674e657961c363" prot="public" virt="non-virtual"><scope>QuantLib::NelsonSiegelFitting</scope><name>discount</name></member>
      <member refid="class_quant_lib_1_1_nelson_siegel_fitting_1ab6e37bcba68b5d04e0e1ca7c6a3d70a9" prot="private" virt="virtual"><scope>QuantLib::NelsonSiegelFitting</scope><name>discountFunction</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1_1_fitting_method_1a93d0ef859695a2125262d5493e5b8dc1" prot="public" virt="non-virtual"><scope>QuantLib::NelsonSiegelFitting</scope><name>errorCode</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1_1_fitting_method_1ac60d03d7e7d3107f78eccac5fc7cfeb7" prot="protected" virt="non-virtual"><scope>QuantLib::NelsonSiegelFitting</scope><name>FittingMethod</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1_1_fitting_method_1a4bb64cb440e5acd113dc6b997e2babcf" prot="protected" virt="non-virtual"><scope>QuantLib::NelsonSiegelFitting</scope><name>guessSolution_</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1_1_fitting_method_1a1a95e76182041bc74d3e9d81c6c22930" prot="protected" virt="virtual"><scope>QuantLib::NelsonSiegelFitting</scope><name>init</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1_1_fitting_method_1af9fc0011cee001b454cd46e9c6417e86" prot="public" virt="non-virtual"><scope>QuantLib::NelsonSiegelFitting</scope><name>l2</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1_1_fitting_method_1a4e7dd053044cfee0a52a8599b39d251a" prot="public" virt="non-virtual"><scope>QuantLib::NelsonSiegelFitting</scope><name>minimumCostValue</name></member>
      <member refid="class_quant_lib_1_1_nelson_siegel_fitting_1af18001aea095826635f14e4dcb4e7695" prot="public" virt="non-virtual"><scope>QuantLib::NelsonSiegelFitting</scope><name>NelsonSiegelFitting</name></member>
      <member refid="class_quant_lib_1_1_nelson_siegel_fitting_1a40bb9b4289db1280b135efd9990cbe26" prot="public" virt="non-virtual"><scope>QuantLib::NelsonSiegelFitting</scope><name>NelsonSiegelFitting</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1_1_fitting_method_1a5db7d205e64981fd89266e5c057053ba" prot="public" virt="non-virtual"><scope>QuantLib::NelsonSiegelFitting</scope><name>numberOfIterations</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1_1_fitting_method_1af13a932e2c10a94fbecaa422aa247448" prot="public" virt="non-virtual"><scope>QuantLib::NelsonSiegelFitting</scope><name>optimizationMethod</name></member>
      <member refid="class_quant_lib_1_1_nelson_siegel_fitting_1abdda93396b3d33a1df9b301bde1ab4fa" prot="private" virt="virtual"><scope>QuantLib::NelsonSiegelFitting</scope><name>size</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1_1_fitting_method_1af90ece7006cf117bf516ad340d7153b4" prot="public" virt="non-virtual"><scope>QuantLib::NelsonSiegelFitting</scope><name>solution</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1_1_fitting_method_1af3084426c6057ea8302006cfb22c3e70" prot="protected" virt="non-virtual"><scope>QuantLib::NelsonSiegelFitting</scope><name>solution_</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1_1_fitting_method_1afbfb66bd76f54a51d098f1b9b4a41b72" prot="public" virt="non-virtual"><scope>QuantLib::NelsonSiegelFitting</scope><name>weights</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1_1_fitting_method_1adb1e0ed4d48a4f03cc92251e4c5f8077" prot="public" virt="virtual"><scope>QuantLib::NelsonSiegelFitting</scope><name>~FittingMethod</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

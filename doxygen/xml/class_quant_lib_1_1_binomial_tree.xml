<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_binomial_tree" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::BinomialTree</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_tree" prot="public" virt="non-virtual">QuantLib::Tree&lt; T &gt;</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_equal_jumps_binomial_tree" prot="public" virt="non-virtual">QuantLib::EqualJumpsBinomialTree&lt; T &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_equal_probabilities_binomial_tree" prot="public" virt="non-virtual">QuantLib::EqualProbabilitiesBinomialTree&lt; T &gt;</derivedcompoundref>
    <includes refid="binomialtree_8hpp" local="no">binomialtree.hpp</includes>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_quant_lib_1_1_binomial_tree_1abac51ac321edcf6705b9fd62e5d4f6e7" prot="public" static="no" strong="no">
        <type></type>
        <name>Branches</name>
        <qualifiedname>QuantLib::BinomialTree::Branches</qualifiedname>
        <enumvalue id="class_quant_lib_1_1_binomial_tree_1abac51ac321edcf6705b9fd62e5d4f6e7ae76994f55191e538deb504d5fef1c481" prot="public">
          <name>branches</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/binomialtree.hpp" line="41" column="9" bodyfile="ql/methods/lattices/binomialtree.hpp" bodystart="41" bodyend="41"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_binomial_tree_1a664b6476786a374e5f1805240528feda" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::BinomialTree&lt; T &gt;::x0_</definition>
        <argsstring></argsstring>
        <name>x0_</name>
        <qualifiedname>QuantLib::BinomialTree::x0_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/binomialtree.hpp" line="55" column="14" bodyfile="ql/methods/lattices/binomialtree.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_binomial_tree_1a848c46504adda17faed1042b2210284e" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::BinomialTree&lt; T &gt;::driftPerStep_</definition>
        <argsstring></argsstring>
        <name>driftPerStep_</name>
        <qualifiedname>QuantLib::BinomialTree::driftPerStep_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/binomialtree.hpp" line="55" column="18" bodyfile="ql/methods/lattices/binomialtree.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_binomial_tree_1abbad6eed306ff42cfa5a315a8024081b" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>Time QuantLib::BinomialTree&lt; T &gt;::dt_</definition>
        <argsstring></argsstring>
        <name>dt_</name>
        <qualifiedname>QuantLib::BinomialTree::dt_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/binomialtree.hpp" line="56" column="14" bodyfile="ql/methods/lattices/binomialtree.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_binomial_tree_1a76e8c8f9a83579b158add6aef4505c3c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::BinomialTree&lt; T &gt;::BinomialTree</definition>
        <argsstring>(const ext::shared_ptr&lt; StochasticProcess1D &gt; &amp;process, Time end, Size steps)</argsstring>
        <name>BinomialTree</name>
        <qualifiedname>QuantLib::BinomialTree::BinomialTree</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_stochastic_process1_d" kindref="compound">StochasticProcess1D</ref> &gt; &amp;</type>
          <declname>process</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/binomialtree.hpp" line="42" column="9" bodyfile="ql/methods/lattices/binomialtree.hpp" bodystart="42" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_binomial_tree_1abb0476c508dbab415d267d36b0522383" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::BinomialTree&lt; T &gt;::size</definition>
        <argsstring>(Size i) const</argsstring>
        <name>size</name>
        <qualifiedname>QuantLib::BinomialTree::size</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/binomialtree.hpp" line="48" column="14" bodyfile="ql/methods/lattices/binomialtree.hpp" bodystart="48" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_binomial_tree_1ae8d564f5802d362d6d9f9e972b642945" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::BinomialTree&lt; T &gt;::descendant</definition>
        <argsstring>(Size, Size index, Size branch) const</argsstring>
        <name>descendant</name>
        <qualifiedname>QuantLib::BinomialTree::descendant</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>branch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/binomialtree.hpp" line="51" column="14" bodyfile="ql/methods/lattices/binomialtree.hpp" bodystart="51" bodyend="53"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Binomial tree base class. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::BinomialTree&lt; T &gt;</label>
        <link refid="class_quant_lib_1_1_binomial_tree"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::CuriouslyRecurringTemplate&lt; T &gt;</label>
        <link refid="class_quant_lib_1_1_curiously_recurring_template"/>
      </node>
      <node id="4">
        <label>QuantLib::EqualJumpsBinomialTree&lt; T &gt;</label>
        <link refid="class_quant_lib_1_1_equal_jumps_binomial_tree"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::EqualProbabilitiesBinomialTree&lt; T &gt;</label>
        <link refid="class_quant_lib_1_1_equal_probabilities_binomial_tree"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Tree&lt; T &gt;</label>
        <link refid="class_quant_lib_1_1_tree"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::BinomialTree&lt; T &gt;</label>
        <link refid="class_quant_lib_1_1_binomial_tree"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::CuriouslyRecurringTemplate&lt; T &gt;</label>
        <link refid="class_quant_lib_1_1_curiously_recurring_template"/>
      </node>
      <node id="2">
        <label>QuantLib::Tree&lt; T &gt;</label>
        <link refid="class_quant_lib_1_1_tree"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/methods/lattices/binomialtree.hpp" line="39" column="5" bodyfile="ql/methods/lattices/binomialtree.hpp" bodystart="39" bodyend="57"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_binomial_tree_1a76e8c8f9a83579b158add6aef4505c3c" prot="public" virt="non-virtual"><scope>QuantLib::BinomialTree</scope><name>BinomialTree</name></member>
      <member refid="class_quant_lib_1_1_binomial_tree_1abac51ac321edcf6705b9fd62e5d4f6e7" prot="public" virt="non-virtual"><scope>QuantLib::BinomialTree</scope><name>Branches</name></member>
      <member refid="class_quant_lib_1_1_binomial_tree_1abac51ac321edcf6705b9fd62e5d4f6e7ae76994f55191e538deb504d5fef1c481" prot="public" virt="non-virtual"><scope>QuantLib::BinomialTree</scope><name>branches</name></member>
      <member refid="class_quant_lib_1_1_tree_1ad67606506e0773cb697aa0826dd953b2" prot="public" virt="non-virtual"><scope>QuantLib::BinomialTree</scope><name>columns</name></member>
      <member refid="class_quant_lib_1_1_curiously_recurring_template_1ac51e69d7c3e616686e8777fcabebf954" prot="protected" virt="non-virtual"><scope>QuantLib::BinomialTree</scope><name>CuriouslyRecurringTemplate</name></member>
      <member refid="class_quant_lib_1_1_binomial_tree_1ae8d564f5802d362d6d9f9e972b642945" prot="public" virt="non-virtual"><scope>QuantLib::BinomialTree</scope><name>descendant</name></member>
      <member refid="class_quant_lib_1_1_binomial_tree_1a848c46504adda17faed1042b2210284e" prot="protected" virt="non-virtual"><scope>QuantLib::BinomialTree</scope><name>driftPerStep_</name></member>
      <member refid="class_quant_lib_1_1_binomial_tree_1abbad6eed306ff42cfa5a315a8024081b" prot="protected" virt="non-virtual"><scope>QuantLib::BinomialTree</scope><name>dt_</name></member>
      <member refid="class_quant_lib_1_1_curiously_recurring_template_1a72c11590c74c9d0085fd43f17cdfe96e" prot="protected" virt="non-virtual"><scope>QuantLib::BinomialTree</scope><name>impl</name></member>
      <member refid="class_quant_lib_1_1_curiously_recurring_template_1a9efaa4c38bfca1e148ed265a809ed220" prot="protected" virt="non-virtual"><scope>QuantLib::BinomialTree</scope><name>impl</name></member>
      <member refid="class_quant_lib_1_1_binomial_tree_1abb0476c508dbab415d267d36b0522383" prot="public" virt="non-virtual"><scope>QuantLib::BinomialTree</scope><name>size</name></member>
      <member refid="class_quant_lib_1_1_tree_1a50c9a44fb22df3c7d5916a8ff80d79b9" prot="public" virt="non-virtual"><scope>QuantLib::BinomialTree</scope><name>Tree</name></member>
      <member refid="class_quant_lib_1_1_binomial_tree_1a664b6476786a374e5f1805240528feda" prot="protected" virt="non-virtual"><scope>QuantLib::BinomialTree</scope><name>x0_</name></member>
      <member refid="class_quant_lib_1_1_curiously_recurring_template_1ae22b4353d3c05a5aad5f5b8769392b05" prot="protected" virt="non-virtual"><scope>QuantLib::BinomialTree</scope><name>~CuriouslyRecurringTemplate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

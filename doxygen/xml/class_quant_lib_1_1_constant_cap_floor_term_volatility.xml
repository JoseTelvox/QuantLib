<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_constant_cap_floor_term_volatility" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::ConstantCapFloorTermVolatility</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_cap_floor_term_volatility_structure" prot="public" virt="non-virtual">QuantLib::CapFloorTermVolatilityStructure</basecompoundref>
    <includes refid="constantcapfloortermvol_8hpp" local="no">constantcapfloortermvol.hpp</includes>
    <sectiondef kind="user-defined">
      <header>VolatilityTermStructure interface</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_constant_cap_floor_term_volatility_1ad2eedea3e0e16a204dfdee1ea1a5bc71" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
        <definition>Handle&lt;Quote&gt; QuantLib::ConstantCapFloorTermVolatility::volatility_</definition>
        <argsstring></argsstring>
        <name>volatility_</name>
        <qualifiedname>QuantLib::ConstantCapFloorTermVolatility::volatility_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/capfloor/constantcapfloortermvol.hpp" line="73" column="16" bodyfile="ql/termstructures/volatility/capfloor/constantcapfloortermvol.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_constant_cap_floor_term_volatility_1a8ca9334183ffa508e9015a8a8e40b403" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ConstantCapFloorTermVolatility::minStrike</definition>
        <argsstring>() const override</argsstring>
        <name>minStrike</name>
        <qualifiedname>QuantLib::ConstantCapFloorTermVolatility::minStrike</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_volatility_term_structure_1a71a5c8f0fb8d9d478126f79d975cb26f">minStrike</reimplements>
        <briefdescription>
<para>the minimum strike for which the term structure can return vols </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/capfloor/constantcapfloortermvol.hpp" line="66" column="14" bodyfile="ql/termstructures/volatility/capfloor/constantcapfloortermvol.hpp" bodystart="83" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_constant_cap_floor_term_volatility_1a04a2c7cfe40e8a679f2a19e4323de12d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ConstantCapFloorTermVolatility::maxStrike</definition>
        <argsstring>() const override</argsstring>
        <name>maxStrike</name>
        <qualifiedname>QuantLib::ConstantCapFloorTermVolatility::maxStrike</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_volatility_term_structure_1a31f164f3562124b7de3ea6caf0af08a9">maxStrike</reimplements>
        <briefdescription>
<para>the maximum strike for which the term structure can return vols </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/capfloor/constantcapfloortermvol.hpp" line="67" column="14" bodyfile="ql/termstructures/volatility/capfloor/constantcapfloortermvol.hpp" bodystart="87" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_constant_cap_floor_term_volatility_1a684947525a8bab54481ad56d90f60ad3" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
        <definition>Volatility QuantLib::ConstantCapFloorTermVolatility::volatilityImpl</definition>
        <argsstring>(Time, Rate) const override</argsstring>
        <name>volatilityImpl</name>
        <qualifiedname>QuantLib::ConstantCapFloorTermVolatility::volatilityImpl</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_cap_floor_term_volatility_structure_1ad2b1f040e745c1915649f2f4f6297899">volatilityImpl</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <briefdescription>
<para>implements the actual volatility calculation in derived classes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/capfloor/constantcapfloortermvol.hpp" line="70" column="20" bodyfile="ql/termstructures/volatility/capfloor/constantcapfloortermvol.cpp" bodystart="66" bodyend="69"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>TermStructure interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_constant_cap_floor_term_volatility_1a0cf58fd72062b0266ded61f53a8ace65" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::ConstantCapFloorTermVolatility::maxDate</definition>
        <argsstring>() const override</argsstring>
        <name>maxDate</name>
        <qualifiedname>QuantLib::ConstantCapFloorTermVolatility::maxDate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_term_structure_1ae9af756bbddc15962711f77f514f08fa">maxDate</reimplements>
        <briefdescription>
<para>the latest date for which the curve can return values </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/capfloor/constantcapfloortermvol.hpp" line="62" column="14" bodyfile="ql/termstructures/volatility/capfloor/constantcapfloortermvol.hpp" bodystart="79" bodyend="81"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_constant_cap_floor_term_volatility_1ad3141d92303a810f0e569e5d6c45ca00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ConstantCapFloorTermVolatility::ConstantCapFloorTermVolatility</definition>
        <argsstring>(Natural settlementDays, const Calendar &amp;cal, BusinessDayConvention bdc, Handle&lt; Quote &gt; volatility, const DayCounter &amp;dc)</argsstring>
        <name>ConstantCapFloorTermVolatility</name>
        <qualifiedname>QuantLib::ConstantCapFloorTermVolatility::ConstantCapFloorTermVolatility</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>settlementDays</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>cal</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
          <declname>bdc</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
          <declname>volatility</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <briefdescription>
<para>floating reference date, floating market data </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/capfloor/constantcapfloortermvol.hpp" line="37" column="9" bodyfile="ql/termstructures/volatility/capfloor/constantcapfloortermvol.cpp" bodystart="27" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_constant_cap_floor_term_volatility_1a146f2c9d8f533e4dc645837302d09897" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ConstantCapFloorTermVolatility::ConstantCapFloorTermVolatility</definition>
        <argsstring>(const Date &amp;referenceDate, const Calendar &amp;cal, BusinessDayConvention bdc, Handle&lt; Quote &gt; volatility, const DayCounter &amp;dc)</argsstring>
        <name>ConstantCapFloorTermVolatility</name>
        <qualifiedname>QuantLib::ConstantCapFloorTermVolatility::ConstantCapFloorTermVolatility</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>referenceDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>cal</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
          <declname>bdc</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
          <declname>volatility</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <briefdescription>
<para>fixed reference date, floating market data </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/capfloor/constantcapfloortermvol.hpp" line="43" column="9" bodyfile="ql/termstructures/volatility/capfloor/constantcapfloortermvol.cpp" bodystart="37" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_constant_cap_floor_term_volatility_1a6313ef4929c673d8d1afbeb9959956d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ConstantCapFloorTermVolatility::ConstantCapFloorTermVolatility</definition>
        <argsstring>(Natural settlementDays, const Calendar &amp;cal, BusinessDayConvention bdc, Volatility volatility, const DayCounter &amp;dc)</argsstring>
        <name>ConstantCapFloorTermVolatility</name>
        <qualifiedname>QuantLib::ConstantCapFloorTermVolatility::ConstantCapFloorTermVolatility</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>settlementDays</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>cal</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
          <declname>bdc</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
          <declname>volatility</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <briefdescription>
<para>floating reference date, fixed market data </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/capfloor/constantcapfloortermvol.hpp" line="49" column="9" bodyfile="ql/termstructures/volatility/capfloor/constantcapfloortermvol.cpp" bodystart="47" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_constant_cap_floor_term_volatility_1a147148ee2d0c3776a0a6d52989c551d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ConstantCapFloorTermVolatility::ConstantCapFloorTermVolatility</definition>
        <argsstring>(const Date &amp;referenceDate, const Calendar &amp;cal, BusinessDayConvention bdc, Volatility volatility, const DayCounter &amp;dc)</argsstring>
        <name>ConstantCapFloorTermVolatility</name>
        <qualifiedname>QuantLib::ConstantCapFloorTermVolatility::ConstantCapFloorTermVolatility</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>referenceDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>cal</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
          <declname>bdc</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
          <declname>volatility</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <briefdescription>
<para>fixed reference date, fixed market data </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/capfloor/constantcapfloortermvol.hpp" line="55" column="9" bodyfile="ql/termstructures/volatility/capfloor/constantcapfloortermvol.cpp" bodystart="57" bodyend="64"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Constant caplet volatility, no time-strike dependence. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::CapFloorTermVolatilityStructure</label>
        <link refid="class_quant_lib_1_1_cap_floor_term_volatility_structure"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::ConstantCapFloorTermVolatility</label>
        <link refid="class_quant_lib_1_1_constant_cap_floor_term_volatility"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::Extrapolator</label>
        <link refid="class_quant_lib_1_1_extrapolator"/>
      </node>
      <node id="6">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="4">
        <label>QuantLib::TermStructure</label>
        <link refid="class_quant_lib_1_1_term_structure"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::VolatilityTermStructure</label>
        <link refid="class_quant_lib_1_1_volatility_term_structure"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8">
        <label>QuantLib::Calendar</label>
        <link refid="class_quant_lib_1_1_calendar"/>
      </node>
      <node id="2">
        <label>QuantLib::CapFloorTermVolatilityStructure</label>
        <link refid="class_quant_lib_1_1_cap_floor_term_volatility_structure"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::ConstantCapFloorTermVolatility</label>
        <link refid="class_quant_lib_1_1_constant_cap_floor_term_volatility"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::Extrapolator</label>
        <link refid="class_quant_lib_1_1_extrapolator"/>
      </node>
      <node id="6">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="4">
        <label>QuantLib::TermStructure</label>
        <link refid="class_quant_lib_1_1_term_structure"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>calendar_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::VolatilityTermStructure</label>
        <link refid="class_quant_lib_1_1_volatility_term_structure"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/termstructures/volatility/capfloor/constantcapfloortermvol.hpp" line="34" column="5" bodyfile="ql/termstructures/volatility/capfloor/constantcapfloortermvol.hpp" bodystart="34" bodyend="74"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_extrapolator_1ab3936a9b5b5c163d3e511437c16c1d9e" prot="public" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>allowsExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_volatility_term_structure_1aaa1bad703d789d96a86c0d09f5bd0c05" prot="public" virt="virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>businessDayConvention</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac4ea5cbce495c9a47a44eeaedf7a9d45" prot="public" virt="virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>calendar</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a0a09e3fa8cdfbc9aa9685da0c35ccb90" prot="protected" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>calendar_</name></member>
      <member refid="class_quant_lib_1_1_cap_floor_term_volatility_structure_1a8fa8e1a4725718459a9a8ae5dda3ea2c" prot="public" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>CapFloorTermVolatilityStructure</name></member>
      <member refid="class_quant_lib_1_1_cap_floor_term_volatility_structure_1a2093ad3c86d989f7c7db80e996790f29" prot="public" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>CapFloorTermVolatilityStructure</name></member>
      <member refid="class_quant_lib_1_1_cap_floor_term_volatility_structure_1a28b05a7aa136a3a4198f13629e73819a" prot="public" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>CapFloorTermVolatilityStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1aa7297742ffbeeb0c7611f90a0f7d15bf" prot="protected" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>checkRange</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a4d246bcb13b7518a75088bf7cf01ea75" prot="protected" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>checkRange</name></member>
      <member refid="class_quant_lib_1_1_volatility_term_structure_1aad02ea6fe4bf30c662adaf01a46d5537" prot="protected" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>checkStrike</name></member>
      <member refid="class_quant_lib_1_1_constant_cap_floor_term_volatility_1ad3141d92303a810f0e569e5d6c45ca00" prot="public" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>ConstantCapFloorTermVolatility</name></member>
      <member refid="class_quant_lib_1_1_constant_cap_floor_term_volatility_1a146f2c9d8f533e4dc645837302d09897" prot="public" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>ConstantCapFloorTermVolatility</name></member>
      <member refid="class_quant_lib_1_1_constant_cap_floor_term_volatility_1a6313ef4929c673d8d1afbeb9959956d0" prot="public" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>ConstantCapFloorTermVolatility</name></member>
      <member refid="class_quant_lib_1_1_constant_cap_floor_term_volatility_1a147148ee2d0c3776a0a6d52989c551d2" prot="public" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>ConstantCapFloorTermVolatility</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac03e725e4e0685b209caa626b00924ca" prot="public" virt="virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>dayCounter</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1a6af69387d5cae0fe84d6a0c858406218" prot="public" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>disableExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1a5f7b5650a44d6c63095bc739470c8bfb" prot="public" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>enableExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1af1c3adaccdfaf07d3d07edaa234444f7" prot="public" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>Extrapolator</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_constant_cap_floor_term_volatility_1a0cf58fd72062b0266ded61f53a8ace65" prot="public" virt="virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>maxDate</name></member>
      <member refid="class_quant_lib_1_1_constant_cap_floor_term_volatility_1a04a2c7cfe40e8a679f2a19e4323de12d" prot="public" virt="virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>maxStrike</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a2f820c32e198e1046d97ca3dd9a807c5" prot="public" virt="virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>maxTime</name></member>
      <member refid="class_quant_lib_1_1_constant_cap_floor_term_volatility_1a8ca9334183ffa508e9015a8a8e40b403" prot="public" virt="virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>minStrike</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a8319e5c2c37b09a825d61210c9cb8e2a" prot="protected" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>moving_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::QuantLib::Observable::"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_volatility_term_structure_1a22aae9cc9f2deb51962cc13092de98b5" prot="public" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>optionDateFromTenor</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1accbf3d4af41db0333d456eb5616c4e1e" prot="public" virt="virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>referenceDate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1abeb79eefda70a9414f206ca9e70ced0f" prot="public" virt="virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>settlementDays</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac8365997e6d41134b4e0998fe6b4e949" prot="public" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>TermStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a95764a49e0368b653eadbe619d9ef334" prot="public" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>TermStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1aab73d2acafdc8fbdf9336e7084bd88a1" prot="public" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>TermStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac8da61eb0f06ae07a35e8e4bbe7146b0" prot="public" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>timeFromReference</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a016528f1fe9cabca6472d8f4776351e2" prot="public" virt="virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a2fcf1c78e57786ad5c123f52dbf619e8" prot="protected" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>updated_</name></member>
      <member refid="class_quant_lib_1_1_cap_floor_term_volatility_structure_1a16d7f709a5914ecab3e1a60a2c8b963e" prot="public" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>volatility</name></member>
      <member refid="class_quant_lib_1_1_cap_floor_term_volatility_structure_1aa7e88c9f288a4b323e5cfcf743c4d25d" prot="public" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>volatility</name></member>
      <member refid="class_quant_lib_1_1_cap_floor_term_volatility_structure_1a5797f4b2ba756e5e9fb50436a63ebe27" prot="public" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>volatility</name></member>
      <member refid="class_quant_lib_1_1_constant_cap_floor_term_volatility_1ad2eedea3e0e16a204dfdee1ea1a5bc71" prot="private" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>volatility_</name></member>
      <member refid="class_quant_lib_1_1_constant_cap_floor_term_volatility_1a684947525a8bab54481ad56d90f60ad3" prot="protected" virt="virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>volatilityImpl</name></member>
      <member refid="class_quant_lib_1_1_volatility_term_structure_1adfc4d4619ecf74dd849ba4fdf0b36d22" prot="public" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>VolatilityTermStructure</name></member>
      <member refid="class_quant_lib_1_1_volatility_term_structure_1aa43b8722cce970ee126cc5907026f860" prot="public" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>VolatilityTermStructure</name></member>
      <member refid="class_quant_lib_1_1_volatility_term_structure_1a10cfe1d03a1cfd642e7608d019f2cafc" prot="public" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>VolatilityTermStructure</name></member>
      <member refid="class_quant_lib_1_1_cap_floor_term_volatility_structure_1af9862d6c80e860b7b43eed29db349957" prot="public" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>~CapFloorTermVolatilityStructure</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1af0ca0156436ffbce159183198eb27e2e" prot="public" virt="virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>~Extrapolator</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ad202ddcc14fc4a6c16686d6164d7b36c" prot="public" virt="non-virtual"><scope>QuantLib::ConstantCapFloorTermVolatility</scope><name>~TermStructure</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

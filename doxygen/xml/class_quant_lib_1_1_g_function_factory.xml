<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_g_function_factory" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::GFunctionFactory</compoundname>
    <innerclass refid="class_quant_lib_1_1_g_function_factory_1_1_g_function_exact_yield" prot="private">QuantLib::GFunctionFactory::GFunctionExactYield</innerclass>
    <innerclass refid="class_quant_lib_1_1_g_function_factory_1_1_g_function_standard" prot="private">QuantLib::GFunctionFactory::GFunctionStandard</innerclass>
    <innerclass refid="class_quant_lib_1_1_g_function_factory_1_1_g_function_with_shifts" prot="private">QuantLib::GFunctionFactory::GFunctionWithShifts</innerclass>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_quant_lib_1_1_g_function_factory_1a61c4b3f9e74cd8cb22f96eb4b0e1a2f7" prot="public" static="no" strong="no">
        <type></type>
        <name>YieldCurveModel</name>
        <qualifiedname>QuantLib::GFunctionFactory::YieldCurveModel</qualifiedname>
        <enumvalue id="class_quant_lib_1_1_g_function_factory_1a61c4b3f9e74cd8cb22f96eb4b0e1a2f7ad4a2ae733569c325e22e5e8f7de85d5e" prot="public">
          <name>Standard</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_g_function_factory_1a61c4b3f9e74cd8cb22f96eb4b0e1a2f7ac6286a660ef6120c6964724e37ee1feb" prot="public">
          <name>ExactYield</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_g_function_factory_1a61c4b3f9e74cd8cb22f96eb4b0e1a2f7afab545f138f4bf2dc2b75dc6a24b24de" prot="public">
          <name>ParallelShifts</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_g_function_factory_1a61c4b3f9e74cd8cb22f96eb4b0e1a2f7a4c09dcf23d634a5ace62dffed99abc93" prot="public">
          <name>NonParallelShifts</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/conundrumpricer.hpp" line="74" column="9" bodyfile="ql/cashflows/conundrumpricer.hpp" bodystart="74" bodyend="78"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_g_function_factory_1af2065445cbadce2b6a79263984fc3d81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::GFunctionFactory::GFunctionFactory</definition>
        <argsstring>()=delete</argsstring>
        <name>GFunctionFactory</name>
        <qualifiedname>QuantLib::GFunctionFactory::GFunctionFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/conundrumpricer.hpp" line="80" column="9"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_quant_lib_1_1_g_function_factory_1ae8d2f365b6f89ce85cd30a3e3ac43a56" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_g_function" kindref="compound">GFunction</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; GFunction &gt; QuantLib::GFunctionFactory::newGFunctionStandard</definition>
        <argsstring>(Size q, Real delta, Size swapLength)</argsstring>
        <name>newGFunctionStandard</name>
        <qualifiedname>QuantLib::GFunctionFactory::newGFunctionStandard</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>q</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>delta</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>swapLength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/conundrumpricer.hpp" line="83" column="9" bodyfile="ql/cashflows/conundrumpricer.cpp" bodystart="631" bodyend="634"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_g_function_factory_1a3a96709538628aff5c6d6074271eb1b2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_g_function" kindref="compound">GFunction</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; GFunction &gt; QuantLib::GFunctionFactory::newGFunctionExactYield</definition>
        <argsstring>(const CmsCoupon &amp;coupon)</argsstring>
        <name>newGFunctionExactYield</name>
        <qualifiedname>QuantLib::GFunctionFactory::newGFunctionExactYield</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_cms_coupon" kindref="compound">CmsCoupon</ref> &amp;</type>
          <declname>coupon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/conundrumpricer.hpp" line="87" column="9" bodyfile="ql/cashflows/conundrumpricer.cpp" bodystart="726" bodyend="728"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_g_function_factory_1a9e4030188888534a3e5a3ec9e8cf522a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_g_function" kindref="compound">GFunction</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; GFunction &gt; QuantLib::GFunctionFactory::newGFunctionWithShifts</definition>
        <argsstring>(const CmsCoupon &amp;coupon, const Handle&lt; Quote &gt; &amp;meanReversion)</argsstring>
        <name>newGFunctionWithShifts</name>
        <qualifiedname>QuantLib::GFunctionFactory::newGFunctionWithShifts</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_cms_coupon" kindref="compound">CmsCoupon</ref> &amp;</type>
          <declname>coupon</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &amp;</type>
          <declname>meanReversion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/conundrumpricer.hpp" line="89" column="9" bodyfile="ql/cashflows/conundrumpricer.cpp" bodystart="982" bodyend="985"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/cashflows/conundrumpricer.hpp" line="72" column="5" bodyfile="ql/cashflows/conundrumpricer.hpp" bodystart="72" bodyend="175"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_g_function_factory_1a61c4b3f9e74cd8cb22f96eb4b0e1a2f7ac6286a660ef6120c6964724e37ee1feb" prot="public" virt="non-virtual"><scope>QuantLib::GFunctionFactory</scope><name>ExactYield</name></member>
      <member refid="class_quant_lib_1_1_g_function_factory_1af2065445cbadce2b6a79263984fc3d81" prot="public" virt="non-virtual"><scope>QuantLib::GFunctionFactory</scope><name>GFunctionFactory</name></member>
      <member refid="class_quant_lib_1_1_g_function_factory_1a3a96709538628aff5c6d6074271eb1b2" prot="public" virt="non-virtual"><scope>QuantLib::GFunctionFactory</scope><name>newGFunctionExactYield</name></member>
      <member refid="class_quant_lib_1_1_g_function_factory_1ae8d2f365b6f89ce85cd30a3e3ac43a56" prot="public" virt="non-virtual"><scope>QuantLib::GFunctionFactory</scope><name>newGFunctionStandard</name></member>
      <member refid="class_quant_lib_1_1_g_function_factory_1a9e4030188888534a3e5a3ec9e8cf522a" prot="public" virt="non-virtual"><scope>QuantLib::GFunctionFactory</scope><name>newGFunctionWithShifts</name></member>
      <member refid="class_quant_lib_1_1_g_function_factory_1a61c4b3f9e74cd8cb22f96eb4b0e1a2f7a4c09dcf23d634a5ace62dffed99abc93" prot="public" virt="non-virtual"><scope>QuantLib::GFunctionFactory</scope><name>NonParallelShifts</name></member>
      <member refid="class_quant_lib_1_1_g_function_factory_1a61c4b3f9e74cd8cb22f96eb4b0e1a2f7afab545f138f4bf2dc2b75dc6a24b24de" prot="public" virt="non-virtual"><scope>QuantLib::GFunctionFactory</scope><name>ParallelShifts</name></member>
      <member refid="class_quant_lib_1_1_g_function_factory_1a61c4b3f9e74cd8cb22f96eb4b0e1a2f7ad4a2ae733569c325e22e5e8f7de85d5e" prot="public" virt="non-virtual"><scope>QuantLib::GFunctionFactory</scope><name>Standard</name></member>
      <member refid="class_quant_lib_1_1_g_function_factory_1a61c4b3f9e74cd8cb22f96eb4b0e1a2f7" prot="public" virt="non-virtual"><scope>QuantLib::GFunctionFactory</scope><name>YieldCurveModel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

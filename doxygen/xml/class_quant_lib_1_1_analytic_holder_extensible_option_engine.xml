<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_analytic_holder_extensible_option_engine" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::AnalyticHolderExtensibleOptionEngine</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_holder_extensible_option_1_1engine" prot="public" virt="non-virtual">QuantLib::HolderExtensibleOption::engine</basecompoundref>
    <includes refid="pricingengines_2exotic_2analyticholderextensibleoptionengine_8hpp" local="no">analyticholderextensibleoptionengine.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1a5235ca4dc730e9b2ed95f25d1c194e57" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_generalized_black_scholes_process" kindref="compound">GeneralizedBlackScholesProcess</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;GeneralizedBlackScholesProcess&gt; QuantLib::AnalyticHolderExtensibleOptionEngine::process_</definition>
        <argsstring></argsstring>
        <name>process_</name>
        <qualifiedname>QuantLib::AnalyticHolderExtensibleOptionEngine::process_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/exotic/analyticholderextensibleoptionengine.hpp" line="43" column="25" bodyfile="ql/pricingengines/exotic/analyticholderextensibleoptionengine.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1a1cfe70e4c1cc664aac658bf9504b1d02" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::AnalyticHolderExtensibleOptionEngine::AnalyticHolderExtensibleOptionEngine</definition>
        <argsstring>(ext::shared_ptr&lt; GeneralizedBlackScholesProcess &gt; process)</argsstring>
        <name>AnalyticHolderExtensibleOptionEngine</name>
        <qualifiedname>QuantLib::AnalyticHolderExtensibleOptionEngine::AnalyticHolderExtensibleOptionEngine</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_generalized_black_scholes_process" kindref="compound">GeneralizedBlackScholesProcess</ref> &gt;</type>
          <declname>process</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/exotic/analyticholderextensibleoptionengine.hpp" line="38" column="18" bodyfile="ql/pricingengines/exotic/analyticholderextensibleoptionengine.cpp" bodystart="32" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1a6fcbd5f278a6606af745e085ef51540c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::AnalyticHolderExtensibleOptionEngine::calculate</definition>
        <argsstring>() const override</argsstring>
        <name>calculate</name>
        <qualifiedname>QuantLib::AnalyticHolderExtensibleOptionEngine::calculate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_pricing_engine_1ad2be11cff80d9792f0cc8231711fcb06">calculate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/exotic/analyticholderextensibleoptionengine.hpp" line="40" column="14" bodyfile="ql/pricingengines/exotic/analyticholderextensibleoptionengine.cpp" bodystart="38" bodyend="93"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1a6fc0033d5287d8db7e8d405aac011e64" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticHolderExtensibleOptionEngine::strike</definition>
        <argsstring>() const</argsstring>
        <name>strike</name>
        <qualifiedname>QuantLib::AnalyticHolderExtensibleOptionEngine::strike</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/exotic/analyticholderextensibleoptionengine.hpp" line="44" column="14" bodyfile="ql/pricingengines/exotic/analyticholderextensibleoptionengine.cpp" bodystart="264" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1a692d24379e352c183e525b7e474cfd5c" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>Time QuantLib::AnalyticHolderExtensibleOptionEngine::firstExpiryTime</definition>
        <argsstring>() const</argsstring>
        <name>firstExpiryTime</name>
        <qualifiedname>QuantLib::AnalyticHolderExtensibleOptionEngine::firstExpiryTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/exotic/analyticholderextensibleoptionengine.hpp" line="45" column="14" bodyfile="ql/pricingengines/exotic/analyticholderextensibleoptionengine.cpp" bodystart="271" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1af151547353ac1f3bdab02c4ce089b1f4" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>Time QuantLib::AnalyticHolderExtensibleOptionEngine::secondExpiryTime</definition>
        <argsstring>() const</argsstring>
        <name>secondExpiryTime</name>
        <qualifiedname>QuantLib::AnalyticHolderExtensibleOptionEngine::secondExpiryTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/exotic/analyticholderextensibleoptionengine.hpp" line="46" column="14" bodyfile="ql/pricingengines/exotic/analyticholderextensibleoptionengine.cpp" bodystart="275" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1a5a773a71009d0b1b42053ced057bee04" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
        <definition>Volatility QuantLib::AnalyticHolderExtensibleOptionEngine::volatility</definition>
        <argsstring>() const</argsstring>
        <name>volatility</name>
        <qualifiedname>QuantLib::AnalyticHolderExtensibleOptionEngine::volatility</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/exotic/analyticholderextensibleoptionengine.hpp" line="47" column="20" bodyfile="ql/pricingengines/exotic/analyticholderextensibleoptionengine.cpp" bodystart="279" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1a338bef38470cfad5fd40229d54884c41" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::AnalyticHolderExtensibleOptionEngine::riskFreeRate</definition>
        <argsstring>() const</argsstring>
        <name>riskFreeRate</name>
        <qualifiedname>QuantLib::AnalyticHolderExtensibleOptionEngine::riskFreeRate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/exotic/analyticholderextensibleoptionengine.hpp" line="48" column="14" bodyfile="ql/pricingengines/exotic/analyticholderextensibleoptionengine.cpp" bodystart="282" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1a05a3df7bad6ffc254dd0d1e82fdfa514" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::AnalyticHolderExtensibleOptionEngine::dividendYield</definition>
        <argsstring>() const</argsstring>
        <name>dividendYield</name>
        <qualifiedname>QuantLib::AnalyticHolderExtensibleOptionEngine::dividendYield</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/exotic/analyticholderextensibleoptionengine.hpp" line="49" column="14" bodyfile="ql/pricingengines/exotic/analyticholderextensibleoptionengine.cpp" bodystart="286" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1a8374953529ed862db4dabbaf2c772cb2" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a05e8e288a4bdedfe5b4e16d8cec14f1c" kindref="member">DiscountFactor</ref></type>
        <definition>DiscountFactor QuantLib::AnalyticHolderExtensibleOptionEngine::dividendDiscount</definition>
        <argsstring>(Time t) const</argsstring>
        <name>dividendDiscount</name>
        <qualifiedname>QuantLib::AnalyticHolderExtensibleOptionEngine::dividendDiscount</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/exotic/analyticholderextensibleoptionengine.hpp" line="50" column="24" bodyfile="ql/pricingengines/exotic/analyticholderextensibleoptionengine.cpp" bodystart="291" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1aa03904fa5076b7be0bd2e61cec59fd10" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a05e8e288a4bdedfe5b4e16d8cec14f1c" kindref="member">DiscountFactor</ref></type>
        <definition>DiscountFactor QuantLib::AnalyticHolderExtensibleOptionEngine::riskFreeDiscount</definition>
        <argsstring>(Time t) const</argsstring>
        <name>riskFreeDiscount</name>
        <qualifiedname>QuantLib::AnalyticHolderExtensibleOptionEngine::riskFreeDiscount</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/exotic/analyticholderextensibleoptionengine.hpp" line="51" column="24" bodyfile="ql/pricingengines/exotic/analyticholderextensibleoptionengine.cpp" bodystart="295" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1a0ec6926f06e5c844d39ea25c195b8d28" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticHolderExtensibleOptionEngine::I1Call</definition>
        <argsstring>() const</argsstring>
        <name>I1Call</name>
        <qualifiedname>QuantLib::AnalyticHolderExtensibleOptionEngine::I1Call</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/exotic/analyticholderextensibleoptionengine.hpp" line="52" column="14" bodyfile="ql/pricingengines/exotic/analyticholderextensibleoptionengine.cpp" bodystart="95" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1a9c88707b4e76451f5fd5db55c04f9380" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticHolderExtensibleOptionEngine::I2Call</definition>
        <argsstring>() const</argsstring>
        <name>I2Call</name>
        <qualifiedname>QuantLib::AnalyticHolderExtensibleOptionEngine::I2Call</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/exotic/analyticholderextensibleoptionengine.hpp" line="53" column="14" bodyfile="ql/pricingengines/exotic/analyticholderextensibleoptionengine.cpp" bodystart="129" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1ab38fdea06469fca08342a56a5e302ce6" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticHolderExtensibleOptionEngine::I1Put</definition>
        <argsstring>() const</argsstring>
        <name>I1Put</name>
        <qualifiedname>QuantLib::AnalyticHolderExtensibleOptionEngine::I1Put</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/exotic/analyticholderextensibleoptionengine.hpp" line="54" column="14" bodyfile="ql/pricingengines/exotic/analyticholderextensibleoptionengine.cpp" bodystart="166" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1a0dcdc7d3502d034251ec72bd6a11d685" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticHolderExtensibleOptionEngine::I2Put</definition>
        <argsstring>() const</argsstring>
        <name>I2Put</name>
        <qualifiedname>QuantLib::AnalyticHolderExtensibleOptionEngine::I2Put</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/exotic/analyticholderextensibleoptionengine.hpp" line="55" column="14" bodyfile="ql/pricingengines/exotic/analyticholderextensibleoptionengine.cpp" bodystart="196" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1afc2b03d9fd4917d77fe7ab09460d6692" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_black_scholes_calculator" kindref="compound">BlackScholesCalculator</ref></type>
        <definition>BlackScholesCalculator QuantLib::AnalyticHolderExtensibleOptionEngine::bsCalculator</definition>
        <argsstring>(Real spot, Option::Type optionType) const</argsstring>
        <name>bsCalculator</name>
        <qualifiedname>QuantLib::AnalyticHolderExtensibleOptionEngine::bsCalculator</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>spot</declname>
        </param>
        <param>
          <type>Option::Type</type>
          <declname>optionType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/exotic/analyticholderextensibleoptionengine.hpp" line="56" column="32" bodyfile="ql/pricingengines/exotic/analyticholderextensibleoptionengine.cpp" bodystart="228" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1a93d3ae97d86fb6ae0d58d2e1be2c4b26" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticHolderExtensibleOptionEngine::M2</definition>
        <argsstring>(Real a, Real b, Real c, Real d, Real rho) const</argsstring>
        <name>M2</name>
        <qualifiedname>QuantLib::AnalyticHolderExtensibleOptionEngine::M2</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>rho</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/exotic/analyticholderextensibleoptionengine.hpp" line="57" column="14" bodyfile="ql/pricingengines/exotic/analyticholderextensibleoptionengine.cpp" bodystart="254" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1a5a119fdb73e8aae32c6d4b56ed609400" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticHolderExtensibleOptionEngine::N2</definition>
        <argsstring>(Real a, Real b) const</argsstring>
        <name>N2</name>
        <qualifiedname>QuantLib::AnalyticHolderExtensibleOptionEngine::N2</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/exotic/analyticholderextensibleoptionengine.hpp" line="58" column="14" bodyfile="ql/pricingengines/exotic/analyticholderextensibleoptionengine.cpp" bodystart="259" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1aef136906d9d947383d3f722c691293f2" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticHolderExtensibleOptionEngine::y1</definition>
        <argsstring>(Option::Type) const</argsstring>
        <name>y1</name>
        <qualifiedname>QuantLib::AnalyticHolderExtensibleOptionEngine::y1</qualifiedname>
        <param>
          <type>Option::Type</type>
          <defname>type</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/exotic/analyticholderextensibleoptionengine.hpp" line="59" column="14" bodyfile="ql/pricingengines/exotic/analyticholderextensibleoptionengine.cpp" bodystart="299" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1a53aa97962a8fa209e124b2a6c3943d12" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticHolderExtensibleOptionEngine::y2</definition>
        <argsstring>(Option::Type) const</argsstring>
        <name>y2</name>
        <qualifiedname>QuantLib::AnalyticHolderExtensibleOptionEngine::y2</qualifiedname>
        <param>
          <type>Option::Type</type>
          <defname>type</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/exotic/analyticholderextensibleoptionengine.hpp" line="60" column="14" bodyfile="ql/pricingengines/exotic/analyticholderextensibleoptionengine.cpp" bodystart="310" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1a40a7f6d3657779851a758444e4faaafa" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticHolderExtensibleOptionEngine::z1</definition>
        <argsstring>() const</argsstring>
        <name>z1</name>
        <qualifiedname>QuantLib::AnalyticHolderExtensibleOptionEngine::z1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/exotic/analyticholderextensibleoptionengine.hpp" line="61" column="14" bodyfile="ql/pricingengines/exotic/analyticholderextensibleoptionengine.cpp" bodystart="321" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1abd722402e70193d7a8f849c7cfeb99a1" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticHolderExtensibleOptionEngine::z2</definition>
        <argsstring>() const</argsstring>
        <name>z2</name>
        <qualifiedname>QuantLib::AnalyticHolderExtensibleOptionEngine::z2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/exotic/analyticholderextensibleoptionengine.hpp" line="62" column="14" bodyfile="ql/pricingengines/exotic/analyticholderextensibleoptionengine.cpp" bodystart="331" bodyend="340"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Analytic enging for holder-extensible options. </para>
    </briefdescription>
    <detaileddescription>
<para>Formulas from Haug, &quot;Option Pricing Formulas&quot;. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::AnalyticHolderExtensibleOptionEngine</label>
        <link refid="class_quant_lib_1_1_analytic_holder_extensible_option_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::GenericEngine&lt; HolderExtensibleOption::arguments, HolderExtensibleOption::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_engine"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::HolderExtensibleOption::engine</label>
        <link refid="class_quant_lib_1_1_holder_extensible_option_1_1engine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="4">
        <label>QuantLib::PricingEngine</label>
        <link refid="class_quant_lib_1_1_pricing_engine"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8">
        <label>OneAssetOption::arguments</label>
      </node>
      <node id="1">
        <label>QuantLib::AnalyticHolderExtensibleOptionEngine</label>
        <link refid="class_quant_lib_1_1_analytic_holder_extensible_option_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="3">
        <label>QuantLib::GenericEngine&lt; HolderExtensibleOption::arguments, HolderExtensibleOption::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_engine"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>arguments_</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::HolderExtensibleOption::arguments</label>
        <link refid="class_quant_lib_1_1_holder_extensible_option_1_1arguments"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>secondExpiryDate</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::HolderExtensibleOption::engine</label>
        <link refid="class_quant_lib_1_1_holder_extensible_option_1_1engine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="4">
        <label>QuantLib::PricingEngine</label>
        <link refid="class_quant_lib_1_1_pricing_engine"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/pricingengines/exotic/analyticholderextensibleoptionengine.hpp" line="35" column="5" bodyfile="ql/pricingengines/exotic/analyticholderextensibleoptionengine.hpp" bodystart="36" bodyend="63"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1a1cfe70e4c1cc664aac658bf9504b1d02" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>AnalyticHolderExtensibleOptionEngine</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1ad2371cdbafa1989afb0e4733b1212c0d" prot="protected" virt="non-virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>arguments_</name></member>
      <member refid="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1afc2b03d9fd4917d77fe7ab09460d6692" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>bsCalculator</name></member>
      <member refid="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1a6fcbd5f278a6606af745e085ef51540c" prot="public" virt="virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1a8374953529ed862db4dabbaf2c772cb2" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>dividendDiscount</name></member>
      <member refid="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1a05a3df7bad6ffc254dd0d1e82fdfa514" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>dividendYield</name></member>
      <member refid="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1a692d24379e352c183e525b7e474cfd5c" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>firstExpiryTime</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1ad9c6e8dc65ca072d5e6e17640d74db3e" prot="public" virt="virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>getArguments</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1aea8272ef6e5e0ea1cffadfed0454fa88" prot="public" virt="virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>getResults</name></member>
      <member refid="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1a0ec6926f06e5c844d39ea25c195b8d28" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>I1Call</name></member>
      <member refid="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1ab38fdea06469fca08342a56a5e302ce6" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>I1Put</name></member>
      <member refid="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1a9c88707b4e76451f5fd5db55c04f9380" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>I2Call</name></member>
      <member refid="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1a0dcdc7d3502d034251ec72bd6a11d685" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>I2Put</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1a93d3ae97d86fb6ae0d58d2e1be2c4b26" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>M2</name></member>
      <member refid="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1a5a119fdb73e8aae32c6d4b56ed609400" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>N2</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1a5235ca4dc730e9b2ed95f25d1c194e57" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>process_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1a81c5390ba1e713e57ca87d5f841d37f2" prot="public" virt="virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>reset</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1a41281f2ea4990dbce90be1f9f2e231f6" prot="protected" virt="non-virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>results_</name></member>
      <member refid="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1aa03904fa5076b7be0bd2e61cec59fd10" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>riskFreeDiscount</name></member>
      <member refid="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1a338bef38470cfad5fd40229d54884c41" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>riskFreeRate</name></member>
      <member refid="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1af151547353ac1f3bdab02c4ce089b1f4" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>secondExpiryTime</name></member>
      <member refid="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1a6fc0033d5287d8db7e8d405aac011e64" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>strike</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1aaf5ef54d9e1abf8b1b50b48804edf3dc" prot="public" virt="virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1a5a773a71009d0b1b42053ced057bee04" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>volatility</name></member>
      <member refid="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1aef136906d9d947383d3f722c691293f2" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>y1</name></member>
      <member refid="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1a53aa97962a8fa209e124b2a6c3943d12" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>y2</name></member>
      <member refid="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1a40a7f6d3657779851a758444e4faaafa" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>z1</name></member>
      <member refid="class_quant_lib_1_1_analytic_holder_extensible_option_engine_1abd722402e70193d7a8f849c7cfeb99a1" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>z2</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_pricing_engine_1a66b279a54578cd7e60d402e5147eb526" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHolderExtensibleOptionEngine</scope><name>~PricingEngine</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

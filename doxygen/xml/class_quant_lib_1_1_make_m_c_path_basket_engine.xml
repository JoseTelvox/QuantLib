<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_make_m_c_path_basket_engine" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::MakeMCPathBasketEngine</compoundname>
    <includes refid="mcpathbasketengine_8hpp" local="no">mcpathbasketengine.hpp</includes>
    <templateparamlist>
      <param>
        <type>class RNG</type>
        <defval><ref refid="namespace_quant_lib_1a68b9aaf5f0c17983506b1a1db8575ab0" kindref="member">PseudoRandom</ref></defval>
      </param>
      <param>
        <type>class S</type>
        <defval><ref refid="namespace_quant_lib_1ae2e788da35d2b866040a03b96227ee6e" kindref="member">Statistics</ref></defval>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_path_basket_engine_1affe40d63cd92d600555c81a5e22b0b48" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_stochastic_process_array" kindref="compound">StochasticProcessArray</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;StochasticProcessArray&gt; QuantLib::MakeMCPathBasketEngine&lt; RNG, S &gt;::process_</definition>
        <argsstring></argsstring>
        <name>process_</name>
        <qualifiedname>QuantLib::MakeMCPathBasketEngine::process_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mcpathbasketengine.hpp" line="239" column="25" bodyfile="ql/experimental/mcbasket/mcpathbasketengine.hpp" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_path_basket_engine_1a52525a6c169916ff7aa9f01d9774e7fa" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::MakeMCPathBasketEngine&lt; RNG, S &gt;::antithetic_</definition>
        <argsstring></argsstring>
        <name>antithetic_</name>
        <qualifiedname>QuantLib::MakeMCPathBasketEngine::antithetic_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mcpathbasketengine.hpp" line="240" column="14" bodyfile="ql/experimental/mcbasket/mcpathbasketengine.hpp" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_path_basket_engine_1ad206213a250a22d9c62fc3f5b3a3f815" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::MakeMCPathBasketEngine&lt; RNG, S &gt;::controlVariate_</definition>
        <argsstring></argsstring>
        <name>controlVariate_</name>
        <qualifiedname>QuantLib::MakeMCPathBasketEngine::controlVariate_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mcpathbasketengine.hpp" line="240" column="27" bodyfile="ql/experimental/mcbasket/mcpathbasketengine.hpp" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_path_basket_engine_1a2b14cd9fb201d2d90693f184a0e040a0" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCPathBasketEngine&lt; RNG, S &gt;::steps_</definition>
        <argsstring></argsstring>
        <name>steps_</name>
        <qualifiedname>QuantLib::MakeMCPathBasketEngine::steps_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mcpathbasketengine.hpp" line="241" column="14" bodyfile="ql/experimental/mcbasket/mcpathbasketengine.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_path_basket_engine_1af951030bfa18e0c54f12c8a49c3be1a4" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCPathBasketEngine&lt; RNG, S &gt;::stepsPerYear_</definition>
        <argsstring></argsstring>
        <name>stepsPerYear_</name>
        <qualifiedname>QuantLib::MakeMCPathBasketEngine::stepsPerYear_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mcpathbasketengine.hpp" line="241" column="21" bodyfile="ql/experimental/mcbasket/mcpathbasketengine.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_path_basket_engine_1a0d9b8e32def7d1b2044734f9b08e346e" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCPathBasketEngine&lt; RNG, S &gt;::samples_</definition>
        <argsstring></argsstring>
        <name>samples_</name>
        <qualifiedname>QuantLib::MakeMCPathBasketEngine::samples_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mcpathbasketengine.hpp" line="241" column="35" bodyfile="ql/experimental/mcbasket/mcpathbasketengine.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_path_basket_engine_1a53bb906950a695b3dc70ee83937f116f" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCPathBasketEngine&lt; RNG, S &gt;::maxSamples_</definition>
        <argsstring></argsstring>
        <name>maxSamples_</name>
        <qualifiedname>QuantLib::MakeMCPathBasketEngine::maxSamples_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mcpathbasketengine.hpp" line="241" column="44" bodyfile="ql/experimental/mcbasket/mcpathbasketengine.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_path_basket_engine_1abbb54d5a49d0e3b99f0c71a0051306db" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::MakeMCPathBasketEngine&lt; RNG, S &gt;::tolerance_</definition>
        <argsstring></argsstring>
        <name>tolerance_</name>
        <qualifiedname>QuantLib::MakeMCPathBasketEngine::tolerance_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mcpathbasketengine.hpp" line="242" column="14" bodyfile="ql/experimental/mcbasket/mcpathbasketengine.hpp" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_path_basket_engine_1a431fe38beed78097d5397ff7d0db6d8f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::MakeMCPathBasketEngine&lt; RNG, S &gt;::brownianBridge_</definition>
        <argsstring></argsstring>
        <name>brownianBridge_</name>
        <qualifiedname>QuantLib::MakeMCPathBasketEngine::brownianBridge_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mcpathbasketengine.hpp" line="243" column="14" bodyfile="ql/experimental/mcbasket/mcpathbasketengine.hpp" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_path_basket_engine_1a040046e524cd1ab328b3535ecfc0cd4f" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
        <definition>BigNatural QuantLib::MakeMCPathBasketEngine&lt; RNG, S &gt;::seed_</definition>
        <argsstring></argsstring>
        <name>seed_</name>
        <qualifiedname>QuantLib::MakeMCPathBasketEngine::seed_</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mcpathbasketengine.hpp" line="244" column="20" bodyfile="ql/experimental/mcbasket/mcpathbasketengine.hpp" bodystart="244" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_path_basket_engine_1ab683be84252066256d6bf15f557f01c5" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::MakeMCPathBasketEngine&lt; RNG, S &gt;::MakeMCPathBasketEngine</definition>
        <argsstring>(ext::shared_ptr&lt; StochasticProcessArray &gt;)</argsstring>
        <name>MakeMCPathBasketEngine</name>
        <qualifiedname>QuantLib::MakeMCPathBasketEngine::MakeMCPathBasketEngine</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_stochastic_process_array" kindref="compound">StochasticProcessArray</ref> &gt;</type>
          <defname>process</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mcpathbasketengine.hpp" line="225" column="18" bodyfile="ql/experimental/mcbasket/mcpathbasketengine.hpp" bodystart="248" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_path_basket_engine_1aafdb8431b11a810635dc77f9c9ab565f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_path_basket_engine" kindref="compound">MakeMCPathBasketEngine</ref> &amp;</type>
        <definition>MakeMCPathBasketEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCPathBasketEngine&lt; RNG, S &gt;::withSteps</definition>
        <argsstring>(Size steps)</argsstring>
        <name>withSteps</name>
        <qualifiedname>QuantLib::MakeMCPathBasketEngine::withSteps</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mcpathbasketengine.hpp" line="227" column="32" bodyfile="ql/experimental/mcbasket/mcpathbasketengine.hpp" bodystart="255" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_path_basket_engine_1a847a7127579d6c6f76099055379ce24b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_path_basket_engine" kindref="compound">MakeMCPathBasketEngine</ref> &amp;</type>
        <definition>MakeMCPathBasketEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCPathBasketEngine&lt; RNG, S &gt;::withStepsPerYear</definition>
        <argsstring>(Size steps)</argsstring>
        <name>withStepsPerYear</name>
        <qualifiedname>QuantLib::MakeMCPathBasketEngine::withStepsPerYear</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mcpathbasketengine.hpp" line="228" column="32" bodyfile="ql/experimental/mcbasket/mcpathbasketengine.hpp" bodystart="262" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_path_basket_engine_1a41575c7d4c113c7d18a80fdd2d89f292" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_path_basket_engine" kindref="compound">MakeMCPathBasketEngine</ref> &amp;</type>
        <definition>MakeMCPathBasketEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCPathBasketEngine&lt; RNG, S &gt;::withBrownianBridge</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>withBrownianBridge</name>
        <qualifiedname>QuantLib::MakeMCPathBasketEngine::withBrownianBridge</qualifiedname>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mcpathbasketengine.hpp" line="229" column="32" bodyfile="ql/experimental/mcbasket/mcpathbasketengine.hpp" bodystart="304" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_path_basket_engine_1a52d27e3d32f306bb8b8937c3c021dbb9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_path_basket_engine" kindref="compound">MakeMCPathBasketEngine</ref> &amp;</type>
        <definition>MakeMCPathBasketEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCPathBasketEngine&lt; RNG, S &gt;::withSamples</definition>
        <argsstring>(Size samples)</argsstring>
        <name>withSamples</name>
        <qualifiedname>QuantLib::MakeMCPathBasketEngine::withSamples</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mcpathbasketengine.hpp" line="230" column="32" bodyfile="ql/experimental/mcbasket/mcpathbasketengine.hpp" bodystart="269" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_path_basket_engine_1a42c9ca896c3ccb2832a8e066f0c5428b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_path_basket_engine" kindref="compound">MakeMCPathBasketEngine</ref> &amp;</type>
        <definition>MakeMCPathBasketEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCPathBasketEngine&lt; RNG, S &gt;::withAbsoluteTolerance</definition>
        <argsstring>(Real tolerance)</argsstring>
        <name>withAbsoluteTolerance</name>
        <qualifiedname>QuantLib::MakeMCPathBasketEngine::withAbsoluteTolerance</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>tolerance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mcpathbasketengine.hpp" line="231" column="32" bodyfile="ql/experimental/mcbasket/mcpathbasketengine.hpp" bodystart="278" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_path_basket_engine_1a59ef7e7a7387042050f458e8d7220d4a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_path_basket_engine" kindref="compound">MakeMCPathBasketEngine</ref> &amp;</type>
        <definition>MakeMCPathBasketEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCPathBasketEngine&lt; RNG, S &gt;::withMaxSamples</definition>
        <argsstring>(Size samples)</argsstring>
        <name>withMaxSamples</name>
        <qualifiedname>QuantLib::MakeMCPathBasketEngine::withMaxSamples</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mcpathbasketengine.hpp" line="232" column="32" bodyfile="ql/experimental/mcbasket/mcpathbasketengine.hpp" bodystart="290" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_path_basket_engine_1ab0a1607df08e0050c4ed8313375db371" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_path_basket_engine" kindref="compound">MakeMCPathBasketEngine</ref> &amp;</type>
        <definition>MakeMCPathBasketEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCPathBasketEngine&lt; RNG, S &gt;::withSeed</definition>
        <argsstring>(BigNatural seed)</argsstring>
        <name>withSeed</name>
        <qualifiedname>QuantLib::MakeMCPathBasketEngine::withSeed</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mcpathbasketengine.hpp" line="233" column="32" bodyfile="ql/experimental/mcbasket/mcpathbasketengine.hpp" bodystart="297" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_path_basket_engine_1aa76a3249a26cb1965f9e1b69c9a5c865" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_path_basket_engine" kindref="compound">MakeMCPathBasketEngine</ref> &amp;</type>
        <definition>MakeMCPathBasketEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCPathBasketEngine&lt; RNG, S &gt;::withAntitheticVariate</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>withAntitheticVariate</name>
        <qualifiedname>QuantLib::MakeMCPathBasketEngine::withAntitheticVariate</qualifiedname>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mcpathbasketengine.hpp" line="234" column="32" bodyfile="ql/experimental/mcbasket/mcpathbasketengine.hpp" bodystart="311" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_path_basket_engine_1a5893e962417e14509a6b89bea0fd8e5b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_path_basket_engine" kindref="compound">MakeMCPathBasketEngine</ref> &amp;</type>
        <definition>MakeMCPathBasketEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCPathBasketEngine&lt; RNG, S &gt;::withControlVariate</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>withControlVariate</name>
        <qualifiedname>QuantLib::MakeMCPathBasketEngine::withControlVariate</qualifiedname>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mcpathbasketengine.hpp" line="235" column="32" bodyfile="ql/experimental/mcbasket/mcpathbasketengine.hpp" bodystart="318" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_path_basket_engine_1a89490359decc4238cedb0af4fe3b76d3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::MakeMCPathBasketEngine&lt; RNG, S &gt;::operator ext::shared_ptr&lt; PricingEngine &gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator ext::shared_ptr&lt; PricingEngine &gt;</name>
        <qualifiedname>QuantLib::MakeMCPathBasketEngine::shared_ptr&lt; PricingEngine &gt;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mcpathbasketengine.hpp" line="237" column="9" bodyfile="ql/experimental/mcbasket/mcpathbasketengine.hpp" bodystart="325" bodyend="338"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Monte Carlo <ref refid="class_quant_lib_1_1_path" kindref="compound">Path</ref> <ref refid="class_quant_lib_1_1_basket" kindref="compound">Basket</ref> engine factory. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/experimental/mcbasket/mcpathbasketengine.hpp" line="223" column="5" bodyfile="ql/experimental/mcbasket/mcpathbasketengine.hpp" bodystart="223" bodyend="245"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_make_m_c_path_basket_engine_1a52525a6c169916ff7aa9f01d9774e7fa" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCPathBasketEngine</scope><name>antithetic_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_path_basket_engine_1a431fe38beed78097d5397ff7d0db6d8f" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCPathBasketEngine</scope><name>brownianBridge_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_path_basket_engine_1ad206213a250a22d9c62fc3f5b3a3f815" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCPathBasketEngine</scope><name>controlVariate_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_path_basket_engine_1ab683be84252066256d6bf15f557f01c5" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCPathBasketEngine</scope><name>MakeMCPathBasketEngine</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_path_basket_engine_1a53bb906950a695b3dc70ee83937f116f" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCPathBasketEngine</scope><name>maxSamples_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_path_basket_engine_1a89490359decc4238cedb0af4fe3b76d3" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCPathBasketEngine</scope><name>operator ext::shared_ptr&lt; PricingEngine &gt;</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_path_basket_engine_1affe40d63cd92d600555c81a5e22b0b48" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCPathBasketEngine</scope><name>process_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_path_basket_engine_1a0d9b8e32def7d1b2044734f9b08e346e" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCPathBasketEngine</scope><name>samples_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_path_basket_engine_1a040046e524cd1ab328b3535ecfc0cd4f" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCPathBasketEngine</scope><name>seed_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_path_basket_engine_1a2b14cd9fb201d2d90693f184a0e040a0" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCPathBasketEngine</scope><name>steps_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_path_basket_engine_1af951030bfa18e0c54f12c8a49c3be1a4" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCPathBasketEngine</scope><name>stepsPerYear_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_path_basket_engine_1abbb54d5a49d0e3b99f0c71a0051306db" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCPathBasketEngine</scope><name>tolerance_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_path_basket_engine_1a42c9ca896c3ccb2832a8e066f0c5428b" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCPathBasketEngine</scope><name>withAbsoluteTolerance</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_path_basket_engine_1aa76a3249a26cb1965f9e1b69c9a5c865" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCPathBasketEngine</scope><name>withAntitheticVariate</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_path_basket_engine_1a41575c7d4c113c7d18a80fdd2d89f292" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCPathBasketEngine</scope><name>withBrownianBridge</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_path_basket_engine_1a5893e962417e14509a6b89bea0fd8e5b" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCPathBasketEngine</scope><name>withControlVariate</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_path_basket_engine_1a59ef7e7a7387042050f458e8d7220d4a" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCPathBasketEngine</scope><name>withMaxSamples</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_path_basket_engine_1a52d27e3d32f306bb8b8937c3c021dbb9" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCPathBasketEngine</scope><name>withSamples</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_path_basket_engine_1ab0a1607df08e0050c4ed8313375db371" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCPathBasketEngine</scope><name>withSeed</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_path_basket_engine_1aafdb8431b11a810635dc77f9c9ab565f" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCPathBasketEngine</scope><name>withSteps</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_path_basket_engine_1a847a7127579d6c6f76099055379ce24b" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCPathBasketEngine</scope><name>withStepsPerYear</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

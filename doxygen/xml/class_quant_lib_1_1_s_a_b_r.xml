<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_s_a_b_r" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::SABR</compoundname>
    <includes refid="sabrinterpolation_8hpp" local="no">sabrinterpolation.hpp</includes>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_s_a_b_r_1a69938625dacf3f5019c1c4e9b15d5bc0" prot="public" static="yes" mutable="no">
        <type>const bool</type>
        <definition>const bool QuantLib::SABR::global</definition>
        <argsstring></argsstring>
        <name>global</name>
        <qualifiedname>QuantLib::SABR::global</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/sabrinterpolation.hpp" line="231" column="23" bodyfile="ql/math/interpolations/sabrinterpolation.hpp" bodystart="231" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_s_a_b_r_1afe7e30ff0f191a758cc2aaefbde988eb" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>Time QuantLib::SABR::t_</definition>
        <argsstring></argsstring>
        <name>t_</name>
        <qualifiedname>QuantLib::SABR::t_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/sabrinterpolation.hpp" line="234" column="10" bodyfile="ql/math/interpolations/sabrinterpolation.hpp" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_s_a_b_r_1abd8ed8c00ac4885319e0bbdb1c40d143" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SABR::forward_</definition>
        <argsstring></argsstring>
        <name>forward_</name>
        <qualifiedname>QuantLib::SABR::forward_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/sabrinterpolation.hpp" line="235" column="10" bodyfile="ql/math/interpolations/sabrinterpolation.hpp" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_s_a_b_r_1a1b2103a5810fea90fa232eb7e43dbda6" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SABR::alpha_</definition>
        <argsstring></argsstring>
        <name>alpha_</name>
        <qualifiedname>QuantLib::SABR::alpha_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/sabrinterpolation.hpp" line="236" column="10" bodyfile="ql/math/interpolations/sabrinterpolation.hpp" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_s_a_b_r_1a5ae69a8d85d0e1324f69fd1cd1e53bfc" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SABR::beta_</definition>
        <argsstring></argsstring>
        <name>beta_</name>
        <qualifiedname>QuantLib::SABR::beta_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/sabrinterpolation.hpp" line="236" column="17" bodyfile="ql/math/interpolations/sabrinterpolation.hpp" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_s_a_b_r_1a5003c999f1a549ab873b0aa5e7ec97ca" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SABR::nu_</definition>
        <argsstring></argsstring>
        <name>nu_</name>
        <qualifiedname>QuantLib::SABR::nu_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/sabrinterpolation.hpp" line="236" column="23" bodyfile="ql/math/interpolations/sabrinterpolation.hpp" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_s_a_b_r_1ad72189c2f3eafc8ce83eee5950851edb" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SABR::rho_</definition>
        <argsstring></argsstring>
        <name>rho_</name>
        <qualifiedname>QuantLib::SABR::rho_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/sabrinterpolation.hpp" line="236" column="27" bodyfile="ql/math/interpolations/sabrinterpolation.hpp" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_s_a_b_r_1afc34d4b377c7b8413ddc63c99e926bdd" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::SABR::alphaIsFixed_</definition>
        <argsstring></argsstring>
        <name>alphaIsFixed_</name>
        <qualifiedname>QuantLib::SABR::alphaIsFixed_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/sabrinterpolation.hpp" line="237" column="10" bodyfile="ql/math/interpolations/sabrinterpolation.hpp" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_s_a_b_r_1af2a0a3d2522186a670db28315c821797" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::SABR::betaIsFixed_</definition>
        <argsstring></argsstring>
        <name>betaIsFixed_</name>
        <qualifiedname>QuantLib::SABR::betaIsFixed_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/sabrinterpolation.hpp" line="237" column="24" bodyfile="ql/math/interpolations/sabrinterpolation.hpp" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_s_a_b_r_1a3e10344418e6eb6ab642aad6b10e05a3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::SABR::nuIsFixed_</definition>
        <argsstring></argsstring>
        <name>nuIsFixed_</name>
        <qualifiedname>QuantLib::SABR::nuIsFixed_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/sabrinterpolation.hpp" line="237" column="37" bodyfile="ql/math/interpolations/sabrinterpolation.hpp" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_s_a_b_r_1ab4a9d694eba302cc791069b737646732" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::SABR::rhoIsFixed_</definition>
        <argsstring></argsstring>
        <name>rhoIsFixed_</name>
        <qualifiedname>QuantLib::SABR::rhoIsFixed_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/sabrinterpolation.hpp" line="237" column="48" bodyfile="ql/math/interpolations/sabrinterpolation.hpp" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_s_a_b_r_1acbf40ede05c72f7c47a7a5b3a7b001ca" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::SABR::vegaWeighted_</definition>
        <argsstring></argsstring>
        <name>vegaWeighted_</name>
        <qualifiedname>QuantLib::SABR::vegaWeighted_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/sabrinterpolation.hpp" line="238" column="10" bodyfile="ql/math/interpolations/sabrinterpolation.hpp" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_s_a_b_r_1a138ac1f02fd2d73180f2d9612ef8d5eb" prot="private" static="no" mutable="no">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_end_criteria" kindref="compound">EndCriteria</ref> &gt;</type>
        <definition>const ext::shared_ptr&lt;EndCriteria&gt; QuantLib::SABR::endCriteria_</definition>
        <argsstring></argsstring>
        <name>endCriteria_</name>
        <qualifiedname>QuantLib::SABR::endCriteria_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/sabrinterpolation.hpp" line="239" column="27" bodyfile="ql/math/interpolations/sabrinterpolation.hpp" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_s_a_b_r_1a686401eefb2dbd016debca79ae7d5708" prot="private" static="no" mutable="no">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_optimization_method" kindref="compound">OptimizationMethod</ref> &gt;</type>
        <definition>const ext::shared_ptr&lt;OptimizationMethod&gt; QuantLib::SABR::optMethod_</definition>
        <argsstring></argsstring>
        <name>optMethod_</name>
        <qualifiedname>QuantLib::SABR::optMethod_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/sabrinterpolation.hpp" line="240" column="27" bodyfile="ql/math/interpolations/sabrinterpolation.hpp" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_s_a_b_r_1a1c97b65436bdf9c53737be512f7a7e6c" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::SABR::errorAccept_</definition>
        <argsstring></argsstring>
        <name>errorAccept_</name>
        <qualifiedname>QuantLib::SABR::errorAccept_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/sabrinterpolation.hpp" line="241" column="16" bodyfile="ql/math/interpolations/sabrinterpolation.hpp" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_s_a_b_r_1a28743730246cfb73f87f60a863df8d26" prot="private" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool QuantLib::SABR::useMaxError_</definition>
        <argsstring></argsstring>
        <name>useMaxError_</name>
        <qualifiedname>QuantLib::SABR::useMaxError_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/sabrinterpolation.hpp" line="242" column="16" bodyfile="ql/math/interpolations/sabrinterpolation.hpp" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_s_a_b_r_1accff90e397e1317e9904300792b71fde" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>const Size QuantLib::SABR::maxGuesses_</definition>
        <argsstring></argsstring>
        <name>maxGuesses_</name>
        <qualifiedname>QuantLib::SABR::maxGuesses_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/sabrinterpolation.hpp" line="243" column="16" bodyfile="ql/math/interpolations/sabrinterpolation.hpp" bodystart="243" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_s_a_b_r_1afed323f609faf86547022a8dd7707f5b" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::SABR::shift_</definition>
        <argsstring></argsstring>
        <name>shift_</name>
        <qualifiedname>QuantLib::SABR::shift_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/sabrinterpolation.hpp" line="244" column="16" bodyfile="ql/math/interpolations/sabrinterpolation.hpp" bodystart="244" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_s_a_b_r_1a1134653ed31d18ee7538bdcbbae1f3d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::SABR::SABR</definition>
        <argsstring>(Time t, Real forward, Real alpha, Real beta, Real nu, Real rho, bool alphaIsFixed, bool betaIsFixed, bool nuIsFixed, bool rhoIsFixed, bool vegaWeighted=false, ext::shared_ptr&lt; EndCriteria &gt; endCriteria=ext::shared_ptr&lt; EndCriteria &gt;(), ext::shared_ptr&lt; OptimizationMethod &gt; optMethod=ext::shared_ptr&lt; OptimizationMethod &gt;(), const Real errorAccept=0.0020, const bool useMaxError=false, const Size maxGuesses=50, const Real shift=0.0)</argsstring>
        <name>SABR</name>
        <qualifiedname>QuantLib::SABR::SABR</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>forward</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>alpha</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>beta</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>nu</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>rho</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>alphaIsFixed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>betaIsFixed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>nuIsFixed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>rhoIsFixed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>vegaWeighted</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_end_criteria" kindref="compound">EndCriteria</ref> &gt;</type>
          <declname>endCriteria</declname>
          <defval>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_end_criteria" kindref="compound">EndCriteria</ref> &gt;()</defval>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_optimization_method" kindref="compound">OptimizationMethod</ref> &gt;</type>
          <declname>optMethod</declname>
          <defval>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_optimization_method" kindref="compound">OptimizationMethod</ref> &gt;()</defval>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>errorAccept</declname>
          <defval>0.0020</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>useMaxError</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>maxGuesses</declname>
          <defval>50</defval>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>shift</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/sabrinterpolation.hpp" line="200" column="5" bodyfile="ql/math/interpolations/sabrinterpolation.hpp" bodystart="200" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_s_a_b_r_1a5a0f55758afdf0f678e6254e8049c61f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I1</type>
          </param>
          <param>
            <type>class I2</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_quant_lib_1_1_interpolation" kindref="compound">Interpolation</ref></type>
        <definition>Interpolation QuantLib::SABR::interpolate</definition>
        <argsstring>(const I1 &amp;xBegin, const I1 &amp;xEnd, const I2 &amp;yBegin) const</argsstring>
        <name>interpolate</name>
        <qualifiedname>QuantLib::SABR::interpolate</qualifiedname>
        <param>
          <type>const I1 &amp;</type>
          <declname>xBegin</declname>
        </param>
        <param>
          <type>const I1 &amp;</type>
          <declname>xEnd</declname>
        </param>
        <param>
          <type>const I2 &amp;</type>
          <declname>yBegin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/sabrinterpolation.hpp" line="223" column="19" bodyfile="ql/math/interpolations/sabrinterpolation.hpp" bodystart="223" bodyend="230"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>SABR interpolation factory and traits </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/math/interpolations/sabrinterpolation.hpp" line="198" column="1" bodyfile="ql/math/interpolations/sabrinterpolation.hpp" bodystart="198" bodyend="245"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_s_a_b_r_1a1b2103a5810fea90fa232eb7e43dbda6" prot="private" virt="non-virtual"><scope>QuantLib::SABR</scope><name>alpha_</name></member>
      <member refid="class_quant_lib_1_1_s_a_b_r_1afc34d4b377c7b8413ddc63c99e926bdd" prot="private" virt="non-virtual"><scope>QuantLib::SABR</scope><name>alphaIsFixed_</name></member>
      <member refid="class_quant_lib_1_1_s_a_b_r_1a5ae69a8d85d0e1324f69fd1cd1e53bfc" prot="private" virt="non-virtual"><scope>QuantLib::SABR</scope><name>beta_</name></member>
      <member refid="class_quant_lib_1_1_s_a_b_r_1af2a0a3d2522186a670db28315c821797" prot="private" virt="non-virtual"><scope>QuantLib::SABR</scope><name>betaIsFixed_</name></member>
      <member refid="class_quant_lib_1_1_s_a_b_r_1a138ac1f02fd2d73180f2d9612ef8d5eb" prot="private" virt="non-virtual"><scope>QuantLib::SABR</scope><name>endCriteria_</name></member>
      <member refid="class_quant_lib_1_1_s_a_b_r_1a1c97b65436bdf9c53737be512f7a7e6c" prot="private" virt="non-virtual"><scope>QuantLib::SABR</scope><name>errorAccept_</name></member>
      <member refid="class_quant_lib_1_1_s_a_b_r_1abd8ed8c00ac4885319e0bbdb1c40d143" prot="private" virt="non-virtual"><scope>QuantLib::SABR</scope><name>forward_</name></member>
      <member refid="class_quant_lib_1_1_s_a_b_r_1a69938625dacf3f5019c1c4e9b15d5bc0" prot="public" virt="non-virtual"><scope>QuantLib::SABR</scope><name>global</name></member>
      <member refid="class_quant_lib_1_1_s_a_b_r_1a5a0f55758afdf0f678e6254e8049c61f" prot="public" virt="non-virtual"><scope>QuantLib::SABR</scope><name>interpolate</name></member>
      <member refid="class_quant_lib_1_1_s_a_b_r_1accff90e397e1317e9904300792b71fde" prot="private" virt="non-virtual"><scope>QuantLib::SABR</scope><name>maxGuesses_</name></member>
      <member refid="class_quant_lib_1_1_s_a_b_r_1a5003c999f1a549ab873b0aa5e7ec97ca" prot="private" virt="non-virtual"><scope>QuantLib::SABR</scope><name>nu_</name></member>
      <member refid="class_quant_lib_1_1_s_a_b_r_1a3e10344418e6eb6ab642aad6b10e05a3" prot="private" virt="non-virtual"><scope>QuantLib::SABR</scope><name>nuIsFixed_</name></member>
      <member refid="class_quant_lib_1_1_s_a_b_r_1a686401eefb2dbd016debca79ae7d5708" prot="private" virt="non-virtual"><scope>QuantLib::SABR</scope><name>optMethod_</name></member>
      <member refid="class_quant_lib_1_1_s_a_b_r_1ad72189c2f3eafc8ce83eee5950851edb" prot="private" virt="non-virtual"><scope>QuantLib::SABR</scope><name>rho_</name></member>
      <member refid="class_quant_lib_1_1_s_a_b_r_1ab4a9d694eba302cc791069b737646732" prot="private" virt="non-virtual"><scope>QuantLib::SABR</scope><name>rhoIsFixed_</name></member>
      <member refid="class_quant_lib_1_1_s_a_b_r_1a1134653ed31d18ee7538bdcbbae1f3d8" prot="public" virt="non-virtual"><scope>QuantLib::SABR</scope><name>SABR</name></member>
      <member refid="class_quant_lib_1_1_s_a_b_r_1afed323f609faf86547022a8dd7707f5b" prot="private" virt="non-virtual"><scope>QuantLib::SABR</scope><name>shift_</name></member>
      <member refid="class_quant_lib_1_1_s_a_b_r_1afe7e30ff0f191a758cc2aaefbde988eb" prot="private" virt="non-virtual"><scope>QuantLib::SABR</scope><name>t_</name></member>
      <member refid="class_quant_lib_1_1_s_a_b_r_1a28743730246cfb73f87f60a863df8d26" prot="private" virt="non-virtual"><scope>QuantLib::SABR</scope><name>useMaxError_</name></member>
      <member refid="class_quant_lib_1_1_s_a_b_r_1acbf40ede05c72f7c47a7a5b3a7b001ca" prot="private" virt="non-virtual"><scope>QuantLib::SABR</scope><name>vegaWeighted_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

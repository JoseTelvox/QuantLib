<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_laplace_interpolation" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::LaplaceInterpolation</compoundname>
    <includes refid="laplaceinterpolation_8hpp" local="no">laplaceinterpolation.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_laplace_interpolation_1a2799ba32bf67def767f780753c8a9768" prot="private" static="no" mutable="no">
        <type>std::function&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>(const std::vector&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &gt; &amp;)&gt;</type>
        <definition>std::function&lt;Real(const std::vector&lt;Size&gt;&amp;)&gt; QuantLib::LaplaceInterpolation::y_</definition>
        <argsstring></argsstring>
        <name>y_</name>
        <qualifiedname>QuantLib::LaplaceInterpolation::y_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/laplaceinterpolation.hpp" line="55" column="23" bodyfile="ql/experimental/math/laplaceinterpolation.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_laplace_interpolation_1a2ed6a37e0fecf1eaeebc08dfcbbdd1ad" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;Real&gt; &gt; QuantLib::LaplaceInterpolation::x_</definition>
        <argsstring></argsstring>
        <name>x_</name>
        <qualifiedname>QuantLib::LaplaceInterpolation::x_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/laplaceinterpolation.hpp" line="56" column="21" bodyfile="ql/experimental/math/laplaceinterpolation.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_laplace_interpolation_1a0e8d4b4a7509ea70b4c0693e2e181db5" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::LaplaceInterpolation::relTol_</definition>
        <argsstring></argsstring>
        <name>relTol_</name>
        <qualifiedname>QuantLib::LaplaceInterpolation::relTol_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/laplaceinterpolation.hpp" line="57" column="14" bodyfile="ql/experimental/math/laplaceinterpolation.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_laplace_interpolation_1a361b59109f780d2ebe60852b05a6eed5" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::LaplaceInterpolation::maxIterMultiplier_</definition>
        <argsstring></argsstring>
        <name>maxIterMultiplier_</name>
        <qualifiedname>QuantLib::LaplaceInterpolation::maxIterMultiplier_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/laplaceinterpolation.hpp" line="58" column="14" bodyfile="ql/experimental/math/laplaceinterpolation.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_laplace_interpolation_1a034abbd8b7f7590bc4503a843fe42b57" prot="private" static="no" mutable="no">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt;bool&gt; QuantLib::LaplaceInterpolation::coordinateIncluded_</definition>
        <argsstring></argsstring>
        <name>coordinateIncluded_</name>
        <qualifiedname>QuantLib::LaplaceInterpolation::coordinateIncluded_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/laplaceinterpolation.hpp" line="60" column="21" bodyfile="ql/experimental/math/laplaceinterpolation.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_laplace_interpolation_1a8d0f02d741701cfdf36a59846bfd6484" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::LaplaceInterpolation::numberOfCoordinatesIncluded_</definition>
        <argsstring></argsstring>
        <name>numberOfCoordinatesIncluded_</name>
        <qualifiedname>QuantLib::LaplaceInterpolation::numberOfCoordinatesIncluded_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/laplaceinterpolation.hpp" line="61" column="14" bodyfile="ql/experimental/math/laplaceinterpolation.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_laplace_interpolation_1ac6c316be4394e3c2e8f7c34bc5985030" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_fdm_linear_op_layout" kindref="compound">FdmLinearOpLayout</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;FdmLinearOpLayout&gt; QuantLib::LaplaceInterpolation::layout_</definition>
        <argsstring></argsstring>
        <name>layout_</name>
        <qualifiedname>QuantLib::LaplaceInterpolation::layout_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/laplaceinterpolation.hpp" line="63" column="25" bodyfile="ql/experimental/math/laplaceinterpolation.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_laplace_interpolation_1ad4b3a2611f8943242a57254c042d7551" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::LaplaceInterpolation::interpolatedValues_</definition>
        <argsstring></argsstring>
        <name>interpolatedValues_</name>
        <qualifiedname>QuantLib::LaplaceInterpolation::interpolatedValues_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/laplaceinterpolation.hpp" line="64" column="15" bodyfile="ql/experimental/math/laplaceinterpolation.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_laplace_interpolation_1a49b48e7bfbfd299063e939ffbb7e1494" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::LaplaceInterpolation::LaplaceInterpolation</definition>
        <argsstring>(std::function&lt; Real(const std::vector&lt; Size &gt; &amp;)&gt; y, std::vector&lt; std::vector&lt; Real &gt; &gt; x, Real relTol=1E-6, Size maxIterMultiplier=10)</argsstring>
        <name>LaplaceInterpolation</name>
        <qualifiedname>QuantLib::LaplaceInterpolation::LaplaceInterpolation</qualifiedname>
        <param>
          <type>std::function&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>(const std::vector&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &gt; &amp;)&gt;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &gt;</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>relTol</declname>
          <defval>1E-6</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>maxIterMultiplier</declname>
          <defval>10</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Missing values y should be encoded as Null&lt;Real&gt;(). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/laplaceinterpolation.hpp" line="45" column="9" bodyfile="ql/experimental/math/laplaceinterpolation.cpp" bodystart="38" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_laplace_interpolation_1ab9598f3caaf9fbe85ebb7511a7beecc8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::LaplaceInterpolation::operator()</definition>
        <argsstring>(const std::vector&lt; Size &gt; &amp;coordinates) const</argsstring>
        <name>operator()</name>
        <qualifiedname>QuantLib::LaplaceInterpolation::operator()</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &gt; &amp;</type>
          <declname>coordinates</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/laplaceinterpolation.hpp" line="49" column="14" bodyfile="ql/experimental/math/laplaceinterpolation.cpp" bodystart="200" bodyend="212"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_laplace_interpolation_1a889c40613ef90145d730cdf5cf02b8a8" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &gt;</type>
        <definition>std::vector&lt; Size &gt; QuantLib::LaplaceInterpolation::projectedCoordinates</definition>
        <argsstring>(const std::vector&lt; Size &gt; &amp;coordinates) const</argsstring>
        <name>projectedCoordinates</name>
        <qualifiedname>QuantLib::LaplaceInterpolation::projectedCoordinates</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &gt; &amp;</type>
          <declname>coordinates</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/laplaceinterpolation.hpp" line="52" column="21" bodyfile="ql/experimental/math/laplaceinterpolation.cpp" bodystart="181" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_laplace_interpolation_1a87dc20518e5f92a35c014be1516a42d5" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &gt;</type>
        <definition>std::vector&lt; Size &gt; QuantLib::LaplaceInterpolation::fullCoordinates</definition>
        <argsstring>(const std::vector&lt; Size &gt; &amp;projectedCoordinates) const</argsstring>
        <name>fullCoordinates</name>
        <qualifiedname>QuantLib::LaplaceInterpolation::fullCoordinates</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &gt; &amp;</type>
          <declname>projectedCoordinates</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/laplaceinterpolation.hpp" line="53" column="21" bodyfile="ql/experimental/math/laplaceinterpolation.cpp" bodystart="191" bodyend="198"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Reconstruction of missing values using Laplace interpolation. We support an arbitrary number of dimensions n &gt;= 1 and non-equidistant grids. For n = 1 the method is identical to linear interpolation with flat extrapolation. Reference: Numerical Recipes, 3rd edition, ch. 3.8. </para>
    </detaileddescription>
    <location file="ql/experimental/math/laplaceinterpolation.hpp" line="42" column="5" bodyfile="ql/experimental/math/laplaceinterpolation.hpp" bodystart="42" bodyend="65"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_laplace_interpolation_1a034abbd8b7f7590bc4503a843fe42b57" prot="private" virt="non-virtual"><scope>QuantLib::LaplaceInterpolation</scope><name>coordinateIncluded_</name></member>
      <member refid="class_quant_lib_1_1_laplace_interpolation_1a87dc20518e5f92a35c014be1516a42d5" prot="private" virt="non-virtual"><scope>QuantLib::LaplaceInterpolation</scope><name>fullCoordinates</name></member>
      <member refid="class_quant_lib_1_1_laplace_interpolation_1ad4b3a2611f8943242a57254c042d7551" prot="private" virt="non-virtual"><scope>QuantLib::LaplaceInterpolation</scope><name>interpolatedValues_</name></member>
      <member refid="class_quant_lib_1_1_laplace_interpolation_1a49b48e7bfbfd299063e939ffbb7e1494" prot="public" virt="non-virtual"><scope>QuantLib::LaplaceInterpolation</scope><name>LaplaceInterpolation</name></member>
      <member refid="class_quant_lib_1_1_laplace_interpolation_1ac6c316be4394e3c2e8f7c34bc5985030" prot="private" virt="non-virtual"><scope>QuantLib::LaplaceInterpolation</scope><name>layout_</name></member>
      <member refid="class_quant_lib_1_1_laplace_interpolation_1a361b59109f780d2ebe60852b05a6eed5" prot="private" virt="non-virtual"><scope>QuantLib::LaplaceInterpolation</scope><name>maxIterMultiplier_</name></member>
      <member refid="class_quant_lib_1_1_laplace_interpolation_1a8d0f02d741701cfdf36a59846bfd6484" prot="private" virt="non-virtual"><scope>QuantLib::LaplaceInterpolation</scope><name>numberOfCoordinatesIncluded_</name></member>
      <member refid="class_quant_lib_1_1_laplace_interpolation_1ab9598f3caaf9fbe85ebb7511a7beecc8" prot="public" virt="non-virtual"><scope>QuantLib::LaplaceInterpolation</scope><name>operator()</name></member>
      <member refid="class_quant_lib_1_1_laplace_interpolation_1a889c40613ef90145d730cdf5cf02b8a8" prot="private" virt="non-virtual"><scope>QuantLib::LaplaceInterpolation</scope><name>projectedCoordinates</name></member>
      <member refid="class_quant_lib_1_1_laplace_interpolation_1a0e8d4b4a7509ea70b4c0693e2e181db5" prot="private" virt="non-virtual"><scope>QuantLib::LaplaceInterpolation</scope><name>relTol_</name></member>
      <member refid="class_quant_lib_1_1_laplace_interpolation_1a2ed6a37e0fecf1eaeebc08dfcbbdd1ad" prot="private" virt="non-virtual"><scope>QuantLib::LaplaceInterpolation</scope><name>x_</name></member>
      <member refid="class_quant_lib_1_1_laplace_interpolation_1a2799ba32bf67def767f780753c8a9768" prot="private" virt="non-virtual"><scope>QuantLib::LaplaceInterpolation</scope><name>y_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

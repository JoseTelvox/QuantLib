<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_exponential_fitting_heston_engine" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::ExponentialFittingHestonEngine</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_generic_model_engine" prot="public" virt="non-virtual">QuantLib::GenericModelEngine&lt; HestonModel, VanillaOption::arguments, VanillaOption::results &gt;</basecompoundref>
    <includes refid="exponentialfittinghestonengine_8hpp" local="no">exponentialfittinghestonengine.hpp</includes>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_quant_lib_1_1_exponential_fitting_heston_engine_1ab46410fde68743563978fbc3584f7218" prot="public" static="no">
        <type>AnalyticHestonEngine::ComplexLogFormula</type>
        <definition>typedef AnalyticHestonEngine::ComplexLogFormula QuantLib::ExponentialFittingHestonEngine::ControlVariate</definition>
        <argsstring></argsstring>
        <name>ControlVariate</name>
        <qualifiedname>QuantLib::ExponentialFittingHestonEngine::ControlVariate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/exponentialfittinghestonengine.hpp" line="53" column="57" bodyfile="ql/pricingengines/vanilla/exponentialfittinghestonengine.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_exponential_fitting_heston_engine_1a64ed346872dda789bec87a40329d35bf" prot="private" static="no" mutable="no">
        <type>const ControlVariate</type>
        <definition>const ControlVariate QuantLib::ExponentialFittingHestonEngine::cv_</definition>
        <argsstring></argsstring>
        <name>cv_</name>
        <qualifiedname>QuantLib::ExponentialFittingHestonEngine::cv_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/exponentialfittinghestonengine.hpp" line="64" column="30" bodyfile="ql/pricingengines/vanilla/exponentialfittinghestonengine.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_exponential_fitting_heston_engine_1abb90ec6d5e196f8176ef72c9aa232962" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::ExponentialFittingHestonEngine::scaling_</definition>
        <argsstring></argsstring>
        <name>scaling_</name>
        <qualifiedname>QuantLib::ExponentialFittingHestonEngine::scaling_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/exponentialfittinghestonengine.hpp" line="65" column="20" bodyfile="ql/pricingengines/vanilla/exponentialfittinghestonengine.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_exponential_fitting_heston_engine_1a032031911c84cd115fa1cfbff37b668d" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::ExponentialFittingHestonEngine::alpha_</definition>
        <argsstring></argsstring>
        <name>alpha_</name>
        <qualifiedname>QuantLib::ExponentialFittingHestonEngine::alpha_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/exponentialfittinghestonengine.hpp" line="65" column="29" bodyfile="ql/pricingengines/vanilla/exponentialfittinghestonengine.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_exponential_fitting_heston_engine_1ae928c8227742e40a3d42c63a1adc8724" prot="private" static="no" mutable="no">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_analytic_heston_engine" kindref="compound">AnalyticHestonEngine</ref> &gt;</type>
        <definition>const ext::shared_ptr&lt;AnalyticHestonEngine&gt; QuantLib::ExponentialFittingHestonEngine::analyticEngine_</definition>
        <argsstring></argsstring>
        <name>analyticEngine_</name>
        <qualifiedname>QuantLib::ExponentialFittingHestonEngine::analyticEngine_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/exponentialfittinghestonengine.hpp" line="66" column="31" bodyfile="ql/pricingengines/vanilla/exponentialfittinghestonengine.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_exponential_fitting_heston_engine_1a1d4ae26fe0ea0e6e7b171363a5d0d66e" prot="private" static="yes" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt; Real &gt; QuantLib::ExponentialFittingHestonEngine::moneyness_</definition>
        <argsstring></argsstring>
        <name>moneyness_</name>
        <qualifiedname>QuantLib::ExponentialFittingHestonEngine::moneyness_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/exponentialfittinghestonengine.hpp" line="68" column="28" bodyfile="ql/pricingengines/vanilla/exponentialfittinghestonengine.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_exponential_fitting_heston_engine_1a4ae3679c77740d64383830086d679526" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ExponentialFittingHestonEngine::ExponentialFittingHestonEngine</definition>
        <argsstring>(const ext::shared_ptr&lt; HestonModel &gt; &amp;model, ControlVariate cv=ControlVariate::OptimalCV, Real scaling=Null&lt; Real &gt;(), Real alpha=-0.5)</argsstring>
        <name>ExponentialFittingHestonEngine</name>
        <qualifiedname>QuantLib::ExponentialFittingHestonEngine::ExponentialFittingHestonEngine</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_heston_model" kindref="compound">HestonModel</ref> &gt; &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>ControlVariate</type>
          <declname>cv</declname>
          <defval>ControlVariate::OptimalCV</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>scaling</declname>
          <defval><ref refid="class_quant_lib_1_1_null" kindref="compound">Null</ref>&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;()</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>alpha</declname>
          <defval>-0.5</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/exponentialfittinghestonengine.hpp" line="55" column="18" bodyfile="ql/pricingengines/vanilla/exponentialfittinghestonengine.cpp" bodystart="186" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_exponential_fitting_heston_engine_1ad36a932f93b79ce7361880ecb607cf36" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::ExponentialFittingHestonEngine::calculate</definition>
        <argsstring>() const override</argsstring>
        <name>calculate</name>
        <qualifiedname>QuantLib::ExponentialFittingHestonEngine::calculate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_pricing_engine_1ad2be11cff80d9792f0cc8231711fcb06">calculate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/exponentialfittinghestonengine.hpp" line="61" column="14" bodyfile="ql/pricingengines/vanilla/exponentialfittinghestonengine.cpp" bodystart="207" bodyend="306"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>analytic Heston-model engine based on </para>
    </briefdescription>
    <detaileddescription>
<para>References: D. Conte, L. Ixaru, B. Paternoster, G. Santomauro, 2014 Exponentially-fitted Gaussâ€“Laguerre quadrature rule for integrals over an unbounded interval</para>
<para>For adaptation details see <ulink url="https://hpcquantlib.wordpress.com/2020/05/17/optimized-heston-model-integration-exponentially-fitted-gauss-laguerre-quadrature-rule/">https://hpcquantlib.wordpress.com/2020/05/17/optimized-heston-model-integration-exponentially-fitted-gauss-laguerre-quadrature-rule/</ulink> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::ExponentialFittingHestonEngine</label>
        <link refid="class_quant_lib_1_1_exponential_fitting_heston_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::GenericEngine&lt; VanillaOption::arguments, VanillaOption::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_engine"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::GenericModelEngine&lt; HestonModel, VanillaOption::arguments, VanillaOption::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_model_engine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="4">
        <label>QuantLib::PricingEngine</label>
        <link refid="class_quant_lib_1_1_pricing_engine"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::ExponentialFittingHestonEngine</label>
        <link refid="class_quant_lib_1_1_exponential_fitting_heston_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::GenericEngine&lt; VanillaOption::arguments, VanillaOption::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_engine"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::GenericModelEngine&lt; HestonModel, VanillaOption::arguments, VanillaOption::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_model_engine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>model_</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::Handle&lt; HestonModel &gt;</label>
        <link refid="class_quant_lib_1_1_handle"/>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="4">
        <label>QuantLib::PricingEngine</label>
        <link refid="class_quant_lib_1_1_pricing_engine"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/pricingengines/vanilla/exponentialfittinghestonengine.hpp" line="48" column="5" bodyfile="ql/pricingengines/vanilla/exponentialfittinghestonengine.hpp" bodystart="51" bodyend="69"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_exponential_fitting_heston_engine_1a032031911c84cd115fa1cfbff37b668d" prot="private" virt="non-virtual"><scope>QuantLib::ExponentialFittingHestonEngine</scope><name>alpha_</name></member>
      <member refid="class_quant_lib_1_1_exponential_fitting_heston_engine_1ae928c8227742e40a3d42c63a1adc8724" prot="private" virt="non-virtual"><scope>QuantLib::ExponentialFittingHestonEngine</scope><name>analyticEngine_</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1ad2371cdbafa1989afb0e4733b1212c0d" prot="protected" virt="non-virtual"><scope>QuantLib::ExponentialFittingHestonEngine</scope><name>arguments_</name></member>
      <member refid="class_quant_lib_1_1_exponential_fitting_heston_engine_1ad36a932f93b79ce7361880ecb607cf36" prot="public" virt="virtual"><scope>QuantLib::ExponentialFittingHestonEngine</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_exponential_fitting_heston_engine_1ab46410fde68743563978fbc3584f7218" prot="public" virt="non-virtual"><scope>QuantLib::ExponentialFittingHestonEngine</scope><name>ControlVariate</name></member>
      <member refid="class_quant_lib_1_1_exponential_fitting_heston_engine_1a64ed346872dda789bec87a40329d35bf" prot="private" virt="non-virtual"><scope>QuantLib::ExponentialFittingHestonEngine</scope><name>cv_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::ExponentialFittingHestonEngine</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_exponential_fitting_heston_engine_1a4ae3679c77740d64383830086d679526" prot="public" virt="non-virtual"><scope>QuantLib::ExponentialFittingHestonEngine</scope><name>ExponentialFittingHestonEngine</name></member>
      <member refid="class_quant_lib_1_1_generic_model_engine_1ab8c094dbe99234f8aa9dc0a92e0e5fd1" prot="public" virt="non-virtual"><scope>QuantLib::ExponentialFittingHestonEngine</scope><name>GenericModelEngine</name></member>
      <member refid="class_quant_lib_1_1_generic_model_engine_1a8ab246499452beddca7225a2c63f8549" prot="public" virt="non-virtual"><scope>QuantLib::ExponentialFittingHestonEngine</scope><name>GenericModelEngine</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1ad9c6e8dc65ca072d5e6e17640d74db3e" prot="public" virt="virtual"><scope>QuantLib::ExponentialFittingHestonEngine</scope><name>getArguments</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1aea8272ef6e5e0ea1cffadfed0454fa88" prot="public" virt="virtual"><scope>QuantLib::ExponentialFittingHestonEngine</scope><name>getResults</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::ExponentialFittingHestonEngine</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_generic_model_engine_1a48733a3abfeb33214816709c9c5c6b62" prot="protected" virt="non-virtual"><scope>QuantLib::ExponentialFittingHestonEngine</scope><name>model_</name></member>
      <member refid="class_quant_lib_1_1_exponential_fitting_heston_engine_1a1d4ae26fe0ea0e6e7b171363a5d0d66e" prot="private" virt="non-virtual"><scope>QuantLib::ExponentialFittingHestonEngine</scope><name>moneyness_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::ExponentialFittingHestonEngine</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::ExponentialFittingHestonEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::ExponentialFittingHestonEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::ExponentialFittingHestonEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::ExponentialFittingHestonEngine</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::ExponentialFittingHestonEngine</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::ExponentialFittingHestonEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::ExponentialFittingHestonEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::ExponentialFittingHestonEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::ExponentialFittingHestonEngine</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::ExponentialFittingHestonEngine</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1a81c5390ba1e713e57ca87d5f841d37f2" prot="public" virt="virtual"><scope>QuantLib::ExponentialFittingHestonEngine</scope><name>reset</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1a41281f2ea4990dbce90be1f9f2e231f6" prot="protected" virt="non-virtual"><scope>QuantLib::ExponentialFittingHestonEngine</scope><name>results_</name></member>
      <member refid="class_quant_lib_1_1_exponential_fitting_heston_engine_1abb90ec6d5e196f8176ef72c9aa232962" prot="private" virt="non-virtual"><scope>QuantLib::ExponentialFittingHestonEngine</scope><name>scaling_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::ExponentialFittingHestonEngine</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::ExponentialFittingHestonEngine</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1aaf5ef54d9e1abf8b1b50b48804edf3dc" prot="public" virt="virtual"><scope>QuantLib::ExponentialFittingHestonEngine</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::ExponentialFittingHestonEngine</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::ExponentialFittingHestonEngine</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_pricing_engine_1a66b279a54578cd7e60d402e5147eb526" prot="public" virt="non-virtual"><scope>QuantLib::ExponentialFittingHestonEngine</scope><name>~PricingEngine</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1detail_1_1_vector_bsm_process_extractor" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::detail::VectorBsmProcessExtractor</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1detail_1_1_vector_bsm_process_extractor_1a01cf651e67f1eeab0305afaa406c93ac" prot="private" static="no" mutable="no">
        <type>const std::vector&lt; ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_generalized_black_scholes_process" kindref="compound">GeneralizedBlackScholesProcess</ref> &gt; &gt;</type>
        <definition>const std::vector&lt;ext::shared_ptr&lt;GeneralizedBlackScholesProcess&gt; &gt; QuantLib::detail::VectorBsmProcessExtractor::processes_</definition>
        <argsstring></argsstring>
        <name>processes_</name>
        <qualifiedname>QuantLib::detail::VectorBsmProcessExtractor::processes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/vectorbsmprocessextractor.hpp" line="47" column="31" bodyfile="ql/pricingengines/basket/vectorbsmprocessextractor.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1detail_1_1_vector_bsm_process_extractor_1ab506ed8d6da388611cf601c065894489" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::detail::VectorBsmProcessExtractor::VectorBsmProcessExtractor</definition>
        <argsstring>(std::vector&lt; ext::shared_ptr&lt; GeneralizedBlackScholesProcess &gt; &gt; p)</argsstring>
        <name>VectorBsmProcessExtractor</name>
        <qualifiedname>QuantLib::detail::VectorBsmProcessExtractor::VectorBsmProcessExtractor</qualifiedname>
        <param>
          <type>std::vector&lt; ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_generalized_black_scholes_process" kindref="compound">GeneralizedBlackScholesProcess</ref> &gt; &gt;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/vectorbsmprocessextractor.hpp" line="34" column="22" bodyfile="ql/pricingengines/basket/vectorbsmprocessextractor.cpp" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1detail_1_1_vector_bsm_process_extractor_1a17b86bc29a4d137a5ad44ac39f6d455d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::detail::VectorBsmProcessExtractor::getSpot</definition>
        <argsstring>() const</argsstring>
        <name>getSpot</name>
        <qualifiedname>QuantLib::detail::VectorBsmProcessExtractor::getSpot</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/vectorbsmprocessextractor.hpp" line="37" column="19" bodyfile="ql/pricingengines/basket/vectorbsmprocessextractor.cpp" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1detail_1_1_vector_bsm_process_extractor_1a96802f90855428186d9afe0638b7f664" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::detail::VectorBsmProcessExtractor::getBlackStdDev</definition>
        <argsstring>(const Date &amp;maturityDate) const</argsstring>
        <name>getBlackStdDev</name>
        <qualifiedname>QuantLib::detail::VectorBsmProcessExtractor::getBlackStdDev</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>maturityDate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/vectorbsmprocessextractor.hpp" line="38" column="19" bodyfile="ql/pricingengines/basket/vectorbsmprocessextractor.cpp" bodystart="85" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1detail_1_1_vector_bsm_process_extractor_1aa5a9f790edb021f23fe855e61d146fef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::detail::VectorBsmProcessExtractor::getBlackVariance</definition>
        <argsstring>(const Date &amp;maturityDate) const</argsstring>
        <name>getBlackVariance</name>
        <qualifiedname>QuantLib::detail::VectorBsmProcessExtractor::getBlackVariance</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>maturityDate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/vectorbsmprocessextractor.hpp" line="39" column="19" bodyfile="ql/pricingengines/basket/vectorbsmprocessextractor.cpp" bodystart="76" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1detail_1_1_vector_bsm_process_extractor_1aa6444da07c8721a0f642b447972247f0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::detail::VectorBsmProcessExtractor::getDividendYieldDf</definition>
        <argsstring>(const Date &amp;maturityDate) const</argsstring>
        <name>getDividendYieldDf</name>
        <qualifiedname>QuantLib::detail::VectorBsmProcessExtractor::getDividendYieldDf</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>maturityDate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/vectorbsmprocessextractor.hpp" line="40" column="19" bodyfile="ql/pricingengines/basket/vectorbsmprocessextractor.cpp" bodystart="67" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1detail_1_1_vector_bsm_process_extractor_1a4ad00ee31ddeaf045fe5d12b1e5e218e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a05e8e288a4bdedfe5b4e16d8cec14f1c" kindref="member">DiscountFactor</ref></type>
        <definition>DiscountFactor QuantLib::detail::VectorBsmProcessExtractor::getInterestRateDf</definition>
        <argsstring>(const Date &amp;maturityDate) const</argsstring>
        <name>getInterestRateDf</name>
        <qualifiedname>QuantLib::detail::VectorBsmProcessExtractor::getInterestRateDf</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>maturityDate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/vectorbsmprocessextractor.hpp" line="41" column="28" bodyfile="ql/pricingengines/basket/vectorbsmprocessextractor.cpp" bodystart="44" bodyend="61"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1detail_1_1_vector_bsm_process_extractor_1aa50e83c965d74284ed01023c83d23b01" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::detail::VectorBsmProcessExtractor::extractProcesses</definition>
        <argsstring>(const std::function&lt; Real(const ext::shared_ptr&lt; GeneralizedBlackScholesProcess &gt; &amp;)&gt; &amp;f) const</argsstring>
        <name>extractProcesses</name>
        <qualifiedname>QuantLib::detail::VectorBsmProcessExtractor::extractProcesses</qualifiedname>
        <param>
          <type>const std::function&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>(const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_generalized_black_scholes_process" kindref="compound">GeneralizedBlackScholesProcess</ref> &gt; &amp;)&gt; &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/vectorbsmprocessextractor.hpp" line="44" column="19" bodyfile="ql/pricingengines/basket/vectorbsmprocessextractor.cpp" bodystart="34" bodyend="42"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/pricingengines/basket/vectorbsmprocessextractor.hpp" line="32" column="9" bodyfile="ql/pricingengines/basket/vectorbsmprocessextractor.hpp" bodystart="32" bodyend="48"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1detail_1_1_vector_bsm_process_extractor_1aa50e83c965d74284ed01023c83d23b01" prot="private" virt="non-virtual"><scope>QuantLib::detail::VectorBsmProcessExtractor</scope><name>extractProcesses</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_vector_bsm_process_extractor_1a96802f90855428186d9afe0638b7f664" prot="public" virt="non-virtual"><scope>QuantLib::detail::VectorBsmProcessExtractor</scope><name>getBlackStdDev</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_vector_bsm_process_extractor_1aa5a9f790edb021f23fe855e61d146fef" prot="public" virt="non-virtual"><scope>QuantLib::detail::VectorBsmProcessExtractor</scope><name>getBlackVariance</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_vector_bsm_process_extractor_1aa6444da07c8721a0f642b447972247f0" prot="public" virt="non-virtual"><scope>QuantLib::detail::VectorBsmProcessExtractor</scope><name>getDividendYieldDf</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_vector_bsm_process_extractor_1a4ad00ee31ddeaf045fe5d12b1e5e218e" prot="public" virt="non-virtual"><scope>QuantLib::detail::VectorBsmProcessExtractor</scope><name>getInterestRateDf</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_vector_bsm_process_extractor_1a17b86bc29a4d137a5ad44ac39f6d455d" prot="public" virt="non-virtual"><scope>QuantLib::detail::VectorBsmProcessExtractor</scope><name>getSpot</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_vector_bsm_process_extractor_1a01cf651e67f1eeab0305afaa406c93ac" prot="private" virt="non-virtual"><scope>QuantLib::detail::VectorBsmProcessExtractor</scope><name>processes_</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_vector_bsm_process_extractor_1ab506ed8d6da388611cf601c065894489" prot="public" virt="non-virtual"><scope>QuantLib::detail::VectorBsmProcessExtractor</scope><name>VectorBsmProcessExtractor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_c_p_i_bond_helper" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::CPIBondHelper</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_bond_helper" prot="public" virt="non-virtual">QuantLib::BondHelper</basecompoundref>
    <includes refid="bondhelpers_8hpp" local="no">bondhelpers.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Visitability</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_p_i_bond_helper_1ab96f99454b121e91baeafb3bdf05b406" prot="protected" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_c_p_i_bond" kindref="compound">CPIBond</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;CPIBond&gt; QuantLib::CPIBondHelper::cpiBond_</definition>
        <argsstring></argsstring>
        <name>cpiBond_</name>
        <qualifiedname>QuantLib::CPIBondHelper::cpiBond_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000151"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Do not use; this pointer is always null. Deprecated in version 1.34. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/bondhelpers.hpp" line="170" column="25" bodyfile="ql/termstructures/yield/bondhelpers.hpp" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_bond_helper_1a4abbc5af499bcb250ecb45d96e58ab83" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>QL_DEPRECATED_ENABLE_WARNING void QuantLib::CPIBondHelper::accept</definition>
        <argsstring>(AcyclicVisitor &amp;) override</argsstring>
        <name>accept</name>
        <qualifiedname>QuantLib::CPIBondHelper::accept</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_bond_helper_1a6b083b66fc3232dbf1c771632d6db757">accept</reimplements>
        <param>
          <type><ref refid="class_quant_lib_1_1_acyclic_visitor" kindref="compound">AcyclicVisitor</ref> &amp;</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/bondhelpers.hpp" line="163" column="14" bodyfile="ql/termstructures/yield/bondhelpers.cpp" bodystart="150" bodyend="156"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_bond_helper_1acb1360eec81d30a3173176b8f7421ce5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QL_DEPRECATED_DISABLE_WARNING</type>
        <definition>QL_DEPRECATED_DISABLE_WARNING QuantLib::CPIBondHelper::~CPIBondHelper</definition>
        <argsstring>() override=default</argsstring>
        <name>~CPIBondHelper</name>
        <qualifiedname>QuantLib::CPIBondHelper::~CPIBondHelper</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/bondhelpers.hpp" line="128" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_bond_helper_1a94bfc7199300d084877aa3986ac3d808" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QL_DEPRECATED_ENABLE_WARNING</type>
        <definition>QL_DEPRECATED_DISABLE_WARNING QuantLib::CPIBondHelper::CPIBondHelper</definition>
        <argsstring>(const Handle&lt; Quote &gt; &amp;price, Natural settlementDays, Real faceAmount, bool growthOnly, Real baseCPI, const Period &amp;observationLag, const ext::shared_ptr&lt; ZeroInflationIndex &gt; &amp;cpiIndex, CPI::InterpolationType observationInterpolation, Schedule schedule, const std::vector&lt; Rate &gt; &amp;fixedRate, const DayCounter &amp;accrualDayCounter, BusinessDayConvention paymentConvention=Following, const Date &amp;issueDate=Date(), const Calendar &amp;paymentCalendar=Calendar(), const Period &amp;exCouponPeriod=Period(), const Calendar &amp;exCouponCalendar=Calendar(), BusinessDayConvention exCouponConvention=Unadjusted, bool exCouponEndOfMonth=false, Bond::Price::Type priceType=Bond::Price::Clean)</argsstring>
        <name>CPIBondHelper</name>
        <qualifiedname>QuantLib::CPIBondHelper::CPIBondHelper</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &amp;</type>
          <declname>price</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>settlementDays</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>faceAmount</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>growthOnly</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>baseCPI</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>observationLag</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_zero_inflation_index" kindref="compound">ZeroInflationIndex</ref> &gt; &amp;</type>
          <declname>cpiIndex</declname>
        </param>
        <param>
          <type><ref refid="struct_quant_lib_1_1_c_p_i_1adaf018681fd1d9478c984348c82c9013" kindref="member">CPI::InterpolationType</ref></type>
          <declname>observationInterpolation</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_schedule" kindref="compound">Schedule</ref></type>
          <declname>schedule</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
          <declname>fixedRate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>accrualDayCounter</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
          <declname>paymentConvention</declname>
          <defval><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881ad881bac893a17d75191f0041eefda956" kindref="member">Following</ref></defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>issueDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>paymentCalendar</declname>
          <defval><ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>exCouponPeriod</declname>
          <defval><ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>exCouponCalendar</declname>
          <defval><ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref>()</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
          <declname>exCouponConvention</declname>
          <defval><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881a6a9f8f55985b149ed0c336c23bf03667" kindref="member">Unadjusted</ref></defval>
        </param>
        <param>
          <type>bool</type>
          <declname>exCouponEndOfMonth</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>Bond::Price::Type</type>
          <declname>priceType</declname>
          <defval>Bond::Price::Clean</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/bondhelpers.hpp" line="131" column="9" bodyfile="ql/termstructures/yield/bondhelpers.cpp" bodystart="120" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_bond_helper_1a8f4edd923cc683be6f1ef0cc93abd7bc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_c_p_i_bond" kindref="compound">CPIBond</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; CPIBond &gt; QuantLib::CPIBondHelper::cpiBond</definition>
        <argsstring>() const</argsstring>
        <name>cpiBond</name>
        <qualifiedname>QuantLib::CPIBondHelper::cpiBond</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000150"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Do not use; this method is broken and will be removed. Deprecated in version 1.34. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/bondhelpers.hpp" line="155" column="25" bodyfile="ql/termstructures/yield/bondhelpers.hpp" bodystart="155" bodyend="159"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para><ref refid="struct_quant_lib_1_1_c_p_i" kindref="compound">CPI</ref> bond helper for curve bootstrap. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::BondHelper</label>
        <link refid="class_quant_lib_1_1_bond_helper"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::CPIBondHelper</label>
        <link refid="class_quant_lib_1_1_c_p_i_bond_helper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="3">
        <label>RateHelper</label>
        <link refid="class_quant_lib_1_1_bootstrap_helper"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::BondHelper</label>
        <link refid="class_quant_lib_1_1_bond_helper"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>termStructureHandle_</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::CPIBondHelper</label>
        <link refid="class_quant_lib_1_1_c_p_i_bond_helper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::Handle&lt; QuantLib::YieldTermStructure &gt;</label>
        <link refid="class_quant_lib_1_1_handle"/>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="6">
        <label>QuantLib::RelinkableHandle&lt; QuantLib::YieldTermStructure &gt;</label>
        <link refid="class_quant_lib_1_1_relinkable_handle"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>RateHelper</label>
        <link refid="class_quant_lib_1_1_bootstrap_helper"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/termstructures/yield/bondhelpers.hpp" line="123" column="5" bodyfile="ql/termstructures/yield/bondhelpers.hpp" bodystart="123" bodyend="171"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_c_p_i_bond_helper_1a4abbc5af499bcb250ecb45d96e58ab83" prot="public" virt="virtual"><scope>QuantLib::CPIBondHelper</scope><name>accept</name></member>
      <member refid="class_quant_lib_1_1_bond_helper_1aad79a298a117f5e8a565cd0f85055ffc" prot="public" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>bond</name></member>
      <member refid="class_quant_lib_1_1_bond_helper_1a3559e1c44988201a6db024b6d56d9ccd" prot="protected" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>bond_</name></member>
      <member refid="class_quant_lib_1_1_bond_helper_1aeb721bf561e99cb7bf9b374ea8b73f76" prot="public" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>BondHelper</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a6e05e5d944839468441bca22c133d65a" prot="public" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>BootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a30a010aae5e4cc54d38457de4aa39c7e" prot="public" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>BootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a6e05e5d944839468441bca22c133d65a" prot="public" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>BootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a30a010aae5e4cc54d38457de4aa39c7e" prot="public" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>BootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_bond_helper_1a8f4edd923cc683be6f1ef0cc93abd7bc" prot="public" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>cpiBond</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_bond_helper_1ab96f99454b121e91baeafb3bdf05b406" prot="protected" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>cpiBond_</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_bond_helper_1a94bfc7199300d084877aa3986ac3d808" prot="public" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>CPIBondHelper</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::CPIBondHelper</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a1ca284f9f4ade8b17be1f5c284b1cfb2" prot="public" virt="virtual"><scope>QuantLib::CPIBondHelper</scope><name>earliestDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a1ca284f9f4ade8b17be1f5c284b1cfb2" prot="public" virt="virtual"><scope>QuantLib::CPIBondHelper</scope><name>earliestDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a3f5c545866d04dc90e2c3aec44974e08" prot="protected" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>earliestDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a3f5c545866d04dc90e2c3aec44974e08" prot="protected" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>earliestDate_</name></member>
      <member refid="class_quant_lib_1_1_bond_helper_1a7ed9e02e12db0c29d5952b5d67627e1b" prot="public" virt="virtual"><scope>QuantLib::CPIBondHelper</scope><name>impliedQuote</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::CPIBondHelper</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a7b21f7d30980757a9721ef13ad7979af" prot="public" virt="virtual"><scope>QuantLib::CPIBondHelper</scope><name>latestDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a7b21f7d30980757a9721ef13ad7979af" prot="public" virt="virtual"><scope>QuantLib::CPIBondHelper</scope><name>latestDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a73a413539e8d6a526e8cc29f928f976c" prot="protected" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>latestDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a73a413539e8d6a526e8cc29f928f976c" prot="protected" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>latestDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1afc339bcd0b9d3029c20dfacaac5adf52" prot="public" virt="virtual"><scope>QuantLib::CPIBondHelper</scope><name>latestRelevantDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1afc339bcd0b9d3029c20dfacaac5adf52" prot="public" virt="virtual"><scope>QuantLib::CPIBondHelper</scope><name>latestRelevantDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a06f481f14c2b2b0624f2e0f8967353b0" prot="protected" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>latestRelevantDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a06f481f14c2b2b0624f2e0f8967353b0" prot="protected" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>latestRelevantDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1ad74f6e8a3c4f734a83edacaeb6fe53e0" prot="public" virt="virtual"><scope>QuantLib::CPIBondHelper</scope><name>maturityDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1ad74f6e8a3c4f734a83edacaeb6fe53e0" prot="public" virt="virtual"><scope>QuantLib::CPIBondHelper</scope><name>maturityDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1aa79e8a482771bdf0656a7afa4c557118" prot="protected" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>maturityDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1aa79e8a482771bdf0656a7afa4c557118" prot="protected" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>maturityDate_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::CPIBondHelper</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::CPIBondHelper</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::CPIBondHelper</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::CPIBondHelper</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::CPIBondHelper</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a00496ecfac2fb317e435a6fe48c5c267" prot="public" virt="virtual"><scope>QuantLib::CPIBondHelper</scope><name>pillarDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a00496ecfac2fb317e435a6fe48c5c267" prot="public" virt="virtual"><scope>QuantLib::CPIBondHelper</scope><name>pillarDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1aa1aa18bed40139d0dae5e0df17968255" prot="protected" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>pillarDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1aa1aa18bed40139d0dae5e0df17968255" prot="protected" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>pillarDate_</name></member>
      <member refid="class_quant_lib_1_1_bond_helper_1af862c24be8b1d33c017e0bd90c4f5355" prot="public" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>priceType</name></member>
      <member refid="class_quant_lib_1_1_bond_helper_1afae5c8101e0ceaa12dddcbd1f3f9a155" prot="protected" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>priceType_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a9e9a17bde5f762d0f75305310a84ae4d" prot="public" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>quote</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a9e9a17bde5f762d0f75305310a84ae4d" prot="public" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>quote</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a8480a30335c8da30122287bf782bc4b3" prot="protected" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>quote_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a8480a30335c8da30122287bf782bc4b3" prot="protected" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>quote_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a9bd06175fab6b2b4326c36b7e0f18007" prot="public" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>quoteError</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a9bd06175fab6b2b4326c36b7e0f18007" prot="public" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>quoteError</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_bond_helper_1a6d9bd0aab464bc7b80e8cc5a837c1935" prot="public" virt="virtual"><scope>QuantLib::CPIBondHelper</scope><name>setTermStructure</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a1f17a55318c87b85475f7a0ace4881fc" prot="public" virt="virtual" ambiguityscope="QuantLib::BootstrapHelper&lt; YieldTermStructure &gt;::"><scope>QuantLib::CPIBondHelper</scope><name>setTermStructure</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a45322b36556492c6e52e1c64ebc8668e" prot="protected" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>termStructure_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a45322b36556492c6e52e1c64ebc8668e" prot="protected" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>termStructure_</name></member>
      <member refid="class_quant_lib_1_1_bond_helper_1a38712f9d91812a3dbc86a8e5dcfbd2fa" prot="protected" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>termStructureHandle_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a29362a38767e0231afc9430c8039cf42" prot="public" virt="virtual"><scope>QuantLib::CPIBondHelper</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a29362a38767e0231afc9430c8039cf42" prot="public" virt="virtual"><scope>QuantLib::CPIBondHelper</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a950cc899a68be0a5f04119edd931bd1d" prot="public" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>~BootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a950cc899a68be0a5f04119edd931bd1d" prot="public" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>~BootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_bond_helper_1acb1360eec81d30a3173176b8f7421ce5" prot="public" virt="non-virtual"><scope>QuantLib::CPIBondHelper</scope><name>~CPIBondHelper</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::CPIBondHelper</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::CPIBondHelper</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

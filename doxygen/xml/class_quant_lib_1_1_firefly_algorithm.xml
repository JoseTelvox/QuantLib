<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_firefly_algorithm" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::FireflyAlgorithm</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_optimization_method" prot="public" virt="non-virtual">QuantLib::OptimizationMethod</basecompoundref>
    <includes refid="fireflyalgorithm_8hpp" local="no">fireflyalgorithm.hpp</includes>
    <innerclass refid="class_quant_lib_1_1_firefly_algorithm_1_1_intensity" prot="public">QuantLib::FireflyAlgorithm::Intensity</innerclass>
    <innerclass refid="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk" prot="public">QuantLib::FireflyAlgorithm::RandomWalk</innerclass>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_firefly_algorithm_1a07a4e0e8079020c9c42af1191b92ccb3" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &gt;</type>
        <definition>std::vector&lt;Array&gt; QuantLib::FireflyAlgorithm::x_</definition>
        <argsstring></argsstring>
        <name>x_</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::x_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="95" column="21" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_firefly_algorithm_1a13bee679fb71625e93e3b0a383163946" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &gt;</type>
        <definition>std::vector&lt;Array&gt; QuantLib::FireflyAlgorithm::xI_</definition>
        <argsstring></argsstring>
        <name>xI_</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::xI_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="95" column="24" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_firefly_algorithm_1a7371908fa54660ca05ea97183561630f" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &gt;</type>
        <definition>std::vector&lt;Array&gt; QuantLib::FireflyAlgorithm::xRW_</definition>
        <argsstring></argsstring>
        <name>xRW_</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::xRW_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="95" column="28" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_firefly_algorithm_1af217d97f49dc9221e5bd96921a9aed12" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::pair&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>, <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::pair&lt;Real, Size&gt; &gt; QuantLib::FireflyAlgorithm::values_</definition>
        <argsstring></argsstring>
        <name>values_</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::values_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="96" column="21" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_firefly_algorithm_1a74be431fc7d9b3beb4594fd8fa33052f" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FireflyAlgorithm::lX_</definition>
        <argsstring></argsstring>
        <name>lX_</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::lX_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="97" column="15" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_firefly_algorithm_1a182b49cbf8150e06afca645704d24be5" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FireflyAlgorithm::uX_</definition>
        <argsstring></argsstring>
        <name>uX_</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::uX_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="97" column="19" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_firefly_algorithm_1ae9714d37eb870b12d42bdf508d3d8aba" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::FireflyAlgorithm::mutation_</definition>
        <argsstring></argsstring>
        <name>mutation_</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::mutation_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="98" column="14" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_firefly_algorithm_1a87b1821ed0664cbecb3b9f7026fbfa63" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::FireflyAlgorithm::crossover_</definition>
        <argsstring></argsstring>
        <name>crossover_</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::crossover_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="98" column="24" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_firefly_algorithm_1aceb639f77358ce5b977cbedf98aab0eb" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::FireflyAlgorithm::M_</definition>
        <argsstring></argsstring>
        <name>M_</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::M_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="99" column="14" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_firefly_algorithm_1ae893468e545825c6700b3005894f5e1f" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::FireflyAlgorithm::N_</definition>
        <argsstring></argsstring>
        <name>N_</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::N_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="99" column="17" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_firefly_algorithm_1ad8a474c33709bff8656b190987b80d5e" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::FireflyAlgorithm::Mde_</definition>
        <argsstring></argsstring>
        <name>Mde_</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::Mde_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="99" column="20" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_firefly_algorithm_1a16193929e085ebf5cf025b494b084a32" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::FireflyAlgorithm::Mfa_</definition>
        <argsstring></argsstring>
        <name>Mfa_</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::Mfa_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="99" column="25" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_firefly_algorithm_1a1730c795f5507852acedb5317107dc2d" prot="protected" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_firefly_algorithm_1_1_intensity" kindref="compound">Intensity</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;Intensity&gt; QuantLib::FireflyAlgorithm::intensity_</definition>
        <argsstring></argsstring>
        <name>intensity_</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::intensity_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="100" column="25" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_firefly_algorithm_1a4d9f7d38af4d600b0f4d778ac5a664ad" prot="protected" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk" kindref="compound">RandomWalk</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;RandomWalk&gt; QuantLib::FireflyAlgorithm::randomWalk_</definition>
        <argsstring></argsstring>
        <name>randomWalk_</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::randomWalk_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="101" column="25" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_firefly_algorithm_1a32661b4a5ccb105199df54e240382245" prot="protected" static="no" mutable="no">
        <type>std::mt19937</type>
        <definition>std::mt19937 QuantLib::FireflyAlgorithm::generator_</definition>
        <argsstring></argsstring>
        <name>generator_</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::generator_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="102" column="22" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_firefly_algorithm_1a9883311e6ca253c31ff8221616cbbc10" prot="protected" static="no" mutable="no">
        <type>std::uniform_int_distribution&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">QuantLib::Size</ref> &gt;</type>
        <definition>std::uniform_int_distribution&lt;QuantLib::Size&gt; QuantLib::FireflyAlgorithm::distribution_</definition>
        <argsstring></argsstring>
        <name>distribution_</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::distribution_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="103" column="39" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_firefly_algorithm_1a66efefbce49e0109b259468419319c66" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_mersenne_twister_uniform_rng" kindref="compound">MersenneTwisterUniformRng</ref></type>
        <definition>MersenneTwisterUniformRng QuantLib::FireflyAlgorithm::rng_</definition>
        <argsstring></argsstring>
        <name>rng_</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::rng_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="104" column="35" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_firefly_algorithm_1a7f3720ded039824e126e29ea4ffddf6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FireflyAlgorithm::FireflyAlgorithm</definition>
        <argsstring>(Size M, ext::shared_ptr&lt; Intensity &gt; intensity, ext::shared_ptr&lt; RandomWalk &gt; randomWalk, Size Mde=0, Real mutationFactor=1.0, Real crossoverFactor=0.5, unsigned long seed=SeedGenerator::instance().get())</argsstring>
        <name>FireflyAlgorithm</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::FireflyAlgorithm</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>M</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_firefly_algorithm_1_1_intensity" kindref="compound">Intensity</ref> &gt;</type>
          <declname>intensity</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk" kindref="compound">RandomWalk</ref> &gt;</type>
          <declname>randomWalk</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>Mde</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>mutationFactor</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>crossoverFactor</declname>
          <defval>0.5</defval>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>seed</declname>
          <defval><ref refid="class_quant_lib_1_1_singleton_1ac412b7766b32f56372a3e966c5f3f386" kindref="member">SeedGenerator::instance</ref>().get()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="84" column="9" bodyfile="ql/experimental/math/fireflyalgorithm.cpp" bodystart="27" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_firefly_algorithm_1aaf47443ce231879475ce806aef8356ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::FireflyAlgorithm::startState</definition>
        <argsstring>(Problem &amp;P, const EndCriteria &amp;endCriteria)</argsstring>
        <name>startState</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::startState</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_problem" kindref="compound">Problem</ref> &amp;</type>
          <declname>P</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_end_criteria" kindref="compound">EndCriteria</ref> &amp;</type>
          <declname>endCriteria</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="91" column="14" bodyfile="ql/experimental/math/fireflyalgorithm.cpp" bodystart="42" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_firefly_algorithm_1a20e6506e19f07e8e9b81c01061887e01" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>EndCriteria::Type</type>
        <definition>EndCriteria::Type QuantLib::FireflyAlgorithm::minimize</definition>
        <argsstring>(Problem &amp;P, const EndCriteria &amp;endCriteria) override</argsstring>
        <name>minimize</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::minimize</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_optimization_method_1a28097ae73d0d2a310938f51b72a48348">minimize</reimplements>
        <param>
          <type><ref refid="class_quant_lib_1_1_problem" kindref="compound">Problem</ref> &amp;</type>
          <declname>P</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_end_criteria" kindref="compound">EndCriteria</ref> &amp;</type>
          <declname>endCriteria</declname>
        </param>
        <briefdescription>
<para>minimize the optimization problem P </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="92" column="27" bodyfile="ql/experimental/math/fireflyalgorithm.cpp" bodystart="75" bodyend="219"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>The main process is as follows: M individuals are used to explore the N-dimensional parameter space: <formula id="119">$ X_{i}^k = (X_{i, 1}^k, X_{i, 2}^k, \ldots, X_{i, N}^k) $</formula> is the kth-iteration for the ith-individual. X is updated via the rule   <formula id="120">\[X_{i, j}^{k+1} = X_{i, j}^k + I(X^k)_{i,j} + RandomWalk_{i,j}^k
\]</formula></para>
<para>The intensity function I(X) should be monotonic The optimization stops either because the number of iterations has been reached or because the stationary function value limit has been reached.</para>
<para>The current implementation extends the normal Firefly Algorithm with a differential evolution (DE) optimizer according to: Afnizanfaizal Abdullah, et al. &quot;A New Hybrid Firefly Algorithm for Complex and 
Nonlinear Problem&quot;. Volume 151 of the series Advances in Intelligent and Soft Computing pp 673-680, 2012. <ulink url="http://link.springer.com/chapter/10.1007%2F978-3-642-28765-7_81">http://link.springer.com/chapter/10.1007%2F978-3-642-28765-7_81</ulink></para>
<para>In effect this implementation provides a fully fledged DE global optimizer as well. The Firefly Algorithm was easy to combine with DE because it already contained a step where the current solutions are sorted. The population is then divided into two subpopulations based on their order. The subpopulation with the best results are updated via the firefly algorithm. The worse subpopulation is updated via the DE operator:   <formula id="121">\[Y^{k+1} = X_{best}^k + F(X_{r1}^k - X_{r2}^k)
\]</formula> and   <formula id="122">\[X_{i,j}^{k+1} = Y_{i,j}^{k+1}\ \text{if} R_{i,j} &lt;= C
\]</formula>   <formula id="123">\[X_{i,j}^{k+1} = X_{i,j}^{k+1}\ \text{otherwise}
\]</formula> where C is the crossover constant, and R is a random uniformly distributed number. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::FireflyAlgorithm</label>
        <link refid="class_quant_lib_1_1_firefly_algorithm"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::OptimizationMethod</label>
        <link refid="class_quant_lib_1_1_optimization_method"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>QuantLib::Array</label>
        <link refid="class_quant_lib_1_1_array"/>
      </node>
      <node id="1">
        <label>QuantLib::FireflyAlgorithm</label>
        <link refid="class_quant_lib_1_1_firefly_algorithm"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>lX_</edgelabel>
          <edgelabel>uX_</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>rng_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::MersenneTwisterUniformRng</label>
        <link refid="class_quant_lib_1_1_mersenne_twister_uniform_rng"/>
      </node>
      <node id="2">
        <label>QuantLib::OptimizationMethod</label>
        <link refid="class_quant_lib_1_1_optimization_method"/>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/math/fireflyalgorithm.hpp" line="80" column="5" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="80" bodyend="105"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1a87b1821ed0664cbecb3b9f7026fbfa63" prot="protected" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm</scope><name>crossover_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1a9883311e6ca253c31ff8221616cbbc10" prot="protected" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm</scope><name>distribution_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1a7f3720ded039824e126e29ea4ffddf6a" prot="public" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm</scope><name>FireflyAlgorithm</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1a32661b4a5ccb105199df54e240382245" prot="protected" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm</scope><name>generator_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1a1730c795f5507852acedb5317107dc2d" prot="protected" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm</scope><name>intensity_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1a74be431fc7d9b3beb4594fd8fa33052f" prot="protected" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm</scope><name>lX_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1aceb639f77358ce5b977cbedf98aab0eb" prot="protected" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm</scope><name>M_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1ad8a474c33709bff8656b190987b80d5e" prot="protected" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm</scope><name>Mde_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1a16193929e085ebf5cf025b494b084a32" prot="protected" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm</scope><name>Mfa_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1a20e6506e19f07e8e9b81c01061887e01" prot="public" virt="virtual"><scope>QuantLib::FireflyAlgorithm</scope><name>minimize</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1ae9714d37eb870b12d42bdf508d3d8aba" prot="protected" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm</scope><name>mutation_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1ae893468e545825c6700b3005894f5e1f" prot="protected" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm</scope><name>N_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1a4d9f7d38af4d600b0f4d778ac5a664ad" prot="protected" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm</scope><name>randomWalk_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1a66efefbce49e0109b259468419319c66" prot="protected" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm</scope><name>rng_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1aaf47443ce231879475ce806aef8356ba" prot="public" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm</scope><name>startState</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1a182b49cbf8150e06afca645704d24be5" prot="protected" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm</scope><name>uX_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1af217d97f49dc9221e5bd96921a9aed12" prot="protected" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm</scope><name>values_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1a07a4e0e8079020c9c42af1191b92ccb3" prot="protected" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm</scope><name>x_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1a13bee679fb71625e93e3b0a383163946" prot="protected" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm</scope><name>xI_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1a7371908fa54660ca05ea97183561630f" prot="protected" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm</scope><name>xRW_</name></member>
      <member refid="class_quant_lib_1_1_optimization_method_1a2e9a51f0954eaf649d075d565d43938c" prot="public" virt="virtual"><scope>QuantLib::FireflyAlgorithm</scope><name>~OptimizationMethod</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

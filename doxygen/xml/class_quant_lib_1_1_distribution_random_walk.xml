<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_distribution_random_walk" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::DistributionRandomWalk</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk" prot="public" virt="non-virtual">QuantLib::FireflyAlgorithm::RandomWalk</basecompoundref>
    <includes refid="fireflyalgorithm_8hpp" local="no">fireflyalgorithm.hpp</includes>
    <templateparamlist>
      <param>
        <type>class <ref refid="class_quant_lib_1_1_distribution" kindref="compound">Distribution</ref></type>
      </param>
    </templateparamlist>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_distribution_random_walk_1a94dce9100d71f0ba95fe417de4ad24fc" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_isotropic_random_walk" kindref="compound">IsotropicRandomWalk</ref>&lt; <ref refid="class_quant_lib_1_1_distribution" kindref="compound">Distribution</ref>, std::mt19937 &gt;</type>
        <definition>IsotropicRandomWalk&lt;Distribution, std::mt19937&gt; QuantLib::DistributionRandomWalk&lt; Distribution &gt;::walkRandom_</definition>
        <argsstring></argsstring>
        <name>walkRandom_</name>
        <qualifiedname>QuantLib::DistributionRandomWalk::walkRandom_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="223" column="29" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_distribution_random_walk_1a9efeba85a17a85371b158b8c64cd4c33" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::DistributionRandomWalk&lt; Distribution &gt;::delta_</definition>
        <argsstring></argsstring>
        <name>delta_</name>
        <qualifiedname>QuantLib::DistributionRandomWalk::delta_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="224" column="14" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="224" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_distribution_random_walk_1ad097506409beab02df9fe886067599d1" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::DistributionRandomWalk&lt; Distribution &gt;::DistributionRandomWalk</definition>
        <argsstring>(Distribution dist, Real delta=0.9, unsigned long seed=SeedGenerator::instance().get())</argsstring>
        <name>DistributionRandomWalk</name>
        <qualifiedname>QuantLib::DistributionRandomWalk::DistributionRandomWalk</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_distribution" kindref="compound">Distribution</ref></type>
          <declname>dist</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>delta</declname>
          <defval>0.9</defval>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>seed</declname>
          <defval><ref refid="class_quant_lib_1_1_singleton_1ac412b7766b32f56372a3e966c5f3f386" kindref="member">SeedGenerator::instance</ref>().get()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="209" column="18" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="209" bodyend="213"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_distribution_random_walk_1a377cff24f6b5de8602c31dc17f33d111" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::DistributionRandomWalk&lt; Distribution &gt;::walkImpl</definition>
        <argsstring>(Array &amp;xRW) override</argsstring>
        <name>walkImpl</name>
        <qualifiedname>QuantLib::DistributionRandomWalk::walkImpl</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk_1ade9601ee6ba1ae4fc8fb31d655df03ae">walkImpl</reimplements>
        <param>
          <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>xRW</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="215" column="14" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="215" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_distribution_random_walk_1a4bdab33f732218965bdaf4239df4a4d8" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::DistributionRandomWalk&lt; Distribution &gt;::init</definition>
        <argsstring>(FireflyAlgorithm *fa) override</argsstring>
        <name>init</name>
        <qualifiedname>QuantLib::DistributionRandomWalk::init</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk_1ae3213c9f3a716687e18710e2618da6c5">init</reimplements>
        <param>
          <type><ref refid="class_quant_lib_1_1_firefly_algorithm" kindref="compound">FireflyAlgorithm</ref> *</type>
          <declname>fa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="219" column="14" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="219" bodyend="222"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para><ref refid="class_quant_lib_1_1_distribution" kindref="compound">Distribution</ref> Walk. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::DistributionRandomWalk&lt; Distribution &gt;</label>
        <link refid="class_quant_lib_1_1_distribution_random_walk"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::FireflyAlgorithm::RandomWalk</label>
        <link refid="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>QuantLib::Array</label>
        <link refid="class_quant_lib_1_1_array"/>
      </node>
      <node id="5">
        <label>QuantLib::Distribution</label>
        <link refid="class_quant_lib_1_1_distribution"/>
      </node>
      <node id="1">
        <label>QuantLib::DistributionRandomWalk&lt; Distribution &gt;</label>
        <link refid="class_quant_lib_1_1_distribution_random_walk"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>walkRandom_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::FireflyAlgorithm::RandomWalk</label>
        <link refid="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk"/>
        <childnode refid="3" relation="usage">
          <edgelabel>lX_</edgelabel>
          <edgelabel>uX_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::IsotropicRandomWalk&lt; QuantLib::Distribution, std::mt19937 &gt;</label>
        <link refid="class_quant_lib_1_1_isotropic_random_walk"/>
        <childnode refid="5" relation="usage">
          <edgelabel>distribution_</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>rng_</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>weights_</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::MersenneTwisterUniformRng</label>
        <link refid="class_quant_lib_1_1_mersenne_twister_uniform_rng"/>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/math/fireflyalgorithm.hpp" line="207" column="5" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="207" bodyend="225"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_distribution_random_walk_1a9efeba85a17a85371b158b8c64cd4c33" prot="protected" virt="non-virtual"><scope>QuantLib::DistributionRandomWalk</scope><name>delta_</name></member>
      <member refid="class_quant_lib_1_1_distribution_random_walk_1ad097506409beab02df9fe886067599d1" prot="public" virt="non-virtual"><scope>QuantLib::DistributionRandomWalk</scope><name>DistributionRandomWalk</name></member>
      <member refid="class_quant_lib_1_1_distribution_random_walk_1a4bdab33f732218965bdaf4239df4a4d8" prot="protected" virt="virtual"><scope>QuantLib::DistributionRandomWalk</scope><name>init</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk_1a6b9209a244c6efb00e5ff642d7ac117c" prot="protected" virt="non-virtual"><scope>QuantLib::DistributionRandomWalk</scope><name>lX_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk_1af539c9fc74ef3d334c2ac205efd83da7" prot="protected" virt="non-virtual"><scope>QuantLib::DistributionRandomWalk</scope><name>Mfa_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk_1aa323e9b50b9c17a5b3ab514ec5ccb51d" prot="protected" virt="non-virtual"><scope>QuantLib::DistributionRandomWalk</scope><name>N_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk_1a03bebd9542062e4ea67620fe99adcf4f" prot="protected" virt="non-virtual"><scope>QuantLib::DistributionRandomWalk</scope><name>uX_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk_1ab5d3a34c5569d8c379baeb29352e1dba" prot="protected" virt="non-virtual"><scope>QuantLib::DistributionRandomWalk</scope><name>values_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk_1adb169853f01232d316b986f099e62d16" prot="public" virt="non-virtual"><scope>QuantLib::DistributionRandomWalk</scope><name>walk</name></member>
      <member refid="class_quant_lib_1_1_distribution_random_walk_1a377cff24f6b5de8602c31dc17f33d111" prot="protected" virt="virtual"><scope>QuantLib::DistributionRandomWalk</scope><name>walkImpl</name></member>
      <member refid="class_quant_lib_1_1_distribution_random_walk_1a94dce9100d71f0ba95fe417de4ad24fc" prot="protected" virt="non-virtual"><scope>QuantLib::DistributionRandomWalk</scope><name>walkRandom_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk_1a874fc53d85da5bb7fed68b71b642afd1" prot="protected" virt="non-virtual"><scope>QuantLib::DistributionRandomWalk</scope><name>x_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk_1a39c7932b597aca42c993fc08b55ccdde" prot="protected" virt="non-virtual"><scope>QuantLib::DistributionRandomWalk</scope><name>xRW_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk_1a33948be8f6665f2ebc8fd4a905e48f71" prot="public" virt="virtual"><scope>QuantLib::DistributionRandomWalk</scope><name>~RandomWalk</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

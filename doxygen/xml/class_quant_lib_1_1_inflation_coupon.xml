<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_inflation_coupon" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::InflationCoupon</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_coupon" prot="public" virt="non-virtual">QuantLib::Coupon</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_c_p_i_coupon" prot="public" virt="non-virtual">QuantLib::CPICoupon</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_yo_y_inflation_coupon" prot="public" virt="non-virtual">QuantLib::YoYInflationCoupon</derivedcompoundref>
    <includes refid="inflationcoupon_8hpp" local="no">inflationcoupon.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Visitability</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_inflation_coupon_1a5eaa3988faec3edb68cb73fb54481e31" prot="protected" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_inflation_coupon_pricer" kindref="compound">InflationCouponPricer</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;InflationCouponPricer&gt; QuantLib::InflationCoupon::pricer_</definition>
        <argsstring></argsstring>
        <name>pricer_</name>
        <qualifiedname>QuantLib::InflationCoupon::pricer_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/inflationcoupon.hpp" line="100" column="25" bodyfile="ql/cashflows/inflationcoupon.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_inflation_coupon_1ad908b80564765674274971e32ae1cf87" prot="protected" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_inflation_index" kindref="compound">InflationIndex</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;InflationIndex&gt; QuantLib::InflationCoupon::index_</definition>
        <argsstring></argsstring>
        <name>index_</name>
        <qualifiedname>QuantLib::InflationCoupon::index_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/inflationcoupon.hpp" line="101" column="25" bodyfile="ql/cashflows/inflationcoupon.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_inflation_coupon_1aad1ef78f2192653441dd99cd13e7b453" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref></type>
        <definition>Period QuantLib::InflationCoupon::observationLag_</definition>
        <argsstring></argsstring>
        <name>observationLag_</name>
        <qualifiedname>QuantLib::InflationCoupon::observationLag_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/inflationcoupon.hpp" line="102" column="16" bodyfile="ql/cashflows/inflationcoupon.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_inflation_coupon_1a140b39f6353bdb146426da543fd85bbd" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref></type>
        <definition>DayCounter QuantLib::InflationCoupon::dayCounter_</definition>
        <argsstring></argsstring>
        <name>dayCounter_</name>
        <qualifiedname>QuantLib::InflationCoupon::dayCounter_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/inflationcoupon.hpp" line="103" column="20" bodyfile="ql/cashflows/inflationcoupon.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_inflation_coupon_1ac1ded4d90bf71cc63f58bc05e52eda04" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
        <definition>Natural QuantLib::InflationCoupon::fixingDays_</definition>
        <argsstring></argsstring>
        <name>fixingDays_</name>
        <qualifiedname>QuantLib::InflationCoupon::fixingDays_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/inflationcoupon.hpp" line="104" column="17" bodyfile="ql/cashflows/inflationcoupon.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_inflation_coupon_1aa74373af3d3e154b872f54319e339f7b" prot="protected" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::InflationCoupon::rate_</definition>
        <argsstring></argsstring>
        <name>rate_</name>
        <qualifiedname>QuantLib::InflationCoupon::rate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/inflationcoupon.hpp" line="105" column="22" bodyfile="ql/cashflows/inflationcoupon.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_coupon_1aa3b92ccbf081b031412c878d0373810e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::InflationCoupon::accept</definition>
        <argsstring>(AcyclicVisitor &amp;) override</argsstring>
        <name>accept</name>
        <qualifiedname>QuantLib::InflationCoupon::accept</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_coupon_1a959c554719d9c895b72b4fa6efd1c9e8">accept</reimplements>
        <reimplementedby refid="class_quant_lib_1_1_yo_y_inflation_coupon_1a710a4e53da3f731719700d1b506d35f2">accept</reimplementedby>
        <param>
          <type><ref refid="class_quant_lib_1_1_acyclic_visitor" kindref="compound">AcyclicVisitor</ref> &amp;</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/inflationcoupon.hpp" line="94" column="12" bodyfile="ql/cashflows/inflationcoupon.hpp" bodystart="117" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_coupon_1a512b8cf2f8daa10ba4a71c8d574a05a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::InflationCoupon::setPricer</definition>
        <argsstring>(const ext::shared_ptr&lt; InflationCouponPricer &gt; &amp;)</argsstring>
        <name>setPricer</name>
        <qualifiedname>QuantLib::InflationCoupon::setPricer</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_inflation_coupon_pricer" kindref="compound">InflationCouponPricer</ref> &gt; &amp;</type>
          <defname>pricer</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/inflationcoupon.hpp" line="96" column="12" bodyfile="ql/cashflows/inflationcoupon.cpp" bodystart="53" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_coupon_1a553c98b098e7ec17f25c9f11a0a18269" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_inflation_coupon_pricer" kindref="compound">InflationCouponPricer</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; InflationCouponPricer &gt; QuantLib::InflationCoupon::pricer</definition>
        <argsstring>() const</argsstring>
        <name>pricer</name>
        <qualifiedname>QuantLib::InflationCoupon::pricer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/inflationcoupon.hpp" line="97" column="23" bodyfile="ql/cashflows/inflationcoupon.hpp" bodystart="126" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_coupon_1a9970f8f9bf0519fd74ca24f6c5500f58" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool QuantLib::InflationCoupon::checkPricerImpl</definition>
        <argsstring>(const ext::shared_ptr&lt; InflationCouponPricer &gt; &amp;) const =0</argsstring>
        <name>checkPricerImpl</name>
        <qualifiedname>QuantLib::InflationCoupon::checkPricerImpl</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_c_p_i_coupon_1a93d9ab991c28c2ee49c7799eb88fb3cd">checkPricerImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_yo_y_inflation_coupon_1a979ce21c54ddd63af12d1e3d32a52e55">checkPricerImpl</reimplementedby>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_inflation_coupon_pricer" kindref="compound">InflationCouponPricer</ref> &gt; &amp;</type>
        </param>
        <briefdescription>
<para>makes sure you were given the correct type of pricer </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/inflationcoupon.hpp" line="110" column="22"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>CashFlow interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_coupon_1af471b62dc88d979a3d24db1996cb84db" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::InflationCoupon::amount</definition>
        <argsstring>() const override</argsstring>
        <name>amount</name>
        <qualifiedname>QuantLib::InflationCoupon::amount</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_cash_flow_1a92962488f6a37dc8ea4ea49712a2c0c1">amount</reimplements>
        <briefdescription>
<para>returns the amount of the cash flow </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The amount is not discounted, i.e., it is the actual amount paid at the cash flow date. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/inflationcoupon.hpp" line="62" column="12" bodyfile="ql/cashflows/inflationcoupon.hpp" bodystart="62" bodyend="62"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Coupon interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_coupon_1a8229837a6730de9eec1987394de9d2da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::InflationCoupon::price</definition>
        <argsstring>(const Handle&lt; YieldTermStructure &gt; &amp;discountingCurve) const</argsstring>
        <name>price</name>
        <qualifiedname>QuantLib::InflationCoupon::price</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>discountingCurve</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/inflationcoupon.hpp" line="67" column="12" bodyfile="ql/cashflows/inflationcoupon.cpp" bodystart="95" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_coupon_1a68ebb497c1a0e62cf4097ff804d954bc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref></type>
        <definition>DayCounter QuantLib::InflationCoupon::dayCounter</definition>
        <argsstring>() const override</argsstring>
        <name>dayCounter</name>
        <qualifiedname>QuantLib::InflationCoupon::dayCounter</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_coupon_1a00110ebbd4eab46f1fe97fca0aa05923">dayCounter</reimplements>
        <briefdescription>
<para>day counter for accrual calculation </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/inflationcoupon.hpp" line="68" column="18" bodyfile="ql/cashflows/inflationcoupon.hpp" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_coupon_1a2641c2c53ba1d879be5ea0ab4ec00b27" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::InflationCoupon::accruedAmount</definition>
        <argsstring>(const Date &amp;) const override</argsstring>
        <name>accruedAmount</name>
        <qualifiedname>QuantLib::InflationCoupon::accruedAmount</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_coupon_1a221cdef4475e85ef50fb8173f0b9b984">accruedAmount</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
        </param>
        <briefdescription>
<para>accrued amount at the given date </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/inflationcoupon.hpp" line="69" column="12" bodyfile="ql/cashflows/inflationcoupon.cpp" bodystart="78" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_coupon_1a1d84a54420161835317f950b484670e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::InflationCoupon::rate</definition>
        <argsstring>() const override</argsstring>
        <name>rate</name>
        <qualifiedname>QuantLib::InflationCoupon::rate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_coupon_1aa8ab475c56252328a30b4dc2181bfae5">rate</reimplements>
        <briefdescription>
<para>accrued rate </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/inflationcoupon.hpp" line="70" column="12" bodyfile="ql/cashflows/inflationcoupon.cpp" bodystart="64" bodyend="67"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Inspectors</header>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_coupon_1a245ccc1b7c2bfcb897af546dd613e09a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_inflation_index" kindref="compound">InflationIndex</ref> &gt; &amp;</type>
        <definition>const ext::shared_ptr&lt; InflationIndex &gt; &amp; QuantLib::InflationCoupon::index</definition>
        <argsstring>() const</argsstring>
        <name>index</name>
        <qualifiedname>QuantLib::InflationCoupon::index</qualifiedname>
        <briefdescription>
<para>yoy inflation index </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/inflationcoupon.hpp" line="76" column="29" bodyfile="ql/cashflows/inflationcoupon.hpp" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_coupon_1a787bb517a1a463b36d97b55bd81a1b9b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref></type>
        <definition>Period QuantLib::InflationCoupon::observationLag</definition>
        <argsstring>() const</argsstring>
        <name>observationLag</name>
        <qualifiedname>QuantLib::InflationCoupon::observationLag</qualifiedname>
        <briefdescription>
<para>how the coupon observes the index </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/inflationcoupon.hpp" line="78" column="14" bodyfile="ql/cashflows/inflationcoupon.hpp" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_coupon_1a0e67390d5065280adea4c197d34cf464" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
        <definition>Natural QuantLib::InflationCoupon::fixingDays</definition>
        <argsstring>() const</argsstring>
        <name>fixingDays</name>
        <qualifiedname>QuantLib::InflationCoupon::fixingDays</qualifiedname>
        <briefdescription>
<para>fixing days </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/inflationcoupon.hpp" line="80" column="15" bodyfile="ql/cashflows/inflationcoupon.hpp" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_coupon_1ad269d6a037445b03efcf0ff099fbd7df" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::InflationCoupon::fixingDate</definition>
        <argsstring>() const</argsstring>
        <name>fixingDate</name>
        <qualifiedname>QuantLib::InflationCoupon::fixingDate</qualifiedname>
        <briefdescription>
<para>fixing date </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/inflationcoupon.hpp" line="82" column="20" bodyfile="ql/cashflows/inflationcoupon.cpp" bodystart="87" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_coupon_1a4e40e13b0f3cbbcb956ff270c6133cb7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::InflationCoupon::indexFixing</definition>
        <argsstring>() const</argsstring>
        <name>indexFixing</name>
        <qualifiedname>QuantLib::InflationCoupon::indexFixing</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_c_p_i_coupon_1a8bb9fa997d1af6f06bdc145ec78443c9">indexFixing</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_yo_y_inflation_coupon_1a65df65973a957b19a0eaa31e6b164a21">indexFixing</reimplementedby>
        <briefdescription>
<para>fixing of the underlying index, as observed by the coupon </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/inflationcoupon.hpp" line="84" column="20" bodyfile="ql/cashflows/inflationcoupon.cpp" bodystart="100" bodyend="102"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>LazyObject interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_coupon_1a574b65622bdf3af2888a06b011778df9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::InflationCoupon::performCalculations</definition>
        <argsstring>() const override</argsstring>
        <name>performCalculations</name>
        <qualifiedname>QuantLib::InflationCoupon::performCalculations</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_cash_flow_1af9cd641e3841cdcf5aba9c8d5121ce91">performCalculations</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must implement any calculations which must be (re)done in order to calculate the desired results. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/inflationcoupon.hpp" line="89" column="12" bodyfile="ql/cashflows/inflationcoupon.cpp" bodystart="69" bodyend="75"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_coupon_1a098ce17748f32863f9ae8659c7dd1716" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::InflationCoupon::InflationCoupon</definition>
        <argsstring>(const Date &amp;paymentDate, Real nominal, const Date &amp;startDate, const Date &amp;endDate, Natural fixingDays, ext::shared_ptr&lt; InflationIndex &gt; index, const Period &amp;observationLag, DayCounter dayCounter, const Date &amp;refPeriodStart=Date(), const Date &amp;refPeriodEnd=Date(), const Date &amp;exCouponDate=Date())</argsstring>
        <name>InflationCoupon</name>
        <qualifiedname>QuantLib::InflationCoupon::InflationCoupon</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>paymentDate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>nominal</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>startDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>endDate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>fixingDays</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_inflation_index" kindref="compound">InflationIndex</ref> &gt;</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>observationLag</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref></type>
          <declname>dayCounter</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>refPeriodStart</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>refPeriodEnd</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>exCouponDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/inflationcoupon.hpp" line="48" column="7" bodyfile="ql/cashflows/inflationcoupon.cpp" bodystart="28" bodyend="50"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Base inflation-coupon class. </para>
    </briefdescription>
    <detaileddescription>
<para>The day counter is usually obtained from the inflation term structure that the inflation index uses for forecasting. There is no gearing or spread because these are relevant for YoY coupons but not zero inflation coupons.</para>
<para><simplesect kind="note"><para>inflation indices do not contain day counters or calendars. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="8">
        <label>QuantLib::CPICoupon</label>
        <link refid="class_quant_lib_1_1_c_p_i_coupon"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QuantLib::CappedFlooredYoYInflationCoupon</label>
        <link refid="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::CashFlow</label>
        <link refid="class_quant_lib_1_1_cash_flow"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Coupon</label>
        <link refid="class_quant_lib_1_1_coupon"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Event</label>
        <link refid="class_quant_lib_1_1_event"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::InflationCoupon</label>
        <link refid="class_quant_lib_1_1_inflation_coupon"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="7">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="9">
        <label>QuantLib::YoYInflationCoupon</label>
        <link refid="class_quant_lib_1_1_yo_y_inflation_coupon"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>QuantLib::CashFlow</label>
        <link refid="class_quant_lib_1_1_cash_flow"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Coupon</label>
        <link refid="class_quant_lib_1_1_coupon"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>accrualEndDate_</edgelabel>
          <edgelabel>accrualStartDate_</edgelabel>
          <edgelabel>exCouponDate_</edgelabel>
          <edgelabel>paymentDate_</edgelabel>
          <edgelabel>refPeriodEnd_</edgelabel>
          <edgelabel>refPeriodStart_</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="10">
        <label>QuantLib::DayCounter</label>
        <link refid="class_quant_lib_1_1_day_counter"/>
      </node>
      <node id="4">
        <label>QuantLib::Event</label>
        <link refid="class_quant_lib_1_1_event"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::InflationCoupon</label>
        <link refid="class_quant_lib_1_1_inflation_coupon"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>observationLag_</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>dayCounter_</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="7">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="9">
        <label>QuantLib::Period</label>
        <link refid="class_quant_lib_1_1_period"/>
      </node>
    </collaborationgraph>
    <location file="ql/cashflows/inflationcoupon.hpp" line="46" column="5" bodyfile="ql/cashflows/inflationcoupon.hpp" bodystart="46" bodyend="112"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_inflation_coupon_1aa3b92ccbf081b031412c878d0373810e" prot="public" virt="virtual"><scope>QuantLib::InflationCoupon</scope><name>accept</name></member>
      <member refid="class_quant_lib_1_1_coupon_1ae6b211492a4610a3e2fec3f2f430247a" prot="public" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>accrualDays</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a5808fa2cd843a929bb14427b16dd3bde" prot="public" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>accrualEndDate</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a58c14a6e0a6cc20165ff4a5289a72d41" prot="protected" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>accrualEndDate_</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a971dd3951a6fca68e16d4c00fccd2eab" prot="public" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>accrualPeriod</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a1fc9f110182c5f201069dc3053f73deb" prot="protected" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>accrualPeriod_</name></member>
      <member refid="class_quant_lib_1_1_coupon_1aa063dce446a588713d94746a80cd0746" prot="public" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>accrualStartDate</name></member>
      <member refid="class_quant_lib_1_1_coupon_1adb4da57a28a92b2a1a341f0c586aded0" prot="protected" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>accrualStartDate_</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a2641c2c53ba1d879be5ea0ab4ec00b27" prot="public" virt="virtual"><scope>QuantLib::InflationCoupon</scope><name>accruedAmount</name></member>
      <member refid="class_quant_lib_1_1_coupon_1acee86a8c573d57b79971329275682a29" prot="public" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>accruedDays</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a67ff3181d3f3c078d193c9383f7cf51b" prot="public" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>accruedPeriod</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a02070ea7442d30625992c1711030d4b8" prot="protected" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>alwaysForward_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a17c9433135a259e4776baec66204a484" prot="public" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>alwaysForwardNotifications</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1af471b62dc88d979a3d24db1996cb84db" prot="public" virt="virtual"><scope>QuantLib::InflationCoupon</scope><name>amount</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a5244c7f83592375a0ea9048296435fd1" prot="protected" virt="virtual"><scope>QuantLib::InflationCoupon</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a58b4986a80efa18634483a92c121e26e" prot="protected" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>calculated_</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a9970f8f9bf0519fd74ca24f6c5500f58" prot="protected" virt="pure-virtual"><scope>QuantLib::InflationCoupon</scope><name>checkPricerImpl</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a37d50b6041a918e6422a0e0e9974ab05" prot="public" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>Coupon</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a36b31db67e84b7858c23b134c3ed9a42" prot="public" virt="virtual"><scope>QuantLib::InflationCoupon</scope><name>date</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a68ebb497c1a0e62cf4097ff804d954bc" prot="public" virt="virtual"><scope>QuantLib::InflationCoupon</scope><name>dayCounter</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a140b39f6353bdb146426da543fd85bbd" prot="protected" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>dayCounter_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::InflationCoupon</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a6278162ff5d79ca19655c7fbc4b702ca" prot="public" virt="virtual"><scope>QuantLib::InflationCoupon</scope><name>exCouponDate</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a9edde82b0183dc0b0138baa423c7097e" prot="protected" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>exCouponDate_</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1ad269d6a037445b03efcf0ff099fbd7df" prot="public" virt="virtual"><scope>QuantLib::InflationCoupon</scope><name>fixingDate</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a0e67390d5065280adea4c197d34cf464" prot="public" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>fixingDays</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1ac1ded4d90bf71cc63f58bc05e52eda04" prot="protected" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>fixingDays_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1afac6ee19c3107c453e1347dd8000e023" prot="public" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>forwardFirstNotificationOnly</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7157f41e83f2c5d924f5c5bafda04d1d" prot="public" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>freeze</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7bb721fe00c6854e602758aba629ab77" prot="protected" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>frozen_</name></member>
      <member refid="class_quant_lib_1_1_cash_flow_1a42691c396f43dde0b5ed37f4a014b0e8" prot="public" virt="virtual"><scope>QuantLib::InflationCoupon</scope><name>hasOccurred</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a245ccc1b7c2bfcb897af546dd613e09a" prot="public" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>index</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1ad908b80564765674274971e32ae1cf87" prot="protected" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>index_</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a4e40e13b0f3cbbcb956ff270c6133cb7" prot="public" virt="virtual"><scope>QuantLib::InflationCoupon</scope><name>indexFixing</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a098ce17748f32863f9ae8659c7dd1716" prot="public" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>InflationCoupon</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a0a7c5d42815a4e16ee2158e24dbfc748" prot="public" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>isCalculated</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a26f18f4ff7faaaebd8eae50e064b493e" prot="public" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>LazyObject</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a579b9d1341796c612126053722928bb3" prot="public" virt="virtual"><scope>QuantLib::InflationCoupon</scope><name>nominal</name></member>
      <member refid="class_quant_lib_1_1_coupon_1aed38f11424938b0a46bb5a0b3db94a75" prot="protected" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>nominal_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Event::"><scope>QuantLib::InflationCoupon</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Event::"><scope>QuantLib::InflationCoupon</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a787bb517a1a463b36d97b55bd81a1b9b" prot="public" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>observationLag</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1aad1ef78f2192653441dd99cd13e7b453" prot="protected" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>observationLag_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::InflationCoupon</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::InflationCoupon</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Event::"><scope>QuantLib::InflationCoupon</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::QuantLib::Observer::"><scope>QuantLib::InflationCoupon</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a27eb1806820783a5a1f8dbefa18f4c56" prot="protected" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>paymentDate_</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a574b65622bdf3af2888a06b011778df9" prot="public" virt="virtual"><scope>QuantLib::InflationCoupon</scope><name>performCalculations</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a8229837a6730de9eec1987394de9d2da" prot="public" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>price</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a553c98b098e7ec17f25c9f11a0a18269" prot="public" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>pricer</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a5eaa3988faec3edb68cb73fb54481e31" prot="protected" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>pricer_</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a1d84a54420161835317f950b484670e8" prot="public" virt="virtual"><scope>QuantLib::InflationCoupon</scope><name>rate</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1aa74373af3d3e154b872f54319e339f7b" prot="protected" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>rate_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a70c9b24e50132408d8d9ce4f6674662a" prot="public" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>recalculate</name></member>
      <member refid="class_quant_lib_1_1_coupon_1ad261da91ac390a467e20f48a01d29465" prot="public" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>referencePeriodEnd</name></member>
      <member refid="class_quant_lib_1_1_coupon_1aa3c229434f73d8ab9e26eb70a609c0f5" prot="public" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>referencePeriodStart</name></member>
      <member refid="class_quant_lib_1_1_coupon_1ae4af1ed468e66e946eda0b9026fa9e76" prot="protected" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>refPeriodEnd_</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a208f7f13571a5b93f2436ceb7e0b669f" prot="protected" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>refPeriodStart_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a512b8cf2f8daa10ba4a71c8d574a05a9" prot="public" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>setPricer</name></member>
      <member refid="class_quant_lib_1_1_cash_flow_1a103a14e1657bd2d7cb6574bf6dcf96d0" prot="public" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>tradingExCoupon</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a2e0e4786666453024b9d4e0761f2770b" prot="public" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>unfreeze</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1adee2bf49be5c4c78736be293321a856d" prot="public" virt="virtual"><scope>QuantLib::InflationCoupon</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_cash_flow_1a4ac3d8fa6eeb8c307345ada96b25cecf" prot="public" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>~CashFlow</name></member>
      <member refid="class_quant_lib_1_1_event_1a26cef5942731bfb52ed77e74abdcfe9f" prot="public" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>~Event</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a9d719c43bb627177a90d7d12324a2d6e" prot="public" virt="non-virtual"><scope>QuantLib::InflationCoupon</scope><name>~LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::InflationCoupon</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::InflationCoupon</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_levenberg_marquardt" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::LevenbergMarquardt</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_optimization_method" prot="public" virt="non-virtual">QuantLib::OptimizationMethod</basecompoundref>
    <includes refid="levenbergmarquardt_8hpp" local="no">levenbergmarquardt.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_levenberg_marquardt_1ac63d24b8ef9ee6f3b6f1e61ce082becd" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_problem" kindref="compound">Problem</ref> *</type>
        <definition>Problem* QuantLib::LevenbergMarquardt::currentProblem_</definition>
        <argsstring></argsstring>
        <name>currentProblem_</name>
        <qualifiedname>QuantLib::LevenbergMarquardt::currentProblem_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/levenbergmarquardt.hpp" line="79" column="17" bodyfile="ql/math/optimization/levenbergmarquardt.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_levenberg_marquardt_1a233ac407cf2785bb8685fe319bf0a7d4" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::LevenbergMarquardt::initCostValues_</definition>
        <argsstring></argsstring>
        <name>initCostValues_</name>
        <qualifiedname>QuantLib::LevenbergMarquardt::initCostValues_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/levenbergmarquardt.hpp" line="80" column="15" bodyfile="ql/math/optimization/levenbergmarquardt.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_levenberg_marquardt_1acf964b5485bfb63f4e032cef6e222997" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::LevenbergMarquardt::initJacobian_</definition>
        <argsstring></argsstring>
        <name>initJacobian_</name>
        <qualifiedname>QuantLib::LevenbergMarquardt::initJacobian_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/levenbergmarquardt.hpp" line="81" column="16" bodyfile="ql/math/optimization/levenbergmarquardt.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_levenberg_marquardt_1a9c06f065d47513af12b842cb0b8b767e" prot="private" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
        <definition>Integer QuantLib::LevenbergMarquardt::info_</definition>
        <argsstring></argsstring>
        <name>info_</name>
        <qualifiedname>QuantLib::LevenbergMarquardt::info_</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/levenbergmarquardt.hpp" line="82" column="25" bodyfile="ql/math/optimization/levenbergmarquardt.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_levenberg_marquardt_1acb00a538aa913e824ac1c0a9f4c39a6a" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::LevenbergMarquardt::epsfcn_</definition>
        <argsstring></argsstring>
        <name>epsfcn_</name>
        <qualifiedname>QuantLib::LevenbergMarquardt::epsfcn_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/levenbergmarquardt.hpp" line="83" column="20" bodyfile="ql/math/optimization/levenbergmarquardt.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_levenberg_marquardt_1ad6598761f48c0d69bcb041ea5dd462c9" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::LevenbergMarquardt::xtol_</definition>
        <argsstring></argsstring>
        <name>xtol_</name>
        <qualifiedname>QuantLib::LevenbergMarquardt::xtol_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/levenbergmarquardt.hpp" line="83" column="28" bodyfile="ql/math/optimization/levenbergmarquardt.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_levenberg_marquardt_1a215e254dd07a355581d2ae456895bc00" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::LevenbergMarquardt::gtol_</definition>
        <argsstring></argsstring>
        <name>gtol_</name>
        <qualifiedname>QuantLib::LevenbergMarquardt::gtol_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/levenbergmarquardt.hpp" line="83" column="34" bodyfile="ql/math/optimization/levenbergmarquardt.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_levenberg_marquardt_1abc48440fbdc7714417ca8f31d27402ae" prot="private" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool QuantLib::LevenbergMarquardt::useCostFunctionsJacobian_</definition>
        <argsstring></argsstring>
        <name>useCostFunctionsJacobian_</name>
        <qualifiedname>QuantLib::LevenbergMarquardt::useCostFunctionsJacobian_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/levenbergmarquardt.hpp" line="84" column="20" bodyfile="ql/math/optimization/levenbergmarquardt.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_levenberg_marquardt_1a69bf31ec72f427323805fec1389a7c0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::LevenbergMarquardt::LevenbergMarquardt</definition>
        <argsstring>(Real epsfcn=1.0e-8, Real xtol=1.0e-8, Real gtol=1.0e-8, bool useCostFunctionsJacobian=false)</argsstring>
        <name>LevenbergMarquardt</name>
        <qualifiedname>QuantLib::LevenbergMarquardt::LevenbergMarquardt</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>epsfcn</declname>
          <defval>1.0e-8</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>xtol</declname>
          <defval>1.0e-8</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>gtol</declname>
          <defval>1.0e-8</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>useCostFunctionsJacobian</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/levenbergmarquardt.hpp" line="51" column="9" bodyfile="ql/math/optimization/levenbergmarquardt.cpp" bodystart="29" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_levenberg_marquardt_1a60c8e15c7e3e773a8ec3acc0bc798058" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>EndCriteria::Type</type>
        <definition>EndCriteria::Type QuantLib::LevenbergMarquardt::minimize</definition>
        <argsstring>(Problem &amp;P, const EndCriteria &amp;endCriteria) override</argsstring>
        <name>minimize</name>
        <qualifiedname>QuantLib::LevenbergMarquardt::minimize</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_optimization_method_1a28097ae73d0d2a310938f51b72a48348">minimize</reimplements>
        <param>
          <type><ref refid="class_quant_lib_1_1_problem" kindref="compound">Problem</ref> &amp;</type>
          <declname>P</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_end_criteria" kindref="compound">EndCriteria</ref> &amp;</type>
          <declname>endCriteria</declname>
        </param>
        <briefdescription>
<para>minimize the optimization problem P </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/levenbergmarquardt.hpp" line="55" column="27" bodyfile="ql/math/optimization/levenbergmarquardt.cpp" bodystart="36" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_levenberg_marquardt_1ad2292fe3d7ef8ccda0f79b21ea2cc359" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
        <definition>virtual Integer QuantLib::LevenbergMarquardt::getInfo</definition>
        <argsstring>() const</argsstring>
        <name>getInfo</name>
        <qualifiedname>QuantLib::LevenbergMarquardt::getInfo</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000106"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Don&apos;t use this method; inspect the result of minimize instead. Deprecated in version 1.36. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/levenbergmarquardt.hpp" line="62" column="25" bodyfile="ql/math/optimization/levenbergmarquardt.hpp" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_levenberg_marquardt_1a2a285512371fe68a12cbcbd04f3cac01" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::LevenbergMarquardt::fcn</definition>
        <argsstring>(int m, int n, Real *x, Real *fvec, int *)</argsstring>
        <name>fcn</name>
        <qualifiedname>QuantLib::LevenbergMarquardt::fcn</qualifiedname>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> *</type>
          <declname>fvec</declname>
        </param>
        <param>
          <type>int *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000107"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Don&apos;t use this method; it is for internal use. Deprecated in version 1.37. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/levenbergmarquardt.hpp" line="68" column="14" bodyfile="ql/math/optimization/levenbergmarquardt.hpp" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_levenberg_marquardt_1a777d790ccfd8d2146c1f0ead95824c7b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::LevenbergMarquardt::jacFcn</definition>
        <argsstring>(int m, int n, Real *x, Real *fjac, int *)</argsstring>
        <name>jacFcn</name>
        <qualifiedname>QuantLib::LevenbergMarquardt::jacFcn</qualifiedname>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> *</type>
          <declname>fjac</declname>
        </param>
        <param>
          <type>int *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000108"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Don&apos;t use this method; it is for internal use. Deprecated in version 1.37. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/levenbergmarquardt.hpp" line="74" column="14" bodyfile="ql/math/optimization/levenbergmarquardt.hpp" bodystart="74" bodyend="74"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_levenberg_marquardt_1a3088b084e671dae2a1a39ac020605e0b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::LevenbergMarquardt::fcn</definition>
        <argsstring>(int m, int n, Real *x, Real *fvec)</argsstring>
        <name>fcn</name>
        <qualifiedname>QuantLib::LevenbergMarquardt::fcn</qualifiedname>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> *</type>
          <declname>fvec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/levenbergmarquardt.hpp" line="76" column="14" bodyfile="ql/math/optimization/levenbergmarquardt.cpp" bodystart="140" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_levenberg_marquardt_1aed2da126d36b6f98ebbc7fbd1617784b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::LevenbergMarquardt::jacFcn</definition>
        <argsstring>(int m, int n, Real *x, Real *fjac)</argsstring>
        <name>jacFcn</name>
        <qualifiedname>QuantLib::LevenbergMarquardt::jacFcn</qualifiedname>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> *</type>
          <declname>fjac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/levenbergmarquardt.hpp" line="77" column="14" bodyfile="ql/math/optimization/levenbergmarquardt.cpp" bodystart="153" bodyend="167"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Levenberg-Marquardt optimization method. </para>
    </briefdescription>
    <detaileddescription>
<para>This implementation is based on MINPACK (<ulink url="http://www.netlib.org/minpack">http://www.netlib.org/minpack</ulink>, <ulink url="http://www.netlib.org/cephes/linalg.tgz">http://www.netlib.org/cephes/linalg.tgz</ulink>) It has a built in fd scheme to compute the jacobian, which is used by default. If useCostFunctionsJacobian is true the corresponding method in the cost function of the problem is used instead. Note that the default implementation of the jacobian in <ref refid="class_quant_lib_1_1_cost_function" kindref="compound">CostFunction</ref> uses a central difference (order 2, but requiring more function evaluations) compared to the forward difference implemented here (order 1). </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::LevenbergMarquardt</label>
        <link refid="class_quant_lib_1_1_levenberg_marquardt"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::OptimizationMethod</label>
        <link refid="class_quant_lib_1_1_optimization_method"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::LevenbergMarquardt</label>
        <link refid="class_quant_lib_1_1_levenberg_marquardt"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::OptimizationMethod</label>
        <link refid="class_quant_lib_1_1_optimization_method"/>
      </node>
    </collaborationgraph>
    <location file="ql/math/optimization/levenbergmarquardt.hpp" line="49" column="5" bodyfile="ql/math/optimization/levenbergmarquardt.hpp" bodystart="49" bodyend="85"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_levenberg_marquardt_1ac63d24b8ef9ee6f3b6f1e61ce082becd" prot="private" virt="non-virtual"><scope>QuantLib::LevenbergMarquardt</scope><name>currentProblem_</name></member>
      <member refid="class_quant_lib_1_1_levenberg_marquardt_1acb00a538aa913e824ac1c0a9f4c39a6a" prot="private" virt="non-virtual"><scope>QuantLib::LevenbergMarquardt</scope><name>epsfcn_</name></member>
      <member refid="class_quant_lib_1_1_levenberg_marquardt_1a2a285512371fe68a12cbcbd04f3cac01" prot="public" virt="non-virtual"><scope>QuantLib::LevenbergMarquardt</scope><name>fcn</name></member>
      <member refid="class_quant_lib_1_1_levenberg_marquardt_1a3088b084e671dae2a1a39ac020605e0b" prot="private" virt="non-virtual"><scope>QuantLib::LevenbergMarquardt</scope><name>fcn</name></member>
      <member refid="class_quant_lib_1_1_levenberg_marquardt_1ad2292fe3d7ef8ccda0f79b21ea2cc359" prot="public" virt="virtual"><scope>QuantLib::LevenbergMarquardt</scope><name>getInfo</name></member>
      <member refid="class_quant_lib_1_1_levenberg_marquardt_1a215e254dd07a355581d2ae456895bc00" prot="private" virt="non-virtual"><scope>QuantLib::LevenbergMarquardt</scope><name>gtol_</name></member>
      <member refid="class_quant_lib_1_1_levenberg_marquardt_1a9c06f065d47513af12b842cb0b8b767e" prot="private" virt="non-virtual"><scope>QuantLib::LevenbergMarquardt</scope><name>info_</name></member>
      <member refid="class_quant_lib_1_1_levenberg_marquardt_1a233ac407cf2785bb8685fe319bf0a7d4" prot="private" virt="non-virtual"><scope>QuantLib::LevenbergMarquardt</scope><name>initCostValues_</name></member>
      <member refid="class_quant_lib_1_1_levenberg_marquardt_1acf964b5485bfb63f4e032cef6e222997" prot="private" virt="non-virtual"><scope>QuantLib::LevenbergMarquardt</scope><name>initJacobian_</name></member>
      <member refid="class_quant_lib_1_1_levenberg_marquardt_1a777d790ccfd8d2146c1f0ead95824c7b" prot="public" virt="non-virtual"><scope>QuantLib::LevenbergMarquardt</scope><name>jacFcn</name></member>
      <member refid="class_quant_lib_1_1_levenberg_marquardt_1aed2da126d36b6f98ebbc7fbd1617784b" prot="private" virt="non-virtual"><scope>QuantLib::LevenbergMarquardt</scope><name>jacFcn</name></member>
      <member refid="class_quant_lib_1_1_levenberg_marquardt_1a69bf31ec72f427323805fec1389a7c0e" prot="public" virt="non-virtual"><scope>QuantLib::LevenbergMarquardt</scope><name>LevenbergMarquardt</name></member>
      <member refid="class_quant_lib_1_1_levenberg_marquardt_1a60c8e15c7e3e773a8ec3acc0bc798058" prot="public" virt="virtual"><scope>QuantLib::LevenbergMarquardt</scope><name>minimize</name></member>
      <member refid="class_quant_lib_1_1_levenberg_marquardt_1abc48440fbdc7714417ca8f31d27402ae" prot="private" virt="non-virtual"><scope>QuantLib::LevenbergMarquardt</scope><name>useCostFunctionsJacobian_</name></member>
      <member refid="class_quant_lib_1_1_levenberg_marquardt_1ad6598761f48c0d69bcb041ea5dd462c9" prot="private" virt="non-virtual"><scope>QuantLib::LevenbergMarquardt</scope><name>xtol_</name></member>
      <member refid="class_quant_lib_1_1_optimization_method_1a2e9a51f0954eaf649d075d565d43938c" prot="public" virt="virtual"><scope>QuantLib::LevenbergMarquardt</scope><name>~OptimizationMethod</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

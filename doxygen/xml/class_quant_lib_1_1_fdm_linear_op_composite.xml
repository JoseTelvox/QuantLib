<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_fdm_linear_op_composite" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::FdmLinearOpComposite</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_fdm_linear_op" prot="public" virt="non-virtual">QuantLib::FdmLinearOp</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_fdm2d_black_scholes_op" prot="public" virt="non-virtual">QuantLib::Fdm2dBlackScholesOp</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_fdm_bates_op" prot="public" virt="non-virtual">QuantLib::FdmBatesOp</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_fdm_black_scholes_fwd_op" prot="public" virt="non-virtual">QuantLib::FdmBlackScholesFwdOp</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_fdm_black_scholes_op" prot="public" virt="non-virtual">QuantLib::FdmBlackScholesOp</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_fdm_c_e_v_op" prot="public" virt="non-virtual">QuantLib::FdmCEVOp</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_fdm_c_i_r_op" prot="public" virt="non-virtual">QuantLib::FdmCIROp</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_fdm_dupire1d_op" prot="public" virt="non-virtual">QuantLib::FdmDupire1dOp</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_fdm_ext_o_u_jump_op" prot="public" virt="non-virtual">QuantLib::FdmExtOUJumpOp</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_fdm_extended_ornstein_uhlenbeck_op" prot="public" virt="non-virtual">QuantLib::FdmExtendedOrnsteinUhlenbeckOp</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_fdm_g2_op" prot="public" virt="non-virtual">QuantLib::FdmG2Op</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_fdm_heston_fwd_op" prot="public" virt="non-virtual">QuantLib::FdmHestonFwdOp</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_fdm_heston_hull_white_op" prot="public" virt="non-virtual">QuantLib::FdmHestonHullWhiteOp</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_fdm_heston_op" prot="public" virt="non-virtual">QuantLib::FdmHestonOp</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_fdm_hull_white_op" prot="public" virt="non-virtual">QuantLib::FdmHullWhiteOp</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_fdm_kluge_ext_o_u_op" prot="public" virt="non-virtual">QuantLib::FdmKlugeExtOUOp</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_fdm_local_vol_fwd_op" prot="public" virt="non-virtual">QuantLib::FdmLocalVolFwdOp</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_fdm_ornstein_uhlenbeck_op" prot="public" virt="non-virtual">QuantLib::FdmOrnsteinUhlenbeckOp</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_fdm_sabr_op" prot="public" virt="non-virtual">QuantLib::FdmSabrOp</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_fdm_square_root_fwd_op" prot="public" virt="non-virtual">QuantLib::FdmSquareRootFwdOp</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_fdm_wiener_op" prot="public" virt="non-virtual">QuantLib::FdmWienerOp</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_fdm_zabr_op" prot="public" virt="non-virtual">QuantLib::FdmZabrOp</derivedcompoundref>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_linear_op_composite_1aea89ff84d04c901c37823de66b392018" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>virtual Size QuantLib::FdmLinearOpComposite::size</definition>
        <argsstring>() const =0</argsstring>
        <name>size</name>
        <qualifiedname>QuantLib::FdmLinearOpComposite::size</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_fdm2d_black_scholes_op_1a747f574bae846a1d3e6b315ea159f8af">size</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_bates_op_1a32686b6c53e9aec28a9283264f71d75b">size</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_black_scholes_fwd_op_1a2ac9bd5214ae808f37360c369d814291">size</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_black_scholes_op_1a76e3d6851279988ee79b35ead0e9bd09">size</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_c_e_v_op_1a149cf5d0e89072fd2f98be48498883e3">size</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_c_i_r_op_1a52231f1a9ec9cf23fa0690ed2d44b7e3">size</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_dupire1d_op_1ad474104004dee838405aed2202913603">size</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_extended_ornstein_uhlenbeck_op_1af696adb3933f3486c117aed3e3eae490">size</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_ext_o_u_jump_op_1a04f2562201480421b552757266a672de">size</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_g2_op_1a269e2cff217fee50203f6948104f28bc">size</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_heston_fwd_op_1a1ccc365b8ca994033fc55f3883bb4434">size</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_heston_hull_white_op_1ab30baf01ee0be2b01f1d0a18e44f9746">size</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_heston_op_1adc56c2289f46bb67570002ac9c9db3f9">size</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_hull_white_op_1a649351e57a8e6bfc5a02a7e904cd3eb6">size</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_kluge_ext_o_u_op_1a3e58acbccb2f164613c88cb8749cb33f">size</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_local_vol_fwd_op_1acaeb91d68d92b24a6b1ef43c8de15bb4">size</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_ornstein_uhlenbeck_op_1a6cb366c44c7760b35e1a313357e6b696">size</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_sabr_op_1a007850e7e2cb4188f2b709fe21623676">size</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_square_root_fwd_op_1ad232601f1304dc7c9d2ea151dc473469">size</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_wiener_op_1ab3ae14876bb4a0c9942ffaabbb078e8c">size</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_zabr_op_1a51c4ebf0d46d4f0307b38c9d9a9848dc">size</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmlinearopcomposite.hpp" line="37" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_linear_op_composite_1ab635911759d6a1bde11c501d15515872" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void QuantLib::FdmLinearOpComposite::setTime</definition>
        <argsstring>(Time t1, Time t2)=0</argsstring>
        <name>setTime</name>
        <qualifiedname>QuantLib::FdmLinearOpComposite::setTime</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_fdm2d_black_scholes_op_1ad447093e8694dcf137eb8e33d3017edf">setTime</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_bates_op_1a577028e3886403d3182f7baf755287d4">setTime</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_black_scholes_fwd_op_1a698848c7c0590c74598834a875312375">setTime</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_black_scholes_op_1a7a94ea92ea06fd01751e02c57ddf9dbd">setTime</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_c_e_v_op_1a4113a4a05c1087fde302d28d6caaf621">setTime</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_c_i_r_op_1abe78f491291dd1a132afe35f4dfcf11d">setTime</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_dupire1d_op_1a70728095047f9cad2b76994596de76c8">setTime</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_extended_ornstein_uhlenbeck_op_1af304da57eca4a929b5be61ed090175b6">setTime</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_ext_o_u_jump_op_1a080766397419ebac4da9919677e36343">setTime</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_g2_op_1a05cafd6c806c719deea450f3cdc82cb9">setTime</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_heston_fwd_op_1a2d7a9485bda8cf6f8170b45fd2321390">setTime</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_heston_hull_white_op_1afdd889852b90926c67586985ffd09f74">setTime</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_heston_op_1acb9f4c5bd64e504544746d64a9bd06a9">setTime</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_hull_white_op_1a0cf957d9988e99b6236bd837e1874260">setTime</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_kluge_ext_o_u_op_1a32d904389c929abc1fcd7c4d2b188e1b">setTime</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_local_vol_fwd_op_1aad592bcd93fe094fa54e2fdc2939d105">setTime</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_ornstein_uhlenbeck_op_1a70c3db01b0b38464747d0472b46ca607">setTime</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_sabr_op_1a349eba0994c58edc0dc992d806dd9e99">setTime</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_square_root_fwd_op_1a80bc0b2e2074f1dd542df56d29af0c60">setTime</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_wiener_op_1a70960e8928c0ee6fd9632ef9e520fe02">setTime</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_zabr_op_1aa8180214704d4d9c74b886f479e88019">setTime</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t1</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t2</declname>
        </param>
        <briefdescription>
<para><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> <formula id="385">$t1 &lt;= t2$</formula> is required. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmlinearopcomposite.hpp" line="40" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_linear_op_composite_1a162fe1437fb3060475f7824d73b72ff7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>virtual Array QuantLib::FdmLinearOpComposite::apply_mixed</definition>
        <argsstring>(const Array &amp;r) const =0</argsstring>
        <name>apply_mixed</name>
        <qualifiedname>QuantLib::FdmLinearOpComposite::apply_mixed</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_fdm2d_black_scholes_op_1ab082cdea97366a2f6dfc63e3d9494747">apply_mixed</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_bates_op_1a3a24fba5ef60630dd20b2ea81354bbe3">apply_mixed</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_black_scholes_fwd_op_1a6959705c3178a1465f10c0079ae763b1">apply_mixed</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_black_scholes_op_1af4366860796258033c3ef9f6e6764ccb">apply_mixed</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_c_e_v_op_1a9f466caa2a441901aad4f1d95f6f7348">apply_mixed</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_c_i_r_op_1ac0d52da087e01bfbbaf2a8552aa65bb9">apply_mixed</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_dupire1d_op_1af85093e9f6e387f2cfaa9159bc68a07e">apply_mixed</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_extended_ornstein_uhlenbeck_op_1aa51e1d8a2a0aee469631793c9d8de86e">apply_mixed</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_ext_o_u_jump_op_1a9fe807985c6b223da504be1564eb31df">apply_mixed</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_g2_op_1a219c9269bb131518393c5dff848edd62">apply_mixed</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_heston_fwd_op_1ab1e12c47b53d04c604997461be29a443">apply_mixed</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_heston_hull_white_op_1a88b521455b685e863cce5034d2a6573c">apply_mixed</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_heston_op_1ac757699524d08b76615abf7b9f676f3a">apply_mixed</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_hull_white_op_1ae40d959267784da0070db5d6fdc1dc0d">apply_mixed</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_kluge_ext_o_u_op_1a39060837dab7eea06b4ea41c3f9b5f18">apply_mixed</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_local_vol_fwd_op_1a4e1ed76f2098b80e8450cfc761fb4e64">apply_mixed</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_ornstein_uhlenbeck_op_1a874385e0697821b244f409409680a422">apply_mixed</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_sabr_op_1aebcb3eb660d60000f382435809d703b7">apply_mixed</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_square_root_fwd_op_1a8427e2c6dca505edda3e338764d5b291">apply_mixed</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_wiener_op_1ab26f7922d9364636b4db136271e9d3c9">apply_mixed</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_zabr_op_1ab1079cb4cf30764cb7991af04758d199">apply_mixed</reimplementedby>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmlinearopcomposite.hpp" line="42" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_linear_op_composite_1aa9f8c9bcd1596637b3eaaa74c64ad83c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>virtual Array QuantLib::FdmLinearOpComposite::apply_direction</definition>
        <argsstring>(Size direction, const Array &amp;r) const =0</argsstring>
        <name>apply_direction</name>
        <qualifiedname>QuantLib::FdmLinearOpComposite::apply_direction</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_fdm2d_black_scholes_op_1a1250802f70c2c512a98e21c4de41d943">apply_direction</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_bates_op_1a2f71d75f5361a9145a46146ce2b198fb">apply_direction</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_black_scholes_fwd_op_1a8c35a42ed2e44d3348644fdf548ef58d">apply_direction</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_black_scholes_op_1a947e5b0220ce618d18354015739df1d8">apply_direction</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_c_e_v_op_1a3bd198af1a7cc526d2a908bab3a0684c">apply_direction</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_c_i_r_op_1aa49307a6319aa6874eee3effcfabb280">apply_direction</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_dupire1d_op_1aa23aab7c071133f6caafcc34a26c280d">apply_direction</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_extended_ornstein_uhlenbeck_op_1a5f76f610f418e450d9bf43e9547a31e3">apply_direction</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_ext_o_u_jump_op_1a447c5b74b6f114e2d0d2f658c9fe091c">apply_direction</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_g2_op_1a2d36b85c6a29de5451a16e385e27e45b">apply_direction</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_heston_fwd_op_1a738340dacc3cd5960ada204f9c6be42c">apply_direction</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_heston_hull_white_op_1a2d9c955bbf59717e695fc147811c934f">apply_direction</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_heston_op_1a7e01d14a874c58de1f1303cdaac26842">apply_direction</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_hull_white_op_1a6868b032812b5724fdede395401292c9">apply_direction</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_kluge_ext_o_u_op_1aedde282df420baa71da7e63b60abb5d9">apply_direction</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_local_vol_fwd_op_1ae1ba109df45b43349df192311169c3e1">apply_direction</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_ornstein_uhlenbeck_op_1a64d5d76c2e137514ccc2eaba5b735ff5">apply_direction</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_sabr_op_1ade2905017f76db0cccc12cedea8aa5e4">apply_direction</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_square_root_fwd_op_1a2cee22e9a7163d5b3a22c0a89ecd343c">apply_direction</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_wiener_op_1ab594a1139b06a6473208950760e6d91f">apply_direction</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_zabr_op_1ab1d69ee6860e0b02bc311bbf0260380b">apply_direction</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmlinearopcomposite.hpp" line="44" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_linear_op_composite_1a1ea6ebafd3a36a95a6acb6e1c189e21f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>virtual Array QuantLib::FdmLinearOpComposite::solve_splitting</definition>
        <argsstring>(Size direction, const Array &amp;r, Real s) const =0</argsstring>
        <name>solve_splitting</name>
        <qualifiedname>QuantLib::FdmLinearOpComposite::solve_splitting</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_fdm2d_black_scholes_op_1a93d0c7f2bae0ef98b6978df5c39f2a0b">solve_splitting</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_bates_op_1a0b916eb742d70b851bc745ddea1d215d">solve_splitting</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_black_scholes_fwd_op_1a84bf6463c75b1b2aa6e7f32a4bb0063f">solve_splitting</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_black_scholes_op_1a540da69b014362f619bdb81f3339c7f3">solve_splitting</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_c_e_v_op_1a9b14cd87231b7155d1cd311e8088d2e6">solve_splitting</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_c_i_r_op_1a82a6a4370e812d6724d66da8abedcb88">solve_splitting</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_dupire1d_op_1a0b287b33557c6fd15f3cb6a6d9d864c7">solve_splitting</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_extended_ornstein_uhlenbeck_op_1a19b73d0bd447ab40e79ac5e8ef5c7db5">solve_splitting</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_ext_o_u_jump_op_1aa291925dd1db189dab7aad0920913708">solve_splitting</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_g2_op_1ae23ac208757ccb71ff3282d4748c4464">solve_splitting</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_heston_fwd_op_1a566e71538cc80408631a1f83602eadd9">solve_splitting</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_heston_hull_white_op_1a7f6eda3fb214019ccd3d260991b1b8f0">solve_splitting</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_heston_op_1ad63b43737314fc5d513a49f2bf2e1468">solve_splitting</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_hull_white_op_1a469eced99eef2a7909056df2ec6414fe">solve_splitting</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_kluge_ext_o_u_op_1a469ad738d0a3ff6512071144551bcf4e">solve_splitting</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_local_vol_fwd_op_1a8abdc9b90673911f8517a494908f885f">solve_splitting</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_ornstein_uhlenbeck_op_1a2c577df6cac13b153eb8f10f6d63db8f">solve_splitting</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_sabr_op_1aff8beef2bc2aab8b3609eaafc87ecfc1">solve_splitting</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_square_root_fwd_op_1a4e3ca9ff6692d706703adcfcad1b4184">solve_splitting</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_wiener_op_1a2e6ef71d93bec164107cdf1064508438">solve_splitting</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_zabr_op_1aacb5f27cfabef992d04de7c5e308aec9">solve_splitting</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmlinearopcomposite.hpp" line="45" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_linear_op_composite_1a3122983a62d53799ffd1c03922660e6c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>virtual Array QuantLib::FdmLinearOpComposite::preconditioner</definition>
        <argsstring>(const Array &amp;r, Real s) const =0</argsstring>
        <name>preconditioner</name>
        <qualifiedname>QuantLib::FdmLinearOpComposite::preconditioner</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_fdm2d_black_scholes_op_1aa6bf7fceb1d9645798a098b6884f81c7">preconditioner</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_bates_op_1aeb2c41cbd539dfcb78ac4351819a12c1">preconditioner</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_black_scholes_fwd_op_1af88aa45e2bb846329aebe2985d91619b">preconditioner</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_black_scholes_op_1a8ebfd50f5822be75e32c455dfd663163">preconditioner</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_c_e_v_op_1a4fb11fc6981fc4b886e441d10433bbdd">preconditioner</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_c_i_r_op_1a00dbf6ec60b2b6c0f50cf91495dffccb">preconditioner</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_dupire1d_op_1a722587d14db8a32a83db0f0c7f0127ae">preconditioner</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_extended_ornstein_uhlenbeck_op_1a934222ad2759b5d7c28f3f46234d0a90">preconditioner</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_ext_o_u_jump_op_1ab66ed963a4b02f1b668e60e85fbd0c6d">preconditioner</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_g2_op_1ae37a6ec9ca1097276a696d08ee57623a">preconditioner</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_heston_fwd_op_1a74f6c7ef80006b81241af535e0725ab7">preconditioner</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_heston_hull_white_op_1aa1f70258b01c9b1d8f71b98acd0f3451">preconditioner</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_heston_op_1a92cc2563d3e1e86dce28ef60e7ede53c">preconditioner</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_hull_white_op_1a3ef0f7d223069a0d80009108ad45f6ca">preconditioner</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_kluge_ext_o_u_op_1ac8bf71b342409655fba81caad30ce375">preconditioner</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_local_vol_fwd_op_1a620d94230c8f44aaafa3e611ffbce9da">preconditioner</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_ornstein_uhlenbeck_op_1a1bdea7a8957eb5ffc2a7069bdf0085a9">preconditioner</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_sabr_op_1afefdc8c84c63c9866d4174d2b3837994">preconditioner</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_square_root_fwd_op_1a98df020fb3a794f19d5b456f3f75a3a4">preconditioner</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_wiener_op_1a1ea06c563a977a709009b5c830509c32">preconditioner</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_zabr_op_1aad51d06cdc5a67a541e9bfa22e57c916">preconditioner</reimplementedby>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmlinearopcomposite.hpp" line="46" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_linear_op_composite_1aae06b697cc0d041a8cbdd9b259ec34b9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::vector&lt; SparseMatrix &gt;</type>
        <definition>virtual std::vector&lt; SparseMatrix &gt; QuantLib::FdmLinearOpComposite::toMatrixDecomp</definition>
        <argsstring>() const</argsstring>
        <name>toMatrixDecomp</name>
        <qualifiedname>QuantLib::FdmLinearOpComposite::toMatrixDecomp</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_fdm2d_black_scholes_op_1a2ea3c70e4337d90f91d9fb029d58739c">toMatrixDecomp</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_bates_op_1a2dde01a4488fa4cae5babb08ff8328f1">toMatrixDecomp</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_black_scholes_fwd_op_1a0fe97601e7fc015aab00124011efb7d6">toMatrixDecomp</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_black_scholes_op_1a4c8bb144966a0bea10cd8acccbf5c8be">toMatrixDecomp</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_c_e_v_op_1a78d604b118356e7a18fea251dd6bdd98">toMatrixDecomp</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_c_i_r_op_1a151dd3de59616d0b0f757ffab60f84c3">toMatrixDecomp</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_dupire1d_op_1a1c76f9f96b116db1c73af7c1ae69085c">toMatrixDecomp</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_extended_ornstein_uhlenbeck_op_1a8b8ed4c91d9487664f09e230044501a2">toMatrixDecomp</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_ext_o_u_jump_op_1abdc6361464ea8af207b671d0785c9889">toMatrixDecomp</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_g2_op_1a3c2738f2a9da78a6a22fc476df8ed5bb">toMatrixDecomp</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_heston_fwd_op_1a4110d3f66eb2d360d2ce59f8bd9a9865">toMatrixDecomp</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_heston_hull_white_op_1a711fe1088e1fa9ac10e413ea11865dc4">toMatrixDecomp</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_heston_op_1acb93fceec2c1e7c5b6d37e7c09c16759">toMatrixDecomp</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_hull_white_op_1a83a0883b3cc00198e8ed9d700e538196">toMatrixDecomp</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_kluge_ext_o_u_op_1a2d90a67b03ccae4a71df2d2a84476eed">toMatrixDecomp</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_local_vol_fwd_op_1a74d869b687688766b897371b9793c667">toMatrixDecomp</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_ornstein_uhlenbeck_op_1a69ffe898037db73e510dd5f39fd03617">toMatrixDecomp</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_sabr_op_1a5fa7fab1cb7c881b1c1688aeb5beb646">toMatrixDecomp</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_square_root_fwd_op_1a307a93469100387744c49389aebd948c">toMatrixDecomp</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_wiener_op_1ae5b65b6cf7932a5f5803f3e47fe5be41">toMatrixDecomp</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_zabr_op_1a771f5470eeb5cc7736feedd577453d44">toMatrixDecomp</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmlinearopcomposite.hpp" line="48" column="29" bodyfile="ql/methods/finitedifferences/operators/fdmlinearopcomposite.hpp" bodystart="48" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_linear_op_composite_1abca0364ae63b5b0e714fcd3ac9e8a73b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>SparseMatrix</type>
        <definition>SparseMatrix QuantLib::FdmLinearOpComposite::toMatrix</definition>
        <argsstring>() const override</argsstring>
        <name>toMatrix</name>
        <qualifiedname>QuantLib::FdmLinearOpComposite::toMatrix</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_1a32b6761dc11909646700747d33ef710c">toMatrix</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmlinearopcomposite.hpp" line="52" column="22" bodyfile="ql/methods/finitedifferences/operators/fdmlinearopcomposite.hpp" bodystart="52" bodyend="56"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>QuantLib::Fdm2dBlackScholesOp</label>
        <link refid="class_quant_lib_1_1_fdm2d_black_scholes_op"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::FdmBatesOp</label>
        <link refid="class_quant_lib_1_1_fdm_bates_op"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::FdmBlackScholesFwdOp</label>
        <link refid="class_quant_lib_1_1_fdm_black_scholes_fwd_op"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::FdmBlackScholesOp</label>
        <link refid="class_quant_lib_1_1_fdm_black_scholes_op"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::FdmCEVOp</label>
        <link refid="class_quant_lib_1_1_fdm_c_e_v_op"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::FdmCIROp</label>
        <link refid="class_quant_lib_1_1_fdm_c_i_r_op"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QuantLib::FdmDupire1dOp</label>
        <link refid="class_quant_lib_1_1_fdm_dupire1d_op"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QuantLib::FdmExtOUJumpOp</label>
        <link refid="class_quant_lib_1_1_fdm_ext_o_u_jump_op"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>QuantLib::FdmExtendedOrnsteinUhlenbeckOp</label>
        <link refid="class_quant_lib_1_1_fdm_extended_ornstein_uhlenbeck_op"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>QuantLib::FdmG2Op</label>
        <link refid="class_quant_lib_1_1_fdm_g2_op"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>QuantLib::FdmHestonFwdOp</label>
        <link refid="class_quant_lib_1_1_fdm_heston_fwd_op"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>QuantLib::FdmHestonHullWhiteOp</label>
        <link refid="class_quant_lib_1_1_fdm_heston_hull_white_op"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>QuantLib::FdmHestonOp</label>
        <link refid="class_quant_lib_1_1_fdm_heston_op"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>QuantLib::FdmHullWhiteOp</label>
        <link refid="class_quant_lib_1_1_fdm_hull_white_op"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>QuantLib::FdmKlugeExtOUOp</label>
        <link refid="class_quant_lib_1_1_fdm_kluge_ext_o_u_op"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::FdmLinearOp</label>
        <link refid="class_quant_lib_1_1_fdm_linear_op"/>
      </node>
      <node id="1">
        <label>QuantLib::FdmLinearOpComposite</label>
        <link refid="class_quant_lib_1_1_fdm_linear_op_composite"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>QuantLib::FdmLocalVolFwdOp</label>
        <link refid="class_quant_lib_1_1_fdm_local_vol_fwd_op"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>QuantLib::FdmOrnsteinUhlenbeckOp</label>
        <link refid="class_quant_lib_1_1_fdm_ornstein_uhlenbeck_op"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>QuantLib::FdmSabrOp</label>
        <link refid="class_quant_lib_1_1_fdm_sabr_op"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>QuantLib::FdmSquareRootFwdOp</label>
        <link refid="class_quant_lib_1_1_fdm_square_root_fwd_op"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>QuantLib::FdmWienerOp</label>
        <link refid="class_quant_lib_1_1_fdm_wiener_op"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>QuantLib::FdmZabrOp</label>
        <link refid="class_quant_lib_1_1_fdm_zabr_op"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::FdmLinearOp</label>
        <link refid="class_quant_lib_1_1_fdm_linear_op"/>
      </node>
      <node id="1">
        <label>QuantLib::FdmLinearOpComposite</label>
        <link refid="class_quant_lib_1_1_fdm_linear_op_composite"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/methods/finitedifferences/operators/fdmlinearopcomposite.hpp" line="35" column="5" bodyfile="ql/methods/finitedifferences/operators/fdmlinearopcomposite.hpp" bodystart="35" bodyend="58"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_fdm_linear_op_1a9d59d8bb3597206db60f61c3f448c211" prot="public" virt="pure-virtual"><scope>QuantLib::FdmLinearOpComposite</scope><name>apply</name></member>
      <member refid="class_quant_lib_1_1_fdm_linear_op_composite_1aa9f8c9bcd1596637b3eaaa74c64ad83c" prot="public" virt="pure-virtual"><scope>QuantLib::FdmLinearOpComposite</scope><name>apply_direction</name></member>
      <member refid="class_quant_lib_1_1_fdm_linear_op_composite_1a162fe1437fb3060475f7824d73b72ff7" prot="public" virt="pure-virtual"><scope>QuantLib::FdmLinearOpComposite</scope><name>apply_mixed</name></member>
      <member refid="class_quant_lib_1_1_fdm_linear_op_1af55693593c0cf7e885c67fd848f76e49" prot="public" virt="non-virtual"><scope>QuantLib::FdmLinearOpComposite</scope><name>array_type</name></member>
      <member refid="class_quant_lib_1_1_fdm_linear_op_composite_1a3122983a62d53799ffd1c03922660e6c" prot="public" virt="pure-virtual"><scope>QuantLib::FdmLinearOpComposite</scope><name>preconditioner</name></member>
      <member refid="class_quant_lib_1_1_fdm_linear_op_composite_1ab635911759d6a1bde11c501d15515872" prot="public" virt="pure-virtual"><scope>QuantLib::FdmLinearOpComposite</scope><name>setTime</name></member>
      <member refid="class_quant_lib_1_1_fdm_linear_op_composite_1aea89ff84d04c901c37823de66b392018" prot="public" virt="pure-virtual"><scope>QuantLib::FdmLinearOpComposite</scope><name>size</name></member>
      <member refid="class_quant_lib_1_1_fdm_linear_op_composite_1a1ea6ebafd3a36a95a6acb6e1c189e21f" prot="public" virt="pure-virtual"><scope>QuantLib::FdmLinearOpComposite</scope><name>solve_splitting</name></member>
      <member refid="class_quant_lib_1_1_fdm_linear_op_composite_1abca0364ae63b5b0e714fcd3ac9e8a73b" prot="public" virt="virtual"><scope>QuantLib::FdmLinearOpComposite</scope><name>toMatrix</name></member>
      <member refid="class_quant_lib_1_1_fdm_linear_op_composite_1aae06b697cc0d041a8cbdd9b259ec34b9" prot="public" virt="virtual"><scope>QuantLib::FdmLinearOpComposite</scope><name>toMatrixDecomp</name></member>
      <member refid="class_quant_lib_1_1_fdm_linear_op_1aa6f29eb6144a1848c73c21e392f023e4" prot="public" virt="virtual"><scope>QuantLib::FdmLinearOpComposite</scope><name>~FdmLinearOp</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

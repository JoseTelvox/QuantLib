<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_smile_section" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::SmileSection</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_observable" prot="public" virt="virtual">QuantLib::Observable</basecompoundref>
    <basecompoundref refid="class_quant_lib_1_1_observer" prot="public" virt="virtual">QuantLib::Observer</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_atm_adjusted_smile_section" prot="public" virt="non-virtual">QuantLib::AtmAdjustedSmileSection</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_atm_smile_section" prot="public" virt="non-virtual">QuantLib::AtmSmileSection</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_flat_smile_section" prot="public" virt="non-virtual">QuantLib::FlatSmileSection</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_gaussian1d_smile_section" prot="public" virt="non-virtual">QuantLib::Gaussian1dSmileSection</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_interpolated_smile_section" prot="public" virt="non-virtual">QuantLib::InterpolatedSmileSection&lt; Interpolator &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_kahale_smile_section" prot="public" virt="non-virtual">QuantLib::KahaleSmileSection</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_markov_functional_1_1_custom_smile_section" prot="public" virt="non-virtual">QuantLib::MarkovFunctional::CustomSmileSection</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_no_arb_sabr_interpolated_smile_section" prot="public" virt="non-virtual">QuantLib::NoArbSabrInterpolatedSmileSection</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_no_arb_sabr_smile_section" prot="public" virt="non-virtual">QuantLib::NoArbSabrSmileSection</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_sabr_interpolated_smile_section" prot="public" virt="non-virtual">QuantLib::SabrInterpolatedSmileSection</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_sabr_smile_section" prot="public" virt="non-virtual">QuantLib::SabrSmileSection</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_spreaded_smile_section" prot="public" virt="non-virtual">QuantLib::SpreadedSmileSection</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_svi_interpolated_smile_section" prot="public" virt="non-virtual">QuantLib::SviInterpolatedSmileSection</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_svi_smile_section" prot="public" virt="non-virtual">QuantLib::SviSmileSection</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_tenor_optionlet_v_t_s_1_1_tenor_optionlet_smile_section" prot="public" virt="non-virtual">QuantLib::TenorOptionletVTS::TenorOptionletSmileSection</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_tenor_swaption_v_t_s_1_1_tenor_swaption_smile_section" prot="public" virt="non-virtual">QuantLib::TenorSwaptionVTS::TenorSwaptionSmileSection</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_zabr_interpolated_smile_section" prot="public" virt="non-virtual">QuantLib::ZabrInterpolatedSmileSection&lt; Evaluation &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_zabr_smile_section" prot="public" virt="non-virtual">QuantLib::ZabrSmileSection&lt; Evaluation &gt;</derivedcompoundref>
    <includes refid="smilesection_8hpp" local="no">smilesection.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_smile_section_1ae16c1b7e43d9470fd9cb750b023de7b9" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::SmileSection::isFloating_</definition>
        <argsstring></argsstring>
        <name>isFloating_</name>
        <qualifiedname>QuantLib::SmileSection::isFloating_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesection.hpp" line="86" column="14" bodyfile="ql/termstructures/volatility/smilesection.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_smile_section_1a7390c941598f5c846c99c8a4ece7c288" prot="private" static="no" mutable="yes">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::SmileSection::referenceDate_</definition>
        <argsstring></argsstring>
        <name>referenceDate_</name>
        <qualifiedname>QuantLib::SmileSection::referenceDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesection.hpp" line="87" column="22" bodyfile="ql/termstructures/volatility/smilesection.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_smile_section_1a2ddec3a3e3e82fde71736b3f0694c739" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::SmileSection::exerciseDate_</definition>
        <argsstring></argsstring>
        <name>exerciseDate_</name>
        <qualifiedname>QuantLib::SmileSection::exerciseDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesection.hpp" line="88" column="14" bodyfile="ql/termstructures/volatility/smilesection.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_smile_section_1aac59f66f988d1e703e5978199cb68283" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref></type>
        <definition>DayCounter QuantLib::SmileSection::dc_</definition>
        <argsstring></argsstring>
        <name>dc_</name>
        <qualifiedname>QuantLib::SmileSection::dc_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesection.hpp" line="89" column="20" bodyfile="ql/termstructures/volatility/smilesection.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_smile_section_1a3dfd1412aa42cc34c908db5cde2c5c86" prot="private" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>Time QuantLib::SmileSection::exerciseTime_</definition>
        <argsstring></argsstring>
        <name>exerciseTime_</name>
        <qualifiedname>QuantLib::SmileSection::exerciseTime_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesection.hpp" line="90" column="22" bodyfile="ql/termstructures/volatility/smilesection.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_smile_section_1a431cfdc31ad2d1d7f81c888686c474ae" prot="private" static="no" mutable="no">
        <type>VolatilityType</type>
        <definition>VolatilityType QuantLib::SmileSection::volatilityType_</definition>
        <argsstring></argsstring>
        <name>volatilityType_</name>
        <qualifiedname>QuantLib::SmileSection::volatilityType_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesection.hpp" line="91" column="24" bodyfile="ql/termstructures/volatility/smilesection.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_smile_section_1ac263512891c700d1b4912eaccb99293d" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::SmileSection::shift_</definition>
        <argsstring></argsstring>
        <name>shift_</name>
        <qualifiedname>QuantLib::SmileSection::shift_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesection.hpp" line="92" column="14" bodyfile="ql/termstructures/volatility/smilesection.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_smile_section_1a6c2ea1d64020c754251c89372fe46686" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::SmileSection::SmileSection</definition>
        <argsstring>(const Date &amp;d, DayCounter dc=DayCounter(), const Date &amp;referenceDate=Date(), VolatilityType type=ShiftedLognormal, Rate shift=0.0)</argsstring>
        <name>SmileSection</name>
        <qualifiedname>QuantLib::SmileSection::SmileSection</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref></type>
          <declname>dc</declname>
          <defval><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>referenceDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>VolatilityType</type>
          <declname>type</declname>
          <defval>ShiftedLognormal</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>shift</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesection.hpp" line="41" column="9" bodyfile="ql/termstructures/volatility/smilesection.cpp" bodystart="46" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_smile_section_1aae4f281efa6a9f4b5cea8165363df3b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::SmileSection::SmileSection</definition>
        <argsstring>(Time exerciseTime, DayCounter dc=DayCounter(), VolatilityType type=ShiftedLognormal, Rate shift=0.0)</argsstring>
        <name>SmileSection</name>
        <qualifiedname>QuantLib::SmileSection::SmileSection</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>exerciseTime</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref></type>
          <declname>dc</declname>
          <defval><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref>()</defval>
        </param>
        <param>
          <type>VolatilityType</type>
          <declname>type</declname>
          <defval>ShiftedLognormal</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>shift</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesection.hpp" line="46" column="9" bodyfile="ql/termstructures/volatility/smilesection.cpp" bodystart="61" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_smile_section_1a67cece6b7c60c0a5d7729bea038fe85c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::SmileSection::SmileSection</definition>
        <argsstring>()=default</argsstring>
        <name>SmileSection</name>
        <qualifiedname>QuantLib::SmileSection::SmileSection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesection.hpp" line="50" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_smile_section_1a7c6cb707ed5e58e5a1fa92efc3a9a88f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::SmileSection::~SmileSection</definition>
        <argsstring>() override=default</argsstring>
        <name>~SmileSection</name>
        <qualifiedname>QuantLib::SmileSection::~SmileSection</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesection.hpp" line="52" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_smile_section_1adecc5abf2867e2291878329b0256b08a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::SmileSection::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <qualifiedname>QuantLib::SmileSection::update</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_observer_1a07905c55dca858470fcf4a1aea0005aa">update</reimplements>
        <reimplementedby refid="class_quant_lib_1_1_spreaded_smile_section_1ac5ecc727fe8f4dee93d070e563d11c90">update</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_svi_interpolated_smile_section_1a464e4516d105d2b317f11ed5ca3f1071">update</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_zabr_interpolated_smile_section_1abf32c9aa6f314dd573efbe9e701ec05d">update</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must be implemented in derived classes. An instance of Observer does not call this method directly: instead, it will be called by the observables the instance registered with when they need to notify any changes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesection.hpp" line="54" column="14" bodyfile="ql/termstructures/volatility/smilesection.cpp" bodystart="31" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_smile_section_1a54bb5cd9f6913f7d69efc85d51af2624" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::SmileSection::minStrike</definition>
        <argsstring>() const =0</argsstring>
        <name>minStrike</name>
        <qualifiedname>QuantLib::SmileSection::minStrike</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_atm_adjusted_smile_section_1a1ceff64c143c4a04943869bc4e997553">minStrike</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_atm_smile_section_1a20665e6be525612629cb71085d05d464">minStrike</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_flat_smile_section_1a2fd9e282db345d09402cabbf5bfa3fc8">minStrike</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_gaussian1d_smile_section_1aa041fa5ce3108387a5f8be4db6d7b3c0">minStrike</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_interpolated_smile_section_1a59923826de13cb5ccc086bceeb83a5c3">minStrike</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_kahale_smile_section_1ae5cdc77e5b294036c1f2c557a253a884">minStrike</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_no_arb_sabr_interpolated_smile_section_1a465ab9ae1acb396e5772cc92ad320787">minStrike</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_no_arb_sabr_smile_section_1a20d1c9328a19db28c0ca89819cc5befe">minStrike</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_sabr_interpolated_smile_section_1a178785f94d336ae194b7e8aec27e82e0">minStrike</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_sabr_smile_section_1a50eb9c7bea4cf3700ceab24967271633">minStrike</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_spreaded_smile_section_1a76d41292456c51b457484ae1bdd5ff4a">minStrike</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_svi_interpolated_smile_section_1a84c5c2abce3e9e6d39469d8115aade13">minStrike</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_svi_smile_section_1a7f506458b529d2e592de6546c9b80c0b">minStrike</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_tenor_optionlet_v_t_s_1_1_tenor_optionlet_smile_section_1afa14551681296d4c7c41d8f14003af87">minStrike</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_tenor_swaption_v_t_s_1_1_tenor_swaption_smile_section_1a726acf5609696366e7689e3e45e9a7e1">minStrike</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_zabr_interpolated_smile_section_1af19d6ec3f0dbb6961ce03db063657864">minStrike</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_zabr_smile_section_1a657da8ebdcc2518874d47fde99e3defe">minStrike</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesection.hpp" line="55" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_smile_section_1aa74a46c0a15e98112c1f9afaad9e6604" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::SmileSection::maxStrike</definition>
        <argsstring>() const =0</argsstring>
        <name>maxStrike</name>
        <qualifiedname>QuantLib::SmileSection::maxStrike</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_atm_adjusted_smile_section_1a357fab71d1f83b1f8694140d148f7c8a">maxStrike</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_atm_smile_section_1aa9a460cac9b037dccd122cd2f08d74a5">maxStrike</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_flat_smile_section_1a913c2296661e80068a1a9a9c9077dcb5">maxStrike</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_gaussian1d_smile_section_1a9781631a5ead70e96e8833b10a07a7ea">maxStrike</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_interpolated_smile_section_1a1f8d12d2f6cdc22bb3f96822c30ef80b">maxStrike</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_kahale_smile_section_1a92605b3a1fe906d3ccc53572cb7bcf00">maxStrike</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_no_arb_sabr_interpolated_smile_section_1aa2c6abaf91d2c03b6491287e9feb3b3b">maxStrike</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_no_arb_sabr_smile_section_1ad9fe5f30e4190ddf53b6358ed77e5500">maxStrike</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_sabr_interpolated_smile_section_1a6ae44eeceb0560500db9404d83dcfd5b">maxStrike</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_sabr_smile_section_1a2c941d937b41589275f3010a67f7e314">maxStrike</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_spreaded_smile_section_1aabedb1582419658b5c5ca497b8d1071c">maxStrike</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_svi_interpolated_smile_section_1add420c506ac728d770e3b3805ffe0079">maxStrike</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_svi_smile_section_1a9df8ea2b451acda5368aa6d37c891ec7">maxStrike</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_tenor_optionlet_v_t_s_1_1_tenor_optionlet_smile_section_1aea4c555b823438aef278ae59770e90d9">maxStrike</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_tenor_swaption_v_t_s_1_1_tenor_swaption_smile_section_1af87358460d5ea21990f40c85e2cb4345">maxStrike</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_zabr_interpolated_smile_section_1adcfbe4576d247d87a677cbe4e900723d">maxStrike</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_zabr_smile_section_1aa16abfe6fb1bc2d6f1fc21c74b9aa764">maxStrike</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesection.hpp" line="56" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_smile_section_1a5bab1e23eb1c4d12f927c7b80cafa550" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SmileSection::variance</definition>
        <argsstring>(Rate strike) const</argsstring>
        <name>variance</name>
        <qualifiedname>QuantLib::SmileSection::variance</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesection.hpp" line="57" column="14" bodyfile="ql/termstructures/volatility/smilesection.hpp" bodystart="98" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_smile_section_1a0e1a9e52460bb881952fc9d9bce51a98" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
        <definition>Volatility QuantLib::SmileSection::volatility</definition>
        <argsstring>(Rate strike) const</argsstring>
        <name>volatility</name>
        <qualifiedname>QuantLib::SmileSection::volatility</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesection.hpp" line="58" column="20" bodyfile="ql/termstructures/volatility/smilesection.hpp" bodystart="102" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_smile_section_1a7ff3d003fcdcf207cde30c3469b6422a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::SmileSection::atmLevel</definition>
        <argsstring>() const =0</argsstring>
        <name>atmLevel</name>
        <qualifiedname>QuantLib::SmileSection::atmLevel</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_atm_adjusted_smile_section_1a9f5bdb08d5073a067b3cd9e7e1d4259f">atmLevel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_atm_smile_section_1ab42d8b476a035cedaa185b9f5c6c9dfc">atmLevel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_flat_smile_section_1ad3aeb65ef8e66d14c7590708072fb0d1">atmLevel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_gaussian1d_smile_section_1a052d392cf92c40831af605c3a6f7a86c">atmLevel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_interpolated_smile_section_1a6fa54aefae795aaa5a887c37896303c7">atmLevel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_kahale_smile_section_1aa1a0a2bb1e00612accda22a954c762de">atmLevel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_no_arb_sabr_interpolated_smile_section_1ac7c7316780cddf2397f5b17562607d50">atmLevel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_no_arb_sabr_smile_section_1af9ac9a782cd6f489ea062781fc143c51">atmLevel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_sabr_interpolated_smile_section_1a31e43440186fc7b52cf7ec9acabd74d8">atmLevel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_sabr_smile_section_1aea0186853c40a8e9b911fe4f7f239fbf">atmLevel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_spreaded_smile_section_1ab9a04563ca5251b7fb7be296958d8d1a">atmLevel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_svi_interpolated_smile_section_1aee66c69f84128ccd841c3774d02aff45">atmLevel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_svi_smile_section_1aea11421040ca2b45364895b26a5bc622">atmLevel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_tenor_optionlet_v_t_s_1_1_tenor_optionlet_smile_section_1ab3ce731619e0b635ddf04b00f15b6fe2">atmLevel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_tenor_swaption_v_t_s_1_1_tenor_swaption_smile_section_1a0cccb544dee6f1d934ca6515ef0c8a0c">atmLevel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_zabr_interpolated_smile_section_1aa53987168b9e32149cb8093c5ac6ad47">atmLevel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_zabr_smile_section_1a4f4bfc037e0af1229706c6cb68192d56">atmLevel</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesection.hpp" line="59" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_smile_section_1ac9b9e60511fc940cd8d74fbbbcd87b5f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
        <definition>virtual const Date &amp; QuantLib::SmileSection::exerciseDate</definition>
        <argsstring>() const</argsstring>
        <name>exerciseDate</name>
        <qualifiedname>QuantLib::SmileSection::exerciseDate</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_atm_adjusted_smile_section_1a9cea2be39212d6d4c5bfe4d4fc9adf78">exerciseDate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_atm_smile_section_1a49fb78c13b1ad972b808b079117a9e45">exerciseDate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_kahale_smile_section_1a1ca4d11eba97d50f49d2e3cb0cf49fe8">exerciseDate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_spreaded_smile_section_1aab43c04b26e9e46d9859acf8343153c9">exerciseDate</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesection.hpp" line="60" column="28" bodyfile="ql/termstructures/volatility/smilesection.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_smile_section_1aac4cb2b17d273eecb0508f3a5c050a22" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>VolatilityType</type>
        <definition>virtual VolatilityType QuantLib::SmileSection::volatilityType</definition>
        <argsstring>() const</argsstring>
        <name>volatilityType</name>
        <qualifiedname>QuantLib::SmileSection::volatilityType</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_atm_adjusted_smile_section_1aa6f6aba6a60fdbde9470595926816631">volatilityType</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_atm_smile_section_1a1052283e9ef84913948eed02c408c0db">volatilityType</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_kahale_smile_section_1a01f70244099f70977c3c14349eb30aea">volatilityType</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_spreaded_smile_section_1a8274293863bae304ce63d76b0c6b6d36">volatilityType</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesection.hpp" line="61" column="32" bodyfile="ql/termstructures/volatility/smilesection.hpp" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_smile_section_1a3fbddba097e2b742fe8800217ed613cc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>virtual Rate QuantLib::SmileSection::shift</definition>
        <argsstring>() const</argsstring>
        <name>shift</name>
        <qualifiedname>QuantLib::SmileSection::shift</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_atm_adjusted_smile_section_1a486c1302dfd15c80a65042ba21d47493">shift</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_atm_smile_section_1abfb4c9cbfa16fd8ac0bcf19104b4f26c">shift</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_kahale_smile_section_1ab05755f01b50213f45634ae5e901f18a">shift</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_spreaded_smile_section_1a022369336b121efb1718a6b6826b179b">shift</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesection.hpp" line="64" column="22" bodyfile="ql/termstructures/volatility/smilesection.hpp" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_smile_section_1a42fe316ed2696fb7b8b6fb8853b5bae0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
        <definition>const Date &amp; QuantLib::SmileSection::referenceDate</definition>
        <argsstring>() const</argsstring>
        <name>referenceDate</name>
        <qualifiedname>QuantLib::SmileSection::referenceDate</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_atm_adjusted_smile_section_1a24eb3cce02b54ffccb65b62ecec52178">referenceDate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_atm_smile_section_1a8a8c1f059eaed18f7532d57075d5be23">referenceDate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_kahale_smile_section_1a656240d3aad077ee172ddbfac4a52500">referenceDate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_spreaded_smile_section_1af1f88c8c867e3c863aec391a7cdbb2de">referenceDate</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesection.hpp" line="65" column="28" bodyfile="ql/termstructures/volatility/smilesection.hpp" bodystart="106" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_smile_section_1a7bf1b552a5e93d12631f01a5fa59eb58" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>virtual Time QuantLib::SmileSection::exerciseTime</definition>
        <argsstring>() const</argsstring>
        <name>exerciseTime</name>
        <qualifiedname>QuantLib::SmileSection::exerciseTime</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_atm_adjusted_smile_section_1ae54645f2b4f4b73a77113d5aef76fa28">exerciseTime</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_atm_smile_section_1aa3a79a5d2d9ad94be1462564c0de631f">exerciseTime</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_kahale_smile_section_1a49a1892ba7659745fc33308252b48c49">exerciseTime</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_spreaded_smile_section_1afeaa783d315ddae3058539f46c6d5bde">exerciseTime</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesection.hpp" line="66" column="22" bodyfile="ql/termstructures/volatility/smilesection.hpp" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_smile_section_1a9d62efde0aa0bc8b6628ab562b5c479d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
        <definition>virtual const DayCounter &amp; QuantLib::SmileSection::dayCounter</definition>
        <argsstring>() const</argsstring>
        <name>dayCounter</name>
        <qualifiedname>QuantLib::SmileSection::dayCounter</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_atm_adjusted_smile_section_1a29a3b46418138aa9250be7a69b7223f8">dayCounter</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_atm_smile_section_1ae2ecf9d28caa29624ab5edb2d69884c5">dayCounter</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_kahale_smile_section_1a08a12c1f3017e1837214327a47be15d2">dayCounter</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_spreaded_smile_section_1a9b3f8b55406ef043933ed7fffd48de62">dayCounter</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesection.hpp" line="67" column="34" bodyfile="ql/termstructures/volatility/smilesection.hpp" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_smile_section_1abf5fbad0f8d32a1b644ec3c23927061b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SmileSection::optionPrice</definition>
        <argsstring>(Rate strike, Option::Type type=Option::Call, Real discount=1.0) const</argsstring>
        <name>optionPrice</name>
        <qualifiedname>QuantLib::SmileSection::optionPrice</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_atm_adjusted_smile_section_1aba7ef7615092e9ef86985a3aee6f8a91">optionPrice</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_gaussian1d_smile_section_1a47653ec6c5ba7e2f92d89fdfa22da581">optionPrice</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_kahale_smile_section_1a5fc7df3bca826c169da07049584789ee">optionPrice</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_no_arb_sabr_smile_section_1a1a5398e5b247fc49aaae75bd0a9b05b0">optionPrice</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_zabr_smile_section_1a91ef0c6a14599c9ca85e93a4a9c5d775">optionPrice</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type>Option::Type</type>
          <declname>type</declname>
          <defval>Option::Call</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>discount</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesection.hpp" line="68" column="22" bodyfile="ql/termstructures/volatility/smilesection.cpp" bodystart="72" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_smile_section_1a9ecdb328b2b90432da8a4429c4d56f06" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SmileSection::digitalOptionPrice</definition>
        <argsstring>(Rate strike, Option::Type type=Option::Call, Real discount=1.0, Real gap=1.0e-5) const</argsstring>
        <name>digitalOptionPrice</name>
        <qualifiedname>QuantLib::SmileSection::digitalOptionPrice</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_atm_adjusted_smile_section_1aa539e8cbbdda69eb60a1b1cbb75f06ac">digitalOptionPrice</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_no_arb_sabr_smile_section_1a6ac416bb56d617990fbdf51575f5750c">digitalOptionPrice</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type>Option::Type</type>
          <declname>type</declname>
          <defval>Option::Call</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>discount</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>gap</declname>
          <defval>1.0e-5</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesection.hpp" line="71" column="22" bodyfile="ql/termstructures/volatility/smilesection.cpp" bodystart="88" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_smile_section_1a7186ee49bc91697dcca75fd5204629be" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SmileSection::vega</definition>
        <argsstring>(Rate strike, Real discount=1.0) const</argsstring>
        <name>vega</name>
        <qualifiedname>QuantLib::SmileSection::vega</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_atm_adjusted_smile_section_1aa5128bff15bbe2ed56961d7e1aebddf9">vega</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>discount</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesection.hpp" line="75" column="22" bodyfile="ql/termstructures/volatility/smilesection.cpp" bodystart="107" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_smile_section_1a3a4e90440ae22c4c9c3e9253b0199a82" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SmileSection::density</definition>
        <argsstring>(Rate strike, Real discount=1.0, Real gap=1.0E-4) const</argsstring>
        <name>density</name>
        <qualifiedname>QuantLib::SmileSection::density</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_atm_adjusted_smile_section_1a2d684fa955101a22366f1cb75b839a9c">density</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_no_arb_sabr_smile_section_1af9248e8a657b0268de8ffce4a98401a3">density</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>discount</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>gap</declname>
          <defval>1.0E-4</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesection.hpp" line="77" column="22" bodyfile="ql/termstructures/volatility/smilesection.cpp" bodystart="99" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_smile_section_1a672a3e1398986f0a9c922b7b6bf3233c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
        <definition>Real QuantLib::SmileSection::volatility</definition>
        <argsstring>(Rate strike, VolatilityType type, Real shift=0.0) const</argsstring>
        <name>volatility</name>
        <qualifiedname>QuantLib::SmileSection::volatility</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type>VolatilityType</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>shift</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesection.hpp" line="80" column="20" bodyfile="ql/termstructures/volatility/smilesection.cpp" bodystart="119" bodyend="143"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_smile_section_1a7fba48f0a4277b91b0d0768d262affdb" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::SmileSection::initializeExerciseTime</definition>
        <argsstring>() const</argsstring>
        <name>initializeExerciseTime</name>
        <qualifiedname>QuantLib::SmileSection::initializeExerciseTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesection.hpp" line="82" column="22" bodyfile="ql/termstructures/volatility/smilesection.cpp" bodystart="38" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_smile_section_1a680162f5de7f231d1ff2b5fb76cfc54a" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SmileSection::varianceImpl</definition>
        <argsstring>(Rate strike) const</argsstring>
        <name>varianceImpl</name>
        <qualifiedname>QuantLib::SmileSection::varianceImpl</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_atm_adjusted_smile_section_1a7f73a5faf50b97f6b558861aab832ef3">varianceImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_atm_smile_section_1a265cbb622d6beaa841f82a2d68fb81b1">varianceImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_interpolated_smile_section_1a708766444d13a0dcf7dbeed743fbe42e">varianceImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_no_arb_sabr_interpolated_smile_section_1ae061fe4f50949f52a97be51c0373fd19">varianceImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_sabr_interpolated_smile_section_1ad383689eff9573e7e017f1309ad67ddb">varianceImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_sabr_smile_section_1a2da219d4844012bbecba637ee43f4680">varianceImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_svi_interpolated_smile_section_1a76325269c2c7cf944b6ba7da8f7831c5">varianceImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_zabr_interpolated_smile_section_1a7fb19702b56eb50386a2bac085cf39b4">varianceImpl</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesection.hpp" line="83" column="22" bodyfile="ql/termstructures/volatility/smilesection.hpp" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_smile_section_1a14bf773bdfb690c9b9e9cbe61f14c2bf" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
        <definition>virtual Volatility QuantLib::SmileSection::volatilityImpl</definition>
        <argsstring>(Rate strike) const =0</argsstring>
        <name>volatilityImpl</name>
        <qualifiedname>QuantLib::SmileSection::volatilityImpl</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_atm_adjusted_smile_section_1a4f54fddd02a6f2bdd674499fbbf7f1ac">volatilityImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_atm_smile_section_1a3cd9af42569c03354a2a8d2b29983ae5">volatilityImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_flat_smile_section_1a068778b7aac51f86900bef15fabcaf98">volatilityImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_gaussian1d_smile_section_1ae1c827404acd60eb03b59b71f0232a26">volatilityImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_interpolated_smile_section_1ad9f0096154471da62c34e0db151e5062">volatilityImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_kahale_smile_section_1ac86efabeac5d24e64909d46835b5abb4">volatilityImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_no_arb_sabr_interpolated_smile_section_1a7894a1c2658475b04b65c3db7cd9c0b8">volatilityImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_no_arb_sabr_smile_section_1a4f6d8a03383224d1d7bb7486df8f4038">volatilityImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_sabr_interpolated_smile_section_1aa4433e7cbdd46912a4fd650c1c4e857e">volatilityImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_sabr_smile_section_1abdb7e49d9a89fc115b176a8e75f4b76a">volatilityImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_spreaded_smile_section_1af64546aa5398cf23aa5efe2fd1be672c">volatilityImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_svi_interpolated_smile_section_1ab493f2de85c330982b46a8febcc2930d">volatilityImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_svi_smile_section_1a9543ade1514d9835dabd8c86ba9b2e1a">volatilityImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_tenor_optionlet_v_t_s_1_1_tenor_optionlet_smile_section_1aa31ff823df606773c97eb5cb2503de61">volatilityImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_tenor_swaption_v_t_s_1_1_tenor_swaption_smile_section_1a6a0cf10e4c4250b11cccfc30f999e478">volatilityImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_zabr_interpolated_smile_section_1afcfa7e058e4f3cec10f0645b992fcbb1">volatilityImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_zabr_smile_section_1ae80044659f5d4e33fafd94262f3f5bfa">volatilityImpl</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesection.hpp" line="84" column="28"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>interest rate volatility smile section </para>
    </briefdescription>
    <detaileddescription>
<para>This abstract class provides volatility smile section interface </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>QuantLib::AtmAdjustedSmileSection</label>
        <link refid="class_quant_lib_1_1_atm_adjusted_smile_section"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::AtmSmileSection</label>
        <link refid="class_quant_lib_1_1_atm_smile_section"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::FlatSmileSection</label>
        <link refid="class_quant_lib_1_1_flat_smile_section"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::Gaussian1dSmileSection</label>
        <link refid="class_quant_lib_1_1_gaussian1d_smile_section"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::InterpolatedSmileSection&lt; Interpolator &gt;</label>
        <link refid="class_quant_lib_1_1_interpolated_smile_section"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QuantLib::KahaleSmileSection</label>
        <link refid="class_quant_lib_1_1_kahale_smile_section"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QuantLib::MarkovFunctional::CustomSmileSection</label>
        <link refid="class_quant_lib_1_1_markov_functional_1_1_custom_smile_section"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>QuantLib::NoArbSabrInterpolatedSmileSection</label>
        <link refid="class_quant_lib_1_1_no_arb_sabr_interpolated_smile_section"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>QuantLib::NoArbSabrSmileSection</label>
        <link refid="class_quant_lib_1_1_no_arb_sabr_smile_section"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="3">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="13">
        <label>QuantLib::SabrInterpolatedSmileSection</label>
        <link refid="class_quant_lib_1_1_sabr_interpolated_smile_section"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>QuantLib::SabrSmileSection</label>
        <link refid="class_quant_lib_1_1_sabr_smile_section"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::SmileSection</label>
        <link refid="class_quant_lib_1_1_smile_section"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>QuantLib::SpreadedSmileSection</label>
        <link refid="class_quant_lib_1_1_spreaded_smile_section"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>QuantLib::SviInterpolatedSmileSection</label>
        <link refid="class_quant_lib_1_1_svi_interpolated_smile_section"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>QuantLib::SviSmileSection</label>
        <link refid="class_quant_lib_1_1_svi_smile_section"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>QuantLib::TenorOptionletVTS::TenorOptionletSmileSection</label>
        <link refid="class_quant_lib_1_1_tenor_optionlet_v_t_s_1_1_tenor_optionlet_smile_section"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>QuantLib::TenorSwaptionVTS::TenorSwaptionSmileSection</label>
        <link refid="class_quant_lib_1_1_tenor_swaption_v_t_s_1_1_tenor_swaption_smile_section"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>QuantLib::ZabrInterpolatedSmileSection&lt; Evaluation &gt;</label>
        <link refid="class_quant_lib_1_1_zabr_interpolated_smile_section"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>QuantLib::ZabrSmileSection&lt; Evaluation &gt;</label>
        <link refid="class_quant_lib_1_1_zabr_smile_section"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="3">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="1">
        <label>QuantLib::SmileSection</label>
        <link refid="class_quant_lib_1_1_smile_section"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/termstructures/volatility/smilesection.hpp" line="38" column="5" bodyfile="ql/termstructures/volatility/smilesection.hpp" bodystart="39" bodyend="93"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_smile_section_1a7ff3d003fcdcf207cde30c3469b6422a" prot="public" virt="pure-virtual"><scope>QuantLib::SmileSection</scope><name>atmLevel</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a9d62efde0aa0bc8b6628ab562b5c479d" prot="public" virt="virtual"><scope>QuantLib::SmileSection</scope><name>dayCounter</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1aac59f66f988d1e703e5978199cb68283" prot="private" virt="non-virtual"><scope>QuantLib::SmileSection</scope><name>dc_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::SmileSection</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a3a4e90440ae22c4c9c3e9253b0199a82" prot="public" virt="virtual"><scope>QuantLib::SmileSection</scope><name>density</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a9ecdb328b2b90432da8a4429c4d56f06" prot="public" virt="virtual"><scope>QuantLib::SmileSection</scope><name>digitalOptionPrice</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1ac9b9e60511fc940cd8d74fbbbcd87b5f" prot="public" virt="virtual"><scope>QuantLib::SmileSection</scope><name>exerciseDate</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a2ddec3a3e3e82fde71736b3f0694c739" prot="private" virt="non-virtual"><scope>QuantLib::SmileSection</scope><name>exerciseDate_</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a7bf1b552a5e93d12631f01a5fa59eb58" prot="public" virt="virtual"><scope>QuantLib::SmileSection</scope><name>exerciseTime</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a3dfd1412aa42cc34c908db5cde2c5c86" prot="private" virt="non-virtual"><scope>QuantLib::SmileSection</scope><name>exerciseTime_</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a7fba48f0a4277b91b0d0768d262affdb" prot="protected" virt="virtual"><scope>QuantLib::SmileSection</scope><name>initializeExerciseTime</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1ae16c1b7e43d9470fd9cb750b023de7b9" prot="private" virt="non-virtual"><scope>QuantLib::SmileSection</scope><name>isFloating_</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::SmileSection</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1aa74a46c0a15e98112c1f9afaad9e6604" prot="public" virt="pure-virtual"><scope>QuantLib::SmileSection</scope><name>maxStrike</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a54bb5cd9f6913f7d69efc85d51af2624" prot="public" virt="pure-virtual"><scope>QuantLib::SmileSection</scope><name>minStrike</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::SmileSection</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::SmileSection</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::SmileSection</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::SmileSection</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::SmileSection</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::SmileSection</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::SmileSection</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::SmileSection</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::SmileSection</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1abf5fbad0f8d32a1b644ec3c23927061b" prot="public" virt="virtual"><scope>QuantLib::SmileSection</scope><name>optionPrice</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a42fe316ed2696fb7b8b6fb8853b5bae0" prot="public" virt="virtual"><scope>QuantLib::SmileSection</scope><name>referenceDate</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a7390c941598f5c846c99c8a4ece7c288" prot="private" virt="non-virtual"><scope>QuantLib::SmileSection</scope><name>referenceDate_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::SmileSection</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::SmileSection</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a3fbddba097e2b742fe8800217ed613cc" prot="public" virt="virtual"><scope>QuantLib::SmileSection</scope><name>shift</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1ac263512891c700d1b4912eaccb99293d" prot="private" virt="non-virtual"><scope>QuantLib::SmileSection</scope><name>shift_</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a6c2ea1d64020c754251c89372fe46686" prot="public" virt="non-virtual"><scope>QuantLib::SmileSection</scope><name>SmileSection</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1aae4f281efa6a9f4b5cea8165363df3b5" prot="public" virt="non-virtual"><scope>QuantLib::SmileSection</scope><name>SmileSection</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a67cece6b7c60c0a5d7729bea038fe85c" prot="public" virt="non-virtual"><scope>QuantLib::SmileSection</scope><name>SmileSection</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::SmileSection</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::SmileSection</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1adecc5abf2867e2291878329b0256b08a" prot="public" virt="virtual"><scope>QuantLib::SmileSection</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a5bab1e23eb1c4d12f927c7b80cafa550" prot="public" virt="non-virtual"><scope>QuantLib::SmileSection</scope><name>variance</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a680162f5de7f231d1ff2b5fb76cfc54a" prot="protected" virt="virtual"><scope>QuantLib::SmileSection</scope><name>varianceImpl</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a7186ee49bc91697dcca75fd5204629be" prot="public" virt="virtual"><scope>QuantLib::SmileSection</scope><name>vega</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a0e1a9e52460bb881952fc9d9bce51a98" prot="public" virt="non-virtual"><scope>QuantLib::SmileSection</scope><name>volatility</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a672a3e1398986f0a9c922b7b6bf3233c" prot="public" virt="non-virtual"><scope>QuantLib::SmileSection</scope><name>volatility</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a14bf773bdfb690c9b9e9cbe61f14c2bf" prot="protected" virt="pure-virtual"><scope>QuantLib::SmileSection</scope><name>volatilityImpl</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1aac4cb2b17d273eecb0508f3a5c050a22" prot="public" virt="virtual"><scope>QuantLib::SmileSection</scope><name>volatilityType</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a431cfdc31ad2d1d7f81c888686c474ae" prot="private" virt="non-virtual"><scope>QuantLib::SmileSection</scope><name>volatilityType_</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::SmileSection</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::SmileSection</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a7c6cb707ed5e58e5a1fa92efc3a9a88f" prot="public" virt="non-virtual"><scope>QuantLib::SmileSection</scope><name>~SmileSection</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_general_statistics" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::GeneralStatistics</compoundname>
    <derivedcompoundref refid="class_quant_lib_1_1_generic_gaussian_statistics" prot="public" virt="non-virtual">QuantLib::GenericGaussianStatistics&lt; GeneralStatistics &gt;</derivedcompoundref>
    <includes refid="generalstatistics_8hpp" local="no">generalstatistics.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Modifiers</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_general_statistics_1a83451c61e1bc67b8090a242e75dd0e61" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; std::pair&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>, <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::pair&lt;Real,Real&gt; &gt; QuantLib::GeneralStatistics::samples_</definition>
        <argsstring></argsstring>
        <name>samples_</name>
        <qualifiedname>QuantLib::GeneralStatistics::samples_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/generalstatistics.hpp" line="191" column="29" bodyfile="ql/math/statistics/generalstatistics.hpp" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_general_statistics_1a27f5cdb9e60ccdc4bcb7e8ceef768e9a" prot="private" static="no" mutable="yes">
        <type>bool</type>
        <definition>bool QuantLib::GeneralStatistics::sorted_</definition>
        <argsstring></argsstring>
        <name>sorted_</name>
        <qualifiedname>QuantLib::GeneralStatistics::sorted_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/generalstatistics.hpp" line="192" column="22" bodyfile="ql/math/statistics/generalstatistics.hpp" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_general_statistics_1ad3a191db3b8499fe3ca40b2767566c37" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::GeneralStatistics::add</definition>
        <argsstring>(Real value, Real weight=1.0)</argsstring>
        <name>add</name>
        <qualifiedname>QuantLib::GeneralStatistics::add</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>weight</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
<para>adds a datum to the set, possibly with a weight </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>weights must be positive or null </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/generalstatistics.hpp" line="166" column="14" bodyfile="ql/math/statistics/generalstatistics.hpp" bodystart="232" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_general_statistics_1a53c28bde7870633108e7384152052705" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DataIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void QuantLib::GeneralStatistics::addSequence</definition>
        <argsstring>(DataIterator begin, DataIterator end)</argsstring>
        <name>addSequence</name>
        <qualifiedname>QuantLib::GeneralStatistics::addSequence</qualifiedname>
        <param>
          <type>DataIterator</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>DataIterator</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>adds a sequence of data to the set, with default weight </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/generalstatistics.hpp" line="169" column="14" bodyfile="ql/math/statistics/generalstatistics.hpp" bodystart="169" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_general_statistics_1a5806e20a12af06926ccd9e9faec4b01b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DataIterator</type>
          </param>
          <param>
            <type>class WeightIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void QuantLib::GeneralStatistics::addSequence</definition>
        <argsstring>(DataIterator begin, DataIterator end, WeightIterator wbegin)</argsstring>
        <name>addSequence</name>
        <qualifiedname>QuantLib::GeneralStatistics::addSequence</qualifiedname>
        <param>
          <type>DataIterator</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>DataIterator</type>
          <declname>end</declname>
        </param>
        <param>
          <type>WeightIterator</type>
          <declname>wbegin</declname>
        </param>
        <briefdescription>
<para>adds a sequence of data to the set, each with its weight </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/generalstatistics.hpp" line="175" column="14" bodyfile="ql/math/statistics/generalstatistics.hpp" bodystart="175" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_general_statistics_1a3e240328f09a7420ca357bd6ccad6ef3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::GeneralStatistics::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <qualifiedname>QuantLib::GeneralStatistics::reset</qualifiedname>
        <briefdescription>
<para>resets the data to a null set </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/generalstatistics.hpp" line="182" column="14" bodyfile="ql/math/statistics/generalstatistics.hpp" bodystart="238" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_general_statistics_1a141648cfe046b00aa03f609c5e060d29" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::GeneralStatistics::reserve</definition>
        <argsstring>(Size n) const</argsstring>
        <name>reserve</name>
        <qualifiedname>QuantLib::GeneralStatistics::reserve</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>informs the internal storage of a planned increase in size </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/generalstatistics.hpp" line="185" column="14" bodyfile="ql/math/statistics/generalstatistics.hpp" bodystart="243" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_general_statistics_1a79f8a75458ea0533780a40c97abf543c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::GeneralStatistics::sort</definition>
        <argsstring>() const</argsstring>
        <name>sort</name>
        <qualifiedname>QuantLib::GeneralStatistics::sort</qualifiedname>
        <briefdescription>
<para>sort the data set in increasing order </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/generalstatistics.hpp" line="188" column="14" bodyfile="ql/math/statistics/generalstatistics.hpp" bodystart="247" bodyend="252"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Inspectors</header>
      <memberdef kind="function" id="class_quant_lib_1_1_general_statistics_1afa1962d0bad6df2d31f6593da2a665c0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::GeneralStatistics::samples</definition>
        <argsstring>() const</argsstring>
        <name>samples</name>
        <qualifiedname>QuantLib::GeneralStatistics::samples</qualifiedname>
        <briefdescription>
<para>number of samples collected </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/generalstatistics.hpp" line="53" column="14" bodyfile="ql/math/statistics/generalstatistics.hpp" bodystart="202" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_general_statistics_1a223a1199f97dd1226cc07255ad015670" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; std::pair&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>, <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &gt; &amp;</type>
        <definition>const std::vector&lt; std::pair&lt; Real, Real &gt; &gt; &amp; QuantLib::GeneralStatistics::data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <qualifiedname>QuantLib::GeneralStatistics::data</qualifiedname>
        <briefdescription>
<para>collected data </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/generalstatistics.hpp" line="56" column="27" bodyfile="ql/math/statistics/generalstatistics.hpp" bodystart="207" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_general_statistics_1a97362e20060b66c6c2626c07e6e85bd2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::GeneralStatistics::weightSum</definition>
        <argsstring>() const</argsstring>
        <name>weightSum</name>
        <qualifiedname>QuantLib::GeneralStatistics::weightSum</qualifiedname>
        <briefdescription>
<para>sum of data weights </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/generalstatistics.hpp" line="59" column="14" bodyfile="ql/math/statistics/generalstatistics.cpp" bodystart="25" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_general_statistics_1a70d7184c1cb64d61754337fc0569854b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::GeneralStatistics::mean</definition>
        <argsstring>() const</argsstring>
        <name>mean</name>
        <qualifiedname>QuantLib::GeneralStatistics::mean</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the mean, defined as <formula id="352">\[ \langle x \rangle = \frac{\sum w_i x_i}{\sum w_i}. \]</formula> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/generalstatistics.hpp" line="64" column="14" bodyfile="ql/math/statistics/generalstatistics.cpp" bodystart="34" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_general_statistics_1aa0728a85907d4ccf7f4c144928c1b299" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::GeneralStatistics::variance</definition>
        <argsstring>() const</argsstring>
        <name>variance</name>
        <qualifiedname>QuantLib::GeneralStatistics::variance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the variance, defined as  <formula id="353">\[ \sigma^2 = \frac{N}{N-1} \left\langle \left(
    x-\langle x \rangle \right)^2 \right\rangle. \]</formula> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/generalstatistics.hpp" line="70" column="14" bodyfile="ql/math/statistics/generalstatistics.cpp" bodystart="40" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_general_statistics_1a7e7f848af91aa08736661abf623ab587" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::GeneralStatistics::standardDeviation</definition>
        <argsstring>() const</argsstring>
        <name>standardDeviation</name>
        <qualifiedname>QuantLib::GeneralStatistics::standardDeviation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the standard deviation <formula id="354">$ \sigma $</formula>, defined as the square root of the variance. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/generalstatistics.hpp" line="75" column="14" bodyfile="ql/math/statistics/generalstatistics.hpp" bodystart="211" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_general_statistics_1a801948420d08c2fec533460b14225ea6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::GeneralStatistics::errorEstimate</definition>
        <argsstring>() const</argsstring>
        <name>errorEstimate</name>
        <qualifiedname>QuantLib::GeneralStatistics::errorEstimate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the error estimate on the mean value, defined as <formula id="355">$ \epsilon = \sigma/\sqrt{N}. $</formula> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/generalstatistics.hpp" line="80" column="14" bodyfile="ql/math/statistics/generalstatistics.hpp" bodystart="215" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_general_statistics_1ae80b292f5da5208dc564e7e27a5b6272" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::GeneralStatistics::skewness</definition>
        <argsstring>() const</argsstring>
        <name>skewness</name>
        <qualifiedname>QuantLib::GeneralStatistics::skewness</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the skewness, defined as  <formula id="356">\[ \frac{N^2}{(N-1)(N-2)} \frac{\left\langle \left(
    x-\langle x \rangle \right)^3 \right\rangle}{\sigma^3}. \]</formula> The above evaluates to 0 for a Gaussian distribution. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/generalstatistics.hpp" line="87" column="14" bodyfile="ql/math/statistics/generalstatistics.cpp" bodystart="54" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_general_statistics_1a576c7dacbcabbb6a15b81510eab2000f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::GeneralStatistics::kurtosis</definition>
        <argsstring>() const</argsstring>
        <name>kurtosis</name>
        <qualifiedname>QuantLib::GeneralStatistics::kurtosis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the excess kurtosis, defined as   <formula id="357">\[ \frac{N^2(N+1)}{(N-1)(N-2)(N-3)}
    \frac{\left\langle \left(x-\langle x \rangle \right)^4
    \right\rangle}{\sigma^4} - \frac{3(N-1)^2}{(N-2)(N-3)}. \]</formula> The above evaluates to 0 for a Gaussian distribution. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/generalstatistics.hpp" line="95" column="14" bodyfile="ql/math/statistics/generalstatistics.cpp" bodystart="69" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_general_statistics_1ab7fc5ffecf99743442e8cf948a48a93e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::GeneralStatistics::min</definition>
        <argsstring>() const</argsstring>
        <name>min</name>
        <qualifiedname>QuantLib::GeneralStatistics::min</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the minimum sample value </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/generalstatistics.hpp" line="98" column="14" bodyfile="ql/math/statistics/generalstatistics.hpp" bodystart="219" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_general_statistics_1a141bf86b899e27c4ce694eb7e8863d07" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::GeneralStatistics::max</definition>
        <argsstring>() const</argsstring>
        <name>max</name>
        <qualifiedname>QuantLib::GeneralStatistics::max</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the maximum sample value </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/generalstatistics.hpp" line="101" column="14" bodyfile="ql/math/statistics/generalstatistics.hpp" bodystart="225" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_general_statistics_1ad347995de3d1fb75c897448158651e42" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Func</type>
          </param>
          <param>
            <type>class Predicate</type>
          </param>
        </templateparamlist>
        <type>std::pair&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>, <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &gt;</type>
        <definition>std::pair&lt; Real, Size &gt; QuantLib::GeneralStatistics::expectationValue</definition>
        <argsstring>(const Func &amp;f, const Predicate &amp;inRange) const</argsstring>
        <name>expectationValue</name>
        <qualifiedname>QuantLib::GeneralStatistics::expectationValue</qualifiedname>
        <param>
          <type>const Func &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const Predicate &amp;</type>
          <declname>inRange</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Expectation value of a function <formula id="82">$ f $</formula> on a given range <formula id="358">$ \mathcal{R} $</formula>, i.e.,   <formula id="359">\[ \mathrm{E}\left[f \;|\; \mathcal{R}\right] =
    \frac{\sum_{x_i \in \mathcal{R}} f(x_i) w_i}{
          \sum_{x_i \in \mathcal{R}} w_i}. \]</formula> The range is passed as a boolean function returning <computeroutput>true</computeroutput> if the argument belongs to the range or <computeroutput>false</computeroutput> otherwise.</para>
<para>The function returns a pair made of the result and the number of observations in the given range. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/generalstatistics.hpp" line="116" column="19" bodyfile="ql/math/statistics/generalstatistics.hpp" bodystart="116" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_general_statistics_1a45fb782b7f61571ad36401a4a3e69881" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Func</type>
          </param>
        </templateparamlist>
        <type>std::pair&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>, <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &gt;</type>
        <definition>std::pair&lt; Real, Size &gt; QuantLib::GeneralStatistics::expectationValue</definition>
        <argsstring>(const Func &amp;f) const</argsstring>
        <name>expectationValue</name>
        <qualifiedname>QuantLib::GeneralStatistics::expectationValue</qualifiedname>
        <param>
          <type>const Func &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Expectation value of a function <formula id="82">$ f $</formula> over the whole set of samples; equivalent to passing the other overload a range function always returning <computeroutput>true</computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/generalstatistics.hpp" line="140" column="19" bodyfile="ql/math/statistics/generalstatistics.hpp" bodystart="140" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_general_statistics_1a069b42c83c49f356eea43a166c68557c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::GeneralStatistics::percentile</definition>
        <argsstring>(Real y) const</argsstring>
        <name>percentile</name>
        <qualifiedname>QuantLib::GeneralStatistics::percentile</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><formula id="20">$ y $</formula>-th percentile, defined as the value <formula id="360">$ \bar{x} $</formula> such that  <formula id="361">\[ y = \frac{\sum_{x_i &lt; \bar{x}} w_i}{
              \sum_i w_i} \]</formula></para>
<para><simplesect kind="pre"><para><formula id="20">$ y $</formula> must be in the range <formula id="362">$ (0-1]. $</formula> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/generalstatistics.hpp" line="151" column="14" bodyfile="ql/math/statistics/generalstatistics.cpp" bodystart="88" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_general_statistics_1ae0283d237187baa9ccf19001c5bd4de6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::GeneralStatistics::topPercentile</definition>
        <argsstring>(Real y) const</argsstring>
        <name>topPercentile</name>
        <qualifiedname>QuantLib::GeneralStatistics::topPercentile</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><formula id="20">$ y $</formula>-th top percentile, defined as the value <formula id="360">$ \bar{x} $</formula> such that  <formula id="363">\[ y = \frac{\sum_{x_i &gt; \bar{x}} w_i}{
              \sum_i w_i} \]</formula></para>
<para><simplesect kind="pre"><para><formula id="20">$ y $</formula> must be in the range <formula id="362">$ (0-1]. $</formula> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/generalstatistics.hpp" line="160" column="14" bodyfile="ql/math/statistics/generalstatistics.cpp" bodystart="112" bodyend="134"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_quant_lib_1_1_general_statistics_1a9cfab8f9d6dc763face39d4b140681c1" prot="public" static="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>typedef Real QuantLib::GeneralStatistics::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>QuantLib::GeneralStatistics::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/generalstatistics.hpp" line="48" column="22" bodyfile="ql/math/statistics/generalstatistics.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_general_statistics_1a19132ea5de695430bf73bd5dcf7a34fb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::GeneralStatistics::GeneralStatistics</definition>
        <argsstring>()</argsstring>
        <name>GeneralStatistics</name>
        <qualifiedname>QuantLib::GeneralStatistics::GeneralStatistics</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/generalstatistics.hpp" line="49" column="9" bodyfile="ql/math/statistics/generalstatistics.hpp" bodystart="198" bodyend="200"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para><ref refid="namespace_quant_lib_1ae2e788da35d2b866040a03b96227ee6e" kindref="member">Statistics</ref> tool. </para>
    </briefdescription>
    <detaileddescription>
<para>This class accumulates a set of data and returns their statistics (e.g: mean, variance, skewness, kurtosis, error estimation, percentile, etc.) based on the empirical distribution (no gaussian assumption)</para>
<para>It doesn&apos;t suffer the numerical instability problem of <ref refid="class_quant_lib_1_1_incremental_statistics" kindref="compound">IncrementalStatistics</ref>. The downside is that it stores all samples, thus increasing the memory requirements. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::GeneralStatistics</label>
        <link refid="class_quant_lib_1_1_general_statistics"/>
      </node>
      <node id="2">
        <label>QuantLib::GenericGaussianStatistics&lt; GeneralStatistics &gt;</label>
        <link refid="class_quant_lib_1_1_generic_gaussian_statistics"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::GenericRiskStatistics&lt; GaussianStatistics &gt;</label>
        <link refid="class_quant_lib_1_1_generic_risk_statistics"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="ql/math/statistics/generalstatistics.hpp" line="46" column="5" bodyfile="ql/math/statistics/generalstatistics.hpp" bodystart="46" bodyend="193"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_general_statistics_1ad3a191db3b8499fe3ca40b2767566c37" prot="public" virt="non-virtual"><scope>QuantLib::GeneralStatistics</scope><name>add</name></member>
      <member refid="class_quant_lib_1_1_general_statistics_1a53c28bde7870633108e7384152052705" prot="public" virt="non-virtual"><scope>QuantLib::GeneralStatistics</scope><name>addSequence</name></member>
      <member refid="class_quant_lib_1_1_general_statistics_1a5806e20a12af06926ccd9e9faec4b01b" prot="public" virt="non-virtual"><scope>QuantLib::GeneralStatistics</scope><name>addSequence</name></member>
      <member refid="class_quant_lib_1_1_general_statistics_1a223a1199f97dd1226cc07255ad015670" prot="public" virt="non-virtual"><scope>QuantLib::GeneralStatistics</scope><name>data</name></member>
      <member refid="class_quant_lib_1_1_general_statistics_1a801948420d08c2fec533460b14225ea6" prot="public" virt="non-virtual"><scope>QuantLib::GeneralStatistics</scope><name>errorEstimate</name></member>
      <member refid="class_quant_lib_1_1_general_statistics_1ad347995de3d1fb75c897448158651e42" prot="public" virt="non-virtual"><scope>QuantLib::GeneralStatistics</scope><name>expectationValue</name></member>
      <member refid="class_quant_lib_1_1_general_statistics_1a45fb782b7f61571ad36401a4a3e69881" prot="public" virt="non-virtual"><scope>QuantLib::GeneralStatistics</scope><name>expectationValue</name></member>
      <member refid="class_quant_lib_1_1_general_statistics_1a19132ea5de695430bf73bd5dcf7a34fb" prot="public" virt="non-virtual"><scope>QuantLib::GeneralStatistics</scope><name>GeneralStatistics</name></member>
      <member refid="class_quant_lib_1_1_general_statistics_1a576c7dacbcabbb6a15b81510eab2000f" prot="public" virt="non-virtual"><scope>QuantLib::GeneralStatistics</scope><name>kurtosis</name></member>
      <member refid="class_quant_lib_1_1_general_statistics_1a141bf86b899e27c4ce694eb7e8863d07" prot="public" virt="non-virtual"><scope>QuantLib::GeneralStatistics</scope><name>max</name></member>
      <member refid="class_quant_lib_1_1_general_statistics_1a70d7184c1cb64d61754337fc0569854b" prot="public" virt="non-virtual"><scope>QuantLib::GeneralStatistics</scope><name>mean</name></member>
      <member refid="class_quant_lib_1_1_general_statistics_1ab7fc5ffecf99743442e8cf948a48a93e" prot="public" virt="non-virtual"><scope>QuantLib::GeneralStatistics</scope><name>min</name></member>
      <member refid="class_quant_lib_1_1_general_statistics_1a069b42c83c49f356eea43a166c68557c" prot="public" virt="non-virtual"><scope>QuantLib::GeneralStatistics</scope><name>percentile</name></member>
      <member refid="class_quant_lib_1_1_general_statistics_1a141648cfe046b00aa03f609c5e060d29" prot="public" virt="non-virtual"><scope>QuantLib::GeneralStatistics</scope><name>reserve</name></member>
      <member refid="class_quant_lib_1_1_general_statistics_1a3e240328f09a7420ca357bd6ccad6ef3" prot="public" virt="non-virtual"><scope>QuantLib::GeneralStatistics</scope><name>reset</name></member>
      <member refid="class_quant_lib_1_1_general_statistics_1afa1962d0bad6df2d31f6593da2a665c0" prot="public" virt="non-virtual"><scope>QuantLib::GeneralStatistics</scope><name>samples</name></member>
      <member refid="class_quant_lib_1_1_general_statistics_1a83451c61e1bc67b8090a242e75dd0e61" prot="private" virt="non-virtual"><scope>QuantLib::GeneralStatistics</scope><name>samples_</name></member>
      <member refid="class_quant_lib_1_1_general_statistics_1ae80b292f5da5208dc564e7e27a5b6272" prot="public" virt="non-virtual"><scope>QuantLib::GeneralStatistics</scope><name>skewness</name></member>
      <member refid="class_quant_lib_1_1_general_statistics_1a79f8a75458ea0533780a40c97abf543c" prot="public" virt="non-virtual"><scope>QuantLib::GeneralStatistics</scope><name>sort</name></member>
      <member refid="class_quant_lib_1_1_general_statistics_1a27f5cdb9e60ccdc4bcb7e8ceef768e9a" prot="private" virt="non-virtual"><scope>QuantLib::GeneralStatistics</scope><name>sorted_</name></member>
      <member refid="class_quant_lib_1_1_general_statistics_1a7e7f848af91aa08736661abf623ab587" prot="public" virt="non-virtual"><scope>QuantLib::GeneralStatistics</scope><name>standardDeviation</name></member>
      <member refid="class_quant_lib_1_1_general_statistics_1ae0283d237187baa9ccf19001c5bd4de6" prot="public" virt="non-virtual"><scope>QuantLib::GeneralStatistics</scope><name>topPercentile</name></member>
      <member refid="class_quant_lib_1_1_general_statistics_1a9cfab8f9d6dc763face39d4b140681c1" prot="public" virt="non-virtual"><scope>QuantLib::GeneralStatistics</scope><name>value_type</name></member>
      <member refid="class_quant_lib_1_1_general_statistics_1aa0728a85907d4ccf7f4c144928c1b299" prot="public" virt="non-virtual"><scope>QuantLib::GeneralStatistics</scope><name>variance</name></member>
      <member refid="class_quant_lib_1_1_general_statistics_1a97362e20060b66c6c2626c07e6e85bd2" prot="public" virt="non-virtual"><scope>QuantLib::GeneralStatistics</scope><name>weightSum</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_cap_floor_1_1arguments" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::CapFloor::arguments</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_pricing_engine_1_1arguments" prot="public" virt="virtual">QuantLib::PricingEngine::arguments</basecompoundref>
    <includes refid="capfloor_8hpp" local="no">capfloor.hpp</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_cap_floor_1_1arguments_1a2d5a780c2787f0706673ef307168a8d0" prot="public" static="no" mutable="no">
        <type>CapFloor::Type</type>
        <definition>CapFloor::Type QuantLib::CapFloor::arguments::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <qualifiedname>QuantLib::CapFloor::arguments::type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/capfloor.hpp" line="141" column="24" bodyfile="ql/instruments/capfloor.hpp" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cap_floor_1_1arguments_1af4e7d17c28fccff9bf30eec05f916827" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &gt;</type>
        <definition>std::vector&lt;Date&gt; QuantLib::CapFloor::arguments::startDates</definition>
        <argsstring></argsstring>
        <name>startDates</name>
        <qualifiedname>QuantLib::CapFloor::arguments::startDates</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/capfloor.hpp" line="142" column="21" bodyfile="ql/instruments/capfloor.hpp" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cap_floor_1_1arguments_1a3d75816bbc8c743b02b1f75bb65336ef" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &gt;</type>
        <definition>std::vector&lt;Date&gt; QuantLib::CapFloor::arguments::fixingDates</definition>
        <argsstring></argsstring>
        <name>fixingDates</name>
        <qualifiedname>QuantLib::CapFloor::arguments::fixingDates</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/capfloor.hpp" line="143" column="21" bodyfile="ql/instruments/capfloor.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cap_floor_1_1arguments_1aca75e7199150b723dac0cd896556b7d0" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &gt;</type>
        <definition>std::vector&lt;Date&gt; QuantLib::CapFloor::arguments::endDates</definition>
        <argsstring></argsstring>
        <name>endDates</name>
        <qualifiedname>QuantLib::CapFloor::arguments::endDates</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/capfloor.hpp" line="144" column="21" bodyfile="ql/instruments/capfloor.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cap_floor_1_1arguments_1ab3da8658fc15a822a6efa22f0a73ee8e" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;</type>
        <definition>std::vector&lt;Time&gt; QuantLib::CapFloor::arguments::accrualTimes</definition>
        <argsstring></argsstring>
        <name>accrualTimes</name>
        <qualifiedname>QuantLib::CapFloor::arguments::accrualTimes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/capfloor.hpp" line="145" column="21" bodyfile="ql/instruments/capfloor.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cap_floor_1_1arguments_1a4311cae6427f47868a5507dc6fafeb51" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>std::vector&lt;Rate&gt; QuantLib::CapFloor::arguments::capRates</definition>
        <argsstring></argsstring>
        <name>capRates</name>
        <qualifiedname>QuantLib::CapFloor::arguments::capRates</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/capfloor.hpp" line="146" column="21" bodyfile="ql/instruments/capfloor.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cap_floor_1_1arguments_1af28173ee0de4149836c8af113e9f7a33" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>std::vector&lt;Rate&gt; QuantLib::CapFloor::arguments::floorRates</definition>
        <argsstring></argsstring>
        <name>floorRates</name>
        <qualifiedname>QuantLib::CapFloor::arguments::floorRates</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/capfloor.hpp" line="147" column="21" bodyfile="ql/instruments/capfloor.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cap_floor_1_1arguments_1ab960b557e031986012339d0adc2ac8df" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>std::vector&lt;Rate&gt; QuantLib::CapFloor::arguments::forwards</definition>
        <argsstring></argsstring>
        <name>forwards</name>
        <qualifiedname>QuantLib::CapFloor::arguments::forwards</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/capfloor.hpp" line="148" column="21" bodyfile="ql/instruments/capfloor.hpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cap_floor_1_1arguments_1a8e24df2092f0b633b94b9ba0b7a1f7fe" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::CapFloor::arguments::gearings</definition>
        <argsstring></argsstring>
        <name>gearings</name>
        <qualifiedname>QuantLib::CapFloor::arguments::gearings</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/capfloor.hpp" line="149" column="21" bodyfile="ql/instruments/capfloor.hpp" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cap_floor_1_1arguments_1a74ce6548b1937425d24d0a9d099fa0c7" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::CapFloor::arguments::spreads</definition>
        <argsstring></argsstring>
        <name>spreads</name>
        <qualifiedname>QuantLib::CapFloor::arguments::spreads</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/capfloor.hpp" line="150" column="21" bodyfile="ql/instruments/capfloor.hpp" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cap_floor_1_1arguments_1ab2de098db281801cd877eb9baaae3a97" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::CapFloor::arguments::nominals</definition>
        <argsstring></argsstring>
        <name>nominals</name>
        <qualifiedname>QuantLib::CapFloor::arguments::nominals</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/capfloor.hpp" line="151" column="21" bodyfile="ql/instruments/capfloor.hpp" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cap_floor_1_1arguments_1aeced186c358e529b6a648b4d8734412d" prot="public" static="no" mutable="no">
        <type>std::vector&lt; ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_interest_rate_index" kindref="compound">InterestRateIndex</ref> &gt; &gt;</type>
        <definition>std::vector&lt;ext::shared_ptr&lt;InterestRateIndex&gt; &gt; QuantLib::CapFloor::arguments::indexes</definition>
        <argsstring></argsstring>
        <name>indexes</name>
        <qualifiedname>QuantLib::CapFloor::arguments::indexes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/capfloor.hpp" line="152" column="21" bodyfile="ql/instruments/capfloor.hpp" bodystart="152" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_cap_floor_1_1arguments_1adfd2e05c1328154087c9319f96e5d7a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::CapFloor::arguments::arguments</definition>
        <argsstring>()</argsstring>
        <name>arguments</name>
        <qualifiedname>QuantLib::CapFloor::arguments::arguments</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/capfloor.hpp" line="140" column="9" bodyfile="ql/instruments/capfloor.hpp" bodystart="140" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_cap_floor_1_1arguments_1af718d9199f6eb7fbbecf86936e5b892e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::CapFloor::arguments::validate</definition>
        <argsstring>() const override</argsstring>
        <name>validate</name>
        <qualifiedname>QuantLib::CapFloor::arguments::validate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_pricing_engine_1_1arguments_1a05cffe9e5684035a7d93a1879dcd6604">validate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/capfloor.hpp" line="153" column="14" bodyfile="ql/instruments/capfloor.cpp" bodystart="278" bodyend="313"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Arguments for cap/floor calculation </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::CapFloor::arguments</label>
        <link refid="class_quant_lib_1_1_cap_floor_1_1arguments"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::PricingEngine::arguments</label>
        <link refid="class_quant_lib_1_1_pricing_engine_1_1arguments"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::CapFloor::arguments</label>
        <link refid="class_quant_lib_1_1_cap_floor_1_1arguments"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::PricingEngine::arguments</label>
        <link refid="class_quant_lib_1_1_pricing_engine_1_1arguments"/>
      </node>
    </collaborationgraph>
    <location file="ql/instruments/capfloor.hpp" line="138" column="5" bodyfile="ql/instruments/capfloor.hpp" bodystart="138" bodyend="154"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_cap_floor_1_1arguments_1ab3da8658fc15a822a6efa22f0a73ee8e" prot="public" virt="non-virtual"><scope>QuantLib::CapFloor::arguments</scope><name>accrualTimes</name></member>
      <member refid="class_quant_lib_1_1_cap_floor_1_1arguments_1adfd2e05c1328154087c9319f96e5d7a3" prot="public" virt="non-virtual"><scope>QuantLib::CapFloor::arguments</scope><name>arguments</name></member>
      <member refid="class_quant_lib_1_1_cap_floor_1_1arguments_1a4311cae6427f47868a5507dc6fafeb51" prot="public" virt="non-virtual"><scope>QuantLib::CapFloor::arguments</scope><name>capRates</name></member>
      <member refid="class_quant_lib_1_1_cap_floor_1_1arguments_1aca75e7199150b723dac0cd896556b7d0" prot="public" virt="non-virtual"><scope>QuantLib::CapFloor::arguments</scope><name>endDates</name></member>
      <member refid="class_quant_lib_1_1_cap_floor_1_1arguments_1a3d75816bbc8c743b02b1f75bb65336ef" prot="public" virt="non-virtual"><scope>QuantLib::CapFloor::arguments</scope><name>fixingDates</name></member>
      <member refid="class_quant_lib_1_1_cap_floor_1_1arguments_1af28173ee0de4149836c8af113e9f7a33" prot="public" virt="non-virtual"><scope>QuantLib::CapFloor::arguments</scope><name>floorRates</name></member>
      <member refid="class_quant_lib_1_1_cap_floor_1_1arguments_1ab960b557e031986012339d0adc2ac8df" prot="public" virt="non-virtual"><scope>QuantLib::CapFloor::arguments</scope><name>forwards</name></member>
      <member refid="class_quant_lib_1_1_cap_floor_1_1arguments_1a8e24df2092f0b633b94b9ba0b7a1f7fe" prot="public" virt="non-virtual"><scope>QuantLib::CapFloor::arguments</scope><name>gearings</name></member>
      <member refid="class_quant_lib_1_1_cap_floor_1_1arguments_1aeced186c358e529b6a648b4d8734412d" prot="public" virt="non-virtual"><scope>QuantLib::CapFloor::arguments</scope><name>indexes</name></member>
      <member refid="class_quant_lib_1_1_cap_floor_1_1arguments_1ab2de098db281801cd877eb9baaae3a97" prot="public" virt="non-virtual"><scope>QuantLib::CapFloor::arguments</scope><name>nominals</name></member>
      <member refid="class_quant_lib_1_1_cap_floor_1_1arguments_1a74ce6548b1937425d24d0a9d099fa0c7" prot="public" virt="non-virtual"><scope>QuantLib::CapFloor::arguments</scope><name>spreads</name></member>
      <member refid="class_quant_lib_1_1_cap_floor_1_1arguments_1af4e7d17c28fccff9bf30eec05f916827" prot="public" virt="non-virtual"><scope>QuantLib::CapFloor::arguments</scope><name>startDates</name></member>
      <member refid="class_quant_lib_1_1_cap_floor_1_1arguments_1a2d5a780c2787f0706673ef307168a8d0" prot="public" virt="non-virtual"><scope>QuantLib::CapFloor::arguments</scope><name>type</name></member>
      <member refid="class_quant_lib_1_1_cap_floor_1_1arguments_1af718d9199f6eb7fbbecf86936e5b892e" prot="public" virt="virtual"><scope>QuantLib::CapFloor::arguments</scope><name>validate</name></member>
      <member refid="class_quant_lib_1_1_pricing_engine_1_1arguments_1abb253d928cd75bb40b3b983d477da0dc" prot="public" virt="virtual"><scope>QuantLib::CapFloor::arguments</scope><name>~arguments</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_volatility_cube" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::VolatilityCube</compoundname>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_volatility_cube_1a766abc2dd263128e5238d84ab05e13c9" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_interest_rate_vol_surface" kindref="compound">InterestRateVolSurface</ref> &gt; &gt;</type>
        <definition>std::vector&lt;Handle&lt;InterestRateVolSurface&gt; &gt; QuantLib::VolatilityCube::surfaces_</definition>
        <argsstring></argsstring>
        <name>surfaces_</name>
        <qualifiedname>QuantLib::VolatilityCube::surfaces_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/volcube.hpp" line="47" column="21" bodyfile="ql/experimental/volatility/volcube.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_volatility_cube_1ab19014594b797355230d5df2157341f7" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_abcd_atm_vol_curve" kindref="compound">AbcdAtmVolCurve</ref> &gt; &gt;</type>
        <definition>std::vector&lt;Handle&lt;AbcdAtmVolCurve&gt; &gt; QuantLib::VolatilityCube::curves_</definition>
        <argsstring></argsstring>
        <name>curves_</name>
        <qualifiedname>QuantLib::VolatilityCube::curves_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/volcube.hpp" line="48" column="21" bodyfile="ql/experimental/volatility/volcube.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_volatility_cube_1ae91b91afeec4c3790c93119aef64bb91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::VolatilityCube::VolatilityCube</definition>
        <argsstring>(std::vector&lt; Handle&lt; InterestRateVolSurface &gt; &gt;, std::vector&lt; Handle&lt; AbcdAtmVolCurve &gt; &gt;)</argsstring>
        <name>VolatilityCube</name>
        <qualifiedname>QuantLib::VolatilityCube::VolatilityCube</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_interest_rate_vol_surface" kindref="compound">InterestRateVolSurface</ref> &gt; &gt;</type>
          <defname>surfaces</defname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_abcd_atm_vol_curve" kindref="compound">AbcdAtmVolCurve</ref> &gt; &gt;</type>
          <defname>curves</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/volcube.hpp" line="40" column="9" bodyfile="ql/experimental/volatility/volcube.cpp" bodystart="27" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_volatility_cube_1a260029dd3ab4245eb1eb65211bc90f34" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
        <definition>const Period &amp; QuantLib::VolatilityCube::minIndexTenor</definition>
        <argsstring>() const</argsstring>
        <name>minIndexTenor</name>
        <qualifiedname>QuantLib::VolatilityCube::minIndexTenor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/volcube.hpp" line="42" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_volatility_cube_1a4a35036f4802f22c07ec60ef37be491a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
        <definition>const Period &amp; QuantLib::VolatilityCube::maxIndexTenor</definition>
        <argsstring>() const</argsstring>
        <name>maxIndexTenor</name>
        <qualifiedname>QuantLib::VolatilityCube::maxIndexTenor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/volcube.hpp" line="43" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_volatility_cube_1a556149ddfd53429bddedd380287c6778" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_interest_rate_vol_surface" kindref="compound">InterestRateVolSurface</ref> &gt; &gt; &amp;</type>
        <definition>const std::vector&lt; Handle&lt; InterestRateVolSurface &gt; &gt; &amp; QuantLib::VolatilityCube::surfaces</definition>
        <argsstring>() const</argsstring>
        <name>surfaces</name>
        <qualifiedname>QuantLib::VolatilityCube::surfaces</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/volcube.hpp" line="44" column="27" bodyfile="ql/experimental/volatility/volcube.hpp" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_volatility_cube_1ab89b6d4c020e41f2e3e7124b27b05a35" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_abcd_atm_vol_curve" kindref="compound">AbcdAtmVolCurve</ref> &gt; &gt; &amp;</type>
        <definition>const std::vector&lt; Handle&lt; AbcdAtmVolCurve &gt; &gt; &amp; QuantLib::VolatilityCube::curves</definition>
        <argsstring>() const</argsstring>
        <name>curves</name>
        <qualifiedname>QuantLib::VolatilityCube::curves</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/volcube.hpp" line="45" column="27" bodyfile="ql/experimental/volatility/volcube.hpp" bodystart="59" bodyend="61"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/experimental/volatility/volcube.hpp" line="38" column="5" bodyfile="ql/experimental/volatility/volcube.hpp" bodystart="38" bodyend="49"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_volatility_cube_1ab89b6d4c020e41f2e3e7124b27b05a35" prot="public" virt="non-virtual"><scope>QuantLib::VolatilityCube</scope><name>curves</name></member>
      <member refid="class_quant_lib_1_1_volatility_cube_1ab19014594b797355230d5df2157341f7" prot="protected" virt="non-virtual"><scope>QuantLib::VolatilityCube</scope><name>curves_</name></member>
      <member refid="class_quant_lib_1_1_volatility_cube_1a4a35036f4802f22c07ec60ef37be491a" prot="public" virt="non-virtual"><scope>QuantLib::VolatilityCube</scope><name>maxIndexTenor</name></member>
      <member refid="class_quant_lib_1_1_volatility_cube_1a260029dd3ab4245eb1eb65211bc90f34" prot="public" virt="non-virtual"><scope>QuantLib::VolatilityCube</scope><name>minIndexTenor</name></member>
      <member refid="class_quant_lib_1_1_volatility_cube_1a556149ddfd53429bddedd380287c6778" prot="public" virt="non-virtual"><scope>QuantLib::VolatilityCube</scope><name>surfaces</name></member>
      <member refid="class_quant_lib_1_1_volatility_cube_1a766abc2dd263128e5238d84ab05e13c9" prot="protected" virt="non-virtual"><scope>QuantLib::VolatilityCube</scope><name>surfaces_</name></member>
      <member refid="class_quant_lib_1_1_volatility_cube_1ae91b91afeec4c3790c93119aef64bb91" prot="public" virt="non-virtual"><scope>QuantLib::VolatilityCube</scope><name>VolatilityCube</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_cms_market_calibration" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::CmsMarketCalibration</compoundname>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_quant_lib_1_1_cms_market_calibration_1a79444392d30d8bfd0c3c0e143b6b9c06" prot="public" static="no" strong="no">
        <type></type>
        <name>CalibrationType</name>
        <qualifiedname>QuantLib::CmsMarketCalibration::CalibrationType</qualifiedname>
        <enumvalue id="class_quant_lib_1_1_cms_market_calibration_1a79444392d30d8bfd0c3c0e143b6b9c06a13dc108a5bc4fc728ae829970e308559" prot="public">
          <name>OnSpread</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_cms_market_calibration_1a79444392d30d8bfd0c3c0e143b6b9c06a8c57393cd58529535ecc616717d4c425" prot="public">
          <name>OnPrice</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_cms_market_calibration_1a79444392d30d8bfd0c3c0e143b6b9c06af0e6a1c8406369432b368a3ae8f338f3" prot="public">
          <name>OnForwardCmsPrice</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" line="41" column="9" bodyfile="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" bodystart="41" bodyend="41"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_cms_market_calibration_1a4501f56fef16cd6a0527a7c9e4b8ed8e" prot="public" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_swaption_volatility_structure" kindref="compound">SwaptionVolatilityStructure</ref> &gt;</type>
        <definition>Handle&lt;SwaptionVolatilityStructure&gt; QuantLib::CmsMarketCalibration::volCube_</definition>
        <argsstring></argsstring>
        <name>volCube_</name>
        <qualifiedname>QuantLib::CmsMarketCalibration::volCube_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" line="49" column="16" bodyfile="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cms_market_calibration_1a8a76c54b93770dc05cf2ca82c6feafb8" prot="public" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_cms_market" kindref="compound">CmsMarket</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;CmsMarket&gt; QuantLib::CmsMarketCalibration::cmsMarket_</definition>
        <argsstring></argsstring>
        <name>cmsMarket_</name>
        <qualifiedname>QuantLib::CmsMarketCalibration::cmsMarket_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" line="50" column="25" bodyfile="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cms_market_calibration_1a6f0f23c8365641f7fe4d79fc17ea4eda" prot="public" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::CmsMarketCalibration::weights_</definition>
        <argsstring></argsstring>
        <name>weights_</name>
        <qualifiedname>QuantLib::CmsMarketCalibration::weights_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" line="51" column="16" bodyfile="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cms_market_calibration_1ac3bc85ad7cf9b196d626ae21fa98fedf" prot="public" static="no" mutable="no">
        <type>CalibrationType</type>
        <definition>CalibrationType QuantLib::CmsMarketCalibration::calibrationType_</definition>
        <argsstring></argsstring>
        <name>calibrationType_</name>
        <qualifiedname>QuantLib::CmsMarketCalibration::calibrationType_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" line="52" column="25" bodyfile="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cms_market_calibration_1af8d14ab2c2a3b8613de5cb9871e19ba1" prot="public" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::CmsMarketCalibration::sparseSabrParameters_</definition>
        <argsstring></argsstring>
        <name>sparseSabrParameters_</name>
        <qualifiedname>QuantLib::CmsMarketCalibration::sparseSabrParameters_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" line="53" column="16" bodyfile="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cms_market_calibration_1af063920ee371d4f77be585401f3e2a39" prot="public" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::CmsMarketCalibration::denseSabrParameters_</definition>
        <argsstring></argsstring>
        <name>denseSabrParameters_</name>
        <qualifiedname>QuantLib::CmsMarketCalibration::denseSabrParameters_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" line="53" column="38" bodyfile="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cms_market_calibration_1af52d8af22106965e5d420a41d2329b3c" prot="public" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::CmsMarketCalibration::browseCmsMarket_</definition>
        <argsstring></argsstring>
        <name>browseCmsMarket_</name>
        <qualifiedname>QuantLib::CmsMarketCalibration::browseCmsMarket_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" line="53" column="59" bodyfile="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_cms_market_calibration_1aa8b99ffe1c7d2c45609c5f2f63a5b4f2" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CmsMarketCalibration::error_</definition>
        <argsstring></argsstring>
        <name>error_</name>
        <qualifiedname>QuantLib::CmsMarketCalibration::error_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" line="92" column="14" bodyfile="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cms_market_calibration_1acbf2e3b5e0ae87d14cb4a61a3457505f" prot="private" static="no" mutable="no">
        <type>EndCriteria::Type</type>
        <definition>EndCriteria::Type QuantLib::CmsMarketCalibration::endCriteria_</definition>
        <argsstring></argsstring>
        <name>endCriteria_</name>
        <qualifiedname>QuantLib::CmsMarketCalibration::endCriteria_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" line="93" column="27" bodyfile="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_cms_market_calibration_1a7230d64b8950759aaa05b3cf3ebb8927" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::CmsMarketCalibration::CmsMarketCalibration</definition>
        <argsstring>(Handle&lt; SwaptionVolatilityStructure &gt; &amp;volCube, ext::shared_ptr&lt; CmsMarket &gt; &amp;cmsMarket, const Matrix &amp;weights, CalibrationType calibrationType)</argsstring>
        <name>CmsMarketCalibration</name>
        <qualifiedname>QuantLib::CmsMarketCalibration::CmsMarketCalibration</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_swaption_volatility_structure" kindref="compound">SwaptionVolatilityStructure</ref> &gt; &amp;</type>
          <declname>volCube</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_cms_market" kindref="compound">CmsMarket</ref> &gt; &amp;</type>
          <declname>cmsMarket</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>CalibrationType</type>
          <declname>calibrationType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" line="43" column="9" bodyfile="ql/termstructures/volatility/swaption/cmsmarketcalibration.cpp" bodystart="312" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_cms_market_calibration_1abd01d205ac8fe87bdaf0c888ddea2210" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::CmsMarketCalibration::compute</definition>
        <argsstring>(const ext::shared_ptr&lt; EndCriteria &gt; &amp;endCriteria, const ext::shared_ptr&lt; OptimizationMethod &gt; &amp;method, const Array &amp;guess, bool isMeanReversionFixed)</argsstring>
        <name>compute</name>
        <qualifiedname>QuantLib::CmsMarketCalibration::compute</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_end_criteria" kindref="compound">EndCriteria</ref> &gt; &amp;</type>
          <declname>endCriteria</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_optimization_method" kindref="compound">OptimizationMethod</ref> &gt; &amp;</type>
          <declname>method</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>guess</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isMeanReversionFixed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" line="55" column="15" bodyfile="ql/termstructures/volatility/swaption/cmsmarketcalibration.cpp" bodystart="331" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_cms_market_calibration_1af858ece98a4e88771ef4661a5904843e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::CmsMarketCalibration::compute</definition>
        <argsstring>(const ext::shared_ptr&lt; EndCriteria &gt; &amp;endCriteria, const ext::shared_ptr&lt; OptimizationMethod &gt; &amp;method, const Matrix &amp;guess, bool isMeanReversionFixed, Real meanReversionGuess=Null&lt; Real &gt;())</argsstring>
        <name>compute</name>
        <qualifiedname>QuantLib::CmsMarketCalibration::compute</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_end_criteria" kindref="compound">EndCriteria</ref> &gt; &amp;</type>
          <declname>endCriteria</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_optimization_method" kindref="compound">OptimizationMethod</ref> &gt; &amp;</type>
          <declname>method</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>guess</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isMeanReversionFixed</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>meanReversionGuess</declname>
          <defval><ref refid="class_quant_lib_1_1_null" kindref="compound">Null</ref>&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" line="60" column="16" bodyfile="ql/termstructures/volatility/swaption/cmsmarketcalibration.cpp" bodystart="393" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_cms_market_calibration_1a0bbe88318e3dea4fb003557adc75d73c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::CmsMarketCalibration::computeParametric</definition>
        <argsstring>(const ext::shared_ptr&lt; EndCriteria &gt; &amp;endCriteria, const ext::shared_ptr&lt; OptimizationMethod &gt; &amp;method, const Matrix &amp;guess, bool isMeanReversionFixed, Real meanReversionGuess=Null&lt; Real &gt;())</argsstring>
        <name>computeParametric</name>
        <qualifiedname>QuantLib::CmsMarketCalibration::computeParametric</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_end_criteria" kindref="compound">EndCriteria</ref> &gt; &amp;</type>
          <declname>endCriteria</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_optimization_method" kindref="compound">OptimizationMethod</ref> &gt; &amp;</type>
          <declname>method</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>guess</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isMeanReversionFixed</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>meanReversionGuess</declname>
          <defval><ref refid="class_quant_lib_1_1_null" kindref="compound">Null</ref>&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" line="66" column="16" bodyfile="ql/termstructures/volatility/swaption/cmsmarketcalibration.cpp" bodystart="482" bodyend="575"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_cms_market_calibration_1a05c2f487a3c7687ec177c59f5cdae889" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CmsMarketCalibration::error</definition>
        <argsstring>() const</argsstring>
        <name>error</name>
        <qualifiedname>QuantLib::CmsMarketCalibration::error</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" line="72" column="14" bodyfile="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_cms_market_calibration_1a08dd50e7dc42511146c8774123a902a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>EndCriteria::Type</type>
        <definition>EndCriteria::Type QuantLib::CmsMarketCalibration::endCriteria</definition>
        <argsstring>()</argsstring>
        <name>endCriteria</name>
        <qualifiedname>QuantLib::CmsMarketCalibration::endCriteria</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" line="73" column="27" bodyfile="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" bodystart="73" bodyend="73"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_quant_lib_1_1_cms_market_calibration_1ad741984972bad6f748e1f8925b44dcaa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>static Real QuantLib::CmsMarketCalibration::betaTransformInverse</definition>
        <argsstring>(Real beta)</argsstring>
        <name>betaTransformInverse</name>
        <qualifiedname>QuantLib::CmsMarketCalibration::betaTransformInverse</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>beta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" line="75" column="21" bodyfile="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_cms_market_calibration_1a4bc008f2ea662ea2e38a4965f52e50fc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>static Real QuantLib::CmsMarketCalibration::betaTransformDirect</definition>
        <argsstring>(Real y)</argsstring>
        <name>betaTransformDirect</name>
        <qualifiedname>QuantLib::CmsMarketCalibration::betaTransformDirect</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" line="78" column="21" bodyfile="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" bodystart="78" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_cms_market_calibration_1a0b3762faf58f4a2dca29c40b63901160" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>static Real QuantLib::CmsMarketCalibration::reversionTransformInverse</definition>
        <argsstring>(Real reversion)</argsstring>
        <name>reversionTransformInverse</name>
        <qualifiedname>QuantLib::CmsMarketCalibration::reversionTransformInverse</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>reversion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" line="84" column="21" bodyfile="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" bodystart="84" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_cms_market_calibration_1abebecfe0a15885b34db59b6720f1b4dc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>static Real QuantLib::CmsMarketCalibration::reversionTransformDirect</definition>
        <argsstring>(Real y)</argsstring>
        <name>reversionTransformDirect</name>
        <qualifiedname>QuantLib::CmsMarketCalibration::reversionTransformDirect</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" line="87" column="21" bodyfile="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" bodystart="87" bodyend="89"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::CmsMarketCalibration</label>
        <link refid="class_quant_lib_1_1_cms_market_calibration"/>
        <childnode refid="2" relation="usage">
          <edgelabel>volCube_</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>browseCmsMarket_</edgelabel>
          <edgelabel>denseSabrParameters_</edgelabel>
          <edgelabel>sparseSabrParameters_</edgelabel>
          <edgelabel>weights_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Handle&lt; QuantLib::SwaptionVolatilityStructure &gt;</label>
        <link refid="class_quant_lib_1_1_handle"/>
      </node>
      <node id="3">
        <label>QuantLib::Matrix</label>
        <link refid="class_quant_lib_1_1_matrix"/>
      </node>
    </collaborationgraph>
    <location file="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" line="39" column="5" bodyfile="ql/termstructures/volatility/swaption/cmsmarketcalibration.hpp" bodystart="39" bodyend="94"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_cms_market_calibration_1a4bc008f2ea662ea2e38a4965f52e50fc" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarketCalibration</scope><name>betaTransformDirect</name></member>
      <member refid="class_quant_lib_1_1_cms_market_calibration_1ad741984972bad6f748e1f8925b44dcaa" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarketCalibration</scope><name>betaTransformInverse</name></member>
      <member refid="class_quant_lib_1_1_cms_market_calibration_1af52d8af22106965e5d420a41d2329b3c" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarketCalibration</scope><name>browseCmsMarket_</name></member>
      <member refid="class_quant_lib_1_1_cms_market_calibration_1a79444392d30d8bfd0c3c0e143b6b9c06" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarketCalibration</scope><name>CalibrationType</name></member>
      <member refid="class_quant_lib_1_1_cms_market_calibration_1ac3bc85ad7cf9b196d626ae21fa98fedf" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarketCalibration</scope><name>calibrationType_</name></member>
      <member refid="class_quant_lib_1_1_cms_market_calibration_1a8a76c54b93770dc05cf2ca82c6feafb8" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarketCalibration</scope><name>cmsMarket_</name></member>
      <member refid="class_quant_lib_1_1_cms_market_calibration_1a7230d64b8950759aaa05b3cf3ebb8927" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarketCalibration</scope><name>CmsMarketCalibration</name></member>
      <member refid="class_quant_lib_1_1_cms_market_calibration_1abd01d205ac8fe87bdaf0c888ddea2210" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarketCalibration</scope><name>compute</name></member>
      <member refid="class_quant_lib_1_1_cms_market_calibration_1af858ece98a4e88771ef4661a5904843e" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarketCalibration</scope><name>compute</name></member>
      <member refid="class_quant_lib_1_1_cms_market_calibration_1a0bbe88318e3dea4fb003557adc75d73c" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarketCalibration</scope><name>computeParametric</name></member>
      <member refid="class_quant_lib_1_1_cms_market_calibration_1af063920ee371d4f77be585401f3e2a39" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarketCalibration</scope><name>denseSabrParameters_</name></member>
      <member refid="class_quant_lib_1_1_cms_market_calibration_1a08dd50e7dc42511146c8774123a902a2" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarketCalibration</scope><name>endCriteria</name></member>
      <member refid="class_quant_lib_1_1_cms_market_calibration_1acbf2e3b5e0ae87d14cb4a61a3457505f" prot="private" virt="non-virtual"><scope>QuantLib::CmsMarketCalibration</scope><name>endCriteria_</name></member>
      <member refid="class_quant_lib_1_1_cms_market_calibration_1a05c2f487a3c7687ec177c59f5cdae889" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarketCalibration</scope><name>error</name></member>
      <member refid="class_quant_lib_1_1_cms_market_calibration_1aa8b99ffe1c7d2c45609c5f2f63a5b4f2" prot="private" virt="non-virtual"><scope>QuantLib::CmsMarketCalibration</scope><name>error_</name></member>
      <member refid="class_quant_lib_1_1_cms_market_calibration_1a79444392d30d8bfd0c3c0e143b6b9c06af0e6a1c8406369432b368a3ae8f338f3" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarketCalibration</scope><name>OnForwardCmsPrice</name></member>
      <member refid="class_quant_lib_1_1_cms_market_calibration_1a79444392d30d8bfd0c3c0e143b6b9c06a8c57393cd58529535ecc616717d4c425" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarketCalibration</scope><name>OnPrice</name></member>
      <member refid="class_quant_lib_1_1_cms_market_calibration_1a79444392d30d8bfd0c3c0e143b6b9c06a13dc108a5bc4fc728ae829970e308559" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarketCalibration</scope><name>OnSpread</name></member>
      <member refid="class_quant_lib_1_1_cms_market_calibration_1abebecfe0a15885b34db59b6720f1b4dc" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarketCalibration</scope><name>reversionTransformDirect</name></member>
      <member refid="class_quant_lib_1_1_cms_market_calibration_1a0b3762faf58f4a2dca29c40b63901160" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarketCalibration</scope><name>reversionTransformInverse</name></member>
      <member refid="class_quant_lib_1_1_cms_market_calibration_1af8d14ab2c2a3b8613de5cb9871e19ba1" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarketCalibration</scope><name>sparseSabrParameters_</name></member>
      <member refid="class_quant_lib_1_1_cms_market_calibration_1a4501f56fef16cd6a0527a7c9e4b8ed8e" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarketCalibration</scope><name>volCube_</name></member>
      <member refid="class_quant_lib_1_1_cms_market_calibration_1a6f0f23c8365641f7fe4d79fc17ea4eda" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarketCalibration</scope><name>weights_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_tree_vanilla_swap_engine" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::TreeVanillaSwapEngine</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_lattice_short_rate_model_engine" prot="public" virt="non-virtual">QuantLib::LatticeShortRateModelEngine&lt; VanillaSwap::arguments, VanillaSwap::results &gt;</basecompoundref>
    <includes refid="treeswapengine_8hpp" local="no">treeswapengine.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Constructors</header>
      <description><para><simplesect kind="note"><para>the term structure is only needed when the short-rate model cannot provide one itself. </para>
</simplesect>
</para>
</description>
      <memberdef kind="variable" id="class_quant_lib_1_1_tree_vanilla_swap_engine_1a95b9f95af3fdb7bf989623a0cf689d85" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
        <definition>Handle&lt;YieldTermStructure&gt; QuantLib::TreeVanillaSwapEngine::termStructure_</definition>
        <argsstring></argsstring>
        <name>termStructure_</name>
        <qualifiedname>QuantLib::TreeVanillaSwapEngine::termStructure_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/swap/treeswapengine.hpp" line="57" column="16" bodyfile="ql/pricingengines/swap/treeswapengine.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_tree_vanilla_swap_engine_1abef2a6bfc003f1eff3348543bb899a39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::TreeVanillaSwapEngine::TreeVanillaSwapEngine</definition>
        <argsstring>(const ext::shared_ptr&lt; ShortRateModel &gt; &amp;, Size timeSteps, Handle&lt; YieldTermStructure &gt; termStructure=Handle&lt; YieldTermStructure &gt;())</argsstring>
        <name>TreeVanillaSwapEngine</name>
        <qualifiedname>QuantLib::TreeVanillaSwapEngine::TreeVanillaSwapEngine</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_short_rate_model" kindref="compound">ShortRateModel</ref> &gt; &amp;</type>
          <defname>model</defname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>timeSteps</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
          <declname>termStructure</declname>
          <defval><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/swap/treeswapengine.hpp" line="45" column="9" bodyfile="ql/pricingengines/swap/treeswapengine.cpp" bodystart="27" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_tree_vanilla_swap_engine_1af29d6b56b75a1b25b7a5490b2f70961f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::TreeVanillaSwapEngine::TreeVanillaSwapEngine</definition>
        <argsstring>(const ext::shared_ptr&lt; ShortRateModel &gt; &amp;, const TimeGrid &amp;timeGrid, Handle&lt; YieldTermStructure &gt; termStructure=Handle&lt; YieldTermStructure &gt;())</argsstring>
        <name>TreeVanillaSwapEngine</name>
        <qualifiedname>QuantLib::TreeVanillaSwapEngine::TreeVanillaSwapEngine</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_short_rate_model" kindref="compound">ShortRateModel</ref> &gt; &amp;</type>
          <defname>model</defname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_time_grid" kindref="compound">TimeGrid</ref> &amp;</type>
          <declname>timeGrid</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
          <declname>termStructure</declname>
          <defval><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/swap/treeswapengine.hpp" line="49" column="9" bodyfile="ql/pricingengines/swap/treeswapengine.cpp" bodystart="35" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_tree_vanilla_swap_engine_1a9049e3fb4bdaa781308a7162265099eb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::TreeVanillaSwapEngine::calculate</definition>
        <argsstring>() const override</argsstring>
        <name>calculate</name>
        <qualifiedname>QuantLib::TreeVanillaSwapEngine::calculate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_pricing_engine_1ad2be11cff80d9792f0cc8231711fcb06">calculate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/swap/treeswapengine.hpp" line="54" column="14" bodyfile="ql/pricingengines/swap/treeswapengine.cpp" bodystart="43" bodyend="76"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Numerical lattice engine for simple swaps. </para>
    </briefdescription>
    <detaileddescription>
<para><xrefsect id="test_1_test000134"><xreftitle>Test</xreftitle><xrefdescription><para>calculations are checked against known good results </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>QuantLib::GenericEngine&lt; VanillaSwap::arguments, VanillaSwap::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_engine"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::GenericModelEngine&lt; ShortRateModel, VanillaSwap::arguments, VanillaSwap::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_model_engine"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::LatticeShortRateModelEngine&lt; VanillaSwap::arguments, VanillaSwap::results &gt;</label>
        <link refid="class_quant_lib_1_1_lattice_short_rate_model_engine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="7">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="5">
        <label>QuantLib::PricingEngine</label>
        <link refid="class_quant_lib_1_1_pricing_engine"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::TreeVanillaSwapEngine</label>
        <link refid="class_quant_lib_1_1_tree_vanilla_swap_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>QuantLib::GenericEngine&lt; VanillaSwap::arguments, VanillaSwap::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_engine"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::GenericModelEngine&lt; ShortRateModel, VanillaSwap::arguments, VanillaSwap::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_model_engine"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>model_</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::Handle&lt; ShortRateModel &gt;</label>
        <link refid="class_quant_lib_1_1_handle"/>
      </node>
      <node id="2">
        <label>QuantLib::LatticeShortRateModelEngine&lt; VanillaSwap::arguments, VanillaSwap::results &gt;</label>
        <link refid="class_quant_lib_1_1_lattice_short_rate_model_engine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>timeGrid_</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="7">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="5">
        <label>QuantLib::PricingEngine</label>
        <link refid="class_quant_lib_1_1_pricing_engine"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QuantLib::TimeGrid</label>
        <link refid="class_quant_lib_1_1_time_grid"/>
      </node>
      <node id="1">
        <label>QuantLib::TreeVanillaSwapEngine</label>
        <link refid="class_quant_lib_1_1_tree_vanilla_swap_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/pricingengines/swap/treeswapengine.hpp" line="36" column="5" bodyfile="ql/pricingengines/swap/treeswapengine.hpp" bodystart="38" bodyend="58"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_generic_engine_1ad2371cdbafa1989afb0e4733b1212c0d" prot="protected" virt="non-virtual"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>arguments_</name></member>
      <member refid="class_quant_lib_1_1_tree_vanilla_swap_engine_1a9049e3fb4bdaa781308a7162265099eb" prot="public" virt="virtual"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_generic_model_engine_1ab8c094dbe99234f8aa9dc0a92e0e5fd1" prot="public" virt="non-virtual"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>GenericModelEngine</name></member>
      <member refid="class_quant_lib_1_1_generic_model_engine_1a8ab246499452beddca7225a2c63f8549" prot="public" virt="non-virtual"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>GenericModelEngine</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1ad9c6e8dc65ca072d5e6e17640d74db3e" prot="public" virt="virtual"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>getArguments</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1aea8272ef6e5e0ea1cffadfed0454fa88" prot="public" virt="virtual"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>getResults</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_lattice_short_rate_model_engine_1ae99017c2675d50cde30b544d6a5add80" prot="protected" virt="non-virtual"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>lattice_</name></member>
      <member refid="class_quant_lib_1_1_lattice_short_rate_model_engine_1a3ff110fb31f664afe2b4e07a141787f3" prot="public" virt="non-virtual"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>LatticeShortRateModelEngine</name></member>
      <member refid="class_quant_lib_1_1_lattice_short_rate_model_engine_1ace055f3b4fe5629532eb4e2214c531ba" prot="public" virt="non-virtual"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>LatticeShortRateModelEngine</name></member>
      <member refid="class_quant_lib_1_1_lattice_short_rate_model_engine_1a7f5b41a1e8d157ceae4b18ddbf3b55f9" prot="public" virt="non-virtual"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>LatticeShortRateModelEngine</name></member>
      <member refid="class_quant_lib_1_1_generic_model_engine_1a48733a3abfeb33214816709c9c5c6b62" prot="protected" virt="non-virtual"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>model_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1a81c5390ba1e713e57ca87d5f841d37f2" prot="public" virt="virtual"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>reset</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1a41281f2ea4990dbce90be1f9f2e231f6" prot="protected" virt="non-virtual"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>results_</name></member>
      <member refid="class_quant_lib_1_1_tree_vanilla_swap_engine_1a95b9f95af3fdb7bf989623a0cf689d85" prot="private" virt="non-virtual"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>termStructure_</name></member>
      <member refid="class_quant_lib_1_1_lattice_short_rate_model_engine_1affd7f2011e20b7b032301c67fc55152b" prot="protected" virt="non-virtual"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>timeGrid_</name></member>
      <member refid="class_quant_lib_1_1_lattice_short_rate_model_engine_1a9f5e37d1ad2ce578013e6776f17bb59f" prot="protected" virt="non-virtual"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>timeSteps_</name></member>
      <member refid="class_quant_lib_1_1_tree_vanilla_swap_engine_1abef2a6bfc003f1eff3348543bb899a39" prot="public" virt="non-virtual"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>TreeVanillaSwapEngine</name></member>
      <member refid="class_quant_lib_1_1_tree_vanilla_swap_engine_1af29d6b56b75a1b25b7a5490b2f70961f" prot="public" virt="non-virtual"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>TreeVanillaSwapEngine</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_lattice_short_rate_model_engine_1a5669e2481c5f79c2733ad12148732164" prot="public" virt="virtual"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_pricing_engine_1a66b279a54578cd7e60d402e5147eb526" prot="public" virt="non-virtual"><scope>QuantLib::TreeVanillaSwapEngine</scope><name>~PricingEngine</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

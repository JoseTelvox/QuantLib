<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_cms_market" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::CmsMarket</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_lazy_object" prot="public" virt="non-virtual">QuantLib::LazyObject</basecompoundref>
    <includes refid="cmsmarket_8hpp" local="no">cmsmarket.hpp</includes>
    <sectiondef kind="user-defined">
      <header>LazyObject interface</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_cms_market_1a6179ac1fb8885871a406f14e210fecba" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &gt;</type>
        <definition>std::vector&lt;Period&gt; QuantLib::CmsMarket::swapLengths_</definition>
        <argsstring></argsstring>
        <name>swapLengths_</name>
        <qualifiedname>QuantLib::CmsMarket::swapLengths_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="77" column="21" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cms_market_1a225c10862814f6061e3f69e4da7e9c18" prot="private" static="no" mutable="no">
        <type>std::vector&lt; ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_swap_index" kindref="compound">SwapIndex</ref> &gt; &gt;</type>
        <definition>std::vector&lt;ext::shared_ptr&lt;SwapIndex&gt; &gt; QuantLib::CmsMarket::swapIndexes_</definition>
        <argsstring></argsstring>
        <name>swapIndexes_</name>
        <qualifiedname>QuantLib::CmsMarket::swapIndexes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="78" column="21" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cms_market_1ab74f1e40443a4eeca0ec47fc1fcf8f62" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_ibor_index" kindref="compound">IborIndex</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;IborIndex&gt; QuantLib::CmsMarket::iborIndex_</definition>
        <argsstring></argsstring>
        <name>iborIndex_</name>
        <qualifiedname>QuantLib::CmsMarket::iborIndex_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="79" column="25" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cms_market_1a4ed04d998439be0abfac74003f62ed5c" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;Handle&lt;Quote&gt; &gt; &gt; QuantLib::CmsMarket::bidAskSpreads_</definition>
        <argsstring></argsstring>
        <name>bidAskSpreads_</name>
        <qualifiedname>QuantLib::CmsMarket::bidAskSpreads_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="80" column="21" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cms_market_1a851606f17d610fdc49a1b310920ec004" prot="private" static="no" mutable="no">
        <type>std::vector&lt; ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_cms_coupon_pricer" kindref="compound">CmsCouponPricer</ref> &gt; &gt;</type>
        <definition>std::vector&lt;ext::shared_ptr&lt;CmsCouponPricer&gt; &gt; QuantLib::CmsMarket::pricers_</definition>
        <argsstring></argsstring>
        <name>pricers_</name>
        <qualifiedname>QuantLib::CmsMarket::pricers_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="81" column="21" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cms_market_1a9b19aa7c1ee5e37bf39272987670df44" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
        <definition>Handle&lt;YieldTermStructure&gt; QuantLib::CmsMarket::discTS_</definition>
        <argsstring></argsstring>
        <name>discTS_</name>
        <qualifiedname>QuantLib::CmsMarket::discTS_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="82" column="16" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cms_market_1a59666e223f4d22b5e941e1fab7eaf04f" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::CmsMarket::nExercise_</definition>
        <argsstring></argsstring>
        <name>nExercise_</name>
        <qualifiedname>QuantLib::CmsMarket::nExercise_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="84" column="14" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cms_market_1a97d21286db26719f1e16bef086b702c7" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::CmsMarket::nSwapIndexes_</definition>
        <argsstring></argsstring>
        <name>nSwapIndexes_</name>
        <qualifiedname>QuantLib::CmsMarket::nSwapIndexes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="85" column="14" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cms_market_1aa77cf56252e10cdcd73a0e55241444c4" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &gt;</type>
        <definition>std::vector&lt;Period&gt; QuantLib::CmsMarket::swapTenors_</definition>
        <argsstring></argsstring>
        <name>swapTenors_</name>
        <qualifiedname>QuantLib::CmsMarket::swapTenors_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="86" column="21" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cms_market_1a2ac3523e9cae1bd3adc50df67e03588e" prot="private" static="no" mutable="yes">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::CmsMarket::spotFloatLegNPV_</definition>
        <argsstring></argsstring>
        <name>spotFloatLegNPV_</name>
        <qualifiedname>QuantLib::CmsMarket::spotFloatLegNPV_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="87" column="24" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cms_market_1abbe170b0bc1e5eb79cb6772e9a314706" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::CmsMarket::spotFloatLegBPS_</definition>
        <argsstring></argsstring>
        <name>spotFloatLegBPS_</name>
        <qualifiedname>QuantLib::CmsMarket::spotFloatLegBPS_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="87" column="41" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cms_market_1afb32374f9aee23c84bbac2747fa94c19" prot="private" static="no" mutable="yes">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::CmsMarket::mktBidSpreads_</definition>
        <argsstring></argsstring>
        <name>mktBidSpreads_</name>
        <qualifiedname>QuantLib::CmsMarket::mktBidSpreads_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="90" column="24" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cms_market_1afc6efa1d9398d1a6b36e705ec821b106" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::CmsMarket::mktAskSpreads_</definition>
        <argsstring></argsstring>
        <name>mktAskSpreads_</name>
        <qualifiedname>QuantLib::CmsMarket::mktAskSpreads_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="90" column="39" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cms_market_1ae704490217e2b66abdcae4b589a2a154" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::CmsMarket::mktSpreads_</definition>
        <argsstring></argsstring>
        <name>mktSpreads_</name>
        <qualifiedname>QuantLib::CmsMarket::mktSpreads_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="90" column="54" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cms_market_1af6282ced7f3636207ea1a35401bd95fe" prot="private" static="no" mutable="yes">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::CmsMarket::mdlSpreads_</definition>
        <argsstring></argsstring>
        <name>mdlSpreads_</name>
        <qualifiedname>QuantLib::CmsMarket::mdlSpreads_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="92" column="24" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cms_market_1ad9478a6a7822adc0d90efdc59f6f7293" prot="private" static="no" mutable="yes">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::CmsMarket::errSpreads_</definition>
        <argsstring></argsstring>
        <name>errSpreads_</name>
        <qualifiedname>QuantLib::CmsMarket::errSpreads_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="94" column="24" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cms_market_1a945c892d35745f0c8f8724a1022eb0c5" prot="private" static="no" mutable="yes">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::CmsMarket::mktSpotCmsLegNPV_</definition>
        <argsstring></argsstring>
        <name>mktSpotCmsLegNPV_</name>
        <qualifiedname>QuantLib::CmsMarket::mktSpotCmsLegNPV_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="97" column="24" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cms_market_1a1f53eebd57a4320c83b6f79534b8cd3a" prot="private" static="no" mutable="yes">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::CmsMarket::mdlSpotCmsLegNPV_</definition>
        <argsstring></argsstring>
        <name>mdlSpotCmsLegNPV_</name>
        <qualifiedname>QuantLib::CmsMarket::mdlSpotCmsLegNPV_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="99" column="24" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cms_market_1ae0ffbacb7beae2dcb6545dc70714246a" prot="private" static="no" mutable="yes">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::CmsMarket::errSpotCmsLegNPV_</definition>
        <argsstring></argsstring>
        <name>errSpotCmsLegNPV_</name>
        <qualifiedname>QuantLib::CmsMarket::errSpotCmsLegNPV_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="101" column="24" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cms_market_1a68872d065726b622bd84ef7de0140318" prot="private" static="no" mutable="yes">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::CmsMarket::mktFwdCmsLegNPV_</definition>
        <argsstring></argsstring>
        <name>mktFwdCmsLegNPV_</name>
        <qualifiedname>QuantLib::CmsMarket::mktFwdCmsLegNPV_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="104" column="24" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cms_market_1acd2f9f9a723c58ed31c031caa314a98f" prot="private" static="no" mutable="yes">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::CmsMarket::mdlFwdCmsLegNPV_</definition>
        <argsstring></argsstring>
        <name>mdlFwdCmsLegNPV_</name>
        <qualifiedname>QuantLib::CmsMarket::mdlFwdCmsLegNPV_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="106" column="24" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cms_market_1a822dc40c64a21efd580d4244ac5d75c8" prot="private" static="no" mutable="yes">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::CmsMarket::errFwdCmsLegNPV_</definition>
        <argsstring></argsstring>
        <name>errFwdCmsLegNPV_</name>
        <qualifiedname>QuantLib::CmsMarket::errFwdCmsLegNPV_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="108" column="24" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cms_market_1af3e224a580d6ca7c5371aadf6d8894a9" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_swap" kindref="compound">Swap</ref> &gt; &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;ext::shared_ptr&lt;Swap&gt; &gt; &gt; QuantLib::CmsMarket::spotSwaps_</definition>
        <argsstring></argsstring>
        <name>spotSwaps_</name>
        <qualifiedname>QuantLib::CmsMarket::spotSwaps_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="110" column="21" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cms_market_1a6b03065b34421cea46430b2935dbfa3f" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_swap" kindref="compound">Swap</ref> &gt; &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;ext::shared_ptr&lt;Swap&gt; &gt; &gt; QuantLib::CmsMarket::fwdSwaps_</definition>
        <argsstring></argsstring>
        <name>fwdSwaps_</name>
        <qualifiedname>QuantLib::CmsMarket::fwdSwaps_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="111" column="21" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_cms_market_1a790d4cb3d9d808b374f430619d922a56" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::CmsMarket::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <qualifiedname>QuantLib::CmsMarket::update</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_observer_1a07905c55dca858470fcf4a1aea0005aa">update</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must be implemented in derived classes. An instance of Observer does not call this method directly: instead, it will be called by the observables the instance registered with when they need to notify any changes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="52" column="14" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.hpp" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_cms_market_1a71ccabed1d6c4c378448823836f5b986" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::CmsMarket::reprice</definition>
        <argsstring>(const Handle&lt; SwaptionVolatilityStructure &gt; &amp;volStructure, Real meanReversion)</argsstring>
        <name>reprice</name>
        <qualifiedname>QuantLib::CmsMarket::reprice</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_swaption_volatility_structure" kindref="compound">SwaptionVolatilityStructure</ref> &gt; &amp;</type>
          <declname>volStructure</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>meanReversion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="55" column="14" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.cpp" bodystart="155" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_cms_market_1a03c92e5f9a59eec2999c1097d4ad17d1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; Period &gt; &amp; QuantLib::CmsMarket::swapTenors</definition>
        <argsstring>() const</argsstring>
        <name>swapTenors</name>
        <qualifiedname>QuantLib::CmsMarket::swapTenors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="58" column="27" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.hpp" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_cms_market_1abae759db9a4a18e0de829ea99ad8df32" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; Period &gt; &amp; QuantLib::CmsMarket::swapLengths</definition>
        <argsstring>() const</argsstring>
        <name>swapLengths</name>
        <qualifiedname>QuantLib::CmsMarket::swapLengths</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="59" column="27" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.hpp" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_cms_market_1adcee028cf5890cb69a90be68b2e0f3b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
        <definition>const Matrix &amp; QuantLib::CmsMarket::impliedCmsSpreads</definition>
        <argsstring>()</argsstring>
        <name>impliedCmsSpreads</name>
        <qualifiedname>QuantLib::CmsMarket::impliedCmsSpreads</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="60" column="22" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_cms_market_1aed38a3e11c6199d117cdab0e81bcb609" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
        <definition>const Matrix &amp; QuantLib::CmsMarket::spreadErrors</definition>
        <argsstring>()</argsstring>
        <name>spreadErrors</name>
        <qualifiedname>QuantLib::CmsMarket::spreadErrors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="61" column="22" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.hpp" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_cms_market_1a30faf80acee6de15614fde8925d20564" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::CmsMarket::browse</definition>
        <argsstring>() const</argsstring>
        <name>browse</name>
        <qualifiedname>QuantLib::CmsMarket::browse</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="62" column="16" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.cpp" bodystart="227" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_cms_market_1a17e79a06ee7a8a99d0721ed89013a1e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CmsMarket::weightedSpreadError</definition>
        <argsstring>(const Matrix &amp;weights)</argsstring>
        <name>weightedSpreadError</name>
        <qualifiedname>QuantLib::CmsMarket::weightedSpreadError</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>weights</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="65" column="14" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.cpp" bodystart="184" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_cms_market_1ae2bc8b23c66f7bd82440b7ac10bb46e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CmsMarket::weightedSpotNpvError</definition>
        <argsstring>(const Matrix &amp;weights)</argsstring>
        <name>weightedSpotNpvError</name>
        <qualifiedname>QuantLib::CmsMarket::weightedSpotNpvError</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>weights</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="66" column="14" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.cpp" bodystart="179" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_cms_market_1a550b5eb3ff98a246023752701d7411ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CmsMarket::weightedFwdNpvError</definition>
        <argsstring>(const Matrix &amp;weights)</argsstring>
        <name>weightedFwdNpvError</name>
        <qualifiedname>QuantLib::CmsMarket::weightedFwdNpvError</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>weights</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="67" column="14" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.cpp" bodystart="174" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_cms_market_1afebb93b5b13424ab1809b0757812c823" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::CmsMarket::weightedSpreadErrors</definition>
        <argsstring>(const Matrix &amp;weights)</argsstring>
        <name>weightedSpreadErrors</name>
        <qualifiedname>QuantLib::CmsMarket::weightedSpreadErrors</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>weights</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="68" column="15" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.cpp" bodystart="201" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_cms_market_1a2289754501431b3b5201af795383a9cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::CmsMarket::weightedSpotNpvErrors</definition>
        <argsstring>(const Matrix &amp;weights)</argsstring>
        <name>weightedSpotNpvErrors</name>
        <qualifiedname>QuantLib::CmsMarket::weightedSpotNpvErrors</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>weights</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="69" column="15" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.cpp" bodystart="196" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_cms_market_1a13fd8ed7d871539ec73d5a27db1f8a0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::CmsMarket::weightedFwdNpvErrors</definition>
        <argsstring>(const Matrix &amp;weights)</argsstring>
        <name>weightedFwdNpvErrors</name>
        <qualifiedname>QuantLib::CmsMarket::weightedFwdNpvErrors</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>weights</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="70" column="15" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.cpp" bodystart="191" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_cms_market_1a9f467fd70de8869fa1f79242b027ca72" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::CmsMarket::performCalculations</definition>
        <argsstring>() const override</argsstring>
        <name>performCalculations</name>
        <qualifiedname>QuantLib::CmsMarket::performCalculations</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_lazy_object_1aafa5583a3743d9f93fa40da5b62e1ff8">performCalculations</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must implement any calculations which must be (re)done in order to calculate the desired results. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="73" column="14" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.cpp" bodystart="108" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_cms_market_1afe2c8c36c2cd4c19c76610f537475d96" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CmsMarket::weightedMean</definition>
        <argsstring>(const Matrix &amp;var, const Matrix &amp;weights) const</argsstring>
        <name>weightedMean</name>
        <qualifiedname>QuantLib::CmsMarket::weightedMean</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>var</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>weights</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="74" column="14" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.cpp" bodystart="206" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_cms_market_1a6d7de7db8131f9d0db53ca78f979cb49" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::CmsMarket::weightedMeans</definition>
        <argsstring>(const Matrix &amp;var, const Matrix &amp;weights) const</argsstring>
        <name>weightedMeans</name>
        <qualifiedname>QuantLib::CmsMarket::weightedMeans</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>var</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>weights</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="75" column="15" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.cpp" bodystart="217" bodyend="225"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_cms_market_1a0cf8916950c649815b0edddef5c6eda9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::CmsMarket::CmsMarket</definition>
        <argsstring>(std::vector&lt; Period &gt; swapLengths, std::vector&lt; ext::shared_ptr&lt; SwapIndex &gt; &gt; swapIndexes, ext::shared_ptr&lt; IborIndex &gt; iborIndex, const std::vector&lt; std::vector&lt; Handle&lt; Quote &gt; &gt; &gt; &amp;bidAskSpreads, const std::vector&lt; ext::shared_ptr&lt; CmsCouponPricer &gt; &gt; &amp;pricers, Handle&lt; YieldTermStructure &gt; discountingTS)</argsstring>
        <name>CmsMarket</name>
        <qualifiedname>QuantLib::CmsMarket::CmsMarket</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &gt;</type>
          <declname>swapLengths</declname>
        </param>
        <param>
          <type>std::vector&lt; ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_swap_index" kindref="compound">SwapIndex</ref> &gt; &gt;</type>
          <declname>swapIndexes</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_ibor_index" kindref="compound">IborIndex</ref> &gt;</type>
          <declname>iborIndex</declname>
        </param>
        <param>
          <type>const std::vector&lt; std::vector&lt; <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &gt; &gt; &amp;</type>
          <declname>bidAskSpreads</declname>
        </param>
        <param>
          <type>const std::vector&lt; ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_cms_coupon_pricer" kindref="compound">CmsCouponPricer</ref> &gt; &gt; &amp;</type>
          <declname>pricers</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
          <declname>discountingTS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="44" column="9" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.cpp" bodystart="35" bodyend="106"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>set of CMS quotes </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::CmsMarket</label>
        <link refid="class_quant_lib_1_1_cms_market"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::CmsMarket</label>
        <link refid="class_quant_lib_1_1_cms_market"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </collaborationgraph>
    <location file="ql/termstructures/volatility/swaption/cmsmarket.hpp" line="42" column="5" bodyfile="ql/termstructures/volatility/swaption/cmsmarket.hpp" bodystart="42" bodyend="113"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_lazy_object_1a02070ea7442d30625992c1711030d4b8" prot="protected" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>alwaysForward_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a17c9433135a259e4776baec66204a484" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>alwaysForwardNotifications</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1a4ed04d998439be0abfac74003f62ed5c" prot="private" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>bidAskSpreads_</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1a30faf80acee6de15614fde8925d20564" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>browse</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a5244c7f83592375a0ea9048296435fd1" prot="protected" virt="virtual"><scope>QuantLib::CmsMarket</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a58b4986a80efa18634483a92c121e26e" prot="protected" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>calculated_</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1a0cf8916950c649815b0edddef5c6eda9" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>CmsMarket</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::CmsMarket</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1a9b19aa7c1ee5e37bf39272987670df44" prot="private" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>discTS_</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1a822dc40c64a21efd580d4244ac5d75c8" prot="private" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>errFwdCmsLegNPV_</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1ae0ffbacb7beae2dcb6545dc70714246a" prot="private" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>errSpotCmsLegNPV_</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1ad9478a6a7822adc0d90efdc59f6f7293" prot="private" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>errSpreads_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1afac6ee19c3107c453e1347dd8000e023" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>forwardFirstNotificationOnly</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7157f41e83f2c5d924f5c5bafda04d1d" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>freeze</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7bb721fe00c6854e602758aba629ab77" prot="protected" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>frozen_</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1a6b03065b34421cea46430b2935dbfa3f" prot="private" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>fwdSwaps_</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1ab74f1e40443a4eeca0ec47fc1fcf8f62" prot="private" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>iborIndex_</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1adcee028cf5890cb69a90be68b2e0f3b7" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>impliedCmsSpreads</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a0a7c5d42815a4e16ee2158e24dbfc748" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>isCalculated</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a26f18f4ff7faaaebd8eae50e064b493e" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>LazyObject</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1acd2f9f9a723c58ed31c031caa314a98f" prot="private" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>mdlFwdCmsLegNPV_</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1a1f53eebd57a4320c83b6f79534b8cd3a" prot="private" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>mdlSpotCmsLegNPV_</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1af6282ced7f3636207ea1a35401bd95fe" prot="private" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>mdlSpreads_</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1afc6efa1d9398d1a6b36e705ec821b106" prot="private" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>mktAskSpreads_</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1afb32374f9aee23c84bbac2747fa94c19" prot="private" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>mktBidSpreads_</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1a68872d065726b622bd84ef7de0140318" prot="private" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>mktFwdCmsLegNPV_</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1a945c892d35745f0c8f8724a1022eb0c5" prot="private" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>mktSpotCmsLegNPV_</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1ae704490217e2b66abdcae4b589a2a154" prot="private" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>mktSpreads_</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1a59666e223f4d22b5e941e1fab7eaf04f" prot="private" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>nExercise_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1a97d21286db26719f1e16bef086b702c7" prot="private" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>nSwapIndexes_</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::CmsMarket</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::CmsMarket</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::CmsMarket</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::CmsMarket</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::CmsMarket</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::QuantLib::Observer::"><scope>QuantLib::CmsMarket</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1a9f467fd70de8869fa1f79242b027ca72" prot="private" virt="virtual"><scope>QuantLib::CmsMarket</scope><name>performCalculations</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1a851606f17d610fdc49a1b310920ec004" prot="private" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>pricers_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a70c9b24e50132408d8d9ce4f6674662a" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>recalculate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1a71ccabed1d6c4c378448823836f5b986" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>reprice</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1abbe170b0bc1e5eb79cb6772e9a314706" prot="private" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>spotFloatLegBPS_</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1a2ac3523e9cae1bd3adc50df67e03588e" prot="private" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>spotFloatLegNPV_</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1af3e224a580d6ca7c5371aadf6d8894a9" prot="private" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>spotSwaps_</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1aed38a3e11c6199d117cdab0e81bcb609" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>spreadErrors</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1a225c10862814f6061e3f69e4da7e9c18" prot="private" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>swapIndexes_</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1abae759db9a4a18e0de829ea99ad8df32" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>swapLengths</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1a6179ac1fb8885871a406f14e210fecba" prot="private" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>swapLengths_</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1a03c92e5f9a59eec2999c1097d4ad17d1" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>swapTenors</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1aa77cf56252e10cdcd73a0e55241444c4" prot="private" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>swapTenors_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a2e0e4786666453024b9d4e0761f2770b" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>unfreeze</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1a790d4cb3d9d808b374f430619d922a56" prot="public" virt="virtual"><scope>QuantLib::CmsMarket</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1a550b5eb3ff98a246023752701d7411ef" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>weightedFwdNpvError</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1a13fd8ed7d871539ec73d5a27db1f8a0f" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>weightedFwdNpvErrors</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1afe2c8c36c2cd4c19c76610f537475d96" prot="private" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>weightedMean</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1a6d7de7db8131f9d0db53ca78f979cb49" prot="private" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>weightedMeans</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1ae2bc8b23c66f7bd82440b7ac10bb46e1" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>weightedSpotNpvError</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1a2289754501431b3b5201af795383a9cc" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>weightedSpotNpvErrors</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1a17e79a06ee7a8a99d0721ed89013a1e6" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>weightedSpreadError</name></member>
      <member refid="class_quant_lib_1_1_cms_market_1afebb93b5b13424ab1809b0757812c823" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>weightedSpreadErrors</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a9d719c43bb627177a90d7d12324a2d6e" prot="public" virt="non-virtual"><scope>QuantLib::CmsMarket</scope><name>~LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::CmsMarket</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::CmsMarket</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_fdm_zabr_op" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::FdmZabrOp</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_fdm_linear_op_composite" prot="public" virt="non-virtual">QuantLib::FdmLinearOpComposite</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_zabr_op_1a655b4cd613ea5922711c6c2759ef0179" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>const Array QuantLib::FdmZabrOp::volatilityValues_</definition>
        <argsstring></argsstring>
        <name>volatilityValues_</name>
        <qualifiedname>QuantLib::FdmZabrOp::volatilityValues_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/finitedifferences/fdmzabrop.hpp" line="88" column="17" bodyfile="ql/experimental/finitedifferences/fdmzabrop.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_zabr_op_1a41d6388afb1ed7c4c2d2c45b5ea800e8" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>const Array QuantLib::FdmZabrOp::forwardValues_</definition>
        <argsstring></argsstring>
        <name>forwardValues_</name>
        <qualifiedname>QuantLib::FdmZabrOp::forwardValues_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/finitedifferences/fdmzabrop.hpp" line="89" column="17" bodyfile="ql/experimental/finitedifferences/fdmzabrop.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_zabr_op_1a9a500dc7ed4dea95b4dcd4d76fb3a3f9" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_nine_point_linear_op" kindref="compound">NinePointLinearOp</ref></type>
        <definition>NinePointLinearOp QuantLib::FdmZabrOp::dxyMap_</definition>
        <argsstring></argsstring>
        <name>dxyMap_</name>
        <qualifiedname>QuantLib::FdmZabrOp::dxyMap_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/finitedifferences/fdmzabrop.hpp" line="90" column="23" bodyfile="ql/experimental/finitedifferences/fdmzabrop.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_zabr_op_1ac28ae492b8dbbcd4e5647280118c334c" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_fdm_zabr_underlying_part" kindref="compound">FdmZabrUnderlyingPart</ref></type>
        <definition>FdmZabrUnderlyingPart QuantLib::FdmZabrOp::dxMap_</definition>
        <argsstring></argsstring>
        <name>dxMap_</name>
        <qualifiedname>QuantLib::FdmZabrOp::dxMap_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/finitedifferences/fdmzabrop.hpp" line="91" column="27" bodyfile="ql/experimental/finitedifferences/fdmzabrop.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_zabr_op_1ab165f3b5ecf0ebe814da604c887f279b" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_fdm_zabr_volatility_part" kindref="compound">FdmZabrVolatilityPart</ref></type>
        <definition>FdmZabrVolatilityPart QuantLib::FdmZabrOp::dyMap_</definition>
        <argsstring></argsstring>
        <name>dyMap_</name>
        <qualifiedname>QuantLib::FdmZabrOp::dyMap_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/finitedifferences/fdmzabrop.hpp" line="92" column="27" bodyfile="ql/experimental/finitedifferences/fdmzabrop.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_zabr_op_1a986104ae86bd9f23945948819adcc967" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FdmZabrOp::FdmZabrOp</definition>
        <argsstring>(const ext::shared_ptr&lt; FdmMesher &gt; &amp;mesher, Real beta, Real nu, Real rho, Real gamma=1.0)</argsstring>
        <name>FdmZabrOp</name>
        <qualifiedname>QuantLib::FdmZabrOp::FdmZabrOp</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_fdm_mesher" kindref="compound">FdmMesher</ref> &gt; &amp;</type>
          <declname>mesher</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>beta</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>nu</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>rho</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>gamma</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/finitedifferences/fdmzabrop.hpp" line="69" column="5" bodyfile="ql/experimental/finitedifferences/fdmzabrop.cpp" bodystart="57" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_zabr_op_1a51c4ebf0d46d4f0307b38c9d9a9848dc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::FdmZabrOp::size</definition>
        <argsstring>() const override</argsstring>
        <name>size</name>
        <qualifiedname>QuantLib::FdmZabrOp::size</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1aea89ff84d04c901c37823de66b392018">size</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/finitedifferences/fdmzabrop.hpp" line="75" column="10" bodyfile="ql/experimental/finitedifferences/fdmzabrop.cpp" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_zabr_op_1aa8180214704d4d9c74b886f479e88019" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::FdmZabrOp::setTime</definition>
        <argsstring>(Time t1, Time t2) override</argsstring>
        <name>setTime</name>
        <qualifiedname>QuantLib::FdmZabrOp::setTime</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1ab635911759d6a1bde11c501d15515872">setTime</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t1</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t2</declname>
        </param>
        <briefdescription>
<para><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> <formula id="385">$t1 &lt;= t2$</formula> is required. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/finitedifferences/fdmzabrop.hpp" line="76" column="10" bodyfile="ql/experimental/finitedifferences/fdmzabrop.cpp" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_zabr_op_1a183370caf07f6f4fba8fcad97cd54616" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FdmZabrOp::apply</definition>
        <argsstring>(const Array &amp;r) const override</argsstring>
        <name>apply</name>
        <qualifiedname>QuantLib::FdmZabrOp::apply</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_1a9d59d8bb3597206db60f61c3f448c211">apply</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/finitedifferences/fdmzabrop.hpp" line="78" column="11" bodyfile="ql/experimental/finitedifferences/fdmzabrop.cpp" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_zabr_op_1ab1079cb4cf30764cb7991af04758d199" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FdmZabrOp::apply_mixed</definition>
        <argsstring>(const Array &amp;r) const override</argsstring>
        <name>apply_mixed</name>
        <qualifiedname>QuantLib::FdmZabrOp::apply_mixed</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1a162fe1437fb3060475f7824d73b72ff7">apply_mixed</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/finitedifferences/fdmzabrop.hpp" line="79" column="11" bodyfile="ql/experimental/finitedifferences/fdmzabrop.cpp" bodystart="90" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_zabr_op_1ab1d69ee6860e0b02bc311bbf0260380b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FdmZabrOp::apply_direction</definition>
        <argsstring>(Size direction, const Array &amp;r) const override</argsstring>
        <name>apply_direction</name>
        <qualifiedname>QuantLib::FdmZabrOp::apply_direction</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1aa9f8c9bcd1596637b3eaaa74c64ad83c">apply_direction</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/finitedifferences/fdmzabrop.hpp" line="81" column="11" bodyfile="ql/experimental/finitedifferences/fdmzabrop.cpp" bodystart="80" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_zabr_op_1aacb5f27cfabef992d04de7c5e308aec9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FdmZabrOp::solve_splitting</definition>
        <argsstring>(Size direction, const Array &amp;r, Real s) const override</argsstring>
        <name>solve_splitting</name>
        <qualifiedname>QuantLib::FdmZabrOp::solve_splitting</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1a1ea6ebafd3a36a95a6acb6e1c189e21f">solve_splitting</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/finitedifferences/fdmzabrop.hpp" line="82" column="11" bodyfile="ql/experimental/finitedifferences/fdmzabrop.cpp" bodystart="94" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_zabr_op_1aad51d06cdc5a67a541e9bfa22e57c916" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FdmZabrOp::preconditioner</definition>
        <argsstring>(const Array &amp;r, Real s) const override</argsstring>
        <name>preconditioner</name>
        <qualifiedname>QuantLib::FdmZabrOp::preconditioner</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1a3122983a62d53799ffd1c03922660e6c">preconditioner</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/finitedifferences/fdmzabrop.hpp" line="83" column="11" bodyfile="ql/experimental/finitedifferences/fdmzabrop.cpp" bodystart="105" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_zabr_op_1a771f5470eeb5cc7736feedd577453d44" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; SparseMatrix &gt;</type>
        <definition>std::vector&lt; SparseMatrix &gt; QuantLib::FdmZabrOp::toMatrixDecomp</definition>
        <argsstring>() const override</argsstring>
        <name>toMatrixDecomp</name>
        <qualifiedname>QuantLib::FdmZabrOp::toMatrixDecomp</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1aae06b697cc0d041a8cbdd9b259ec34b9">toMatrixDecomp</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/finitedifferences/fdmzabrop.hpp" line="85" column="17" bodyfile="ql/experimental/finitedifferences/fdmzabrop.cpp" bodystart="109" bodyend="115"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>QuantLib::FdmLinearOp</label>
        <link refid="class_quant_lib_1_1_fdm_linear_op"/>
      </node>
      <node id="2">
        <label>QuantLib::FdmLinearOpComposite</label>
        <link refid="class_quant_lib_1_1_fdm_linear_op_composite"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::FdmZabrOp</label>
        <link refid="class_quant_lib_1_1_fdm_zabr_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>QuantLib::FdmLinearOp</label>
        <link refid="class_quant_lib_1_1_fdm_linear_op"/>
      </node>
      <node id="2">
        <label>QuantLib::FdmLinearOpComposite</label>
        <link refid="class_quant_lib_1_1_fdm_linear_op_composite"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::FdmZabrOp</label>
        <link refid="class_quant_lib_1_1_fdm_zabr_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/finitedifferences/fdmzabrop.hpp" line="67" column="1" bodyfile="ql/experimental/finitedifferences/fdmzabrop.hpp" bodystart="67" bodyend="93"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_fdm_zabr_op_1a183370caf07f6f4fba8fcad97cd54616" prot="public" virt="virtual"><scope>QuantLib::FdmZabrOp</scope><name>apply</name></member>
      <member refid="class_quant_lib_1_1_fdm_zabr_op_1ab1d69ee6860e0b02bc311bbf0260380b" prot="public" virt="virtual"><scope>QuantLib::FdmZabrOp</scope><name>apply_direction</name></member>
      <member refid="class_quant_lib_1_1_fdm_zabr_op_1ab1079cb4cf30764cb7991af04758d199" prot="public" virt="virtual"><scope>QuantLib::FdmZabrOp</scope><name>apply_mixed</name></member>
      <member refid="class_quant_lib_1_1_fdm_linear_op_1af55693593c0cf7e885c67fd848f76e49" prot="public" virt="non-virtual"><scope>QuantLib::FdmZabrOp</scope><name>array_type</name></member>
      <member refid="class_quant_lib_1_1_fdm_zabr_op_1ac28ae492b8dbbcd4e5647280118c334c" prot="private" virt="non-virtual"><scope>QuantLib::FdmZabrOp</scope><name>dxMap_</name></member>
      <member refid="class_quant_lib_1_1_fdm_zabr_op_1a9a500dc7ed4dea95b4dcd4d76fb3a3f9" prot="private" virt="non-virtual"><scope>QuantLib::FdmZabrOp</scope><name>dxyMap_</name></member>
      <member refid="class_quant_lib_1_1_fdm_zabr_op_1ab165f3b5ecf0ebe814da604c887f279b" prot="private" virt="non-virtual"><scope>QuantLib::FdmZabrOp</scope><name>dyMap_</name></member>
      <member refid="class_quant_lib_1_1_fdm_zabr_op_1a986104ae86bd9f23945948819adcc967" prot="public" virt="non-virtual"><scope>QuantLib::FdmZabrOp</scope><name>FdmZabrOp</name></member>
      <member refid="class_quant_lib_1_1_fdm_zabr_op_1a41d6388afb1ed7c4c2d2c45b5ea800e8" prot="private" virt="non-virtual"><scope>QuantLib::FdmZabrOp</scope><name>forwardValues_</name></member>
      <member refid="class_quant_lib_1_1_fdm_zabr_op_1aad51d06cdc5a67a541e9bfa22e57c916" prot="public" virt="virtual"><scope>QuantLib::FdmZabrOp</scope><name>preconditioner</name></member>
      <member refid="class_quant_lib_1_1_fdm_zabr_op_1aa8180214704d4d9c74b886f479e88019" prot="public" virt="virtual"><scope>QuantLib::FdmZabrOp</scope><name>setTime</name></member>
      <member refid="class_quant_lib_1_1_fdm_zabr_op_1a51c4ebf0d46d4f0307b38c9d9a9848dc" prot="public" virt="virtual"><scope>QuantLib::FdmZabrOp</scope><name>size</name></member>
      <member refid="class_quant_lib_1_1_fdm_zabr_op_1aacb5f27cfabef992d04de7c5e308aec9" prot="public" virt="virtual"><scope>QuantLib::FdmZabrOp</scope><name>solve_splitting</name></member>
      <member refid="class_quant_lib_1_1_fdm_linear_op_composite_1abca0364ae63b5b0e714fcd3ac9e8a73b" prot="public" virt="virtual"><scope>QuantLib::FdmZabrOp</scope><name>toMatrix</name></member>
      <member refid="class_quant_lib_1_1_fdm_zabr_op_1a771f5470eeb5cc7736feedd577453d44" prot="public" virt="virtual"><scope>QuantLib::FdmZabrOp</scope><name>toMatrixDecomp</name></member>
      <member refid="class_quant_lib_1_1_fdm_zabr_op_1a655b4cd613ea5922711c6c2759ef0179" prot="private" virt="non-virtual"><scope>QuantLib::FdmZabrOp</scope><name>volatilityValues_</name></member>
      <member refid="class_quant_lib_1_1_fdm_linear_op_1aa6f29eb6144a1848c73c21e392f023e4" prot="public" virt="virtual"><scope>QuantLib::FdmZabrOp</scope><name>~FdmLinearOp</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

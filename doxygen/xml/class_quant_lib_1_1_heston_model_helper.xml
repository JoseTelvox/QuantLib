<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_heston_model_helper" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::HestonModelHelper</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_black_calibration_helper" prot="public" virt="non-virtual">QuantLib::BlackCalibrationHelper</basecompoundref>
    <includes refid="hestonmodelhelper_8hpp" local="no">hestonmodelhelper.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_heston_model_helper_1ae818e7dea3bddd35bbe8a56191cc0933" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref></type>
        <definition>const Period QuantLib::HestonModelHelper::maturity_</definition>
        <argsstring></argsstring>
        <name>maturity_</name>
        <qualifiedname>QuantLib::HestonModelHelper::maturity_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/equity/hestonmodelhelper.hpp" line="62" column="22" bodyfile="ql/models/equity/hestonmodelhelper.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_heston_model_helper_1a2be5f8557325b7bd40880a8d6b66943e" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref></type>
        <definition>const Calendar QuantLib::HestonModelHelper::calendar_</definition>
        <argsstring></argsstring>
        <name>calendar_</name>
        <qualifiedname>QuantLib::HestonModelHelper::calendar_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/equity/hestonmodelhelper.hpp" line="63" column="24" bodyfile="ql/models/equity/hestonmodelhelper.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_heston_model_helper_1ab9a3cc5ef19fb6bd45c05c9b6a220f12" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
        <definition>const Handle&lt;Quote&gt; QuantLib::HestonModelHelper::s0_</definition>
        <argsstring></argsstring>
        <name>s0_</name>
        <qualifiedname>QuantLib::HestonModelHelper::s0_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/equity/hestonmodelhelper.hpp" line="64" column="22" bodyfile="ql/models/equity/hestonmodelhelper.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_heston_model_helper_1a63d5449d93e8d4bb6211b9f596065b92" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::HestonModelHelper::strikePrice_</definition>
        <argsstring></argsstring>
        <name>strikePrice_</name>
        <qualifiedname>QuantLib::HestonModelHelper::strikePrice_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/equity/hestonmodelhelper.hpp" line="65" column="20" bodyfile="ql/models/equity/hestonmodelhelper.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_heston_model_helper_1a944c8beb4e2fbebc10da7049d41749fd" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
        <definition>const Handle&lt;YieldTermStructure&gt; QuantLib::HestonModelHelper::riskFreeRate_</definition>
        <argsstring></argsstring>
        <name>riskFreeRate_</name>
        <qualifiedname>QuantLib::HestonModelHelper::riskFreeRate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/equity/hestonmodelhelper.hpp" line="66" column="22" bodyfile="ql/models/equity/hestonmodelhelper.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_heston_model_helper_1ae8eb199f5c834f915fe02de37efbfc73" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
        <definition>const Handle&lt;YieldTermStructure&gt; QuantLib::HestonModelHelper::dividendYield_</definition>
        <argsstring></argsstring>
        <name>dividendYield_</name>
        <qualifiedname>QuantLib::HestonModelHelper::dividendYield_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/equity/hestonmodelhelper.hpp" line="67" column="22" bodyfile="ql/models/equity/hestonmodelhelper.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_heston_model_helper_1a81fa458207488f1e64c4fda7db3969c7" prot="private" static="no" mutable="yes">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::HestonModelHelper::exerciseDate_</definition>
        <argsstring></argsstring>
        <name>exerciseDate_</name>
        <qualifiedname>QuantLib::HestonModelHelper::exerciseDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/equity/hestonmodelhelper.hpp" line="68" column="22" bodyfile="ql/models/equity/hestonmodelhelper.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_heston_model_helper_1af7353548a7346c850216b3823b594f6a" prot="private" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>Time QuantLib::HestonModelHelper::tau_</definition>
        <argsstring></argsstring>
        <name>tau_</name>
        <qualifiedname>QuantLib::HestonModelHelper::tau_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/equity/hestonmodelhelper.hpp" line="69" column="22" bodyfile="ql/models/equity/hestonmodelhelper.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_heston_model_helper_1a814eede7410d0064dabbf5f3b773b418" prot="private" static="no" mutable="yes">
        <type>Option::Type</type>
        <definition>Option::Type QuantLib::HestonModelHelper::type_</definition>
        <argsstring></argsstring>
        <name>type_</name>
        <qualifiedname>QuantLib::HestonModelHelper::type_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/equity/hestonmodelhelper.hpp" line="70" column="30" bodyfile="ql/models/equity/hestonmodelhelper.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_heston_model_helper_1a8c7879efd7550b690df13684c620c8ee" prot="private" static="no" mutable="yes">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_vanilla_option" kindref="compound">VanillaOption</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;VanillaOption&gt; QuantLib::HestonModelHelper::option_</definition>
        <argsstring></argsstring>
        <name>option_</name>
        <qualifiedname>QuantLib::HestonModelHelper::option_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/equity/hestonmodelhelper.hpp" line="71" column="33" bodyfile="ql/models/equity/hestonmodelhelper.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_heston_model_helper_1af114134ccf28238f42fa09b9bf62d96d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::HestonModelHelper::HestonModelHelper</definition>
        <argsstring>(const Period &amp;maturity, Calendar calendar, Real s0, Real strikePrice, const Handle&lt; Quote &gt; &amp;volatility, const Handle&lt; YieldTermStructure &gt; &amp;riskFreeRate, const Handle&lt; YieldTermStructure &gt; &amp;dividendYield, BlackCalibrationHelper::CalibrationErrorType errorType=BlackCalibrationHelper::RelativePriceError)</argsstring>
        <name>HestonModelHelper</name>
        <qualifiedname>QuantLib::HestonModelHelper::HestonModelHelper</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>maturity</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref></type>
          <declname>calendar</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>s0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>strikePrice</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &amp;</type>
          <declname>volatility</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>riskFreeRate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>dividendYield</declname>
        </param>
        <param>
          <type>BlackCalibrationHelper::CalibrationErrorType</type>
          <declname>errorType</declname>
          <defval>BlackCalibrationHelper::RelativePriceError</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/equity/hestonmodelhelper.hpp" line="36" column="9" bodyfile="ql/models/equity/hestonmodelhelper.cpp" bodystart="33" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_heston_model_helper_1a7dd269e7f40c0fc9a59dbd33dc5f18e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::HestonModelHelper::HestonModelHelper</definition>
        <argsstring>(const Period &amp;maturity, Calendar calendar, const Handle&lt; Quote &gt; &amp;s0, Real strikePrice, const Handle&lt; Quote &gt; &amp;volatility, const Handle&lt; YieldTermStructure &gt; &amp;riskFreeRate, const Handle&lt; YieldTermStructure &gt; &amp;dividendYield, BlackCalibrationHelper::CalibrationErrorType errorType=BlackCalibrationHelper::RelativePriceError)</argsstring>
        <name>HestonModelHelper</name>
        <qualifiedname>QuantLib::HestonModelHelper::HestonModelHelper</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>maturity</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref></type>
          <declname>calendar</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &amp;</type>
          <declname>s0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>strikePrice</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &amp;</type>
          <declname>volatility</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>riskFreeRate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>dividendYield</declname>
        </param>
        <param>
          <type>BlackCalibrationHelper::CalibrationErrorType</type>
          <declname>errorType</declname>
          <defval>BlackCalibrationHelper::RelativePriceError</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/equity/hestonmodelhelper.hpp" line="46" column="9" bodyfile="ql/models/equity/hestonmodelhelper.cpp" bodystart="48" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_heston_model_helper_1aff30b9b02da5bf3c17ab46166c186c29" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::HestonModelHelper::addTimesTo</definition>
        <argsstring>(std::list&lt; Time &gt; &amp;) const override</argsstring>
        <name>addTimesTo</name>
        <qualifiedname>QuantLib::HestonModelHelper::addTimesTo</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_black_calibration_helper_1a588593059372e6a4fd3a5d8f321c6eff">addTimesTo</reimplements>
        <param>
          <type>std::list&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/equity/hestonmodelhelper.hpp" line="56" column="14" bodyfile="ql/models/equity/hestonmodelhelper.hpp" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_heston_model_helper_1a1491b44fc695f84e2cd798aa18db7c03" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::HestonModelHelper::performCalculations</definition>
        <argsstring>() const override</argsstring>
        <name>performCalculations</name>
        <qualifiedname>QuantLib::HestonModelHelper::performCalculations</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_black_calibration_helper_1ad61f4667f3db57d46fdd71ea49bd6433">performCalculations</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must implement any calculations which must be (re)done in order to calculate the desired results. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/equity/hestonmodelhelper.hpp" line="57" column="14" bodyfile="ql/models/equity/hestonmodelhelper.cpp" bodystart="64" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_heston_model_helper_1a97a850982c12b5143b0dedda35d06b94" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::HestonModelHelper::modelValue</definition>
        <argsstring>() const override</argsstring>
        <name>modelValue</name>
        <qualifiedname>QuantLib::HestonModelHelper::modelValue</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_black_calibration_helper_1a14a74949a453678460f9b723c047eb71">modelValue</reimplements>
        <briefdescription>
<para>returns the price of the instrument according to the model </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/equity/hestonmodelhelper.hpp" line="58" column="14" bodyfile="ql/models/equity/hestonmodelhelper.cpp" bodystart="80" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_heston_model_helper_1aab3916bce5fe58f2f979b58f06b734c6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::HestonModelHelper::blackPrice</definition>
        <argsstring>(Real volatility) const override</argsstring>
        <name>blackPrice</name>
        <qualifiedname>QuantLib::HestonModelHelper::blackPrice</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_black_calibration_helper_1a5ad3a0f6853a78be83832da1dd452e88">blackPrice</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>volatility</declname>
        </param>
        <briefdescription>
<para>Black or Bachelier price given a volatility. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/equity/hestonmodelhelper.hpp" line="59" column="14" bodyfile="ql/models/equity/hestonmodelhelper.cpp" bodystart="86" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_heston_model_helper_1a0705d9c7b4271a0fcd6efedb626d3df3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>Time QuantLib::HestonModelHelper::maturity</definition>
        <argsstring>() const</argsstring>
        <name>maturity</name>
        <qualifiedname>QuantLib::HestonModelHelper::maturity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/equity/hestonmodelhelper.hpp" line="60" column="14" bodyfile="ql/models/equity/hestonmodelhelper.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>calibration helper for Heston model </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::BlackCalibrationHelper</label>
        <link refid="class_quant_lib_1_1_black_calibration_helper"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::CalibrationHelper</label>
        <link refid="class_quant_lib_1_1_calibration_helper"/>
      </node>
      <node id="1">
        <label>QuantLib::HestonModelHelper</label>
        <link refid="class_quant_lib_1_1_heston_model_helper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::BlackCalibrationHelper</label>
        <link refid="class_quant_lib_1_1_black_calibration_helper"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>volatility_</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::CalibrationHelper</label>
        <link refid="class_quant_lib_1_1_calibration_helper"/>
      </node>
      <node id="7">
        <label>QuantLib::Handle&lt; QuantLib::Quote &gt;</label>
        <link refid="class_quant_lib_1_1_handle"/>
      </node>
      <node id="1">
        <label>QuantLib::HestonModelHelper</label>
        <link refid="class_quant_lib_1_1_heston_model_helper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </collaborationgraph>
    <location file="ql/models/equity/hestonmodelhelper.hpp" line="34" column="5" bodyfile="ql/models/equity/hestonmodelhelper.hpp" bodystart="34" bodyend="72"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_heston_model_helper_1aff30b9b02da5bf3c17ab46166c186c29" prot="public" virt="virtual"><scope>QuantLib::HestonModelHelper</scope><name>addTimesTo</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a02070ea7442d30625992c1711030d4b8" prot="protected" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>alwaysForward_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a17c9433135a259e4776baec66204a484" prot="public" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>alwaysForwardNotifications</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1a477df55babc564e206fcf320cc6eb24c" prot="public" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>BlackCalibrationHelper</name></member>
      <member refid="class_quant_lib_1_1_heston_model_helper_1aab3916bce5fe58f2f979b58f06b734c6" prot="public" virt="virtual"><scope>QuantLib::HestonModelHelper</scope><name>blackPrice</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a5244c7f83592375a0ea9048296435fd1" prot="protected" virt="virtual"><scope>QuantLib::HestonModelHelper</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a58b4986a80efa18634483a92c121e26e" prot="protected" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>calculated_</name></member>
      <member refid="class_quant_lib_1_1_heston_model_helper_1a2be5f8557325b7bd40880a8d6b66943e" prot="private" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>calendar_</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1a2722e738c93c59974863f478ab102a58" prot="public" virt="virtual"><scope>QuantLib::HestonModelHelper</scope><name>calibrationError</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1ad0c37f18b5a7437948984d502cf452d1" prot="public" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>CalibrationErrorType</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::HestonModelHelper</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_heston_model_helper_1ae8eb199f5c834f915fe02de37efbfc73" prot="private" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>dividendYield_</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1aa2a18de0c484abc5a4df19bc98e9d84d" prot="protected" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>engine_</name></member>
      <member refid="class_quant_lib_1_1_heston_model_helper_1a81fa458207488f1e64c4fda7db3969c7" prot="private" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>exerciseDate_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1afac6ee19c3107c453e1347dd8000e023" prot="public" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>forwardFirstNotificationOnly</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7157f41e83f2c5d924f5c5bafda04d1d" prot="public" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>freeze</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7bb721fe00c6854e602758aba629ab77" prot="protected" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>frozen_</name></member>
      <member refid="class_quant_lib_1_1_heston_model_helper_1af114134ccf28238f42fa09b9bf62d96d" prot="public" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>HestonModelHelper</name></member>
      <member refid="class_quant_lib_1_1_heston_model_helper_1a7dd269e7f40c0fc9a59dbd33dc5f18e4" prot="public" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>HestonModelHelper</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1a4a3a58fc494790845a1866d1c9a32e15" prot="public" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>impliedVolatility</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1ad0c37f18b5a7437948984d502cf452d1a6292b805aac22ccbdfb4c2aa7d84b715" prot="public" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>ImpliedVolError</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a0a7c5d42815a4e16ee2158e24dbfc748" prot="public" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>isCalculated</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a26f18f4ff7faaaebd8eae50e064b493e" prot="public" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>LazyObject</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1aa780b826711423299ee216cd8ccc40d0" prot="public" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>marketValue</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1a4953b2c78a885a3c1153dcd4a7e25081" prot="protected" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>marketValue_</name></member>
      <member refid="class_quant_lib_1_1_heston_model_helper_1a0705d9c7b4271a0fcd6efedb626d3df3" prot="public" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>maturity</name></member>
      <member refid="class_quant_lib_1_1_heston_model_helper_1ae818e7dea3bddd35bbe8a56191cc0933" prot="private" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>maturity_</name></member>
      <member refid="class_quant_lib_1_1_heston_model_helper_1a97a850982c12b5143b0dedda35d06b94" prot="public" virt="virtual"><scope>QuantLib::HestonModelHelper</scope><name>modelValue</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::HestonModelHelper</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::HestonModelHelper</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::HestonModelHelper</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::HestonModelHelper</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::HestonModelHelper</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::QuantLib::Observer::"><scope>QuantLib::HestonModelHelper</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_heston_model_helper_1a8c7879efd7550b690df13684c620c8ee" prot="private" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>option_</name></member>
      <member refid="class_quant_lib_1_1_heston_model_helper_1a1491b44fc695f84e2cd798aa18db7c03" prot="public" virt="virtual"><scope>QuantLib::HestonModelHelper</scope><name>performCalculations</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1ad0c37f18b5a7437948984d502cf452d1a02ff583d39aaad1fdc360d1ebfd6fa1b" prot="public" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>PriceError</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a70c9b24e50132408d8d9ce4f6674662a" prot="public" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>recalculate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1ad0c37f18b5a7437948984d502cf452d1af6737ba30d0d15e1d859ca571e22cc7b" prot="public" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>RelativePriceError</name></member>
      <member refid="class_quant_lib_1_1_heston_model_helper_1a944c8beb4e2fbebc10da7049d41749fd" prot="private" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>riskFreeRate_</name></member>
      <member refid="class_quant_lib_1_1_heston_model_helper_1ab9a3cc5ef19fb6bd45c05c9b6a220f12" prot="private" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>s0_</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1a494a781c1b9f32d46166aac427e368af" prot="public" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>setPricingEngine</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1a313c93ae9ad8622c93afe6d76474271f" prot="protected" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>shift_</name></member>
      <member refid="class_quant_lib_1_1_heston_model_helper_1a63d5449d93e8d4bb6211b9f596065b92" prot="private" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>strikePrice_</name></member>
      <member refid="class_quant_lib_1_1_heston_model_helper_1af7353548a7346c850216b3823b594f6a" prot="private" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>tau_</name></member>
      <member refid="class_quant_lib_1_1_heston_model_helper_1a814eede7410d0064dabbf5f3b773b418" prot="private" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>type_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a2e0e4786666453024b9d4e0761f2770b" prot="public" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>unfreeze</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1adee2bf49be5c4c78736be293321a856d" prot="public" virt="virtual"><scope>QuantLib::HestonModelHelper</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1adb2295d22872b7f624239b3ad7f6f73b" prot="public" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>volatility</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1a7475b5378fd94c1e93c2909ec1a396b1" prot="protected" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>volatility_</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1af91f1b9770402e12ac06bda4d401c510" prot="public" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>volatilityType</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1a36706d6fac4b20c8cf294c1f8a7a2e16" prot="protected" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>volatilityType_</name></member>
      <member refid="class_quant_lib_1_1_calibration_helper_1a54ce4cbc7441b8851a293066e206bbe4" prot="public" virt="virtual"><scope>QuantLib::HestonModelHelper</scope><name>~CalibrationHelper</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a9d719c43bb627177a90d7d12324a2d6e" prot="public" virt="non-virtual"><scope>QuantLib::HestonModelHelper</scope><name>~LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::HestonModelHelper</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::HestonModelHelper</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_c_p_i_volatility_surface" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::CPIVolatilitySurface</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_volatility_term_structure" prot="public" virt="non-virtual">QuantLib::VolatilityTermStructure</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_constant_c_p_i_volatility" prot="public" virt="non-virtual">QuantLib::ConstantCPIVolatility</derivedcompoundref>
    <includes refid="cpivolatilitystructure_8hpp" local="no">cpivolatilitystructure.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Limits</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_p_i_volatility_surface_1a89165dac8bf5277ab083562de2bfd207" prot="protected" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
        <definition>Volatility QuantLib::CPIVolatilitySurface::baseLevel_</definition>
        <argsstring></argsstring>
        <name>baseLevel_</name>
        <qualifiedname>QuantLib::CPIVolatilitySurface::baseLevel_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp" line="135" column="28" bodyfile="ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_p_i_volatility_surface_1a952d0adaf63e83c17244717e05e07fb0" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref></type>
        <definition>Period QuantLib::CPIVolatilitySurface::observationLag_</definition>
        <argsstring></argsstring>
        <name>observationLag_</name>
        <qualifiedname>QuantLib::CPIVolatilitySurface::observationLag_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp" line="137" column="16" bodyfile="ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_p_i_volatility_surface_1a8e01cd481367c8c8600400c120906508" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
        <definition>Frequency QuantLib::CPIVolatilitySurface::frequency_</definition>
        <argsstring></argsstring>
        <name>frequency_</name>
        <qualifiedname>QuantLib::CPIVolatilitySurface::frequency_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp" line="138" column="19" bodyfile="ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_p_i_volatility_surface_1addc21489d99e39ff26ba561025447cff" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::CPIVolatilitySurface::indexIsInterpolated_</definition>
        <argsstring></argsstring>
        <name>indexIsInterpolated_</name>
        <qualifiedname>QuantLib::CPIVolatilitySurface::indexIsInterpolated_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp" line="139" column="14" bodyfile="ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_volatility_surface_1a15f68207d7a83f4558ef4be83a6d29e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CPIVolatilitySurface::minStrike</definition>
        <argsstring>() const override=0</argsstring>
        <name>minStrike</name>
        <qualifiedname>QuantLib::CPIVolatilitySurface::minStrike</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_volatility_term_structure_1a71a5c8f0fb8d9d478126f79d975cb26f">minStrike</reimplements>
        <reimplementedby refid="class_quant_lib_1_1_constant_c_p_i_volatility_1ab7a1c2334b92292420e6da47eeeaf960">minStrike</reimplementedby>
        <briefdescription>
<para>the minimum strike for which the term structure can return vols </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp" line="120" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_volatility_surface_1a96d3a80deac3a62050847c0200c233c3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CPIVolatilitySurface::maxStrike</definition>
        <argsstring>() const override=0</argsstring>
        <name>maxStrike</name>
        <qualifiedname>QuantLib::CPIVolatilitySurface::maxStrike</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_volatility_term_structure_1a31f164f3562124b7de3ea6caf0af08a9">maxStrike</reimplements>
        <reimplementedby refid="class_quant_lib_1_1_constant_c_p_i_volatility_1af9d7b45742f5e5d3324e94161b97976f">maxStrike</reimplementedby>
        <briefdescription>
<para>the maximum strike for which the term structure can return vols </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp" line="122" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_volatility_surface_1a52547f98f6834a49c369a7b1fe21f468" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::CPIVolatilitySurface::checkRange</definition>
        <argsstring>(const Date &amp;, Rate strike, bool extrapolate) const</argsstring>
        <name>checkRange</name>
        <qualifiedname>QuantLib::CPIVolatilitySurface::checkRange</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <defname>d</defname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp" line="125" column="22" bodyfile="ql/termstructures/volatility/inflation/cpivolatilitystructure.cpp" bodystart="52" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_volatility_surface_1a35129fca057ca6b97522e36f2346f73f" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::CPIVolatilitySurface::checkRange</definition>
        <argsstring>(Time, Rate strike, bool extrapolate) const</argsstring>
        <name>checkRange</name>
        <qualifiedname>QuantLib::CPIVolatilitySurface::checkRange</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <defname>t</defname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp" line="126" column="22" bodyfile="ql/termstructures/volatility/inflation/cpivolatilitystructure.cpp" bodystart="66" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_volatility_surface_1a5befe35dc814920ed19b6ed4408cff14" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
        <definition>virtual Volatility QuantLib::CPIVolatilitySurface::volatilityImpl</definition>
        <argsstring>(Time length, Rate strike) const =0</argsstring>
        <name>volatilityImpl</name>
        <qualifiedname>QuantLib::CPIVolatilitySurface::volatilityImpl</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_constant_c_p_i_volatility_1a63ff09fe40297e4bada79e6a6b7c2d89">volatilityImpl</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Implements the actual volatility surface calculation in derived classes e.g. bilinear interpolation. N.B. does not derive the surface. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp" line="132" column="28"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Volatility</header>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_volatility_surface_1a91fa75f2b6903d31d94d09c6d0b17150" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
        <definition>Volatility QuantLib::CPIVolatilitySurface::volatility</definition>
        <argsstring>(const Date &amp;maturityDate, Rate strike, const Period &amp;obsLag=Period(-1, Days), bool extrapolate=false) const</argsstring>
        <name>volatility</name>
        <qualifiedname>QuantLib::CPIVolatilitySurface::volatility</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>maturityDate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>obsLag</declname>
          <defval><ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref>(-1, Days)</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Returns the volatility for a given maturity date and strike rate. </para>
        </briefdescription>
        <detaileddescription>
<para>by default, inflation is observed with the lag of the term structure.</para>
<para>Because inflation is highly linked to dates (for interpolation, periods, etc) time-based overload of the methods are not provided. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp" line="59" column="20" bodyfile="ql/termstructures/volatility/inflation/cpivolatilitystructure.cpp" bodystart="80" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_volatility_surface_1a00af8304996c5312bd665221fe02b4a8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
        <definition>Volatility QuantLib::CPIVolatilitySurface::volatility</definition>
        <argsstring>(const Period &amp;optionTenor, Rate strike, const Period &amp;obsLag=Period(-1, Days), bool extrapolate=false) const</argsstring>
        <name>volatility</name>
        <qualifiedname>QuantLib::CPIVolatilitySurface::volatility</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>optionTenor</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>obsLag</declname>
          <defval><ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref>(-1, Days)</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>returns the volatility for a given option tenor and strike rate </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp" line="64" column="20" bodyfile="ql/termstructures/volatility/inflation/cpivolatilitystructure.cpp" bodystart="104" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_volatility_surface_1a781d4a97316e0b2889db7c0755addd81" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
        <definition>Volatility QuantLib::CPIVolatilitySurface::volatility</definition>
        <argsstring>(Time time, Rate strike) const</argsstring>
        <name>volatility</name>
        <qualifiedname>QuantLib::CPIVolatilitySurface::volatility</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the volatility for a given time and strike rate. No adjustments due to lags and interpolation are applied to the input time. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp" line="70" column="20" bodyfile="ql/termstructures/volatility/inflation/cpivolatilitystructure.cpp" bodystart="112" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_volatility_surface_1a615891684107d6c50fc1bcfdbb4b1829" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
        <definition>Volatility QuantLib::CPIVolatilitySurface::totalVariance</definition>
        <argsstring>(const Date &amp;exerciseDate, Rate strike, const Period &amp;obsLag=Period(-1, Days), bool extrapolate=false) const</argsstring>
        <name>totalVariance</name>
        <qualifiedname>QuantLib::CPIVolatilitySurface::totalVariance</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>exerciseDate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>obsLag</declname>
          <defval><ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref>(-1, Days)</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the total integrated variance for a given exercise date and strike rate.</para>
<para>Total integrated variance is useful because it scales out t for the optionlet pricing formulae. Note that it is called &quot;total&quot; because the surface does not know whether it represents Black, Bachelier or Displaced Diffusion variance. These are virtual so alternate connections between const vol and total var are possible. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp" line="81" column="28" bodyfile="ql/termstructures/volatility/inflation/cpivolatilitystructure.cpp" bodystart="139" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_volatility_surface_1a21df503f5dc81df52e03f419d39f832a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
        <definition>Volatility QuantLib::CPIVolatilitySurface::totalVariance</definition>
        <argsstring>(const Period &amp;optionTenor, Rate strike, const Period &amp;obsLag=Period(-1, Days), bool extrapolate=false) const</argsstring>
        <name>totalVariance</name>
        <qualifiedname>QuantLib::CPIVolatilitySurface::totalVariance</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>optionTenor</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>obsLag</declname>
          <defval><ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref>(-1, Days)</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the total integrated variance for a given option tenor and strike rate. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp" line="87" column="28" bodyfile="ql/termstructures/volatility/inflation/cpivolatilitystructure.cpp" bodystart="149" bodyend="155"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Inspectors</header>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_volatility_surface_1a62cf3c6482fffabf3af10eeeb80ecfce" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref></type>
        <definition>virtual Period QuantLib::CPIVolatilitySurface::observationLag</definition>
        <argsstring>() const</argsstring>
        <name>observationLag</name>
        <qualifiedname>QuantLib::CPIVolatilitySurface::observationLag</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The term structure observes with a lag that is usually different from the availability lag of the index. An inflation rate is given, by default, for the maturity requested assuming this lag. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp" line="100" column="24" bodyfile="ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_volatility_surface_1a1a0c92eeedab6b8fda755ebd33d08c5e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
        <definition>virtual Frequency QuantLib::CPIVolatilitySurface::frequency</definition>
        <argsstring>() const</argsstring>
        <name>frequency</name>
        <qualifiedname>QuantLib::CPIVolatilitySurface::frequency</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp" line="101" column="27" bodyfile="ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_volatility_surface_1aeabe32bfe394f8f2a2df2f3bf390c803" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool QuantLib::CPIVolatilitySurface::indexIsInterpolated</definition>
        <argsstring>() const</argsstring>
        <name>indexIsInterpolated</name>
        <qualifiedname>QuantLib::CPIVolatilitySurface::indexIsInterpolated</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp" line="102" column="22" bodyfile="ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp" bodystart="102" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_volatility_surface_1acc82f03f403a5c00f357d242c307614e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::CPIVolatilitySurface::baseDate</definition>
        <argsstring>() const</argsstring>
        <name>baseDate</name>
        <qualifiedname>QuantLib::CPIVolatilitySurface::baseDate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp" line="105" column="22" bodyfile="ql/termstructures/volatility/inflation/cpivolatilitystructure.cpp" bodystart="38" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_volatility_surface_1a0d55974440ae20c9bf604644b67bb9f0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>Time QuantLib::CPIVolatilitySurface::timeFromBase</definition>
        <argsstring>(const Date &amp;date, const Period &amp;obsLag=Period(-1, Days)) const</argsstring>
        <name>timeFromBase</name>
        <qualifiedname>QuantLib::CPIVolatilitySurface::timeFromBase</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>date</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>obsLag</declname>
          <defval><ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref>(-1, Days)</defval>
        </param>
        <briefdescription>
<para>base date will be in the past because of observation lag </para>
        </briefdescription>
        <detaileddescription>
<para>needed for total variance calculations </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp" line="107" column="22" bodyfile="ql/termstructures/volatility/inflation/cpivolatilitystructure.cpp" bodystart="117" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_volatility_surface_1a89cd02bfe64118c7fd8e2810df40c193" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
        <definition>virtual Volatility QuantLib::CPIVolatilitySurface::baseLevel</definition>
        <argsstring>() const</argsstring>
        <name>baseLevel</name>
        <qualifiedname>QuantLib::CPIVolatilitySurface::baseLevel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp" line="110" column="28" bodyfile="ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp" bodystart="110" bodyend="114"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_volatility_surface_1a7c2421be99ba8dd24bc5a4facad8c62c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::CPIVolatilitySurface::CPIVolatilitySurface</definition>
        <argsstring>(Natural settlementDays, const Calendar &amp;, BusinessDayConvention bdc, const DayCounter &amp;dc, const Period &amp;observationLag, Frequency frequency, bool indexIsInterpolated)</argsstring>
        <name>CPIVolatilitySurface</name>
        <qualifiedname>QuantLib::CPIVolatilitySurface::CPIVolatilitySurface</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>settlementDays</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <defname>cal</defname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
          <declname>bdc</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>observationLag</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
          <declname>frequency</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>indexIsInterpolated</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>calculates the reference date based on the global evaluation date. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp" line="41" column="9" bodyfile="ql/termstructures/volatility/inflation/cpivolatilitystructure.cpp" bodystart="25" bodyend="35"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>zero inflation (i.e. CPI/RPI/HICP/etc.) volatility structures </para>
    </briefdescription>
    <detaileddescription>
<para>Abstract interface. <ref refid="struct_quant_lib_1_1_c_p_i" kindref="compound">CPI</ref> volatility is always with respect to some base date. Also deal with lagged observations of an index with a (usually different) availability lag. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::CPIVolatilitySurface</label>
        <link refid="class_quant_lib_1_1_c_p_i_volatility_surface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::ConstantCPIVolatility</label>
        <link refid="class_quant_lib_1_1_constant_c_p_i_volatility"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::Extrapolator</label>
        <link refid="class_quant_lib_1_1_extrapolator"/>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="3">
        <label>QuantLib::TermStructure</label>
        <link refid="class_quant_lib_1_1_term_structure"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::VolatilityTermStructure</label>
        <link refid="class_quant_lib_1_1_volatility_term_structure"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::CPIVolatilitySurface</label>
        <link refid="class_quant_lib_1_1_c_p_i_volatility_surface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>observationLag_</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::Calendar</label>
        <link refid="class_quant_lib_1_1_calendar"/>
      </node>
      <node id="6">
        <label>QuantLib::Extrapolator</label>
        <link refid="class_quant_lib_1_1_extrapolator"/>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="8">
        <label>QuantLib::Period</label>
        <link refid="class_quant_lib_1_1_period"/>
      </node>
      <node id="3">
        <label>QuantLib::TermStructure</label>
        <link refid="class_quant_lib_1_1_term_structure"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>calendar_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::VolatilityTermStructure</label>
        <link refid="class_quant_lib_1_1_volatility_term_structure"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp" line="36" column="5" bodyfile="ql/termstructures/volatility/inflation/cpivolatilitystructure.hpp" bodystart="36" bodyend="140"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_extrapolator_1ab3936a9b5b5c163d3e511437c16c1d9e" prot="public" virt="non-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>allowsExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_volatility_surface_1acc82f03f403a5c00f357d242c307614e" prot="public" virt="virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>baseDate</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_volatility_surface_1a89cd02bfe64118c7fd8e2810df40c193" prot="public" virt="virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>baseLevel</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_volatility_surface_1a89165dac8bf5277ab083562de2bfd207" prot="protected" virt="non-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>baseLevel_</name></member>
      <member refid="class_quant_lib_1_1_volatility_term_structure_1aaa1bad703d789d96a86c0d09f5bd0c05" prot="public" virt="virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>businessDayConvention</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac4ea5cbce495c9a47a44eeaedf7a9d45" prot="public" virt="virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>calendar</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a0a09e3fa8cdfbc9aa9685da0c35ccb90" prot="protected" virt="non-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>calendar_</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_volatility_surface_1a52547f98f6834a49c369a7b1fe21f468" prot="protected" virt="virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>checkRange</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_volatility_surface_1a35129fca057ca6b97522e36f2346f73f" prot="protected" virt="virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>checkRange</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1aa7297742ffbeeb0c7611f90a0f7d15bf" prot="protected" virt="non-virtual" ambiguityscope="QuantLib::VolatilityTermStructure::"><scope>QuantLib::CPIVolatilitySurface</scope><name>checkRange</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a4d246bcb13b7518a75088bf7cf01ea75" prot="protected" virt="non-virtual" ambiguityscope="QuantLib::VolatilityTermStructure::"><scope>QuantLib::CPIVolatilitySurface</scope><name>checkRange</name></member>
      <member refid="class_quant_lib_1_1_volatility_term_structure_1aad02ea6fe4bf30c662adaf01a46d5537" prot="protected" virt="non-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>checkStrike</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_volatility_surface_1a7c2421be99ba8dd24bc5a4facad8c62c" prot="public" virt="non-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>CPIVolatilitySurface</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac03e725e4e0685b209caa626b00924ca" prot="public" virt="virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>dayCounter</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1a6af69387d5cae0fe84d6a0c858406218" prot="public" virt="non-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>disableExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1a5f7b5650a44d6c63095bc739470c8bfb" prot="public" virt="non-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>enableExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1af1c3adaccdfaf07d3d07edaa234444f7" prot="public" virt="non-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>Extrapolator</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_volatility_surface_1a1a0c92eeedab6b8fda755ebd33d08c5e" prot="public" virt="virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>frequency</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_volatility_surface_1a8e01cd481367c8c8600400c120906508" prot="protected" virt="non-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>frequency_</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_volatility_surface_1aeabe32bfe394f8f2a2df2f3bf390c803" prot="public" virt="virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>indexIsInterpolated</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_volatility_surface_1addc21489d99e39ff26ba561025447cff" prot="protected" virt="non-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>indexIsInterpolated_</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ae9af756bbddc15962711f77f514f08fa" prot="public" virt="pure-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>maxDate</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_volatility_surface_1a96d3a80deac3a62050847c0200c233c3" prot="public" virt="pure-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>maxStrike</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a2f820c32e198e1046d97ca3dd9a807c5" prot="public" virt="virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>maxTime</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_volatility_surface_1a15f68207d7a83f4558ef4be83a6d29e4" prot="public" virt="pure-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>minStrike</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a8319e5c2c37b09a825d61210c9cb8e2a" prot="protected" virt="non-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>moving_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::"><scope>QuantLib::CPIVolatilitySurface</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::"><scope>QuantLib::CPIVolatilitySurface</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_volatility_surface_1a62cf3c6482fffabf3af10eeeb80ecfce" prot="public" virt="virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>observationLag</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_volatility_surface_1a952d0adaf63e83c17244717e05e07fb0" prot="protected" virt="non-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>observationLag_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::"><scope>QuantLib::CPIVolatilitySurface</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::CPIVolatilitySurface</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::QuantLib::Observable::"><scope>QuantLib::CPIVolatilitySurface</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::CPIVolatilitySurface</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_volatility_term_structure_1a22aae9cc9f2deb51962cc13092de98b5" prot="public" virt="non-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>optionDateFromTenor</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1accbf3d4af41db0333d456eb5616c4e1e" prot="public" virt="virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>referenceDate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1abeb79eefda70a9414f206ca9e70ced0f" prot="public" virt="virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>settlementDays</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac8365997e6d41134b4e0998fe6b4e949" prot="public" virt="non-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>TermStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a95764a49e0368b653eadbe619d9ef334" prot="public" virt="non-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>TermStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1aab73d2acafdc8fbdf9336e7084bd88a1" prot="public" virt="non-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>TermStructure</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_volatility_surface_1a0d55974440ae20c9bf604644b67bb9f0" prot="public" virt="virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>timeFromBase</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac8da61eb0f06ae07a35e8e4bbe7146b0" prot="public" virt="non-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>timeFromReference</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_volatility_surface_1a615891684107d6c50fc1bcfdbb4b1829" prot="public" virt="virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>totalVariance</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_volatility_surface_1a21df503f5dc81df52e03f419d39f832a" prot="public" virt="virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>totalVariance</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a016528f1fe9cabca6472d8f4776351e2" prot="public" virt="virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a2fcf1c78e57786ad5c123f52dbf619e8" prot="protected" virt="non-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>updated_</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_volatility_surface_1a91fa75f2b6903d31d94d09c6d0b17150" prot="public" virt="non-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>volatility</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_volatility_surface_1a00af8304996c5312bd665221fe02b4a8" prot="public" virt="non-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>volatility</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_volatility_surface_1a781d4a97316e0b2889db7c0755addd81" prot="public" virt="non-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>volatility</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_volatility_surface_1a5befe35dc814920ed19b6ed4408cff14" prot="protected" virt="pure-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>volatilityImpl</name></member>
      <member refid="class_quant_lib_1_1_volatility_term_structure_1adfc4d4619ecf74dd849ba4fdf0b36d22" prot="public" virt="non-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>VolatilityTermStructure</name></member>
      <member refid="class_quant_lib_1_1_volatility_term_structure_1aa43b8722cce970ee126cc5907026f860" prot="public" virt="non-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>VolatilityTermStructure</name></member>
      <member refid="class_quant_lib_1_1_volatility_term_structure_1a10cfe1d03a1cfd642e7608d019f2cafc" prot="public" virt="non-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>VolatilityTermStructure</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1af0ca0156436ffbce159183198eb27e2e" prot="public" virt="virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>~Extrapolator</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ad202ddcc14fc4a6c16686d6164d7b36c" prot="public" virt="non-virtual"><scope>QuantLib::CPIVolatilitySurface</scope><name>~TermStructure</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

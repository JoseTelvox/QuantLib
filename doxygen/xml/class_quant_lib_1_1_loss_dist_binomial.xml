<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_loss_dist_binomial" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::LossDistBinomial</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_loss_dist" prot="public" virt="non-virtual">QuantLib::LossDist</basecompoundref>
    <includes refid="lossdistribution_8hpp" local="no">lossdistribution.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_loss_dist_binomial_1aac9c45f83cf98ffaeb5333396d2ec2f7" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::LossDistBinomial::nBuckets_</definition>
        <argsstring></argsstring>
        <name>nBuckets_</name>
        <qualifiedname>QuantLib::LossDistBinomial::nBuckets_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/lossdistribution.hpp" line="109" column="14" bodyfile="ql/experimental/credit/lossdistribution.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_loss_dist_binomial_1a3499789ee8b8f6a86ca5ab0904bf8fcf" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::LossDistBinomial::maximum_</definition>
        <argsstring></argsstring>
        <name>maximum_</name>
        <qualifiedname>QuantLib::LossDistBinomial::maximum_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/lossdistribution.hpp" line="110" column="14" bodyfile="ql/experimental/credit/lossdistribution.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_loss_dist_binomial_1a31356e0d6566309c399384fdf76a6bfd" prot="private" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::LossDistBinomial::volume_</definition>
        <argsstring></argsstring>
        <name>volume_</name>
        <qualifiedname>QuantLib::LossDistBinomial::volume_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/lossdistribution.hpp" line="111" column="22" bodyfile="ql/experimental/credit/lossdistribution.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_loss_dist_binomial_1a99f8f65f7f012667085d0181535d23d2" prot="private" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::LossDistBinomial::n_</definition>
        <argsstring></argsstring>
        <name>n_</name>
        <qualifiedname>QuantLib::LossDistBinomial::n_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/lossdistribution.hpp" line="112" column="22" bodyfile="ql/experimental/credit/lossdistribution.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_loss_dist_binomial_1a1541c4a0f9bcbcbe6186d9cc615cba27" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::LossDistBinomial::probability_</definition>
        <argsstring></argsstring>
        <name>probability_</name>
        <qualifiedname>QuantLib::LossDistBinomial::probability_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/lossdistribution.hpp" line="113" column="29" bodyfile="ql/experimental/credit/lossdistribution.hpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_loss_dist_binomial_1a43a28e5ead30796eabaacc45b31657c6" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::LossDistBinomial::excessProbability_</definition>
        <argsstring></argsstring>
        <name>excessProbability_</name>
        <qualifiedname>QuantLib::LossDistBinomial::excessProbability_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/lossdistribution.hpp" line="114" column="29" bodyfile="ql/experimental/credit/lossdistribution.hpp" bodystart="114" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_loss_dist_binomial_1a63a9019396af228d2c5c9fca7a29871e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::LossDistBinomial::LossDistBinomial</definition>
        <argsstring>(Size nBuckets, Real maximum)</argsstring>
        <name>LossDistBinomial</name>
        <qualifiedname>QuantLib::LossDistBinomial::LossDistBinomial</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>nBuckets</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>maximum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/lossdistribution.hpp" line="97" column="9" bodyfile="ql/experimental/credit/lossdistribution.hpp" bodystart="97" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_loss_dist_binomial_1ae62259aed40c641e6b87f08e45ef44a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_distribution" kindref="compound">Distribution</ref></type>
        <definition>Distribution QuantLib::LossDistBinomial::operator()</definition>
        <argsstring>(Size n, Real volume, Real probability) const</argsstring>
        <name>operator()</name>
        <qualifiedname>QuantLib::LossDistBinomial::operator()</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>volume</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>probability</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/lossdistribution.hpp" line="99" column="22" bodyfile="ql/experimental/credit/lossdistribution.cpp" bodystart="146" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_loss_dist_binomial_1a6e32228313c0725e0e0c584c3b93554c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_distribution" kindref="compound">Distribution</ref></type>
        <definition>Distribution QuantLib::LossDistBinomial::operator()</definition>
        <argsstring>(const std::vector&lt; Real &gt; &amp;volumes, const std::vector&lt; Real &gt; &amp;probabilities) const override</argsstring>
        <name>operator()</name>
        <qualifiedname>QuantLib::LossDistBinomial::operator()</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_loss_dist_1ae7a8a47c84b11e3536851b85bf324752">operator()</reimplements>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>volumes</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>probabilities</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/lossdistribution.hpp" line="100" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_loss_dist_binomial_1a5074f4af6a4232a3b8526f7e0a301d06" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::LossDistBinomial::buckets</definition>
        <argsstring>() const override</argsstring>
        <name>buckets</name>
        <qualifiedname>QuantLib::LossDistBinomial::buckets</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_loss_dist_1aaf99a092c5bd885e8e8b1f5930a0e2aa">buckets</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/lossdistribution.hpp" line="102" column="14" bodyfile="ql/experimental/credit/lossdistribution.hpp" bodystart="102" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_loss_dist_binomial_1af434ad0c437b7db7cff614671018fd0f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::LossDistBinomial::maximum</definition>
        <argsstring>() const override</argsstring>
        <name>maximum</name>
        <qualifiedname>QuantLib::LossDistBinomial::maximum</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_loss_dist_1ae18fe2d871e5409706965ca7f60a3371">maximum</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/lossdistribution.hpp" line="103" column="14" bodyfile="ql/experimental/credit/lossdistribution.hpp" bodystart="103" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_loss_dist_binomial_1a72b8bfc25411b037b039a8e3d1732a6f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::LossDistBinomial::volume</definition>
        <argsstring>() const</argsstring>
        <name>volume</name>
        <qualifiedname>QuantLib::LossDistBinomial::volume</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/lossdistribution.hpp" line="104" column="14" bodyfile="ql/experimental/credit/lossdistribution.hpp" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_loss_dist_binomial_1a1fea0a865623ff1b1cca910fc90877b4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::LossDistBinomial::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>QuantLib::LossDistBinomial::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/lossdistribution.hpp" line="105" column="14" bodyfile="ql/experimental/credit/lossdistribution.hpp" bodystart="105" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_loss_dist_binomial_1a5dbddeb41ab66846f55679c4ab5caa3c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt; Real &gt; QuantLib::LossDistBinomial::probability</definition>
        <argsstring>() const</argsstring>
        <name>probability</name>
        <qualifiedname>QuantLib::LossDistBinomial::probability</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/lossdistribution.hpp" line="106" column="21" bodyfile="ql/experimental/credit/lossdistribution.hpp" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_loss_dist_binomial_1a4f774b6b0e5f13df51aab29ee9fe456a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt; Real &gt; QuantLib::LossDistBinomial::excessProbability</definition>
        <argsstring>() const</argsstring>
        <name>excessProbability</name>
        <qualifiedname>QuantLib::LossDistBinomial::excessProbability</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/lossdistribution.hpp" line="107" column="21" bodyfile="ql/experimental/credit/lossdistribution.hpp" bodystart="107" bodyend="107"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Binomial loss distribution. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::LossDist</label>
        <link refid="class_quant_lib_1_1_loss_dist"/>
      </node>
      <node id="1">
        <label>QuantLib::LossDistBinomial</label>
        <link refid="class_quant_lib_1_1_loss_dist_binomial"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::LossDist</label>
        <link refid="class_quant_lib_1_1_loss_dist"/>
      </node>
      <node id="1">
        <label>QuantLib::LossDistBinomial</label>
        <link refid="class_quant_lib_1_1_loss_dist_binomial"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/credit/lossdistribution.hpp" line="95" column="5" bodyfile="ql/experimental/credit/lossdistribution.hpp" bodystart="95" bodyend="115"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_loss_dist_1a8c77b060ce7166827d98de461fa2f01b" prot="public" virt="non-virtual"><scope>QuantLib::LossDistBinomial</scope><name>binomialProbabilityOfAtLeastNEvents</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_1acb7afb5f155bca79ca5875c078c088a5" prot="public" virt="non-virtual"><scope>QuantLib::LossDistBinomial</scope><name>binomialProbabilityOfNEvents</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_binomial_1a5074f4af6a4232a3b8526f7e0a301d06" prot="public" virt="virtual"><scope>QuantLib::LossDistBinomial</scope><name>buckets</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_binomial_1a4f774b6b0e5f13df51aab29ee9fe456a" prot="public" virt="non-virtual"><scope>QuantLib::LossDistBinomial</scope><name>excessProbability</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_binomial_1a43a28e5ead30796eabaacc45b31657c6" prot="private" virt="non-virtual"><scope>QuantLib::LossDistBinomial</scope><name>excessProbability_</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_1a2f119d845cb95500cb1d6ccdada4d7ab" prot="public" virt="non-virtual"><scope>QuantLib::LossDistBinomial</scope><name>LossDist</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_binomial_1a63a9019396af228d2c5c9fca7a29871e" prot="public" virt="non-virtual"><scope>QuantLib::LossDistBinomial</scope><name>LossDistBinomial</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_binomial_1af434ad0c437b7db7cff614671018fd0f" prot="public" virt="virtual"><scope>QuantLib::LossDistBinomial</scope><name>maximum</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_binomial_1a3499789ee8b8f6a86ca5ab0904bf8fcf" prot="private" virt="non-virtual"><scope>QuantLib::LossDistBinomial</scope><name>maximum_</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_binomial_1a99f8f65f7f012667085d0181535d23d2" prot="private" virt="non-virtual"><scope>QuantLib::LossDistBinomial</scope><name>n_</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_binomial_1aac9c45f83cf98ffaeb5333396d2ec2f7" prot="private" virt="non-virtual"><scope>QuantLib::LossDistBinomial</scope><name>nBuckets_</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_binomial_1ae62259aed40c641e6b87f08e45ef44a6" prot="public" virt="non-virtual"><scope>QuantLib::LossDistBinomial</scope><name>operator()</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_binomial_1a6e32228313c0725e0e0c584c3b93554c" prot="public" virt="virtual"><scope>QuantLib::LossDistBinomial</scope><name>operator()</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_binomial_1a5dbddeb41ab66846f55679c4ab5caa3c" prot="public" virt="non-virtual"><scope>QuantLib::LossDistBinomial</scope><name>probability</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_binomial_1a1541c4a0f9bcbcbe6186d9cc615cba27" prot="private" virt="non-virtual"><scope>QuantLib::LossDistBinomial</scope><name>probability_</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_1a49f3e025f1385e01cef46caa4671ecbb" prot="public" virt="non-virtual"><scope>QuantLib::LossDistBinomial</scope><name>probabilityOfAtLeastNEvents</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_1afb8d56a8594b6bb78d95a4d60338212c" prot="public" virt="non-virtual"><scope>QuantLib::LossDistBinomial</scope><name>probabilityOfNEvents</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_1a0957a883f318510faaa60118f67a850b" prot="public" virt="non-virtual"><scope>QuantLib::LossDistBinomial</scope><name>probabilityOfNEvents</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_binomial_1a1fea0a865623ff1b1cca910fc90877b4" prot="public" virt="non-virtual"><scope>QuantLib::LossDistBinomial</scope><name>size</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_binomial_1a72b8bfc25411b037b039a8e3d1732a6f" prot="public" virt="non-virtual"><scope>QuantLib::LossDistBinomial</scope><name>volume</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_binomial_1a31356e0d6566309c399384fdf76a6bfd" prot="private" virt="non-virtual"><scope>QuantLib::LossDistBinomial</scope><name>volume_</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_1a5c956aeba78889d83882e4cc28e950d6" prot="public" virt="virtual"><scope>QuantLib::LossDistBinomial</scope><name>~LossDist</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl" kind="class" language="C++" prot="public" final="yes">
    <compoundname>QuantLib::detail::XABRInterpolationImpl</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_interpolation_1_1template_impl" prot="public" virt="non-virtual">QuantLib::Interpolation::templateImpl&lt; I1, I2 &gt;</basecompoundref>
    <basecompoundref refid="class_quant_lib_1_1detail_1_1_x_a_b_r_coeff_holder" prot="public" virt="non-virtual">QuantLib::detail::XABRCoeffHolder&lt; Model &gt;</basecompoundref>
    <innerclass refid="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1_1_x_a_b_r_error" prot="private">QuantLib::detail::XABRInterpolationImpl::XABRError</innerclass>
    <templateparamlist>
      <param>
        <type>class I1</type>
      </param>
      <param>
        <type>class I2</type>
      </param>
      <param>
        <type>typename Model</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1a4eb44083757a7d3a416171b994034e5c" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_end_criteria" kindref="compound">EndCriteria</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;EndCriteria&gt; QuantLib::detail::XABRInterpolationImpl&lt; I1, I2, Model &gt;::endCriteria_</definition>
        <argsstring></argsstring>
        <name>endCriteria_</name>
        <qualifiedname>QuantLib::detail::XABRInterpolationImpl::endCriteria_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/xabrinterpolation.hpp" line="314" column="21" bodyfile="ql/math/interpolations/xabrinterpolation.hpp" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1a7715762b6b53e18a2a7c2be0d3d52356" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_optimization_method" kindref="compound">OptimizationMethod</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;OptimizationMethod&gt; QuantLib::detail::XABRInterpolationImpl&lt; I1, I2, Model &gt;::optMethod_</definition>
        <argsstring></argsstring>
        <name>optMethod_</name>
        <qualifiedname>QuantLib::detail::XABRInterpolationImpl::optMethod_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/xabrinterpolation.hpp" line="315" column="21" bodyfile="ql/math/interpolations/xabrinterpolation.hpp" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1a3dc0fb7f0ded6b57cd8ac4498d9ee353" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::detail::XABRInterpolationImpl&lt; I1, I2, Model &gt;::errorAccept_</definition>
        <argsstring></argsstring>
        <name>errorAccept_</name>
        <qualifiedname>QuantLib::detail::XABRInterpolationImpl::errorAccept_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/xabrinterpolation.hpp" line="316" column="16" bodyfile="ql/math/interpolations/xabrinterpolation.hpp" bodystart="316" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1a6591ce817d0aa7d9e61f2c0942f7473d" prot="private" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool QuantLib::detail::XABRInterpolationImpl&lt; I1, I2, Model &gt;::useMaxError_</definition>
        <argsstring></argsstring>
        <name>useMaxError_</name>
        <qualifiedname>QuantLib::detail::XABRInterpolationImpl::useMaxError_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/xabrinterpolation.hpp" line="317" column="16" bodyfile="ql/math/interpolations/xabrinterpolation.hpp" bodystart="317" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1ae4e6491b53f25365f8455b523f3a63f5" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>const Size QuantLib::detail::XABRInterpolationImpl&lt; I1, I2, Model &gt;::maxGuesses_</definition>
        <argsstring></argsstring>
        <name>maxGuesses_</name>
        <qualifiedname>QuantLib::detail::XABRInterpolationImpl::maxGuesses_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/xabrinterpolation.hpp" line="318" column="16" bodyfile="ql/math/interpolations/xabrinterpolation.hpp" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1ae19e06d1bff4f369b48bf88cbae74759" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::detail::XABRInterpolationImpl&lt; I1, I2, Model &gt;::vegaWeighted_</definition>
        <argsstring></argsstring>
        <name>vegaWeighted_</name>
        <qualifiedname>QuantLib::detail::XABRInterpolationImpl::vegaWeighted_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/xabrinterpolation.hpp" line="319" column="10" bodyfile="ql/math/interpolations/xabrinterpolation.hpp" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1ada7b9d98abedc8aab3c0ea0776097545" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_no_constraint" kindref="compound">NoConstraint</ref></type>
        <definition>NoConstraint QuantLib::detail::XABRInterpolationImpl&lt; I1, I2, Model &gt;::constraint_</definition>
        <argsstring></argsstring>
        <name>constraint_</name>
        <qualifiedname>QuantLib::detail::XABRInterpolationImpl::constraint_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/xabrinterpolation.hpp" line="320" column="18" bodyfile="ql/math/interpolations/xabrinterpolation.hpp" bodystart="320" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1acc9d858d438228cf968df16cd2f51a00" prot="private" static="no" mutable="no">
        <type>VolatilityType</type>
        <definition>VolatilityType QuantLib::detail::XABRInterpolationImpl&lt; I1, I2, Model &gt;::volatilityType_</definition>
        <argsstring></argsstring>
        <name>volatilityType_</name>
        <qualifiedname>QuantLib::detail::XABRInterpolationImpl::volatilityType_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/xabrinterpolation.hpp" line="321" column="20" bodyfile="ql/math/interpolations/xabrinterpolation.hpp" bodystart="321" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1a5659668084f3e693068bc9cf41804a59" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::detail::XABRInterpolationImpl&lt; I1, I2, Model &gt;::XABRInterpolationImpl</definition>
        <argsstring>(const I1 &amp;xBegin, const I1 &amp;xEnd, const I2 &amp;yBegin, Time t, const Real &amp;forward, const std::vector&lt; Real &gt; &amp;params, const std::vector&lt; bool &gt; &amp;paramIsFixed, bool vegaWeighted, ext::shared_ptr&lt; EndCriteria &gt; endCriteria, ext::shared_ptr&lt; OptimizationMethod &gt; optMethod, const Real errorAccept, const bool useMaxError, const Size maxGuesses, const std::vector&lt; Real &gt; &amp;addParams=std::vector&lt; Real &gt;(), VolatilityType volatilityType=VolatilityType::ShiftedLognormal)</argsstring>
        <name>XABRInterpolationImpl</name>
        <qualifiedname>QuantLib::detail::XABRInterpolationImpl::XABRInterpolationImpl</qualifiedname>
        <param>
          <type>const I1 &amp;</type>
          <declname>xBegin</declname>
        </param>
        <param>
          <type>const I1 &amp;</type>
          <declname>xEnd</declname>
        </param>
        <param>
          <type>const I2 &amp;</type>
          <declname>yBegin</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &amp;</type>
          <declname>forward</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>const std::vector&lt; bool &gt; &amp;</type>
          <declname>paramIsFixed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>vegaWeighted</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_end_criteria" kindref="compound">EndCriteria</ref> &gt;</type>
          <declname>endCriteria</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_optimization_method" kindref="compound">OptimizationMethod</ref> &gt;</type>
          <declname>optMethod</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>errorAccept</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>useMaxError</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>maxGuesses</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>addParams</declname>
          <defval>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;()</defval>
        </param>
        <param>
          <type>VolatilityType</type>
          <declname>volatilityType</declname>
          <defval>VolatilityType::ShiftedLognormal</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/xabrinterpolation.hpp" line="103" column="5" bodyfile="ql/math/interpolations/xabrinterpolation.hpp" bodystart="103" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1aa2297a1f44389c77c5c64b0d2e68e991" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::detail::XABRInterpolationImpl&lt; I1, I2, Model &gt;::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <qualifiedname>QuantLib::detail::XABRInterpolationImpl::update</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_interpolation_1_1_impl_1a709278c2ce75ffc2bea488619d4997e6">update</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/xabrinterpolation.hpp" line="137" column="10" bodyfile="ql/math/interpolations/xabrinterpolation.hpp" bodystart="137" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1a2b731f2b492e020f7e24ed8f07b20dad" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::detail::XABRInterpolationImpl&lt; I1, I2, Model &gt;::value</definition>
        <argsstring>(Real x) const override</argsstring>
        <name>value</name>
        <qualifiedname>QuantLib::detail::XABRInterpolationImpl::value</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_interpolation_1_1_impl_1ad99198f18adb259c124fd2df7f2c4dea">value</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/xabrinterpolation.hpp" line="239" column="10" bodyfile="ql/math/interpolations/xabrinterpolation.hpp" bodystart="239" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1a394529cb168b386a5daf9b52483002bf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::detail::XABRInterpolationImpl&lt; I1, I2, Model &gt;::primitive</definition>
        <argsstring>(Real) const override</argsstring>
        <name>primitive</name>
        <qualifiedname>QuantLib::detail::XABRInterpolationImpl::primitive</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_interpolation_1_1_impl_1ac7ada137d995e5b5afa466e1ea64f3af">primitive</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/xabrinterpolation.hpp" line="241" column="10" bodyfile="ql/math/interpolations/xabrinterpolation.hpp" bodystart="241" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1aefae45e633a4994b32f4811ecfefdadc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::detail::XABRInterpolationImpl&lt; I1, I2, Model &gt;::derivative</definition>
        <argsstring>(Real) const override</argsstring>
        <name>derivative</name>
        <qualifiedname>QuantLib::detail::XABRInterpolationImpl::derivative</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_interpolation_1_1_impl_1aa3d5009598ca4940c1d1abb87e821c3d">derivative</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/xabrinterpolation.hpp" line="242" column="10" bodyfile="ql/math/interpolations/xabrinterpolation.hpp" bodystart="242" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1ac23cb054c91ee50dab37698e63d5ac38" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::detail::XABRInterpolationImpl&lt; I1, I2, Model &gt;::secondDerivative</definition>
        <argsstring>(Real) const override</argsstring>
        <name>secondDerivative</name>
        <qualifiedname>QuantLib::detail::XABRInterpolationImpl::secondDerivative</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_interpolation_1_1_impl_1a6274e96e3ee0da2e2a2d1dfd842932a7">secondDerivative</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/xabrinterpolation.hpp" line="243" column="10" bodyfile="ql/math/interpolations/xabrinterpolation.hpp" bodystart="243" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1a6f3f9f2a7569ec38f37303e50378a7c8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::detail::XABRInterpolationImpl&lt; I1, I2, Model &gt;::interpolationSquaredError</definition>
        <argsstring>() const</argsstring>
        <name>interpolationSquaredError</name>
        <qualifiedname>QuantLib::detail::XABRInterpolationImpl::interpolationSquaredError</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/xabrinterpolation.hpp" line="246" column="10" bodyfile="ql/math/interpolations/xabrinterpolation.hpp" bodystart="246" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1a7f93f438bd949e180e58a2c8149f4614" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::detail::XABRInterpolationImpl&lt; I1, I2, Model &gt;::interpolationErrors</definition>
        <argsstring>() const</argsstring>
        <name>interpolationErrors</name>
        <qualifiedname>QuantLib::detail::XABRInterpolationImpl::interpolationErrors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/xabrinterpolation.hpp" line="259" column="11" bodyfile="ql/math/interpolations/xabrinterpolation.hpp" bodystart="259" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1a9baff17c6dd9177437209e8a917f2cc8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::detail::XABRInterpolationImpl&lt; I1, I2, Model &gt;::interpolationError</definition>
        <argsstring>() const</argsstring>
        <name>interpolationError</name>
        <qualifiedname>QuantLib::detail::XABRInterpolationImpl::interpolationError</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/xabrinterpolation.hpp" line="271" column="10" bodyfile="ql/math/interpolations/xabrinterpolation.hpp" bodystart="271" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1a75b5ae3a15194f6ac6f7be2e5927a5c2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::detail::XABRInterpolationImpl&lt; I1, I2, Model &gt;::interpolationMaxError</definition>
        <argsstring>() const</argsstring>
        <name>interpolationMaxError</name>
        <qualifiedname>QuantLib::detail::XABRInterpolationImpl::interpolationMaxError</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/xabrinterpolation.hpp" line="277" column="10" bodyfile="ql/math/interpolations/xabrinterpolation.hpp" bodystart="277" bodyend="286"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>QuantLib::Interpolation::Impl</label>
        <link refid="class_quant_lib_1_1_interpolation_1_1_impl"/>
      </node>
      <node id="2">
        <label>QuantLib::Interpolation::templateImpl&lt; I1, I2 &gt;</label>
        <link refid="class_quant_lib_1_1_interpolation_1_1template_impl"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::detail::XABRCoeffHolder&lt; Model &gt;</label>
        <link refid="class_quant_lib_1_1detail_1_1_x_a_b_r_coeff_holder"/>
      </node>
      <node id="1">
        <label>QuantLib::detail::XABRInterpolationImpl&lt; I1, I2, Model &gt;</label>
        <link refid="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>QuantLib::Interpolation::Impl</label>
        <link refid="class_quant_lib_1_1_interpolation_1_1_impl"/>
      </node>
      <node id="2">
        <label>QuantLib::Interpolation::templateImpl&lt; I1, I2 &gt;</label>
        <link refid="class_quant_lib_1_1_interpolation_1_1template_impl"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::detail::XABRCoeffHolder&lt; Model &gt;</label>
        <link refid="class_quant_lib_1_1detail_1_1_x_a_b_r_coeff_holder"/>
      </node>
      <node id="1">
        <label>QuantLib::detail::XABRInterpolationImpl&lt; I1, I2, Model &gt;</label>
        <link refid="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/math/interpolations/xabrinterpolation.hpp" line="100" column="1" bodyfile="ql/math/interpolations/xabrinterpolation.hpp" bodystart="101" bodyend="322"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1detail_1_1_x_a_b_r_coeff_holder_1a8cbafc57cfbedd1709cf0ad158b9a9e4" prot="public" virt="non-virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>addParams_</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1ada7b9d98abedc8aab3c0ea0776097545" prot="private" virt="non-virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>constraint_</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1aefae45e633a4994b32f4811ecfefdadc" prot="public" virt="virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>derivative</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1a4eb44083757a7d3a416171b994034e5c" prot="private" virt="non-virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>endCriteria_</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_x_a_b_r_coeff_holder_1ae2fb429a7354ee49e9fb73afc6bfa7ea" prot="public" virt="non-virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>error_</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1a3dc0fb7f0ded6b57cd8ac4498d9ee353" prot="private" virt="non-virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>errorAccept_</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_x_a_b_r_coeff_holder_1aa4f0d7b5975728fdb007de1053a7ba74" prot="public" virt="non-virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>forward_</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1a9baff17c6dd9177437209e8a917f2cc8" prot="public" virt="non-virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>interpolationError</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1a7f93f438bd949e180e58a2c8149f4614" prot="public" virt="non-virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>interpolationErrors</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1a75b5ae3a15194f6ac6f7be2e5927a5c2" prot="public" virt="non-virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>interpolationMaxError</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1a6f3f9f2a7569ec38f37303e50378a7c8" prot="public" virt="non-virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>interpolationSquaredError</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1_1template_impl_1aa1a96576884df7179393ce68928a85c2" prot="public" virt="virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>isInRange</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1_1template_impl_1a2884268a09723fa87ec7146750d2d46c" prot="protected" virt="non-virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>locate</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_x_a_b_r_coeff_holder_1a7f0179cc5ec334a673a46c3d508e8c87" prot="public" virt="non-virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>maxError_</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1ae4e6491b53f25365f8455b523f3a63f5" prot="private" virt="non-virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>maxGuesses_</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_x_a_b_r_coeff_holder_1a72cf38114f0afadd9cc38ed03d7b2b8c" prot="public" virt="non-virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>modelInstance_</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1a7715762b6b53e18a2a7c2be0d3d52356" prot="private" virt="non-virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>optMethod_</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_x_a_b_r_coeff_holder_1a0ab817a143b85ef3f2887381bc148579" prot="public" virt="non-virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>paramIsFixed_</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_x_a_b_r_coeff_holder_1af7965041aa1ae661315f3d7f4e3cbd0e" prot="public" virt="non-virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>params_</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1a394529cb168b386a5daf9b52483002bf" prot="public" virt="virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>primitive</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1ac23cb054c91ee50dab37698e63d5ac38" prot="public" virt="virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>secondDerivative</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_x_a_b_r_coeff_holder_1affaaa238923f982496f0774a05967bfb" prot="public" virt="non-virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>t_</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1_1template_impl_1afd70a6545d200055b1e7fd3ac6cc3f45" prot="public" virt="non-virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>templateImpl</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1aa2297a1f44389c77c5c64b0d2e68e991" prot="public" virt="virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_x_a_b_r_coeff_holder_1a490d0a3bfb88a302b19d4166904b6bc5" prot="public" virt="non-virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>updateModelInstance</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1a6591ce817d0aa7d9e61f2c0942f7473d" prot="private" virt="non-virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>useMaxError_</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1a2b731f2b492e020f7e24ed8f07b20dad" prot="public" virt="virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>value</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1ae19e06d1bff4f369b48bf88cbae74759" prot="private" virt="non-virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>vegaWeighted_</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1acc9d858d438228cf968df16cd2f51a00" prot="private" virt="non-virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>volatilityType_</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_x_a_b_r_coeff_holder_1ab5f9dfc07af5ffb00ce9e8dd58d0c49f" prot="public" virt="non-virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>weights_</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_x_a_b_r_coeff_holder_1aa81fb40e00c8f97b028386530187c523" prot="public" virt="non-virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>XABRCoeffHolder</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_x_a_b_r_coeff_holder_1aa94e707ddb4c7dd8b49236deb91a00e2" prot="public" virt="non-virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>XABREndCriteria_</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl_1a5659668084f3e693068bc9cf41804a59" prot="public" virt="non-virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>XABRInterpolationImpl</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1_1template_impl_1a4224a56b414e92505e5b1e2b83282d80" prot="protected" virt="non-virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>xBegin_</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1_1template_impl_1ae31c6c02580a0b25b0e9c64fad90604a" prot="protected" virt="non-virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>xEnd_</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1_1template_impl_1af2ee8595e097522bbac466d2e036a536" prot="public" virt="virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>xMax</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1_1template_impl_1adfc3310f6f3ea269f80c21cbc9cd2480" prot="public" virt="virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>xMin</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1_1template_impl_1ae58e26280490791d1704b518e4461713" prot="public" virt="virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>xValues</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1_1template_impl_1adef37d429d0186d836878f1cc9ae3c71" prot="protected" virt="non-virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>yBegin_</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1_1template_impl_1a745482b424f51c5726caa0cc6412f1a0" prot="public" virt="virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>yValues</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1_1_impl_1aac2065f5fde38ec969bdcb7a99430e92" prot="public" virt="virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>~Impl</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_x_a_b_r_coeff_holder_1a094b8b0aee627312c8427c5bedfdd7e7" prot="public" virt="virtual"><scope>QuantLib::detail::XABRInterpolationImpl</scope><name>~XABRCoeffHolder</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

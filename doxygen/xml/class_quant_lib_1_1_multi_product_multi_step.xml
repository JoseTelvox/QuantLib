<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_multi_product_multi_step" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::MultiProductMultiStep</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_market_model_multi_product" prot="public" virt="non-virtual">QuantLib::MarketModelMultiProduct</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_exercise_adapter" prot="public" virt="non-virtual">QuantLib::ExerciseAdapter</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_multi_step_coinitial_swaps" prot="public" virt="non-virtual">QuantLib::MultiStepCoinitialSwaps</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_multi_step_coterminal_swaps" prot="public" virt="non-virtual">QuantLib::MultiStepCoterminalSwaps</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_multi_step_coterminal_swaptions" prot="public" virt="non-virtual">QuantLib::MultiStepCoterminalSwaptions</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_multi_step_forwards" prot="public" virt="non-virtual">QuantLib::MultiStepForwards</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_multi_step_inverse_floater" prot="public" virt="non-virtual">QuantLib::MultiStepInverseFloater</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_multi_step_nothing" prot="public" virt="non-virtual">QuantLib::MultiStepNothing</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_multi_step_optionlets" prot="public" virt="non-virtual">QuantLib::MultiStepOptionlets</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_multi_step_period_caplet_swaptions" prot="public" virt="non-virtual">QuantLib::MultiStepPeriodCapletSwaptions</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_multi_step_ratchet" prot="public" virt="non-virtual">QuantLib::MultiStepRatchet</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_multi_step_swap" prot="public" virt="non-virtual">QuantLib::MultiStepSwap</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_multi_step_swaption" prot="public" virt="non-virtual">QuantLib::MultiStepSwaption</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_multi_step_tarn" prot="public" virt="non-virtual">QuantLib::MultiStepTarn</derivedcompoundref>
    <includes refid="multiproductmultistep_8hpp" local="no">multiproductmultistep.hpp</includes>
    <sectiondef kind="user-defined">
      <header>MarketModelMultiProduct interface</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_multi_product_multi_step_1a36189032c62a857a24ee0bc3a35daac5" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;</type>
        <definition>std::vector&lt;Time&gt; QuantLib::MultiProductMultiStep::rateTimes_</definition>
        <argsstring></argsstring>
        <name>rateTimes_</name>
        <qualifiedname>QuantLib::MultiProductMultiStep::rateTimes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/products/multiproductmultistep.hpp" line="43" column="21" bodyfile="ql/models/marketmodels/products/multiproductmultistep.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_multi_product_multi_step_1af75d7d4da12f35a270d14728c935a3a1" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_evolution_description" kindref="compound">EvolutionDescription</ref></type>
        <definition>EvolutionDescription QuantLib::MultiProductMultiStep::evolution_</definition>
        <argsstring></argsstring>
        <name>evolution_</name>
        <qualifiedname>QuantLib::MultiProductMultiStep::evolution_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/products/multiproductmultistep.hpp" line="44" column="30" bodyfile="ql/models/marketmodels/products/multiproductmultistep.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_multi_product_multi_step_1ab20a909104c9dac4ea6c9ea459c785bd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &gt;</type>
        <definition>std::vector&lt; Size &gt; QuantLib::MultiProductMultiStep::suggestedNumeraires</definition>
        <argsstring>() const override</argsstring>
        <name>suggestedNumeraires</name>
        <qualifiedname>QuantLib::MultiProductMultiStep::suggestedNumeraires</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_market_model_multi_product_1a488a02acf72b6641ae2b20ff86e73b46">suggestedNumeraires</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/products/multiproductmultistep.hpp" line="39" column="21" bodyfile="ql/models/marketmodels/products/multiproductmultistep.cpp" bodystart="46" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_multi_product_multi_step_1a8f27c656809d18894c403739cae666df" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="class_quant_lib_1_1_evolution_description" kindref="compound">EvolutionDescription</ref> &amp;</type>
        <definition>const EvolutionDescription &amp; QuantLib::MultiProductMultiStep::evolution</definition>
        <argsstring>() const override</argsstring>
        <name>evolution</name>
        <qualifiedname>QuantLib::MultiProductMultiStep::evolution</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_market_model_multi_product_1a7aea4bb45405d468cda5739f4d63da8b">evolution</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/products/multiproductmultistep.hpp" line="40" column="36" bodyfile="ql/models/marketmodels/products/multiproductmultistep.cpp" bodystart="42" bodyend="44"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_multi_product_multi_step_1a0e4d1487944182e90e9d08be0a6aef5a" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::MultiProductMultiStep::MultiProductMultiStep</definition>
        <argsstring>(std::vector&lt; Time &gt; rateTimes)</argsstring>
        <name>MultiProductMultiStep</name>
        <qualifiedname>QuantLib::MultiProductMultiStep::MultiProductMultiStep</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;</type>
          <declname>rateTimes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/products/multiproductmultistep.hpp" line="36" column="18" bodyfile="ql/models/marketmodels/products/multiproductmultistep.cpp" bodystart="26" bodyend="40"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Multiple-step market-model product. </para>
    </briefdescription>
    <detaileddescription>
<para>This is the abstract base class that encapsulates the notion of a <ref refid="class_quant_lib_1_1_market_model_multi_product" kindref="compound">MarketModelMultiProduct</ref> which can be evaluated in a more than one step (aka Rebonato&apos;s long jump). </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>QuantLib::ExerciseAdapter</label>
        <link refid="class_quant_lib_1_1_exercise_adapter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::MarketModelMultiProduct</label>
        <link refid="class_quant_lib_1_1_market_model_multi_product"/>
      </node>
      <node id="1">
        <label>QuantLib::MultiProductMultiStep</label>
        <link refid="class_quant_lib_1_1_multi_product_multi_step"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::MultiStepCoinitialSwaps</label>
        <link refid="class_quant_lib_1_1_multi_step_coinitial_swaps"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::MultiStepCoterminalSwaps</label>
        <link refid="class_quant_lib_1_1_multi_step_coterminal_swaps"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::MultiStepCoterminalSwaptions</label>
        <link refid="class_quant_lib_1_1_multi_step_coterminal_swaptions"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::MultiStepForwards</label>
        <link refid="class_quant_lib_1_1_multi_step_forwards"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::MultiStepInverseFloater</label>
        <link refid="class_quant_lib_1_1_multi_step_inverse_floater"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QuantLib::MultiStepNothing</label>
        <link refid="class_quant_lib_1_1_multi_step_nothing"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QuantLib::MultiStepOptionlets</label>
        <link refid="class_quant_lib_1_1_multi_step_optionlets"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>QuantLib::MultiStepPeriodCapletSwaptions</label>
        <link refid="class_quant_lib_1_1_multi_step_period_caplet_swaptions"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>QuantLib::MultiStepRatchet</label>
        <link refid="class_quant_lib_1_1_multi_step_ratchet"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>QuantLib::MultiStepSwap</label>
        <link refid="class_quant_lib_1_1_multi_step_swap"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>QuantLib::MultiStepSwaption</label>
        <link refid="class_quant_lib_1_1_multi_step_swaption"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>QuantLib::MultiStepTarn</label>
        <link refid="class_quant_lib_1_1_multi_step_tarn"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>QuantLib::EvolutionDescription</label>
        <link refid="class_quant_lib_1_1_evolution_description"/>
      </node>
      <node id="2">
        <label>QuantLib::MarketModelMultiProduct</label>
        <link refid="class_quant_lib_1_1_market_model_multi_product"/>
      </node>
      <node id="1">
        <label>QuantLib::MultiProductMultiStep</label>
        <link refid="class_quant_lib_1_1_multi_product_multi_step"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>evolution_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/models/marketmodels/products/multiproductmultistep.hpp" line="34" column="5" bodyfile="ql/models/marketmodels/products/multiproductmultistep.hpp" bodystart="34" bodyend="45"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_market_model_multi_product_1ad4ded115a66268f3e9d92efebbda6ba1" prot="public" virt="pure-virtual"><scope>QuantLib::MultiProductMultiStep</scope><name>clone</name></member>
      <member refid="class_quant_lib_1_1_multi_product_multi_step_1a8f27c656809d18894c403739cae666df" prot="public" virt="virtual"><scope>QuantLib::MultiProductMultiStep</scope><name>evolution</name></member>
      <member refid="class_quant_lib_1_1_multi_product_multi_step_1af75d7d4da12f35a270d14728c935a3a1" prot="protected" virt="non-virtual"><scope>QuantLib::MultiProductMultiStep</scope><name>evolution_</name></member>
      <member refid="class_quant_lib_1_1_market_model_multi_product_1a12e6d1142856abb37586473cbcd2d4a1" prot="public" virt="pure-virtual"><scope>QuantLib::MultiProductMultiStep</scope><name>maxNumberOfCashFlowsPerProductPerStep</name></member>
      <member refid="class_quant_lib_1_1_multi_product_multi_step_1a0e4d1487944182e90e9d08be0a6aef5a" prot="public" virt="non-virtual"><scope>QuantLib::MultiProductMultiStep</scope><name>MultiProductMultiStep</name></member>
      <member refid="class_quant_lib_1_1_market_model_multi_product_1a4f02e7bcdb5c23c431183fb3a499ca28" prot="public" virt="pure-virtual"><scope>QuantLib::MultiProductMultiStep</scope><name>nextTimeStep</name></member>
      <member refid="class_quant_lib_1_1_market_model_multi_product_1a2dede52d7bff85221b39246ac4b2b08f" prot="public" virt="pure-virtual"><scope>QuantLib::MultiProductMultiStep</scope><name>numberOfProducts</name></member>
      <member refid="class_quant_lib_1_1_market_model_multi_product_1aa259aa618047ab435766e71eb43f41a7" prot="public" virt="pure-virtual"><scope>QuantLib::MultiProductMultiStep</scope><name>possibleCashFlowTimes</name></member>
      <member refid="class_quant_lib_1_1_multi_product_multi_step_1a36189032c62a857a24ee0bc3a35daac5" prot="protected" virt="non-virtual"><scope>QuantLib::MultiProductMultiStep</scope><name>rateTimes_</name></member>
      <member refid="class_quant_lib_1_1_market_model_multi_product_1a1f1a0d792039158a3d70f79baa20e020" prot="public" virt="pure-virtual"><scope>QuantLib::MultiProductMultiStep</scope><name>reset</name></member>
      <member refid="class_quant_lib_1_1_multi_product_multi_step_1ab20a909104c9dac4ea6c9ea459c785bd" prot="public" virt="virtual"><scope>QuantLib::MultiProductMultiStep</scope><name>suggestedNumeraires</name></member>
      <member refid="class_quant_lib_1_1_market_model_multi_product_1ac7c964a1ca915e17b72f560e1dc52883" prot="public" virt="virtual"><scope>QuantLib::MultiProductMultiStep</scope><name>~MarketModelMultiProduct</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

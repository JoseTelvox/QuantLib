<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_gaussian1d_smile_section" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::Gaussian1dSmileSection</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_smile_section" prot="public" virt="non-virtual">QuantLib::SmileSection</basecompoundref>
    <includes refid="gaussian1dsmilesection_8hpp" local="no">gaussian1dsmilesection.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_gaussian1d_smile_section_1a78d66e6f3e88e10030921154548bc3fa" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Gaussian1dSmileSection::atm_</definition>
        <argsstring></argsstring>
        <name>atm_</name>
        <qualifiedname>QuantLib::Gaussian1dSmileSection::atm_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/gaussian1dsmilesection.hpp" line="68" column="10" bodyfile="ql/termstructures/volatility/gaussian1dsmilesection.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_gaussian1d_smile_section_1ab8090817be2b2a14e5df12c9202769c3" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Gaussian1dSmileSection::annuity_</definition>
        <argsstring></argsstring>
        <name>annuity_</name>
        <qualifiedname>QuantLib::Gaussian1dSmileSection::annuity_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/gaussian1dsmilesection.hpp" line="68" column="15" bodyfile="ql/termstructures/volatility/gaussian1dsmilesection.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_gaussian1d_smile_section_1a57d6235dd0aa56fcad666f4dd9a448f1" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::Gaussian1dSmileSection::fixingDate_</definition>
        <argsstring></argsstring>
        <name>fixingDate_</name>
        <qualifiedname>QuantLib::Gaussian1dSmileSection::fixingDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/gaussian1dsmilesection.hpp" line="69" column="10" bodyfile="ql/termstructures/volatility/gaussian1dsmilesection.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_gaussian1d_smile_section_1ae046def7b42f1f06c506543607512212" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_swap_index" kindref="compound">SwapIndex</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;SwapIndex&gt; QuantLib::Gaussian1dSmileSection::swapIndex_</definition>
        <argsstring></argsstring>
        <name>swapIndex_</name>
        <qualifiedname>QuantLib::Gaussian1dSmileSection::swapIndex_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/gaussian1dsmilesection.hpp" line="70" column="21" bodyfile="ql/termstructures/volatility/gaussian1dsmilesection.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_gaussian1d_smile_section_1ac6f142582fb8fd1e7525ddfa818fb3fa" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_ibor_index" kindref="compound">IborIndex</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;IborIndex&gt; QuantLib::Gaussian1dSmileSection::iborIndex_</definition>
        <argsstring></argsstring>
        <name>iborIndex_</name>
        <qualifiedname>QuantLib::Gaussian1dSmileSection::iborIndex_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/gaussian1dsmilesection.hpp" line="71" column="21" bodyfile="ql/termstructures/volatility/gaussian1dsmilesection.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_gaussian1d_smile_section_1a787a9de9a8cefc12968b4775b0ff67bb" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_gaussian1d_model" kindref="compound">Gaussian1dModel</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;Gaussian1dModel&gt; QuantLib::Gaussian1dSmileSection::model_</definition>
        <argsstring></argsstring>
        <name>model_</name>
        <qualifiedname>QuantLib::Gaussian1dSmileSection::model_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/gaussian1dsmilesection.hpp" line="72" column="21" bodyfile="ql/termstructures/volatility/gaussian1dsmilesection.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_gaussian1d_smile_section_1a55c6bc2b4f5eaac30fdfb996574b7e28" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_pricing_engine" kindref="compound">PricingEngine</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;PricingEngine&gt; QuantLib::Gaussian1dSmileSection::engine_</definition>
        <argsstring></argsstring>
        <name>engine_</name>
        <qualifiedname>QuantLib::Gaussian1dSmileSection::engine_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/gaussian1dsmilesection.hpp" line="73" column="21" bodyfile="ql/termstructures/volatility/gaussian1dsmilesection.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_gaussian1d_smile_section_1a240b5d007dceee75aeaf0d915bb9b704" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Gaussian1dSmileSection::Gaussian1dSmileSection</definition>
        <argsstring>(const Date &amp;fixingDate, ext::shared_ptr&lt; SwapIndex &gt; swapIndex, const ext::shared_ptr&lt; Gaussian1dModel &gt; &amp;model, const DayCounter &amp;dc, const ext::shared_ptr&lt; Gaussian1dSwaptionEngine &gt; &amp;swaptionEngine=ext::shared_ptr&lt; Gaussian1dSwaptionEngine &gt;())</argsstring>
        <name>Gaussian1dSmileSection</name>
        <qualifiedname>QuantLib::Gaussian1dSmileSection::Gaussian1dSmileSection</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>fixingDate</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_swap_index" kindref="compound">SwapIndex</ref> &gt;</type>
          <declname>swapIndex</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_gaussian1d_model" kindref="compound">Gaussian1dModel</ref> &gt; &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_gaussian1d_swaption_engine" kindref="compound">Gaussian1dSwaptionEngine</ref> &gt; &amp;</type>
          <declname>swaptionEngine</declname>
          <defval>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_gaussian1d_swaption_engine" kindref="compound">Gaussian1dSwaptionEngine</ref> &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/gaussian1dsmilesection.hpp" line="43" column="5" bodyfile="ql/termstructures/volatility/gaussian1dsmilesection.cpp" bodystart="30" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gaussian1d_smile_section_1a1bf1af3b9f5bdd348a3ba76732041976" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Gaussian1dSmileSection::Gaussian1dSmileSection</definition>
        <argsstring>(const Date &amp;fixingDate, ext::shared_ptr&lt; IborIndex &gt; swapIndex, const ext::shared_ptr&lt; Gaussian1dModel &gt; &amp;model, const DayCounter &amp;dc, const ext::shared_ptr&lt; Gaussian1dCapFloorEngine &gt; &amp;capEngine=ext::shared_ptr&lt; Gaussian1dCapFloorEngine &gt;())</argsstring>
        <name>Gaussian1dSmileSection</name>
        <qualifiedname>QuantLib::Gaussian1dSmileSection::Gaussian1dSmileSection</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>fixingDate</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_ibor_index" kindref="compound">IborIndex</ref> &gt;</type>
          <declname>swapIndex</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_gaussian1d_model" kindref="compound">Gaussian1dModel</ref> &gt; &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_gaussian1d_cap_floor_engine" kindref="compound">Gaussian1dCapFloorEngine</ref> &gt; &amp;</type>
          <declname>capEngine</declname>
          <defval>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_gaussian1d_cap_floor_engine" kindref="compound">Gaussian1dCapFloorEngine</ref> &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/gaussian1dsmilesection.hpp" line="49" column="5" bodyfile="ql/termstructures/volatility/gaussian1dsmilesection.cpp" bodystart="50" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gaussian1d_smile_section_1aa041fa5ce3108387a5f8be4db6d7b3c0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Gaussian1dSmileSection::minStrike</definition>
        <argsstring>() const override</argsstring>
        <name>minStrike</name>
        <qualifiedname>QuantLib::Gaussian1dSmileSection::minStrike</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_smile_section_1a54bb5cd9f6913f7d69efc85d51af2624">minStrike</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/gaussian1dsmilesection.hpp" line="58" column="10" bodyfile="ql/termstructures/volatility/gaussian1dsmilesection.hpp" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gaussian1d_smile_section_1a9781631a5ead70e96e8833b10a07a7ea" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Gaussian1dSmileSection::maxStrike</definition>
        <argsstring>() const override</argsstring>
        <name>maxStrike</name>
        <qualifiedname>QuantLib::Gaussian1dSmileSection::maxStrike</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_smile_section_1aa74a46c0a15e98112c1f9afaad9e6604">maxStrike</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/gaussian1dsmilesection.hpp" line="59" column="10" bodyfile="ql/termstructures/volatility/gaussian1dsmilesection.hpp" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gaussian1d_smile_section_1a052d392cf92c40831af605c3a6f7a86c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Gaussian1dSmileSection::atmLevel</definition>
        <argsstring>() const override</argsstring>
        <name>atmLevel</name>
        <qualifiedname>QuantLib::Gaussian1dSmileSection::atmLevel</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_smile_section_1a7ff3d003fcdcf207cde30c3469b6422a">atmLevel</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/gaussian1dsmilesection.hpp" line="61" column="10" bodyfile="ql/termstructures/volatility/gaussian1dsmilesection.cpp" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gaussian1d_smile_section_1a47653ec6c5ba7e2f92d89fdfa22da581" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Gaussian1dSmileSection::optionPrice</definition>
        <argsstring>(Rate strike, Option::Type=Option::Call, Real discount=1.0) const override</argsstring>
        <name>optionPrice</name>
        <qualifiedname>QuantLib::Gaussian1dSmileSection::optionPrice</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_smile_section_1abf5fbad0f8d32a1b644ec3c23927061b">optionPrice</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type>Option::Type</type>
          <defname>type</defname>
          <defval>Option::Call</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>discount</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/gaussian1dsmilesection.hpp" line="62" column="10" bodyfile="ql/termstructures/volatility/gaussian1dsmilesection.cpp" bodystart="75" bodyend="95"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_gaussian1d_smile_section_1ae1c827404acd60eb03b59b71f0232a26" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Gaussian1dSmileSection::volatilityImpl</definition>
        <argsstring>(Rate strike) const override</argsstring>
        <name>volatilityImpl</name>
        <qualifiedname>QuantLib::Gaussian1dSmileSection::volatilityImpl</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_smile_section_1a14bf773bdfb690c9b9e9cbe61f14c2bf">volatilityImpl</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/gaussian1dsmilesection.hpp" line="65" column="10" bodyfile="ql/termstructures/volatility/gaussian1dsmilesection.cpp" bodystart="97" bodyend="107"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>smile section based on a gaussian 1d model instance if curves are attached to the swap or ibor index, these are used to adjust the model&apos;s yield term structure, if not the model&apos;s yield term structure is used directly </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::Gaussian1dSmileSection</label>
        <link refid="class_quant_lib_1_1_gaussian1d_smile_section"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>QuantLib::SmileSection</label>
        <link refid="class_quant_lib_1_1_smile_section"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::Gaussian1dSmileSection</label>
        <link refid="class_quant_lib_1_1_gaussian1d_smile_section"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>QuantLib::SmileSection</label>
        <link refid="class_quant_lib_1_1_smile_section"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/termstructures/volatility/gaussian1dsmilesection.hpp" line="41" column="1" bodyfile="ql/termstructures/volatility/gaussian1dsmilesection.hpp" bodystart="41" bodyend="74"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_gaussian1d_smile_section_1ab8090817be2b2a14e5df12c9202769c3" prot="private" virt="non-virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>annuity_</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_smile_section_1a78d66e6f3e88e10030921154548bc3fa" prot="private" virt="non-virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>atm_</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_smile_section_1a052d392cf92c40831af605c3a6f7a86c" prot="public" virt="virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>atmLevel</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a9d62efde0aa0bc8b6628ab562b5c479d" prot="public" virt="virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>dayCounter</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a3a4e90440ae22c4c9c3e9253b0199a82" prot="public" virt="virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>density</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a9ecdb328b2b90432da8a4429c4d56f06" prot="public" virt="virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>digitalOptionPrice</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_smile_section_1a55c6bc2b4f5eaac30fdfb996574b7e28" prot="private" virt="non-virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>engine_</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1ac9b9e60511fc940cd8d74fbbbcd87b5f" prot="public" virt="virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>exerciseDate</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a7bf1b552a5e93d12631f01a5fa59eb58" prot="public" virt="virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>exerciseTime</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_smile_section_1a57d6235dd0aa56fcad666f4dd9a448f1" prot="private" virt="non-virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>fixingDate_</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_smile_section_1a240b5d007dceee75aeaf0d915bb9b704" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>Gaussian1dSmileSection</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_smile_section_1a1bf1af3b9f5bdd348a3ba76732041976" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>Gaussian1dSmileSection</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_smile_section_1ac6f142582fb8fd1e7525ddfa818fb3fa" prot="private" virt="non-virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>iborIndex_</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a7fba48f0a4277b91b0d0768d262affdb" prot="protected" virt="virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>initializeExerciseTime</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_smile_section_1a9781631a5ead70e96e8833b10a07a7ea" prot="public" virt="virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>maxStrike</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_smile_section_1aa041fa5ce3108387a5f8be4db6d7b3c0" prot="public" virt="virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>minStrike</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_smile_section_1a787a9de9a8cefc12968b4775b0ff67bb" prot="private" virt="non-virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>model_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::SmileSection::"><scope>QuantLib::Gaussian1dSmileSection</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::SmileSection::"><scope>QuantLib::Gaussian1dSmileSection</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::Gaussian1dSmileSection</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::Gaussian1dSmileSection</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::SmileSection::"><scope>QuantLib::Gaussian1dSmileSection</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::SmileSection::QuantLib::Observer::"><scope>QuantLib::Gaussian1dSmileSection</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_smile_section_1a47653ec6c5ba7e2f92d89fdfa22da581" prot="public" virt="virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>optionPrice</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a42fe316ed2696fb7b8b6fb8853b5bae0" prot="public" virt="virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>referenceDate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a3fbddba097e2b742fe8800217ed613cc" prot="public" virt="virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>shift</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a6c2ea1d64020c754251c89372fe46686" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>SmileSection</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1aae4f281efa6a9f4b5cea8165363df3b5" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>SmileSection</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a67cece6b7c60c0a5d7729bea038fe85c" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>SmileSection</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_smile_section_1ae046def7b42f1f06c506543607512212" prot="private" virt="non-virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>swapIndex_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1adecc5abf2867e2291878329b0256b08a" prot="public" virt="virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a5bab1e23eb1c4d12f927c7b80cafa550" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>variance</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a680162f5de7f231d1ff2b5fb76cfc54a" prot="protected" virt="virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>varianceImpl</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a7186ee49bc91697dcca75fd5204629be" prot="public" virt="virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>vega</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a0e1a9e52460bb881952fc9d9bce51a98" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>volatility</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a672a3e1398986f0a9c922b7b6bf3233c" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>volatility</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_smile_section_1ae1c827404acd60eb03b59b71f0232a26" prot="protected" virt="virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>volatilityImpl</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1aac4cb2b17d273eecb0508f3a5c050a22" prot="public" virt="virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>volatilityType</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a7c6cb707ed5e58e5a1fa92efc3a9a88f" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dSmileSection</scope><name>~SmileSection</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

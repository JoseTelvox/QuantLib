<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_polynomial_function" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::PolynomialFunction</compoundname>
    <includes refid="polynomialmathfunction_8hpp" local="no">polynomialmathfunction.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_polynomial_function_1a7089d4f05116f4f825c82a4cb14dd926" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::PolynomialFunction::order_</definition>
        <argsstring></argsstring>
        <name>order_</name>
        <qualifiedname>QuantLib::PolynomialFunction::order_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/polynomialmathfunction.hpp" line="70" column="14" bodyfile="ql/math/polynomialmathfunction.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_polynomial_function_1a6b949737318cc04f7ec99c7b1d522512" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::PolynomialFunction::c_</definition>
        <argsstring></argsstring>
        <name>c_</name>
        <qualifiedname>QuantLib::PolynomialFunction::c_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/polynomialmathfunction.hpp" line="71" column="21" bodyfile="ql/math/polynomialmathfunction.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_polynomial_function_1af5ff6ed2e2ce8fe2bc93edc4f5d56ce0" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::PolynomialFunction::derC_</definition>
        <argsstring></argsstring>
        <name>derC_</name>
        <qualifiedname>QuantLib::PolynomialFunction::derC_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/polynomialmathfunction.hpp" line="71" column="24" bodyfile="ql/math/polynomialmathfunction.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_polynomial_function_1a148dbda9bb1d019c49d46ce81404d60f" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::PolynomialFunction::prC_</definition>
        <argsstring></argsstring>
        <name>prC_</name>
        <qualifiedname>QuantLib::PolynomialFunction::prC_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/polynomialmathfunction.hpp" line="71" column="30" bodyfile="ql/math/polynomialmathfunction.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_polynomial_function_1a82216437df76f0936905888ad04ca224" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::PolynomialFunction::K_</definition>
        <argsstring></argsstring>
        <name>K_</name>
        <qualifiedname>QuantLib::PolynomialFunction::K_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/polynomialmathfunction.hpp" line="72" column="14" bodyfile="ql/math/polynomialmathfunction.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_polynomial_function_1a461b769d34161cd0bf90491b14e19127" prot="private" static="no" mutable="yes">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::PolynomialFunction::eqs_</definition>
        <argsstring></argsstring>
        <name>eqs_</name>
        <qualifiedname>QuantLib::PolynomialFunction::eqs_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/polynomialmathfunction.hpp" line="73" column="24" bodyfile="ql/math/polynomialmathfunction.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_polynomial_function_1a70c5ae2ca7061548988e29dba0105f80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::PolynomialFunction::PolynomialFunction</definition>
        <argsstring>(const std::vector&lt; Real &gt; &amp;coeff)</argsstring>
        <name>PolynomialFunction</name>
        <qualifiedname>QuantLib::PolynomialFunction::PolynomialFunction</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>coeff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/polynomialmathfunction.hpp" line="35" column="9" bodyfile="ql/math/polynomialmathfunction.cpp" bodystart="26" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_polynomial_function_1a5b3cb04f453e2138eb16c6ddd899269d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::PolynomialFunction::operator()</definition>
        <argsstring>(Time t) const</argsstring>
        <name>operator()</name>
        <qualifiedname>QuantLib::PolynomialFunction::operator()</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>function value at time t: </para>
        </briefdescription>
        <detaileddescription>
<para><formula id="327">\[ f(t) = \sum_{i=0}^n{c_i t^i} \]</formula> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/polynomialmathfunction.hpp" line="38" column="14" bodyfile="ql/math/polynomialmathfunction.cpp" bodystart="44" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_polynomial_function_1a609c2b6c6d3f7ea2c427240a3686301c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::PolynomialFunction::derivative</definition>
        <argsstring>(Time t) const</argsstring>
        <name>derivative</name>
        <qualifiedname>QuantLib::PolynomialFunction::derivative</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>first derivative of the function at time t <formula id="328">\[ f&apos;(t) = \sum_{i=0}^{n-1}{(i+1) c_{i+1} t^i} \]</formula> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/polynomialmathfunction.hpp" line="42" column="14" bodyfile="ql/math/polynomialmathfunction.cpp" bodystart="53" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_polynomial_function_1a40c75bdbf5af1240c802756e544ea9da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::PolynomialFunction::primitive</definition>
        <argsstring>(Time t) const</argsstring>
        <name>primitive</name>
        <qualifiedname>QuantLib::PolynomialFunction::primitive</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>indefinite integral of the function at time t <formula id="329">\[ \int f(t)dt = \sum_{i=0}^n{c_i t^{i+1} / (i+1)} + K \]</formula> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/polynomialmathfunction.hpp" line="46" column="14" bodyfile="ql/math/polynomialmathfunction.cpp" bodystart="62" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_polynomial_function_1a1caff433ca96568c0f69b74336a65c37" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::PolynomialFunction::definiteIntegral</definition>
        <argsstring>(Time t1, Time t2) const</argsstring>
        <name>definiteIntegral</name>
        <qualifiedname>QuantLib::PolynomialFunction::definiteIntegral</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t1</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>definite integral of the function between t1 and t2 <formula id="233">\[ \int_{t1}^{t2} f(t)dt \]</formula> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/polynomialmathfunction.hpp" line="50" column="14" bodyfile="ql/math/polynomialmathfunction.cpp" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_polynomial_function_1a5b5a167c750370327670b0ae0c62d783" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::PolynomialFunction::order</definition>
        <argsstring>() const</argsstring>
        <name>order</name>
        <qualifiedname>QuantLib::PolynomialFunction::order</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Inspectors </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/polynomialmathfunction.hpp" line="54" column="14" bodyfile="ql/math/polynomialmathfunction.hpp" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_polynomial_function_1a2ed58654f8fc0492faa34caaec6fb9da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; Real &gt; &amp; QuantLib::PolynomialFunction::coefficients</definition>
        <argsstring>()</argsstring>
        <name>coefficients</name>
        <qualifiedname>QuantLib::PolynomialFunction::coefficients</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/polynomialmathfunction.hpp" line="55" column="27" bodyfile="ql/math/polynomialmathfunction.hpp" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_polynomial_function_1a8e9f138a4544460a108935aeac8c6917" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; Real &gt; &amp; QuantLib::PolynomialFunction::derivativeCoefficients</definition>
        <argsstring>()</argsstring>
        <name>derivativeCoefficients</name>
        <qualifiedname>QuantLib::PolynomialFunction::derivativeCoefficients</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/polynomialmathfunction.hpp" line="56" column="27" bodyfile="ql/math/polynomialmathfunction.hpp" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_polynomial_function_1a956111126a332a7fd8c930b4c1c22fd4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; Real &gt; &amp; QuantLib::PolynomialFunction::primitiveCoefficients</definition>
        <argsstring>()</argsstring>
        <name>primitiveCoefficients</name>
        <qualifiedname>QuantLib::PolynomialFunction::primitiveCoefficients</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/polynomialmathfunction.hpp" line="57" column="27" bodyfile="ql/math/polynomialmathfunction.hpp" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_polynomial_function_1a1163a0f32eb553e01a236fa7202f31b9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt; Real &gt; QuantLib::PolynomialFunction::definiteIntegralCoefficients</definition>
        <argsstring>(Time t, Time t2) const</argsstring>
        <name>definiteIntegralCoefficients</name>
        <qualifiedname>QuantLib::PolynomialFunction::definiteIntegralCoefficients</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>coefficients of a <ref refid="class_quant_lib_1_1_polynomial_function" kindref="compound">PolynomialFunction</ref> defined as definite integral on a rolling window of length tau, with tau = t2-t </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/polynomialmathfunction.hpp" line="61" column="21" bodyfile="ql/math/polynomialmathfunction.cpp" bodystart="90" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_polynomial_function_1a070d119b49584a12c6acb7a25bc33469" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt; Real &gt; QuantLib::PolynomialFunction::definiteDerivativeCoefficients</definition>
        <argsstring>(Time t, Time t2) const</argsstring>
        <name>definiteDerivativeCoefficients</name>
        <qualifiedname>QuantLib::PolynomialFunction::definiteDerivativeCoefficients</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>coefficients of a <ref refid="class_quant_lib_1_1_polynomial_function" kindref="compound">PolynomialFunction</ref> defined as definite derivative on a rolling window of length tau, with tau = t2-t </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/polynomialmathfunction.hpp" line="66" column="21" bodyfile="ql/math/polynomialmathfunction.cpp" bodystart="100" bodyend="107"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_polynomial_function_1a817c6889f524b02125e56c5563639b1b" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::PolynomialFunction::initializeEqs_</definition>
        <argsstring>(Time t, Time t2) const</argsstring>
        <name>initializeEqs_</name>
        <qualifiedname>QuantLib::PolynomialFunction::initializeEqs_</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/polynomialmathfunction.hpp" line="74" column="14" bodyfile="ql/math/polynomialmathfunction.cpp" bodystart="76" bodyend="87"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Cubic functional form </para>
    </briefdescription>
    <detaileddescription>
<para><formula id="327">\[ f(t) = \sum_{i=0}^n{c_i t^i} \]</formula> </para>
    </detaileddescription>
    <location file="ql/math/polynomialmathfunction.hpp" line="32" column="5" bodyfile="ql/math/polynomialmathfunction.hpp" bodystart="32" bodyend="76"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_polynomial_function_1a6b949737318cc04f7ec99c7b1d522512" prot="private" virt="non-virtual"><scope>QuantLib::PolynomialFunction</scope><name>c_</name></member>
      <member refid="class_quant_lib_1_1_polynomial_function_1a2ed58654f8fc0492faa34caaec6fb9da" prot="public" virt="non-virtual"><scope>QuantLib::PolynomialFunction</scope><name>coefficients</name></member>
      <member refid="class_quant_lib_1_1_polynomial_function_1a070d119b49584a12c6acb7a25bc33469" prot="public" virt="non-virtual"><scope>QuantLib::PolynomialFunction</scope><name>definiteDerivativeCoefficients</name></member>
      <member refid="class_quant_lib_1_1_polynomial_function_1a1caff433ca96568c0f69b74336a65c37" prot="public" virt="non-virtual"><scope>QuantLib::PolynomialFunction</scope><name>definiteIntegral</name></member>
      <member refid="class_quant_lib_1_1_polynomial_function_1a1163a0f32eb553e01a236fa7202f31b9" prot="public" virt="non-virtual"><scope>QuantLib::PolynomialFunction</scope><name>definiteIntegralCoefficients</name></member>
      <member refid="class_quant_lib_1_1_polynomial_function_1af5ff6ed2e2ce8fe2bc93edc4f5d56ce0" prot="private" virt="non-virtual"><scope>QuantLib::PolynomialFunction</scope><name>derC_</name></member>
      <member refid="class_quant_lib_1_1_polynomial_function_1a609c2b6c6d3f7ea2c427240a3686301c" prot="public" virt="non-virtual"><scope>QuantLib::PolynomialFunction</scope><name>derivative</name></member>
      <member refid="class_quant_lib_1_1_polynomial_function_1a8e9f138a4544460a108935aeac8c6917" prot="public" virt="non-virtual"><scope>QuantLib::PolynomialFunction</scope><name>derivativeCoefficients</name></member>
      <member refid="class_quant_lib_1_1_polynomial_function_1a461b769d34161cd0bf90491b14e19127" prot="private" virt="non-virtual"><scope>QuantLib::PolynomialFunction</scope><name>eqs_</name></member>
      <member refid="class_quant_lib_1_1_polynomial_function_1a817c6889f524b02125e56c5563639b1b" prot="private" virt="non-virtual"><scope>QuantLib::PolynomialFunction</scope><name>initializeEqs_</name></member>
      <member refid="class_quant_lib_1_1_polynomial_function_1a82216437df76f0936905888ad04ca224" prot="private" virt="non-virtual"><scope>QuantLib::PolynomialFunction</scope><name>K_</name></member>
      <member refid="class_quant_lib_1_1_polynomial_function_1a5b3cb04f453e2138eb16c6ddd899269d" prot="public" virt="non-virtual"><scope>QuantLib::PolynomialFunction</scope><name>operator()</name></member>
      <member refid="class_quant_lib_1_1_polynomial_function_1a5b5a167c750370327670b0ae0c62d783" prot="public" virt="non-virtual"><scope>QuantLib::PolynomialFunction</scope><name>order</name></member>
      <member refid="class_quant_lib_1_1_polynomial_function_1a7089d4f05116f4f825c82a4cb14dd926" prot="private" virt="non-virtual"><scope>QuantLib::PolynomialFunction</scope><name>order_</name></member>
      <member refid="class_quant_lib_1_1_polynomial_function_1a70c5ae2ca7061548988e29dba0105f80" prot="public" virt="non-virtual"><scope>QuantLib::PolynomialFunction</scope><name>PolynomialFunction</name></member>
      <member refid="class_quant_lib_1_1_polynomial_function_1a148dbda9bb1d019c49d46ce81404d60f" prot="private" virt="non-virtual"><scope>QuantLib::PolynomialFunction</scope><name>prC_</name></member>
      <member refid="class_quant_lib_1_1_polynomial_function_1a40c75bdbf5af1240c802756e544ea9da" prot="public" virt="non-virtual"><scope>QuantLib::PolynomialFunction</scope><name>primitive</name></member>
      <member refid="class_quant_lib_1_1_polynomial_function_1a956111126a332a7fd8c930b4c1c22fd4" prot="public" virt="non-virtual"><scope>QuantLib::PolynomialFunction</scope><name>primitiveCoefficients</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

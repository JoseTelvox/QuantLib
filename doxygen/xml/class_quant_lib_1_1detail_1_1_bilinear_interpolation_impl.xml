<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1detail_1_1_bilinear_interpolation_impl" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::detail::BilinearInterpolationImpl</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_interpolation2_d_1_1template_impl" prot="public" virt="non-virtual">QuantLib::Interpolation2D::templateImpl&lt; I1, I2, M &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>class I1</type>
      </param>
      <param>
        <type>class I2</type>
      </param>
      <param>
        <type>class M</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1detail_1_1_bilinear_interpolation_impl_1ac84c0f6641a40ac605944d0386936352" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::detail::BilinearInterpolationImpl&lt; I1, I2, M &gt;::BilinearInterpolationImpl</definition>
        <argsstring>(const I1 &amp;xBegin, const I1 &amp;xEnd, const I2 &amp;yBegin, const I2 &amp;yEnd, const M &amp;zData)</argsstring>
        <name>BilinearInterpolationImpl</name>
        <qualifiedname>QuantLib::detail::BilinearInterpolationImpl::BilinearInterpolationImpl</qualifiedname>
        <param>
          <type>const I1 &amp;</type>
          <declname>xBegin</declname>
        </param>
        <param>
          <type>const I1 &amp;</type>
          <declname>xEnd</declname>
        </param>
        <param>
          <type>const I2 &amp;</type>
          <declname>yBegin</declname>
        </param>
        <param>
          <type>const I2 &amp;</type>
          <declname>yEnd</declname>
        </param>
        <param>
          <type>const M &amp;</type>
          <declname>zData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/bilinearinterpolation.hpp" line="38" column="13" bodyfile="ql/math/interpolations/bilinearinterpolation.hpp" bodystart="38" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1detail_1_1_bilinear_interpolation_impl_1ada56001b6a969b8766a75ab0fd314166" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::detail::BilinearInterpolationImpl&lt; I1, I2, M &gt;::calculate</definition>
        <argsstring>() override</argsstring>
        <name>calculate</name>
        <qualifiedname>QuantLib::detail::BilinearInterpolationImpl::calculate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_interpolation2_d_1_1_impl_1aeaced731671d9c2e121fb91f34565c83">calculate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/bilinearinterpolation.hpp" line="46" column="18" bodyfile="ql/math/interpolations/bilinearinterpolation.hpp" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1detail_1_1_bilinear_interpolation_impl_1abf8e3075f2f79d0ce9a125f32b509414" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::detail::BilinearInterpolationImpl&lt; I1, I2, M &gt;::value</definition>
        <argsstring>(Real x, Real y) const override</argsstring>
        <name>value</name>
        <qualifiedname>QuantLib::detail::BilinearInterpolationImpl::value</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_interpolation2_d_1_1_impl_1ab20b764986e4469a25532df2df2b9446">value</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/bilinearinterpolation.hpp" line="47" column="18" bodyfile="ql/math/interpolations/bilinearinterpolation.hpp" bodystart="47" bodyend="62"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>QuantLib::Interpolation2D::Impl</label>
        <link refid="class_quant_lib_1_1_interpolation2_d_1_1_impl"/>
      </node>
      <node id="2">
        <label>QuantLib::Interpolation2D::templateImpl&lt; I1, I2, M &gt;</label>
        <link refid="class_quant_lib_1_1_interpolation2_d_1_1template_impl"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::detail::BilinearInterpolationImpl&lt; I1, I2, M &gt;</label>
        <link refid="class_quant_lib_1_1detail_1_1_bilinear_interpolation_impl"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>QuantLib::Interpolation2D::Impl</label>
        <link refid="class_quant_lib_1_1_interpolation2_d_1_1_impl"/>
      </node>
      <node id="2">
        <label>QuantLib::Interpolation2D::templateImpl&lt; I1, I2, M &gt;</label>
        <link refid="class_quant_lib_1_1_interpolation2_d_1_1template_impl"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::detail::BilinearInterpolationImpl&lt; I1, I2, M &gt;</label>
        <link refid="class_quant_lib_1_1detail_1_1_bilinear_interpolation_impl"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/math/interpolations/bilinearinterpolation.hpp" line="35" column="9" bodyfile="ql/math/interpolations/bilinearinterpolation.hpp" bodystart="36" bodyend="63"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1detail_1_1_bilinear_interpolation_impl_1ac84c0f6641a40ac605944d0386936352" prot="public" virt="non-virtual"><scope>QuantLib::detail::BilinearInterpolationImpl</scope><name>BilinearInterpolationImpl</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_bilinear_interpolation_impl_1ada56001b6a969b8766a75ab0fd314166" prot="public" virt="virtual"><scope>QuantLib::detail::BilinearInterpolationImpl</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_interpolation2_d_1_1template_impl_1a9bb5e17c199084c1a18f1b77f271f0fe" prot="public" virt="virtual"><scope>QuantLib::detail::BilinearInterpolationImpl</scope><name>isInRange</name></member>
      <member refid="class_quant_lib_1_1_interpolation2_d_1_1template_impl_1a1804c31b1f2dea6769713ab1f674d4a7" prot="protected" virt="virtual"><scope>QuantLib::detail::BilinearInterpolationImpl</scope><name>locateX</name></member>
      <member refid="class_quant_lib_1_1_interpolation2_d_1_1template_impl_1a006f0c5a8c6efa67f110a129028993c3" prot="protected" virt="virtual"><scope>QuantLib::detail::BilinearInterpolationImpl</scope><name>locateY</name></member>
      <member refid="class_quant_lib_1_1_interpolation2_d_1_1template_impl_1aee65ca6c2bb669e7a2c7e465b05e494c" prot="public" virt="non-virtual"><scope>QuantLib::detail::BilinearInterpolationImpl</scope><name>templateImpl</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_bilinear_interpolation_impl_1abf8e3075f2f79d0ce9a125f32b509414" prot="public" virt="virtual"><scope>QuantLib::detail::BilinearInterpolationImpl</scope><name>value</name></member>
      <member refid="class_quant_lib_1_1_interpolation2_d_1_1template_impl_1a63835baaa1cf70e4fa09f41a6113038e" prot="protected" virt="non-virtual"><scope>QuantLib::detail::BilinearInterpolationImpl</scope><name>xBegin_</name></member>
      <member refid="class_quant_lib_1_1_interpolation2_d_1_1template_impl_1a221ee0c696c4cb9fbb69d6a8dd690785" prot="protected" virt="non-virtual"><scope>QuantLib::detail::BilinearInterpolationImpl</scope><name>xEnd_</name></member>
      <member refid="class_quant_lib_1_1_interpolation2_d_1_1template_impl_1ac35987650c8c0a6f8abde18743ba595e" prot="public" virt="virtual"><scope>QuantLib::detail::BilinearInterpolationImpl</scope><name>xMax</name></member>
      <member refid="class_quant_lib_1_1_interpolation2_d_1_1template_impl_1adaf76aaa90670821f559f08d5c38b52d" prot="public" virt="virtual"><scope>QuantLib::detail::BilinearInterpolationImpl</scope><name>xMin</name></member>
      <member refid="class_quant_lib_1_1_interpolation2_d_1_1template_impl_1a24224b232d2a4e948732532e2136bbd6" prot="public" virt="virtual"><scope>QuantLib::detail::BilinearInterpolationImpl</scope><name>xValues</name></member>
      <member refid="class_quant_lib_1_1_interpolation2_d_1_1template_impl_1a861bfd863bc53817cff7c92bc4e4bd22" prot="protected" virt="non-virtual"><scope>QuantLib::detail::BilinearInterpolationImpl</scope><name>yBegin_</name></member>
      <member refid="class_quant_lib_1_1_interpolation2_d_1_1template_impl_1a31df7e9d994e34320c06de8a38eee024" prot="protected" virt="non-virtual"><scope>QuantLib::detail::BilinearInterpolationImpl</scope><name>yEnd_</name></member>
      <member refid="class_quant_lib_1_1_interpolation2_d_1_1template_impl_1a91c35b60e43c552262a4504622c48857" prot="public" virt="virtual"><scope>QuantLib::detail::BilinearInterpolationImpl</scope><name>yMax</name></member>
      <member refid="class_quant_lib_1_1_interpolation2_d_1_1template_impl_1a37f34c7dfa7bbd6c74c81ea4e650839b" prot="public" virt="virtual"><scope>QuantLib::detail::BilinearInterpolationImpl</scope><name>yMin</name></member>
      <member refid="class_quant_lib_1_1_interpolation2_d_1_1template_impl_1ab8e1a36a156a5eba6ec335ade24569c9" prot="public" virt="virtual"><scope>QuantLib::detail::BilinearInterpolationImpl</scope><name>yValues</name></member>
      <member refid="class_quant_lib_1_1_interpolation2_d_1_1template_impl_1af65d197ad43afe045415c9588f4b40da" prot="public" virt="virtual"><scope>QuantLib::detail::BilinearInterpolationImpl</scope><name>zData</name></member>
      <member refid="class_quant_lib_1_1_interpolation2_d_1_1template_impl_1a956b30d5267074897cd91e1d06288dae" prot="protected" virt="non-virtual"><scope>QuantLib::detail::BilinearInterpolationImpl</scope><name>zData_</name></member>
      <member refid="class_quant_lib_1_1_interpolation2_d_1_1_impl_1a9e13048381c03cd6eb8795ed421f270c" prot="public" virt="virtual"><scope>QuantLib::detail::BilinearInterpolationImpl</scope><name>~Impl</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

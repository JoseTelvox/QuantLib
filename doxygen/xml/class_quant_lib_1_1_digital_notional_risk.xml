<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_digital_notional_risk" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::DigitalNotionalRisk</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_notional_risk" prot="public" virt="non-virtual">QuantLib::NotionalRisk</basecompoundref>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_digital_notional_risk_1a1b9e315a02ebf64777d8bbb39bf87d3e" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::DigitalNotionalRisk::threshold_</definition>
        <argsstring></argsstring>
        <name>threshold_</name>
        <qualifiedname>QuantLib::DigitalNotionalRisk::threshold_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/catbonds/riskynotional.hpp" line="86" column="14" bodyfile="ql/experimental/catbonds/riskynotional.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_digital_notional_risk_1af59a58c47b14e796e1b243a66b54d997" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::DigitalNotionalRisk::DigitalNotionalRisk</definition>
        <argsstring>(const ext::shared_ptr&lt; EventPaymentOffset &gt; &amp;paymentOffset, Real threshold)</argsstring>
        <name>DigitalNotionalRisk</name>
        <qualifiedname>QuantLib::DigitalNotionalRisk::DigitalNotionalRisk</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_event_payment_offset" kindref="compound">EventPaymentOffset</ref> &gt; &amp;</type>
          <declname>paymentOffset</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>threshold</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/catbonds/riskynotional.hpp" line="78" column="9" bodyfile="ql/experimental/catbonds/riskynotional.hpp" bodystart="78" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_digital_notional_risk_1a3388975545010a16972167272ef448a9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::DigitalNotionalRisk::updatePath</definition>
        <argsstring>(const std::vector&lt; std::pair&lt; Date, Real &gt; &gt; &amp;events, NotionalPath &amp;path) const override</argsstring>
        <name>updatePath</name>
        <qualifiedname>QuantLib::DigitalNotionalRisk::updatePath</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_notional_risk_1aa0d25ebe95b3add985ee4c89178e383c">updatePath</reimplements>
        <param>
          <type>const std::vector&lt; std::pair&lt; <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>, <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &gt; &amp;</type>
          <declname>events</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_notional_path" kindref="compound">NotionalPath</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/catbonds/riskynotional.hpp" line="82" column="14" bodyfile="ql/experimental/catbonds/riskynotional.cpp" bodystart="50" bodyend="58"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::DigitalNotionalRisk</label>
        <link refid="class_quant_lib_1_1_digital_notional_risk"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::NotionalRisk</label>
        <link refid="class_quant_lib_1_1_notional_risk"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::DigitalNotionalRisk</label>
        <link refid="class_quant_lib_1_1_digital_notional_risk"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::NotionalRisk</label>
        <link refid="class_quant_lib_1_1_notional_risk"/>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/catbonds/riskynotional.hpp" line="76" column="5" bodyfile="ql/experimental/catbonds/riskynotional.hpp" bodystart="76" bodyend="87"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_digital_notional_risk_1af59a58c47b14e796e1b243a66b54d997" prot="public" virt="non-virtual"><scope>QuantLib::DigitalNotionalRisk</scope><name>DigitalNotionalRisk</name></member>
      <member refid="class_quant_lib_1_1_notional_risk_1a14562d4be9e11bc2d34d1adab3fe60b9" prot="public" virt="non-virtual"><scope>QuantLib::DigitalNotionalRisk</scope><name>NotionalRisk</name></member>
      <member refid="class_quant_lib_1_1_notional_risk_1aad5e0b933eb01caccc66385088c017cd" prot="protected" virt="non-virtual"><scope>QuantLib::DigitalNotionalRisk</scope><name>paymentOffset_</name></member>
      <member refid="class_quant_lib_1_1_digital_notional_risk_1a1b9e315a02ebf64777d8bbb39bf87d3e" prot="protected" virt="non-virtual"><scope>QuantLib::DigitalNotionalRisk</scope><name>threshold_</name></member>
      <member refid="class_quant_lib_1_1_digital_notional_risk_1a3388975545010a16972167272ef448a9" prot="public" virt="virtual"><scope>QuantLib::DigitalNotionalRisk</scope><name>updatePath</name></member>
      <member refid="class_quant_lib_1_1_notional_risk_1a18c75f716ac910cc8d91ddffcd4da813" prot="public" virt="virtual"><scope>QuantLib::DigitalNotionalRisk</scope><name>~NotionalRisk</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

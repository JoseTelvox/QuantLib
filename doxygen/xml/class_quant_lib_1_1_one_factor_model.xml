<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_one_factor_model" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::OneFactorModel</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_short_rate_model" prot="public" virt="non-virtual">QuantLib::ShortRateModel</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_black_karasinski" prot="public" virt="non-virtual">QuantLib::BlackKarasinski</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_one_factor_affine_model" prot="public" virt="non-virtual">QuantLib::OneFactorAffineModel</derivedcompoundref>
    <includes refid="onefactormodel_8hpp" local="no">onefactormodel.hpp</includes>
    <innerclass refid="class_quant_lib_1_1_one_factor_model_1_1_short_rate_dynamics" prot="public">QuantLib::OneFactorModel::ShortRateDynamics</innerclass>
    <innerclass refid="class_quant_lib_1_1_one_factor_model_1_1_short_rate_tree" prot="public">QuantLib::OneFactorModel::ShortRateTree</innerclass>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_one_factor_model_1a5a46125d5e17846020c0f2562b26e371" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::OneFactorModel::OneFactorModel</definition>
        <argsstring>(Size nArguments)</argsstring>
        <name>OneFactorModel</name>
        <qualifiedname>QuantLib::OneFactorModel::OneFactorModel</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>nArguments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodel.hpp" line="40" column="18" bodyfile="ql/models/shortrate/onefactormodel.cpp" bodystart="86" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_one_factor_model_1ac6681ea431a84683013da24f2a04f5eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::OneFactorModel::~OneFactorModel</definition>
        <argsstring>() override=default</argsstring>
        <name>~OneFactorModel</name>
        <qualifiedname>QuantLib::OneFactorModel::~OneFactorModel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodel.hpp" line="41" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_one_factor_model_1a8d62ee9199d0c0d3fe4e9b562537bcd3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_one_factor_model_1_1_short_rate_dynamics" kindref="compound">ShortRateDynamics</ref> &gt;</type>
        <definition>virtual ext::shared_ptr&lt; ShortRateDynamics &gt; QuantLib::OneFactorModel::dynamics</definition>
        <argsstring>() const =0</argsstring>
        <name>dynamics</name>
        <qualifiedname>QuantLib::OneFactorModel::dynamics</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_black_karasinski_1a643dcb4d6161c84d32ffa2dbfdce6a68">dynamics</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_cox_ingersoll_ross_1a18fa90df6d3080704d2c0d1344a01708">dynamics</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_extended_cox_ingersoll_ross_1a62fcfa8a8beeec95638602b1d9d65fe5">dynamics</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_generalized_hull_white_1a31071d5b9de04633f92e7f05c32d9a9d">dynamics</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_hull_white_1a87c4e4806bbc2520b3af8406005c0152">dynamics</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_vasicek_1af876d60a2ad452f06ec6f1782facc53e">dynamics</reimplementedby>
        <briefdescription>
<para>returns the short-rate dynamics </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodel.hpp" line="47" column="33"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_one_factor_model_1a532bdd653eaa92c5b2c05e2e536fa684" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_lattice" kindref="compound">Lattice</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; Lattice &gt; QuantLib::OneFactorModel::tree</definition>
        <argsstring>(const TimeGrid &amp;grid) const override</argsstring>
        <name>tree</name>
        <qualifiedname>QuantLib::OneFactorModel::tree</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_short_rate_model_1ae29f41ca551d424e53bac5967353e8ae">tree</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_time_grid" kindref="compound">TimeGrid</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <briefdescription>
<para>Return by default a trinomial recombining tree. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodel.hpp" line="50" column="25" bodyfile="ql/models/shortrate/onefactormodel.cpp" bodystart="90" bodyend="95"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Single-factor short-rate model abstract class. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="6">
        <label>QuantLib::BlackKarasinski</label>
        <link refid="class_quant_lib_1_1_black_karasinski"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::CalibratedModel</label>
        <link refid="class_quant_lib_1_1_calibrated_model"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::CoxIngersollRoss</label>
        <link refid="class_quant_lib_1_1_cox_ingersoll_ross"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QuantLib::ExtendedCoxIngersollRoss</label>
        <link refid="class_quant_lib_1_1_extended_cox_ingersoll_ross"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QuantLib::GeneralizedHullWhite</label>
        <link refid="class_quant_lib_1_1_generalized_hull_white"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>QuantLib::HullWhite</label>
        <link refid="class_quant_lib_1_1_hull_white"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="7">
        <label>QuantLib::OneFactorAffineModel</label>
        <link refid="class_quant_lib_1_1_one_factor_affine_model"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::OneFactorModel</label>
        <link refid="class_quant_lib_1_1_one_factor_model"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::ShortRateModel</label>
        <link refid="class_quant_lib_1_1_short_rate_model"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>QuantLib::Vasicek</label>
        <link refid="class_quant_lib_1_1_vasicek"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>QuantLib::Array</label>
        <link refid="class_quant_lib_1_1_array"/>
      </node>
      <node id="3">
        <label>QuantLib::CalibratedModel</label>
        <link refid="class_quant_lib_1_1_calibrated_model"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>problemValues_</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="1">
        <label>QuantLib::OneFactorModel</label>
        <link refid="class_quant_lib_1_1_one_factor_model"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::ShortRateModel</label>
        <link refid="class_quant_lib_1_1_short_rate_model"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/models/shortrate/onefactormodel.hpp" line="38" column="5" bodyfile="ql/models/shortrate/onefactormodel.hpp" bodystart="38" bodyend="51"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_calibrated_model_1a063e96ccbf2ebbdb39341822083bd37c" prot="protected" virt="non-virtual"><scope>QuantLib::OneFactorModel</scope><name>arguments_</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1af2776521b1584d547ec2440833508677" prot="public" virt="virtual"><scope>QuantLib::OneFactorModel</scope><name>calibrate</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a6368e7ce0867de464f64d7b104b79b85" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorModel</scope><name>CalibratedModel</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a3b1198e322e93d700c2b48fe0cd888cf" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorModel</scope><name>constraint</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1add85b46f3e818f3916bd30eb85d877ef" prot="protected" virt="non-virtual"><scope>QuantLib::OneFactorModel</scope><name>constraint_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::OneFactorModel</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_one_factor_model_1a8d62ee9199d0c0d3fe4e9b562537bcd3" prot="public" virt="pure-virtual"><scope>QuantLib::OneFactorModel</scope><name>dynamics</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a797a6b080b7a66d620758ff6fe34df39" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorModel</scope><name>endCriteria</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a66027503e827f56c83a5a60f8f066d84" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorModel</scope><name>functionEvaluation</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a6b9b9c042c526902626eead4de47e74c" prot="protected" virt="non-virtual"><scope>QuantLib::OneFactorModel</scope><name>functionEvaluation_</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a9282281fe5c1dbc558462648b72b6e18" prot="protected" virt="virtual"><scope>QuantLib::OneFactorModel</scope><name>generateArguments</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorModel</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorModel</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorModel</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::CalibratedModel::"><scope>QuantLib::OneFactorModel</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::CalibratedModel::"><scope>QuantLib::OneFactorModel</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorModel</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::CalibratedModel::"><scope>QuantLib::OneFactorModel</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_one_factor_model_1a5a46125d5e17846020c0f2562b26e371" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorModel</scope><name>OneFactorModel</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::OneFactorModel</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::CalibratedModel::QuantLib::Observable::"><scope>QuantLib::OneFactorModel</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::OneFactorModel</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1adae9352d30045e32f5382fa79a0bc88c" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorModel</scope><name>params</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1ab7766a4e575c67e8f1e00f98bfe2e8c6" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorModel</scope><name>problemValues</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a4341c3bd6dc46bc9380bb4d52c032d25" prot="protected" virt="non-virtual"><scope>QuantLib::OneFactorModel</scope><name>problemValues_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorModel</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorModel</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a018930665d7468824b0f1800b7472eb6" prot="public" virt="virtual"><scope>QuantLib::OneFactorModel</scope><name>setParams</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a91f2d3c3d84fbe420b0d842de338037e" prot="protected" virt="non-virtual"><scope>QuantLib::OneFactorModel</scope><name>shortRateEndCriteria_</name></member>
      <member refid="class_quant_lib_1_1_short_rate_model_1a372926acccb7e867cbd64657b3ad36db" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorModel</scope><name>ShortRateModel</name></member>
      <member refid="class_quant_lib_1_1_one_factor_model_1a532bdd653eaa92c5b2c05e2e536fa684" prot="public" virt="virtual"><scope>QuantLib::OneFactorModel</scope><name>tree</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorModel</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorModel</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a03d7cb63ca181a47a45994cfe448e42c" prot="public" virt="virtual"><scope>QuantLib::OneFactorModel</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a2652178a7f9d28ca4e213f76b55c87e9" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorModel</scope><name>value</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::OneFactorModel</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::OneFactorModel</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_one_factor_model_1ac6681ea431a84683013da24f2a04f5eb" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorModel</scope><name>~OneFactorModel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_calibrated_model_1_1_calibration_function" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::CalibratedModel::CalibrationFunction</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_cost_function" prot="public" virt="non-virtual">QuantLib::CostFunction</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_calibrated_model_1_1_calibration_function_1a5c50b85680ba88eeaeefd51d53b97a2b" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_calibrated_model" kindref="compound">CalibratedModel</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;CalibratedModel&gt; QuantLib::CalibratedModel::CalibrationFunction::model_</definition>
        <argsstring></argsstring>
        <name>model_</name>
        <qualifiedname>QuantLib::CalibratedModel::CalibrationFunction::model_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/model.cpp" line="69" column="25" bodyfile="ql/models/model.cpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_calibrated_model_1_1_calibration_function_1a313d695bd1ea16a9303e1488fb9b3f9c" prot="private" static="no" mutable="no">
        <type>const vector&lt; ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_calibration_helper" kindref="compound">CalibrationHelper</ref> &gt; &gt; &amp;</type>
        <definition>const vector&lt;ext::shared_ptr&lt;CalibrationHelper&gt; &gt;&amp; QuantLib::CalibratedModel::CalibrationFunction::instruments_</definition>
        <argsstring></argsstring>
        <name>instruments_</name>
        <qualifiedname>QuantLib::CalibratedModel::CalibrationFunction::instruments_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/model.cpp" line="70" column="22" bodyfile="ql/models/model.cpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_calibrated_model_1_1_calibration_function_1af235f004b9689cf70843b6282ff235ba" prot="private" static="no" mutable="no">
        <type>vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>vector&lt;Real&gt; QuantLib::CalibratedModel::CalibrationFunction::weights_</definition>
        <argsstring></argsstring>
        <name>weights_</name>
        <qualifiedname>QuantLib::CalibratedModel::CalibrationFunction::weights_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/model.cpp" line="71" column="16" bodyfile="ql/models/model.cpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_calibrated_model_1_1_calibration_function_1a5061dd202995dc5f1b9009849d6d2ac8" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_quant_lib_1_1_projection" kindref="compound">Projection</ref></type>
        <definition>const Projection QuantLib::CalibratedModel::CalibrationFunction::projection_</definition>
        <argsstring></argsstring>
        <name>projection_</name>
        <qualifiedname>QuantLib::CalibratedModel::CalibrationFunction::projection_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/model.cpp" line="72" column="26" bodyfile="ql/models/model.cpp" bodystart="72" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_calibrated_model_1_1_calibration_function_1ad2117c65e2aa65ed43f843343aeddfec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::CalibratedModel::CalibrationFunction::CalibrationFunction</definition>
        <argsstring>(CalibratedModel *model, const vector&lt; ext::shared_ptr&lt; CalibrationHelper &gt; &gt; &amp;h, vector&lt; Real &gt; weights, const Projection &amp;projection)</argsstring>
        <name>CalibrationFunction</name>
        <qualifiedname>QuantLib::CalibratedModel::CalibrationFunction::CalibrationFunction</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_calibrated_model" kindref="compound">CalibratedModel</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const vector&lt; ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_calibration_helper" kindref="compound">CalibrationHelper</ref> &gt; &gt; &amp;</type>
          <declname>h</declname>
        </param>
        <param>
          <type>vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_projection" kindref="compound">Projection</ref> &amp;</type>
          <declname>projection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/model.cpp" line="37" column="9" bodyfile="ql/models/model.cpp" bodystart="37" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_calibrated_model_1_1_calibration_function_1ac76cf72bf7783fac7db8f10f26478da0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::CalibratedModel::CalibrationFunction::~CalibrationFunction</definition>
        <argsstring>() override=default</argsstring>
        <name>~CalibrationFunction</name>
        <qualifiedname>QuantLib::CalibratedModel::CalibrationFunction::~CalibrationFunction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/model.cpp" line="44" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_calibrated_model_1_1_calibration_function_1acdc3e848f5f9505bfb6b948514ed4c9e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CalibratedModel::CalibrationFunction::value</definition>
        <argsstring>(const Array &amp;params) const override</argsstring>
        <name>value</name>
        <qualifiedname>QuantLib::CalibratedModel::CalibrationFunction::value</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_cost_function_1a2255742e3e05477d773cdf3705411661">value</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>method to overload to compute the cost function value in x </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/model.cpp" line="46" column="14" bodyfile="ql/models/model.cpp" bodystart="46" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_calibrated_model_1_1_calibration_function_1ad42f7ec30f20588760c5c5b6239fae28" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::CalibratedModel::CalibrationFunction::values</definition>
        <argsstring>(const Array &amp;params) const override</argsstring>
        <name>values</name>
        <qualifiedname>QuantLib::CalibratedModel::CalibrationFunction::values</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_cost_function_1ab43da17891b724c8352c01c2478d04db">values</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>method to overload to compute the cost function values in x </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/model.cpp" line="56" column="15" bodyfile="ql/models/model.cpp" bodystart="56" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_calibrated_model_1_1_calibration_function_1a3193ba8645a98f248a336970218c2684" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CalibratedModel::CalibrationFunction::finiteDifferenceEpsilon</definition>
        <argsstring>() const override</argsstring>
        <name>finiteDifferenceEpsilon</name>
        <qualifiedname>QuantLib::CalibratedModel::CalibrationFunction::finiteDifferenceEpsilon</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_cost_function_1a0dc9070b6d79cf91aef8ba48e2808263">finiteDifferenceEpsilon</reimplements>
        <briefdescription>
<para><ref refid="struct_quant_lib_1_1_default" kindref="compound">Default</ref> epsilon for finite difference method : </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/model.cpp" line="66" column="14" bodyfile="ql/models/model.cpp" bodystart="66" bodyend="66"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::CalibratedModel::CalibrationFunction</label>
        <link refid="class_quant_lib_1_1_calibrated_model_1_1_calibration_function"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::CostFunction</label>
        <link refid="class_quant_lib_1_1_cost_function"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::CalibratedModel::CalibrationFunction</label>
        <link refid="class_quant_lib_1_1_calibrated_model_1_1_calibration_function"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::CostFunction</label>
        <link refid="class_quant_lib_1_1_cost_function"/>
      </node>
    </collaborationgraph>
    <location file="ql/models/model.cpp" line="35" column="5" bodyfile="ql/models/model.cpp" bodystart="35" bodyend="73"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_calibrated_model_1_1_calibration_function_1ad2117c65e2aa65ed43f843343aeddfec" prot="public" virt="non-virtual"><scope>QuantLib::CalibratedModel::CalibrationFunction</scope><name>CalibrationFunction</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1_1_calibration_function_1a3193ba8645a98f248a336970218c2684" prot="public" virt="virtual"><scope>QuantLib::CalibratedModel::CalibrationFunction</scope><name>finiteDifferenceEpsilon</name></member>
      <member refid="class_quant_lib_1_1_cost_function_1aad44fa61459514a8e55208d50716698b" prot="public" virt="virtual"><scope>QuantLib::CalibratedModel::CalibrationFunction</scope><name>gradient</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1_1_calibration_function_1a313d695bd1ea16a9303e1488fb9b3f9c" prot="private" virt="non-virtual"><scope>QuantLib::CalibratedModel::CalibrationFunction</scope><name>instruments_</name></member>
      <member refid="class_quant_lib_1_1_cost_function_1a5bf2d8163ed5dea7ec811377e2835eca" prot="public" virt="virtual"><scope>QuantLib::CalibratedModel::CalibrationFunction</scope><name>jacobian</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1_1_calibration_function_1a5c50b85680ba88eeaeefd51d53b97a2b" prot="private" virt="non-virtual"><scope>QuantLib::CalibratedModel::CalibrationFunction</scope><name>model_</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1_1_calibration_function_1a5061dd202995dc5f1b9009849d6d2ac8" prot="private" virt="non-virtual"><scope>QuantLib::CalibratedModel::CalibrationFunction</scope><name>projection_</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1_1_calibration_function_1acdc3e848f5f9505bfb6b948514ed4c9e" prot="public" virt="virtual"><scope>QuantLib::CalibratedModel::CalibrationFunction</scope><name>value</name></member>
      <member refid="class_quant_lib_1_1_cost_function_1ae0c8902d6ce2e535237ae4370956d161" prot="public" virt="virtual"><scope>QuantLib::CalibratedModel::CalibrationFunction</scope><name>valueAndGradient</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1_1_calibration_function_1ad42f7ec30f20588760c5c5b6239fae28" prot="public" virt="virtual"><scope>QuantLib::CalibratedModel::CalibrationFunction</scope><name>values</name></member>
      <member refid="class_quant_lib_1_1_cost_function_1a1aa00768b27a3446404b3029660c2e68" prot="public" virt="virtual"><scope>QuantLib::CalibratedModel::CalibrationFunction</scope><name>valuesAndJacobian</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1_1_calibration_function_1af235f004b9689cf70843b6282ff235ba" prot="private" virt="non-virtual"><scope>QuantLib::CalibratedModel::CalibrationFunction</scope><name>weights_</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1_1_calibration_function_1ac76cf72bf7783fac7db8f10f26478da0" prot="public" virt="non-virtual"><scope>QuantLib::CalibratedModel::CalibrationFunction</scope><name>~CalibrationFunction</name></member>
      <member refid="class_quant_lib_1_1_cost_function_1a04929e863b85bc26f50ad9052ba7ee73" prot="public" virt="virtual"><scope>QuantLib::CalibratedModel::CalibrationFunction</scope><name>~CostFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

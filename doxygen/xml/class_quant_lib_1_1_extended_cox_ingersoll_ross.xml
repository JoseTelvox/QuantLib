<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_extended_cox_ingersoll_ross" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::ExtendedCoxIngersollRoss</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_cox_ingersoll_ross" prot="public" virt="non-virtual">QuantLib::CoxIngersollRoss</basecompoundref>
    <basecompoundref refid="class_quant_lib_1_1_term_structure_consistent_model" prot="public" virt="non-virtual">QuantLib::TermStructureConsistentModel</basecompoundref>
    <includes refid="extendedcoxingersollross_8hpp" local="no">extendedcoxingersollross.hpp</includes>
    <innerclass refid="class_quant_lib_1_1_extended_cox_ingersoll_ross_1_1_dynamics" prot="public">QuantLib::ExtendedCoxIngersollRoss::Dynamics</innerclass>
    <innerclass refid="class_quant_lib_1_1_extended_cox_ingersoll_ross_1_1_fitting_parameter" prot="public">QuantLib::ExtendedCoxIngersollRoss::FittingParameter</innerclass>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_extended_cox_ingersoll_ross_1ae9cf75a20ea8c53659bec3bccafcbe3e" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_parameter" kindref="compound">Parameter</ref></type>
        <definition>Parameter QuantLib::ExtendedCoxIngersollRoss::phi_</definition>
        <argsstring></argsstring>
        <name>phi_</name>
        <qualifiedname>QuantLib::ExtendedCoxIngersollRoss::phi_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/extendedcoxingersollross.hpp" line="75" column="19" bodyfile="ql/models/shortrate/onefactormodels/extendedcoxingersollross.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_extended_cox_ingersoll_ross_1a274697387e20c4f52a1fbe75a9cb765d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ExtendedCoxIngersollRoss::ExtendedCoxIngersollRoss</definition>
        <argsstring>(const Handle&lt; YieldTermStructure &gt; &amp;termStructure, Real theta=0.1, Real k=0.1, Real sigma=0.1, Real x0=0.05, bool withFellerConstraint=true)</argsstring>
        <name>ExtendedCoxIngersollRoss</name>
        <qualifiedname>QuantLib::ExtendedCoxIngersollRoss::ExtendedCoxIngersollRoss</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>termStructure</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>theta</declname>
          <defval>0.1</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>k</declname>
          <defval>0.1</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>sigma</declname>
          <defval>0.1</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x0</declname>
          <defval>0.05</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>withFellerConstraint</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/extendedcoxingersollross.hpp" line="50" column="9" bodyfile="ql/models/shortrate/onefactormodels/extendedcoxingersollross.cpp" bodystart="27" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_extended_cox_ingersoll_ross_1aed96ac09d1d02523a66fba4aa7a5cfea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_lattice" kindref="compound">Lattice</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; Lattice &gt; QuantLib::ExtendedCoxIngersollRoss::tree</definition>
        <argsstring>(const TimeGrid &amp;grid) const override</argsstring>
        <name>tree</name>
        <qualifiedname>QuantLib::ExtendedCoxIngersollRoss::tree</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_cox_ingersoll_ross_1a1aac1d69ddd50ede44d15c6f53517a38">tree</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_time_grid" kindref="compound">TimeGrid</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/extendedcoxingersollross.hpp" line="58" column="25" bodyfile="ql/models/shortrate/onefactormodels/extendedcoxingersollross.cpp" bodystart="36" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_extended_cox_ingersoll_ross_1a62fcfa8a8beeec95638602b1d9d65fe5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_one_factor_model_1_1_short_rate_dynamics" kindref="compound">ShortRateDynamics</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; OneFactorModel::ShortRateDynamics &gt; QuantLib::ExtendedCoxIngersollRoss::dynamics</definition>
        <argsstring>() const override</argsstring>
        <name>dynamics</name>
        <qualifiedname>QuantLib::ExtendedCoxIngersollRoss::dynamics</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_cox_ingersoll_ross_1a18fa90df6d3080704d2c0d1344a01708">dynamics</reimplements>
        <briefdescription>
<para>returns the short-rate dynamics </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/extendedcoxingersollross.hpp" line="60" column="25" bodyfile="ql/models/shortrate/onefactormodels/extendedcoxingersollross.hpp" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_extended_cox_ingersoll_ross_1a5af60822ddb165289e15c84bedbb3002" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ExtendedCoxIngersollRoss::discountBondOption</definition>
        <argsstring>(Option::Type type, Real strike, Time maturity, Time bondMaturity) const override</argsstring>
        <name>discountBondOption</name>
        <qualifiedname>QuantLib::ExtendedCoxIngersollRoss::discountBondOption</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_cox_ingersoll_ross_1ad2f011143e80a6c0fd72af018fba0b73">discountBondOption</reimplements>
        <param>
          <type>Option::Type</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>maturity</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>bondMaturity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/extendedcoxingersollross.hpp" line="62" column="14" bodyfile="ql/models/shortrate/onefactormodels/extendedcoxingersollross.cpp" bodystart="62" bodyend="106"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_extended_cox_ingersoll_ross_1a62853f19e479c511439fc16cc55caa2f" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::ExtendedCoxIngersollRoss::generateArguments</definition>
        <argsstring>() override</argsstring>
        <name>generateArguments</name>
        <qualifiedname>QuantLib::ExtendedCoxIngersollRoss::generateArguments</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_calibrated_model_1a9282281fe5c1dbc558462648b72b6e18">generateArguments</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/extendedcoxingersollross.hpp" line="68" column="14" bodyfile="ql/models/shortrate/onefactormodels/extendedcoxingersollross.hpp" bodystart="154" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_extended_cox_ingersoll_ross_1ad3bbce1c7aaa5d9f7e5b0bb901314885" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ExtendedCoxIngersollRoss::A</definition>
        <argsstring>(Time t, Time T) const override</argsstring>
        <name>A</name>
        <qualifiedname>QuantLib::ExtendedCoxIngersollRoss::A</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_cox_ingersoll_ross_1a37d5a4f43ec429ae5877cf05058c18c9">A</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>T</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/extendedcoxingersollross.hpp" line="69" column="14" bodyfile="ql/models/shortrate/onefactormodels/extendedcoxingersollross.cpp" bodystart="53" bodyend="60"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Extended Cox-Ingersoll-Ross model class. </para>
    </briefdescription>
    <detaileddescription>
<para>This class implements the extended Cox-Ingersoll-Ross model defined by   <formula id="398">\[    r(t) = \varphi(t)+y(t)
\]</formula> where <formula id="180">$ \varphi(t) $</formula> is the deterministic time-dependent parameter used for term-structure fitting and <formula id="399">$ y_t $</formula> is a standard CIR process.</para>
<para><xrefsect id="bug_1_bug000006"><xreftitle>Bug</xreftitle><xrefdescription><para>this class was not tested enough to guarantee its functionality.</para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <inheritancegraph>
      <node id="9">
        <label>QuantLib::AffineModel</label>
        <link refid="class_quant_lib_1_1_affine_model"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::CalibratedModel</label>
        <link refid="class_quant_lib_1_1_calibrated_model"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::CoxIngersollRoss</label>
        <link refid="class_quant_lib_1_1_cox_ingersoll_ross"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::ExtendedCoxIngersollRoss</label>
        <link refid="class_quant_lib_1_1_extended_cox_ingersoll_ross"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="7">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="3">
        <label>QuantLib::OneFactorAffineModel</label>
        <link refid="class_quant_lib_1_1_one_factor_affine_model"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::OneFactorModel</label>
        <link refid="class_quant_lib_1_1_one_factor_model"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::ShortRateModel</label>
        <link refid="class_quant_lib_1_1_short_rate_model"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QuantLib::TermStructureConsistentModel</label>
        <link refid="class_quant_lib_1_1_term_structure_consistent_model"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10">
        <label>QuantLib::AffineModel</label>
        <link refid="class_quant_lib_1_1_affine_model"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QuantLib::Array</label>
        <link refid="class_quant_lib_1_1_array"/>
      </node>
      <node id="6">
        <label>QuantLib::CalibratedModel</label>
        <link refid="class_quant_lib_1_1_calibrated_model"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>problemValues_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::CoxIngersollRoss</label>
        <link refid="class_quant_lib_1_1_cox_ingersoll_ross"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::ExtendedCoxIngersollRoss</label>
        <link refid="class_quant_lib_1_1_extended_cox_ingersoll_ross"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="7">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="3">
        <label>QuantLib::OneFactorAffineModel</label>
        <link refid="class_quant_lib_1_1_one_factor_affine_model"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::OneFactorModel</label>
        <link refid="class_quant_lib_1_1_one_factor_model"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::ShortRateModel</label>
        <link refid="class_quant_lib_1_1_short_rate_model"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>QuantLib::TermStructureConsistentModel</label>
        <link refid="class_quant_lib_1_1_term_structure_consistent_model"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/models/shortrate/onefactormodels/extendedcoxingersollross.hpp" line="47" column="5" bodyfile="ql/models/shortrate/onefactormodels/extendedcoxingersollross.hpp" bodystart="48" bodyend="76"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_extended_cox_ingersoll_ross_1ad3bbce1c7aaa5d9f7e5b0bb901314885" prot="protected" virt="virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>A</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a063e96ccbf2ebbdb39341822083bd37c" prot="protected" virt="non-virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>arguments_</name></member>
      <member refid="class_quant_lib_1_1_cox_ingersoll_ross_1a753833ec7cd947a8363d116a41352894" prot="protected" virt="virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>B</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1af2776521b1584d547ec2440833508677" prot="public" virt="virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>calibrate</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a6368e7ce0867de464f64d7b104b79b85" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>CalibratedModel</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a3b1198e322e93d700c2b48fe0cd888cf" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>constraint</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1add85b46f3e818f3916bd30eb85d877ef" prot="protected" virt="non-virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>constraint_</name></member>
      <member refid="class_quant_lib_1_1_cox_ingersoll_ross_1a70c50e248c16eefcb14084d77c56dace" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>CoxIngersollRoss</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_one_factor_affine_model_1a0247518bb81c11a725f53228d6e271dc" prot="public" virt="virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>discount</name></member>
      <member refid="class_quant_lib_1_1_one_factor_affine_model_1a5911b73fc6e682bc12db08925e82c396" prot="public" virt="virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>discountBond</name></member>
      <member refid="class_quant_lib_1_1_one_factor_affine_model_1a43fb17531dc31036c9d277d1c69b0018" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>discountBond</name></member>
      <member refid="class_quant_lib_1_1_extended_cox_ingersoll_ross_1a5af60822ddb165289e15c84bedbb3002" prot="public" virt="virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>discountBondOption</name></member>
      <member refid="class_quant_lib_1_1_affine_model_1a6be43b6fa4380dee96cc59449025bb2b" prot="public" virt="virtual" ambiguityscope="QuantLib::OneFactorAffineModel::"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>discountBondOption</name></member>
      <member refid="class_quant_lib_1_1_extended_cox_ingersoll_ross_1a62fcfa8a8beeec95638602b1d9d65fe5" prot="public" virt="virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>dynamics</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a797a6b080b7a66d620758ff6fe34df39" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>endCriteria</name></member>
      <member refid="class_quant_lib_1_1_extended_cox_ingersoll_ross_1a274697387e20c4f52a1fbe75a9cb765d" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>ExtendedCoxIngersollRoss</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a66027503e827f56c83a5a60f8f066d84" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>functionEvaluation</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a6b9b9c042c526902626eead4de47e74c" prot="protected" virt="non-virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>functionEvaluation_</name></member>
      <member refid="class_quant_lib_1_1_extended_cox_ingersoll_ross_1a62853f19e479c511439fc16cc55caa2f" prot="protected" virt="virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>generateArguments</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_cox_ingersoll_ross_1ae789a3db73e53ae44c3adf6f703febd2" prot="protected" virt="non-virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>k</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::CalibratedModel::"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::CalibratedModel::"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::CalibratedModel::"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_one_factor_affine_model_1a886ce2d7ee60eb4ba3d5e8d4d5c5fec1" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>OneFactorAffineModel</name></member>
      <member refid="class_quant_lib_1_1_one_factor_model_1a5a46125d5e17846020c0f2562b26e371" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>OneFactorModel</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::CalibratedModel::QuantLib::Observable::"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1adae9352d30045e32f5382fa79a0bc88c" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>params</name></member>
      <member refid="class_quant_lib_1_1_extended_cox_ingersoll_ross_1ae9cf75a20ea8c53659bec3bccafcbe3e" prot="private" virt="non-virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>phi_</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1ab7766a4e575c67e8f1e00f98bfe2e8c6" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>problemValues</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a4341c3bd6dc46bc9380bb4d52c032d25" prot="protected" virt="non-virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>problemValues_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a018930665d7468824b0f1800b7472eb6" prot="public" virt="virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>setParams</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a91f2d3c3d84fbe420b0d842de338037e" prot="protected" virt="non-virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>shortRateEndCriteria_</name></member>
      <member refid="class_quant_lib_1_1_short_rate_model_1a372926acccb7e867cbd64657b3ad36db" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>ShortRateModel</name></member>
      <member refid="class_quant_lib_1_1_cox_ingersoll_ross_1a98a203e46b13275127a15f72d08a063b" prot="protected" virt="non-virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>sigma</name></member>
      <member refid="class_quant_lib_1_1_term_structure_consistent_model_1a3035748f8b1b618e13a45428e3f55f90" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>termStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_consistent_model_1a20d3cd0bfeafc1ed325eb7e5747943a7" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>TermStructureConsistentModel</name></member>
      <member refid="class_quant_lib_1_1_cox_ingersoll_ross_1a1b942d8431ca79baddf5373f920930d7" prot="protected" virt="non-virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>theta</name></member>
      <member refid="class_quant_lib_1_1_extended_cox_ingersoll_ross_1aed96ac09d1d02523a66fba4aa7a5cfea" prot="public" virt="virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>tree</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a03d7cb63ca181a47a45994cfe448e42c" prot="public" virt="virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a2652178a7f9d28ca4e213f76b55c87e9" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>value</name></member>
      <member refid="class_quant_lib_1_1_cox_ingersoll_ross_1a726cb826272a3908ef829bd4bd30a11e" prot="protected" virt="non-virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>x0</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_one_factor_model_1ac6681ea431a84683013da24f2a04f5eb" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedCoxIngersollRoss</scope><name>~OneFactorModel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

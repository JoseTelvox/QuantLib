<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_mod_triple_band_linear_op" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::ModTripleBandLinearOp</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_triple_band_linear_op" prot="public" virt="non-virtual">QuantLib::TripleBandLinearOp</basecompoundref>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_mod_triple_band_linear_op_1a7238e258960ef083bef5a2f7cc6956ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ModTripleBandLinearOp::ModTripleBandLinearOp</definition>
        <argsstring>(Size direction, const ext::shared_ptr&lt; FdmMesher &gt; &amp;mesher)</argsstring>
        <name>ModTripleBandLinearOp</name>
        <qualifiedname>QuantLib::ModTripleBandLinearOp::ModTripleBandLinearOp</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_fdm_mesher" kindref="compound">FdmMesher</ref> &gt; &amp;</type>
          <declname>mesher</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/modtriplebandlinearop.hpp" line="34" column="9" bodyfile="ql/methods/finitedifferences/operators/modtriplebandlinearop.hpp" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_mod_triple_band_linear_op_1a5f213106b40fc0a540e0de014e217d50" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ModTripleBandLinearOp::ModTripleBandLinearOp</definition>
        <argsstring>(const TripleBandLinearOp &amp;m)</argsstring>
        <name>ModTripleBandLinearOp</name>
        <qualifiedname>QuantLib::ModTripleBandLinearOp::ModTripleBandLinearOp</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_triple_band_linear_op" kindref="compound">TripleBandLinearOp</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/modtriplebandlinearop.hpp" line="38" column="18" bodyfile="ql/methods/finitedifferences/operators/modtriplebandlinearop.hpp" bodystart="38" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_mod_triple_band_linear_op_1ab191ae3f640686ca1a1cdd96bbeb18b7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ModTripleBandLinearOp::lower</definition>
        <argsstring>(Size i) const</argsstring>
        <name>lower</name>
        <qualifiedname>QuantLib::ModTripleBandLinearOp::lower</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/modtriplebandlinearop.hpp" line="41" column="14" bodyfile="ql/methods/finitedifferences/operators/modtriplebandlinearop.hpp" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_mod_triple_band_linear_op_1ab062e58df9ae5589bd572a221efdc8b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &amp;</type>
        <definition>Real &amp; QuantLib::ModTripleBandLinearOp::lower</definition>
        <argsstring>(Size i)</argsstring>
        <name>lower</name>
        <qualifiedname>QuantLib::ModTripleBandLinearOp::lower</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/modtriplebandlinearop.hpp" line="42" column="14" bodyfile="ql/methods/finitedifferences/operators/modtriplebandlinearop.hpp" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_mod_triple_band_linear_op_1aa3ea0e123395b3f46ae062a5704954b8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ModTripleBandLinearOp::diag</definition>
        <argsstring>(Size i) const</argsstring>
        <name>diag</name>
        <qualifiedname>QuantLib::ModTripleBandLinearOp::diag</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/modtriplebandlinearop.hpp" line="43" column="14" bodyfile="ql/methods/finitedifferences/operators/modtriplebandlinearop.hpp" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_mod_triple_band_linear_op_1aecabbb1aaf010290f52b8fe57bbd63de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &amp;</type>
        <definition>Real &amp; QuantLib::ModTripleBandLinearOp::diag</definition>
        <argsstring>(Size i)</argsstring>
        <name>diag</name>
        <qualifiedname>QuantLib::ModTripleBandLinearOp::diag</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/modtriplebandlinearop.hpp" line="44" column="14" bodyfile="ql/methods/finitedifferences/operators/modtriplebandlinearop.hpp" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_mod_triple_band_linear_op_1a6f9dbf3df819d938d06ff443931c2709" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ModTripleBandLinearOp::upper</definition>
        <argsstring>(Size i) const</argsstring>
        <name>upper</name>
        <qualifiedname>QuantLib::ModTripleBandLinearOp::upper</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/modtriplebandlinearop.hpp" line="45" column="14" bodyfile="ql/methods/finitedifferences/operators/modtriplebandlinearop.hpp" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_mod_triple_band_linear_op_1a1cede40f50a6a5afc71741afc423f9b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &amp;</type>
        <definition>Real &amp; QuantLib::ModTripleBandLinearOp::upper</definition>
        <argsstring>(Size i)</argsstring>
        <name>upper</name>
        <qualifiedname>QuantLib::ModTripleBandLinearOp::upper</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/modtriplebandlinearop.hpp" line="46" column="14" bodyfile="ql/methods/finitedifferences/operators/modtriplebandlinearop.hpp" bodystart="46" bodyend="46"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>QuantLib::FdmLinearOp</label>
        <link refid="class_quant_lib_1_1_fdm_linear_op"/>
      </node>
      <node id="1">
        <label>QuantLib::ModTripleBandLinearOp</label>
        <link refid="class_quant_lib_1_1_mod_triple_band_linear_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::TripleBandLinearOp</label>
        <link refid="class_quant_lib_1_1_triple_band_linear_op"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>QuantLib::FdmLinearOp</label>
        <link refid="class_quant_lib_1_1_fdm_linear_op"/>
      </node>
      <node id="1">
        <label>QuantLib::ModTripleBandLinearOp</label>
        <link refid="class_quant_lib_1_1_mod_triple_band_linear_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::TripleBandLinearOp</label>
        <link refid="class_quant_lib_1_1_triple_band_linear_op"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/methods/finitedifferences/operators/modtriplebandlinearop.hpp" line="32" column="5" bodyfile="ql/methods/finitedifferences/operators/modtriplebandlinearop.hpp" bodystart="32" bodyend="47"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_triple_band_linear_op_1ab819b99e5a5818058361c257d8ef84d7" prot="public" virt="non-virtual"><scope>QuantLib::ModTripleBandLinearOp</scope><name>add</name></member>
      <member refid="class_quant_lib_1_1_triple_band_linear_op_1abe3d5a7cbebcfbd638ecc9e817e81afa" prot="public" virt="non-virtual"><scope>QuantLib::ModTripleBandLinearOp</scope><name>add</name></member>
      <member refid="class_quant_lib_1_1_triple_band_linear_op_1ac88145891f92b2e962c2e231bdc592d5" prot="public" virt="virtual"><scope>QuantLib::ModTripleBandLinearOp</scope><name>apply</name></member>
      <member refid="class_quant_lib_1_1_fdm_linear_op_1af55693593c0cf7e885c67fd848f76e49" prot="public" virt="non-virtual"><scope>QuantLib::ModTripleBandLinearOp</scope><name>array_type</name></member>
      <member refid="class_quant_lib_1_1_triple_band_linear_op_1a182ab2d770910b37f942446c1e972440" prot="public" virt="non-virtual"><scope>QuantLib::ModTripleBandLinearOp</scope><name>axpyb</name></member>
      <member refid="class_quant_lib_1_1_mod_triple_band_linear_op_1aa3ea0e123395b3f46ae062a5704954b8" prot="public" virt="non-virtual"><scope>QuantLib::ModTripleBandLinearOp</scope><name>diag</name></member>
      <member refid="class_quant_lib_1_1_mod_triple_band_linear_op_1aecabbb1aaf010290f52b8fe57bbd63de" prot="public" virt="non-virtual"><scope>QuantLib::ModTripleBandLinearOp</scope><name>diag</name></member>
      <member refid="class_quant_lib_1_1_triple_band_linear_op_1a38e93a18fec7ff6234d04ee8367138d3" prot="protected" virt="non-virtual"><scope>QuantLib::ModTripleBandLinearOp</scope><name>diag_</name></member>
      <member refid="class_quant_lib_1_1_triple_band_linear_op_1ab6331fc9efd8b906672ff073b0b35a89" prot="protected" virt="non-virtual"><scope>QuantLib::ModTripleBandLinearOp</scope><name>direction_</name></member>
      <member refid="class_quant_lib_1_1_triple_band_linear_op_1a8090712481d0a4804d7c5ae785dd0c55" prot="protected" virt="non-virtual"><scope>QuantLib::ModTripleBandLinearOp</scope><name>i0_</name></member>
      <member refid="class_quant_lib_1_1_triple_band_linear_op_1ab879ee2a9d5d8a2237dc02a8cc2cb81d" prot="protected" virt="non-virtual"><scope>QuantLib::ModTripleBandLinearOp</scope><name>i2_</name></member>
      <member refid="class_quant_lib_1_1_mod_triple_band_linear_op_1ab191ae3f640686ca1a1cdd96bbeb18b7" prot="public" virt="non-virtual"><scope>QuantLib::ModTripleBandLinearOp</scope><name>lower</name></member>
      <member refid="class_quant_lib_1_1_mod_triple_band_linear_op_1ab062e58df9ae5589bd572a221efdc8b3" prot="public" virt="non-virtual"><scope>QuantLib::ModTripleBandLinearOp</scope><name>lower</name></member>
      <member refid="class_quant_lib_1_1_triple_band_linear_op_1a648cccc7b34902f7992d21d6b65fec02" prot="protected" virt="non-virtual"><scope>QuantLib::ModTripleBandLinearOp</scope><name>lower_</name></member>
      <member refid="class_quant_lib_1_1_triple_band_linear_op_1a17f8b7d866160977b8e6c23aa5aa900e" prot="protected" virt="non-virtual"><scope>QuantLib::ModTripleBandLinearOp</scope><name>mesher_</name></member>
      <member refid="class_quant_lib_1_1_mod_triple_band_linear_op_1a7238e258960ef083bef5a2f7cc6956ef" prot="public" virt="non-virtual"><scope>QuantLib::ModTripleBandLinearOp</scope><name>ModTripleBandLinearOp</name></member>
      <member refid="class_quant_lib_1_1_mod_triple_band_linear_op_1a5f213106b40fc0a540e0de014e217d50" prot="public" virt="non-virtual"><scope>QuantLib::ModTripleBandLinearOp</scope><name>ModTripleBandLinearOp</name></member>
      <member refid="class_quant_lib_1_1_triple_band_linear_op_1a361a4e52bac301284a924dea5e89f9ca" prot="public" virt="non-virtual"><scope>QuantLib::ModTripleBandLinearOp</scope><name>mult</name></member>
      <member refid="class_quant_lib_1_1_triple_band_linear_op_1a888e28c3ae53750d91a309a1e885881e" prot="public" virt="non-virtual"><scope>QuantLib::ModTripleBandLinearOp</scope><name>multR</name></member>
      <member refid="class_quant_lib_1_1_triple_band_linear_op_1a7a6ceac87bf5e64a84228863c87bad3b" prot="public" virt="non-virtual"><scope>QuantLib::ModTripleBandLinearOp</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_triple_band_linear_op_1aeef61fdf78ac634db13f299966f39cb9" prot="public" virt="non-virtual"><scope>QuantLib::ModTripleBandLinearOp</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_triple_band_linear_op_1a3a93e0fc67286fa87306aed07ca5908f" prot="protected" virt="non-virtual"><scope>QuantLib::ModTripleBandLinearOp</scope><name>reverseIndex_</name></member>
      <member refid="class_quant_lib_1_1_triple_band_linear_op_1a037a0985a02026f1c057b5f29124c812" prot="public" virt="non-virtual"><scope>QuantLib::ModTripleBandLinearOp</scope><name>solve_splitting</name></member>
      <member refid="class_quant_lib_1_1_triple_band_linear_op_1a1126a535da13638228329f327b4c2caa" prot="public" virt="non-virtual"><scope>QuantLib::ModTripleBandLinearOp</scope><name>swap</name></member>
      <member refid="class_quant_lib_1_1_triple_band_linear_op_1a49b67b45b712d6943f22d5c54ef78576" prot="public" virt="virtual"><scope>QuantLib::ModTripleBandLinearOp</scope><name>toMatrix</name></member>
      <member refid="class_quant_lib_1_1_triple_band_linear_op_1a5ed4410a838ce48884c93e4b11700483" prot="public" virt="non-virtual"><scope>QuantLib::ModTripleBandLinearOp</scope><name>TripleBandLinearOp</name></member>
      <member refid="class_quant_lib_1_1_triple_band_linear_op_1a54b660f4c8bec978097f6fea0b41a3a1" prot="public" virt="non-virtual"><scope>QuantLib::ModTripleBandLinearOp</scope><name>TripleBandLinearOp</name></member>
      <member refid="class_quant_lib_1_1_triple_band_linear_op_1ab32373084c5144ed9543679000b1afbd" prot="public" virt="non-virtual"><scope>QuantLib::ModTripleBandLinearOp</scope><name>TripleBandLinearOp</name></member>
      <member refid="class_quant_lib_1_1_triple_band_linear_op_1a387229aefe1a8b00810d06350b309924" prot="protected" virt="non-virtual"><scope>QuantLib::ModTripleBandLinearOp</scope><name>TripleBandLinearOp</name></member>
      <member refid="class_quant_lib_1_1_mod_triple_band_linear_op_1a6f9dbf3df819d938d06ff443931c2709" prot="public" virt="non-virtual"><scope>QuantLib::ModTripleBandLinearOp</scope><name>upper</name></member>
      <member refid="class_quant_lib_1_1_mod_triple_band_linear_op_1a1cede40f50a6a5afc71741afc423f9b2" prot="public" virt="non-virtual"><scope>QuantLib::ModTripleBandLinearOp</scope><name>upper</name></member>
      <member refid="class_quant_lib_1_1_triple_band_linear_op_1a28f73868dfeecb713b9bc77e0baa5a72" prot="protected" virt="non-virtual"><scope>QuantLib::ModTripleBandLinearOp</scope><name>upper_</name></member>
      <member refid="class_quant_lib_1_1_fdm_linear_op_1aa6f29eb6144a1848c73c21e392f023e4" prot="public" virt="virtual"><scope>QuantLib::ModTripleBandLinearOp</scope><name>~FdmLinearOp</name></member>
      <member refid="class_quant_lib_1_1_triple_band_linear_op_1af03d1986e3fc0ce793ec6eb072743879" prot="public" virt="non-virtual"><scope>QuantLib::ModTripleBandLinearOp</scope><name>~TripleBandLinearOp</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_vanilla_swap" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::VanillaSwap</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_fixed_vs_floating_swap" prot="public" virt="non-virtual">QuantLib::FixedVsFloatingSwap</basecompoundref>
    <includes refid="vanillaswap_8hpp" local="no">vanillaswap.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_vanilla_swap_1a397ef372db2aa94f8b01274993d70084" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::VanillaSwap::VanillaSwap</definition>
        <argsstring>(Type type, Real nominal, Schedule fixedSchedule, Rate fixedRate, DayCounter fixedDayCount, Schedule floatSchedule, ext::shared_ptr&lt; IborIndex &gt; iborIndex, Spread spread, DayCounter floatingDayCount, ext::optional&lt; BusinessDayConvention &gt; paymentConvention=ext::nullopt, ext::optional&lt; bool &gt; useIndexedCoupons=ext::nullopt)</argsstring>
        <name>VanillaSwap</name>
        <qualifiedname>QuantLib::VanillaSwap::VanillaSwap</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_swap_1ad0806daa5b111fcb11ce521b19124b4e" kindref="member">Type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>nominal</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_schedule" kindref="compound">Schedule</ref></type>
          <declname>fixedSchedule</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>fixedRate</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref></type>
          <declname>fixedDayCount</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_schedule" kindref="compound">Schedule</ref></type>
          <declname>floatSchedule</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_ibor_index" kindref="compound">IborIndex</ref> &gt;</type>
          <declname>iborIndex</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ad61d2e1a3f01154233de0d5fbb85177c" kindref="member">Spread</ref></type>
          <declname>spread</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref></type>
          <declname>floatingDayCount</declname>
        </param>
        <param>
          <type>ext::optional&lt; <ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref> &gt;</type>
          <declname>paymentConvention</declname>
          <defval>ext::nullopt</defval>
        </param>
        <param>
          <type>ext::optional&lt; bool &gt;</type>
          <declname>useIndexedCoupons</declname>
          <defval>ext::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/vanillaswap.hpp" line="67" column="9" bodyfile="ql/instruments/vanillaswap.cpp" bodystart="30" bodyend="53"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_vanilla_swap_1ae7f4625c4b76f5d1b270228ffa3d3821" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::VanillaSwap::setupFloatingArguments</definition>
        <argsstring>(arguments *args) const override</argsstring>
        <name>setupFloatingArguments</name>
        <qualifiedname>QuantLib::VanillaSwap::setupFloatingArguments</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fixed_vs_floating_swap_1a8163c7e228db69d60d5f23f6df633fef">setupFloatingArguments</reimplements>
        <param>
          <type><ref refid="class_quant_lib_1_1_fixed_vs_floating_swap_1_1arguments" kindref="compound">arguments</ref> *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/vanillaswap.hpp" line="80" column="14" bodyfile="ql/instruments/vanillaswap.cpp" bodystart="55" bodyend="80"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Plain-vanilla swap: fix vs ibor leg. </para>
    </briefdescription>
    <detaileddescription>
<para>If no payment convention is passed, the convention of the floating-rate schedule is used.</para>
<para><simplesect kind="warning"><para>if <computeroutput>Settings::includeReferenceDateCashFlows()</computeroutput> is set to <computeroutput>true</computeroutput>, payments occurring at the settlement date of the swap might be included in the NPV and therefore affect the fair-rate and fair-spread calculation. This might not be what you want.</para>
</simplesect>
<xrefsect id="test_1_test000026"><xreftitle>Test</xreftitle><xrefdescription><para><itemizedlist>
<listitem><para>the correctness of the returned value is tested by checking that the price of a swap paying the fair fixed rate is null.</para>
</listitem><listitem><para>the correctness of the returned value is tested by checking that the price of a swap receiving the fair floating-rate spread is null.</para>
</listitem><listitem><para>the correctness of the returned value is tested by checking that the price of a swap decreases with the paid fixed rate.</para>
</listitem><listitem><para>the correctness of the returned value is tested by checking that the price of a swap increases with the received floating-rate spread.</para>
</listitem><listitem><para>the correctness of the returned value is tested by checking it against a known good value. </para>
</listitem></itemizedlist>
</para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::FixedVsFloatingSwap</label>
        <link refid="class_quant_lib_1_1_fixed_vs_floating_swap"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Instrument</label>
        <link refid="class_quant_lib_1_1_instrument"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="7">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="3">
        <label>QuantLib::Swap</label>
        <link refid="class_quant_lib_1_1_swap"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::VanillaSwap</label>
        <link refid="class_quant_lib_1_1_vanilla_swap"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="2">
        <label>QuantLib::FixedVsFloatingSwap</label>
        <link refid="class_quant_lib_1_1_fixed_vs_floating_swap"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Instrument</label>
        <link refid="class_quant_lib_1_1_instrument"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>valuationDate_</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="7">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="3">
        <label>QuantLib::Swap</label>
        <link refid="class_quant_lib_1_1_swap"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::VanillaSwap</label>
        <link refid="class_quant_lib_1_1_vanilla_swap"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/instruments/vanillaswap.hpp" line="65" column="5" bodyfile="ql/instruments/vanillaswap.hpp" bodystart="65" bodyend="81"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_instrument_1a468edb294da268b097c91bf821084c07" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>additionalResults</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a57d2b34e8625ab3d9ffa50c0c7931099" prot="protected" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>additionalResults_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a02070ea7442d30625992c1711030d4b8" prot="protected" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>alwaysForward_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a17c9433135a259e4776baec66204a484" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>alwaysForwardNotifications</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a4c573c48f7eaead5042864ac0eb5b025" prot="protected" virt="virtual"><scope>QuantLib::VanillaSwap</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a58b4986a80efa18634483a92c121e26e" prot="protected" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>calculated_</name></member>
      <member refid="class_quant_lib_1_1_swap_1a6e033a19eb0f2770eefb8b06912b3abe" prot="public" virt="virtual"><scope>QuantLib::VanillaSwap</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_swap_1a1c5ee95948349edd10e6f7ad842b2c4a" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>endDiscounts</name></member>
      <member refid="class_quant_lib_1_1_swap_1ac3b82c6fb8b5951424767b5e95e9a0b3" prot="protected" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>endDiscounts_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1ac548cb61c864779db09bd0fac6ae7c81" prot="protected" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>engine_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a03502fb6c606b262c25acd94ff4c1e52" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>errorEstimate</name></member>
      <member refid="class_quant_lib_1_1_instrument_1abb8f4cfa7346fab7a2f3a8c8b4da30f3" prot="protected" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>errorEstimate_</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1a4fea6d84677587631aa2ccca6dfe4125" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>fairRate</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1a31bad27b5d73a70f99cec485f7531b53" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>fairSpread</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1abd6a0770406dd5c67ef5ea1cf58cc304" prot="public" virt="virtual"><scope>QuantLib::VanillaSwap</scope><name>fetchResults</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1abc2733a49193ae9304980a35a2ced35a" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>fixedDayCount</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1a4e2f4acdb65926744ff55c9e6c13559d" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>fixedLeg</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1a76ce60f9ed86a0bc072494f9cccf7cc6" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>fixedLegBPS</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1aa0c582832364277f8aac65876dde550e" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>fixedLegNPV</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1a5c230c1bfff51e8bd4a9fe715dbabda0" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>fixedNominals</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1afa743c8c74b4b7fa87305d60bdd147e6" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>fixedRate</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1a0ece282726df59e4ce2774db21f229fa" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>fixedSchedule</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1aa35cbe9d47e64075884bfe6543b5e425" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>FixedVsFloatingSwap</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1a009bdf0822016b8b61590a3d23bb3646" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>floatingDayCount</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1a2a68abf9182154999cb4eaa63a2c56a5" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>floatingLeg</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1aa4001085c1b79d0a0c7c6c8ba4de4531" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>floatingLegBPS</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1ab95fc74b2db9b608674894c75aeba415" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>floatingLegNPV</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1a311da31e22326fc5565f9d904a81f764" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>floatingNominals</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1a640d43cada8b55ce6a42b4a92abfd0e4" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>floatingSchedule</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1afac6ee19c3107c453e1347dd8000e023" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>forwardFirstNotificationOnly</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7157f41e83f2c5d924f5c5bafda04d1d" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>freeze</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7bb721fe00c6854e602758aba629ab77" prot="protected" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>frozen_</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1a81d5baa6358d9e35320fdf34b502abb3" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>iborIndex</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a5e4c746cbf7999c83dc57f87e241f1cc" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>Instrument</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a0a7c5d42815a4e16ee2158e24dbfc748" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>isCalculated</name></member>
      <member refid="class_quant_lib_1_1_swap_1aa8b6f838ad681344ecd604db48ea0b8e" prot="public" virt="virtual"><scope>QuantLib::VanillaSwap</scope><name>isExpired</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a26f18f4ff7faaaebd8eae50e064b493e" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>LazyObject</name></member>
      <member refid="class_quant_lib_1_1_swap_1a6d4f202e19e6d9505ebc111f197244ae" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>leg</name></member>
      <member refid="class_quant_lib_1_1_swap_1a79494447be4eebf5caf0f0940a9b204f" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>legBPS</name></member>
      <member refid="class_quant_lib_1_1_swap_1af40f759b518542c642d71cbc262cab84" prot="protected" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>legBPS_</name></member>
      <member refid="class_quant_lib_1_1_swap_1af1ef52511fbca1b23ffddf978f678d98" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>legNPV</name></member>
      <member refid="class_quant_lib_1_1_swap_1ac85f31b7bf3b97e6c03848c64bef33af" prot="protected" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>legNPV_</name></member>
      <member refid="class_quant_lib_1_1_swap_1a153af8a79c61fda7e68e65fee4817e35" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>legs</name></member>
      <member refid="class_quant_lib_1_1_swap_1a1ca08a7d6e5957950d40383eb4cf0b63" prot="protected" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>legs_</name></member>
      <member refid="class_quant_lib_1_1_swap_1a0a9d27adbab145e513399a18852e4d4f" prot="public" virt="virtual"><scope>QuantLib::VanillaSwap</scope><name>maturityDate</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1aeeb21baa76a37a8b281567ff60a7a824" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>nominal</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1ad4672fd75553d21da939664d75357cf0" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>nominals</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a5afdd9698267cd30ddd10cf01f3487b0" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>NPV</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a997663780100d30ae59b14ac0285322d" prot="protected" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>NPV_</name></member>
      <member refid="class_quant_lib_1_1_swap_1ab698ee91db4089a0fef963f6857c1c28" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>npvDateDiscount</name></member>
      <member refid="class_quant_lib_1_1_swap_1a390b5eebe9b8a8915d393465a93809ad" prot="protected" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>npvDateDiscount_</name></member>
      <member refid="class_quant_lib_1_1_swap_1aed6ec56ad5e15f7de107e98fb1526b66" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>numberOfLegs</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::VanillaSwap</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::VanillaSwap</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::VanillaSwap</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::VanillaSwap</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::VanillaSwap</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::QuantLib::Observer::"><scope>QuantLib::VanillaSwap</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_swap_1ad0806daa5b111fcb11ce521b19124b4ea31009108a6e84c98136e1053dbb41824" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>Payer</name></member>
      <member refid="class_quant_lib_1_1_swap_1a2530b88cf2c011a623c667838b8a9aa2" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>payer</name></member>
      <member refid="class_quant_lib_1_1_swap_1a82468c93e5a364d73e164df46bd50445" prot="protected" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>payer_</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1a637d34d71d13d8438b488a7b5771abc5" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>paymentConvention</name></member>
      <member refid="class_quant_lib_1_1_instrument_1aad23f546bbca156a49a95ca2bee124c4" prot="protected" virt="virtual"><scope>QuantLib::VanillaSwap</scope><name>performCalculations</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a70c9b24e50132408d8d9ce4f6674662a" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>recalculate</name></member>
      <member refid="class_quant_lib_1_1_swap_1ad0806daa5b111fcb11ce521b19124b4ea04e66442c860dac71042b03c64af4831" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>Receiver</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a266c15a12160a89f4f9707db85f9fa27" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>result</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a3444386491f179f64f4f0aac24997071" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>setPricingEngine</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1a0b37a99b7c94bfdd3f5a33c6af0e6cde" prot="public" virt="virtual"><scope>QuantLib::VanillaSwap</scope><name>setupArguments</name></member>
      <member refid="class_quant_lib_1_1_vanilla_swap_1ae7f4625c4b76f5d1b270228ffa3d3821" prot="private" virt="virtual"><scope>QuantLib::VanillaSwap</scope><name>setupFloatingArguments</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1a100fbecafdf261cc1adfed986173ea1e" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>spread</name></member>
      <member refid="class_quant_lib_1_1_swap_1ae4df409ff659d19c6c76347d0d92c47b" prot="public" virt="virtual"><scope>QuantLib::VanillaSwap</scope><name>startDate</name></member>
      <member refid="class_quant_lib_1_1_swap_1a9a138527c286814c9dba09b3242bbda2" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>startDiscounts</name></member>
      <member refid="class_quant_lib_1_1_swap_1aa235d3e00058faa863f579d9665301e4" prot="protected" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>startDiscounts_</name></member>
      <member refid="class_quant_lib_1_1_swap_1a88c4221d6c0156759c5e84c3188459c8" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>Swap</name></member>
      <member refid="class_quant_lib_1_1_swap_1a546a1d0746c86ad1fed70a0904b18024" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>Swap</name></member>
      <member refid="class_quant_lib_1_1_swap_1a953a237540a310c121aebbf8b4f7621e" prot="protected" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>Swap</name></member>
      <member refid="class_quant_lib_1_1_swap_1ad0806daa5b111fcb11ce521b19124b4e" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>Type</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1a09023a93f3c24bc9e27e5b67a7ff448a" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>type</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a2e0e4786666453024b9d4e0761f2770b" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>unfreeze</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1adee2bf49be5c4c78736be293321a856d" prot="public" virt="virtual"><scope>QuantLib::VanillaSwap</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a53a0fc1adc70b73387ad53009725835d" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>valuationDate</name></member>
      <member refid="class_quant_lib_1_1_instrument_1aa60b558fc82f022e13535360ac4a6fed" prot="protected" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>valuationDate_</name></member>
      <member refid="class_quant_lib_1_1_vanilla_swap_1a397ef372db2aa94f8b01274993d70084" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>VanillaSwap</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a9d719c43bb627177a90d7d12324a2d6e" prot="public" virt="non-virtual"><scope>QuantLib::VanillaSwap</scope><name>~LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::VanillaSwap</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::VanillaSwap</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

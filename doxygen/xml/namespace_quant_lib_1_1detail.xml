<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="namespace_quant_lib_1_1detail" kind="namespace" language="C++">
    <compoundname>QuantLib::detail</compoundname>
    <innerclass refid="class_quant_lib_1_1detail_1_1_abcd_coeff_holder" prot="public">QuantLib::detail::AbcdCoeffHolder</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_abcd_interpolation_impl" prot="public">QuantLib::detail::AbcdInterpolationImpl</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1_bachelier_spec" prot="public">QuantLib::detail::BachelierSpec</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_backward_flat_interpolation_impl" prot="public">QuantLib::detail::BackwardFlatInterpolationImpl</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_backwardflat_linear_interpolation_impl" prot="public">QuantLib::detail::BackwardflatLinearInterpolationImpl</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1base__cubic__spline" prot="public">QuantLib::detail::base_cubic_spline</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1base__cubic__splint" prot="public">QuantLib::detail::base_cubic_splint</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_bicubic_spline_derivatives" prot="public">QuantLib::detail::BicubicSplineDerivatives</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_bicubic_spline_impl" prot="public">QuantLib::detail::BicubicSplineImpl</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_bilinear_interpolation_impl" prot="public">QuantLib::detail::BilinearInterpolationImpl</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1_black76_spec" prot="public">QuantLib::detail::Black76Spec</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_black_style_swaption_engine" prot="public">QuantLib::detail::BlackStyleSwaptionEngine</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_bootstrap_helper_sorter" prot="public">QuantLib::detail::BootstrapHelperSorter</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_coefficient_holder" prot="public">QuantLib::detail::CoefficientHolder</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_combo_helper" prot="public">QuantLib::detail::ComboHelper</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_constant_grad_helper" prot="public">QuantLib::detail::ConstantGradHelper</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_convex_monotone2_helper" prot="public">QuantLib::detail::ConvexMonotone2Helper</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_convex_monotone3_helper" prot="public">QuantLib::detail::ConvexMonotone3Helper</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_convex_monotone4_helper" prot="public">QuantLib::detail::ConvexMonotone4Helper</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_convex_monotone4_min_helper" prot="public">QuantLib::detail::ConvexMonotone4MinHelper</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_convex_monotone_impl" prot="public">QuantLib::detail::ConvexMonotoneImpl</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_cubic_interpolation_impl" prot="public">QuantLib::detail::CubicInterpolationImpl</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_d0_interpolator" prot="public">QuantLib::detail::D0Interpolator</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1_data" prot="public">QuantLib::detail::Data</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1_data_3_01std_1_1vector_3_01_real_01_4_00_01_empty_arg_01_4" prot="public">QuantLib::detail::Data&lt; std::vector&lt; Real &gt;, EmptyArg &gt;</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1_data_table" prot="public">QuantLib::detail::DataTable</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1_data_table_3_01_real_01_4" prot="public">QuantLib::detail::DataTable&lt; Real &gt;</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1_empty_arg" prot="public">QuantLib::detail::EmptyArg</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1_empty_dim" prot="public">QuantLib::detail::EmptyDim</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1_empty_res" prot="public">QuantLib::detail::EmptyRes</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_everywhere_constant_helper" prot="public">QuantLib::detail::EverywhereConstantHelper</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_fdm_p_c_a_basket_inner_value" prot="public">QuantLib::detail::FdmPCABasketInnerValue</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1_format_resetter" prot="public">QuantLib::detail::FormatResetter</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1formatted__date__holder" prot="public">QuantLib::detail::formatted_date_holder</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_forward_flat_interpolation_impl" prot="public">QuantLib::detail::ForwardFlatInterpolationImpl</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_gaussian_quadrature_integrator" prot="public">QuantLib::detail::GaussianQuadratureIntegrator</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_gsr_process_core" prot="public">QuantLib::detail::GsrProcessCore</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_hull_white_cap_floor_pricer" prot="public">QuantLib::detail::HullWhiteCapFloorPricer</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_implied_volatility_helper" prot="public">QuantLib::detail::ImpliedVolatilityHelper</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1_int2_type" prot="public">QuantLib::detail::Int2Type</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1_int2_type_3_0110_01_4" prot="public">QuantLib::detail::Int2Type&lt; 10 &gt;</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1_int2_type_3_0111_01_4" prot="public">QuantLib::detail::Int2Type&lt; 11 &gt;</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1_int2_type_3_0112_01_4" prot="public">QuantLib::detail::Int2Type&lt; 12 &gt;</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1_int2_type_3_0113_01_4" prot="public">QuantLib::detail::Int2Type&lt; 13 &gt;</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1_int2_type_3_0114_01_4" prot="public">QuantLib::detail::Int2Type&lt; 14 &gt;</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1_int2_type_3_0115_01_4" prot="public">QuantLib::detail::Int2Type&lt; 15 &gt;</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1_int2_type_3_012_01_4" prot="public">QuantLib::detail::Int2Type&lt; 2 &gt;</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1_int2_type_3_013_01_4" prot="public">QuantLib::detail::Int2Type&lt; 3 &gt;</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1_int2_type_3_014_01_4" prot="public">QuantLib::detail::Int2Type&lt; 4 &gt;</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1_int2_type_3_015_01_4" prot="public">QuantLib::detail::Int2Type&lt; 5 &gt;</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1_int2_type_3_016_01_4" prot="public">QuantLib::detail::Int2Type&lt; 6 &gt;</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1_int2_type_3_017_01_4" prot="public">QuantLib::detail::Int2Type&lt; 7 &gt;</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1_int2_type_3_018_01_4" prot="public">QuantLib::detail::Int2Type&lt; 8 &gt;</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1_int2_type_3_019_01_4" prot="public">QuantLib::detail::Int2Type&lt; 9 &gt;</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_integrand" prot="public">QuantLib::detail::Integrand</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1iso__date__holder" prot="public">QuantLib::detail::iso_date_holder</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_kernel_interpolation2_d_impl" prot="public">QuantLib::detail::KernelInterpolation2DImpl</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_kernel_interpolation_impl" prot="public">QuantLib::detail::KernelInterpolationImpl</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_lagrange_interpolation_impl" prot="public">QuantLib::detail::LagrangeInterpolationImpl</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_linear_flat_interpolation_impl" prot="public">QuantLib::detail::LinearFlatInterpolationImpl</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_linear_interpolation_impl" prot="public">QuantLib::detail::LinearInterpolationImpl</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_log_interpolation_impl" prot="public">QuantLib::detail::LogInterpolationImpl</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_log_mixed_interpolation_impl" prot="public">QuantLib::detail::LogMixedInterpolationImpl</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1long__date__holder" prot="public">QuantLib::detail::long_date_holder</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1long__period__holder" prot="public">QuantLib::detail::long_period_holder</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1long__weekday__holder" prot="public">QuantLib::detail::long_weekday_holder</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_mixed_interpolation_impl" prot="public">QuantLib::detail::MixedInterpolationImpl</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1multiply_v" prot="public">QuantLib::detail::multiplyV</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1n__cubic__spline" prot="public">QuantLib::detail::n_cubic_spline</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1n__cubic__splint" prot="public">QuantLib::detail::n_cubic_splint</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1_no_arb_sabr_specs" prot="public">QuantLib::detail::NoArbSabrSpecs</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1null__checker" prot="public">QuantLib::detail::null_checker</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1_ode_fct_wrapper" prot="public">QuantLib::detail::OdeFctWrapper</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1ordinal__holder" prot="public">QuantLib::detail::ordinal_holder</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_past_fixings_only" prot="public">QuantLib::detail::PastFixingsOnly</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1percent__holder" prot="public">QuantLib::detail::percent_holder</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1_point" prot="public">QuantLib::detail::Point</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1_point_3_01base__data__table_00_01_empty_res_01_4" prot="public">QuantLib::detail::Point&lt; base_data_table, EmptyRes &gt;</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1_point_3_01_real_00_01_empty_arg_01_4" prot="public">QuantLib::detail::Point&lt; Real, EmptyArg &gt;</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1_point_3_01_real_00_01_empty_res_01_4" prot="public">QuantLib::detail::Point&lt; Real, EmptyRes &gt;</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1_point_3_01_size_00_01_empty_dim_01_4" prot="public">QuantLib::detail::Point&lt; Size, EmptyDim &gt;</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_polynomial2_d_spline_impl" prot="public">QuantLib::detail::Polynomial2DSplineImpl</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1power__of__two__holder" prot="public">QuantLib::detail::power_of_two_holder</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_qd_plus_add_on_value" prot="public">QuantLib::detail::QdPlusAddOnValue</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_qd_put_call_parity_engine" prot="public">QuantLib::detail::QdPutCallParityEngine</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_quadratic_helper" prot="public">QuantLib::detail::QuadraticHelper</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_quadratic_min_helper" prot="public">QuantLib::detail::QuadraticMinHelper</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_root" prot="public">QuantLib::detail::Root</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1_s_a_b_r_specs" prot="public">QuantLib::detail::SABRSpecs</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_s_a_b_r_wrapper" prot="public">QuantLib::detail::SABRWrapper</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_section_helper" prot="public">QuantLib::detail::SectionHelper</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1sequence__holder" prot="public">QuantLib::detail::sequence_holder</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1short__date__holder" prot="public">QuantLib::detail::short_date_holder</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1short__period__holder" prot="public">QuantLib::detail::short_period_holder</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1short__weekday__holder" prot="public">QuantLib::detail::short_weekday_holder</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1shortest__weekday__holder" prot="public">QuantLib::detail::shortest_weekday_holder</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1simple__event" prot="public">QuantLib::detail::simple_event</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_sum_exponentials_root_solver" prot="public">QuantLib::detail::SumExponentialsRootSolver</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1_svi_specs" prot="public">QuantLib::detail::SviSpecs</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_tracing" prot="public">QuantLib::detail::Tracing</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_updated_y_interpolation" prot="public">QuantLib::detail::UpdatedYInterpolation</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_vanna_volga_interpolation_impl" prot="public">QuantLib::detail::VannaVolgaInterpolationImpl</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_vector_bsm_process_extractor" prot="public">QuantLib::detail::VectorBsmProcessExtractor</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_x_a_b_r_coeff_holder" prot="public">QuantLib::detail::XABRCoeffHolder</innerclass>
    <innerclass refid="class_quant_lib_1_1detail_1_1_x_a_b_r_interpolation_impl" prot="public">QuantLib::detail::XABRInterpolationImpl</innerclass>
    <innerclass refid="struct_quant_lib_1_1detail_1_1_zabr_specs" prot="public">QuantLib::detail::ZabrSpecs</innerclass>
    <innernamespace refid="namespace_quant_lib_1_1detail_1_1_c_p_i">QuantLib::detail::CPI</innernamespace>
    <innernamespace refid="namespace_quant_lib_1_1detail_1_1_no_arb_sabr_model">QuantLib::detail::NoArbSabrModel</innernamespace>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1a8c99506b2a4531cd9d4aa7607633c99c" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1_no_arb_sabr_smile_section" kindref="compound">NoArbSabrSmileSection</ref></type>
        <definition>typedef NoArbSabrSmileSection QuantLib::detail::NoArbSabrWrapper</definition>
        <argsstring></argsstring>
        <name>NoArbSabrWrapper</name>
        <qualifiedname>QuantLib::detail::NoArbSabrWrapper</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/noarbsabrinterpolation.hpp" line="36" column="31" bodyfile="ql/experimental/volatility/noarbsabrinterpolation.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1ab0f20074d06e75181c29c339dce72b6a" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1_svi_smile_section" kindref="compound">SviSmileSection</ref></type>
        <definition>typedef SviSmileSection QuantLib::detail::SviWrapper</definition>
        <argsstring></argsstring>
        <name>SviWrapper</name>
        <qualifiedname>QuantLib::detail::SviWrapper</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolation.hpp" line="55" column="25" bodyfile="ql/experimental/volatility/sviinterpolation.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1a48b3148b38daa1aa127956e01c2af894" prot="public" static="no">
        <type>std::vector&lt; std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &gt;</type>
        <definition>typedef std::vector&lt;std::vector&lt;Real&gt; &gt; QuantLib::detail::SplineGrid</definition>
        <argsstring></argsstring>
        <name>SplineGrid</name>
        <qualifiedname>QuantLib::detail::SplineGrid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="40" column="29" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1aa349cc68f4d97b3d10d0dc12606bacc4" prot="public" static="no">
        <type><ref refid="struct_quant_lib_1_1detail_1_1_data_table" kindref="compound">DataTable</ref>&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>typedef DataTable&lt;Real&gt; QuantLib::detail::base_data_table</definition>
        <argsstring></argsstring>
        <name>base_data_table</name>
        <qualifiedname>QuantLib::detail::base_data_table</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="87" column="27" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1a4c4e7ba6001d584b1f60ff6c1f310b1d" prot="public" static="no">
        <type><ref refid="struct_quant_lib_1_1detail_1_1_data" kindref="compound">Data</ref>&lt; std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;, <ref refid="struct_quant_lib_1_1detail_1_1_empty_arg" kindref="compound">EmptyArg</ref> &gt;</type>
        <definition>typedef Data&lt;std::vector&lt;Real&gt;, EmptyArg&gt; QuantLib::detail::base_data</definition>
        <argsstring></argsstring>
        <name>base_data</name>
        <qualifiedname>QuantLib::detail::base_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="120" column="22" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1a223df049996c5d58473b40574c202d24" prot="public" static="no">
        <type><ref refid="struct_quant_lib_1_1detail_1_1_point" kindref="compound">Point</ref>&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>, <ref refid="struct_quant_lib_1_1detail_1_1_empty_arg" kindref="compound">EmptyArg</ref> &gt;</type>
        <definition>typedef Point&lt;Real, EmptyArg&gt; QuantLib::detail::base_arg_type</definition>
        <argsstring></argsstring>
        <name>base_arg_type</name>
        <qualifiedname>QuantLib::detail::base_arg_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="164" column="23" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1ad7a0364571994b712276fc37567f8cd6" prot="public" static="no">
        <type><ref refid="struct_quant_lib_1_1detail_1_1_point" kindref="compound">Point</ref>&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>, <ref refid="struct_quant_lib_1_1detail_1_1_empty_res" kindref="compound">EmptyRes</ref> &gt;</type>
        <definition>typedef Point&lt;Real, EmptyRes&gt; QuantLib::detail::base_return_type</definition>
        <argsstring></argsstring>
        <name>base_return_type</name>
        <qualifiedname>QuantLib::detail::base_return_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="185" column="23" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1a918c21e64838f8687c9d6111b67964a1" prot="public" static="no">
        <type><ref refid="struct_quant_lib_1_1detail_1_1_point" kindref="compound">Point</ref>&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref>, <ref refid="struct_quant_lib_1_1detail_1_1_empty_dim" kindref="compound">EmptyDim</ref> &gt;</type>
        <definition>typedef Point&lt;Size, EmptyDim&gt; QuantLib::detail::base_dimensions</definition>
        <argsstring></argsstring>
        <name>base_dimensions</name>
        <qualifiedname>QuantLib::detail::base_dimensions</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="206" column="23" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1a3dbe693a58ecbd22f74b045763a283d4" prot="public" static="no">
        <type><ref refid="struct_quant_lib_1_1detail_1_1_point" kindref="compound">Point</ref>&lt; base_data_table, <ref refid="struct_quant_lib_1_1detail_1_1_empty_res" kindref="compound">EmptyRes</ref> &gt;</type>
        <definition>typedef Point&lt;base_data_table, EmptyRes&gt; QuantLib::detail::base_output_data</definition>
        <argsstring></argsstring>
        <name>base_output_data</name>
        <qualifiedname>QuantLib::detail::base_output_data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="221" column="23" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1aad21bb6885493081f2a98153b24a06f9" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1detail_1_1base__cubic__spline" kindref="compound">base_cubic_spline</ref></type>
        <definition>typedef base_cubic_spline QuantLib::detail::cubic_spline_01</definition>
        <argsstring></argsstring>
        <name>cubic_spline_01</name>
        <qualifiedname>QuantLib::detail::cubic_spline_01</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="340" column="49" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="340" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1a0ed856ed5410afda3246ed002bdbab8f" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1detail_1_1n__cubic__spline" kindref="compound">n_cubic_spline</ref>&lt; <ref refid="class_quant_lib_1_1detail_1_1base__cubic__spline" kindref="compound">cubic_spline_01</ref> &gt;</type>
        <definition>typedef n_cubic_spline&lt;cubic_spline_01&gt; QuantLib::detail::cubic_spline_02</definition>
        <argsstring></argsstring>
        <name>cubic_spline_02</name>
        <qualifiedname>QuantLib::detail::cubic_spline_02</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="341" column="32" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="341" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1a1d10ef79eb4ae8d8e891a038d1e27785" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1detail_1_1n__cubic__spline" kindref="compound">n_cubic_spline</ref>&lt; <ref refid="class_quant_lib_1_1detail_1_1n__cubic__spline" kindref="compound">cubic_spline_02</ref> &gt;</type>
        <definition>typedef n_cubic_spline&lt;cubic_spline_02&gt; QuantLib::detail::cubic_spline_03</definition>
        <argsstring></argsstring>
        <name>cubic_spline_03</name>
        <qualifiedname>QuantLib::detail::cubic_spline_03</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="342" column="32" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="342" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1a9164f3d674bef3fd084763834a970f3f" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1detail_1_1n__cubic__spline" kindref="compound">n_cubic_spline</ref>&lt; <ref refid="class_quant_lib_1_1detail_1_1n__cubic__spline" kindref="compound">cubic_spline_03</ref> &gt;</type>
        <definition>typedef n_cubic_spline&lt;cubic_spline_03&gt; QuantLib::detail::cubic_spline_04</definition>
        <argsstring></argsstring>
        <name>cubic_spline_04</name>
        <qualifiedname>QuantLib::detail::cubic_spline_04</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="343" column="32" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="343" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1a5b003ba580005a69443af8edc1df636c" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1detail_1_1n__cubic__spline" kindref="compound">n_cubic_spline</ref>&lt; <ref refid="class_quant_lib_1_1detail_1_1n__cubic__spline" kindref="compound">cubic_spline_04</ref> &gt;</type>
        <definition>typedef n_cubic_spline&lt;cubic_spline_04&gt; QuantLib::detail::cubic_spline_05</definition>
        <argsstring></argsstring>
        <name>cubic_spline_05</name>
        <qualifiedname>QuantLib::detail::cubic_spline_05</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="344" column="32" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1a8f4a04e68811346ba06b75467f0ba62f" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1detail_1_1n__cubic__spline" kindref="compound">n_cubic_spline</ref>&lt; <ref refid="class_quant_lib_1_1detail_1_1n__cubic__spline" kindref="compound">cubic_spline_05</ref> &gt;</type>
        <definition>typedef n_cubic_spline&lt;cubic_spline_05&gt; QuantLib::detail::cubic_spline_06</definition>
        <argsstring></argsstring>
        <name>cubic_spline_06</name>
        <qualifiedname>QuantLib::detail::cubic_spline_06</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="345" column="32" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1a79b017d3af7f988a017ff3b13b3bb4a0" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1detail_1_1n__cubic__spline" kindref="compound">n_cubic_spline</ref>&lt; <ref refid="class_quant_lib_1_1detail_1_1n__cubic__spline" kindref="compound">cubic_spline_06</ref> &gt;</type>
        <definition>typedef n_cubic_spline&lt;cubic_spline_06&gt; QuantLib::detail::cubic_spline_07</definition>
        <argsstring></argsstring>
        <name>cubic_spline_07</name>
        <qualifiedname>QuantLib::detail::cubic_spline_07</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="346" column="32" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="346" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1aadcd6d2265c453da2579560c5fb10d67" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1detail_1_1n__cubic__spline" kindref="compound">n_cubic_spline</ref>&lt; <ref refid="class_quant_lib_1_1detail_1_1n__cubic__spline" kindref="compound">cubic_spline_07</ref> &gt;</type>
        <definition>typedef n_cubic_spline&lt;cubic_spline_07&gt; QuantLib::detail::cubic_spline_08</definition>
        <argsstring></argsstring>
        <name>cubic_spline_08</name>
        <qualifiedname>QuantLib::detail::cubic_spline_08</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="347" column="32" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="347" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1a6da3e8d651b070a5e4427a29fd364fba" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1detail_1_1n__cubic__spline" kindref="compound">n_cubic_spline</ref>&lt; <ref refid="class_quant_lib_1_1detail_1_1n__cubic__spline" kindref="compound">cubic_spline_08</ref> &gt;</type>
        <definition>typedef n_cubic_spline&lt;cubic_spline_08&gt; QuantLib::detail::cubic_spline_09</definition>
        <argsstring></argsstring>
        <name>cubic_spline_09</name>
        <qualifiedname>QuantLib::detail::cubic_spline_09</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="348" column="32" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="348" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1a2d5962eec0126194a2fdcc0ad99251e7" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1detail_1_1n__cubic__spline" kindref="compound">n_cubic_spline</ref>&lt; <ref refid="class_quant_lib_1_1detail_1_1n__cubic__spline" kindref="compound">cubic_spline_09</ref> &gt;</type>
        <definition>typedef n_cubic_spline&lt;cubic_spline_09&gt; QuantLib::detail::cubic_spline_10</definition>
        <argsstring></argsstring>
        <name>cubic_spline_10</name>
        <qualifiedname>QuantLib::detail::cubic_spline_10</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="349" column="32" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="349" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1ad1bfd923f895d300fc57490147a78296" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1detail_1_1n__cubic__spline" kindref="compound">n_cubic_spline</ref>&lt; <ref refid="class_quant_lib_1_1detail_1_1n__cubic__spline" kindref="compound">cubic_spline_10</ref> &gt;</type>
        <definition>typedef n_cubic_spline&lt;cubic_spline_10&gt; QuantLib::detail::cubic_spline_11</definition>
        <argsstring></argsstring>
        <name>cubic_spline_11</name>
        <qualifiedname>QuantLib::detail::cubic_spline_11</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="350" column="32" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="350" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1a7a717f06a0e67a50b4a2c716745a380b" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1detail_1_1n__cubic__spline" kindref="compound">n_cubic_spline</ref>&lt; <ref refid="class_quant_lib_1_1detail_1_1n__cubic__spline" kindref="compound">cubic_spline_11</ref> &gt;</type>
        <definition>typedef n_cubic_spline&lt;cubic_spline_11&gt; QuantLib::detail::cubic_spline_12</definition>
        <argsstring></argsstring>
        <name>cubic_spline_12</name>
        <qualifiedname>QuantLib::detail::cubic_spline_12</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="351" column="32" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="351" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1ae1a6b0826a626fa6c9f0adf92a3df2d0" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1detail_1_1n__cubic__spline" kindref="compound">n_cubic_spline</ref>&lt; <ref refid="class_quant_lib_1_1detail_1_1n__cubic__spline" kindref="compound">cubic_spline_12</ref> &gt;</type>
        <definition>typedef n_cubic_spline&lt;cubic_spline_12&gt; QuantLib::detail::cubic_spline_13</definition>
        <argsstring></argsstring>
        <name>cubic_spline_13</name>
        <qualifiedname>QuantLib::detail::cubic_spline_13</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="352" column="32" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="352" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1a1e6cb78ed14ee574d20054f26b75c2ba" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1detail_1_1n__cubic__spline" kindref="compound">n_cubic_spline</ref>&lt; <ref refid="class_quant_lib_1_1detail_1_1n__cubic__spline" kindref="compound">cubic_spline_13</ref> &gt;</type>
        <definition>typedef n_cubic_spline&lt;cubic_spline_13&gt; QuantLib::detail::cubic_spline_14</definition>
        <argsstring></argsstring>
        <name>cubic_spline_14</name>
        <qualifiedname>QuantLib::detail::cubic_spline_14</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="353" column="32" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="353" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1a922907c52c40f9241b067bc8788e7e0e" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1detail_1_1n__cubic__spline" kindref="compound">n_cubic_spline</ref>&lt; <ref refid="class_quant_lib_1_1detail_1_1n__cubic__spline" kindref="compound">cubic_spline_14</ref> &gt;</type>
        <definition>typedef n_cubic_spline&lt;cubic_spline_14&gt; QuantLib::detail::cubic_spline_15</definition>
        <argsstring></argsstring>
        <name>cubic_spline_15</name>
        <qualifiedname>QuantLib::detail::cubic_spline_15</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="354" column="32" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="354" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1a1b6688823966d73291e5eb81a7c93d26" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1detail_1_1base__cubic__splint" kindref="compound">base_cubic_splint</ref></type>
        <definition>typedef base_cubic_splint QuantLib::detail::cubic_splint_01</definition>
        <argsstring></argsstring>
        <name>cubic_splint_01</name>
        <qualifiedname>QuantLib::detail::cubic_splint_01</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="356" column="49" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="356" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1a2c1637ed5583f625dfbce68af53c6e3d" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1detail_1_1n__cubic__splint" kindref="compound">n_cubic_splint</ref>&lt; <ref refid="class_quant_lib_1_1detail_1_1base__cubic__splint" kindref="compound">cubic_splint_01</ref> &gt;</type>
        <definition>typedef n_cubic_splint&lt;cubic_splint_01&gt; QuantLib::detail::cubic_splint_02</definition>
        <argsstring></argsstring>
        <name>cubic_splint_02</name>
        <qualifiedname>QuantLib::detail::cubic_splint_02</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="357" column="32" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1a26f7187e9a5d8c4dd292c935592907c2" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1detail_1_1n__cubic__splint" kindref="compound">n_cubic_splint</ref>&lt; <ref refid="class_quant_lib_1_1detail_1_1n__cubic__splint" kindref="compound">cubic_splint_02</ref> &gt;</type>
        <definition>typedef n_cubic_splint&lt;cubic_splint_02&gt; QuantLib::detail::cubic_splint_03</definition>
        <argsstring></argsstring>
        <name>cubic_splint_03</name>
        <qualifiedname>QuantLib::detail::cubic_splint_03</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="358" column="32" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1a8ed8cf2458c6305a8ec23bdccf2bbe25" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1detail_1_1n__cubic__splint" kindref="compound">n_cubic_splint</ref>&lt; <ref refid="class_quant_lib_1_1detail_1_1n__cubic__splint" kindref="compound">cubic_splint_03</ref> &gt;</type>
        <definition>typedef n_cubic_splint&lt;cubic_splint_03&gt; QuantLib::detail::cubic_splint_04</definition>
        <argsstring></argsstring>
        <name>cubic_splint_04</name>
        <qualifiedname>QuantLib::detail::cubic_splint_04</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="359" column="32" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1a9f0208f3d16764ca3ac4e766225ebebb" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1detail_1_1n__cubic__splint" kindref="compound">n_cubic_splint</ref>&lt; <ref refid="class_quant_lib_1_1detail_1_1n__cubic__splint" kindref="compound">cubic_splint_04</ref> &gt;</type>
        <definition>typedef n_cubic_splint&lt;cubic_splint_04&gt; QuantLib::detail::cubic_splint_05</definition>
        <argsstring></argsstring>
        <name>cubic_splint_05</name>
        <qualifiedname>QuantLib::detail::cubic_splint_05</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="360" column="32" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1a815623c1937165d370d8d3d65ab81b95" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1detail_1_1n__cubic__splint" kindref="compound">n_cubic_splint</ref>&lt; <ref refid="class_quant_lib_1_1detail_1_1n__cubic__splint" kindref="compound">cubic_splint_05</ref> &gt;</type>
        <definition>typedef n_cubic_splint&lt;cubic_splint_05&gt; QuantLib::detail::cubic_splint_06</definition>
        <argsstring></argsstring>
        <name>cubic_splint_06</name>
        <qualifiedname>QuantLib::detail::cubic_splint_06</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="361" column="32" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1a9045035be0434a442afb01c90ffe5fef" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1detail_1_1n__cubic__splint" kindref="compound">n_cubic_splint</ref>&lt; <ref refid="class_quant_lib_1_1detail_1_1n__cubic__splint" kindref="compound">cubic_splint_06</ref> &gt;</type>
        <definition>typedef n_cubic_splint&lt;cubic_splint_06&gt; QuantLib::detail::cubic_splint_07</definition>
        <argsstring></argsstring>
        <name>cubic_splint_07</name>
        <qualifiedname>QuantLib::detail::cubic_splint_07</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="362" column="32" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1a6153fec25fc11a99b22382f052d879b8" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1detail_1_1n__cubic__splint" kindref="compound">n_cubic_splint</ref>&lt; <ref refid="class_quant_lib_1_1detail_1_1n__cubic__splint" kindref="compound">cubic_splint_07</ref> &gt;</type>
        <definition>typedef n_cubic_splint&lt;cubic_splint_07&gt; QuantLib::detail::cubic_splint_08</definition>
        <argsstring></argsstring>
        <name>cubic_splint_08</name>
        <qualifiedname>QuantLib::detail::cubic_splint_08</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="363" column="32" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="363" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1a3c3af723621266d7306be6e4b2402e42" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1detail_1_1n__cubic__splint" kindref="compound">n_cubic_splint</ref>&lt; <ref refid="class_quant_lib_1_1detail_1_1n__cubic__splint" kindref="compound">cubic_splint_08</ref> &gt;</type>
        <definition>typedef n_cubic_splint&lt;cubic_splint_08&gt; QuantLib::detail::cubic_splint_09</definition>
        <argsstring></argsstring>
        <name>cubic_splint_09</name>
        <qualifiedname>QuantLib::detail::cubic_splint_09</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="364" column="32" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1a6f2d42c08d7fd59f15b0c70a028a3f04" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1detail_1_1n__cubic__splint" kindref="compound">n_cubic_splint</ref>&lt; <ref refid="class_quant_lib_1_1detail_1_1n__cubic__splint" kindref="compound">cubic_splint_09</ref> &gt;</type>
        <definition>typedef n_cubic_splint&lt;cubic_splint_09&gt; QuantLib::detail::cubic_splint_10</definition>
        <argsstring></argsstring>
        <name>cubic_splint_10</name>
        <qualifiedname>QuantLib::detail::cubic_splint_10</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="365" column="32" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="365" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1ab084be24d50abf65c4447645366a1ab1" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1detail_1_1n__cubic__splint" kindref="compound">n_cubic_splint</ref>&lt; <ref refid="class_quant_lib_1_1detail_1_1n__cubic__splint" kindref="compound">cubic_splint_10</ref> &gt;</type>
        <definition>typedef n_cubic_splint&lt;cubic_splint_10&gt; QuantLib::detail::cubic_splint_11</definition>
        <argsstring></argsstring>
        <name>cubic_splint_11</name>
        <qualifiedname>QuantLib::detail::cubic_splint_11</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="366" column="32" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1ab17ea1fd3cf59d3c4ba61d12b55dec52" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1detail_1_1n__cubic__splint" kindref="compound">n_cubic_splint</ref>&lt; <ref refid="class_quant_lib_1_1detail_1_1n__cubic__splint" kindref="compound">cubic_splint_11</ref> &gt;</type>
        <definition>typedef n_cubic_splint&lt;cubic_splint_11&gt; QuantLib::detail::cubic_splint_12</definition>
        <argsstring></argsstring>
        <name>cubic_splint_12</name>
        <qualifiedname>QuantLib::detail::cubic_splint_12</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="367" column="32" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="367" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1ac25b844d2424926aaa0f6f3938b443a5" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1detail_1_1n__cubic__splint" kindref="compound">n_cubic_splint</ref>&lt; <ref refid="class_quant_lib_1_1detail_1_1n__cubic__splint" kindref="compound">cubic_splint_12</ref> &gt;</type>
        <definition>typedef n_cubic_splint&lt;cubic_splint_12&gt; QuantLib::detail::cubic_splint_13</definition>
        <argsstring></argsstring>
        <name>cubic_splint_13</name>
        <qualifiedname>QuantLib::detail::cubic_splint_13</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="368" column="32" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1a36308359e7e52b0d95dd62aadab62b42" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1detail_1_1n__cubic__splint" kindref="compound">n_cubic_splint</ref>&lt; <ref refid="class_quant_lib_1_1detail_1_1n__cubic__splint" kindref="compound">cubic_splint_13</ref> &gt;</type>
        <definition>typedef n_cubic_splint&lt;cubic_splint_13&gt; QuantLib::detail::cubic_splint_14</definition>
        <argsstring></argsstring>
        <name>cubic_splint_14</name>
        <qualifiedname>QuantLib::detail::cubic_splint_14</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="369" column="32" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="369" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_quant_lib_1_1detail_1aba0cd04e8b42b8dff4c88675a3463043" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1detail_1_1n__cubic__splint" kindref="compound">n_cubic_splint</ref>&lt; <ref refid="class_quant_lib_1_1detail_1_1n__cubic__splint" kindref="compound">cubic_splint_14</ref> &gt;</type>
        <definition>typedef n_cubic_splint&lt;cubic_splint_14&gt; QuantLib::detail::cubic_splint_15</definition>
        <argsstring></argsstring>
        <name>cubic_splint_15</name>
        <qualifiedname>QuantLib::detail::cubic_splint_15</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="370" column="32" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="370" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="namespace_quant_lib_1_1detail_1acb60ea087529dbd9c384d541c14accc7" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::detail::minHazardRateComp</definition>
        <argsstring></argsstring>
        <name>minHazardRateComp</name>
        <qualifiedname>QuantLib::detail::minHazardRateComp</qualifiedname>
        <initializer>= -1.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/interpolatedaffinehazardratecurve.hpp" line="146" column="20" bodyfile="ql/experimental/credit/interpolatedaffinehazardratecurve.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_quant_lib_1_1detail_1afa921c1b121f8fb97ec6a1d83c2e7dcb" prot="public" static="no" mutable="no">
        <type>const unsigned long</type>
        <definition>const unsigned long QuantLib::detail::sabrabsprob</definition>
        <argsstring>[1209600]</argsstring>
        <name>sabrabsprob</name>
        <qualifiedname>QuantLib::detail::sabrabsprob</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/noarbsabr.hpp" line="136" column="32" bodyfile="ql/experimental/volatility/noarbsabr.hpp" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_quant_lib_1_1detail_1aa24ecbe6c70f903900f614e4c78215a8" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::detail::avgHazardRate</definition>
        <argsstring></argsstring>
        <name>avgHazardRate</name>
        <qualifiedname>QuantLib::detail::avgHazardRate</qualifiedname>
        <initializer>= 0.01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/credit/probabilitytraits.hpp" line="39" column="20" bodyfile="ql/termstructures/credit/probabilitytraits.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_quant_lib_1_1detail_1a3b411b8813dd578c6d4d76cdb43bbd6b" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::detail::maxHazardRate</definition>
        <argsstring></argsstring>
        <name>maxHazardRate</name>
        <qualifiedname>QuantLib::detail::maxHazardRate</qualifiedname>
        <initializer>= 1.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/credit/probabilitytraits.hpp" line="40" column="20" bodyfile="ql/termstructures/credit/probabilitytraits.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_quant_lib_1_1detail_1a6cdd406c14330579b4f23dd27c9e684e" prot="public" static="no" constexpr="yes" mutable="no">
        <type>double</type>
        <definition>double QuantLib::detail::avgInflation</definition>
        <argsstring></argsstring>
        <name>avgInflation</name>
        <qualifiedname>QuantLib::detail::avgInflation</qualifiedname>
        <initializer>= 0.02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/inflation/inflationtraits.hpp" line="36" column="26" bodyfile="ql/termstructures/inflation/inflationtraits.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_quant_lib_1_1detail_1a77e39bd414ed0f1d99db19c2da46bba2" prot="public" static="no" constexpr="yes" mutable="no">
        <type>double</type>
        <definition>double QuantLib::detail::maxInflation</definition>
        <argsstring></argsstring>
        <name>maxInflation</name>
        <qualifiedname>QuantLib::detail::maxInflation</qualifiedname>
        <initializer>= 0.5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/inflation/inflationtraits.hpp" line="37" column="26" bodyfile="ql/termstructures/inflation/inflationtraits.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_quant_lib_1_1detail_1a0f6b09413c1acb0d711d5c19f8700d9c" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::detail::avgRate</definition>
        <argsstring></argsstring>
        <name>avgRate</name>
        <qualifiedname>QuantLib::detail::avgRate</qualifiedname>
        <initializer>= 0.05</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/bootstraptraits.hpp" line="39" column="20" bodyfile="ql/termstructures/yield/bootstraptraits.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespace_quant_lib_1_1detail_1a4293a2e787b7dbae55a698197a1c2525" prot="public" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::detail::maxRate</definition>
        <argsstring></argsstring>
        <name>maxRate</name>
        <qualifiedname>QuantLib::detail::maxRate</qualifiedname>
        <initializer>= 1.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/bootstraptraits.hpp" line="40" column="20" bodyfile="ql/termstructures/yield/bootstraptraits.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespace_quant_lib_1_1detail_1a8251458f0775f7ea88305c200ded2b92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::detail::effectiveFixedRate</definition>
        <argsstring>(const std::vector&lt; Spread &gt; &amp;spreads, const std::vector&lt; Rate &gt; &amp;caps, const std::vector&lt; Rate &gt; &amp;floors, Size i)</argsstring>
        <name>effectiveFixedRate</name>
        <qualifiedname>QuantLib::detail::effectiveFixedRate</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1ad61d2e1a3f01154233de0d5fbb85177c" kindref="member">Spread</ref> &gt; &amp;</type>
          <declname>spreads</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
          <declname>caps</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
          <declname>floors</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/cashflowvectors.cpp" line="34" column="14" bodyfile="ql/cashflows/cashflowvectors.cpp" bodystart="34" bodyend="46" declfile="ql/cashflows/cashflowvectors.hpp" declline="46" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="namespace_quant_lib_1_1detail_1a4570912c0ead883d96c65fac2ebc73e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::detail::noOption</definition>
        <argsstring>(const std::vector&lt; Rate &gt; &amp;caps, const std::vector&lt; Rate &gt; &amp;floors, Size i)</argsstring>
        <name>noOption</name>
        <qualifiedname>QuantLib::detail::noOption</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
          <declname>caps</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
          <declname>floors</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/cashflowvectors.cpp" line="48" column="14" bodyfile="ql/cashflows/cashflowvectors.cpp" bodystart="48" bodyend="53" declfile="ql/cashflows/cashflowvectors.hpp" declline="51" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="namespace_quant_lib_1_1detail_1a4e6b59d634c1f1604f6e8a6cb7a879f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::detail::checkSviParameters</definition>
        <argsstring>(const Real a, const Real b, const Real sigma, const Real rho, const Real m, const Time tte)</argsstring>
        <name>checkSviParameters</name>
        <qualifiedname>QuantLib::detail::checkSviParameters</qualifiedname>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>sigma</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>rho</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>m</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>tte</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolation.hpp" line="35" column="13" bodyfile="ql/experimental/volatility/sviinterpolation.hpp" bodystart="35" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="namespace_quant_lib_1_1detail_1acb1ea12a259c5396e2ffcd3769dc0c6f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::detail::sviTotalVariance</definition>
        <argsstring>(const Real a, const Real b, const Real sigma, const Real rho, const Real m, const Real k)</argsstring>
        <name>sviTotalVariance</name>
        <qualifiedname>QuantLib::detail::sviTotalVariance</qualifiedname>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>sigma</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>rho</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>m</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolation.hpp" line="49" column="13" bodyfile="ql/experimental/volatility/sviinterpolation.hpp" bodystart="49" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="namespace_quant_lib_1_1detail_1aca4d093c4c8c515c7bc4cacd66463a48" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void QuantLib::detail::_fill_array_</definition>
        <argsstring>(Array &amp;a, std::unique_ptr&lt; Real[]&gt; &amp;data_, Size &amp;n_, I begin, I end, const std::true_type &amp;)</argsstring>
        <name>_fill_array_</name>
        <qualifiedname>QuantLib::detail::_fill_array_</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>[]&gt; &amp;</type>
          <declname>data_</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &amp;</type>
          <declname>n_</declname>
        </param>
        <param>
          <type>I</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>I</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const std::true_type &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/array.hpp" line="293" column="21" bodyfile="ql/math/array.hpp" bodystart="293" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="namespace_quant_lib_1_1detail_1aeed883782aa881fce370d3455ac1fa19" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void QuantLib::detail::_fill_array_</definition>
        <argsstring>(Array &amp;a, std::unique_ptr&lt; Real[]&gt; &amp;data_, Size &amp;n_, I begin, I end, const std::false_type &amp;)</argsstring>
        <name>_fill_array_</name>
        <qualifiedname>QuantLib::detail::_fill_array_</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>[]&gt; &amp;</type>
          <declname>data_</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &amp;</type>
          <declname>n_</declname>
        </param>
        <param>
          <type>I</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>I</type>
          <declname>end</declname>
        </param>
        <param>
          <type>const std::false_type &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/array.hpp" line="310" column="21" bodyfile="ql/math/array.hpp" bodystart="310" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="namespace_quant_lib_1_1detail_1a30a38a9298db3861d8f09d9091753ed6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ForwardIterator</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &gt;</type>
        <definition>std::vector&lt; std::complex&lt; Real &gt; &gt; QuantLib::detail::double_ft</definition>
        <argsstring>(ForwardIterator begin, ForwardIterator end)</argsstring>
        <name>double_ft</name>
        <qualifiedname>QuantLib::detail::double_ft</qualifiedname>
        <param>
          <type>ForwardIterator</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>ForwardIterator</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/autocovariance.hpp" line="41" column="21" bodyfile="ql/math/autocovariance.hpp" bodystart="41" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="namespace_quant_lib_1_1detail_1aeb156afefd92d5c09cfa00004012a580" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIterator</type>
          </param>
          <param>
            <type>typename OutputIterator</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::detail::remove_mean</definition>
        <argsstring>(InputIterator begin, InputIterator end, OutputIterator out)</argsstring>
        <name>remove_mean</name>
        <qualifiedname>QuantLib::detail::remove_mean</qualifiedname>
        <param>
          <type>InputIterator</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>end</declname>
        </param>
        <param>
          <type>OutputIterator</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/autocovariance.hpp" line="61" column="14" bodyfile="ql/math/autocovariance.hpp" bodystart="61" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="namespace_quant_lib_1_1detail_1aaf8c4cbc22cde9e7dbfbf4a945658c04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_path_pricer" kindref="compound">PathPricer</ref>&lt; <ref refid="class_quant_lib_1_1_path" kindref="compound">Path</ref> &gt; &gt;</type>
        <definition>ext::shared_ptr&lt; PathPricer&lt; Path &gt; &gt; QuantLib::detail::mc_lookback_path_pricer</definition>
        <argsstring>(const ContinuousFixedLookbackOption::arguments &amp;args, const GeneralizedBlackScholesProcess &amp;process, DiscountFactor discount)</argsstring>
        <name>mc_lookback_path_pricer</name>
        <qualifiedname>QuantLib::detail::mc_lookback_path_pricer</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_continuous_fixed_lookback_option_1_1arguments" kindref="compound">ContinuousFixedLookbackOption::arguments</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_generalized_black_scholes_process" kindref="compound">GeneralizedBlackScholesProcess</ref> &amp;</type>
          <declname>process</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a05e8e288a4bdedfe5b4e16d8cec14f1c" kindref="member">DiscountFactor</ref></type>
          <declname>discount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/lookback/mclookbackengine.cpp" line="78" column="9" bodyfile="ql/pricingengines/lookback/mclookbackengine.cpp" bodystart="78" bodyend="90" declfile="ql/pricingengines/lookback/mclookbackengine.hpp" declline="167" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespace_quant_lib_1_1detail_1a38bf55a08929baf652186a748901d3f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_path_pricer" kindref="compound">PathPricer</ref>&lt; <ref refid="class_quant_lib_1_1_path" kindref="compound">Path</ref> &gt; &gt;</type>
        <definition>ext::shared_ptr&lt; PathPricer&lt; Path &gt; &gt; QuantLib::detail::mc_lookback_path_pricer</definition>
        <argsstring>(const ContinuousPartialFixedLookbackOption::arguments &amp;args, const GeneralizedBlackScholesProcess &amp;process, DiscountFactor discount)</argsstring>
        <name>mc_lookback_path_pricer</name>
        <qualifiedname>QuantLib::detail::mc_lookback_path_pricer</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_continuous_partial_fixed_lookback_option_1_1arguments" kindref="compound">ContinuousPartialFixedLookbackOption::arguments</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_generalized_black_scholes_process" kindref="compound">GeneralizedBlackScholesProcess</ref> &amp;</type>
          <declname>process</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a05e8e288a4bdedfe5b4e16d8cec14f1c" kindref="member">DiscountFactor</ref></type>
          <declname>discount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/lookback/mclookbackengine.cpp" line="93" column="9" bodyfile="ql/pricingengines/lookback/mclookbackengine.cpp" bodystart="93" bodyend="108" declfile="ql/pricingengines/lookback/mclookbackengine.hpp" declline="173" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespace_quant_lib_1_1detail_1a1eba719ade460139f333c940a8692447" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_path_pricer" kindref="compound">PathPricer</ref>&lt; <ref refid="class_quant_lib_1_1_path" kindref="compound">Path</ref> &gt; &gt;</type>
        <definition>ext::shared_ptr&lt; PathPricer&lt; Path &gt; &gt; QuantLib::detail::mc_lookback_path_pricer</definition>
        <argsstring>(const ContinuousFloatingLookbackOption::arguments &amp;args, const GeneralizedBlackScholesProcess &amp;process, DiscountFactor discount)</argsstring>
        <name>mc_lookback_path_pricer</name>
        <qualifiedname>QuantLib::detail::mc_lookback_path_pricer</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_continuous_floating_lookback_option_1_1arguments" kindref="compound">ContinuousFloatingLookbackOption::arguments</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_generalized_black_scholes_process" kindref="compound">GeneralizedBlackScholesProcess</ref> &amp;</type>
          <declname>process</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a05e8e288a4bdedfe5b4e16d8cec14f1c" kindref="member">DiscountFactor</ref></type>
          <declname>discount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/lookback/mclookbackengine.cpp" line="111" column="9" bodyfile="ql/pricingengines/lookback/mclookbackengine.cpp" bodystart="111" bodyend="122" declfile="ql/pricingengines/lookback/mclookbackengine.hpp" declline="179" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespace_quant_lib_1_1detail_1a7e41c56f1a1dbdfc0c23e16ec2296052" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_path_pricer" kindref="compound">PathPricer</ref>&lt; <ref refid="class_quant_lib_1_1_path" kindref="compound">Path</ref> &gt; &gt;</type>
        <definition>ext::shared_ptr&lt; PathPricer&lt; Path &gt; &gt; QuantLib::detail::mc_lookback_path_pricer</definition>
        <argsstring>(const ContinuousPartialFloatingLookbackOption::arguments &amp;args, const GeneralizedBlackScholesProcess &amp;process, DiscountFactor discount)</argsstring>
        <name>mc_lookback_path_pricer</name>
        <qualifiedname>QuantLib::detail::mc_lookback_path_pricer</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_continuous_partial_floating_lookback_option_1_1arguments" kindref="compound">ContinuousPartialFloatingLookbackOption::arguments</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_generalized_black_scholes_process" kindref="compound">GeneralizedBlackScholesProcess</ref> &amp;</type>
          <declname>process</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a05e8e288a4bdedfe5b4e16d8cec14f1c" kindref="member">DiscountFactor</ref></type>
          <declname>discount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/lookback/mclookbackengine.cpp" line="125" column="9" bodyfile="ql/pricingengines/lookback/mclookbackengine.cpp" bodystart="125" bodyend="139" declfile="ql/pricingengines/lookback/mclookbackengine.hpp" declline="185" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespace_quant_lib_1_1detail_1ad1241e18e6b536b54d1fe7ea303df3e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Curve</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::detail::dontThrowFallback</definition>
        <argsstring>(const BootstrapError&lt; Curve &gt; &amp;error, Real xMin, Real xMax, Size steps)</argsstring>
        <name>dontThrowFallback</name>
        <qualifiedname>QuantLib::detail::dontThrowFallback</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_bootstrap_error" kindref="compound">BootstrapError</ref>&lt; Curve &gt; &amp;</type>
          <declname>error</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>xMin</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>xMax</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If <computeroutput>dontThrow</computeroutput> is <computeroutput>true</computeroutput> in <ref refid="class_quant_lib_1_1_iterative_bootstrap" kindref="compound">IterativeBootstrap</ref> and on a given pillar the bootstrap fails when searching for a helper root between <computeroutput>xMin</computeroutput> and <computeroutput>xMax</computeroutput>, we use this function to return the value that gives the minimum absolute helper error in the interval between <computeroutput>xMin</computeroutput> and <computeroutput>xMax</computeroutput> inclusive. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/iterativebootstrap.hpp" line="46" column="10" bodyfile="ql/termstructures/iterativebootstrap.hpp" bodystart="46" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="namespace_quant_lib_1_1detail_1a081e3d826897f7d0f8851f9c34158a29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; QuantLib::detail::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const short_date_holder &amp;holder)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>QuantLib::detail::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="struct_quant_lib_1_1detail_1_1short__date__holder" kindref="compound">short_date_holder</ref> &amp;</type>
          <declname>holder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/date.cpp" line="894" column="9" bodyfile="ql/time/date.cpp" bodystart="894" bodyend="910" declfile="ql/time/date.hpp" declline="319" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespace_quant_lib_1_1detail_1a86542b093e78a0c0e868d9695cb3ebee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; QuantLib::detail::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const long_date_holder &amp;holder)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>QuantLib::detail::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="struct_quant_lib_1_1detail_1_1long__date__holder" kindref="compound">long_date_holder</ref> &amp;</type>
          <declname>holder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/date.cpp" line="912" column="9" bodyfile="ql/time/date.cpp" bodystart="912" bodyend="924" declfile="ql/time/date.hpp" declline="325" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespace_quant_lib_1_1detail_1a654bb73c4478bbe4d9bc0e7cbf83691a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; QuantLib::detail::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const iso_date_holder &amp;holder)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>QuantLib::detail::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="struct_quant_lib_1_1detail_1_1iso__date__holder" kindref="compound">iso_date_holder</ref> &amp;</type>
          <declname>holder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/date.cpp" line="926" column="9" bodyfile="ql/time/date.cpp" bodystart="926" bodyend="940" declfile="ql/time/date.hpp" declline="331" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespace_quant_lib_1_1detail_1a11d160d0d48bd83b18eed32905bd02f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; QuantLib::detail::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const formatted_date_holder &amp;holder)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>QuantLib::detail::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="struct_quant_lib_1_1detail_1_1formatted__date__holder" kindref="compound">formatted_date_holder</ref> &amp;</type>
          <declname>holder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/date.cpp" line="942" column="9" bodyfile="ql/time/date.cpp" bodystart="942" bodyend="956" declfile="ql/time/date.hpp" declline="338" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespace_quant_lib_1_1detail_1aaeadb487709958322c0ba994d682aeba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; QuantLib::detail::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const long_period_holder &amp;holder)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>QuantLib::detail::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="struct_quant_lib_1_1detail_1_1long__period__holder" kindref="compound">long_period_holder</ref> &amp;</type>
          <declname>holder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/period.cpp" line="404" column="9" bodyfile="ql/time/period.cpp" bodystart="404" bodyend="419" declfile="ql/time/period.hpp" declline="116" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespace_quant_lib_1_1detail_1a16958d5aa2c48816ce167212326e7040" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; QuantLib::detail::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const short_period_holder &amp;holder)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>QuantLib::detail::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="struct_quant_lib_1_1detail_1_1short__period__holder" kindref="compound">short_period_holder</ref> &amp;</type>
          <declname>holder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/period.cpp" line="421" column="9" bodyfile="ql/time/period.cpp" bodystart="421" bodyend="436" declfile="ql/time/period.hpp" declline="122" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespace_quant_lib_1_1detail_1a888b1a0d03bd629785256e0b9a568511" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; QuantLib::detail::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const long_weekday_holder &amp;holder)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>QuantLib::detail::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="struct_quant_lib_1_1detail_1_1long__weekday__holder" kindref="compound">long_weekday_holder</ref> &amp;</type>
          <declname>holder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/weekday.cpp" line="38" column="9" bodyfile="ql/time/weekday.cpp" bodystart="38" bodyend="58" declfile="ql/time/weekday.hpp" declline="66" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespace_quant_lib_1_1detail_1ad75e75ee0e61ef2aa5f4f1b4767be4f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; QuantLib::detail::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const short_weekday_holder &amp;holder)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>QuantLib::detail::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="struct_quant_lib_1_1detail_1_1short__weekday__holder" kindref="compound">short_weekday_holder</ref> &amp;</type>
          <declname>holder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/weekday.cpp" line="60" column="9" bodyfile="ql/time/weekday.cpp" bodystart="60" bodyend="80" declfile="ql/time/weekday.hpp" declline="72" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespace_quant_lib_1_1detail_1a30309e4567cd3c4594a9b264562897ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; QuantLib::detail::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const shortest_weekday_holder &amp;holder)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>QuantLib::detail::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="struct_quant_lib_1_1detail_1_1shortest__weekday__holder" kindref="compound">shortest_weekday_holder</ref> &amp;</type>
          <declname>holder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/weekday.cpp" line="82" column="9" bodyfile="ql/time/weekday.cpp" bodystart="82" bodyend="102" declfile="ql/time/weekday.hpp" declline="78" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespace_quant_lib_1_1detail_1aba38987c56d428dfe3f8352066aa030a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; QuantLib::detail::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const ordinal_holder &amp;holder)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>QuantLib::detail::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="struct_quant_lib_1_1detail_1_1ordinal__holder" kindref="compound">ordinal_holder</ref> &amp;</type>
          <declname>holder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/utilities/dataformatters.cpp" line="25" column="9" bodyfile="ql/utilities/dataformatters.cpp" bodystart="25" bodyend="40" declfile="ql/utilities/dataformatters.hpp" declline="45" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespace_quant_lib_1_1detail_1a15379eca1db9f6c1b837bacbf4f87b43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; QuantLib::detail::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const percent_holder &amp;holder)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>QuantLib::detail::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="struct_quant_lib_1_1detail_1_1percent__holder" kindref="compound">percent_holder</ref> &amp;</type>
          <declname>holder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/utilities/dataformatters.cpp" line="42" column="9" bodyfile="ql/utilities/dataformatters.cpp" bodystart="42" bodyend="55" declfile="ql/utilities/dataformatters.hpp" declline="59" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespace_quant_lib_1_1detail_1a096a01f5d5eda5c27f55bdb9cab08c7f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; QuantLib::detail::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const null_checker&lt; T &gt; &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>QuantLib::detail::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <defname>out</defname>
        </param>
        <param>
          <type>const <ref refid="struct_quant_lib_1_1detail_1_1null__checker" kindref="compound">null_checker</ref>&lt; T &gt; &amp;</type>
          <defname>checker</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/utilities/dataformatters.hpp" line="149" column="16" bodyfile="ql/utilities/dataformatters.hpp" bodystart="149" bodyend="155" declfile="ql/utilities/dataformatters.hpp" declline="39" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespace_quant_lib_1_1detail_1a3610c09876d0efbe92d54c545a977bde" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; QuantLib::detail::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const power_of_two_holder&lt; T &gt; &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>QuantLib::detail::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <defname>out</defname>
        </param>
        <param>
          <type>const <ref refid="struct_quant_lib_1_1detail_1_1power__of__two__holder" kindref="compound">power_of_two_holder</ref>&lt; T &gt; &amp;</type>
          <defname>holder</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/utilities/dataformatters.hpp" line="158" column="16" bodyfile="ql/utilities/dataformatters.hpp" bodystart="158" bodyend="172" declfile="ql/utilities/dataformatters.hpp" declline="52" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespace_quant_lib_1_1detail_1a5a45288d328b31dcabf4abdb791c8266" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename I</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; QuantLib::detail::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const sequence_holder&lt; I &gt; &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>QuantLib::detail::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <defname>out</defname>
        </param>
        <param>
          <type>const <ref refid="struct_quant_lib_1_1detail_1_1sequence__holder" kindref="compound">sequence_holder</ref>&lt; I &gt; &amp;</type>
          <defname>holder</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/utilities/dataformatters.hpp" line="175" column="16" bodyfile="ql/utilities/dataformatters.hpp" bodystart="175" bodyend="182" declfile="ql/utilities/dataformatters.hpp" declline="67" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="namespace_quant_lib_1_1detail_1a138e1526c3c8b6e0f25f4b2519821614" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T QuantLib::detail::get</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;v, Size i, U defaultValue)</argsstring>
        <name>get</name>
        <qualifiedname>QuantLib::detail::get</qualifiedname>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>U</type>
          <declname>defaultValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/utilities/vectors.hpp" line="33" column="11" bodyfile="ql/utilities/vectors.hpp" bodystart="33" bodyend="43"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>References: J-P. Berrut and L.N. Trefethen, Barycentric Lagrange interpolation, SIAM Review, 46(3):501–517, 2004. <ulink url="https://people.maths.ox.ac.uk/trefethen/barycentric.pdf">https://people.maths.ox.ac.uk/trefethen/barycentric.pdf</ulink> </para>
    </detaileddescription>
    <location file="ql/cashflows/cashflowvectors.cpp" line="32" column="1"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_interpolation2_d" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::Interpolation2D</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_extrapolator" prot="public" virt="non-virtual">QuantLib::Extrapolator</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_backwardflat_linear_interpolation" prot="public" virt="non-virtual">QuantLib::BackwardflatLinearInterpolation</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_bicubic_spline" prot="public" virt="non-virtual">QuantLib::BicubicSpline</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_bilinear_interpolation" prot="public" virt="non-virtual">QuantLib::BilinearInterpolation</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_flat_extrapolator2_d" prot="public" virt="non-virtual">QuantLib::FlatExtrapolator2D</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_kernel_interpolation2_d" prot="public" virt="non-virtual">QuantLib::KernelInterpolation2D</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_polynomial2_d_spline" prot="public" virt="non-virtual">QuantLib::Polynomial2DSpline</derivedcompoundref>
    <includes refid="interpolation2d_8hpp" local="no">interpolation2d.hpp</includes>
    <innerclass refid="class_quant_lib_1_1_interpolation2_d_1_1_impl" prot="protected">QuantLib::Interpolation2D::Impl</innerclass>
    <innerclass refid="class_quant_lib_1_1_interpolation2_d_1_1template_impl" prot="public">QuantLib::Interpolation2D::templateImpl</innerclass>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_interpolation2_d_1a47e0080e981293519763e5dc46b83dfc" prot="protected" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_interpolation2_d_1_1_impl" kindref="compound">Impl</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;Impl&gt; QuantLib::Interpolation2D::impl_</definition>
        <argsstring></argsstring>
        <name>impl_</name>
        <qualifiedname>QuantLib::Interpolation2D::impl_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/interpolation2d.hpp" line="66" column="25" bodyfile="ql/math/interpolations/interpolation2d.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_interpolation2_d_1af2ab18d1a014d3e4669c2c5e8d4b6cbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Interpolation2D::Interpolation2D</definition>
        <argsstring>()=default</argsstring>
        <name>Interpolation2D</name>
        <qualifiedname>QuantLib::Interpolation2D::Interpolation2D</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/interpolation2d.hpp" line="140" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolation2_d_1a4661f0e052434ab5023bf05dabb46a30" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Interpolation2D::operator()</definition>
        <argsstring>(Real x, Real y, bool allowExtrapolation=false) const</argsstring>
        <name>operator()</name>
        <qualifiedname>QuantLib::Interpolation2D::operator()</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>allowExtrapolation</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/interpolation2d.hpp" line="141" column="14" bodyfile="ql/math/interpolations/interpolation2d.hpp" bodystart="141" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolation2_d_1af7f2a8633f38c72922274adb3d9c3a30" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Interpolation2D::xMin</definition>
        <argsstring>() const</argsstring>
        <name>xMin</name>
        <qualifiedname>QuantLib::Interpolation2D::xMin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/interpolation2d.hpp" line="146" column="14" bodyfile="ql/math/interpolations/interpolation2d.hpp" bodystart="146" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolation2_d_1a2f51a1d59e505579da70d1fd4504135c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Interpolation2D::xMax</definition>
        <argsstring>() const</argsstring>
        <name>xMax</name>
        <qualifiedname>QuantLib::Interpolation2D::xMax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/interpolation2d.hpp" line="149" column="14" bodyfile="ql/math/interpolations/interpolation2d.hpp" bodystart="149" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolation2_d_1a5d82739a85c70e4d4de818eec849ca5b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt; Real &gt; QuantLib::Interpolation2D::xValues</definition>
        <argsstring>() const</argsstring>
        <name>xValues</name>
        <qualifiedname>QuantLib::Interpolation2D::xValues</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/interpolation2d.hpp" line="152" column="21" bodyfile="ql/math/interpolations/interpolation2d.hpp" bodystart="152" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolation2_d_1ac9014ca99e2fc46c8742223cae7babfb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::Interpolation2D::locateX</definition>
        <argsstring>(Real x) const</argsstring>
        <name>locateX</name>
        <qualifiedname>QuantLib::Interpolation2D::locateX</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/interpolation2d.hpp" line="155" column="14" bodyfile="ql/math/interpolations/interpolation2d.hpp" bodystart="155" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolation2_d_1ae3ea343091f7b5ac767e23dae3af968f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Interpolation2D::yMin</definition>
        <argsstring>() const</argsstring>
        <name>yMin</name>
        <qualifiedname>QuantLib::Interpolation2D::yMin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/interpolation2d.hpp" line="158" column="14" bodyfile="ql/math/interpolations/interpolation2d.hpp" bodystart="158" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolation2_d_1a48e404a4615bb99f1ca91fcfb37af0c1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Interpolation2D::yMax</definition>
        <argsstring>() const</argsstring>
        <name>yMax</name>
        <qualifiedname>QuantLib::Interpolation2D::yMax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/interpolation2d.hpp" line="161" column="14" bodyfile="ql/math/interpolations/interpolation2d.hpp" bodystart="161" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolation2_d_1aa8dcc2169f8a3da1895ed0dbc882f4d5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt; Real &gt; QuantLib::Interpolation2D::yValues</definition>
        <argsstring>() const</argsstring>
        <name>yValues</name>
        <qualifiedname>QuantLib::Interpolation2D::yValues</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/interpolation2d.hpp" line="164" column="21" bodyfile="ql/math/interpolations/interpolation2d.hpp" bodystart="164" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolation2_d_1a7a23b0918c51775980971f907f73e489" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::Interpolation2D::locateY</definition>
        <argsstring>(Real y) const</argsstring>
        <name>locateY</name>
        <qualifiedname>QuantLib::Interpolation2D::locateY</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/interpolation2d.hpp" line="167" column="14" bodyfile="ql/math/interpolations/interpolation2d.hpp" bodystart="167" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolation2_d_1a83d46e5677a8506b69827bcecc9cb96b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
        <definition>const Matrix &amp; QuantLib::Interpolation2D::zData</definition>
        <argsstring>() const</argsstring>
        <name>zData</name>
        <qualifiedname>QuantLib::Interpolation2D::zData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/interpolation2d.hpp" line="170" column="22" bodyfile="ql/math/interpolations/interpolation2d.hpp" bodystart="170" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolation2_d_1a79eeed1d394f3030da83d37c6617b5dd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::Interpolation2D::isInRange</definition>
        <argsstring>(Real x, Real y) const</argsstring>
        <name>isInRange</name>
        <qualifiedname>QuantLib::Interpolation2D::isInRange</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/interpolation2d.hpp" line="173" column="14" bodyfile="ql/math/interpolations/interpolation2d.hpp" bodystart="173" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolation2_d_1a79f3d2af850e00ffceb395c874692e7b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::Interpolation2D::update</definition>
        <argsstring>()</argsstring>
        <name>update</name>
        <qualifiedname>QuantLib::Interpolation2D::update</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/interpolation2d.hpp" line="176" column="14" bodyfile="ql/math/interpolations/interpolation2d.hpp" bodystart="176" bodyend="178"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_interpolation2_d_1a5328e52aca77d07eebb1efce48b5d51a" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::Interpolation2D::checkRange</definition>
        <argsstring>(Real x, Real y, bool extrapolate) const</argsstring>
        <name>checkRange</name>
        <qualifiedname>QuantLib::Interpolation2D::checkRange</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/interpolation2d.hpp" line="180" column="14" bodyfile="ql/math/interpolations/interpolation2d.hpp" bodystart="180" bodyend="189"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>base class for 2-D interpolations. </para>
    </briefdescription>
    <detaileddescription>
<para>Classes derived from this class will provide interpolated values from two sequences of length <formula id="4">$ N $</formula> and <formula id="89">$ M $</formula>, representing the discretized values of the <formula id="28">$ x $</formula> and  <formula id="283">$ y
$</formula> variables, and a <formula id="284">$ N \times M $</formula> matrix representing the tabulated function values.</para>
<para><simplesect kind="warning"><para>See the <ref refid="class_quant_lib_1_1_interpolation" kindref="compound">Interpolation</ref> class for information about the required lifetime of the underlying data. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>QuantLib::BackwardflatLinearInterpolation</label>
        <link refid="class_quant_lib_1_1_backwardflat_linear_interpolation"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::BicubicSpline</label>
        <link refid="class_quant_lib_1_1_bicubic_spline"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::BilinearInterpolation</label>
        <link refid="class_quant_lib_1_1_bilinear_interpolation"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Extrapolator</label>
        <link refid="class_quant_lib_1_1_extrapolator"/>
      </node>
      <node id="6">
        <label>QuantLib::FlatExtrapolator2D</label>
        <link refid="class_quant_lib_1_1_flat_extrapolator2_d"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::Interpolation2D</label>
        <link refid="class_quant_lib_1_1_interpolation2_d"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::KernelInterpolation2D</label>
        <link refid="class_quant_lib_1_1_kernel_interpolation2_d"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::Polynomial2DSpline</label>
        <link refid="class_quant_lib_1_1_polynomial2_d_spline"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::Extrapolator</label>
        <link refid="class_quant_lib_1_1_extrapolator"/>
      </node>
      <node id="1">
        <label>QuantLib::Interpolation2D</label>
        <link refid="class_quant_lib_1_1_interpolation2_d"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/math/interpolations/interpolation2d.hpp" line="47" column="5" bodyfile="ql/math/interpolations/interpolation2d.hpp" bodystart="47" bodyend="190"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_extrapolator_1ab3936a9b5b5c163d3e511437c16c1d9e" prot="public" virt="non-virtual"><scope>QuantLib::Interpolation2D</scope><name>allowsExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_interpolation2_d_1a5328e52aca77d07eebb1efce48b5d51a" prot="protected" virt="non-virtual"><scope>QuantLib::Interpolation2D</scope><name>checkRange</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1a6af69387d5cae0fe84d6a0c858406218" prot="public" virt="non-virtual"><scope>QuantLib::Interpolation2D</scope><name>disableExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1a5f7b5650a44d6c63095bc739470c8bfb" prot="public" virt="non-virtual"><scope>QuantLib::Interpolation2D</scope><name>enableExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1af1c3adaccdfaf07d3d07edaa234444f7" prot="public" virt="non-virtual"><scope>QuantLib::Interpolation2D</scope><name>Extrapolator</name></member>
      <member refid="class_quant_lib_1_1_interpolation2_d_1a47e0080e981293519763e5dc46b83dfc" prot="protected" virt="non-virtual"><scope>QuantLib::Interpolation2D</scope><name>impl_</name></member>
      <member refid="class_quant_lib_1_1_interpolation2_d_1af2ab18d1a014d3e4669c2c5e8d4b6cbd" prot="public" virt="non-virtual"><scope>QuantLib::Interpolation2D</scope><name>Interpolation2D</name></member>
      <member refid="class_quant_lib_1_1_interpolation2_d_1a79eeed1d394f3030da83d37c6617b5dd" prot="public" virt="non-virtual"><scope>QuantLib::Interpolation2D</scope><name>isInRange</name></member>
      <member refid="class_quant_lib_1_1_interpolation2_d_1ac9014ca99e2fc46c8742223cae7babfb" prot="public" virt="non-virtual"><scope>QuantLib::Interpolation2D</scope><name>locateX</name></member>
      <member refid="class_quant_lib_1_1_interpolation2_d_1a7a23b0918c51775980971f907f73e489" prot="public" virt="non-virtual"><scope>QuantLib::Interpolation2D</scope><name>locateY</name></member>
      <member refid="class_quant_lib_1_1_interpolation2_d_1a4661f0e052434ab5023bf05dabb46a30" prot="public" virt="non-virtual"><scope>QuantLib::Interpolation2D</scope><name>operator()</name></member>
      <member refid="class_quant_lib_1_1_interpolation2_d_1a79f3d2af850e00ffceb395c874692e7b" prot="public" virt="non-virtual"><scope>QuantLib::Interpolation2D</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_interpolation2_d_1a2f51a1d59e505579da70d1fd4504135c" prot="public" virt="non-virtual"><scope>QuantLib::Interpolation2D</scope><name>xMax</name></member>
      <member refid="class_quant_lib_1_1_interpolation2_d_1af7f2a8633f38c72922274adb3d9c3a30" prot="public" virt="non-virtual"><scope>QuantLib::Interpolation2D</scope><name>xMin</name></member>
      <member refid="class_quant_lib_1_1_interpolation2_d_1a5d82739a85c70e4d4de818eec849ca5b" prot="public" virt="non-virtual"><scope>QuantLib::Interpolation2D</scope><name>xValues</name></member>
      <member refid="class_quant_lib_1_1_interpolation2_d_1a48e404a4615bb99f1ca91fcfb37af0c1" prot="public" virt="non-virtual"><scope>QuantLib::Interpolation2D</scope><name>yMax</name></member>
      <member refid="class_quant_lib_1_1_interpolation2_d_1ae3ea343091f7b5ac767e23dae3af968f" prot="public" virt="non-virtual"><scope>QuantLib::Interpolation2D</scope><name>yMin</name></member>
      <member refid="class_quant_lib_1_1_interpolation2_d_1aa8dcc2169f8a3da1895ed0dbc882f4d5" prot="public" virt="non-virtual"><scope>QuantLib::Interpolation2D</scope><name>yValues</name></member>
      <member refid="class_quant_lib_1_1_interpolation2_d_1a83d46e5677a8506b69827bcecc9cb96b" prot="public" virt="non-virtual"><scope>QuantLib::Interpolation2D</scope><name>zData</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1af0ca0156436ffbce159183198eb27e2e" prot="public" virt="virtual"><scope>QuantLib::Interpolation2D</scope><name>~Extrapolator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

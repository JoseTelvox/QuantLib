<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine</compoundname>
    <templateparamlist>
      <param>
        <type>class RNG</type>
        <defval><ref refid="namespace_quant_lib_1a68b9aaf5f0c17983506b1a1db8575ab0" kindref="member">PseudoRandom</ref></defval>
      </param>
      <param>
        <type>class S</type>
        <defval><ref refid="namespace_quant_lib_1ae2e788da35d2b866040a03b96227ee6e" kindref="member">Statistics</ref></defval>
      </param>
      <param>
        <type>class P</type>
        <defval><ref refid="class_quant_lib_1_1_heston_process" kindref="compound">HestonProcess</ref></defval>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1a59596679cdb72588d9ffb7ca096dc165" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; P &gt;</type>
        <definition>ext::shared_ptr&lt;P&gt; QuantLib::MakeMCDiscreteArithmeticAPHestonEngine&lt; RNG, S, P &gt;::process_</definition>
        <argsstring></argsstring>
        <name>process_</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine::process_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" line="100" column="25" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1a402445328d9de99fbf911c7213deb979" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::MakeMCDiscreteArithmeticAPHestonEngine&lt; RNG, S, P &gt;::antithetic_</definition>
        <argsstring></argsstring>
        <name>antithetic_</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine::antithetic_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" line="101" column="14" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1aa9ede865b839d693c09bad777dcba79c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::MakeMCDiscreteArithmeticAPHestonEngine&lt; RNG, S, P &gt;::controlVariate_</definition>
        <argsstring></argsstring>
        <name>controlVariate_</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine::controlVariate_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" line="101" column="27" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1a239e7ecdda2063529d71ca410b59b6d9" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCDiscreteArithmeticAPHestonEngine&lt; RNG, S, P &gt;::samples_</definition>
        <argsstring></argsstring>
        <name>samples_</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine::samples_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" line="102" column="14" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1a9544d17c62639d069eb560222ca3f81e" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCDiscreteArithmeticAPHestonEngine&lt; RNG, S, P &gt;::maxSamples_</definition>
        <argsstring></argsstring>
        <name>maxSamples_</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine::maxSamples_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" line="102" column="23" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1a8077c460efe62657deb959b64073e17f" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCDiscreteArithmeticAPHestonEngine&lt; RNG, S, P &gt;::steps_</definition>
        <argsstring></argsstring>
        <name>steps_</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine::steps_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" line="102" column="35" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1a5e83dccaad032617b1b4567f46d409f0" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCDiscreteArithmeticAPHestonEngine&lt; RNG, S, P &gt;::stepsPerYear_</definition>
        <argsstring></argsstring>
        <name>stepsPerYear_</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine::stepsPerYear_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" line="102" column="42" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1a775835e928e6441534d823953c235e45" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::MakeMCDiscreteArithmeticAPHestonEngine&lt; RNG, S, P &gt;::tolerance_</definition>
        <argsstring></argsstring>
        <name>tolerance_</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine::tolerance_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" line="103" column="14" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1aabd29ff0ddd39fbf46fe0bc39a0e9aac" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
        <definition>BigNatural QuantLib::MakeMCDiscreteArithmeticAPHestonEngine&lt; RNG, S, P &gt;::seed_</definition>
        <argsstring></argsstring>
        <name>seed_</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine::seed_</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" line="104" column="20" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1a16cc9145d13cb30ad4dca17f1e148da5" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine&lt; RNG, S, P &gt;::MakeMCDiscreteArithmeticAPHestonEngine</definition>
        <argsstring>(ext::shared_ptr&lt; P &gt; process)</argsstring>
        <name>MakeMCDiscreteArithmeticAPHestonEngine</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine::MakeMCDiscreteArithmeticAPHestonEngine</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; P &gt;</type>
          <declname>process</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" line="87" column="18" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" bodystart="238" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1aa93ed36d34f64971abf3c5b2b1afc354" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine" kindref="compound">MakeMCDiscreteArithmeticAPHestonEngine</ref> &amp;</type>
        <definition>MakeMCDiscreteArithmeticAPHestonEngine&lt; RNG, S, P &gt; &amp; QuantLib::MakeMCDiscreteArithmeticAPHestonEngine&lt; RNG, S, P &gt;::withSamples</definition>
        <argsstring>(Size samples)</argsstring>
        <name>withSamples</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine::withSamples</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" line="89" column="48" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" bodystart="244" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1a32956789ea557e0b34ef4e872a5f9cfb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine" kindref="compound">MakeMCDiscreteArithmeticAPHestonEngine</ref> &amp;</type>
        <definition>MakeMCDiscreteArithmeticAPHestonEngine&lt; RNG, S, P &gt; &amp; QuantLib::MakeMCDiscreteArithmeticAPHestonEngine&lt; RNG, S, P &gt;::withAbsoluteTolerance</definition>
        <argsstring>(Real tolerance)</argsstring>
        <name>withAbsoluteTolerance</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine::withAbsoluteTolerance</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>tolerance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" line="90" column="48" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" bodystart="253" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1a646c802fb98ecad7dfd256ae7d5ee3b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine" kindref="compound">MakeMCDiscreteArithmeticAPHestonEngine</ref> &amp;</type>
        <definition>MakeMCDiscreteArithmeticAPHestonEngine&lt; RNG, S, P &gt; &amp; QuantLib::MakeMCDiscreteArithmeticAPHestonEngine&lt; RNG, S, P &gt;::withMaxSamples</definition>
        <argsstring>(Size samples)</argsstring>
        <name>withMaxSamples</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine::withMaxSamples</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" line="91" column="48" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" bodystart="266" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1a102898579552ccd80f82275f4b0be944" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine" kindref="compound">MakeMCDiscreteArithmeticAPHestonEngine</ref> &amp;</type>
        <definition>MakeMCDiscreteArithmeticAPHestonEngine&lt; RNG, S, P &gt; &amp; QuantLib::MakeMCDiscreteArithmeticAPHestonEngine&lt; RNG, S, P &gt;::withSeed</definition>
        <argsstring>(BigNatural seed)</argsstring>
        <name>withSeed</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine::withSeed</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" line="92" column="48" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" bodystart="273" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1a155ca00695b6cb22d5615346e68be242" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine" kindref="compound">MakeMCDiscreteArithmeticAPHestonEngine</ref> &amp;</type>
        <definition>MakeMCDiscreteArithmeticAPHestonEngine&lt; RNG, S, P &gt; &amp; QuantLib::MakeMCDiscreteArithmeticAPHestonEngine&lt; RNG, S, P &gt;::withAntitheticVariate</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>withAntitheticVariate</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine::withAntitheticVariate</qualifiedname>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" line="93" column="48" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" bodystart="280" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1a6d98e01ad48a04e2b097e3dab8909eff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine" kindref="compound">MakeMCDiscreteArithmeticAPHestonEngine</ref> &amp;</type>
        <definition>MakeMCDiscreteArithmeticAPHestonEngine&lt; RNG, S, P &gt; &amp; QuantLib::MakeMCDiscreteArithmeticAPHestonEngine&lt; RNG, S, P &gt;::withSteps</definition>
        <argsstring>(Size steps)</argsstring>
        <name>withSteps</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine::withSteps</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" line="94" column="48" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" bodystart="287" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1a5ab1d29fc67e16dc3505d808327b1712" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine" kindref="compound">MakeMCDiscreteArithmeticAPHestonEngine</ref> &amp;</type>
        <definition>MakeMCDiscreteArithmeticAPHestonEngine&lt; RNG, S, P &gt; &amp; QuantLib::MakeMCDiscreteArithmeticAPHestonEngine&lt; RNG, S, P &gt;::withStepsPerYear</definition>
        <argsstring>(Size steps)</argsstring>
        <name>withStepsPerYear</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine::withStepsPerYear</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" line="95" column="48" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" bodystart="296" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1afd9a7488115eec617f4f673f30c01413" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine" kindref="compound">MakeMCDiscreteArithmeticAPHestonEngine</ref> &amp;</type>
        <definition>MakeMCDiscreteArithmeticAPHestonEngine&lt; RNG, S, P &gt; &amp; QuantLib::MakeMCDiscreteArithmeticAPHestonEngine&lt; RNG, S, P &gt;::withControlVariate</definition>
        <argsstring>(bool b=false)</argsstring>
        <name>withControlVariate</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine::withControlVariate</qualifiedname>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" line="96" column="48" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" bodystart="305" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1a5521d9f65366af9e3f8f7f7a328934ab" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine&lt; RNG, S, P &gt;::operator ext::shared_ptr&lt; PricingEngine &gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator ext::shared_ptr&lt; PricingEngine &gt;</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine::shared_ptr&lt; PricingEngine &gt;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" line="98" column="9" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" bodystart="311" bodyend="322"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" line="85" column="5" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price_heston.hpp" bodystart="85" bodyend="105"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1a402445328d9de99fbf911c7213deb979" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine</scope><name>antithetic_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1aa9ede865b839d693c09bad777dcba79c" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine</scope><name>controlVariate_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1a16cc9145d13cb30ad4dca17f1e148da5" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine</scope><name>MakeMCDiscreteArithmeticAPHestonEngine</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1a9544d17c62639d069eb560222ca3f81e" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine</scope><name>maxSamples_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1a5521d9f65366af9e3f8f7f7a328934ab" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine</scope><name>operator ext::shared_ptr&lt; PricingEngine &gt;</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1a59596679cdb72588d9ffb7ca096dc165" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine</scope><name>process_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1a239e7ecdda2063529d71ca410b59b6d9" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine</scope><name>samples_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1aabd29ff0ddd39fbf46fe0bc39a0e9aac" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine</scope><name>seed_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1a8077c460efe62657deb959b64073e17f" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine</scope><name>steps_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1a5e83dccaad032617b1b4567f46d409f0" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine</scope><name>stepsPerYear_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1a775835e928e6441534d823953c235e45" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine</scope><name>tolerance_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1a32956789ea557e0b34ef4e872a5f9cfb" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine</scope><name>withAbsoluteTolerance</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1a155ca00695b6cb22d5615346e68be242" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine</scope><name>withAntitheticVariate</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1afd9a7488115eec617f4f673f30c01413" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine</scope><name>withControlVariate</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1a646c802fb98ecad7dfd256ae7d5ee3b3" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine</scope><name>withMaxSamples</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1aa93ed36d34f64971abf3c5b2b1afc354" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine</scope><name>withSamples</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1a102898579552ccd80f82275f4b0be944" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine</scope><name>withSeed</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1a6d98e01ad48a04e2b097e3dab8909eff" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine</scope><name>withSteps</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_heston_engine_1a5ab1d29fc67e16dc3505d808327b1712" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPHestonEngine</scope><name>withStepsPerYear</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_constraint_1_1_impl" kind="class" language="C++" prot="protected" abstract="yes">
    <compoundname>QuantLib::Constraint::Impl</compoundname>
    <includes refid="constraint_8hpp" local="no">constraint.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_constraint_1_1_impl_1aab9bd58b412a98a57a8384e905607216" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual QuantLib::Constraint::Impl::~Impl</definition>
        <argsstring>()=default</argsstring>
        <name>~Impl</name>
        <qualifiedname>QuantLib::Constraint::Impl::~Impl</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/constraint.hpp" line="40" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_constraint_1_1_impl_1afab7b59f92aeedd043dab275056be977" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool QuantLib::Constraint::Impl::test</definition>
        <argsstring>(const Array &amp;params) const =0</argsstring>
        <name>test</name>
        <qualifiedname>QuantLib::Constraint::Impl::test</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Tests if params satisfy the constraint. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/constraint.hpp" line="42" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_constraint_1_1_impl_1a555be9e6d36df822fafdcc72c17f08c1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>virtual Array QuantLib::Constraint::Impl::upperBound</definition>
        <argsstring>(const Array &amp;params) const</argsstring>
        <name>upperBound</name>
        <qualifiedname>QuantLib::Constraint::Impl::upperBound</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Returns upper bound for given parameters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/constraint.hpp" line="44" column="27" bodyfile="ql/math/optimization/constraint.hpp" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_constraint_1_1_impl_1aee05b37efbe4871a95bed26db28a5b9a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>virtual Array QuantLib::Constraint::Impl::lowerBound</definition>
        <argsstring>(const Array &amp;params) const</argsstring>
        <name>lowerBound</name>
        <qualifiedname>QuantLib::Constraint::Impl::lowerBound</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
<para>Returns lower bound for given parameters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/constraint.hpp" line="49" column="27" bodyfile="ql/math/optimization/constraint.hpp" bodystart="49" bodyend="52"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Base class for constraint implementations. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/math/optimization/constraint.hpp" line="38" column="9" bodyfile="ql/math/optimization/constraint.hpp" bodystart="38" bodyend="53"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_constraint_1_1_impl_1aee05b37efbe4871a95bed26db28a5b9a" prot="public" virt="virtual"><scope>QuantLib::Constraint::Impl</scope><name>lowerBound</name></member>
      <member refid="class_quant_lib_1_1_constraint_1_1_impl_1afab7b59f92aeedd043dab275056be977" prot="public" virt="pure-virtual"><scope>QuantLib::Constraint::Impl</scope><name>test</name></member>
      <member refid="class_quant_lib_1_1_constraint_1_1_impl_1a555be9e6d36df822fafdcc72c17f08c1" prot="public" virt="virtual"><scope>QuantLib::Constraint::Impl</scope><name>upperBound</name></member>
      <member refid="class_quant_lib_1_1_constraint_1_1_impl_1aab9bd58b412a98a57a8384e905607216" prot="public" virt="virtual"><scope>QuantLib::Constraint::Impl</scope><name>~Impl</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

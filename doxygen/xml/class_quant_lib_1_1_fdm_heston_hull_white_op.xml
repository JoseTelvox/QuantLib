<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_fdm_heston_hull_white_op" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::FdmHestonHullWhiteOp</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_fdm_linear_op_composite" prot="public" virt="non-virtual">QuantLib::FdmLinearOpComposite</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_heston_hull_white_op_1a85483148d33c97fe1f1a11f9faaf481c" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::FdmHestonHullWhiteOp::v0_</definition>
        <argsstring></argsstring>
        <name>v0_</name>
        <qualifiedname>QuantLib::FdmHestonHullWhiteOp::v0_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp" line="83" column="20" bodyfile="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_heston_hull_white_op_1a7a3769d7b6411d89c3231ca12d99d495" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::FdmHestonHullWhiteOp::kappa_</definition>
        <argsstring></argsstring>
        <name>kappa_</name>
        <qualifiedname>QuantLib::FdmHestonHullWhiteOp::kappa_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp" line="83" column="24" bodyfile="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_heston_hull_white_op_1adf6bb396f0290aa9e38fc1726fd8f78e" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::FdmHestonHullWhiteOp::theta_</definition>
        <argsstring></argsstring>
        <name>theta_</name>
        <qualifiedname>QuantLib::FdmHestonHullWhiteOp::theta_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp" line="83" column="31" bodyfile="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_heston_hull_white_op_1a856b317202ee5ad19f22c97a1e4b8292" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::FdmHestonHullWhiteOp::sigma_</definition>
        <argsstring></argsstring>
        <name>sigma_</name>
        <qualifiedname>QuantLib::FdmHestonHullWhiteOp::sigma_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp" line="83" column="38" bodyfile="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_heston_hull_white_op_1a67d0738146f7e4d05e95d01ff62e2e34" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::FdmHestonHullWhiteOp::rho_</definition>
        <argsstring></argsstring>
        <name>rho_</name>
        <qualifiedname>QuantLib::FdmHestonHullWhiteOp::rho_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp" line="83" column="45" bodyfile="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_heston_hull_white_op_1ae532a1a7fa02a7fdea4b0985d3f080fc" prot="private" static="no" mutable="no">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_hull_white" kindref="compound">HullWhite</ref> &gt;</type>
        <definition>const ext::shared_ptr&lt;HullWhite&gt; QuantLib::FdmHestonHullWhiteOp::hwModel_</definition>
        <argsstring></argsstring>
        <name>hwModel_</name>
        <qualifiedname>QuantLib::FdmHestonHullWhiteOp::hwModel_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp" line="84" column="31" bodyfile="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_heston_hull_white_op_1a224b8896688f821123505617c1eebc25" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_nine_point_linear_op" kindref="compound">NinePointLinearOp</ref></type>
        <definition>NinePointLinearOp QuantLib::FdmHestonHullWhiteOp::hestonCorrMap_</definition>
        <argsstring></argsstring>
        <name>hestonCorrMap_</name>
        <qualifiedname>QuantLib::FdmHestonHullWhiteOp::hestonCorrMap_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp" line="86" column="27" bodyfile="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_heston_hull_white_op_1add14df17a58a8364385a71f1e52b72e8" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_nine_point_linear_op" kindref="compound">NinePointLinearOp</ref></type>
        <definition>NinePointLinearOp QuantLib::FdmHestonHullWhiteOp::equityIrCorrMap_</definition>
        <argsstring></argsstring>
        <name>equityIrCorrMap_</name>
        <qualifiedname>QuantLib::FdmHestonHullWhiteOp::equityIrCorrMap_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp" line="87" column="27" bodyfile="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_heston_hull_white_op_1a058268fd9f81b6be37df8aadcd9dfc42" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_triple_band_linear_op" kindref="compound">TripleBandLinearOp</ref></type>
        <definition>TripleBandLinearOp QuantLib::FdmHestonHullWhiteOp::dyMap_</definition>
        <argsstring></argsstring>
        <name>dyMap_</name>
        <qualifiedname>QuantLib::FdmHestonHullWhiteOp::dyMap_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp" line="88" column="28" bodyfile="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_heston_hull_white_op_1a0b5cfb48f869531ee034aea904327d2a" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_fdm_heston_hull_white_equity_part" kindref="compound">FdmHestonHullWhiteEquityPart</ref></type>
        <definition>FdmHestonHullWhiteEquityPart QuantLib::FdmHestonHullWhiteOp::dxMap_</definition>
        <argsstring></argsstring>
        <name>dxMap_</name>
        <qualifiedname>QuantLib::FdmHestonHullWhiteOp::dxMap_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp" line="89" column="38" bodyfile="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_heston_hull_white_op_1a74601113af64d261d121837961982ecc" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_fdm_hull_white_op" kindref="compound">FdmHullWhiteOp</ref></type>
        <definition>FdmHullWhiteOp QuantLib::FdmHestonHullWhiteOp::hullWhiteOp_</definition>
        <argsstring></argsstring>
        <name>hullWhiteOp_</name>
        <qualifiedname>QuantLib::FdmHestonHullWhiteOp::hullWhiteOp_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp" line="90" column="24" bodyfile="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_heston_hull_white_op_1ae9989ae263dc797490d508037e00d079" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FdmHestonHullWhiteOp::FdmHestonHullWhiteOp</definition>
        <argsstring>(const ext::shared_ptr&lt; FdmMesher &gt; &amp;mesher, const ext::shared_ptr&lt; HestonProcess &gt; &amp;hestonProcess, const ext::shared_ptr&lt; HullWhiteProcess &gt; &amp;hwProcess, Real equityShortRateCorrelation)</argsstring>
        <name>FdmHestonHullWhiteOp</name>
        <qualifiedname>QuantLib::FdmHestonHullWhiteOp::FdmHestonHullWhiteOp</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_fdm_mesher" kindref="compound">FdmMesher</ref> &gt; &amp;</type>
          <declname>mesher</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_heston_process" kindref="compound">HestonProcess</ref> &gt; &amp;</type>
          <declname>hestonProcess</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_hull_white_process" kindref="compound">HullWhiteProcess</ref> &gt; &amp;</type>
          <declname>hwProcess</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>equityShortRateCorrelation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp" line="64" column="9" bodyfile="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.cpp" bodystart="69" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_heston_hull_white_op_1ab30baf01ee0be2b01f1d0a18e44f9746" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::FdmHestonHullWhiteOp::size</definition>
        <argsstring>() const override</argsstring>
        <name>size</name>
        <qualifiedname>QuantLib::FdmHestonHullWhiteOp::size</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1aea89ff84d04c901c37823de66b392018">size</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp" line="70" column="14" bodyfile="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.cpp" bodystart="98" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_heston_hull_white_op_1afdd889852b90926c67586985ffd09f74" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::FdmHestonHullWhiteOp::setTime</definition>
        <argsstring>(Time t1, Time t2) override</argsstring>
        <name>setTime</name>
        <qualifiedname>QuantLib::FdmHestonHullWhiteOp::setTime</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1ab635911759d6a1bde11c501d15515872">setTime</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t1</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t2</declname>
        </param>
        <briefdescription>
<para><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> <formula id="385">$t1 &lt;= t2$</formula> is required. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp" line="71" column="14" bodyfile="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.cpp" bodystart="93" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_heston_hull_white_op_1a85e2a9addd235119f13cb933c434069b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FdmHestonHullWhiteOp::apply</definition>
        <argsstring>(const Array &amp;r) const override</argsstring>
        <name>apply</name>
        <qualifiedname>QuantLib::FdmHestonHullWhiteOp::apply</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_1a9d59d8bb3597206db60f61c3f448c211">apply</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp" line="73" column="15" bodyfile="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.cpp" bodystart="102" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_heston_hull_white_op_1a88b521455b685e863cce5034d2a6573c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FdmHestonHullWhiteOp::apply_mixed</definition>
        <argsstring>(const Array &amp;r) const override</argsstring>
        <name>apply_mixed</name>
        <qualifiedname>QuantLib::FdmHestonHullWhiteOp::apply_mixed</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1a162fe1437fb3060475f7824d73b72ff7">apply_mixed</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp" line="74" column="15" bodyfile="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.cpp" bodystart="120" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_heston_hull_white_op_1a2d9c955bbf59717e695fc147811c934f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FdmHestonHullWhiteOp::apply_direction</definition>
        <argsstring>(Size direction, const Array &amp;r) const override</argsstring>
        <name>apply_direction</name>
        <qualifiedname>QuantLib::FdmHestonHullWhiteOp::apply_direction</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1aa9f8c9bcd1596637b3eaaa74c64ad83c">apply_direction</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp" line="76" column="15" bodyfile="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.cpp" bodystart="108" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_heston_hull_white_op_1a7f6eda3fb214019ccd3d260991b1b8f0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FdmHestonHullWhiteOp::solve_splitting</definition>
        <argsstring>(Size direction, const Array &amp;r, Real s) const override</argsstring>
        <name>solve_splitting</name>
        <qualifiedname>QuantLib::FdmHestonHullWhiteOp::solve_splitting</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1a1ea6ebafd3a36a95a6acb6e1c189e21f">solve_splitting</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp" line="77" column="15" bodyfile="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.cpp" bodystart="124" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_heston_hull_white_op_1aa1f70258b01c9b1d8f71b98acd0f3451" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FdmHestonHullWhiteOp::preconditioner</definition>
        <argsstring>(const Array &amp;r, Real s) const override</argsstring>
        <name>preconditioner</name>
        <qualifiedname>QuantLib::FdmHestonHullWhiteOp::preconditioner</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1a3122983a62d53799ffd1c03922660e6c">preconditioner</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp" line="78" column="15" bodyfile="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.cpp" bodystart="139" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_heston_hull_white_op_1a711fe1088e1fa9ac10e413ea11865dc4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; SparseMatrix &gt;</type>
        <definition>std::vector&lt; SparseMatrix &gt; QuantLib::FdmHestonHullWhiteOp::toMatrixDecomp</definition>
        <argsstring>() const override</argsstring>
        <name>toMatrixDecomp</name>
        <qualifiedname>QuantLib::FdmHestonHullWhiteOp::toMatrixDecomp</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1aae06b697cc0d041a8cbdd9b259ec34b9">toMatrixDecomp</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp" line="80" column="21" bodyfile="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.cpp" bodystart="144" bodyend="151"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::FdmHestonHullWhiteOp</label>
        <link refid="class_quant_lib_1_1_fdm_heston_hull_white_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::FdmLinearOp</label>
        <link refid="class_quant_lib_1_1_fdm_linear_op"/>
      </node>
      <node id="2">
        <label>QuantLib::FdmLinearOpComposite</label>
        <link refid="class_quant_lib_1_1_fdm_linear_op_composite"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::FdmHestonHullWhiteOp</label>
        <link refid="class_quant_lib_1_1_fdm_heston_hull_white_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::FdmLinearOp</label>
        <link refid="class_quant_lib_1_1_fdm_linear_op"/>
      </node>
      <node id="2">
        <label>QuantLib::FdmLinearOpComposite</label>
        <link refid="class_quant_lib_1_1_fdm_linear_op_composite"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp" line="62" column="5" bodyfile="ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.hpp" bodystart="62" bodyend="91"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_fdm_heston_hull_white_op_1a85e2a9addd235119f13cb933c434069b" prot="public" virt="virtual"><scope>QuantLib::FdmHestonHullWhiteOp</scope><name>apply</name></member>
      <member refid="class_quant_lib_1_1_fdm_heston_hull_white_op_1a2d9c955bbf59717e695fc147811c934f" prot="public" virt="virtual"><scope>QuantLib::FdmHestonHullWhiteOp</scope><name>apply_direction</name></member>
      <member refid="class_quant_lib_1_1_fdm_heston_hull_white_op_1a88b521455b685e863cce5034d2a6573c" prot="public" virt="virtual"><scope>QuantLib::FdmHestonHullWhiteOp</scope><name>apply_mixed</name></member>
      <member refid="class_quant_lib_1_1_fdm_linear_op_1af55693593c0cf7e885c67fd848f76e49" prot="public" virt="non-virtual"><scope>QuantLib::FdmHestonHullWhiteOp</scope><name>array_type</name></member>
      <member refid="class_quant_lib_1_1_fdm_heston_hull_white_op_1a0b5cfb48f869531ee034aea904327d2a" prot="private" virt="non-virtual"><scope>QuantLib::FdmHestonHullWhiteOp</scope><name>dxMap_</name></member>
      <member refid="class_quant_lib_1_1_fdm_heston_hull_white_op_1a058268fd9f81b6be37df8aadcd9dfc42" prot="private" virt="non-virtual"><scope>QuantLib::FdmHestonHullWhiteOp</scope><name>dyMap_</name></member>
      <member refid="class_quant_lib_1_1_fdm_heston_hull_white_op_1add14df17a58a8364385a71f1e52b72e8" prot="private" virt="non-virtual"><scope>QuantLib::FdmHestonHullWhiteOp</scope><name>equityIrCorrMap_</name></member>
      <member refid="class_quant_lib_1_1_fdm_heston_hull_white_op_1ae9989ae263dc797490d508037e00d079" prot="public" virt="non-virtual"><scope>QuantLib::FdmHestonHullWhiteOp</scope><name>FdmHestonHullWhiteOp</name></member>
      <member refid="class_quant_lib_1_1_fdm_heston_hull_white_op_1a224b8896688f821123505617c1eebc25" prot="private" virt="non-virtual"><scope>QuantLib::FdmHestonHullWhiteOp</scope><name>hestonCorrMap_</name></member>
      <member refid="class_quant_lib_1_1_fdm_heston_hull_white_op_1a74601113af64d261d121837961982ecc" prot="private" virt="non-virtual"><scope>QuantLib::FdmHestonHullWhiteOp</scope><name>hullWhiteOp_</name></member>
      <member refid="class_quant_lib_1_1_fdm_heston_hull_white_op_1ae532a1a7fa02a7fdea4b0985d3f080fc" prot="private" virt="non-virtual"><scope>QuantLib::FdmHestonHullWhiteOp</scope><name>hwModel_</name></member>
      <member refid="class_quant_lib_1_1_fdm_heston_hull_white_op_1a7a3769d7b6411d89c3231ca12d99d495" prot="private" virt="non-virtual"><scope>QuantLib::FdmHestonHullWhiteOp</scope><name>kappa_</name></member>
      <member refid="class_quant_lib_1_1_fdm_heston_hull_white_op_1aa1f70258b01c9b1d8f71b98acd0f3451" prot="public" virt="virtual"><scope>QuantLib::FdmHestonHullWhiteOp</scope><name>preconditioner</name></member>
      <member refid="class_quant_lib_1_1_fdm_heston_hull_white_op_1a67d0738146f7e4d05e95d01ff62e2e34" prot="private" virt="non-virtual"><scope>QuantLib::FdmHestonHullWhiteOp</scope><name>rho_</name></member>
      <member refid="class_quant_lib_1_1_fdm_heston_hull_white_op_1afdd889852b90926c67586985ffd09f74" prot="public" virt="virtual"><scope>QuantLib::FdmHestonHullWhiteOp</scope><name>setTime</name></member>
      <member refid="class_quant_lib_1_1_fdm_heston_hull_white_op_1a856b317202ee5ad19f22c97a1e4b8292" prot="private" virt="non-virtual"><scope>QuantLib::FdmHestonHullWhiteOp</scope><name>sigma_</name></member>
      <member refid="class_quant_lib_1_1_fdm_heston_hull_white_op_1ab30baf01ee0be2b01f1d0a18e44f9746" prot="public" virt="virtual"><scope>QuantLib::FdmHestonHullWhiteOp</scope><name>size</name></member>
      <member refid="class_quant_lib_1_1_fdm_heston_hull_white_op_1a7f6eda3fb214019ccd3d260991b1b8f0" prot="public" virt="virtual"><scope>QuantLib::FdmHestonHullWhiteOp</scope><name>solve_splitting</name></member>
      <member refid="class_quant_lib_1_1_fdm_heston_hull_white_op_1adf6bb396f0290aa9e38fc1726fd8f78e" prot="private" virt="non-virtual"><scope>QuantLib::FdmHestonHullWhiteOp</scope><name>theta_</name></member>
      <member refid="class_quant_lib_1_1_fdm_linear_op_composite_1abca0364ae63b5b0e714fcd3ac9e8a73b" prot="public" virt="virtual"><scope>QuantLib::FdmHestonHullWhiteOp</scope><name>toMatrix</name></member>
      <member refid="class_quant_lib_1_1_fdm_heston_hull_white_op_1a711fe1088e1fa9ac10e413ea11865dc4" prot="public" virt="virtual"><scope>QuantLib::FdmHestonHullWhiteOp</scope><name>toMatrixDecomp</name></member>
      <member refid="class_quant_lib_1_1_fdm_heston_hull_white_op_1a85483148d33c97fe1f1a11f9faaf481c" prot="private" virt="non-virtual"><scope>QuantLib::FdmHestonHullWhiteOp</scope><name>v0_</name></member>
      <member refid="class_quant_lib_1_1_fdm_linear_op_1aa6f29eb6144a1848c73c21e392f023e4" prot="public" virt="virtual"><scope>QuantLib::FdmHestonHullWhiteOp</scope><name>~FdmLinearOp</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

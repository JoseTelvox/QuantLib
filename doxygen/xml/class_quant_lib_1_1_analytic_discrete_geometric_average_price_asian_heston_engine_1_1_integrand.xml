<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_analytic_discrete_geometric_average_price_asian_heston_engine_1_1_integrand" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_discrete_geometric_average_price_asian_heston_engine_1_1_integrand_1a54f24784812802f3209e5c478a6cce1c" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand::t_</definition>
        <argsstring></argsstring>
        <name>t_</name>
        <qualifiedname>QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand::t_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_discr_geom_av_price_heston.cpp" line="28" column="14" bodyfile="ql/experimental/asian/analytic_discr_geom_av_price_heston.cpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_discrete_geometric_average_price_asian_heston_engine_1_1_integrand_1a47888411b3995f31eadd39261607edf6" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand::T_</definition>
        <argsstring></argsstring>
        <name>T_</name>
        <qualifiedname>QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand::T_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_discr_geom_av_price_heston.cpp" line="28" column="17" bodyfile="ql/experimental/asian/analytic_discr_geom_av_price_heston.cpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_discrete_geometric_average_price_asian_heston_engine_1_1_integrand_1af72ebb2a7a543e6a4b70a8bacab16822" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand::K_</definition>
        <argsstring></argsstring>
        <name>K_</name>
        <qualifiedname>QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand::K_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_discr_geom_av_price_heston.cpp" line="28" column="20" bodyfile="ql/experimental/asian/analytic_discr_geom_av_price_heston.cpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_discrete_geometric_average_price_asian_heston_engine_1_1_integrand_1ab002c4762aa5a2e79c68ad3546ebbb35" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand::logK_</definition>
        <argsstring></argsstring>
        <name>logK_</name>
        <qualifiedname>QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand::logK_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_discr_geom_av_price_heston.cpp" line="28" column="23" bodyfile="ql/experimental/asian/analytic_discr_geom_av_price_heston.cpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_discrete_geometric_average_price_asian_heston_engine_1_1_integrand_1ae772829a75d12ab99c568e942afb2636" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand::kStar_</definition>
        <argsstring></argsstring>
        <name>kStar_</name>
        <qualifiedname>QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand::kStar_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_discr_geom_av_price_heston.cpp" line="29" column="14" bodyfile="ql/experimental/asian/analytic_discr_geom_av_price_heston.cpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_discrete_geometric_average_price_asian_heston_engine_1_1_integrand_1ac75741f3ced970ceab083551c4b7f7fe" prot="private" static="no" mutable="no">
        <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;</type>
        <definition>const std::vector&lt;Time&gt; QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand::t_n_</definition>
        <argsstring></argsstring>
        <name>t_n_</name>
        <qualifiedname>QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand::t_n_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_discr_geom_av_price_heston.cpp" line="30" column="27" bodyfile="ql/experimental/asian/analytic_discr_geom_av_price_heston.cpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_discrete_geometric_average_price_asian_heston_engine_1_1_integrand_1a714ffa7c2ce9040a819a0d0714d30a2d" prot="private" static="no" mutable="no">
        <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;</type>
        <definition>const std::vector&lt;Time&gt; QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand::tauK_</definition>
        <argsstring></argsstring>
        <name>tauK_</name>
        <qualifiedname>QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand::tauK_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_discr_geom_av_price_heston.cpp" line="30" column="32" bodyfile="ql/experimental/asian/analytic_discr_geom_av_price_heston.cpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_discrete_geometric_average_price_asian_heston_engine_1_1_integrand_1a200651052c2ab0caf98eec9ea04e7102" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_quant_lib_1_1_analytic_discrete_geometric_average_price_asian_heston_engine" kindref="compound">AnalyticDiscreteGeometricAveragePriceAsianHestonEngine</ref> *const</type>
        <definition>const AnalyticDiscreteGeometricAveragePriceAsianHestonEngine* const QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand::parent_</definition>
        <argsstring></argsstring>
        <name>parent_</name>
        <qualifiedname>QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand::parent_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_discr_geom_av_price_heston.cpp" line="31" column="76" bodyfile="ql/experimental/asian/analytic_discr_geom_av_price_heston.cpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_discrete_geometric_average_price_asian_heston_engine_1_1_integrand_1ad71a12a3cf47b965ac275166852c7fa3" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand::xiRightLimit_</definition>
        <argsstring></argsstring>
        <name>xiRightLimit_</name>
        <qualifiedname>QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand::xiRightLimit_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_discr_geom_av_price_heston.cpp" line="32" column="14" bodyfile="ql/experimental/asian/analytic_discr_geom_av_price_heston.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_discrete_geometric_average_price_asian_heston_engine_1_1_integrand_1af7076399aa78c48f5038817f4b3772d5" prot="private" static="no" mutable="no">
        <type>std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::complex&lt;Real&gt; QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand::i_</definition>
        <argsstring></argsstring>
        <name>i_</name>
        <qualifiedname>QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand::i_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_discr_geom_av_price_heston.cpp" line="33" column="22" bodyfile="ql/experimental/asian/analytic_discr_geom_av_price_heston.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_discrete_geometric_average_price_asian_heston_engine_1_1_integrand_1ac087e347dcf25aa47d11b8c635eb2e39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand::Integrand</definition>
        <argsstring>(Real t, Real T, Size kStar, std::vector&lt; Time &gt; t_n, std::vector&lt; Time &gt; tauK, Real K, const AnalyticDiscreteGeometricAveragePriceAsianHestonEngine *const parent, Real xiRightLimit)</argsstring>
        <name>Integrand</name>
        <qualifiedname>QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand::Integrand</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>T</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>kStar</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;</type>
          <declname>t_n</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;</type>
          <declname>tauK</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>K</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_analytic_discrete_geometric_average_price_asian_heston_engine" kindref="compound">AnalyticDiscreteGeometricAveragePriceAsianHestonEngine</ref> *const</type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>xiRightLimit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_discr_geom_av_price_heston.cpp" line="36" column="9" bodyfile="ql/experimental/asian/analytic_discr_geom_av_price_heston.cpp" bodystart="36" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_discrete_geometric_average_price_asian_heston_engine_1_1_integrand_1a651c916a92184ac084c06e82c0574a28" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand::operator()</definition>
        <argsstring>(Real xi) const</argsstring>
        <name>operator()</name>
        <qualifiedname>QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand::operator()</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>xi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_discr_geom_av_price_heston.cpp" line="48" column="14" bodyfile="ql/experimental/asian/analytic_discr_geom_av_price_heston.cpp" bodystart="48" bodyend="55"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/experimental/asian/analytic_discr_geom_av_price_heston.cpp" line="26" column="5" bodyfile="ql/experimental/asian/analytic_discr_geom_av_price_heston.cpp" bodystart="26" bodyend="56"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_analytic_discrete_geometric_average_price_asian_heston_engine_1_1_integrand_1af7076399aa78c48f5038817f4b3772d5" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand</scope><name>i_</name></member>
      <member refid="class_quant_lib_1_1_analytic_discrete_geometric_average_price_asian_heston_engine_1_1_integrand_1ac087e347dcf25aa47d11b8c635eb2e39" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand</scope><name>Integrand</name></member>
      <member refid="class_quant_lib_1_1_analytic_discrete_geometric_average_price_asian_heston_engine_1_1_integrand_1af72ebb2a7a543e6a4b70a8bacab16822" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand</scope><name>K_</name></member>
      <member refid="class_quant_lib_1_1_analytic_discrete_geometric_average_price_asian_heston_engine_1_1_integrand_1ae772829a75d12ab99c568e942afb2636" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand</scope><name>kStar_</name></member>
      <member refid="class_quant_lib_1_1_analytic_discrete_geometric_average_price_asian_heston_engine_1_1_integrand_1ab002c4762aa5a2e79c68ad3546ebbb35" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand</scope><name>logK_</name></member>
      <member refid="class_quant_lib_1_1_analytic_discrete_geometric_average_price_asian_heston_engine_1_1_integrand_1a651c916a92184ac084c06e82c0574a28" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand</scope><name>operator()</name></member>
      <member refid="class_quant_lib_1_1_analytic_discrete_geometric_average_price_asian_heston_engine_1_1_integrand_1a200651052c2ab0caf98eec9ea04e7102" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand</scope><name>parent_</name></member>
      <member refid="class_quant_lib_1_1_analytic_discrete_geometric_average_price_asian_heston_engine_1_1_integrand_1a47888411b3995f31eadd39261607edf6" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand</scope><name>T_</name></member>
      <member refid="class_quant_lib_1_1_analytic_discrete_geometric_average_price_asian_heston_engine_1_1_integrand_1a54f24784812802f3209e5c478a6cce1c" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand</scope><name>t_</name></member>
      <member refid="class_quant_lib_1_1_analytic_discrete_geometric_average_price_asian_heston_engine_1_1_integrand_1ac75741f3ced970ceab083551c4b7f7fe" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand</scope><name>t_n_</name></member>
      <member refid="class_quant_lib_1_1_analytic_discrete_geometric_average_price_asian_heston_engine_1_1_integrand_1a714ffa7c2ce9040a819a0d0714d30a2d" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand</scope><name>tauK_</name></member>
      <member refid="class_quant_lib_1_1_analytic_discrete_geometric_average_price_asian_heston_engine_1_1_integrand_1ad71a12a3cf47b965ac275166852c7fa3" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticDiscreteGeometricAveragePriceAsianHestonEngine::Integrand</scope><name>xiRightLimit_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

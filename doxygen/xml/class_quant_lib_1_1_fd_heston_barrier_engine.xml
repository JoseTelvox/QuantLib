<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_fd_heston_barrier_engine" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::FdHestonBarrierEngine</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_generic_model_engine" prot="public" virt="non-virtual">QuantLib::GenericModelEngine&lt; HestonModel, BarrierOption::arguments, BarrierOption::results &gt;</basecompoundref>
    <includes refid="fdhestonbarrierengine_8hpp" local="no">fdhestonbarrierengine.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_fd_heston_barrier_engine_1a641c2f4aca36c2ada5bafbb1ed9343ef" prot="private" static="no" mutable="no">
        <type>DividendSchedule</type>
        <definition>DividendSchedule QuantLib::FdHestonBarrierEngine::dividends_</definition>
        <argsstring></argsstring>
        <name>dividends_</name>
        <qualifiedname>QuantLib::FdHestonBarrierEngine::dividends_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/barrier/fdhestonbarrierengine.hpp" line="74" column="26" bodyfile="ql/pricingengines/barrier/fdhestonbarrierengine.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fd_heston_barrier_engine_1abb234f4d6bec053ee5e33c5306a5adc5" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::FdHestonBarrierEngine::tGrid_</definition>
        <argsstring></argsstring>
        <name>tGrid_</name>
        <qualifiedname>QuantLib::FdHestonBarrierEngine::tGrid_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/barrier/fdhestonbarrierengine.hpp" line="75" column="14" bodyfile="ql/pricingengines/barrier/fdhestonbarrierengine.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fd_heston_barrier_engine_1ab974d3f0b0124050e49ee8ffb0d740d0" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::FdHestonBarrierEngine::xGrid_</definition>
        <argsstring></argsstring>
        <name>xGrid_</name>
        <qualifiedname>QuantLib::FdHestonBarrierEngine::xGrid_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/barrier/fdhestonbarrierengine.hpp" line="75" column="21" bodyfile="ql/pricingengines/barrier/fdhestonbarrierengine.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fd_heston_barrier_engine_1af750f00bfb6d8596a3e72e6cdfe46812" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::FdHestonBarrierEngine::vGrid_</definition>
        <argsstring></argsstring>
        <name>vGrid_</name>
        <qualifiedname>QuantLib::FdHestonBarrierEngine::vGrid_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/barrier/fdhestonbarrierengine.hpp" line="75" column="28" bodyfile="ql/pricingengines/barrier/fdhestonbarrierengine.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fd_heston_barrier_engine_1ae276a44323d3b7b89140bc8b1203c563" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::FdHestonBarrierEngine::dampingSteps_</definition>
        <argsstring></argsstring>
        <name>dampingSteps_</name>
        <qualifiedname>QuantLib::FdHestonBarrierEngine::dampingSteps_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/barrier/fdhestonbarrierengine.hpp" line="75" column="35" bodyfile="ql/pricingengines/barrier/fdhestonbarrierengine.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fd_heston_barrier_engine_1a877c4755b110a9a46739e6153f229770" prot="private" static="no" mutable="no">
        <type><ref refid="struct_quant_lib_1_1_fdm_scheme_desc" kindref="compound">FdmSchemeDesc</ref></type>
        <definition>FdmSchemeDesc QuantLib::FdHestonBarrierEngine::schemeDesc_</definition>
        <argsstring></argsstring>
        <name>schemeDesc_</name>
        <qualifiedname>QuantLib::FdHestonBarrierEngine::schemeDesc_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/barrier/fdhestonbarrierengine.hpp" line="76" column="23" bodyfile="ql/pricingengines/barrier/fdhestonbarrierengine.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fd_heston_barrier_engine_1a8c6b1b0a7874bb6c6d392f48fad32c85" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_local_vol_term_structure" kindref="compound">LocalVolTermStructure</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;LocalVolTermStructure&gt; QuantLib::FdHestonBarrierEngine::leverageFct_</definition>
        <argsstring></argsstring>
        <name>leverageFct_</name>
        <qualifiedname>QuantLib::FdHestonBarrierEngine::leverageFct_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/barrier/fdhestonbarrierengine.hpp" line="77" column="25" bodyfile="ql/pricingengines/barrier/fdhestonbarrierengine.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fd_heston_barrier_engine_1a31083fe420fa34fe2cb96d09a64adfd4" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::FdHestonBarrierEngine::mixingFactor_</definition>
        <argsstring></argsstring>
        <name>mixingFactor_</name>
        <qualifiedname>QuantLib::FdHestonBarrierEngine::mixingFactor_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/barrier/fdhestonbarrierengine.hpp" line="78" column="14" bodyfile="ql/pricingengines/barrier/fdhestonbarrierengine.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_fd_heston_barrier_engine_1ab75a122010e94dd7ac50561b7141a8c1" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FdHestonBarrierEngine::FdHestonBarrierEngine</definition>
        <argsstring>(const ext::shared_ptr&lt; HestonModel &gt; &amp;model, Size tGrid=100, Size xGrid=100, Size vGrid=50, Size dampingSteps=0, const FdmSchemeDesc &amp;schemeDesc=FdmSchemeDesc::Hundsdorfer(), ext::shared_ptr&lt; LocalVolTermStructure &gt; leverageFct={}, Real mixingFactor=1.0)</argsstring>
        <name>FdHestonBarrierEngine</name>
        <qualifiedname>QuantLib::FdHestonBarrierEngine::FdHestonBarrierEngine</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_heston_model" kindref="compound">HestonModel</ref> &gt; &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>tGrid</declname>
          <defval>100</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>xGrid</declname>
          <defval>100</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>vGrid</declname>
          <defval>50</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>dampingSteps</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const <ref refid="struct_quant_lib_1_1_fdm_scheme_desc" kindref="compound">FdmSchemeDesc</ref> &amp;</type>
          <declname>schemeDesc</declname>
          <defval>FdmSchemeDesc::Hundsdorfer()</defval>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_local_vol_term_structure" kindref="compound">LocalVolTermStructure</ref> &gt;</type>
          <declname>leverageFct</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>mixingFactor</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/barrier/fdhestonbarrierengine.hpp" line="50" column="18" bodyfile="ql/pricingengines/barrier/fdhestonbarrierengine.cpp" bodystart="38" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fd_heston_barrier_engine_1ae6a61deed5ff617dc95fab0f29754be0" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FdHestonBarrierEngine::FdHestonBarrierEngine</definition>
        <argsstring>(const ext::shared_ptr&lt; HestonModel &gt; &amp;model, DividendSchedule dividends, Size tGrid=100, Size xGrid=100, Size vGrid=50, Size dampingSteps=0, const FdmSchemeDesc &amp;schemeDesc=FdmSchemeDesc::Hundsdorfer(), ext::shared_ptr&lt; LocalVolTermStructure &gt; leverageFct={}, Real mixingFactor=1.0)</argsstring>
        <name>FdHestonBarrierEngine</name>
        <qualifiedname>QuantLib::FdHestonBarrierEngine::FdHestonBarrierEngine</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_heston_model" kindref="compound">HestonModel</ref> &gt; &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>DividendSchedule</type>
          <declname>dividends</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>tGrid</declname>
          <defval>100</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>xGrid</declname>
          <defval>100</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>vGrid</declname>
          <defval>50</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>dampingSteps</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const <ref refid="struct_quant_lib_1_1_fdm_scheme_desc" kindref="compound">FdmSchemeDesc</ref> &amp;</type>
          <declname>schemeDesc</declname>
          <defval>FdmSchemeDesc::Hundsdorfer()</defval>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_local_vol_term_structure" kindref="compound">LocalVolTermStructure</ref> &gt;</type>
          <declname>leverageFct</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>mixingFactor</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/barrier/fdhestonbarrierengine.hpp" line="60" column="18" bodyfile="ql/pricingengines/barrier/fdhestonbarrierengine.cpp" bodystart="52" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fd_heston_barrier_engine_1aa8509075b4906027f6902bd272d8e6a7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::FdHestonBarrierEngine::calculate</definition>
        <argsstring>() const override</argsstring>
        <name>calculate</name>
        <qualifiedname>QuantLib::FdHestonBarrierEngine::calculate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_pricing_engine_1ad2be11cff80d9792f0cc8231711fcb06">calculate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/barrier/fdhestonbarrierengine.hpp" line="71" column="14" bodyfile="ql/pricingengines/barrier/fdhestonbarrierengine.cpp" bodystart="68" bodyend="207"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Finite-differences Heston barrier-option engine. </para>
    </briefdescription>
    <detaileddescription>
<para><xrefsect id="test_1_test000108"><xreftitle>Test</xreftitle><xrefdescription><para>the correctness of the returned value is tested by reproducing results available in web/literature and comparison with Black pricing. </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::FdHestonBarrierEngine</label>
        <link refid="class_quant_lib_1_1_fd_heston_barrier_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::GenericEngine&lt; BarrierOption::arguments, BarrierOption::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_engine"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::GenericModelEngine&lt; HestonModel, BarrierOption::arguments, BarrierOption::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_model_engine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="4">
        <label>QuantLib::PricingEngine</label>
        <link refid="class_quant_lib_1_1_pricing_engine"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8">
        <label>OneAssetOption::arguments</label>
      </node>
      <node id="7">
        <label>QuantLib::BarrierOption::arguments</label>
        <link refid="class_quant_lib_1_1_barrier_option_1_1arguments"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::FdHestonBarrierEngine</label>
        <link refid="class_quant_lib_1_1_fd_heston_barrier_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::GenericEngine&lt; BarrierOption::arguments, BarrierOption::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_engine"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>arguments_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::GenericModelEngine&lt; HestonModel, BarrierOption::arguments, BarrierOption::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_model_engine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>model_</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>QuantLib::Handle&lt; HestonModel &gt;</label>
        <link refid="class_quant_lib_1_1_handle"/>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="4">
        <label>QuantLib::PricingEngine</label>
        <link refid="class_quant_lib_1_1_pricing_engine"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/pricingengines/barrier/fdhestonbarrierengine.hpp" line="45" column="5" bodyfile="ql/pricingengines/barrier/fdhestonbarrierengine.hpp" bodystart="48" bodyend="79"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_generic_engine_1ad2371cdbafa1989afb0e4733b1212c0d" prot="protected" virt="non-virtual"><scope>QuantLib::FdHestonBarrierEngine</scope><name>arguments_</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_barrier_engine_1aa8509075b4906027f6902bd272d8e6a7" prot="public" virt="virtual"><scope>QuantLib::FdHestonBarrierEngine</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_barrier_engine_1ae276a44323d3b7b89140bc8b1203c563" prot="private" virt="non-virtual"><scope>QuantLib::FdHestonBarrierEngine</scope><name>dampingSteps_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::FdHestonBarrierEngine</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_barrier_engine_1a641c2f4aca36c2ada5bafbb1ed9343ef" prot="private" virt="non-virtual"><scope>QuantLib::FdHestonBarrierEngine</scope><name>dividends_</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_barrier_engine_1ab75a122010e94dd7ac50561b7141a8c1" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonBarrierEngine</scope><name>FdHestonBarrierEngine</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_barrier_engine_1ae6a61deed5ff617dc95fab0f29754be0" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonBarrierEngine</scope><name>FdHestonBarrierEngine</name></member>
      <member refid="class_quant_lib_1_1_generic_model_engine_1ab8c094dbe99234f8aa9dc0a92e0e5fd1" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonBarrierEngine</scope><name>GenericModelEngine</name></member>
      <member refid="class_quant_lib_1_1_generic_model_engine_1a8ab246499452beddca7225a2c63f8549" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonBarrierEngine</scope><name>GenericModelEngine</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1ad9c6e8dc65ca072d5e6e17640d74db3e" prot="public" virt="virtual"><scope>QuantLib::FdHestonBarrierEngine</scope><name>getArguments</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1aea8272ef6e5e0ea1cffadfed0454fa88" prot="public" virt="virtual"><scope>QuantLib::FdHestonBarrierEngine</scope><name>getResults</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonBarrierEngine</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_barrier_engine_1a8c6b1b0a7874bb6c6d392f48fad32c85" prot="private" virt="non-virtual"><scope>QuantLib::FdHestonBarrierEngine</scope><name>leverageFct_</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_barrier_engine_1a31083fe420fa34fe2cb96d09a64adfd4" prot="private" virt="non-virtual"><scope>QuantLib::FdHestonBarrierEngine</scope><name>mixingFactor_</name></member>
      <member refid="class_quant_lib_1_1_generic_model_engine_1a48733a3abfeb33214816709c9c5c6b62" prot="protected" virt="non-virtual"><scope>QuantLib::FdHestonBarrierEngine</scope><name>model_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonBarrierEngine</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonBarrierEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonBarrierEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonBarrierEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonBarrierEngine</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::FdHestonBarrierEngine</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::FdHestonBarrierEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::FdHestonBarrierEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::FdHestonBarrierEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonBarrierEngine</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonBarrierEngine</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1a81c5390ba1e713e57ca87d5f841d37f2" prot="public" virt="virtual"><scope>QuantLib::FdHestonBarrierEngine</scope><name>reset</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1a41281f2ea4990dbce90be1f9f2e231f6" prot="protected" virt="non-virtual"><scope>QuantLib::FdHestonBarrierEngine</scope><name>results_</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_barrier_engine_1a877c4755b110a9a46739e6153f229770" prot="private" virt="non-virtual"><scope>QuantLib::FdHestonBarrierEngine</scope><name>schemeDesc_</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_barrier_engine_1abb234f4d6bec053ee5e33c5306a5adc5" prot="private" virt="non-virtual"><scope>QuantLib::FdHestonBarrierEngine</scope><name>tGrid_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonBarrierEngine</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonBarrierEngine</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1aaf5ef54d9e1abf8b1b50b48804edf3dc" prot="public" virt="virtual"><scope>QuantLib::FdHestonBarrierEngine</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_barrier_engine_1af750f00bfb6d8596a3e72e6cdfe46812" prot="private" virt="non-virtual"><scope>QuantLib::FdHestonBarrierEngine</scope><name>vGrid_</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_barrier_engine_1ab974d3f0b0124050e49ee8ffb0d740d0" prot="private" virt="non-virtual"><scope>QuantLib::FdHestonBarrierEngine</scope><name>xGrid_</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::FdHestonBarrierEngine</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::FdHestonBarrierEngine</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_pricing_engine_1a66b279a54578cd7e60d402e5147eb526" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonBarrierEngine</scope><name>~PricingEngine</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

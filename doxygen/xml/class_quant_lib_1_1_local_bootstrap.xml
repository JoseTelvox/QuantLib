<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_local_bootstrap" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::LocalBootstrap</compoundname>
    <includes refid="localbootstrap_8hpp" local="no">localbootstrap.hpp</includes>
    <templateparamlist>
      <param>
        <type>class Curve</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_quant_lib_1_1_local_bootstrap_1a73fc59d75f63264c2a0e2c7d9503e378" prot="private" static="no">
        <type>Curve::traits_type</type>
        <definition>typedef Curve::traits_type QuantLib::LocalBootstrap&lt; Curve &gt;::Traits</definition>
        <argsstring></argsstring>
        <name>Traits</name>
        <qualifiedname>QuantLib::LocalBootstrap::Traits</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/localbootstrap.hpp" line="86" column="45" bodyfile="ql/termstructures/localbootstrap.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_quant_lib_1_1_local_bootstrap_1a44939d65db7404f305ec3a5b446adff5" prot="private" static="no">
        <type>Curve::interpolator_type</type>
        <definition>typedef Curve::interpolator_type QuantLib::LocalBootstrap&lt; Curve &gt;::Interpolator</definition>
        <argsstring></argsstring>
        <name>Interpolator</name>
        <qualifiedname>QuantLib::LocalBootstrap::Interpolator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/localbootstrap.hpp" line="87" column="51" bodyfile="ql/termstructures/localbootstrap.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_local_bootstrap_1aa5491340e351aa0191bd5286b08193d4" prot="private" static="no" mutable="yes">
        <type>bool</type>
        <definition>bool QuantLib::LocalBootstrap&lt; Curve &gt;::validCurve_</definition>
        <argsstring></argsstring>
        <name>validCurve_</name>
        <qualifiedname>QuantLib::LocalBootstrap::validCurve_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/localbootstrap.hpp" line="96" column="22" bodyfile="ql/termstructures/localbootstrap.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_local_bootstrap_1a001e3170367a8b27ba74303b12ba05ce" prot="private" static="no" mutable="no">
        <type>Curve *</type>
        <definition>Curve* QuantLib::LocalBootstrap&lt; Curve &gt;::ts_</definition>
        <argsstring></argsstring>
        <name>ts_</name>
        <qualifiedname>QuantLib::LocalBootstrap::ts_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/localbootstrap.hpp" line="97" column="15" bodyfile="ql/termstructures/localbootstrap.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_local_bootstrap_1a83249fded5e7f717b89210bbfa8c79ea" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::LocalBootstrap&lt; Curve &gt;::localisation_</definition>
        <argsstring></argsstring>
        <name>localisation_</name>
        <qualifiedname>QuantLib::LocalBootstrap::localisation_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/localbootstrap.hpp" line="98" column="14" bodyfile="ql/termstructures/localbootstrap.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_local_bootstrap_1aeb485c92cdeb803842a0b878c167342d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::LocalBootstrap&lt; Curve &gt;::forcePositive_</definition>
        <argsstring></argsstring>
        <name>forcePositive_</name>
        <qualifiedname>QuantLib::LocalBootstrap::forcePositive_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/localbootstrap.hpp" line="99" column="14" bodyfile="ql/termstructures/localbootstrap.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_local_bootstrap_1a7d173f0e30b375bd9ff89a4367c10770" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::LocalBootstrap&lt; Curve &gt;::accuracy_</definition>
        <argsstring></argsstring>
        <name>accuracy_</name>
        <qualifiedname>QuantLib::LocalBootstrap::accuracy_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/localbootstrap.hpp" line="100" column="14" bodyfile="ql/termstructures/localbootstrap.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_local_bootstrap_1a8f1f491f96d2892484167a7a74619dad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::LocalBootstrap&lt; Curve &gt;::LocalBootstrap</definition>
        <argsstring>(Size localisation=2, bool forcePositive=true, Real accuracy=Null&lt; Real &gt;())</argsstring>
        <name>LocalBootstrap</name>
        <qualifiedname>QuantLib::LocalBootstrap::LocalBootstrap</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>localisation</declname>
          <defval>2</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>forcePositive</declname>
          <defval>true</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>accuracy</declname>
          <defval><ref refid="class_quant_lib_1_1_null" kindref="compound">Null</ref>&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/localbootstrap.hpp" line="89" column="9" bodyfile="ql/termstructures/localbootstrap.hpp" bodystart="108" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_local_bootstrap_1ad95f38e4000497b4f51d84000b9f7aa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::LocalBootstrap&lt; Curve &gt;::setup</definition>
        <argsstring>(Curve *ts)</argsstring>
        <name>setup</name>
        <qualifiedname>QuantLib::LocalBootstrap::setup</qualifiedname>
        <param>
          <type>Curve *</type>
          <declname>ts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/localbootstrap.hpp" line="92" column="14" bodyfile="ql/termstructures/localbootstrap.hpp" bodystart="113" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_local_bootstrap_1a62e4ead1889ed340899c432b818a3203" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::LocalBootstrap&lt; Curve &gt;::calculate</definition>
        <argsstring>() const</argsstring>
        <name>calculate</name>
        <qualifiedname>QuantLib::LocalBootstrap::calculate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/localbootstrap.hpp" line="93" column="14" bodyfile="ql/termstructures/localbootstrap.hpp" bodystart="132" bodyend="248"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Localised-term-structure bootstrapper for most curve types. </para>
    </briefdescription>
    <detaileddescription>
<para>This algorithm enables a localised fitting for non-local interpolation methods.</para>
<para>As in the similar class (<ref refid="class_quant_lib_1_1_iterative_bootstrap" kindref="compound">IterativeBootstrap</ref>) the input term structure is solved on a number of market instruments which are passed as a vector of handles to <ref refid="class_quant_lib_1_1_bootstrap_helper" kindref="compound">BootstrapHelper</ref> instances. Their maturities mark the boundaries of the interpolated segments.</para>
<para>Unlike the <ref refid="class_quant_lib_1_1_iterative_bootstrap" kindref="compound">IterativeBootstrap</ref> class, the solution for each interpolated segment is derived using a local approximation. This restricts the risk profile s.t. the risk is localised. Therefore, we obtain a local IR risk profile whilst using a smoother interpolation method. Particularly good for the convex-monotone spline method. </para>
    </detaileddescription>
    <location file="ql/termstructures/localbootstrap.hpp" line="85" column="5" bodyfile="ql/termstructures/localbootstrap.hpp" bodystart="85" bodyend="101"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_local_bootstrap_1a7d173f0e30b375bd9ff89a4367c10770" prot="private" virt="non-virtual"><scope>QuantLib::LocalBootstrap</scope><name>accuracy_</name></member>
      <member refid="class_quant_lib_1_1_local_bootstrap_1a62e4ead1889ed340899c432b818a3203" prot="public" virt="non-virtual"><scope>QuantLib::LocalBootstrap</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_local_bootstrap_1aeb485c92cdeb803842a0b878c167342d" prot="private" virt="non-virtual"><scope>QuantLib::LocalBootstrap</scope><name>forcePositive_</name></member>
      <member refid="class_quant_lib_1_1_local_bootstrap_1a44939d65db7404f305ec3a5b446adff5" prot="private" virt="non-virtual"><scope>QuantLib::LocalBootstrap</scope><name>Interpolator</name></member>
      <member refid="class_quant_lib_1_1_local_bootstrap_1a8f1f491f96d2892484167a7a74619dad" prot="public" virt="non-virtual"><scope>QuantLib::LocalBootstrap</scope><name>LocalBootstrap</name></member>
      <member refid="class_quant_lib_1_1_local_bootstrap_1a83249fded5e7f717b89210bbfa8c79ea" prot="private" virt="non-virtual"><scope>QuantLib::LocalBootstrap</scope><name>localisation_</name></member>
      <member refid="class_quant_lib_1_1_local_bootstrap_1ad95f38e4000497b4f51d84000b9f7aa2" prot="public" virt="non-virtual"><scope>QuantLib::LocalBootstrap</scope><name>setup</name></member>
      <member refid="class_quant_lib_1_1_local_bootstrap_1a73fc59d75f63264c2a0e2c7d9503e378" prot="private" virt="non-virtual"><scope>QuantLib::LocalBootstrap</scope><name>Traits</name></member>
      <member refid="class_quant_lib_1_1_local_bootstrap_1a001e3170367a8b27ba74303b12ba05ce" prot="private" virt="non-virtual"><scope>QuantLib::LocalBootstrap</scope><name>ts_</name></member>
      <member refid="class_quant_lib_1_1_local_bootstrap_1aa5491340e351aa0191bd5286b08193d4" prot="private" virt="non-virtual"><scope>QuantLib::LocalBootstrap</scope><name>validCurve_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_ziggurat_gaussian_rng" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::ZigguratGaussianRng</compoundname>
    <includes refid="zigguratgaussianrng_8hpp" local="no">zigguratgaussianrng.hpp</includes>
    <templateparamlist>
      <param>
        <type>class RNG</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_quant_lib_1_1_ziggurat_gaussian_rng_1a5d026f63b38358fee872bf2df96c2e68" prot="public" static="no">
        <type><ref refid="struct_quant_lib_1_1_sample" kindref="compound">Sample</ref>&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>typedef Sample&lt;Real&gt; QuantLib::ZigguratGaussianRng&lt; RNG &gt;::sample_type</definition>
        <argsstring></argsstring>
        <name>sample_type</name>
        <qualifiedname>QuantLib::ZigguratGaussianRng::sample_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/zigguratgaussianrng.hpp" line="58" column="24" bodyfile="ql/math/randomnumbers/zigguratgaussianrng.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_quant_lib_1_1_ziggurat_gaussian_rng_1ab5887aebc9bb29bdba649277e7768116" prot="private" static="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>typedef Real QuantLib::ZigguratGaussianRng&lt; RNG &gt;::ZigguratTable[257]</definition>
        <argsstring>[257]</argsstring>
        <name>ZigguratTable</name>
        <qualifiedname>QuantLib::ZigguratGaussianRng::ZigguratTable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/zigguratgaussianrng.hpp" line="72" column="22" bodyfile="ql/math/randomnumbers/zigguratgaussianrng.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_ziggurat_gaussian_rng_1a3874a05472bd0ae1d52c260a5cbf4de3" prot="private" static="no" mutable="no">
        <type>RNG</type>
        <definition>RNG QuantLib::ZigguratGaussianRng&lt; RNG &gt;::uint64Generator_</definition>
        <argsstring></argsstring>
        <name>uint64Generator_</name>
        <qualifiedname>QuantLib::ZigguratGaussianRng::uint64Generator_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/zigguratgaussianrng.hpp" line="70" column="13" bodyfile="ql/math/randomnumbers/zigguratgaussianrng.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_ziggurat_gaussian_rng_1a80ddf189bc8bfeae4dc5cb47d1e78089" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ZigguratGaussianRng&lt; RNG &gt;::ZigguratGaussianRng</definition>
        <argsstring>(const RNG &amp;uint64Generator)</argsstring>
        <name>ZigguratGaussianRng</name>
        <qualifiedname>QuantLib::ZigguratGaussianRng::ZigguratGaussianRng</qualifiedname>
        <param>
          <type>const RNG &amp;</type>
          <declname>uint64Generator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/zigguratgaussianrng.hpp" line="60" column="18" bodyfile="ql/math/randomnumbers/zigguratgaussianrng.hpp" bodystart="60" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_ziggurat_gaussian_rng_1a648f563691c32339d53f854375e1a49c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_quant_lib_1_1_sample" kindref="compound">sample_type</ref></type>
        <definition>sample_type QuantLib::ZigguratGaussianRng&lt; RNG &gt;::next</definition>
        <argsstring>() const</argsstring>
        <name>next</name>
        <qualifiedname>QuantLib::ZigguratGaussianRng::next</qualifiedname>
        <briefdescription>
<para>returns a sample from a Gaussian distribution </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/zigguratgaussianrng.hpp" line="64" column="21" bodyfile="ql/math/randomnumbers/zigguratgaussianrng.hpp" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_ziggurat_gaussian_rng_1a66e5c1da7910039545bb367d493eae6e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ZigguratGaussianRng&lt; RNG &gt;::nextReal</definition>
        <argsstring>() const</argsstring>
        <name>nextReal</name>
        <qualifiedname>QuantLib::ZigguratGaussianRng::nextReal</qualifiedname>
        <briefdescription>
<para>return a random number from a Gaussian distribution </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/zigguratgaussianrng.hpp" line="67" column="14" bodyfile="ql/math/randomnumbers/zigguratgaussianrng.hpp" bodystart="85" bodyend="110"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_ziggurat_gaussian_rng_1acf3323c81e1a1147fc920cd5529b0a43" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ZigguratGaussianRng&lt; RNG &gt;::pdf</definition>
        <argsstring>(Real x) const</argsstring>
        <name>pdf</name>
        <qualifiedname>QuantLib::ZigguratGaussianRng::pdf</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/zigguratgaussianrng.hpp" line="74" column="14" bodyfile="ql/math/randomnumbers/zigguratgaussianrng.hpp" bodystart="125" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_ziggurat_gaussian_rng_1a4b99662774f5da5d8a2e6d93f9553e59" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ZigguratGaussianRng&lt; RNG &gt;::zeroCase</definition>
        <argsstring>(Real u) const</argsstring>
        <name>zeroCase</name>
        <qualifiedname>QuantLib::ZigguratGaussianRng::zeroCase</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>u</declname>
        </param>
        <briefdescription>
<para>compute a random number in the tail by hand </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/zigguratgaussianrng.hpp" line="77" column="14" bodyfile="ql/math/randomnumbers/zigguratgaussianrng.hpp" bodystart="113" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_ziggurat_gaussian_rng_1aad5fdf4a44b018de7dff23111ef98f49" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ZigguratGaussianRng&lt; RNG &gt;::normR</definition>
        <argsstring>() const</argsstring>
        <name>normR</name>
        <qualifiedname>QuantLib::ZigguratGaussianRng::normR</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/zigguratgaussianrng.hpp" line="79" column="14" bodyfile="ql/math/randomnumbers/zigguratgaussianrng.hpp" bodystart="130" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_ziggurat_gaussian_rng_1af7f9ceeb2472d496727ad6b749bf5de3" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ZigguratGaussianRng&lt; RNG &gt;::normX</definition>
        <argsstring>(int i) const</argsstring>
        <name>normX</name>
        <qualifiedname>QuantLib::ZigguratGaussianRng::normX</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/zigguratgaussianrng.hpp" line="80" column="14" bodyfile="ql/math/randomnumbers/zigguratgaussianrng.hpp" bodystart="135" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_ziggurat_gaussian_rng_1ab0adaba103d474eb90eadff7d8a033c7" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ZigguratGaussianRng&lt; RNG &gt;::normF</definition>
        <argsstring>(int i) const</argsstring>
        <name>normF</name>
        <qualifiedname>QuantLib::ZigguratGaussianRng::normF</qualifiedname>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/zigguratgaussianrng.hpp" line="81" column="14" bodyfile="ql/math/randomnumbers/zigguratgaussianrng.hpp" bodystart="206" bodyend="274"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Gaussian random number generator. </para>
    </briefdescription>
    <detaileddescription>
<para>It uses the <ref refid="struct_quant_lib_1_1_ziggurat" kindref="compound">Ziggurat</ref> transformation to return a normal distributed Gaussian deviate with average 0.0 and standard deviation of 1.0, from a random integer in the [0,0xffffffffffffffffULL]-interval like.</para>
<para>For a more detailed description see the article &quot;An Improved Ziggurat Method to Generate Normal Random Samples&quot; by Jurgen A. Doornik (<ulink url="https://www.doornik.com/research/ziggurat.pdf">https://www.doornik.com/research/ziggurat.pdf</ulink>).</para>
<para>The code here is inspired by the rust implementation in <ulink url="https://github.com/rust-random/rand/blob/d42daabf65a3ceaf58c2eefc7eb477c4d5a9b4ba/rand_distr/src/normal.rs">https://github.com/rust-random/rand/blob/d42daabf65a3ceaf58c2eefc7eb477c4d5a9b4ba/rand_distr/src/normal.rs</ulink> and <ulink url="https://github.com/rust-random/rand/blob/d42daabf65a3ceaf58c2eefc7eb477c4d5a9b4ba/rand_distr/src/utils.rs">https://github.com/rust-random/rand/blob/d42daabf65a3ceaf58c2eefc7eb477c4d5a9b4ba/rand_distr/src/utils.rs</ulink>.</para>
<para>Class RNG must implement the following interface: <programlisting><codeline><highlight class="normal"><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/><ref refid="class_quant_lib_1_1_ziggurat_gaussian_rng_1a66e5c1da7910039545bb367d493eae6e" kindref="member">nextReal</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal">std::uint64_t<sp/>nextInt64()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
</programlisting> Currently, <ref refid="class_quant_lib_1_1_xoshiro256_star_star_uniform_rng" kindref="compound">Xoshiro256StarStarUniformRng</ref> is the only RNG supporting this. </para>
    </detaileddescription>
    <location file="ql/math/randomnumbers/zigguratgaussianrng.hpp" line="56" column="5" bodyfile="ql/math/randomnumbers/zigguratgaussianrng.hpp" bodystart="56" bodyend="82"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_ziggurat_gaussian_rng_1a648f563691c32339d53f854375e1a49c" prot="public" virt="non-virtual"><scope>QuantLib::ZigguratGaussianRng</scope><name>next</name></member>
      <member refid="class_quant_lib_1_1_ziggurat_gaussian_rng_1a66e5c1da7910039545bb367d493eae6e" prot="public" virt="non-virtual"><scope>QuantLib::ZigguratGaussianRng</scope><name>nextReal</name></member>
      <member refid="class_quant_lib_1_1_ziggurat_gaussian_rng_1ab0adaba103d474eb90eadff7d8a033c7" prot="private" virt="non-virtual"><scope>QuantLib::ZigguratGaussianRng</scope><name>normF</name></member>
      <member refid="class_quant_lib_1_1_ziggurat_gaussian_rng_1aad5fdf4a44b018de7dff23111ef98f49" prot="private" virt="non-virtual"><scope>QuantLib::ZigguratGaussianRng</scope><name>normR</name></member>
      <member refid="class_quant_lib_1_1_ziggurat_gaussian_rng_1af7f9ceeb2472d496727ad6b749bf5de3" prot="private" virt="non-virtual"><scope>QuantLib::ZigguratGaussianRng</scope><name>normX</name></member>
      <member refid="class_quant_lib_1_1_ziggurat_gaussian_rng_1acf3323c81e1a1147fc920cd5529b0a43" prot="private" virt="non-virtual"><scope>QuantLib::ZigguratGaussianRng</scope><name>pdf</name></member>
      <member refid="class_quant_lib_1_1_ziggurat_gaussian_rng_1a5d026f63b38358fee872bf2df96c2e68" prot="public" virt="non-virtual"><scope>QuantLib::ZigguratGaussianRng</scope><name>sample_type</name></member>
      <member refid="class_quant_lib_1_1_ziggurat_gaussian_rng_1a3874a05472bd0ae1d52c260a5cbf4de3" prot="private" virt="non-virtual"><scope>QuantLib::ZigguratGaussianRng</scope><name>uint64Generator_</name></member>
      <member refid="class_quant_lib_1_1_ziggurat_gaussian_rng_1a4b99662774f5da5d8a2e6d93f9553e59" prot="private" virt="non-virtual"><scope>QuantLib::ZigguratGaussianRng</scope><name>zeroCase</name></member>
      <member refid="class_quant_lib_1_1_ziggurat_gaussian_rng_1a80ddf189bc8bfeae4dc5cb47d1e78089" prot="public" virt="non-virtual"><scope>QuantLib::ZigguratGaussianRng</scope><name>ZigguratGaussianRng</name></member>
      <member refid="class_quant_lib_1_1_ziggurat_gaussian_rng_1ab5887aebc9bb29bdba649277e7768116" prot="private" virt="non-virtual"><scope>QuantLib::ZigguratGaussianRng</scope><name>ZigguratTable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

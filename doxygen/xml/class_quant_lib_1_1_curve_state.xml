<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_curve_state" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::CurveState</compoundname>
    <derivedcompoundref refid="class_quant_lib_1_1_c_m_swap_curve_state" prot="public" virt="non-virtual">QuantLib::CMSwapCurveState</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_coterminal_swap_curve_state" prot="public" virt="non-virtual">QuantLib::CoterminalSwapCurveState</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_l_m_m_curve_state" prot="public" virt="non-virtual">QuantLib::LMMCurveState</derivedcompoundref>
    <includes refid="curvestate_8hpp" local="no">curvestate.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Inspectors</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_curve_state_1a4ddf36ec2fb76abb16976b4c1020d244" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::CurveState::numberOfRates_</definition>
        <argsstring></argsstring>
        <name>numberOfRates_</name>
        <qualifiedname>QuantLib::CurveState::numberOfRates_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestate.hpp" line="84" column="14" bodyfile="ql/models/marketmodels/curvestate.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_curve_state_1a421bb417aabb44c33475efff3ffd4051" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;</type>
        <definition>std::vector&lt;Time&gt; QuantLib::CurveState::rateTimes_</definition>
        <argsstring></argsstring>
        <name>rateTimes_</name>
        <qualifiedname>QuantLib::CurveState::rateTimes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestate.hpp" line="85" column="21" bodyfile="ql/models/marketmodels/curvestate.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_curve_state_1a62e6e71eed62341b413fb68e39aacf59" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;</type>
        <definition>std::vector&lt;Time&gt; QuantLib::CurveState::rateTaus_</definition>
        <argsstring></argsstring>
        <name>rateTaus_</name>
        <qualifiedname>QuantLib::CurveState::rateTaus_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestate.hpp" line="85" column="32" bodyfile="ql/models/marketmodels/curvestate.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_curve_state_1a2ae185fd2dc5b6c6c80504868217257f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::CurveState::numberOfRates</definition>
        <argsstring>() const</argsstring>
        <name>numberOfRates</name>
        <qualifiedname>QuantLib::CurveState::numberOfRates</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestate.hpp" line="58" column="14" bodyfile="ql/models/marketmodels/curvestate.hpp" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_curve_state_1a02cc60caaa84386bc1f336a29f7e673b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; Time &gt; &amp; QuantLib::CurveState::rateTimes</definition>
        <argsstring>() const</argsstring>
        <name>rateTimes</name>
        <qualifiedname>QuantLib::CurveState::rateTimes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestate.hpp" line="60" column="27" bodyfile="ql/models/marketmodels/curvestate.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_curve_state_1ac009296ccde12d7fd42a16ef74b9aa80" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; Time &gt; &amp; QuantLib::CurveState::rateTaus</definition>
        <argsstring>() const</argsstring>
        <name>rateTaus</name>
        <qualifiedname>QuantLib::CurveState::rateTaus</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestate.hpp" line="61" column="27" bodyfile="ql/models/marketmodels/curvestate.hpp" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_curve_state_1ac12914c56919c1509af8022f4b2307be" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::CurveState::discountRatio</definition>
        <argsstring>(Size i, Size j) const =0</argsstring>
        <name>discountRatio</name>
        <qualifiedname>QuantLib::CurveState::discountRatio</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_c_m_swap_curve_state_1a74a538857615fdf611719f60b46f0139">discountRatio</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_coterminal_swap_curve_state_1ab14a72b7969f9b3f65f634ee86e0086c">discountRatio</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_l_m_m_curve_state_1a72ab2723ded7f601dac33b3d71fcc2eb">discountRatio</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestate.hpp" line="63" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_curve_state_1ae69c0d48a5db2c25dddc408a540d3df6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>virtual Rate QuantLib::CurveState::forwardRate</definition>
        <argsstring>(Size i) const =0</argsstring>
        <name>forwardRate</name>
        <qualifiedname>QuantLib::CurveState::forwardRate</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_c_m_swap_curve_state_1a0833557b0f5ccddd069b4c4d0a880c80">forwardRate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_coterminal_swap_curve_state_1aea7897fb4a62b461422d0d56ed55830c">forwardRate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_l_m_m_curve_state_1a30543ed35fa47e3b9b2f75768bf9de3c">forwardRate</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestate.hpp" line="65" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_curve_state_1a768307a631c23726235018a235e000ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>virtual Rate QuantLib::CurveState::coterminalSwapAnnuity</definition>
        <argsstring>(Size numeraire, Size i) const =0</argsstring>
        <name>coterminalSwapAnnuity</name>
        <qualifiedname>QuantLib::CurveState::coterminalSwapAnnuity</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_c_m_swap_curve_state_1a90e93dd7978f89844e57eb0c9269e866">coterminalSwapAnnuity</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_coterminal_swap_curve_state_1a30e0e3591f1715c757721ff30fee4089">coterminalSwapAnnuity</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_l_m_m_curve_state_1a3afc073c2fa9b85ccd73f7449ce6298b">coterminalSwapAnnuity</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>numeraire</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestate.hpp" line="66" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_curve_state_1a1328035ffb613db8126195062ec242d7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>virtual Rate QuantLib::CurveState::coterminalSwapRate</definition>
        <argsstring>(Size i) const =0</argsstring>
        <name>coterminalSwapRate</name>
        <qualifiedname>QuantLib::CurveState::coterminalSwapRate</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_c_m_swap_curve_state_1abb3f8647b66cb807106dec6fef7c27dc">coterminalSwapRate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_coterminal_swap_curve_state_1ad971880251f4b503e0dd70344156a4e4">coterminalSwapRate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_l_m_m_curve_state_1adfcf13325e42b17739de84750771f371">coterminalSwapRate</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestate.hpp" line="68" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_curve_state_1a8332ae2889e53f622e53dae9d2a61f76" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>virtual Rate QuantLib::CurveState::cmSwapAnnuity</definition>
        <argsstring>(Size numeraire, Size i, Size spanningForwards) const =0</argsstring>
        <name>cmSwapAnnuity</name>
        <qualifiedname>QuantLib::CurveState::cmSwapAnnuity</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_c_m_swap_curve_state_1a2626e264e3334b79c2ba0035bb767654">cmSwapAnnuity</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_coterminal_swap_curve_state_1aee6eed3dcd2ed7dc0a01da192645259b">cmSwapAnnuity</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_l_m_m_curve_state_1a2b2a5c938b30dd3ccbf6461d70d9f397">cmSwapAnnuity</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>numeraire</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>spanningForwards</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestate.hpp" line="69" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_curve_state_1a0d6f6ae637ecc03a2ffd3a694b7caf74" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>virtual Rate QuantLib::CurveState::cmSwapRate</definition>
        <argsstring>(Size i, Size spanningForwards) const =0</argsstring>
        <name>cmSwapRate</name>
        <qualifiedname>QuantLib::CurveState::cmSwapRate</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_c_m_swap_curve_state_1a861d80b57677d9077ff4aeae2bff4959">cmSwapRate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_coterminal_swap_curve_state_1a23874c3af8c5e3666fe24cedf58485f5">cmSwapRate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_l_m_m_curve_state_1a74036a571d09b421c44b536f8aaf7677">cmSwapRate</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>spanningForwards</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestate.hpp" line="72" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_curve_state_1aa24db7535ae561a867e18e734e8c5d86" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
        <definition>virtual const std::vector&lt; Rate &gt; &amp; QuantLib::CurveState::forwardRates</definition>
        <argsstring>() const =0</argsstring>
        <name>forwardRates</name>
        <qualifiedname>QuantLib::CurveState::forwardRates</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_c_m_swap_curve_state_1ab4215e865dcd63c8abf632be29f40e27">forwardRates</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_coterminal_swap_curve_state_1a2b2b7331c05ddd5cfab5ef95a13dcc51">forwardRates</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_l_m_m_curve_state_1a068dd3f53665b6a6a5645302ab2b34ef">forwardRates</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestate.hpp" line="75" column="35"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_curve_state_1a2bd74a4f42e638155b79f19f8c3205a8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
        <definition>virtual const std::vector&lt; Rate &gt; &amp; QuantLib::CurveState::coterminalSwapRates</definition>
        <argsstring>() const =0</argsstring>
        <name>coterminalSwapRates</name>
        <qualifiedname>QuantLib::CurveState::coterminalSwapRates</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_c_m_swap_curve_state_1abf8f6f9af6cfb93214ca02a842f7afae">coterminalSwapRates</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_coterminal_swap_curve_state_1a36d120d75de6c23fde0330e5188c2d3c">coterminalSwapRates</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_l_m_m_curve_state_1a1a97fb0d59309ecd0af131f875dbbe55">coterminalSwapRates</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestate.hpp" line="76" column="35"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_curve_state_1ad376ed98be15e79234132bfbcb1cfbf4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
        <definition>virtual const std::vector&lt; Rate &gt; &amp; QuantLib::CurveState::cmSwapRates</definition>
        <argsstring>(Size spanningForwards) const =0</argsstring>
        <name>cmSwapRates</name>
        <qualifiedname>QuantLib::CurveState::cmSwapRates</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_c_m_swap_curve_state_1a50603e3341b3049f7f11528a7d06454c">cmSwapRates</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_coterminal_swap_curve_state_1ac8f7b8e23e6629a96dedd6a41fff9a89">cmSwapRates</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_l_m_m_curve_state_1a0fd1cdfd921cd13ed063e0328f84b107">cmSwapRates</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>spanningForwards</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestate.hpp" line="77" column="35"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_curve_state_1ae9425efe47dc562bbee24e9fb3aa2981" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::CurveState::swapRate</definition>
        <argsstring>(Size begin, Size end) const</argsstring>
        <name>swapRate</name>
        <qualifiedname>QuantLib::CurveState::swapRate</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>begin</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestate.hpp" line="78" column="14" bodyfile="ql/models/marketmodels/curvestate.cpp" bodystart="32" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_curve_state_1a855fad6a30207c20f7dadc3273917041" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::unique_ptr&lt; <ref refid="class_quant_lib_1_1_curve_state" kindref="compound">CurveState</ref> &gt;</type>
        <definition>virtual std::unique_ptr&lt; CurveState &gt; QuantLib::CurveState::clone</definition>
        <argsstring>() const =0</argsstring>
        <name>clone</name>
        <qualifiedname>QuantLib::CurveState::clone</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_c_m_swap_curve_state_1acba91e657e96f33562000ba2aa870fe6">clone</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_coterminal_swap_curve_state_1af03782b9f19effab0f2917553c4abd07">clone</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_l_m_m_curve_state_1aa9715fab10cde7a6855dd56aa0def441">clone</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestate.hpp" line="81" column="33"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_curve_state_1a8facbb8e16721df5da1527b82eeeb37a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::CurveState::CurveState</definition>
        <argsstring>(const std::vector&lt; Time &gt; &amp;rateTimes)</argsstring>
        <name>CurveState</name>
        <qualifiedname>QuantLib::CurveState::CurveState</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt; &amp;</type>
          <declname>rateTimes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestate.hpp" line="53" column="9" bodyfile="ql/models/marketmodels/curvestate.cpp" bodystart="26" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_curve_state_1a953605cffddea3e26699056086704feb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual QuantLib::CurveState::~CurveState</definition>
        <argsstring>()=default</argsstring>
        <name>~CurveState</name>
        <qualifiedname>QuantLib::CurveState::~CurveState</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestate.hpp" line="54" column="17"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Curve state for market-model simulations </para>
    </briefdescription>
    <detaileddescription>
<para>This class stores the state of the yield curve associated to the fixed calendar times within the simulation. This is the workhorse discounting object associated to the rate times of the simulation. It&apos;s important to pass the rates via an object like this to the product rather than directly to make it easier to switch to other engines such as a coterminal swap rate engine. Many products will not need expired rates and others will only require the first rate. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::CMSwapCurveState</label>
        <link refid="class_quant_lib_1_1_c_m_swap_curve_state"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::CoterminalSwapCurveState</label>
        <link refid="class_quant_lib_1_1_coterminal_swap_curve_state"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::CurveState</label>
        <link refid="class_quant_lib_1_1_curve_state"/>
      </node>
      <node id="4">
        <label>QuantLib::LMMCurveState</label>
        <link refid="class_quant_lib_1_1_l_m_m_curve_state"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="ql/models/marketmodels/curvestate.hpp" line="41" column="5" bodyfile="ql/models/marketmodels/curvestate.hpp" bodystart="41" bodyend="86"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_curve_state_1a855fad6a30207c20f7dadc3273917041" prot="public" virt="pure-virtual"><scope>QuantLib::CurveState</scope><name>clone</name></member>
      <member refid="class_quant_lib_1_1_curve_state_1a8332ae2889e53f622e53dae9d2a61f76" prot="public" virt="pure-virtual"><scope>QuantLib::CurveState</scope><name>cmSwapAnnuity</name></member>
      <member refid="class_quant_lib_1_1_curve_state_1a0d6f6ae637ecc03a2ffd3a694b7caf74" prot="public" virt="pure-virtual"><scope>QuantLib::CurveState</scope><name>cmSwapRate</name></member>
      <member refid="class_quant_lib_1_1_curve_state_1ad376ed98be15e79234132bfbcb1cfbf4" prot="public" virt="pure-virtual"><scope>QuantLib::CurveState</scope><name>cmSwapRates</name></member>
      <member refid="class_quant_lib_1_1_curve_state_1a768307a631c23726235018a235e000ad" prot="public" virt="pure-virtual"><scope>QuantLib::CurveState</scope><name>coterminalSwapAnnuity</name></member>
      <member refid="class_quant_lib_1_1_curve_state_1a1328035ffb613db8126195062ec242d7" prot="public" virt="pure-virtual"><scope>QuantLib::CurveState</scope><name>coterminalSwapRate</name></member>
      <member refid="class_quant_lib_1_1_curve_state_1a2bd74a4f42e638155b79f19f8c3205a8" prot="public" virt="pure-virtual"><scope>QuantLib::CurveState</scope><name>coterminalSwapRates</name></member>
      <member refid="class_quant_lib_1_1_curve_state_1a8facbb8e16721df5da1527b82eeeb37a" prot="public" virt="non-virtual"><scope>QuantLib::CurveState</scope><name>CurveState</name></member>
      <member refid="class_quant_lib_1_1_curve_state_1ac12914c56919c1509af8022f4b2307be" prot="public" virt="pure-virtual"><scope>QuantLib::CurveState</scope><name>discountRatio</name></member>
      <member refid="class_quant_lib_1_1_curve_state_1ae69c0d48a5db2c25dddc408a540d3df6" prot="public" virt="pure-virtual"><scope>QuantLib::CurveState</scope><name>forwardRate</name></member>
      <member refid="class_quant_lib_1_1_curve_state_1aa24db7535ae561a867e18e734e8c5d86" prot="public" virt="pure-virtual"><scope>QuantLib::CurveState</scope><name>forwardRates</name></member>
      <member refid="class_quant_lib_1_1_curve_state_1a2ae185fd2dc5b6c6c80504868217257f" prot="public" virt="non-virtual"><scope>QuantLib::CurveState</scope><name>numberOfRates</name></member>
      <member refid="class_quant_lib_1_1_curve_state_1a4ddf36ec2fb76abb16976b4c1020d244" prot="protected" virt="non-virtual"><scope>QuantLib::CurveState</scope><name>numberOfRates_</name></member>
      <member refid="class_quant_lib_1_1_curve_state_1ac009296ccde12d7fd42a16ef74b9aa80" prot="public" virt="non-virtual"><scope>QuantLib::CurveState</scope><name>rateTaus</name></member>
      <member refid="class_quant_lib_1_1_curve_state_1a62e6e71eed62341b413fb68e39aacf59" prot="protected" virt="non-virtual"><scope>QuantLib::CurveState</scope><name>rateTaus_</name></member>
      <member refid="class_quant_lib_1_1_curve_state_1a02cc60caaa84386bc1f336a29f7e673b" prot="public" virt="non-virtual"><scope>QuantLib::CurveState</scope><name>rateTimes</name></member>
      <member refid="class_quant_lib_1_1_curve_state_1a421bb417aabb44c33475efff3ffd4051" prot="protected" virt="non-virtual"><scope>QuantLib::CurveState</scope><name>rateTimes_</name></member>
      <member refid="class_quant_lib_1_1_curve_state_1ae9425efe47dc562bbee24e9fb3aa2981" prot="public" virt="non-virtual"><scope>QuantLib::CurveState</scope><name>swapRate</name></member>
      <member refid="class_quant_lib_1_1_curve_state_1a953605cffddea3e26699056086704feb" prot="public" virt="virtual"><scope>QuantLib::CurveState</scope><name>~CurveState</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

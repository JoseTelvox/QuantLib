<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_seed_generator" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::SeedGenerator</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_singleton" prot="public" virt="non-virtual">QuantLib::Singleton&lt; SeedGenerator &gt;</basecompoundref>
    <includes refid="seedgenerator_8hpp" local="no">seedgenerator.hpp</includes>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_quant_lib_1_1_seed_generator_1acdd97f92f1256d3e9eefb301d54bd413" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Singleton&lt; SeedGenerator &gt;</definition>
        <argsstring></argsstring>
        <name>Singleton&lt; SeedGenerator &gt;</name>
        <qualifiedname>QuantLib::SeedGenerator::Singleton&lt; SeedGenerator &gt;</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_singleton" kindref="compound">Singleton</ref>&lt; <ref refid="class_quant_lib_1_1_seed_generator" kindref="compound">SeedGenerator</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/seedgenerator.hpp" line="1" column="0" bodyfile="ql/math/randomnumbers/seedgenerator.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_seed_generator_1aa350a0632c7a98c0018c91a0715b8942" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_mersenne_twister_uniform_rng" kindref="compound">MersenneTwisterUniformRng</ref></type>
        <definition>MersenneTwisterUniformRng QuantLib::SeedGenerator::rng_</definition>
        <argsstring></argsstring>
        <name>rng_</name>
        <qualifiedname>QuantLib::SeedGenerator::rng_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/seedgenerator.hpp" line="45" column="35" bodyfile="ql/math/randomnumbers/seedgenerator.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_seed_generator_1a75f4e555cf5816e45d9b7b74f1bb286a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long QuantLib::SeedGenerator::get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <qualifiedname>QuantLib::SeedGenerator::get</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/seedgenerator.hpp" line="41" column="23" bodyfile="ql/math/randomnumbers/seedgenerator.cpp" bodystart="59" bodyend="61"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_seed_generator_1a7d1221762ed65573d9e825778a29dc7b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::SeedGenerator::SeedGenerator</definition>
        <argsstring>()</argsstring>
        <name>SeedGenerator</name>
        <qualifiedname>QuantLib::SeedGenerator::SeedGenerator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/seedgenerator.hpp" line="43" column="9" bodyfile="ql/math/randomnumbers/seedgenerator.cpp" bodystart="29" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_seed_generator_1a6acb70f21e95e85b58132dd6b89bb279" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::SeedGenerator::initialize</definition>
        <argsstring>()</argsstring>
        <name>initialize</name>
        <qualifiedname>QuantLib::SeedGenerator::initialize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/seedgenerator.hpp" line="44" column="14" bodyfile="ql/math/randomnumbers/seedgenerator.cpp" bodystart="33" bodyend="57"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Random seed generator. </para>
    </briefdescription>
    <detaileddescription>
<para>Random number generator used for automatic generation of initialization seeds.</para>
<para><xrefsect id="test_1_test000063"><xreftitle>Test</xreftitle><xrefdescription><para>correct initialization of the single instance is tested. </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::SeedGenerator</label>
        <link refid="class_quant_lib_1_1_seed_generator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Singleton&lt; SeedGenerator &gt;</label>
        <link refid="class_quant_lib_1_1_singleton"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::SeedGenerator</label>
        <link refid="class_quant_lib_1_1_seed_generator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Singleton&lt; SeedGenerator &gt;</label>
        <link refid="class_quant_lib_1_1_singleton"/>
      </node>
    </collaborationgraph>
    <location file="ql/math/randomnumbers/seedgenerator.hpp" line="38" column="5" bodyfile="ql/math/randomnumbers/seedgenerator.hpp" bodystart="38" bodyend="46"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_seed_generator_1a75f4e555cf5816e45d9b7b74f1bb286a" prot="public" virt="non-virtual"><scope>QuantLib::SeedGenerator</scope><name>get</name></member>
      <member refid="class_quant_lib_1_1_seed_generator_1a6acb70f21e95e85b58132dd6b89bb279" prot="private" virt="non-virtual"><scope>QuantLib::SeedGenerator</scope><name>initialize</name></member>
      <member refid="class_quant_lib_1_1_singleton_1ac412b7766b32f56372a3e966c5f3f386" prot="public" virt="non-virtual"><scope>QuantLib::SeedGenerator</scope><name>instance</name></member>
      <member refid="class_quant_lib_1_1_singleton_1a9d8c762b553192d479d7ff7edb20624d" prot="public" virt="non-virtual"><scope>QuantLib::SeedGenerator</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_singleton_1a87afbf4a53f4a13d2b64135656dc23ba" prot="public" virt="non-virtual"><scope>QuantLib::SeedGenerator</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_seed_generator_1aa350a0632c7a98c0018c91a0715b8942" prot="private" virt="non-virtual"><scope>QuantLib::SeedGenerator</scope><name>rng_</name></member>
      <member refid="class_quant_lib_1_1_seed_generator_1a7d1221762ed65573d9e825778a29dc7b" prot="private" virt="non-virtual"><scope>QuantLib::SeedGenerator</scope><name>SeedGenerator</name></member>
      <member refid="class_quant_lib_1_1_singleton_1aec6ad8083eb125b47049a296aa078da3" prot="public" virt="non-virtual"><scope>QuantLib::SeedGenerator</scope><name>Singleton</name></member>
      <member refid="class_quant_lib_1_1_singleton_1adba174550e55859f5a7cf6fc060c3b24" prot="public" virt="non-virtual"><scope>QuantLib::SeedGenerator</scope><name>Singleton</name></member>
      <member refid="class_quant_lib_1_1_singleton_1a711b37092c979a43c38a4ac40dadd4d3" prot="protected" virt="non-virtual"><scope>QuantLib::SeedGenerator</scope><name>Singleton</name></member>
      <member refid="class_quant_lib_1_1_seed_generator_1acdd97f92f1256d3e9eefb301d54bd413" prot="private" virt="non-virtual"><scope>QuantLib::SeedGenerator</scope><name>Singleton&lt; SeedGenerator &gt;</name></member>
      <member refid="class_quant_lib_1_1_singleton_1ac8b95ca8ebb2759f6dda65e3c787bc99" prot="public" virt="non-virtual"><scope>QuantLib::SeedGenerator</scope><name>~Singleton</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

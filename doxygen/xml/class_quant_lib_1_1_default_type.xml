<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_default_type" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::DefaultType</compoundname>
    <derivedcompoundref refid="class_quant_lib_1_1_failure_to_pay" prot="public" virt="non-virtual">QuantLib::FailureToPay</derivedcompoundref>
    <includes refid="defaulttype_8hpp" local="no">defaulttype.hpp</includes>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_default_type_1a6d78312cddba218a22e9c4dd552ce806" prot="protected" static="no" mutable="no">
        <type>AtomicDefault::Type</type>
        <definition>AtomicDefault::Type QuantLib::DefaultType::defTypes_</definition>
        <argsstring></argsstring>
        <name>defTypes_</name>
        <qualifiedname>QuantLib::DefaultType::defTypes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaulttype.hpp" line="144" column="29" bodyfile="ql/experimental/credit/defaulttype.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_default_type_1a5437730f0396f69902d98a32bab555c2" prot="protected" static="no" mutable="no">
        <type>Restructuring::Type</type>
        <definition>Restructuring::Type QuantLib::DefaultType::restrType_</definition>
        <argsstring></argsstring>
        <name>restrType_</name>
        <qualifiedname>QuantLib::DefaultType::restrType_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaulttype.hpp" line="145" column="29" bodyfile="ql/experimental/credit/defaulttype.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_default_type_1a34fd79cc1238e5ad8bed191cafc31aee" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::DefaultType::DefaultType</definition>
        <argsstring>(AtomicDefault::Type defType=AtomicDefault::Bankruptcy, Restructuring::Type restType=Restructuring::XR)</argsstring>
        <name>DefaultType</name>
        <qualifiedname>QuantLib::DefaultType::DefaultType</qualifiedname>
        <param>
          <type>AtomicDefault::Type</type>
          <declname>defType</declname>
          <defval>AtomicDefault::Bankruptcy</defval>
        </param>
        <param>
          <type>Restructuring::Type</type>
          <declname>restType</declname>
          <defval>Restructuring::XR</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaulttype.hpp" line="108" column="18" bodyfile="ql/experimental/credit/defaulttype.cpp" bodystart="26" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_default_type_1a33274b99541c1dbbb8787d2d5785dc16" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual QuantLib::DefaultType::~DefaultType</definition>
        <argsstring>()=default</argsstring>
        <name>~DefaultType</name>
        <qualifiedname>QuantLib::DefaultType::~DefaultType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaulttype.hpp" line="112" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_default_type_1ad490804d28781c003e762b1204d0d275" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>AtomicDefault::Type</type>
        <definition>AtomicDefault::Type QuantLib::DefaultType::defaultType</definition>
        <argsstring>() const</argsstring>
        <name>defaultType</name>
        <qualifiedname>QuantLib::DefaultType::defaultType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaulttype.hpp" line="114" column="29" bodyfile="ql/experimental/credit/defaulttype.hpp" bodystart="114" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_default_type_1adb705bf5fb1d25f339dad2de734d8443" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Restructuring::Type</type>
        <definition>Restructuring::Type QuantLib::DefaultType::restructuringType</definition>
        <argsstring>() const</argsstring>
        <name>restructuringType</name>
        <qualifiedname>QuantLib::DefaultType::restructuringType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaulttype.hpp" line="117" column="29" bodyfile="ql/experimental/credit/defaulttype.hpp" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_default_type_1a14c489f70c550aba2f3f77c4f4f39570" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::DefaultType::isRestructuring</definition>
        <argsstring>() const</argsstring>
        <name>isRestructuring</name>
        <qualifiedname>QuantLib::DefaultType::isRestructuring</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaulttype.hpp" line="118" column="14" bodyfile="ql/experimental/credit/defaulttype.hpp" bodystart="118" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_default_type_1af3edf0f015d582542f6df2049457c6bd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::DefaultType::containsDefaultType</definition>
        <argsstring>(AtomicDefault::Type defType) const</argsstring>
        <name>containsDefaultType</name>
        <qualifiedname>QuantLib::DefaultType::containsDefaultType</qualifiedname>
        <param>
          <type>AtomicDefault::Type</type>
          <declname>defType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if one or a set of event types is within this one and as such will be recognised as a trigger. Not the same as equality.</para>
<para>Notice that these methods do not include any event logical hierarchy. The match is in a strict sense. If event B is contained in (implied by) event A this would not send a match. This policies should be implemented at the CreditEvent class, which is polymorphic. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaulttype.hpp" line="134" column="14" bodyfile="ql/experimental/credit/defaulttype.hpp" bodystart="134" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_default_type_1aa6a4f46fd911682af12ce8184f182109" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::DefaultType::containsRestructuringType</definition>
        <argsstring>(Restructuring::Type resType) const</argsstring>
        <name>containsRestructuringType</name>
        <qualifiedname>QuantLib::DefaultType::containsRestructuringType</qualifiedname>
        <param>
          <type>Restructuring::Type</type>
          <declname>resType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaulttype.hpp" line="138" column="14" bodyfile="ql/experimental/credit/defaulttype.hpp" bodystart="138" bodyend="141"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Atomic credit-event type. </para>
    </briefdescription>
    <detaileddescription>
<para>This class encapsulates the ISDA default contractual types and their combinations. Non-atomicity works only at the atomic type level, obviating the specific event characteristics which it is accounted for only in derived classes. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::DefaultType</label>
        <link refid="class_quant_lib_1_1_default_type"/>
      </node>
      <node id="2">
        <label>QuantLib::FailureToPay</label>
        <link refid="class_quant_lib_1_1_failure_to_pay"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="ql/experimental/credit/defaulttype.hpp" line="106" column="5" bodyfile="ql/experimental/credit/defaulttype.hpp" bodystart="106" bodyend="146"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_default_type_1af3edf0f015d582542f6df2049457c6bd" prot="public" virt="non-virtual"><scope>QuantLib::DefaultType</scope><name>containsDefaultType</name></member>
      <member refid="class_quant_lib_1_1_default_type_1aa6a4f46fd911682af12ce8184f182109" prot="public" virt="non-virtual"><scope>QuantLib::DefaultType</scope><name>containsRestructuringType</name></member>
      <member refid="class_quant_lib_1_1_default_type_1a34fd79cc1238e5ad8bed191cafc31aee" prot="public" virt="non-virtual"><scope>QuantLib::DefaultType</scope><name>DefaultType</name></member>
      <member refid="class_quant_lib_1_1_default_type_1ad490804d28781c003e762b1204d0d275" prot="public" virt="non-virtual"><scope>QuantLib::DefaultType</scope><name>defaultType</name></member>
      <member refid="class_quant_lib_1_1_default_type_1a6d78312cddba218a22e9c4dd552ce806" prot="protected" virt="non-virtual"><scope>QuantLib::DefaultType</scope><name>defTypes_</name></member>
      <member refid="class_quant_lib_1_1_default_type_1a14c489f70c550aba2f3f77c4f4f39570" prot="public" virt="non-virtual"><scope>QuantLib::DefaultType</scope><name>isRestructuring</name></member>
      <member refid="class_quant_lib_1_1_default_type_1a5437730f0396f69902d98a32bab555c2" prot="protected" virt="non-virtual"><scope>QuantLib::DefaultType</scope><name>restrType_</name></member>
      <member refid="class_quant_lib_1_1_default_type_1adb705bf5fb1d25f339dad2de734d8443" prot="public" virt="non-virtual"><scope>QuantLib::DefaultType</scope><name>restructuringType</name></member>
      <member refid="class_quant_lib_1_1_default_type_1a33274b99541c1dbbb8787d2d5785dc16" prot="public" virt="virtual"><scope>QuantLib::DefaultType</scope><name>~DefaultType</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_make_m_c_european_basket_engine" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::MakeMCEuropeanBasketEngine</compoundname>
    <includes refid="mceuropeanbasketengine_8hpp" local="no">mceuropeanbasketengine.hpp</includes>
    <templateparamlist>
      <param>
        <type>class RNG</type>
        <defval><ref refid="namespace_quant_lib_1a68b9aaf5f0c17983506b1a1db8575ab0" kindref="member">PseudoRandom</ref></defval>
      </param>
      <param>
        <type>class S</type>
        <defval><ref refid="namespace_quant_lib_1ae2e788da35d2b866040a03b96227ee6e" kindref="member">Statistics</ref></defval>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_european_basket_engine_1ad339501d0f2d389fb5591dff9fa561f1" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_stochastic_process_array" kindref="compound">StochasticProcessArray</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;StochasticProcessArray&gt; QuantLib::MakeMCEuropeanBasketEngine&lt; RNG, S &gt;::process_</definition>
        <argsstring></argsstring>
        <name>process_</name>
        <qualifiedname>QuantLib::MakeMCEuropeanBasketEngine::process_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mceuropeanbasketengine.hpp" line="122" column="25" bodyfile="ql/pricingengines/basket/mceuropeanbasketengine.hpp" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_european_basket_engine_1a0e2393a7f437798288c1bc36d7defde5" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::MakeMCEuropeanBasketEngine&lt; RNG, S &gt;::brownianBridge_</definition>
        <argsstring></argsstring>
        <name>brownianBridge_</name>
        <qualifiedname>QuantLib::MakeMCEuropeanBasketEngine::brownianBridge_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mceuropeanbasketengine.hpp" line="123" column="14" bodyfile="ql/pricingengines/basket/mceuropeanbasketengine.hpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_european_basket_engine_1a9945a504b23b922ee1ef1c1142b1939e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::MakeMCEuropeanBasketEngine&lt; RNG, S &gt;::antithetic_</definition>
        <argsstring></argsstring>
        <name>antithetic_</name>
        <qualifiedname>QuantLib::MakeMCEuropeanBasketEngine::antithetic_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mceuropeanbasketengine.hpp" line="123" column="31" bodyfile="ql/pricingengines/basket/mceuropeanbasketengine.hpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_european_basket_engine_1aa7d858f9e053e3bc1841afb52d073dad" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCEuropeanBasketEngine&lt; RNG, S &gt;::steps_</definition>
        <argsstring></argsstring>
        <name>steps_</name>
        <qualifiedname>QuantLib::MakeMCEuropeanBasketEngine::steps_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mceuropeanbasketengine.hpp" line="124" column="14" bodyfile="ql/pricingengines/basket/mceuropeanbasketengine.hpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_european_basket_engine_1ad2e14fb229c227594d91d22a80407e79" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCEuropeanBasketEngine&lt; RNG, S &gt;::stepsPerYear_</definition>
        <argsstring></argsstring>
        <name>stepsPerYear_</name>
        <qualifiedname>QuantLib::MakeMCEuropeanBasketEngine::stepsPerYear_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mceuropeanbasketengine.hpp" line="124" column="21" bodyfile="ql/pricingengines/basket/mceuropeanbasketengine.hpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_european_basket_engine_1a92034c8f9bfc49f63c5bb2fd0bb56bb5" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCEuropeanBasketEngine&lt; RNG, S &gt;::samples_</definition>
        <argsstring></argsstring>
        <name>samples_</name>
        <qualifiedname>QuantLib::MakeMCEuropeanBasketEngine::samples_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mceuropeanbasketengine.hpp" line="124" column="35" bodyfile="ql/pricingengines/basket/mceuropeanbasketengine.hpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_european_basket_engine_1affd013db42abb200181774ab2d1167a1" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCEuropeanBasketEngine&lt; RNG, S &gt;::maxSamples_</definition>
        <argsstring></argsstring>
        <name>maxSamples_</name>
        <qualifiedname>QuantLib::MakeMCEuropeanBasketEngine::maxSamples_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mceuropeanbasketengine.hpp" line="124" column="44" bodyfile="ql/pricingengines/basket/mceuropeanbasketengine.hpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_european_basket_engine_1ac7a20cc9a01fd2423dfd5ae6a04e1280" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::MakeMCEuropeanBasketEngine&lt; RNG, S &gt;::tolerance_</definition>
        <argsstring></argsstring>
        <name>tolerance_</name>
        <qualifiedname>QuantLib::MakeMCEuropeanBasketEngine::tolerance_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mceuropeanbasketengine.hpp" line="125" column="14" bodyfile="ql/pricingengines/basket/mceuropeanbasketengine.hpp" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_european_basket_engine_1ae9d39a0e5f2b39f4ba8eb8f98225c78c" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
        <definition>BigNatural QuantLib::MakeMCEuropeanBasketEngine&lt; RNG, S &gt;::seed_</definition>
        <argsstring></argsstring>
        <name>seed_</name>
        <qualifiedname>QuantLib::MakeMCEuropeanBasketEngine::seed_</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mceuropeanbasketengine.hpp" line="126" column="20" bodyfile="ql/pricingengines/basket/mceuropeanbasketengine.hpp" bodystart="126" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_european_basket_engine_1a6a8e4060753e7d73ac8f2601b3dcd4a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::MakeMCEuropeanBasketEngine&lt; RNG, S &gt;::MakeMCEuropeanBasketEngine</definition>
        <argsstring>(ext::shared_ptr&lt; StochasticProcessArray &gt;)</argsstring>
        <name>MakeMCEuropeanBasketEngine</name>
        <qualifiedname>QuantLib::MakeMCEuropeanBasketEngine::MakeMCEuropeanBasketEngine</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_stochastic_process_array" kindref="compound">StochasticProcessArray</ref> &gt;</type>
          <defname>process</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mceuropeanbasketengine.hpp" line="109" column="9" bodyfile="ql/pricingengines/basket/mceuropeanbasketengine.hpp" bodystart="211" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_european_basket_engine_1a99b6958d65caba1fc0086f34eb281c09" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_european_basket_engine" kindref="compound">MakeMCEuropeanBasketEngine</ref> &amp;</type>
        <definition>MakeMCEuropeanBasketEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCEuropeanBasketEngine&lt; RNG, S &gt;::withSteps</definition>
        <argsstring>(Size steps)</argsstring>
        <name>withSteps</name>
        <qualifiedname>QuantLib::MakeMCEuropeanBasketEngine::withSteps</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mceuropeanbasketengine.hpp" line="111" column="36" bodyfile="ql/pricingengines/basket/mceuropeanbasketengine.hpp" bodystart="218" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_european_basket_engine_1acf83404cdd5fd3aabb61e993d89c1358" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_european_basket_engine" kindref="compound">MakeMCEuropeanBasketEngine</ref> &amp;</type>
        <definition>MakeMCEuropeanBasketEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCEuropeanBasketEngine&lt; RNG, S &gt;::withStepsPerYear</definition>
        <argsstring>(Size steps)</argsstring>
        <name>withStepsPerYear</name>
        <qualifiedname>QuantLib::MakeMCEuropeanBasketEngine::withStepsPerYear</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mceuropeanbasketengine.hpp" line="112" column="36" bodyfile="ql/pricingengines/basket/mceuropeanbasketengine.hpp" bodystart="225" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_european_basket_engine_1a5508682aeccca3fdf1a906d484eba840" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_european_basket_engine" kindref="compound">MakeMCEuropeanBasketEngine</ref> &amp;</type>
        <definition>MakeMCEuropeanBasketEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCEuropeanBasketEngine&lt; RNG, S &gt;::withBrownianBridge</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>withBrownianBridge</name>
        <qualifiedname>QuantLib::MakeMCEuropeanBasketEngine::withBrownianBridge</qualifiedname>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mceuropeanbasketengine.hpp" line="113" column="36" bodyfile="ql/pricingengines/basket/mceuropeanbasketengine.hpp" bodystart="232" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_european_basket_engine_1a0315c2ce04962e10fb04e33e8c369b23" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_european_basket_engine" kindref="compound">MakeMCEuropeanBasketEngine</ref> &amp;</type>
        <definition>MakeMCEuropeanBasketEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCEuropeanBasketEngine&lt; RNG, S &gt;::withAntitheticVariate</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>withAntitheticVariate</name>
        <qualifiedname>QuantLib::MakeMCEuropeanBasketEngine::withAntitheticVariate</qualifiedname>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mceuropeanbasketengine.hpp" line="114" column="36" bodyfile="ql/pricingengines/basket/mceuropeanbasketengine.hpp" bodystart="239" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_european_basket_engine_1a6b1c058e8d02921eea644673e502a258" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_european_basket_engine" kindref="compound">MakeMCEuropeanBasketEngine</ref> &amp;</type>
        <definition>MakeMCEuropeanBasketEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCEuropeanBasketEngine&lt; RNG, S &gt;::withSamples</definition>
        <argsstring>(Size samples)</argsstring>
        <name>withSamples</name>
        <qualifiedname>QuantLib::MakeMCEuropeanBasketEngine::withSamples</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mceuropeanbasketengine.hpp" line="115" column="36" bodyfile="ql/pricingengines/basket/mceuropeanbasketengine.hpp" bodystart="246" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_european_basket_engine_1a36efb9a3333e074efa3e2592125e9c01" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_european_basket_engine" kindref="compound">MakeMCEuropeanBasketEngine</ref> &amp;</type>
        <definition>MakeMCEuropeanBasketEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCEuropeanBasketEngine&lt; RNG, S &gt;::withAbsoluteTolerance</definition>
        <argsstring>(Real tolerance)</argsstring>
        <name>withAbsoluteTolerance</name>
        <qualifiedname>QuantLib::MakeMCEuropeanBasketEngine::withAbsoluteTolerance</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>tolerance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mceuropeanbasketengine.hpp" line="116" column="36" bodyfile="ql/pricingengines/basket/mceuropeanbasketengine.hpp" bodystart="255" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_european_basket_engine_1a56895dfe43f5bd76881558b60aa7988a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_european_basket_engine" kindref="compound">MakeMCEuropeanBasketEngine</ref> &amp;</type>
        <definition>MakeMCEuropeanBasketEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCEuropeanBasketEngine&lt; RNG, S &gt;::withMaxSamples</definition>
        <argsstring>(Size samples)</argsstring>
        <name>withMaxSamples</name>
        <qualifiedname>QuantLib::MakeMCEuropeanBasketEngine::withMaxSamples</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mceuropeanbasketengine.hpp" line="117" column="36" bodyfile="ql/pricingengines/basket/mceuropeanbasketengine.hpp" bodystart="267" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_european_basket_engine_1a01bdcb8f04436efe0c00ee1ef21aeeb3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_european_basket_engine" kindref="compound">MakeMCEuropeanBasketEngine</ref> &amp;</type>
        <definition>MakeMCEuropeanBasketEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCEuropeanBasketEngine&lt; RNG, S &gt;::withSeed</definition>
        <argsstring>(BigNatural seed)</argsstring>
        <name>withSeed</name>
        <qualifiedname>QuantLib::MakeMCEuropeanBasketEngine::withSeed</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mceuropeanbasketengine.hpp" line="118" column="36" bodyfile="ql/pricingengines/basket/mceuropeanbasketengine.hpp" bodystart="274" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_european_basket_engine_1a66439ef051781870f743453c6b9007e4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::MakeMCEuropeanBasketEngine&lt; RNG, S &gt;::operator ext::shared_ptr&lt; PricingEngine &gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator ext::shared_ptr&lt; PricingEngine &gt;</name>
        <qualifiedname>QuantLib::MakeMCEuropeanBasketEngine::shared_ptr&lt; PricingEngine &gt;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mceuropeanbasketengine.hpp" line="120" column="9" bodyfile="ql/pricingengines/basket/mceuropeanbasketengine.hpp" bodystart="282" bodyend="296"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Monte Carlo basket-option engine factory. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/pricingengines/basket/mceuropeanbasketengine.hpp" line="107" column="5" bodyfile="ql/pricingengines/basket/mceuropeanbasketengine.hpp" bodystart="107" bodyend="127"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_make_m_c_european_basket_engine_1a9945a504b23b922ee1ef1c1142b1939e" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanBasketEngine</scope><name>antithetic_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_european_basket_engine_1a0e2393a7f437798288c1bc36d7defde5" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanBasketEngine</scope><name>brownianBridge_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_european_basket_engine_1a6a8e4060753e7d73ac8f2601b3dcd4a1" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanBasketEngine</scope><name>MakeMCEuropeanBasketEngine</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_european_basket_engine_1affd013db42abb200181774ab2d1167a1" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanBasketEngine</scope><name>maxSamples_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_european_basket_engine_1a66439ef051781870f743453c6b9007e4" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanBasketEngine</scope><name>operator ext::shared_ptr&lt; PricingEngine &gt;</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_european_basket_engine_1ad339501d0f2d389fb5591dff9fa561f1" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanBasketEngine</scope><name>process_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_european_basket_engine_1a92034c8f9bfc49f63c5bb2fd0bb56bb5" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanBasketEngine</scope><name>samples_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_european_basket_engine_1ae9d39a0e5f2b39f4ba8eb8f98225c78c" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanBasketEngine</scope><name>seed_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_european_basket_engine_1aa7d858f9e053e3bc1841afb52d073dad" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanBasketEngine</scope><name>steps_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_european_basket_engine_1ad2e14fb229c227594d91d22a80407e79" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanBasketEngine</scope><name>stepsPerYear_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_european_basket_engine_1ac7a20cc9a01fd2423dfd5ae6a04e1280" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanBasketEngine</scope><name>tolerance_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_european_basket_engine_1a36efb9a3333e074efa3e2592125e9c01" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanBasketEngine</scope><name>withAbsoluteTolerance</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_european_basket_engine_1a0315c2ce04962e10fb04e33e8c369b23" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanBasketEngine</scope><name>withAntitheticVariate</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_european_basket_engine_1a5508682aeccca3fdf1a906d484eba840" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanBasketEngine</scope><name>withBrownianBridge</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_european_basket_engine_1a56895dfe43f5bd76881558b60aa7988a" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanBasketEngine</scope><name>withMaxSamples</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_european_basket_engine_1a6b1c058e8d02921eea644673e502a258" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanBasketEngine</scope><name>withSamples</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_european_basket_engine_1a01bdcb8f04436efe0c00ee1ef21aeeb3" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanBasketEngine</scope><name>withSeed</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_european_basket_engine_1a99b6958d65caba1fc0086f34eb281c09" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanBasketEngine</scope><name>withSteps</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_european_basket_engine_1acf83404cdd5fd3aabb61e993d89c1358" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanBasketEngine</scope><name>withStepsPerYear</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

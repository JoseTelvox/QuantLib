<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_pool" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::Pool</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_pool_1a764b28b2da0f829a91fe0009f646057c" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, <ref refid="class_quant_lib_1_1_issuer" kindref="compound">Issuer</ref> &gt;</type>
        <definition>std::map&lt;std::string,Issuer&gt; QuantLib::Pool::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <qualifiedname>QuantLib::Pool::data_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/pool.hpp" line="50" column="18" bodyfile="ql/experimental/credit/pool.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_pool_1a09349f2b06294eaed693e0cc053bbee4" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::map&lt;std::string,Real&gt; QuantLib::Pool::time_</definition>
        <argsstring></argsstring>
        <name>time_</name>
        <qualifiedname>QuantLib::Pool::time_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/pool.hpp" line="51" column="18" bodyfile="ql/experimental/credit/pool.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_pool_1a1fca63d39aee0c8016b6e19ff5a8661e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt;std::string&gt; QuantLib::Pool::names_</definition>
        <argsstring></argsstring>
        <name>names_</name>
        <qualifiedname>QuantLib::Pool::names_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/pool.hpp" line="52" column="21" bodyfile="ql/experimental/credit/pool.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_pool_1a5838f56128068a927a746c70cdbdfa37" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, <ref refid="class_quant_lib_1_1_default_prob_key" kindref="compound">DefaultProbKey</ref> &gt;</type>
        <definition>std::map&lt;std::string, DefaultProbKey&gt; QuantLib::Pool::defaultKeys_</definition>
        <argsstring></argsstring>
        <name>defaultKeys_</name>
        <qualifiedname>QuantLib::Pool::defaultKeys_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>default events seniority and currency this name enters the basket with. Determines to which event/probability this pool referes to. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/pool.hpp" line="55" column="18" bodyfile="ql/experimental/credit/pool.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_pool_1ab89c6d09ec596c20d01a5d2cd3dca77b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Pool::Pool</definition>
        <argsstring>()</argsstring>
        <name>Pool</name>
        <qualifiedname>QuantLib::Pool::Pool</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/pool.hpp" line="34" column="9" bodyfile="ql/experimental/credit/pool.cpp" bodystart="26" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_pool_1ab0add16a72065f3a7b10584b099fd58e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::Pool::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>QuantLib::Pool::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/pool.hpp" line="35" column="14" bodyfile="ql/experimental/credit/pool.cpp" bodystart="30" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_pool_1a0758adc2815eaa1cb95d8a8ca3a92506" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::Pool::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>QuantLib::Pool::clear</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/pool.hpp" line="36" column="14" bodyfile="ql/experimental/credit/pool.cpp" bodystart="34" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_pool_1acc897a19eed99e6c77d54a76d149ed6d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::Pool::has</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>has</name>
        <qualifiedname>QuantLib::Pool::has</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/pool.hpp" line="37" column="14" bodyfile="ql/experimental/credit/pool.cpp" bodystart="40" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_pool_1af711139734888bb9a681741bbf30d766" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::Pool::add</definition>
        <argsstring>(const std::string &amp;name, const Issuer &amp;issuer, const DefaultProbKey &amp;contractTrigger=NorthAmericaCorpDefaultKey(Currency(), SeniorSec, Period(), 1.))</argsstring>
        <name>add</name>
        <qualifiedname>QuantLib::Pool::add</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_issuer" kindref="compound">Issuer</ref> &amp;</type>
          <declname>issuer</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_default_prob_key" kindref="compound">DefaultProbKey</ref> &amp;</type>
          <declname>contractTrigger</declname>
          <defval><ref refid="class_quant_lib_1_1_north_america_corp_default_key" kindref="compound">NorthAmericaCorpDefaultKey</ref>(<ref refid="class_quant_lib_1_1_currency" kindref="compound">Currency</ref>(), SeniorSec, <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref>(), 1.)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/pool.hpp" line="38" column="14" bodyfile="ql/experimental/credit/pool.cpp" bodystart="44" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_pool_1adf0ab0b728cb10f9a57379558626d984" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_issuer" kindref="compound">Issuer</ref> &amp;</type>
        <definition>const Issuer &amp; QuantLib::Pool::get</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>get</name>
        <qualifiedname>QuantLib::Pool::get</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/pool.hpp" line="41" column="22" bodyfile="ql/experimental/credit/pool.cpp" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_pool_1acb152d8cb8ec50bfb2d705455c1226db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_default_prob_key" kindref="compound">DefaultProbKey</ref> &amp;</type>
        <definition>const DefaultProbKey &amp; QuantLib::Pool::defaultKey</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>defaultKey</name>
        <qualifiedname>QuantLib::Pool::defaultKey</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/pool.hpp" line="42" column="30" bodyfile="ql/experimental/credit/pool.cpp" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_pool_1a9463d741883123956cc5f593b541a00d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::Pool::setTime</definition>
        <argsstring>(const std::string &amp;name, Real time)</argsstring>
        <name>setTime</name>
        <qualifiedname>QuantLib::Pool::setTime</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/pool.hpp" line="43" column="14" bodyfile="ql/experimental/credit/pool.cpp" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_pool_1aefa81d1a07357f3c791142fe19dc1508" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Pool::getTime</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>getTime</name>
        <qualifiedname>QuantLib::Pool::getTime</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/pool.hpp" line="44" column="14" bodyfile="ql/experimental/credit/pool.cpp" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_pool_1a28e3f57c574434c639f16d5a9e02a0f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; std::string &gt; &amp;</type>
        <definition>const std::vector&lt; std::string &gt; &amp; QuantLib::Pool::names</definition>
        <argsstring>() const</argsstring>
        <name>names</name>
        <qualifiedname>QuantLib::Pool::names</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/pool.hpp" line="45" column="27" bodyfile="ql/experimental/credit/pool.cpp" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_pool_1a99d78559b139c47fb620945978855257" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_quant_lib_1_1_default_prob_key" kindref="compound">DefaultProbKey</ref> &gt;</type>
        <definition>std::vector&lt; DefaultProbKey &gt; QuantLib::Pool::defaultKeys</definition>
        <argsstring>() const</argsstring>
        <name>defaultKeys</name>
        <qualifiedname>QuantLib::Pool::defaultKeys</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/pool.hpp" line="46" column="21" bodyfile="ql/experimental/credit/pool.cpp" bodystart="77" bodyend="83"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/experimental/credit/pool.hpp" line="32" column="5" bodyfile="ql/experimental/credit/pool.hpp" bodystart="32" bodyend="56"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_pool_1af711139734888bb9a681741bbf30d766" prot="public" virt="non-virtual"><scope>QuantLib::Pool</scope><name>add</name></member>
      <member refid="class_quant_lib_1_1_pool_1a0758adc2815eaa1cb95d8a8ca3a92506" prot="public" virt="non-virtual"><scope>QuantLib::Pool</scope><name>clear</name></member>
      <member refid="class_quant_lib_1_1_pool_1a764b28b2da0f829a91fe0009f646057c" prot="private" virt="non-virtual"><scope>QuantLib::Pool</scope><name>data_</name></member>
      <member refid="class_quant_lib_1_1_pool_1acb152d8cb8ec50bfb2d705455c1226db" prot="public" virt="non-virtual"><scope>QuantLib::Pool</scope><name>defaultKey</name></member>
      <member refid="class_quant_lib_1_1_pool_1a99d78559b139c47fb620945978855257" prot="public" virt="non-virtual"><scope>QuantLib::Pool</scope><name>defaultKeys</name></member>
      <member refid="class_quant_lib_1_1_pool_1a5838f56128068a927a746c70cdbdfa37" prot="private" virt="non-virtual"><scope>QuantLib::Pool</scope><name>defaultKeys_</name></member>
      <member refid="class_quant_lib_1_1_pool_1adf0ab0b728cb10f9a57379558626d984" prot="public" virt="non-virtual"><scope>QuantLib::Pool</scope><name>get</name></member>
      <member refid="class_quant_lib_1_1_pool_1aefa81d1a07357f3c791142fe19dc1508" prot="public" virt="non-virtual"><scope>QuantLib::Pool</scope><name>getTime</name></member>
      <member refid="class_quant_lib_1_1_pool_1acc897a19eed99e6c77d54a76d149ed6d" prot="public" virt="non-virtual"><scope>QuantLib::Pool</scope><name>has</name></member>
      <member refid="class_quant_lib_1_1_pool_1a28e3f57c574434c639f16d5a9e02a0f6" prot="public" virt="non-virtual"><scope>QuantLib::Pool</scope><name>names</name></member>
      <member refid="class_quant_lib_1_1_pool_1a1fca63d39aee0c8016b6e19ff5a8661e" prot="private" virt="non-virtual"><scope>QuantLib::Pool</scope><name>names_</name></member>
      <member refid="class_quant_lib_1_1_pool_1ab89c6d09ec596c20d01a5d2cd3dca77b" prot="public" virt="non-virtual"><scope>QuantLib::Pool</scope><name>Pool</name></member>
      <member refid="class_quant_lib_1_1_pool_1a9463d741883123956cc5f593b541a00d" prot="public" virt="non-virtual"><scope>QuantLib::Pool</scope><name>setTime</name></member>
      <member refid="class_quant_lib_1_1_pool_1ab0add16a72065f3a7b10584b099fd58e" prot="public" virt="non-virtual"><scope>QuantLib::Pool</scope><name>size</name></member>
      <member refid="class_quant_lib_1_1_pool_1a09349f2b06294eaed693e0cc053bbee4" prot="private" virt="non-virtual"><scope>QuantLib::Pool</scope><name>time_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

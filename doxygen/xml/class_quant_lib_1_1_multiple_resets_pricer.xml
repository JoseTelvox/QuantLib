<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_multiple_resets_pricer" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::MultipleResetsPricer</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_floating_rate_coupon_pricer" prot="public" virt="non-virtual">QuantLib::FloatingRateCouponPricer</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_averaging_multiple_resets_pricer" prot="public" virt="non-virtual">QuantLib::AveragingMultipleResetsPricer</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_compounding_multiple_resets_pricer" prot="public" virt="non-virtual">QuantLib::CompoundingMultipleResetsPricer</derivedcompoundref>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_multiple_resets_pricer_1affff43a83640d6c54fc10acb21af07ed" prot="protected" static="no" mutable="no">
        <type>const <ref refid="class_quant_lib_1_1_multiple_resets_coupon" kindref="compound">MultipleResetsCoupon</ref> *</type>
        <definition>const MultipleResetsCoupon* QuantLib::MultipleResetsPricer::coupon_</definition>
        <argsstring></argsstring>
        <name>coupon_</name>
        <qualifiedname>QuantLib::MultipleResetsPricer::coupon_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/multipleresetscoupon.hpp" line="131" column="36" bodyfile="ql/cashflows/multipleresetscoupon.hpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_multiple_resets_pricer_1a057ef6939f4247e5fc30d6e5b092d1a7" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::MultipleResetsPricer::subPeriodFixings_</definition>
        <argsstring></argsstring>
        <name>subPeriodFixings_</name>
        <qualifiedname>QuantLib::MultipleResetsPricer::subPeriodFixings_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/multipleresetscoupon.hpp" line="132" column="21" bodyfile="ql/cashflows/multipleresetscoupon.hpp" bodystart="132" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_multiple_resets_pricer_1ab4009570b84bcb04fd8aeca669e38794" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Real QuantLib::MultipleResetsPricer::swapletPrice</definition>
        <argsstring>() const override</argsstring>
        <name>swapletPrice</name>
        <qualifiedname>QuantLib::MultipleResetsPricer::swapletPrice</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_floating_rate_coupon_pricer_1a30dad486d36c708d9cfe35e72a69d9fa">swapletPrice</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/multipleresetscoupon.hpp" line="123" column="14" bodyfile="ql/cashflows/multipleresetscoupon.cpp" bodystart="147" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_multiple_resets_pricer_1a7aa68d167c4fec106b6cd7cd715b0073" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::MultipleResetsPricer::capletPrice</definition>
        <argsstring>(Rate effectiveCap) const override</argsstring>
        <name>capletPrice</name>
        <qualifiedname>QuantLib::MultipleResetsPricer::capletPrice</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_floating_rate_coupon_pricer_1ad7c3af9e13ded8736c1bf0e5df0fdfe7">capletPrice</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>effectiveCap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/multipleresetscoupon.hpp" line="124" column="14" bodyfile="ql/cashflows/multipleresetscoupon.cpp" bodystart="151" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_multiple_resets_pricer_1a4ace509b884b997a0a87bad57ab549e1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::MultipleResetsPricer::capletRate</definition>
        <argsstring>(Rate effectiveCap) const override</argsstring>
        <name>capletRate</name>
        <qualifiedname>QuantLib::MultipleResetsPricer::capletRate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_floating_rate_coupon_pricer_1aac66313cfaae17dc11ced8ac79aae0b1">capletRate</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>effectiveCap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/multipleresetscoupon.hpp" line="125" column="14" bodyfile="ql/cashflows/multipleresetscoupon.cpp" bodystart="155" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_multiple_resets_pricer_1a99712f5a036ddd59e33610e7ab795ce6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::MultipleResetsPricer::floorletPrice</definition>
        <argsstring>(Rate effectiveFloor) const override</argsstring>
        <name>floorletPrice</name>
        <qualifiedname>QuantLib::MultipleResetsPricer::floorletPrice</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_floating_rate_coupon_pricer_1a1698d77f971242c8907909e84613a00a">floorletPrice</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>effectiveFloor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/multipleresetscoupon.hpp" line="126" column="14" bodyfile="ql/cashflows/multipleresetscoupon.cpp" bodystart="159" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_multiple_resets_pricer_1a3dafa7000744c8ccdcb031bd7c6c0c70" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::MultipleResetsPricer::floorletRate</definition>
        <argsstring>(Rate effectiveFloor) const override</argsstring>
        <name>floorletRate</name>
        <qualifiedname>QuantLib::MultipleResetsPricer::floorletRate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_floating_rate_coupon_pricer_1ac72336ef70f62c68f1af26c5868d461c">floorletRate</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>effectiveFloor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/multipleresetscoupon.hpp" line="127" column="14" bodyfile="ql/cashflows/multipleresetscoupon.cpp" bodystart="163" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_multiple_resets_pricer_1a1b3cc1cdbeb86cb8923eb6d47dac648c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::MultipleResetsPricer::initialize</definition>
        <argsstring>(const FloatingRateCoupon &amp;coupon) override</argsstring>
        <name>initialize</name>
        <qualifiedname>QuantLib::MultipleResetsPricer::initialize</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_floating_rate_coupon_pricer_1a6fa43469232d5549a1a68bffcf851035">initialize</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_floating_rate_coupon" kindref="compound">FloatingRateCoupon</ref> &amp;</type>
          <declname>coupon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/multipleresetscoupon.hpp" line="128" column="14" bodyfile="ql/cashflows/multipleresetscoupon.cpp" bodystart="126" bodyend="145"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5">
        <label>QuantLib::AveragingMultipleResetsPricer</label>
        <link refid="class_quant_lib_1_1_averaging_multiple_resets_pricer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::CompoundingMultipleResetsPricer</label>
        <link refid="class_quant_lib_1_1_compounding_multiple_resets_pricer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::FloatingRateCouponPricer</label>
        <link refid="class_quant_lib_1_1_floating_rate_coupon_pricer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::MultipleResetsPricer</label>
        <link refid="class_quant_lib_1_1_multiple_resets_pricer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="3">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8">
        <label>QuantLib::CashFlow</label>
        <link refid="class_quant_lib_1_1_cash_flow"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::Coupon</label>
        <link refid="class_quant_lib_1_1_coupon"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>accrualEndDate_</edgelabel>
          <edgelabel>accrualStartDate_</edgelabel>
          <edgelabel>exCouponDate_</edgelabel>
          <edgelabel>paymentDate_</edgelabel>
          <edgelabel>refPeriodEnd_</edgelabel>
          <edgelabel>refPeriodStart_</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="12">
        <label>QuantLib::DayCounter</label>
        <link refid="class_quant_lib_1_1_day_counter"/>
      </node>
      <node id="9">
        <label>QuantLib::Event</label>
        <link refid="class_quant_lib_1_1_event"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::FloatingRateCoupon</label>
        <link refid="class_quant_lib_1_1_floating_rate_coupon"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>dayCounter_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::FloatingRateCouponPricer</label>
        <link refid="class_quant_lib_1_1_floating_rate_coupon_pricer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::MultipleResetsCoupon</label>
        <link refid="class_quant_lib_1_1_multiple_resets_coupon"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::MultipleResetsPricer</label>
        <link refid="class_quant_lib_1_1_multiple_resets_pricer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>coupon_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="3">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </collaborationgraph>
    <location file="ql/cashflows/multipleresetscoupon.hpp" line="121" column="5" bodyfile="ql/cashflows/multipleresetscoupon.hpp" bodystart="121" bodyend="133"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_multiple_resets_pricer_1a7aa68d167c4fec106b6cd7cd715b0073" prot="public" virt="virtual"><scope>QuantLib::MultipleResetsPricer</scope><name>capletPrice</name></member>
      <member refid="class_quant_lib_1_1_multiple_resets_pricer_1a4ace509b884b997a0a87bad57ab549e1" prot="public" virt="virtual"><scope>QuantLib::MultipleResetsPricer</scope><name>capletRate</name></member>
      <member refid="class_quant_lib_1_1_multiple_resets_pricer_1affff43a83640d6c54fc10acb21af07ed" prot="protected" virt="non-virtual"><scope>QuantLib::MultipleResetsPricer</scope><name>coupon_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::MultipleResetsPricer</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_multiple_resets_pricer_1a99712f5a036ddd59e33610e7ab795ce6" prot="public" virt="virtual"><scope>QuantLib::MultipleResetsPricer</scope><name>floorletPrice</name></member>
      <member refid="class_quant_lib_1_1_multiple_resets_pricer_1a3dafa7000744c8ccdcb031bd7c6c0c70" prot="public" virt="virtual"><scope>QuantLib::MultipleResetsPricer</scope><name>floorletRate</name></member>
      <member refid="class_quant_lib_1_1_multiple_resets_pricer_1a1b3cc1cdbeb86cb8923eb6d47dac648c" prot="public" virt="virtual"><scope>QuantLib::MultipleResetsPricer</scope><name>initialize</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::MultipleResetsPricer</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::MultipleResetsPricer</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::MultipleResetsPricer</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::FloatingRateCouponPricer::"><scope>QuantLib::MultipleResetsPricer</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::FloatingRateCouponPricer::"><scope>QuantLib::MultipleResetsPricer</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::MultipleResetsPricer</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::FloatingRateCouponPricer::"><scope>QuantLib::MultipleResetsPricer</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::MultipleResetsPricer</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::FloatingRateCouponPricer::QuantLib::Observable::"><scope>QuantLib::MultipleResetsPricer</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::MultipleResetsPricer</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::MultipleResetsPricer</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::MultipleResetsPricer</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_multiple_resets_pricer_1a057ef6939f4247e5fc30d6e5b092d1a7" prot="protected" virt="non-virtual"><scope>QuantLib::MultipleResetsPricer</scope><name>subPeriodFixings_</name></member>
      <member refid="class_quant_lib_1_1_multiple_resets_pricer_1ab4009570b84bcb04fd8aeca669e38794" prot="public" virt="virtual"><scope>QuantLib::MultipleResetsPricer</scope><name>swapletPrice</name></member>
      <member refid="class_quant_lib_1_1_floating_rate_coupon_pricer_1a99682076c5aa2992d6cab3acf092d1c6" prot="public" virt="pure-virtual"><scope>QuantLib::MultipleResetsPricer</scope><name>swapletRate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::MultipleResetsPricer</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::MultipleResetsPricer</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_floating_rate_coupon_pricer_1a43d7327d65789c0feda11e80a589ad57" prot="public" virt="virtual"><scope>QuantLib::MultipleResetsPricer</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_floating_rate_coupon_pricer_1af1a82cce3d2ea5e343e556ad4c40b5d5" prot="public" virt="non-virtual"><scope>QuantLib::MultipleResetsPricer</scope><name>~FloatingRateCouponPricer</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::MultipleResetsPricer</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::MultipleResetsPricer</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

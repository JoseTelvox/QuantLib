<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_inverse_cumulative_behrens_fisher" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::InverseCumulativeBehrensFisher</compoundname>
    <includes refid="convolvedstudentt_8hpp" local="no">convolvedstudentt.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_inverse_cumulative_behrens_fisher_1a3e47abe8dcff8d48585f5473a4996c05" prot="private" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::InverseCumulativeBehrensFisher::normSqr_</definition>
        <argsstring></argsstring>
        <name>normSqr_</name>
        <qualifiedname>QuantLib::InverseCumulativeBehrensFisher::normSqr_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/convolvedstudentt.hpp" line="177" column="22" bodyfile="ql/experimental/math/convolvedstudentt.hpp" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_inverse_cumulative_behrens_fisher_1aaf4f2177634e29a90b96483726e2691a" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::InverseCumulativeBehrensFisher::accuracy_</definition>
        <argsstring></argsstring>
        <name>accuracy_</name>
        <qualifiedname>QuantLib::InverseCumulativeBehrensFisher::accuracy_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/convolvedstudentt.hpp" line="177" column="31" bodyfile="ql/experimental/math/convolvedstudentt.hpp" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_inverse_cumulative_behrens_fisher_1a30454b7711c3a4762f2d8771df224167" prot="private" static="no" mutable="yes">
        <type><ref refid="class_quant_lib_1_1_cumulative_behrens_fisher" kindref="compound">CumulativeBehrensFisher</ref></type>
        <definition>CumulativeBehrensFisher QuantLib::InverseCumulativeBehrensFisher::distrib_</definition>
        <argsstring></argsstring>
        <name>distrib_</name>
        <qualifiedname>QuantLib::InverseCumulativeBehrensFisher::distrib_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/convolvedstudentt.hpp" line="178" column="41" bodyfile="ql/experimental/math/convolvedstudentt.hpp" bodystart="178" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_inverse_cumulative_behrens_fisher_1ad925fc2ecafc8c9eed3a214b47836b47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::InverseCumulativeBehrensFisher::InverseCumulativeBehrensFisher</definition>
        <argsstring>(const std::vector&lt; Integer &gt; &amp;degreesFreedom=std::vector&lt; Integer &gt;(), const std::vector&lt; Real &gt; &amp;factors=std::vector&lt; Real &gt;(), Real accuracy=1.e-6)</argsstring>
        <name>InverseCumulativeBehrensFisher</name>
        <qualifiedname>QuantLib::InverseCumulativeBehrensFisher::InverseCumulativeBehrensFisher</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref> &gt; &amp;</type>
          <declname>degreesFreedom</declname>
          <defval>std::vector&lt; <ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref> &gt;()</defval>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>factors</declname>
          <defval>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;()</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>accuracy</declname>
          <defval>1.e-6</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>degreesFreedom</parametername>
</parameternamelist>
<parameterdescription>
<para>Degrees of freedom of the Ts convolved. The algorithm is limited to odd orders only. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>factors</parametername>
</parameternamelist>
<parameterdescription>
<para>Factors in the linear combination of the Ts. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>accuracy</parametername>
</parameternamelist>
<parameterdescription>
<para>The accuracy of the root-solving process. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/convolvedstudentt.hpp" line="169" column="9" bodyfile="ql/experimental/math/convolvedstudentt.cpp" bodystart="148" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inverse_cumulative_behrens_fisher_1ab302a80a66ad936c5c120a55178744f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::InverseCumulativeBehrensFisher::operator()</definition>
        <argsstring>(Probability q) const</argsstring>
        <name>operator()</name>
        <qualifiedname>QuantLib::InverseCumulativeBehrensFisher::operator()</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1ac41728dd3be3e1869bbb9aec06a89d60" kindref="member">Probability</ref></type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Returns the cumulative inverse value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/convolvedstudentt.hpp" line="174" column="14" bodyfile="ql/experimental/math/convolvedstudentt.cpp" bodystart="156" bodyend="177"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Inverse of the cumulative of the convolution of odd-T distributions. </para>
    </briefdescription>
    <detaileddescription>
<para>Finds the inverse through a root solver. To find limits for the solver domain use is made of the property that the convolved distribution is bounded above by the normalized gaussian. If the coeffiecient in the linear combination add up to a number below one the T of order one can be used as a limit below but in general this is not necessarily the case and a constant is used. Also the fact that the combination is symmetric is used. </para>
    </detaileddescription>
    <location file="ql/experimental/math/convolvedstudentt.hpp" line="161" column="5" bodyfile="ql/experimental/math/convolvedstudentt.hpp" bodystart="161" bodyend="179"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_inverse_cumulative_behrens_fisher_1aaf4f2177634e29a90b96483726e2691a" prot="private" virt="non-virtual"><scope>QuantLib::InverseCumulativeBehrensFisher</scope><name>accuracy_</name></member>
      <member refid="class_quant_lib_1_1_inverse_cumulative_behrens_fisher_1a30454b7711c3a4762f2d8771df224167" prot="private" virt="non-virtual"><scope>QuantLib::InverseCumulativeBehrensFisher</scope><name>distrib_</name></member>
      <member refid="class_quant_lib_1_1_inverse_cumulative_behrens_fisher_1ad925fc2ecafc8c9eed3a214b47836b47" prot="public" virt="non-virtual"><scope>QuantLib::InverseCumulativeBehrensFisher</scope><name>InverseCumulativeBehrensFisher</name></member>
      <member refid="class_quant_lib_1_1_inverse_cumulative_behrens_fisher_1a3e47abe8dcff8d48585f5473a4996c05" prot="private" virt="non-virtual"><scope>QuantLib::InverseCumulativeBehrensFisher</scope><name>normSqr_</name></member>
      <member refid="class_quant_lib_1_1_inverse_cumulative_behrens_fisher_1ab302a80a66ad936c5c120a55178744f2" prot="public" virt="non-virtual"><scope>QuantLib::InverseCumulativeBehrensFisher</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

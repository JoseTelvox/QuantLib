<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_alpha_form_inverse_linear" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::AlphaFormInverseLinear</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_alpha_form" prot="public" virt="non-virtual">QuantLib::AlphaForm</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_alpha_form_inverse_linear_1a4624e5c9d0cf3f4e712a55856b6b6c7d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;</type>
        <definition>std::vector&lt;Time&gt; QuantLib::AlphaFormInverseLinear::times_</definition>
        <argsstring></argsstring>
        <name>times_</name>
        <qualifiedname>QuantLib::AlphaFormInverseLinear::times_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/alphaformconcrete.hpp" line="36" column="21" bodyfile="ql/models/marketmodels/models/alphaformconcrete.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_alpha_form_inverse_linear_1a8fbd7d842f51452f90d5af7948c687a4" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AlphaFormInverseLinear::alpha_</definition>
        <argsstring></argsstring>
        <name>alpha_</name>
        <qualifiedname>QuantLib::AlphaFormInverseLinear::alpha_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/alphaformconcrete.hpp" line="37" column="14" bodyfile="ql/models/marketmodels/models/alphaformconcrete.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_alpha_form_inverse_linear_1a3082948eb8418dffddfc2f43b6d92201" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::AlphaFormInverseLinear::AlphaFormInverseLinear</definition>
        <argsstring>(std::vector&lt; Time &gt; times, Real alpha=0.0)</argsstring>
        <name>AlphaFormInverseLinear</name>
        <qualifiedname>QuantLib::AlphaFormInverseLinear::AlphaFormInverseLinear</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;</type>
          <declname>times</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>alpha</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/alphaformconcrete.hpp" line="30" column="9" bodyfile="ql/models/marketmodels/models/alphaformconcrete.cpp" bodystart="26" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_alpha_form_inverse_linear_1a2abfcee656abcf32784d27321627fc64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::AlphaFormInverseLinear::~AlphaFormInverseLinear</definition>
        <argsstring>() override=default</argsstring>
        <name>~AlphaFormInverseLinear</name>
        <qualifiedname>QuantLib::AlphaFormInverseLinear::~AlphaFormInverseLinear</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/alphaformconcrete.hpp" line="31" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_alpha_form_inverse_linear_1a96fe7593841bec604c6fa92017786161" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AlphaFormInverseLinear::operator()</definition>
        <argsstring>(Integer i) const override</argsstring>
        <name>operator()</name>
        <qualifiedname>QuantLib::AlphaFormInverseLinear::operator()</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_alpha_form_1a9bdb1ad95ba8cff24f2caeefa6ea3b31">operator()</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/alphaformconcrete.hpp" line="32" column="14" bodyfile="ql/models/marketmodels/models/alphaformconcrete.cpp" bodystart="29" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_alpha_form_inverse_linear_1a32cdf592e5af82ef83060fdab1e0075d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::AlphaFormInverseLinear::setAlpha</definition>
        <argsstring>(Real alpha_) override</argsstring>
        <name>setAlpha</name>
        <qualifiedname>QuantLib::AlphaFormInverseLinear::setAlpha</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_alpha_form_1a56a5a125faa740c210c3f71f60db239e">setAlpha</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>alpha_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/alphaformconcrete.hpp" line="33" column="14" bodyfile="ql/models/marketmodels/models/alphaformconcrete.cpp" bodystart="33" bodyend="35"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::AlphaForm</label>
        <link refid="class_quant_lib_1_1_alpha_form"/>
      </node>
      <node id="1">
        <label>QuantLib::AlphaFormInverseLinear</label>
        <link refid="class_quant_lib_1_1_alpha_form_inverse_linear"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::AlphaForm</label>
        <link refid="class_quant_lib_1_1_alpha_form"/>
      </node>
      <node id="1">
        <label>QuantLib::AlphaFormInverseLinear</label>
        <link refid="class_quant_lib_1_1_alpha_form_inverse_linear"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/models/marketmodels/models/alphaformconcrete.hpp" line="28" column="5" bodyfile="ql/models/marketmodels/models/alphaformconcrete.hpp" bodystart="28" bodyend="38"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_alpha_form_inverse_linear_1a8fbd7d842f51452f90d5af7948c687a4" prot="private" virt="non-virtual"><scope>QuantLib::AlphaFormInverseLinear</scope><name>alpha_</name></member>
      <member refid="class_quant_lib_1_1_alpha_form_inverse_linear_1a3082948eb8418dffddfc2f43b6d92201" prot="public" virt="non-virtual"><scope>QuantLib::AlphaFormInverseLinear</scope><name>AlphaFormInverseLinear</name></member>
      <member refid="class_quant_lib_1_1_alpha_form_inverse_linear_1a96fe7593841bec604c6fa92017786161" prot="public" virt="virtual"><scope>QuantLib::AlphaFormInverseLinear</scope><name>operator()</name></member>
      <member refid="class_quant_lib_1_1_alpha_form_inverse_linear_1a32cdf592e5af82ef83060fdab1e0075d" prot="public" virt="virtual"><scope>QuantLib::AlphaFormInverseLinear</scope><name>setAlpha</name></member>
      <member refid="class_quant_lib_1_1_alpha_form_inverse_linear_1a4624e5c9d0cf3f4e712a55856b6b6c7d" prot="private" virt="non-virtual"><scope>QuantLib::AlphaFormInverseLinear</scope><name>times_</name></member>
      <member refid="class_quant_lib_1_1_alpha_form_1aedbf23b09b94de19e527f3c1132fb1e5" prot="public" virt="virtual"><scope>QuantLib::AlphaFormInverseLinear</scope><name>~AlphaForm</name></member>
      <member refid="class_quant_lib_1_1_alpha_form_inverse_linear_1a2abfcee656abcf32784d27321627fc64" prot="public" virt="non-virtual"><scope>QuantLib::AlphaFormInverseLinear</scope><name>~AlphaFormInverseLinear</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

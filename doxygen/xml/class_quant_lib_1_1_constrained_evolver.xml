<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_constrained_evolver" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::ConstrainedEvolver</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_market_model_evolver" prot="public" virt="non-virtual">QuantLib::MarketModelEvolver</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_log_normal_fwd_rate_euler_constrained" prot="public" virt="non-virtual">QuantLib::LogNormalFwdRateEulerConstrained</derivedcompoundref>
    <includes refid="constrainedevolver_8hpp" local="no">constrainedevolver.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_constrained_evolver_1a0d11a72891d7de0b5c65fabd9944cbbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ConstrainedEvolver::~ConstrainedEvolver</definition>
        <argsstring>() override=default</argsstring>
        <name>~ConstrainedEvolver</name>
        <qualifiedname>QuantLib::ConstrainedEvolver::~ConstrainedEvolver</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/constrainedevolver.hpp" line="41" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_constrained_evolver_1ac74aa87d549fc3596bf815f5e77685d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void QuantLib::ConstrainedEvolver::setConstraintType</definition>
        <argsstring>(const std::vector&lt; Size &gt; &amp;startIndexOfSwapRate, const std::vector&lt; Size &gt; &amp;EndIndexOfSwapRate)=0</argsstring>
        <name>setConstraintType</name>
        <qualifiedname>QuantLib::ConstrainedEvolver::setConstraintType</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_log_normal_fwd_rate_euler_constrained_1ab0c45dd994cce3091163aae9baa47b20">setConstraintType</reimplementedby>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &gt; &amp;</type>
          <declname>startIndexOfSwapRate</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &gt; &amp;</type>
          <declname>EndIndexOfSwapRate</declname>
        </param>
        <briefdescription>
<para>call once </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/constrainedevolver.hpp" line="43" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_constrained_evolver_1a20cbc50e2a6c8581224252546c5f1590" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void QuantLib::ConstrainedEvolver::setThisConstraint</definition>
        <argsstring>(const std::vector&lt; Rate &gt; &amp;rateConstraints, const std::valarray&lt; bool &gt; &amp;isConstraintActive)=0</argsstring>
        <name>setThisConstraint</name>
        <qualifiedname>QuantLib::ConstrainedEvolver::setThisConstraint</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_log_normal_fwd_rate_euler_constrained_1a699afa2e5ec1350c53339919b81554d9">setThisConstraint</reimplementedby>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
          <declname>rateConstraints</declname>
        </param>
        <param>
          <type>const std::valarray&lt; bool &gt; &amp;</type>
          <declname>isConstraintActive</declname>
        </param>
        <briefdescription>
<para>call before each path </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/constrainedevolver.hpp" line="47" column="22"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Constrained market-model evolver. </para>
    </briefdescription>
    <detaileddescription>
<para>Abstract base class. Requires extra methods above that of marketmodelevolver to let you fix rates via importance sampling.</para>
<para>The evolver does the actual gritty work of evolving the forward rates from one time to the next.</para>
<para>This is intended to be used for the Fries-Joshi proxy simulation approach to <ref refid="class_quant_lib_1_1_greeks" kindref="compound">Greeks</ref> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::ConstrainedEvolver</label>
        <link refid="class_quant_lib_1_1_constrained_evolver"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::LogNormalFwdRateEulerConstrained</label>
        <link refid="class_quant_lib_1_1_log_normal_fwd_rate_euler_constrained"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::MarketModelEvolver</label>
        <link refid="class_quant_lib_1_1_market_model_evolver"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::ConstrainedEvolver</label>
        <link refid="class_quant_lib_1_1_constrained_evolver"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::MarketModelEvolver</label>
        <link refid="class_quant_lib_1_1_market_model_evolver"/>
      </node>
    </collaborationgraph>
    <location file="ql/models/marketmodels/constrainedevolver.hpp" line="39" column="5" bodyfile="ql/models/marketmodels/constrainedevolver.hpp" bodystart="39" bodyend="50"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_market_model_evolver_1a90dd9c52516481852ab41fac2ff1f8ed" prot="public" virt="pure-virtual"><scope>QuantLib::ConstrainedEvolver</scope><name>advanceStep</name></member>
      <member refid="class_quant_lib_1_1_market_model_evolver_1a85322ec6252a5431b2fa141f3fc4f976" prot="public" virt="pure-virtual"><scope>QuantLib::ConstrainedEvolver</scope><name>currentState</name></member>
      <member refid="class_quant_lib_1_1_market_model_evolver_1a2be55f5ae47935053388065c4585d6ee" prot="public" virt="pure-virtual"><scope>QuantLib::ConstrainedEvolver</scope><name>currentStep</name></member>
      <member refid="class_quant_lib_1_1_market_model_evolver_1a2e1bd04073ea86eaaba5dce33054a8f3" prot="public" virt="pure-virtual"><scope>QuantLib::ConstrainedEvolver</scope><name>numeraires</name></member>
      <member refid="class_quant_lib_1_1_constrained_evolver_1ac74aa87d549fc3596bf815f5e77685d1" prot="public" virt="pure-virtual"><scope>QuantLib::ConstrainedEvolver</scope><name>setConstraintType</name></member>
      <member refid="class_quant_lib_1_1_market_model_evolver_1a2252b21184f50dfd1c405ea8c156032f" prot="public" virt="pure-virtual"><scope>QuantLib::ConstrainedEvolver</scope><name>setInitialState</name></member>
      <member refid="class_quant_lib_1_1_constrained_evolver_1a20cbc50e2a6c8581224252546c5f1590" prot="public" virt="pure-virtual"><scope>QuantLib::ConstrainedEvolver</scope><name>setThisConstraint</name></member>
      <member refid="class_quant_lib_1_1_market_model_evolver_1ac3e6d22e472d5c1c895d8f96be60560b" prot="public" virt="pure-virtual"><scope>QuantLib::ConstrainedEvolver</scope><name>startNewPath</name></member>
      <member refid="class_quant_lib_1_1_constrained_evolver_1a0d11a72891d7de0b5c65fabd9944cbbc" prot="public" virt="non-virtual"><scope>QuantLib::ConstrainedEvolver</scope><name>~ConstrainedEvolver</name></member>
      <member refid="class_quant_lib_1_1_market_model_evolver_1a782e4b9aa708219798ec7a83de8bd84c" prot="public" virt="virtual"><scope>QuantLib::ConstrainedEvolver</scope><name>~MarketModelEvolver</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

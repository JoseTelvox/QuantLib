<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_newton_safe" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::NewtonSafe</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_solver1_d" prot="public" virt="non-virtual">QuantLib::Solver1D&lt; NewtonSafe &gt;</basecompoundref>
    <includes refid="newtonsafe_8hpp" local="no">newtonsafe.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_newton_safe_1a7f5d089e7ffda0ba03774934f6645501" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class F</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::NewtonSafe::solveImpl</definition>
        <argsstring>(const F &amp;f, Real xAccuracy) const</argsstring>
        <name>solveImpl</name>
        <qualifiedname>QuantLib::NewtonSafe::solveImpl</qualifiedname>
        <param>
          <type>const F &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>xAccuracy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/solvers1d/newtonsafe.hpp" line="43" column="14" bodyfile="ql/math/solvers1d/newtonsafe.hpp" bodystart="43" bodyend="109"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>safe Newton 1-D solver </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>This solver requires that the passed function object implement a method <computeroutput><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> derivative(Real)</computeroutput>.</para>
</simplesect>
<xrefsect id="test_1_test000073"><xreftitle>Test</xreftitle><xrefdescription><para>the correctness of the returned values is tested by checking them against known good results.</para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>QuantLib::CuriouslyRecurringTemplate&lt; NewtonSafe &gt;</label>
        <link refid="class_quant_lib_1_1_curiously_recurring_template"/>
      </node>
      <node id="1">
        <label>QuantLib::NewtonSafe</label>
        <link refid="class_quant_lib_1_1_newton_safe"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Solver1D&lt; NewtonSafe &gt;</label>
        <link refid="class_quant_lib_1_1_solver1_d"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>QuantLib::CuriouslyRecurringTemplate&lt; NewtonSafe &gt;</label>
        <link refid="class_quant_lib_1_1_curiously_recurring_template"/>
      </node>
      <node id="1">
        <label>QuantLib::NewtonSafe</label>
        <link refid="class_quant_lib_1_1_newton_safe"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Solver1D&lt; NewtonSafe &gt;</label>
        <link refid="class_quant_lib_1_1_solver1_d"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/math/solvers1d/newtonsafe.hpp" line="40" column="5" bodyfile="ql/math/solvers1d/newtonsafe.hpp" bodystart="40" bodyend="110"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_curiously_recurring_template_1ac51e69d7c3e616686e8777fcabebf954" prot="protected" virt="non-virtual"><scope>QuantLib::NewtonSafe</scope><name>CuriouslyRecurringTemplate</name></member>
      <member refid="class_quant_lib_1_1_solver1_d_1a635d7da1f44ebb6da5acabc30c18da1c" prot="protected" virt="non-virtual"><scope>QuantLib::NewtonSafe</scope><name>evaluationNumber_</name></member>
      <member refid="class_quant_lib_1_1_solver1_d_1afacd8dbc5fa9ac5239e9bab250736b4b" prot="protected" virt="non-virtual"><scope>QuantLib::NewtonSafe</scope><name>fxMax_</name></member>
      <member refid="class_quant_lib_1_1_solver1_d_1a7a73999214b63193b6ace9b1182f9cc8" prot="protected" virt="non-virtual"><scope>QuantLib::NewtonSafe</scope><name>fxMin_</name></member>
      <member refid="class_quant_lib_1_1_curiously_recurring_template_1a72c11590c74c9d0085fd43f17cdfe96e" prot="protected" virt="non-virtual"><scope>QuantLib::NewtonSafe</scope><name>impl</name></member>
      <member refid="class_quant_lib_1_1_curiously_recurring_template_1a9efaa4c38bfca1e148ed265a809ed220" prot="protected" virt="non-virtual"><scope>QuantLib::NewtonSafe</scope><name>impl</name></member>
      <member refid="class_quant_lib_1_1_solver1_d_1a01fc52f3d9b09d3aa6a03cf00ad3f7d7" prot="protected" virt="non-virtual"><scope>QuantLib::NewtonSafe</scope><name>maxEvaluations_</name></member>
      <member refid="class_quant_lib_1_1_solver1_d_1a46e7eef8c49eb4373dc314a031cd5667" prot="protected" virt="non-virtual"><scope>QuantLib::NewtonSafe</scope><name>root_</name></member>
      <member refid="class_quant_lib_1_1_solver1_d_1a57eb73760b942c3f4d854e38fa73c891" prot="public" virt="non-virtual"><scope>QuantLib::NewtonSafe</scope><name>setLowerBound</name></member>
      <member refid="class_quant_lib_1_1_solver1_d_1a65b912b5ea70e93f3a942c3f1ed020b0" prot="public" virt="non-virtual"><scope>QuantLib::NewtonSafe</scope><name>setMaxEvaluations</name></member>
      <member refid="class_quant_lib_1_1_solver1_d_1a07328db55592cda94906b710407c4b5a" prot="public" virt="non-virtual"><scope>QuantLib::NewtonSafe</scope><name>setUpperBound</name></member>
      <member refid="class_quant_lib_1_1_solver1_d_1a137cd2caf0042ad6fd2c409a9ebc8226" prot="public" virt="non-virtual"><scope>QuantLib::NewtonSafe</scope><name>solve</name></member>
      <member refid="class_quant_lib_1_1_solver1_d_1a97ae7284c76079d4162e25d29304280a" prot="public" virt="non-virtual"><scope>QuantLib::NewtonSafe</scope><name>solve</name></member>
      <member refid="class_quant_lib_1_1_newton_safe_1a7f5d089e7ffda0ba03774934f6645501" prot="public" virt="non-virtual"><scope>QuantLib::NewtonSafe</scope><name>solveImpl</name></member>
      <member refid="class_quant_lib_1_1_solver1_d_1af76a2a43fb01058eaa60873b173c8644" prot="public" virt="non-virtual"><scope>QuantLib::NewtonSafe</scope><name>Solver1D</name></member>
      <member refid="class_quant_lib_1_1_solver1_d_1a6978d11bba08a7a57cf07ac8b11d3ddf" prot="protected" virt="non-virtual"><scope>QuantLib::NewtonSafe</scope><name>xMax_</name></member>
      <member refid="class_quant_lib_1_1_solver1_d_1add1dba15498ab66fc7602416407ea197" prot="protected" virt="non-virtual"><scope>QuantLib::NewtonSafe</scope><name>xMin_</name></member>
      <member refid="class_quant_lib_1_1_curiously_recurring_template_1ae22b4353d3c05a5aad5f5b8769392b05" prot="protected" virt="non-virtual"><scope>QuantLib::NewtonSafe</scope><name>~CuriouslyRecurringTemplate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

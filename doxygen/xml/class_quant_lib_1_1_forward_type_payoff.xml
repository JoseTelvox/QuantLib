<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_forward_type_payoff" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::ForwardTypePayoff</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_payoff" prot="public" virt="non-virtual">QuantLib::Payoff</basecompoundref>
    <includes refid="forward_8hpp" local="no">forward.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Payoff interface</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_type_payoff_1a65f594b7499818a9e5bf1739eb0023e3" prot="protected" static="no" mutable="no">
        <type>Position::Type</type>
        <definition>Position::Type QuantLib::ForwardTypePayoff::type_</definition>
        <argsstring></argsstring>
        <name>type_</name>
        <qualifiedname>QuantLib::ForwardTypePayoff::type_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forward.hpp" line="160" column="24" bodyfile="ql/instruments/forward.hpp" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_type_payoff_1a1b7f376c533359c12e3b0c56f4f94194" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ForwardTypePayoff::strike_</definition>
        <argsstring></argsstring>
        <name>strike_</name>
        <qualifiedname>QuantLib::ForwardTypePayoff::strike_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forward.hpp" line="161" column="14" bodyfile="ql/instruments/forward.hpp" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_type_payoff_1ad27a396cd45763a3d698b5348f431d10" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string QuantLib::ForwardTypePayoff::name</definition>
        <argsstring>() const override</argsstring>
        <name>name</name>
        <qualifiedname>QuantLib::ForwardTypePayoff::name</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_payoff_1aceb029d314fb74ab5797d7bc7752d0c8">name</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This method is used for output and comparison between payoffs. It is <bold>not</bold> meant to be used for writing switch-on-type code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forward.hpp" line="155" column="21" bodyfile="ql/instruments/forward.hpp" bodystart="155" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_type_payoff_1ab85dde9faf4b34138fb13c0f289f2d35" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>std::string QuantLib::ForwardTypePayoff::description</definition>
        <argsstring>() const override</argsstring>
        <name>description</name>
        <qualifiedname>QuantLib::ForwardTypePayoff::description</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_payoff_1a0f2a1e491b9cf7411a3759c2fd7ed90e">description</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forward.hpp" line="156" column="21" bodyfile="ql/instruments/forward.hpp" bodystart="189" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_type_payoff_1a3dd0bd00d48050bacdb984ee63b83d5e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ForwardTypePayoff::operator()</definition>
        <argsstring>(Real price) const override</argsstring>
        <name>operator()</name>
        <qualifiedname>QuantLib::ForwardTypePayoff::operator()</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_payoff_1a1b10d7224a8089b21a56eb1fa0562c37">operator()</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>price</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forward.hpp" line="157" column="14" bodyfile="ql/instruments/forward.hpp" bodystart="195" bodyend="204"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_forward_type_payoff_1ad53d18b7642e9826d32878e202d755f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ForwardTypePayoff::ForwardTypePayoff</definition>
        <argsstring>(Position::Type type, Real strike)</argsstring>
        <name>ForwardTypePayoff</name>
        <qualifiedname>QuantLib::ForwardTypePayoff::ForwardTypePayoff</qualifiedname>
        <param>
          <type>Position::Type</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>strike</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forward.hpp" line="147" column="9" bodyfile="ql/instruments/forward.hpp" bodystart="147" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_type_payoff_1a238e0a9a36db6ead008a8cc4353af903" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Position::Type</type>
        <definition>Position::Type QuantLib::ForwardTypePayoff::forwardType</definition>
        <argsstring>() const</argsstring>
        <name>forwardType</name>
        <qualifiedname>QuantLib::ForwardTypePayoff::forwardType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forward.hpp" line="151" column="24" bodyfile="ql/instruments/forward.hpp" bodystart="151" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_type_payoff_1a26d708339054c1040bae9131efbd9e3a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ForwardTypePayoff::strike</definition>
        <argsstring>() const</argsstring>
        <name>strike</name>
        <qualifiedname>QuantLib::ForwardTypePayoff::strike</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forward.hpp" line="152" column="14" bodyfile="ql/instruments/forward.hpp" bodystart="152" bodyend="152"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Class for forward type payoffs. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::ForwardTypePayoff</label>
        <link refid="class_quant_lib_1_1_forward_type_payoff"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Payoff</label>
        <link refid="class_quant_lib_1_1_payoff"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::ForwardTypePayoff</label>
        <link refid="class_quant_lib_1_1_forward_type_payoff"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Payoff</label>
        <link refid="class_quant_lib_1_1_payoff"/>
      </node>
    </collaborationgraph>
    <location file="ql/instruments/forward.hpp" line="145" column="5" bodyfile="ql/instruments/forward.hpp" bodystart="145" bodyend="162"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_payoff_1ac2902d1c8e84743671f759180fbff190" prot="public" virt="virtual"><scope>QuantLib::ForwardTypePayoff</scope><name>accept</name></member>
      <member refid="class_quant_lib_1_1_forward_type_payoff_1ab85dde9faf4b34138fb13c0f289f2d35" prot="public" virt="virtual"><scope>QuantLib::ForwardTypePayoff</scope><name>description</name></member>
      <member refid="class_quant_lib_1_1_forward_type_payoff_1a238e0a9a36db6ead008a8cc4353af903" prot="public" virt="non-virtual"><scope>QuantLib::ForwardTypePayoff</scope><name>forwardType</name></member>
      <member refid="class_quant_lib_1_1_forward_type_payoff_1ad53d18b7642e9826d32878e202d755f5" prot="public" virt="non-virtual"><scope>QuantLib::ForwardTypePayoff</scope><name>ForwardTypePayoff</name></member>
      <member refid="class_quant_lib_1_1_forward_type_payoff_1ad27a396cd45763a3d698b5348f431d10" prot="public" virt="virtual"><scope>QuantLib::ForwardTypePayoff</scope><name>name</name></member>
      <member refid="class_quant_lib_1_1_forward_type_payoff_1a3dd0bd00d48050bacdb984ee63b83d5e" prot="public" virt="virtual"><scope>QuantLib::ForwardTypePayoff</scope><name>operator()</name></member>
      <member refid="class_quant_lib_1_1_forward_type_payoff_1a26d708339054c1040bae9131efbd9e3a" prot="public" virt="non-virtual"><scope>QuantLib::ForwardTypePayoff</scope><name>strike</name></member>
      <member refid="class_quant_lib_1_1_forward_type_payoff_1a1b7f376c533359c12e3b0c56f4f94194" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardTypePayoff</scope><name>strike_</name></member>
      <member refid="class_quant_lib_1_1_forward_type_payoff_1a65f594b7499818a9e5bf1739eb0023e3" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardTypePayoff</scope><name>type_</name></member>
      <member refid="class_quant_lib_1_1_payoff_1a7067fc920554af30af0ac5b82d0f4650" prot="public" virt="virtual"><scope>QuantLib::ForwardTypePayoff</scope><name>~Payoff</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_variance_gamma_process" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::VarianceGammaProcess</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_stochastic_process1_d" prot="public" virt="non-virtual">QuantLib::StochasticProcess1D</basecompoundref>
    <includes refid="variancegammaprocess_8hpp" local="no">variancegammaprocess.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_variance_gamma_process_1a0aac7dc9bb59bc9ee9432d35d89c6a9a" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
        <definition>Handle&lt;Quote&gt; QuantLib::VarianceGammaProcess::s0_</definition>
        <argsstring></argsstring>
        <name>s0_</name>
        <qualifiedname>QuantLib::VarianceGammaProcess::s0_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/variancegamma/variancegammaprocess.hpp" line="72" column="16" bodyfile="ql/experimental/variancegamma/variancegammaprocess.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_variance_gamma_process_1a8ae72407b9c5fd998c3195445bf0131a" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
        <definition>Handle&lt;YieldTermStructure&gt; QuantLib::VarianceGammaProcess::dividendYield_</definition>
        <argsstring></argsstring>
        <name>dividendYield_</name>
        <qualifiedname>QuantLib::VarianceGammaProcess::dividendYield_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/variancegamma/variancegammaprocess.hpp" line="73" column="16" bodyfile="ql/experimental/variancegamma/variancegammaprocess.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_variance_gamma_process_1ad00bec748ebbd5830321de72383f3acc" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
        <definition>Handle&lt;YieldTermStructure&gt; QuantLib::VarianceGammaProcess::riskFreeRate_</definition>
        <argsstring></argsstring>
        <name>riskFreeRate_</name>
        <qualifiedname>QuantLib::VarianceGammaProcess::riskFreeRate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/variancegamma/variancegammaprocess.hpp" line="73" column="31" bodyfile="ql/experimental/variancegamma/variancegammaprocess.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_variance_gamma_process_1a1179cec74b764b8bc2c0a263c26a18dd" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::VarianceGammaProcess::sigma_</definition>
        <argsstring></argsstring>
        <name>sigma_</name>
        <qualifiedname>QuantLib::VarianceGammaProcess::sigma_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/variancegamma/variancegammaprocess.hpp" line="74" column="14" bodyfile="ql/experimental/variancegamma/variancegammaprocess.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_variance_gamma_process_1ab610566e8639c09a3c73720bd4b853db" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::VarianceGammaProcess::nu_</definition>
        <argsstring></argsstring>
        <name>nu_</name>
        <qualifiedname>QuantLib::VarianceGammaProcess::nu_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/variancegamma/variancegammaprocess.hpp" line="74" column="21" bodyfile="ql/experimental/variancegamma/variancegammaprocess.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_variance_gamma_process_1a03c09a353f916da24d2849bbc4ed55ff" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::VarianceGammaProcess::theta_</definition>
        <argsstring></argsstring>
        <name>theta_</name>
        <qualifiedname>QuantLib::VarianceGammaProcess::theta_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/variancegamma/variancegammaprocess.hpp" line="74" column="25" bodyfile="ql/experimental/variancegamma/variancegammaprocess.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_variance_gamma_process_1a2e77593f5d0756b55d1248629af975cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::VarianceGammaProcess::VarianceGammaProcess</definition>
        <argsstring>(Handle&lt; Quote &gt; s0, Handle&lt; YieldTermStructure &gt; dividendYield, Handle&lt; YieldTermStructure &gt; riskFreeRate, Real sigma, Real nu, Real theta)</argsstring>
        <name>VarianceGammaProcess</name>
        <qualifiedname>QuantLib::VarianceGammaProcess::VarianceGammaProcess</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
          <declname>s0</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
          <declname>dividendYield</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
          <declname>riskFreeRate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>sigma</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>nu</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/variancegamma/variancegammaprocess.hpp" line="52" column="7" bodyfile="ql/experimental/variancegamma/variancegammaprocess.cpp" bodystart="28" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_variance_gamma_process_1a837c1a4bd9497a0b6fef47b41f6f3b00" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::VarianceGammaProcess::x0</definition>
        <argsstring>() const override</argsstring>
        <name>x0</name>
        <qualifiedname>QuantLib::VarianceGammaProcess::x0</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process1_d_1a4a0eee3b5c6592950bd6635177f76113">x0</reimplements>
        <briefdescription>
<para>returns the initial value of the state variable </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/variancegamma/variancegammaprocess.hpp" line="59" column="12" bodyfile="ql/experimental/variancegamma/variancegammaprocess.cpp" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_variance_gamma_process_1ad5c4654f45950ba98fa9bb48f0285685" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::VarianceGammaProcess::drift</definition>
        <argsstring>(Time t, Real x) const override</argsstring>
        <name>drift</name>
        <qualifiedname>QuantLib::VarianceGammaProcess::drift</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process1_d_1ad27eced4c2abbe7d8da5951969158e2d">drift</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>returns the drift part of the equation, i.e. <formula id="478">$ \mu(t, x_t) $</formula> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/variancegamma/variancegammaprocess.hpp" line="60" column="12" bodyfile="ql/experimental/variancegamma/variancegammaprocess.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_variance_gamma_process_1ae6185941e4e9f8bed1eb4b65956c2c23" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::VarianceGammaProcess::diffusion</definition>
        <argsstring>(Time t, Real x) const override</argsstring>
        <name>diffusion</name>
        <qualifiedname>QuantLib::VarianceGammaProcess::diffusion</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process1_d_1a66bde34ae0158d64169e39655fdfcfc0">diffusion</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>returns the diffusion part of the equation, i.e. <formula id="479">$ \sigma(t, x_t) $</formula> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/variancegamma/variancegammaprocess.hpp" line="61" column="12" bodyfile="ql/experimental/variancegamma/variancegammaprocess.cpp" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_variance_gamma_process_1aca80e6facbe8dbc53786cd421a81abad" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::VarianceGammaProcess::sigma</definition>
        <argsstring>() const</argsstring>
        <name>sigma</name>
        <qualifiedname>QuantLib::VarianceGammaProcess::sigma</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/variancegamma/variancegammaprocess.hpp" line="63" column="12" bodyfile="ql/experimental/variancegamma/variancegammaprocess.hpp" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_variance_gamma_process_1adbec34bf585d96a08df76bd137308470" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::VarianceGammaProcess::nu</definition>
        <argsstring>() const</argsstring>
        <name>nu</name>
        <qualifiedname>QuantLib::VarianceGammaProcess::nu</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/variancegamma/variancegammaprocess.hpp" line="64" column="12" bodyfile="ql/experimental/variancegamma/variancegammaprocess.hpp" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_variance_gamma_process_1acda9577bf973d33916f902587f1ca28f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::VarianceGammaProcess::theta</definition>
        <argsstring>() const</argsstring>
        <name>theta</name>
        <qualifiedname>QuantLib::VarianceGammaProcess::theta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/variancegamma/variancegammaprocess.hpp" line="65" column="12" bodyfile="ql/experimental/variancegamma/variancegammaprocess.hpp" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_variance_gamma_process_1af34ca85c884c90e40bb7ff0a58347523" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &amp;</type>
        <definition>const Handle&lt; Quote &gt; &amp; QuantLib::VarianceGammaProcess::s0</definition>
        <argsstring>() const</argsstring>
        <name>s0</name>
        <qualifiedname>QuantLib::VarianceGammaProcess::s0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/variancegamma/variancegammaprocess.hpp" line="67" column="20" bodyfile="ql/experimental/variancegamma/variancegammaprocess.cpp" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_variance_gamma_process_1ac197b7e2e8c810019410b2ab198631d7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
        <definition>const Handle&lt; YieldTermStructure &gt; &amp; QuantLib::VarianceGammaProcess::dividendYield</definition>
        <argsstring>() const</argsstring>
        <name>dividendYield</name>
        <qualifiedname>QuantLib::VarianceGammaProcess::dividendYield</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/variancegamma/variancegammaprocess.hpp" line="68" column="20" bodyfile="ql/experimental/variancegamma/variancegammaprocess.cpp" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_variance_gamma_process_1a5f4971eff5f505b1c06be069b5760d92" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
        <definition>const Handle&lt; YieldTermStructure &gt; &amp; QuantLib::VarianceGammaProcess::riskFreeRate</definition>
        <argsstring>() const</argsstring>
        <name>riskFreeRate</name>
        <qualifiedname>QuantLib::VarianceGammaProcess::riskFreeRate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/variancegamma/variancegammaprocess.hpp" line="69" column="20" bodyfile="ql/experimental/variancegamma/variancegammaprocess.cpp" bodystart="65" bodyend="67"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Variance gamma process. </para>
    </briefdescription>
    <detaileddescription>
<para>This class describes the stochastic volatility process. With a Brownian motion given by   <formula id="185">\[    db = \theta dt + \sigma dW_t
\]</formula> then a Variance Gamma process X is defined by evaluating this Brownian motion at sample times driven by a Gamma process. If T is the value of a Gamma process with mean 1 and variance rate  <formula id="186">$ \nu
$</formula> then the Variance Gamma process is given by   <formula id="187">\[    X(t) = B(T)
\]</formula> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="3">
        <label>QuantLib::StochasticProcess</label>
        <link refid="class_quant_lib_1_1_stochastic_process"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::StochasticProcess1D</label>
        <link refid="class_quant_lib_1_1_stochastic_process1_d"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::VarianceGammaProcess</label>
        <link refid="class_quant_lib_1_1_variance_gamma_process"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="3">
        <label>QuantLib::StochasticProcess</label>
        <link refid="class_quant_lib_1_1_stochastic_process"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::StochasticProcess1D</label>
        <link refid="class_quant_lib_1_1_stochastic_process1_d"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::VarianceGammaProcess</label>
        <link refid="class_quant_lib_1_1_variance_gamma_process"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/variancegamma/variancegammaprocess.hpp" line="50" column="5" bodyfile="ql/experimental/variancegamma/variancegammaprocess.hpp" bodystart="50" bodyend="75"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_stochastic_process1_d_1a303b2e3c9243b674ac1f145c304811b7" prot="public" virt="virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>apply</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_variance_gamma_process_1ae6185941e4e9f8bed1eb4b65956c2c23" prot="public" virt="virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>diffusion</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process1_d_1aff0e6c615f076baf4393abe860794583" prot="protected" virt="non-virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>discretization_</name></member>
      <member refid="class_quant_lib_1_1_variance_gamma_process_1ac197b7e2e8c810019410b2ab198631d7" prot="public" virt="non-virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>dividendYield</name></member>
      <member refid="class_quant_lib_1_1_variance_gamma_process_1a8ae72407b9c5fd998c3195445bf0131a" prot="private" virt="non-virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>dividendYield_</name></member>
      <member refid="class_quant_lib_1_1_variance_gamma_process_1ad5c4654f45950ba98fa9bb48f0285685" prot="public" virt="virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>drift</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process1_d_1a39605ea27c7ef3a7feafed4fafcc1f90" prot="public" virt="virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>evolve</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process1_d_1a4543779731a4ce76e9dd85f3c81752e7" prot="public" virt="virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>expectation</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a0346d38598fb9a5a1cd58024f05081aa" prot="public" virt="virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>factors</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::VarianceGammaProcess</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_variance_gamma_process_1adbec34bf585d96a08df76bd137308470" prot="public" virt="non-virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>nu</name></member>
      <member refid="class_quant_lib_1_1_variance_gamma_process_1ab610566e8639c09a3c73720bd4b853db" prot="private" virt="non-virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>nu_</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::VarianceGammaProcess</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::VarianceGammaProcess</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::VarianceGammaProcess</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::VarianceGammaProcess</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::VarianceGammaProcess</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_variance_gamma_process_1a5f4971eff5f505b1c06be069b5760d92" prot="public" virt="non-virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>riskFreeRate</name></member>
      <member refid="class_quant_lib_1_1_variance_gamma_process_1ad00bec748ebbd5830321de72383f3acc" prot="private" virt="non-virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>riskFreeRate_</name></member>
      <member refid="class_quant_lib_1_1_variance_gamma_process_1af34ca85c884c90e40bb7ff0a58347523" prot="public" virt="non-virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>s0</name></member>
      <member refid="class_quant_lib_1_1_variance_gamma_process_1a0aac7dc9bb59bc9ee9432d35d89c6a9a" prot="private" virt="non-virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>s0_</name></member>
      <member refid="class_quant_lib_1_1_variance_gamma_process_1aca80e6facbe8dbc53786cd421a81abad" prot="public" virt="non-virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>sigma</name></member>
      <member refid="class_quant_lib_1_1_variance_gamma_process_1a1179cec74b764b8bc2c0a263c26a18dd" prot="private" virt="non-virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>sigma_</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process1_d_1a3290404acdbfcbbd6bbf8b035862e803" prot="public" virt="virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>stdDeviation</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a2dd24b794a6b320bc60ba9e1a87bf48e" prot="protected" virt="non-virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>StochasticProcess</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a957ee9776d6048835106ea29ea44927f" prot="protected" virt="non-virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>StochasticProcess</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process1_d_1a8fd2dc83f956da3dd008242ee5a5c926" prot="protected" virt="non-virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>StochasticProcess1D</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process1_d_1a0971f058bea9a93d2ced17c685576686" prot="protected" virt="non-virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>StochasticProcess1D</name></member>
      <member refid="class_quant_lib_1_1_variance_gamma_process_1acda9577bf973d33916f902587f1ca28f" prot="public" virt="non-virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>theta</name></member>
      <member refid="class_quant_lib_1_1_variance_gamma_process_1a03c09a353f916da24d2849bbc4ed55ff" prot="private" virt="non-virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>theta_</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a39c5f08a3779665f9185a558d2b8418d" prot="public" virt="virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>time</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a0f22628658fd2dc702c13c354ef3244e" prot="public" virt="virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process1_d_1afec760c46c7f53d98cea9befd7087508" prot="public" virt="virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>variance</name></member>
      <member refid="class_quant_lib_1_1_variance_gamma_process_1a2e77593f5d0756b55d1248629af975cf" prot="public" virt="non-virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>VarianceGammaProcess</name></member>
      <member refid="class_quant_lib_1_1_variance_gamma_process_1a837c1a4bd9497a0b6fef47b41f6f3b00" prot="public" virt="virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>x0</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a0e2b6a14e675db5abd0ab8965ff7b2c3" prot="public" virt="non-virtual"><scope>QuantLib::VarianceGammaProcess</scope><name>~StochasticProcess</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

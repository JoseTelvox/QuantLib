<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_fwd_to_cot_swap_adapter_factory" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::FwdToCotSwapAdapterFactory</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_market_model_factory" prot="public" virt="non-virtual">QuantLib::MarketModelFactory</basecompoundref>
    <basecompoundref refid="class_quant_lib_1_1_observer" prot="public" virt="non-virtual">QuantLib::Observer</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_fwd_to_cot_swap_adapter_factory_1a4dccb2098e179f19e277b7a7dcc67468" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_market_model_factory" kindref="compound">MarketModelFactory</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;MarketModelFactory&gt; QuantLib::FwdToCotSwapAdapterFactory::forwardFactory_</definition>
        <argsstring></argsstring>
        <name>forwardFactory_</name>
        <qualifiedname>QuantLib::FwdToCotSwapAdapterFactory::forwardFactory_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/fwdtocotswapadapter.hpp" line="63" column="25" bodyfile="ql/models/marketmodels/models/fwdtocotswapadapter.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_fwd_to_cot_swap_adapter_factory_1a84911fa4f4a02fde07f1736213219761" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FwdToCotSwapAdapterFactory::FwdToCotSwapAdapterFactory</definition>
        <argsstring>(const ext::shared_ptr&lt; MarketModelFactory &gt; &amp;forwardFactory)</argsstring>
        <name>FwdToCotSwapAdapterFactory</name>
        <qualifiedname>QuantLib::FwdToCotSwapAdapterFactory::FwdToCotSwapAdapterFactory</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_market_model_factory" kindref="compound">MarketModelFactory</ref> &gt; &amp;</type>
          <declname>forwardFactory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/fwdtocotswapadapter.hpp" line="56" column="9" bodyfile="ql/models/marketmodels/models/fwdtocotswapadapter.cpp" bodystart="82" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fwd_to_cot_swap_adapter_factory_1a694354a7b05122c9d2fdc8783c17744a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_market_model" kindref="compound">MarketModel</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; MarketModel &gt; QuantLib::FwdToCotSwapAdapterFactory::create</definition>
        <argsstring>(const EvolutionDescription &amp;, Size numberOfFactors) const override</argsstring>
        <name>create</name>
        <qualifiedname>QuantLib::FwdToCotSwapAdapterFactory::create</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_market_model_factory_1af6f394565de70ab76edc3f3a52f3f06f">create</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_evolution_description" kindref="compound">EvolutionDescription</ref> &amp;</type>
          <defname>evolution</defname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>numberOfFactors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/fwdtocotswapadapter.hpp" line="58" column="25" bodyfile="ql/models/marketmodels/models/fwdtocotswapadapter.cpp" bodystart="89" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fwd_to_cot_swap_adapter_factory_1a7aa7eb17502f89247b6d2b76e7d54c5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::FwdToCotSwapAdapterFactory::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <qualifiedname>QuantLib::FwdToCotSwapAdapterFactory::update</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_observer_1a07905c55dca858470fcf4a1aea0005aa">update</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must be implemented in derived classes. An instance of Observer does not call this method directly: instead, it will be called by the observables the instance registered with when they need to notify any changes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/fwdtocotswapadapter.hpp" line="60" column="14" bodyfile="ql/models/marketmodels/models/fwdtocotswapadapter.cpp" bodystart="98" bodyend="100"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::FwdToCotSwapAdapterFactory</label>
        <link refid="class_quant_lib_1_1_fwd_to_cot_swap_adapter_factory"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::MarketModelFactory</label>
        <link refid="class_quant_lib_1_1_market_model_factory"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::FwdToCotSwapAdapterFactory</label>
        <link refid="class_quant_lib_1_1_fwd_to_cot_swap_adapter_factory"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::MarketModelFactory</label>
        <link refid="class_quant_lib_1_1_market_model_factory"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </collaborationgraph>
    <location file="ql/models/marketmodels/models/fwdtocotswapadapter.hpp" line="53" column="5" bodyfile="ql/models/marketmodels/models/fwdtocotswapadapter.hpp" bodystart="54" bodyend="64"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_fwd_to_cot_swap_adapter_factory_1a694354a7b05122c9d2fdc8783c17744a" prot="public" virt="virtual"><scope>QuantLib::FwdToCotSwapAdapterFactory</scope><name>create</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::FwdToCotSwapAdapterFactory</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_fwd_to_cot_swap_adapter_factory_1a4dccb2098e179f19e277b7a7dcc67468" prot="private" virt="non-virtual"><scope>QuantLib::FwdToCotSwapAdapterFactory</scope><name>forwardFactory_</name></member>
      <member refid="class_quant_lib_1_1_fwd_to_cot_swap_adapter_factory_1a84911fa4f4a02fde07f1736213219761" prot="public" virt="non-virtual"><scope>QuantLib::FwdToCotSwapAdapterFactory</scope><name>FwdToCotSwapAdapterFactory</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::FwdToCotSwapAdapterFactory</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::FwdToCotSwapAdapterFactory</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::FwdToCotSwapAdapterFactory</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::FwdToCotSwapAdapterFactory</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::FwdToCotSwapAdapterFactory</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::FwdToCotSwapAdapterFactory</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::FwdToCotSwapAdapterFactory</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::FwdToCotSwapAdapterFactory</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::FwdToCotSwapAdapterFactory</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::FwdToCotSwapAdapterFactory</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::FwdToCotSwapAdapterFactory</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::FwdToCotSwapAdapterFactory</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::FwdToCotSwapAdapterFactory</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::FwdToCotSwapAdapterFactory</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_fwd_to_cot_swap_adapter_factory_1a7aa7eb17502f89247b6d2b76e7d54c5d" prot="public" virt="virtual"><scope>QuantLib::FwdToCotSwapAdapterFactory</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_market_model_factory_1aa1cc1449e56eec475f5cfed311e2b2fb" prot="public" virt="non-virtual"><scope>QuantLib::FwdToCotSwapAdapterFactory</scope><name>~MarketModelFactory</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::FwdToCotSwapAdapterFactory</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::FwdToCotSwapAdapterFactory</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

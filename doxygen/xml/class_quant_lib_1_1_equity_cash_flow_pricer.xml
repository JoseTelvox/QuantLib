<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_equity_cash_flow_pricer" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::EquityCashFlowPricer</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_observer" prot="public" virt="virtual">QuantLib::Observer</basecompoundref>
    <basecompoundref refid="class_quant_lib_1_1_observable" prot="public" virt="virtual">QuantLib::Observable</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_equity_quanto_cash_flow_pricer" prot="public" virt="non-virtual">QuantLib::EquityQuantoCashFlowPricer</derivedcompoundref>
    <sectiondef kind="user-defined">
      <header>Observer interface</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_equity_cash_flow_pricer_1aaabae39e6c6d683d985aaea4e3ebfe6a" prot="protected" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_equity_index" kindref="compound">EquityIndex</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;EquityIndex&gt; QuantLib::EquityCashFlowPricer::index_</definition>
        <argsstring></argsstring>
        <name>index_</name>
        <qualifiedname>QuantLib::EquityCashFlowPricer::index_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/equitycashflow.hpp" line="84" column="25" bodyfile="ql/cashflows/equitycashflow.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_equity_cash_flow_pricer_1a88318aee9e33c084800ae0c46afe92c7" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::EquityCashFlowPricer::baseDate_</definition>
        <argsstring></argsstring>
        <name>baseDate_</name>
        <qualifiedname>QuantLib::EquityCashFlowPricer::baseDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/equitycashflow.hpp" line="85" column="14" bodyfile="ql/cashflows/equitycashflow.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_equity_cash_flow_pricer_1a6b6e8794aa861a18f98f7b90c1ecab7d" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::EquityCashFlowPricer::fixingDate_</definition>
        <argsstring></argsstring>
        <name>fixingDate_</name>
        <qualifiedname>QuantLib::EquityCashFlowPricer::fixingDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/equitycashflow.hpp" line="85" column="24" bodyfile="ql/cashflows/equitycashflow.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_equity_cash_flow_pricer_1ad877754eae44a69b649ec9d6d488cd28" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::EquityCashFlowPricer::growthOnlyPayoff_</definition>
        <argsstring></argsstring>
        <name>growthOnlyPayoff_</name>
        <qualifiedname>QuantLib::EquityCashFlowPricer::growthOnlyPayoff_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/equitycashflow.hpp" line="86" column="14" bodyfile="ql/cashflows/equitycashflow.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_equity_cash_flow_pricer_1a8795ddeadfd58e7e4ef14b9c0651f965" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::EquityCashFlowPricer::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <qualifiedname>QuantLib::EquityCashFlowPricer::update</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_observer_1a07905c55dca858470fcf4a1aea0005aa">update</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must be implemented in derived classes. An instance of Observer does not call this method directly: instead, it will be called by the observables the instance registered with when they need to notify any changes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/equitycashflow.hpp" line="81" column="14" bodyfile="ql/cashflows/equitycashflow.hpp" bodystart="81" bodyend="81"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_equity_cash_flow_pricer_1a3b012aa8ffcce7b654c753bb2090f818" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::EquityCashFlowPricer::price</definition>
        <argsstring>() const =0</argsstring>
        <name>price</name>
        <qualifiedname>QuantLib::EquityCashFlowPricer::price</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_equity_quanto_cash_flow_pricer_1aa6973bc0ceb30208c707158930e3a4f6">price</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/equitycashflow.hpp" line="75" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_equity_cash_flow_pricer_1ac6a542cefa8598dc5333314aa8026582" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void QuantLib::EquityCashFlowPricer::initialize</definition>
        <argsstring>(const EquityCashFlow &amp;)=0</argsstring>
        <name>initialize</name>
        <qualifiedname>QuantLib::EquityCashFlowPricer::initialize</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_equity_quanto_cash_flow_pricer_1a5811589f4c75cf5d0ed2346babce9e32">initialize</reimplementedby>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_equity_cash_flow" kindref="compound">EquityCashFlow</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/equitycashflow.hpp" line="76" column="22"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_equity_cash_flow_pricer_1a56b0663ce2ef639c9a925ad8add17df8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::EquityCashFlowPricer::EquityCashFlowPricer</definition>
        <argsstring>()=default</argsstring>
        <name>EquityCashFlowPricer</name>
        <qualifiedname>QuantLib::EquityCashFlowPricer::EquityCashFlowPricer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/equitycashflow.hpp" line="72" column="9"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::EquityCashFlowPricer</label>
        <link refid="class_quant_lib_1_1_equity_cash_flow_pricer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::EquityQuantoCashFlowPricer</label>
        <link refid="class_quant_lib_1_1_equity_quanto_cash_flow_pricer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="2">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="1">
        <label>QuantLib::EquityCashFlowPricer</label>
        <link refid="class_quant_lib_1_1_equity_cash_flow_pricer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>baseDate_</edgelabel>
          <edgelabel>fixingDate_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="2">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </collaborationgraph>
    <location file="ql/cashflows/equitycashflow.hpp" line="70" column="5" bodyfile="ql/cashflows/equitycashflow.hpp" bodystart="70" bodyend="87"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_equity_cash_flow_pricer_1a88318aee9e33c084800ae0c46afe92c7" prot="protected" virt="non-virtual"><scope>QuantLib::EquityCashFlowPricer</scope><name>baseDate_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::EquityCashFlowPricer</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_equity_cash_flow_pricer_1a56b0663ce2ef639c9a925ad8add17df8" prot="public" virt="non-virtual"><scope>QuantLib::EquityCashFlowPricer</scope><name>EquityCashFlowPricer</name></member>
      <member refid="class_quant_lib_1_1_equity_cash_flow_pricer_1a6b6e8794aa861a18f98f7b90c1ecab7d" prot="protected" virt="non-virtual"><scope>QuantLib::EquityCashFlowPricer</scope><name>fixingDate_</name></member>
      <member refid="class_quant_lib_1_1_equity_cash_flow_pricer_1ad877754eae44a69b649ec9d6d488cd28" prot="protected" virt="non-virtual"><scope>QuantLib::EquityCashFlowPricer</scope><name>growthOnlyPayoff_</name></member>
      <member refid="class_quant_lib_1_1_equity_cash_flow_pricer_1aaabae39e6c6d683d985aaea4e3ebfe6a" prot="protected" virt="non-virtual"><scope>QuantLib::EquityCashFlowPricer</scope><name>index_</name></member>
      <member refid="class_quant_lib_1_1_equity_cash_flow_pricer_1ac6a542cefa8598dc5333314aa8026582" prot="public" virt="pure-virtual"><scope>QuantLib::EquityCashFlowPricer</scope><name>initialize</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::EquityCashFlowPricer</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::EquityCashFlowPricer</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::EquityCashFlowPricer</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::EquityCashFlowPricer</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::EquityCashFlowPricer</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::EquityCashFlowPricer</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::EquityCashFlowPricer</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::EquityCashFlowPricer</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::EquityCashFlowPricer</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::EquityCashFlowPricer</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_equity_cash_flow_pricer_1a3b012aa8ffcce7b654c753bb2090f818" prot="public" virt="pure-virtual"><scope>QuantLib::EquityCashFlowPricer</scope><name>price</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::EquityCashFlowPricer</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::EquityCashFlowPricer</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::EquityCashFlowPricer</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::EquityCashFlowPricer</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_equity_cash_flow_pricer_1a8795ddeadfd58e7e4ef14b9c0651f965" prot="public" virt="virtual"><scope>QuantLib::EquityCashFlowPricer</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::EquityCashFlowPricer</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::EquityCashFlowPricer</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

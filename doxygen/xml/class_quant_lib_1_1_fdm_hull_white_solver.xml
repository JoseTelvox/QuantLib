<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_fdm_hull_white_solver" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::FdmHullWhiteSolver</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_lazy_object" prot="public" virt="non-virtual">QuantLib::LazyObject</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_hull_white_solver_1a97f6a6a07cdce07f8f112b7023c426c1" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_hull_white" kindref="compound">HullWhite</ref> &gt;</type>
        <definition>const Handle&lt;HullWhite&gt; QuantLib::FdmHullWhiteSolver::model_</definition>
        <argsstring></argsstring>
        <name>model_</name>
        <qualifiedname>QuantLib::FdmHullWhiteSolver::model_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/solvers/fdmhullwhitesolver.hpp" line="48" column="22" bodyfile="ql/methods/finitedifferences/solvers/fdmhullwhitesolver.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_hull_white_solver_1affed7c14b175a3432f1cf75bc8a02cf1" prot="private" static="no" mutable="no">
        <type>const <ref refid="struct_quant_lib_1_1_fdm_solver_desc" kindref="compound">FdmSolverDesc</ref></type>
        <definition>const FdmSolverDesc QuantLib::FdmHullWhiteSolver::solverDesc_</definition>
        <argsstring></argsstring>
        <name>solverDesc_</name>
        <qualifiedname>QuantLib::FdmHullWhiteSolver::solverDesc_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/solvers/fdmhullwhitesolver.hpp" line="49" column="29" bodyfile="ql/methods/finitedifferences/solvers/fdmhullwhitesolver.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_hull_white_solver_1a5d1becfd59869234a654fd118f079789" prot="private" static="no" mutable="no">
        <type>const <ref refid="struct_quant_lib_1_1_fdm_scheme_desc" kindref="compound">FdmSchemeDesc</ref></type>
        <definition>const FdmSchemeDesc QuantLib::FdmHullWhiteSolver::schemeDesc_</definition>
        <argsstring></argsstring>
        <name>schemeDesc_</name>
        <qualifiedname>QuantLib::FdmHullWhiteSolver::schemeDesc_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/solvers/fdmhullwhitesolver.hpp" line="50" column="29" bodyfile="ql/methods/finitedifferences/solvers/fdmhullwhitesolver.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_hull_white_solver_1a502ed9d11cb2b6617b812521cae7a312" prot="private" static="no" mutable="yes">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_fdm1_dim_solver" kindref="compound">Fdm1DimSolver</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;Fdm1DimSolver&gt; QuantLib::FdmHullWhiteSolver::solver_</definition>
        <argsstring></argsstring>
        <name>solver_</name>
        <qualifiedname>QuantLib::FdmHullWhiteSolver::solver_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/solvers/fdmhullwhitesolver.hpp" line="52" column="33" bodyfile="ql/methods/finitedifferences/solvers/fdmhullwhitesolver.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_hull_white_solver_1afd5486837c1a498c8180f89b2e13da04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FdmHullWhiteSolver::FdmHullWhiteSolver</definition>
        <argsstring>(Handle&lt; HullWhite &gt; model, FdmSolverDesc solverDesc, const FdmSchemeDesc &amp;schemeDesc=FdmSchemeDesc::Hundsdorfer())</argsstring>
        <name>FdmHullWhiteSolver</name>
        <qualifiedname>QuantLib::FdmHullWhiteSolver::FdmHullWhiteSolver</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_hull_white" kindref="compound">HullWhite</ref> &gt;</type>
          <declname>model</declname>
        </param>
        <param>
          <type><ref refid="struct_quant_lib_1_1_fdm_solver_desc" kindref="compound">FdmSolverDesc</ref></type>
          <declname>solverDesc</declname>
        </param>
        <param>
          <type>const <ref refid="struct_quant_lib_1_1_fdm_scheme_desc" kindref="compound">FdmSchemeDesc</ref> &amp;</type>
          <declname>schemeDesc</declname>
          <defval>FdmSchemeDesc::Hundsdorfer()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/solvers/fdmhullwhitesolver.hpp" line="38" column="9" bodyfile="ql/methods/finitedifferences/solvers/fdmhullwhitesolver.cpp" bodystart="32" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_hull_white_solver_1a6b86168182a9970b0cf84db15577f65f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::FdmHullWhiteSolver::valueAt</definition>
        <argsstring>(Real r) const</argsstring>
        <name>valueAt</name>
        <qualifiedname>QuantLib::FdmHullWhiteSolver::valueAt</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/solvers/fdmhullwhitesolver.hpp" line="42" column="14" bodyfile="ql/methods/finitedifferences/solvers/fdmhullwhitesolver.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_hull_white_solver_1a2523f3a410ea8515112bb4bf06e3542d" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::FdmHullWhiteSolver::performCalculations</definition>
        <argsstring>() const override</argsstring>
        <name>performCalculations</name>
        <qualifiedname>QuantLib::FdmHullWhiteSolver::performCalculations</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_lazy_object_1aafa5583a3743d9f93fa40da5b62e1ff8">performCalculations</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must implement any calculations which must be (re)done in order to calculate the desired results. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/solvers/fdmhullwhitesolver.hpp" line="45" column="14" bodyfile="ql/methods/finitedifferences/solvers/fdmhullwhitesolver.cpp" bodystart="40" bodyend="45"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::FdmHullWhiteSolver</label>
        <link refid="class_quant_lib_1_1_fdm_hull_white_solver"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::FdmHullWhiteSolver</label>
        <link refid="class_quant_lib_1_1_fdm_hull_white_solver"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </collaborationgraph>
    <location file="ql/methods/finitedifferences/solvers/fdmhullwhitesolver.hpp" line="36" column="5" bodyfile="ql/methods/finitedifferences/solvers/fdmhullwhitesolver.hpp" bodystart="36" bodyend="53"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_lazy_object_1a02070ea7442d30625992c1711030d4b8" prot="protected" virt="non-virtual"><scope>QuantLib::FdmHullWhiteSolver</scope><name>alwaysForward_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a17c9433135a259e4776baec66204a484" prot="public" virt="non-virtual"><scope>QuantLib::FdmHullWhiteSolver</scope><name>alwaysForwardNotifications</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a5244c7f83592375a0ea9048296435fd1" prot="protected" virt="virtual"><scope>QuantLib::FdmHullWhiteSolver</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a58b4986a80efa18634483a92c121e26e" prot="protected" virt="non-virtual"><scope>QuantLib::FdmHullWhiteSolver</scope><name>calculated_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::FdmHullWhiteSolver</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_fdm_hull_white_solver_1afd5486837c1a498c8180f89b2e13da04" prot="public" virt="non-virtual"><scope>QuantLib::FdmHullWhiteSolver</scope><name>FdmHullWhiteSolver</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1afac6ee19c3107c453e1347dd8000e023" prot="public" virt="non-virtual"><scope>QuantLib::FdmHullWhiteSolver</scope><name>forwardFirstNotificationOnly</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7157f41e83f2c5d924f5c5bafda04d1d" prot="public" virt="non-virtual"><scope>QuantLib::FdmHullWhiteSolver</scope><name>freeze</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7bb721fe00c6854e602758aba629ab77" prot="protected" virt="non-virtual"><scope>QuantLib::FdmHullWhiteSolver</scope><name>frozen_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a0a7c5d42815a4e16ee2158e24dbfc748" prot="public" virt="non-virtual"><scope>QuantLib::FdmHullWhiteSolver</scope><name>isCalculated</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::FdmHullWhiteSolver</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a26f18f4ff7faaaebd8eae50e064b493e" prot="public" virt="non-virtual"><scope>QuantLib::FdmHullWhiteSolver</scope><name>LazyObject</name></member>
      <member refid="class_quant_lib_1_1_fdm_hull_white_solver_1a97f6a6a07cdce07f8f112b7023c426c1" prot="private" virt="non-virtual"><scope>QuantLib::FdmHullWhiteSolver</scope><name>model_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::FdmHullWhiteSolver</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::FdmHullWhiteSolver</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::FdmHullWhiteSolver</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::FdmHullWhiteSolver</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::FdmHullWhiteSolver</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::FdmHullWhiteSolver</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::FdmHullWhiteSolver</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::FdmHullWhiteSolver</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::QuantLib::Observer::"><scope>QuantLib::FdmHullWhiteSolver</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_fdm_hull_white_solver_1a2523f3a410ea8515112bb4bf06e3542d" prot="protected" virt="virtual"><scope>QuantLib::FdmHullWhiteSolver</scope><name>performCalculations</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a70c9b24e50132408d8d9ce4f6674662a" prot="public" virt="non-virtual"><scope>QuantLib::FdmHullWhiteSolver</scope><name>recalculate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::FdmHullWhiteSolver</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::FdmHullWhiteSolver</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_fdm_hull_white_solver_1a5d1becfd59869234a654fd118f079789" prot="private" virt="non-virtual"><scope>QuantLib::FdmHullWhiteSolver</scope><name>schemeDesc_</name></member>
      <member refid="class_quant_lib_1_1_fdm_hull_white_solver_1a502ed9d11cb2b6617b812521cae7a312" prot="private" virt="non-virtual"><scope>QuantLib::FdmHullWhiteSolver</scope><name>solver_</name></member>
      <member refid="class_quant_lib_1_1_fdm_hull_white_solver_1affed7c14b175a3432f1cf75bc8a02cf1" prot="private" virt="non-virtual"><scope>QuantLib::FdmHullWhiteSolver</scope><name>solverDesc_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a2e0e4786666453024b9d4e0761f2770b" prot="public" virt="non-virtual"><scope>QuantLib::FdmHullWhiteSolver</scope><name>unfreeze</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::FdmHullWhiteSolver</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::FdmHullWhiteSolver</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1adee2bf49be5c4c78736be293321a856d" prot="public" virt="virtual"><scope>QuantLib::FdmHullWhiteSolver</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_fdm_hull_white_solver_1a6b86168182a9970b0cf84db15577f65f" prot="public" virt="non-virtual"><scope>QuantLib::FdmHullWhiteSolver</scope><name>valueAt</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a9d719c43bb627177a90d7d12324a2d6e" prot="public" virt="non-virtual"><scope>QuantLib::FdmHullWhiteSolver</scope><name>~LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::FdmHullWhiteSolver</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::FdmHullWhiteSolver</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

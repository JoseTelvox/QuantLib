<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_b_spline" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::BSpline</compoundname>
    <includes refid="bspline_8hpp" local="no">bspline.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_b_spline_1a6d5d3f198249d599f6e497812b530506" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
        <definition>Natural QuantLib::BSpline::p_</definition>
        <argsstring></argsstring>
        <name>p_</name>
        <qualifiedname>QuantLib::BSpline::p_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/bspline.hpp" line="70" column="17" bodyfile="ql/math/bspline.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_b_spline_1ae7c195210f54e87edeb162561c90ab78" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
        <definition>Natural QuantLib::BSpline::n_</definition>
        <argsstring></argsstring>
        <name>n_</name>
        <qualifiedname>QuantLib::BSpline::n_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/bspline.hpp" line="72" column="17" bodyfile="ql/math/bspline.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_b_spline_1ae56117b860d57079e6daaf4dfded83c6" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::BSpline::knots_</definition>
        <argsstring></argsstring>
        <name>knots_</name>
        <qualifiedname>QuantLib::BSpline::knots_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/bspline.hpp" line="73" column="21" bodyfile="ql/math/bspline.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_b_spline_1a86168745a0d9a15c68c76afda7a93b71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::BSpline::BSpline</definition>
        <argsstring>(Natural p, Natural n, const std::vector&lt; Real &gt; &amp;knots)</argsstring>
        <name>BSpline</name>
        <qualifiedname>QuantLib::BSpline::BSpline</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>knots</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/bspline.hpp" line="60" column="9" bodyfile="ql/math/bspline.cpp" bodystart="25" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_b_spline_1aa7b8007ae3ca1001f3b304d39e48127d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::BSpline::operator()</definition>
        <argsstring>(Natural i, Real x) const</argsstring>
        <name>operator()</name>
        <qualifiedname>QuantLib::BSpline::operator()</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/bspline.hpp" line="64" column="14" bodyfile="ql/math/bspline.cpp" bodystart="43" bodyend="46"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_b_spline_1ac89df120c820c558b6db136d2459beed" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::BSpline::N</definition>
        <argsstring>(Natural i, Natural p, Real x) const</argsstring>
        <name>N</name>
        <qualifiedname>QuantLib::BSpline::N</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/bspline.hpp" line="68" column="14" bodyfile="ql/math/bspline.cpp" bodystart="49" bodyend="57"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>B-spline basis functions. </para>
    </briefdescription>
    <detaileddescription>
<para>Follows treatment and notation from:</para>
<para>Weisstein, Eric W. &quot;B-Spline.&quot; From MathWorld<ndash/>A Wolfram Web Resource. <ulink url="http://mathworld.wolfram.com/B-Spline.html">http://mathworld.wolfram.com/B-Spline.html</ulink></para>
<para><formula id="239">$ (p+1) $</formula>-th order B-spline (or p degree polynomial) basis functions <formula id="240">$ N_{i,p}(x), i = 0,1,2 \ldots n $</formula>, with <formula id="241">$ n+1 $</formula> control points, or equivalently, an associated knot vector of size <formula id="242">$ p+n+2 $</formula> defined at the increasingly sorted points <formula id="243">$ (x_0, x_1 \ldots x_{n+p+1}) $</formula>. A linear B-spline has <formula id="244">$ p=1 $</formula>, quadratic B-spline has <formula id="245">$ p=2 $</formula>, a cubic B-spline has <formula id="246">$ p=3 $</formula>, etc.</para>
<para>The B-spline basis functions are defined recursively as follows:</para>
<para><formula id="247">\[\begin{array}{rcl}
N_{i,0}(x) &amp;=&amp; 1   \textrm{\ if\ } x_{i} \leq x &lt; x_{i+1} \\
           &amp;=&amp; 0   \textrm{\ otherwise} \\
N_{i,p}(x) &amp;=&amp; N_{i,p-1}(x) \frac{(x - x_{i})}{ (x_{i+p-1} - x_{i})} +
               N_{i+1,p-1}(x) \frac{(x_{i+p} - x)}{(x_{i+p} - x_{i+1})}
\end{array}
\]</formula> </para>
    </detaileddescription>
    <location file="ql/math/bspline.hpp" line="58" column="5" bodyfile="ql/math/bspline.hpp" bodystart="58" bodyend="74"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_b_spline_1a86168745a0d9a15c68c76afda7a93b71" prot="public" virt="non-virtual"><scope>QuantLib::BSpline</scope><name>BSpline</name></member>
      <member refid="class_quant_lib_1_1_b_spline_1ae56117b860d57079e6daaf4dfded83c6" prot="private" virt="non-virtual"><scope>QuantLib::BSpline</scope><name>knots_</name></member>
      <member refid="class_quant_lib_1_1_b_spline_1ac89df120c820c558b6db136d2459beed" prot="private" virt="non-virtual"><scope>QuantLib::BSpline</scope><name>N</name></member>
      <member refid="class_quant_lib_1_1_b_spline_1ae7c195210f54e87edeb162561c90ab78" prot="private" virt="non-virtual"><scope>QuantLib::BSpline</scope><name>n_</name></member>
      <member refid="class_quant_lib_1_1_b_spline_1aa7b8007ae3ca1001f3b304d39e48127d" prot="public" virt="non-virtual"><scope>QuantLib::BSpline</scope><name>operator()</name></member>
      <member refid="class_quant_lib_1_1_b_spline_1a6d5d3f198249d599f6e497812b530506" prot="private" virt="non-virtual"><scope>QuantLib::BSpline</scope><name>p_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

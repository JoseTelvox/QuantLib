<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_recovery_rate_quote" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::RecoveryRateQuote</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_quote" prot="public" virt="non-virtual">QuantLib::Quote</basecompoundref>
    <includes refid="recoveryratequote_8hpp" local="no">recoveryratequote.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Modifiers</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_recovery_rate_quote_1a01cdd1f0b49b4048d57eb944c8fd5f5b" prot="private" static="yes" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::RecoveryRateQuote::IsdaConvRecoveries</definition>
        <argsstring>[]</argsstring>
        <name>IsdaConvRecoveries</name>
        <qualifiedname>QuantLib::RecoveryRateQuote::IsdaConvRecoveries</qualifiedname>
        <initializer>=  {
        0.65,
        0.4, 
        0.2, 
        0.2, 
        0.15 
    }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/recoveryratequote.hpp" line="63" column="27" bodyfile="ql/experimental/credit/recoveryratequote.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_recovery_rate_quote_1a0ed14550e656a5c705e0c45c0d0644a2" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a197bfb2321381d9a5d8c94b56f6ef6cf" kindref="member">Seniority</ref></type>
        <definition>Seniority QuantLib::RecoveryRateQuote::seniority_</definition>
        <argsstring></argsstring>
        <name>seniority_</name>
        <qualifiedname>QuantLib::RecoveryRateQuote::seniority_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/recoveryratequote.hpp" line="65" column="19" bodyfile="ql/experimental/credit/recoveryratequote.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_recovery_rate_quote_1a0fd6c1563f128666b180c410a7fa6e4e" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::RecoveryRateQuote::recoveryRate_</definition>
        <argsstring></argsstring>
        <name>recoveryRate_</name>
        <qualifiedname>QuantLib::RecoveryRateQuote::recoveryRate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/recoveryratequote.hpp" line="67" column="14" bodyfile="ql/experimental/credit/recoveryratequote.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_recovery_rate_quote_1aa34a3da228072220e09bfb91c8f392ac" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>std::map&lt; <ref refid="namespace_quant_lib_1a197bfb2321381d9a5d8c94b56f6ef6cf" kindref="member">Seniority</ref>, <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::map&lt; Seniority, Real &gt; QuantLib::RecoveryRateQuote::makeIsdaMap</definition>
        <argsstring>(const Real(&amp;(arrayIsdaRR))[N])</argsstring>
        <name>makeIsdaMap</name>
        <qualifiedname>QuantLib::RecoveryRateQuote::makeIsdaMap</qualifiedname>
        <param>
          <type>const </type>
          <declname>Real</declname>
          <array>(&amp;(arrayIsdaRR))[N]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Turn a set of recoveries into a seniority-recovery map (intended to be used in an event construction) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/recoveryratequote.hpp" line="59" column="25" bodyfile="ql/experimental/credit/recoveryratequote.hpp" bodystart="94" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_recovery_rate_quote_1ae96af9c72a0871d9003331d7869f3be6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::RecoveryRateQuote::setValue</definition>
        <argsstring>(Real value=Null&lt; Real &gt;())</argsstring>
        <name>setValue</name>
        <qualifiedname>QuantLib::RecoveryRateQuote::setValue</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>value</declname>
          <defval><ref refid="class_quant_lib_1_1_null" kindref="compound">Null</ref>&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;()</defval>
        </param>
        <briefdescription>
<para>returns the difference between the new value and the old value </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/recoveryratequote.hpp" line="50" column="14" bodyfile="ql/experimental/credit/recoveryratequote.cpp" bodystart="45" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_recovery_rate_quote_1ab8eb3875d64c139f6259892a3cccf9b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::RecoveryRateQuote::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <qualifiedname>QuantLib::RecoveryRateQuote::reset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/recoveryratequote.hpp" line="51" column="14" bodyfile="ql/experimental/credit/recoveryratequote.cpp" bodystart="54" bodyend="57"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Quote interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_recovery_rate_quote_1ad79ba34ef57c6400fcd5abda39551140" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::RecoveryRateQuote::value</definition>
        <argsstring>() const override</argsstring>
        <name>value</name>
        <qualifiedname>QuantLib::RecoveryRateQuote::value</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_quote_1a25f93d1c25434ae28f20f9416b497ccb">value</reimplements>
        <briefdescription>
<para>returns the current value </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/recoveryratequote.hpp" line="43" column="14" bodyfile="ql/experimental/credit/recoveryratequote.hpp" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_recovery_rate_quote_1a61bc19817ad9a9608a7d331bfbbffcd1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a197bfb2321381d9a5d8c94b56f6ef6cf" kindref="member">Seniority</ref></type>
        <definition>Seniority QuantLib::RecoveryRateQuote::seniority</definition>
        <argsstring>() const</argsstring>
        <name>seniority</name>
        <qualifiedname>QuantLib::RecoveryRateQuote::seniority</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/recoveryratequote.hpp" line="44" column="19" bodyfile="ql/experimental/credit/recoveryratequote.hpp" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_recovery_rate_quote_1a8091574023388fb651dad2e236a2e289" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool QuantLib::RecoveryRateQuote::isValid</definition>
        <argsstring>() const override</argsstring>
        <name>isValid</name>
        <qualifiedname>QuantLib::RecoveryRateQuote::isValid</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_quote_1a9a340a974b8403b9385867b62bb8ae2d">isValid</reimplements>
        <briefdescription>
<para>returns true if the <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> holds a valid value </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/recoveryratequote.hpp" line="45" column="14" bodyfile="ql/experimental/credit/recoveryratequote.hpp" bodystart="79" bodyend="83"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_quant_lib_1_1_recovery_rate_quote_1a52d59e8fe55dcf92b0f141eabd3b57a3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::map&lt; <ref refid="namespace_quant_lib_1a197bfb2321381d9a5d8c94b56f6ef6cf" kindref="member">Seniority</ref>, <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::map&lt; Seniority, Real &gt; makeIsdaConvMap</definition>
        <argsstring>()</argsstring>
        <name>makeIsdaConvMap</name>
        <qualifiedname>QuantLib::RecoveryRateQuote::makeIsdaConvMap</qualifiedname>
        <briefdescription>
<para>Helper function for conventional recoveries. Returns the ISDA. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/recoveryratequote.hpp" line="31" column="25" bodyfile="ql/experimental/credit/recoveryratequote.cpp" bodystart="32" bodyend="35"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_quant_lib_1_1_recovery_rate_quote_1a1f31dd70ffb63d01fe51c0630cac0d1b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>static Real QuantLib::RecoveryRateQuote::conventionalRecovery</definition>
        <argsstring>(Seniority sen)</argsstring>
        <name>conventionalRecovery</name>
        <qualifiedname>QuantLib::RecoveryRateQuote::conventionalRecovery</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a197bfb2321381d9a5d8c94b56f6ef6cf" kindref="member">Seniority</ref></type>
          <declname>sen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a map with the ISDA conventional (values by default) of the recovery rate per each ISDA seniority. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/recoveryratequote.hpp" line="36" column="21" bodyfile="ql/experimental/credit/recoveryratequote.hpp" bodystart="36" bodyend="38"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_recovery_rate_quote_1a52dae5eceda933e32a5f2d342ccdeff8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::RecoveryRateQuote::RecoveryRateQuote</definition>
        <argsstring>(Real value=Null&lt; Real &gt;(), Seniority seniority=NoSeniority)</argsstring>
        <name>RecoveryRateQuote</name>
        <qualifiedname>QuantLib::RecoveryRateQuote::RecoveryRateQuote</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>value</declname>
          <defval><ref refid="class_quant_lib_1_1_null" kindref="compound">Null</ref>&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;()</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a197bfb2321381d9a5d8c94b56f6ef6cf" kindref="member">Seniority</ref></type>
          <declname>seniority</declname>
          <defval>NoSeniority</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/recoveryratequote.hpp" line="39" column="9" bodyfile="ql/experimental/credit/recoveryratequote.cpp" bodystart="37" bodyend="43"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Stores a recovery rate market quote and the associated seniority. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="2">
        <label>QuantLib::Quote</label>
        <link refid="class_quant_lib_1_1_quote"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::RecoveryRateQuote</label>
        <link refid="class_quant_lib_1_1_recovery_rate_quote"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="2">
        <label>QuantLib::Quote</label>
        <link refid="class_quant_lib_1_1_quote"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::RecoveryRateQuote</label>
        <link refid="class_quant_lib_1_1_recovery_rate_quote"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/credit/recoveryratequote.hpp" line="30" column="5" bodyfile="ql/experimental/credit/recoveryratequote.hpp" bodystart="30" bodyend="68"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_recovery_rate_quote_1a1f31dd70ffb63d01fe51c0630cac0d1b" prot="public" virt="non-virtual"><scope>QuantLib::RecoveryRateQuote</scope><name>conventionalRecovery</name></member>
      <member refid="class_quant_lib_1_1_recovery_rate_quote_1a01cdd1f0b49b4048d57eb944c8fd5f5b" prot="private" virt="non-virtual"><scope>QuantLib::RecoveryRateQuote</scope><name>IsdaConvRecoveries</name></member>
      <member refid="class_quant_lib_1_1_recovery_rate_quote_1a8091574023388fb651dad2e236a2e289" prot="public" virt="virtual"><scope>QuantLib::RecoveryRateQuote</scope><name>isValid</name></member>
      <member refid="class_quant_lib_1_1_recovery_rate_quote_1a52d59e8fe55dcf92b0f141eabd3b57a3" prot="private" virt="non-virtual"><scope>QuantLib::RecoveryRateQuote</scope><name>makeIsdaConvMap</name></member>
      <member refid="class_quant_lib_1_1_recovery_rate_quote_1aa34a3da228072220e09bfb91c8f392ac" prot="public" virt="non-virtual"><scope>QuantLib::RecoveryRateQuote</scope><name>makeIsdaMap</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::RecoveryRateQuote</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::RecoveryRateQuote</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Quote::"><scope>QuantLib::RecoveryRateQuote</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Quote::"><scope>QuantLib::RecoveryRateQuote</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual"><scope>QuantLib::RecoveryRateQuote</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Quote::"><scope>QuantLib::RecoveryRateQuote</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_recovery_rate_quote_1a0fd6c1563f128666b180c410a7fa6e4e" prot="private" virt="non-virtual"><scope>QuantLib::RecoveryRateQuote</scope><name>recoveryRate_</name></member>
      <member refid="class_quant_lib_1_1_recovery_rate_quote_1a52dae5eceda933e32a5f2d342ccdeff8" prot="public" virt="non-virtual"><scope>QuantLib::RecoveryRateQuote</scope><name>RecoveryRateQuote</name></member>
      <member refid="class_quant_lib_1_1_recovery_rate_quote_1ab8eb3875d64c139f6259892a3cccf9b4" prot="public" virt="non-virtual"><scope>QuantLib::RecoveryRateQuote</scope><name>reset</name></member>
      <member refid="class_quant_lib_1_1_recovery_rate_quote_1a61bc19817ad9a9608a7d331bfbbffcd1" prot="public" virt="non-virtual"><scope>QuantLib::RecoveryRateQuote</scope><name>seniority</name></member>
      <member refid="class_quant_lib_1_1_recovery_rate_quote_1a0ed14550e656a5c705e0c45c0d0644a2" prot="private" virt="non-virtual"><scope>QuantLib::RecoveryRateQuote</scope><name>seniority_</name></member>
      <member refid="class_quant_lib_1_1_recovery_rate_quote_1ae96af9c72a0871d9003331d7869f3be6" prot="public" virt="non-virtual"><scope>QuantLib::RecoveryRateQuote</scope><name>setValue</name></member>
      <member refid="class_quant_lib_1_1_recovery_rate_quote_1ad79ba34ef57c6400fcd5abda39551140" prot="public" virt="virtual"><scope>QuantLib::RecoveryRateQuote</scope><name>value</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::RecoveryRateQuote</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_quote_1a0433957cb1683b2ca329ef56bd741143" prot="public" virt="non-virtual"><scope>QuantLib::RecoveryRateQuote</scope><name>~Quote</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

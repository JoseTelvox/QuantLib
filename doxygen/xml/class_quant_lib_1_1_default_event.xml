<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_default_event" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::DefaultEvent</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_event" prot="public" virt="non-virtual">QuantLib::Event</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_bankruptcy_event" prot="public" virt="non-virtual">QuantLib::BankruptcyEvent</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_failure_to_pay_event" prot="public" virt="non-virtual">QuantLib::FailureToPayEvent</derivedcompoundref>
    <includes refid="defaultevent_8hpp" local="no">defaultevent.hpp</includes>
    <innerclass refid="class_quant_lib_1_1_default_event_1_1_default_settlement" prot="public">QuantLib::DefaultEvent::DefaultSettlement</innerclass>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_quant_lib_1_1_default_event_1ab68e4e1c2be54f2db22577c6fb2e1bac" prot="private" static="no">
        <type>std::map&lt; <ref refid="namespace_quant_lib_1a197bfb2321381d9a5d8c94b56f6ef6cf" kindref="member">Seniority</ref>, <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>typedef std::map&lt;Seniority, Real&gt; QuantLib::DefaultEvent::rate_map</definition>
        <argsstring></argsstring>
        <name>rate_map</name>
        <qualifiedname>QuantLib::DefaultEvent::rate_map</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultevent.hpp" line="86" column="26" bodyfile="ql/experimental/credit/defaultevent.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_default_event_1ac043bda03ecee2ad7d9c4d41441c7247" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_currency" kindref="compound">Currency</ref></type>
        <definition>Currency QuantLib::DefaultEvent::bondsCurrency_</definition>
        <argsstring></argsstring>
        <name>bondsCurrency_</name>
        <qualifiedname>QuantLib::DefaultEvent::bondsCurrency_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultevent.hpp" line="168" column="18" bodyfile="ql/experimental/credit/defaultevent.hpp" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_default_event_1a53ebbbd6535a680105b1dd3a582be193" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::DefaultEvent::defaultDate_</definition>
        <argsstring></argsstring>
        <name>defaultDate_</name>
        <qualifiedname>QuantLib::DefaultEvent::defaultDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultevent.hpp" line="169" column="14" bodyfile="ql/experimental/credit/defaultevent.hpp" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_default_event_1ab96393cb297c5a5429a6211e947c81ea" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_default_type" kindref="compound">DefaultType</ref></type>
        <definition>DefaultType QuantLib::DefaultEvent::eventType_</definition>
        <argsstring></argsstring>
        <name>eventType_</name>
        <qualifiedname>QuantLib::DefaultEvent::eventType_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultevent.hpp" line="170" column="21" bodyfile="ql/experimental/credit/defaultevent.hpp" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_default_event_1aa9a5d304d7903d14b3e86f1b784a71b2" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a197bfb2321381d9a5d8c94b56f6ef6cf" kindref="member">Seniority</ref></type>
        <definition>Seniority QuantLib::DefaultEvent::bondsSeniority_</definition>
        <argsstring></argsstring>
        <name>bondsSeniority_</name>
        <qualifiedname>QuantLib::DefaultEvent::bondsSeniority_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultevent.hpp" line="171" column="19" bodyfile="ql/experimental/credit/defaultevent.hpp" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_default_event_1a970a1a610ce414a7128bb3ba53f314e7" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_default_event_1_1_default_settlement" kindref="compound">DefaultSettlement</ref></type>
        <definition>DefaultSettlement QuantLib::DefaultEvent::defSettlement_</definition>
        <argsstring></argsstring>
        <name>defSettlement_</name>
        <qualifiedname>QuantLib::DefaultEvent::defSettlement_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultevent.hpp" line="172" column="27" bodyfile="ql/experimental/credit/defaultevent.hpp" bodystart="172" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_default_event_1ad2156165e941013181bbdc25c420a739" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::DefaultEvent::DefaultEvent</definition>
        <argsstring>(const Date &amp;creditEventDate, const DefaultType &amp;atomicEvType, Currency curr, Seniority bondsSen, const Date &amp;settleDate=Date(), const std::map&lt; Seniority, Real &gt; &amp;recoveryRates=rate_map())</argsstring>
        <name>DefaultEvent</name>
        <qualifiedname>QuantLib::DefaultEvent::DefaultEvent</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>creditEventDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_default_type" kindref="compound">DefaultType</ref> &amp;</type>
          <declname>atomicEvType</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_currency" kindref="compound">Currency</ref></type>
          <declname>curr</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a197bfb2321381d9a5d8c94b56f6ef6cf" kindref="member">Seniority</ref></type>
          <declname>bondsSen</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>settleDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>const std::map&lt; <ref refid="namespace_quant_lib_1a197bfb2321381d9a5d8c94b56f6ef6cf" kindref="member">Seniority</ref>, <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>recoveryRates</declname>
          <defval>rate_map()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Credit event with optional settlement information. Represents a credit event that has taken place. Realized events are of an atomic type. If the settlement information is given seniorities present are the seniorities/bonds affected by the event. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultevent.hpp" line="94" column="9" bodyfile="ql/experimental/credit/defaultevent.cpp" bodystart="90" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_default_event_1ac2c630b1c40a6a2e8bfe9110ec377bc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::DefaultEvent::DefaultEvent</definition>
        <argsstring>(const Date &amp;creditEventDate, const DefaultType &amp;atomicEvType, Currency curr, Seniority bondsSen, const Date &amp;settleDate, Real recoveryRate)</argsstring>
        <name>DefaultEvent</name>
        <qualifiedname>QuantLib::DefaultEvent::DefaultEvent</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>creditEventDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_default_type" kindref="compound">DefaultType</ref> &amp;</type>
          <declname>atomicEvType</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_currency" kindref="compound">Currency</ref></type>
          <declname>curr</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a197bfb2321381d9a5d8c94b56f6ef6cf" kindref="member">Seniority</ref></type>
          <declname>bondsSen</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>settleDate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>recoveryRate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Use NoSeniority to settle to all seniorities with that recovery. In that case the event is assumed to have affected all seniorities. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultevent.hpp" line="105" column="9" bodyfile="ql/experimental/credit/defaultevent.cpp" bodystart="108" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_default_event_1abc0b7e5c99a04a401c762d3dc444b5b9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::DefaultEvent::date</definition>
        <argsstring>() const override</argsstring>
        <name>date</name>
        <qualifiedname>QuantLib::DefaultEvent::date</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_event_1a7a690f69956e5d1f7175d7d7f879b9af">date</reimplements>
        <briefdescription>
<para>returns the date at which the event occurs </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultevent.hpp" line="113" column="14" bodyfile="ql/experimental/credit/defaultevent.cpp" bodystart="29" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_default_event_1a91f3aecbf24e78268902705ed0d0478e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::DefaultEvent::isRestructuring</definition>
        <argsstring>() const</argsstring>
        <name>isRestructuring</name>
        <qualifiedname>QuantLib::DefaultEvent::isRestructuring</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultevent.hpp" line="114" column="14" bodyfile="ql/experimental/credit/defaultevent.hpp" bodystart="114" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_default_event_1a66e0d085b0eccb622866c3571fbcd565" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::DefaultEvent::isDefault</definition>
        <argsstring>() const</argsstring>
        <name>isDefault</name>
        <qualifiedname>QuantLib::DefaultEvent::isDefault</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultevent.hpp" line="115" column="14" bodyfile="ql/experimental/credit/defaultevent.hpp" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_default_event_1a7aa16abb69d9b163a139aecc8a6bf0e7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::DefaultEvent::hasSettled</definition>
        <argsstring>() const</argsstring>
        <name>hasSettled</name>
        <qualifiedname>QuantLib::DefaultEvent::hasSettled</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultevent.hpp" line="116" column="14" bodyfile="ql/experimental/credit/defaultevent.hpp" bodystart="116" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_default_event_1a60dd35ba050ff748407c3ddcf08dc2ac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_default_event_1_1_default_settlement" kindref="compound">DefaultSettlement</ref> &amp;</type>
        <definition>const DefaultSettlement &amp; QuantLib::DefaultEvent::settlement</definition>
        <argsstring>() const</argsstring>
        <name>settlement</name>
        <qualifiedname>QuantLib::DefaultEvent::settlement</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultevent.hpp" line="119" column="33" bodyfile="ql/experimental/credit/defaultevent.hpp" bodystart="119" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_default_event_1a6dd8f54bd1553de093d0bd702ec07767" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_default_type" kindref="compound">DefaultType</ref> &amp;</type>
        <definition>const DefaultType &amp; QuantLib::DefaultEvent::defaultType</definition>
        <argsstring>() const</argsstring>
        <name>defaultType</name>
        <qualifiedname>QuantLib::DefaultEvent::defaultType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultevent.hpp" line="122" column="27" bodyfile="ql/experimental/credit/defaultevent.hpp" bodystart="122" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_default_event_1a493b535b6b7f84bfedeca3ce9cd4abfb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_currency" kindref="compound">Currency</ref> &amp;</type>
        <definition>const Currency &amp; QuantLib::DefaultEvent::currency</definition>
        <argsstring>() const</argsstring>
        <name>currency</name>
        <qualifiedname>QuantLib::DefaultEvent::currency</qualifiedname>
        <briefdescription>
<para>returns the currency of the bond this event refers to. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultevent.hpp" line="126" column="24" bodyfile="ql/experimental/credit/defaultevent.hpp" bodystart="126" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_default_event_1a14c3ef33a534d6c8a8b2ae9791258cd0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a197bfb2321381d9a5d8c94b56f6ef6cf" kindref="member">Seniority</ref></type>
        <definition>Seniority QuantLib::DefaultEvent::eventSeniority</definition>
        <argsstring>() const</argsstring>
        <name>eventSeniority</name>
        <qualifiedname>QuantLib::DefaultEvent::eventSeniority</qualifiedname>
        <briefdescription>
<para>returns the seniority of the bond that triggered the event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultevent.hpp" line="130" column="19" bodyfile="ql/experimental/credit/defaultevent.hpp" bodystart="130" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_default_event_1a0b98ad9f021578a1e8c0f053651e4acc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::DefaultEvent::recoveryRate</definition>
        <argsstring>(Seniority seniority) const</argsstring>
        <name>recoveryRate</name>
        <qualifiedname>QuantLib::DefaultEvent::recoveryRate</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a197bfb2321381d9a5d8c94b56f6ef6cf" kindref="member">Seniority</ref></type>
          <declname>seniority</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns a value if the event lead to a settlement for the requested seniority. Specializations on the default atomics and recoveries could change the default policy. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultevent.hpp" line="137" column="22" bodyfile="ql/experimental/credit/defaultevent.hpp" bodystart="137" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_default_event_1a8f206ec059060fec44be9b40b3dac6ff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool QuantLib::DefaultEvent::matchesEventType</definition>
        <argsstring>(const ext::shared_ptr&lt; DefaultType &gt; &amp;contractEvType) const</argsstring>
        <name>matchesEventType</name>
        <qualifiedname>QuantLib::DefaultEvent::matchesEventType</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_bankruptcy_event_1a5519e633b4b180f44ea0575708f3fe06">matchesEventType</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_failure_to_pay_event_1ab675df7103c7737dfa264ac2909faab6">matchesEventType</reimplementedby>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_default_type" kindref="compound">DefaultType</ref> &gt; &amp;</type>
          <declname>contractEvType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>matches the event if this event would trigger a contract related to the requested event type. Notice the contractual event types are not neccesarily atomic. Notice it does not check seniority or currency only event type. typically used from <ref refid="class_quant_lib_1_1_issuer" kindref="compound">Issuer</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultevent.hpp" line="150" column="22" bodyfile="ql/experimental/credit/defaultevent.hpp" bodystart="150" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_default_event_1aca5f494772f519df3a9d6225d9799f90" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QuantLib::DefaultEvent::matchesDefaultKey</definition>
        <argsstring>(const DefaultProbKey &amp;contractKey) const</argsstring>
        <name>matchesDefaultKey</name>
        <qualifiedname>QuantLib::DefaultEvent::matchesDefaultKey</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_default_prob_key" kindref="compound">DefaultProbKey</ref> &amp;</type>
          <declname>contractKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if this event would trigger a contract with the arguments characteristics. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultevent.hpp" line="163" column="22" bodyfile="ql/experimental/credit/defaultevent.cpp" bodystart="123" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_default_event_1a948ed7e3c316087d30a98dd63ea1cd06" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::DefaultEvent::accept</definition>
        <argsstring>(AcyclicVisitor &amp;) override</argsstring>
        <name>accept</name>
        <qualifiedname>QuantLib::DefaultEvent::accept</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_event_1a572b6e63554be33515e60185aa8d1499">accept</reimplements>
        <param>
          <type><ref refid="class_quant_lib_1_1_acyclic_visitor" kindref="compound">AcyclicVisitor</ref> &amp;</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultevent.hpp" line="165" column="14" bodyfile="ql/experimental/credit/defaultevent.cpp" bodystart="33" bodyend="39"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Credit event on a bond of a certain seniority(ies)/currency. </para>
    </briefdescription>
    <detaileddescription>
<para>Represents a credit event affecting all bonds with a given \ seniority and currency. It assumes that all such bonds suffer \ the event simultaneously. Some events affect all seniorities and this has to be encoded through a different set of events of the same event type. The event is an actual realization, not a contractual reference, as such it contains only an atomic type. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>QuantLib::BankruptcyEvent</label>
        <link refid="class_quant_lib_1_1_bankruptcy_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::DefaultEvent</label>
        <link refid="class_quant_lib_1_1_default_event"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Event</label>
        <link refid="class_quant_lib_1_1_event"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::FailureToPayEvent</label>
        <link refid="class_quant_lib_1_1_failure_to_pay_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>QuantLib::Currency</label>
        <link refid="class_quant_lib_1_1_currency"/>
      </node>
      <node id="5">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="1">
        <label>QuantLib::DefaultEvent</label>
        <link refid="class_quant_lib_1_1_default_event"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>bondsCurrency_</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>defaultDate_</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>eventType_</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>defSettlement_</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::DefaultEvent::DefaultSettlement</label>
        <link refid="class_quant_lib_1_1_default_event_1_1_default_settlement"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::DefaultType</label>
        <link refid="class_quant_lib_1_1_default_type"/>
      </node>
      <node id="2">
        <label>QuantLib::Event</label>
        <link refid="class_quant_lib_1_1_event"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/credit/defaultevent.hpp" line="49" column="5" bodyfile="ql/experimental/credit/defaultevent.hpp" bodystart="49" bodyend="173"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_default_event_1a948ed7e3c316087d30a98dd63ea1cd06" prot="public" virt="virtual"><scope>QuantLib::DefaultEvent</scope><name>accept</name></member>
      <member refid="class_quant_lib_1_1_default_event_1ac043bda03ecee2ad7d9c4d41441c7247" prot="protected" virt="non-virtual"><scope>QuantLib::DefaultEvent</scope><name>bondsCurrency_</name></member>
      <member refid="class_quant_lib_1_1_default_event_1aa9a5d304d7903d14b3e86f1b784a71b2" prot="protected" virt="non-virtual"><scope>QuantLib::DefaultEvent</scope><name>bondsSeniority_</name></member>
      <member refid="class_quant_lib_1_1_default_event_1a493b535b6b7f84bfedeca3ce9cd4abfb" prot="public" virt="non-virtual"><scope>QuantLib::DefaultEvent</scope><name>currency</name></member>
      <member refid="class_quant_lib_1_1_default_event_1abc0b7e5c99a04a401c762d3dc444b5b9" prot="public" virt="virtual"><scope>QuantLib::DefaultEvent</scope><name>date</name></member>
      <member refid="class_quant_lib_1_1_default_event_1a53ebbbd6535a680105b1dd3a582be193" prot="protected" virt="non-virtual"><scope>QuantLib::DefaultEvent</scope><name>defaultDate_</name></member>
      <member refid="class_quant_lib_1_1_default_event_1ad2156165e941013181bbdc25c420a739" prot="public" virt="non-virtual"><scope>QuantLib::DefaultEvent</scope><name>DefaultEvent</name></member>
      <member refid="class_quant_lib_1_1_default_event_1ac2c630b1c40a6a2e8bfe9110ec377bc8" prot="public" virt="non-virtual"><scope>QuantLib::DefaultEvent</scope><name>DefaultEvent</name></member>
      <member refid="class_quant_lib_1_1_default_event_1a6dd8f54bd1553de093d0bd702ec07767" prot="public" virt="non-virtual"><scope>QuantLib::DefaultEvent</scope><name>defaultType</name></member>
      <member refid="class_quant_lib_1_1_default_event_1a970a1a610ce414a7128bb3ba53f314e7" prot="protected" virt="non-virtual"><scope>QuantLib::DefaultEvent</scope><name>defSettlement_</name></member>
      <member refid="class_quant_lib_1_1_default_event_1a14c3ef33a534d6c8a8b2ae9791258cd0" prot="public" virt="non-virtual"><scope>QuantLib::DefaultEvent</scope><name>eventSeniority</name></member>
      <member refid="class_quant_lib_1_1_default_event_1ab96393cb297c5a5429a6211e947c81ea" prot="protected" virt="non-virtual"><scope>QuantLib::DefaultEvent</scope><name>eventType_</name></member>
      <member refid="class_quant_lib_1_1_event_1af09e3d842159f4d17482ce634642bc07" prot="public" virt="virtual"><scope>QuantLib::DefaultEvent</scope><name>hasOccurred</name></member>
      <member refid="class_quant_lib_1_1_default_event_1a7aa16abb69d9b163a139aecc8a6bf0e7" prot="public" virt="non-virtual"><scope>QuantLib::DefaultEvent</scope><name>hasSettled</name></member>
      <member refid="class_quant_lib_1_1_default_event_1a66e0d085b0eccb622866c3571fbcd565" prot="public" virt="non-virtual"><scope>QuantLib::DefaultEvent</scope><name>isDefault</name></member>
      <member refid="class_quant_lib_1_1_default_event_1a91f3aecbf24e78268902705ed0d0478e" prot="public" virt="non-virtual"><scope>QuantLib::DefaultEvent</scope><name>isRestructuring</name></member>
      <member refid="class_quant_lib_1_1_default_event_1aca5f494772f519df3a9d6225d9799f90" prot="public" virt="virtual"><scope>QuantLib::DefaultEvent</scope><name>matchesDefaultKey</name></member>
      <member refid="class_quant_lib_1_1_default_event_1a8f206ec059060fec44be9b40b3dac6ff" prot="public" virt="virtual"><scope>QuantLib::DefaultEvent</scope><name>matchesEventType</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::DefaultEvent</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::DefaultEvent</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Event::"><scope>QuantLib::DefaultEvent</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Event::"><scope>QuantLib::DefaultEvent</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual"><scope>QuantLib::DefaultEvent</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Event::"><scope>QuantLib::DefaultEvent</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_default_event_1ab68e4e1c2be54f2db22577c6fb2e1bac" prot="private" virt="non-virtual"><scope>QuantLib::DefaultEvent</scope><name>rate_map</name></member>
      <member refid="class_quant_lib_1_1_default_event_1a0b98ad9f021578a1e8c0f053651e4acc" prot="public" virt="virtual"><scope>QuantLib::DefaultEvent</scope><name>recoveryRate</name></member>
      <member refid="class_quant_lib_1_1_default_event_1a60dd35ba050ff748407c3ddcf08dc2ac" prot="public" virt="non-virtual"><scope>QuantLib::DefaultEvent</scope><name>settlement</name></member>
      <member refid="class_quant_lib_1_1_event_1a26cef5942731bfb52ed77e74abdcfe9f" prot="public" virt="non-virtual"><scope>QuantLib::DefaultEvent</scope><name>~Event</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::DefaultEvent</scope><name>~Observable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

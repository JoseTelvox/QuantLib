<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_constant_estimator" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::ConstantEstimator</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_volatility_compositor" prot="public" virt="non-virtual">QuantLib::VolatilityCompositor</basecompoundref>
    <includes refid="constantestimator_8hpp" local="no">constantestimator.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_constant_estimator_1af4e8cfc0dd97adef02f7d5a34b251c83" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::ConstantEstimator::size_</definition>
        <argsstring></argsstring>
        <name>size_</name>
        <qualifiedname>QuantLib::ConstantEstimator::size_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/volatility/constantestimator.hpp" line="37" column="14" bodyfile="ql/models/volatility/constantestimator.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_constant_estimator_1a9439a268c7bd10a0b71ffb3cd425ce16" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ConstantEstimator::ConstantEstimator</definition>
        <argsstring>(Size size)</argsstring>
        <name>ConstantEstimator</name>
        <qualifiedname>QuantLib::ConstantEstimator::ConstantEstimator</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/volatility/constantestimator.hpp" line="39" column="9" bodyfile="ql/models/volatility/constantestimator.hpp" bodystart="39" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_constant_estimator_1a2edb0680d56850c5f716352432ec0bd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_time_series" kindref="compound">TimeSeries</ref>&lt; <ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref> &gt;</type>
        <definition>TimeSeries&lt; Volatility &gt; QuantLib::ConstantEstimator::calculate</definition>
        <argsstring>(const TimeSeries&lt; Volatility &gt; &amp;) override</argsstring>
        <name>calculate</name>
        <qualifiedname>QuantLib::ConstantEstimator::calculate</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_time_series" kindref="compound">TimeSeries</ref>&lt; <ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref> &gt; &amp;</type>
          <defname>volatilitySeries</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/volatility/constantestimator.hpp" line="41" column="20" bodyfile="ql/models/volatility/constantestimator.cpp" bodystart="24" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_constant_estimator_1a2b48da2c0cb7d46a6f395b685b08bf88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::ConstantEstimator::calibrate</definition>
        <argsstring>(const TimeSeries&lt; Volatility &gt; &amp;) override</argsstring>
        <name>calibrate</name>
        <qualifiedname>QuantLib::ConstantEstimator::calibrate</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_time_series" kindref="compound">TimeSeries</ref>&lt; <ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref> &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/volatility/constantestimator.hpp" line="42" column="14" bodyfile="ql/models/volatility/constantestimator.hpp" bodystart="42" bodyend="42"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Constant-estimator volatility model. </para>
    </briefdescription>
    <detaileddescription>
<para>Volatilities are assumed to be expressed on an annual basis. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::ConstantEstimator</label>
        <link refid="class_quant_lib_1_1_constant_estimator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::VolatilityCompositor</label>
        <link refid="class_quant_lib_1_1_volatility_compositor"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::ConstantEstimator</label>
        <link refid="class_quant_lib_1_1_constant_estimator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::VolatilityCompositor</label>
        <link refid="class_quant_lib_1_1_volatility_compositor"/>
      </node>
    </collaborationgraph>
    <location file="ql/models/volatility/constantestimator.hpp" line="35" column="5" bodyfile="ql/models/volatility/constantestimator.hpp" bodystart="35" bodyend="43"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_constant_estimator_1a2edb0680d56850c5f716352432ec0bd7" prot="public" virt="non-virtual"><scope>QuantLib::ConstantEstimator</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_volatility_compositor_1a8bbfc5686eea877f7b646a6156cfc8be" prot="public" virt="pure-virtual" ambiguityscope="QuantLib::VolatilityCompositor::"><scope>QuantLib::ConstantEstimator</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_constant_estimator_1a2b48da2c0cb7d46a6f395b685b08bf88" prot="public" virt="non-virtual"><scope>QuantLib::ConstantEstimator</scope><name>calibrate</name></member>
      <member refid="class_quant_lib_1_1_volatility_compositor_1a5e037cdcce33d623cc7c2e7384a9e5c3" prot="public" virt="pure-virtual" ambiguityscope="QuantLib::VolatilityCompositor::"><scope>QuantLib::ConstantEstimator</scope><name>calibrate</name></member>
      <member refid="class_quant_lib_1_1_constant_estimator_1a9439a268c7bd10a0b71ffb3cd425ce16" prot="public" virt="non-virtual"><scope>QuantLib::ConstantEstimator</scope><name>ConstantEstimator</name></member>
      <member refid="class_quant_lib_1_1_constant_estimator_1af4e8cfc0dd97adef02f7d5a34b251c83" prot="private" virt="non-virtual"><scope>QuantLib::ConstantEstimator</scope><name>size_</name></member>
      <member refid="class_quant_lib_1_1_volatility_compositor_1aa5e37a2fe0869ba2407f943c2cc9addf" prot="public" virt="non-virtual"><scope>QuantLib::ConstantEstimator</scope><name>time_series</name></member>
      <member refid="class_quant_lib_1_1_volatility_compositor_1a97f8cbbc0a34cbbf7a62bae2a84d3e3d" prot="public" virt="virtual"><scope>QuantLib::ConstantEstimator</scope><name>~VolatilityCompositor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

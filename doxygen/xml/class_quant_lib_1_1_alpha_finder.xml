<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_alpha_finder" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::AlphaFinder</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_alpha_finder_1a69066572cf3790514e1b4666524a6220" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_alpha_form" kindref="compound">AlphaForm</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;AlphaForm&gt; QuantLib::AlphaFinder::parametricform_</definition>
        <argsstring></argsstring>
        <name>parametricform_</name>
        <qualifiedname>QuantLib::AlphaFinder::parametricform_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/alphafinder.hpp" line="84" column="25" bodyfile="ql/models/marketmodels/models/alphafinder.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_alpha_finder_1aaa626d3438c7ca5e27e4a97b33353189" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
        <definition>Integer QuantLib::AlphaFinder::stepindex_</definition>
        <argsstring></argsstring>
        <name>stepindex_</name>
        <qualifiedname>QuantLib::AlphaFinder::stepindex_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/alphafinder.hpp" line="85" column="17" bodyfile="ql/models/marketmodels/models/alphafinder.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_alpha_finder_1ac4964df3934221e6c72b0f33eaeb7803" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref> &gt;</type>
        <definition>std::vector&lt;Volatility&gt; QuantLib::AlphaFinder::rateonevols_</definition>
        <argsstring></argsstring>
        <name>rateonevols_</name>
        <qualifiedname>QuantLib::AlphaFinder::rateonevols_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/alphafinder.hpp" line="86" column="21" bodyfile="ql/models/marketmodels/models/alphafinder.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_alpha_finder_1ad1f809f696308286965bbe1fa2f4b863" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref> &gt;</type>
        <definition>std::vector&lt;Volatility&gt; QuantLib::AlphaFinder::ratetwohomogeneousvols_</definition>
        <argsstring></argsstring>
        <name>ratetwohomogeneousvols_</name>
        <qualifiedname>QuantLib::AlphaFinder::ratetwohomogeneousvols_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/alphafinder.hpp" line="86" column="34" bodyfile="ql/models/marketmodels/models/alphafinder.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_alpha_finder_1a13a225e53d3000bb085eaa2117978f9f" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref> &gt;</type>
        <definition>std::vector&lt;Volatility&gt; QuantLib::AlphaFinder::putativevols_</definition>
        <argsstring></argsstring>
        <name>putativevols_</name>
        <qualifiedname>QuantLib::AlphaFinder::putativevols_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/alphafinder.hpp" line="87" column="21" bodyfile="ql/models/marketmodels/models/alphafinder.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_alpha_finder_1aac235f1eff64bd94879128208a8391d6" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::AlphaFinder::correlations_</definition>
        <argsstring></argsstring>
        <name>correlations_</name>
        <qualifiedname>QuantLib::AlphaFinder::correlations_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/alphafinder.hpp" line="88" column="21" bodyfile="ql/models/marketmodels/models/alphafinder.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_alpha_finder_1a51a5c6a8e635f3edd90e24513d81bc5f" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AlphaFinder::w0_</definition>
        <argsstring></argsstring>
        <name>w0_</name>
        <qualifiedname>QuantLib::AlphaFinder::w0_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/alphafinder.hpp" line="89" column="14" bodyfile="ql/models/marketmodels/models/alphafinder.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_alpha_finder_1a47cb44dfd1005e4c7c0cc712cba1c575" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AlphaFinder::w1_</definition>
        <argsstring></argsstring>
        <name>w1_</name>
        <qualifiedname>QuantLib::AlphaFinder::w1_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/alphafinder.hpp" line="89" column="18" bodyfile="ql/models/marketmodels/models/alphafinder.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_alpha_finder_1a4ebf282576dd47b45c32508350f15f6a" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AlphaFinder::constantPart_</definition>
        <argsstring></argsstring>
        <name>constantPart_</name>
        <qualifiedname>QuantLib::AlphaFinder::constantPart_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/alphafinder.hpp" line="90" column="14" bodyfile="ql/models/marketmodels/models/alphafinder.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_alpha_finder_1aa0f5c8f19ff71a5c5e5da27adc49b363" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AlphaFinder::linearPart_</definition>
        <argsstring></argsstring>
        <name>linearPart_</name>
        <qualifiedname>QuantLib::AlphaFinder::linearPart_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/alphafinder.hpp" line="90" column="28" bodyfile="ql/models/marketmodels/models/alphafinder.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_alpha_finder_1a7fd7f76877c54a7c0d4d99f1cf0a6a58" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AlphaFinder::quadraticPart_</definition>
        <argsstring></argsstring>
        <name>quadraticPart_</name>
        <qualifiedname>QuantLib::AlphaFinder::quadraticPart_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/alphafinder.hpp" line="90" column="40" bodyfile="ql/models/marketmodels/models/alphafinder.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_alpha_finder_1af38f59864332317e68b474bc8683bdd0" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AlphaFinder::totalVar_</definition>
        <argsstring></argsstring>
        <name>totalVar_</name>
        <qualifiedname>QuantLib::AlphaFinder::totalVar_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/alphafinder.hpp" line="91" column="14" bodyfile="ql/models/marketmodels/models/alphafinder.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_alpha_finder_1ad5b2c74f5cac2c320a7d261159d87d63" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AlphaFinder::targetVariance_</definition>
        <argsstring></argsstring>
        <name>targetVariance_</name>
        <qualifiedname>QuantLib::AlphaFinder::targetVariance_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/alphafinder.hpp" line="91" column="24" bodyfile="ql/models/marketmodels/models/alphafinder.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_alpha_finder_1ad400942c516c0ba9d592ab18ce40b338" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::AlphaFinder::AlphaFinder</definition>
        <argsstring>(ext::shared_ptr&lt; AlphaForm &gt; parametricform)</argsstring>
        <name>AlphaFinder</name>
        <qualifiedname>QuantLib::AlphaFinder::AlphaFinder</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_alpha_form" kindref="compound">AlphaForm</ref> &gt;</type>
          <declname>parametricform</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/alphafinder.hpp" line="31" column="9" bodyfile="ql/models/marketmodels/models/alphafinder.cpp" bodystart="179" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_alpha_finder_1a8500b04a9e3bdfcc45c9812d659e62db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::AlphaFinder::solve</definition>
        <argsstring>(Real alpha0, Integer stepindex, const std::vector&lt; Volatility &gt; &amp;rateonevols, const std::vector&lt; Volatility &gt; &amp;ratetwohomogeneousvols, const std::vector&lt; Real &gt; &amp;correlations, Real w0, Real w1, Real targetVariance, Real tolerance, Real alphaMax, Real alphaMin, Integer steps, Real &amp;alpha, Real &amp;a, Real &amp;b, std::vector&lt; Volatility &gt; &amp;ratetwovols)</argsstring>
        <name>solve</name>
        <qualifiedname>QuantLib::AlphaFinder::solve</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>alpha0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
          <declname>stepindex</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref> &gt; &amp;</type>
          <declname>rateonevols</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref> &gt; &amp;</type>
          <declname>ratetwohomogeneousvols</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>correlations</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>w0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>w1</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>targetVariance</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>tolerance</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>alphaMax</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>alphaMin</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
          <declname>steps</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &amp;</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref> &gt; &amp;</type>
          <declname>ratetwovols</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/alphafinder.hpp" line="33" column="14" bodyfile="ql/models/marketmodels/models/alphafinder.cpp" bodystart="297" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_alpha_finder_1a58f13711826c1894c788cc9b643c66fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::AlphaFinder::solveWithMaxHomogeneity</definition>
        <argsstring>(Real alpha0, Integer stepindex, const std::vector&lt; Volatility &gt; &amp;rateonevols, const std::vector&lt; Volatility &gt; &amp;ratetwohomogeneousvols, const std::vector&lt; Real &gt; &amp;correlations, Real w0, Real w1, Real targetVariance, Real tolerance, Real alphaMax, Real alphaMin, Integer steps, Real &amp;alpha, Real &amp;a, Real &amp;b, std::vector&lt; Volatility &gt; &amp;ratetwovols)</argsstring>
        <name>solveWithMaxHomogeneity</name>
        <qualifiedname>QuantLib::AlphaFinder::solveWithMaxHomogeneity</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>alpha0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
          <declname>stepindex</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref> &gt; &amp;</type>
          <declname>rateonevols</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref> &gt; &amp;</type>
          <declname>ratetwohomogeneousvols</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>correlations</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>w0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>w1</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>targetVariance</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>tolerance</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>alphaMax</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>alphaMin</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
          <declname>steps</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &amp;</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref> &gt; &amp;</type>
          <declname>ratetwovols</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/alphafinder.hpp" line="50" column="14" bodyfile="ql/models/marketmodels/models/alphafinder.cpp" bodystart="418" bodyend="562"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_alpha_finder_1a2f1ca2b6751b9f660a34055c0cc765f8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AlphaFinder::computeLinearPart</definition>
        <argsstring>(Real alpha)</argsstring>
        <name>computeLinearPart</name>
        <qualifiedname>QuantLib::AlphaFinder::computeLinearPart</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/alphafinder.hpp" line="68" column="14" bodyfile="ql/models/marketmodels/models/alphafinder.cpp" bodystart="183" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_alpha_finder_1a1dc31181417c2ddf66c6ea8de9bd2586" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AlphaFinder::computeQuadraticPart</definition>
        <argsstring>(Real alpha)</argsstring>
        <name>computeQuadraticPart</name>
        <qualifiedname>QuantLib::AlphaFinder::computeQuadraticPart</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/alphafinder.hpp" line="69" column="14" bodyfile="ql/models/marketmodels/models/alphafinder.cpp" bodystart="197" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_alpha_finder_1a32712a289bf5ff7f9349ebb7548d9b0e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AlphaFinder::valueAtTurningPoint</definition>
        <argsstring>(Real alpha)</argsstring>
        <name>valueAtTurningPoint</name>
        <qualifiedname>QuantLib::AlphaFinder::valueAtTurningPoint</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/alphafinder.hpp" line="70" column="14" bodyfile="ql/models/marketmodels/models/alphafinder.cpp" bodystart="265" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_alpha_finder_1ac066522c0e78103722b91ea5b1e0074a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AlphaFinder::minusValueAtTurningPoint</definition>
        <argsstring>(Real alpha)</argsstring>
        <name>minusValueAtTurningPoint</name>
        <qualifiedname>QuantLib::AlphaFinder::minusValueAtTurningPoint</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/alphafinder.hpp" line="71" column="14" bodyfile="ql/models/marketmodels/models/alphafinder.cpp" bodystart="275" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_alpha_finder_1a923e9a102fef7a584c9c137d094a5881" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::AlphaFinder::testIfSolutionExists</definition>
        <argsstring>(Real alpha)</argsstring>
        <name>testIfSolutionExists</name>
        <qualifiedname>QuantLib::AlphaFinder::testIfSolutionExists</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/alphafinder.hpp" line="72" column="14" bodyfile="ql/models/marketmodels/models/alphafinder.cpp" bodystart="279" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_alpha_finder_1aedc1dfed358befbddd37a78ca08d4519" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::AlphaFinder::finalPart</definition>
        <argsstring>(Real alphaFound, Integer stepindex, const std::vector&lt; Volatility &gt; &amp;ratetwohomogeneousvols, Real quadraticPart, Real linearPart, Real constantPart, Real &amp;alpha, Real &amp;a, Real &amp;b, std::vector&lt; Volatility &gt; &amp;ratetwovols)</argsstring>
        <name>finalPart</name>
        <qualifiedname>QuantLib::AlphaFinder::finalPart</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>alphaFound</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
          <declname>stepindex</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref> &gt; &amp;</type>
          <declname>ratetwohomogeneousvols</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>quadraticPart</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>linearPart</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>constantPart</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &amp;</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref> &gt; &amp;</type>
          <declname>ratetwovols</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/alphafinder.hpp" line="73" column="14" bodyfile="ql/models/marketmodels/models/alphafinder.cpp" bodystart="232" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_alpha_finder_1a330e5139969d131c2b47f1fcbe86c699" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AlphaFinder::homogeneityfailure</definition>
        <argsstring>(Real alpha)</argsstring>
        <name>homogeneityfailure</name>
        <qualifiedname>QuantLib::AlphaFinder::homogeneityfailure</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>alpha</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/models/alphafinder.hpp" line="83" column="14" bodyfile="ql/models/marketmodels/models/alphafinder.cpp" bodystart="210" bodyend="230"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/models/marketmodels/models/alphafinder.hpp" line="29" column="5" bodyfile="ql/models/marketmodels/models/alphafinder.hpp" bodystart="29" bodyend="92"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_alpha_finder_1ad400942c516c0ba9d592ab18ce40b338" prot="public" virt="non-virtual"><scope>QuantLib::AlphaFinder</scope><name>AlphaFinder</name></member>
      <member refid="class_quant_lib_1_1_alpha_finder_1a2f1ca2b6751b9f660a34055c0cc765f8" prot="private" virt="non-virtual"><scope>QuantLib::AlphaFinder</scope><name>computeLinearPart</name></member>
      <member refid="class_quant_lib_1_1_alpha_finder_1a1dc31181417c2ddf66c6ea8de9bd2586" prot="private" virt="non-virtual"><scope>QuantLib::AlphaFinder</scope><name>computeQuadraticPart</name></member>
      <member refid="class_quant_lib_1_1_alpha_finder_1a4ebf282576dd47b45c32508350f15f6a" prot="private" virt="non-virtual"><scope>QuantLib::AlphaFinder</scope><name>constantPart_</name></member>
      <member refid="class_quant_lib_1_1_alpha_finder_1aac235f1eff64bd94879128208a8391d6" prot="private" virt="non-virtual"><scope>QuantLib::AlphaFinder</scope><name>correlations_</name></member>
      <member refid="class_quant_lib_1_1_alpha_finder_1aedc1dfed358befbddd37a78ca08d4519" prot="private" virt="non-virtual"><scope>QuantLib::AlphaFinder</scope><name>finalPart</name></member>
      <member refid="class_quant_lib_1_1_alpha_finder_1a330e5139969d131c2b47f1fcbe86c699" prot="private" virt="non-virtual"><scope>QuantLib::AlphaFinder</scope><name>homogeneityfailure</name></member>
      <member refid="class_quant_lib_1_1_alpha_finder_1aa0f5c8f19ff71a5c5e5da27adc49b363" prot="private" virt="non-virtual"><scope>QuantLib::AlphaFinder</scope><name>linearPart_</name></member>
      <member refid="class_quant_lib_1_1_alpha_finder_1ac066522c0e78103722b91ea5b1e0074a" prot="private" virt="non-virtual"><scope>QuantLib::AlphaFinder</scope><name>minusValueAtTurningPoint</name></member>
      <member refid="class_quant_lib_1_1_alpha_finder_1a69066572cf3790514e1b4666524a6220" prot="private" virt="non-virtual"><scope>QuantLib::AlphaFinder</scope><name>parametricform_</name></member>
      <member refid="class_quant_lib_1_1_alpha_finder_1a13a225e53d3000bb085eaa2117978f9f" prot="private" virt="non-virtual"><scope>QuantLib::AlphaFinder</scope><name>putativevols_</name></member>
      <member refid="class_quant_lib_1_1_alpha_finder_1a7fd7f76877c54a7c0d4d99f1cf0a6a58" prot="private" virt="non-virtual"><scope>QuantLib::AlphaFinder</scope><name>quadraticPart_</name></member>
      <member refid="class_quant_lib_1_1_alpha_finder_1ac4964df3934221e6c72b0f33eaeb7803" prot="private" virt="non-virtual"><scope>QuantLib::AlphaFinder</scope><name>rateonevols_</name></member>
      <member refid="class_quant_lib_1_1_alpha_finder_1ad1f809f696308286965bbe1fa2f4b863" prot="private" virt="non-virtual"><scope>QuantLib::AlphaFinder</scope><name>ratetwohomogeneousvols_</name></member>
      <member refid="class_quant_lib_1_1_alpha_finder_1a8500b04a9e3bdfcc45c9812d659e62db" prot="public" virt="non-virtual"><scope>QuantLib::AlphaFinder</scope><name>solve</name></member>
      <member refid="class_quant_lib_1_1_alpha_finder_1a58f13711826c1894c788cc9b643c66fd" prot="public" virt="non-virtual"><scope>QuantLib::AlphaFinder</scope><name>solveWithMaxHomogeneity</name></member>
      <member refid="class_quant_lib_1_1_alpha_finder_1aaa626d3438c7ca5e27e4a97b33353189" prot="private" virt="non-virtual"><scope>QuantLib::AlphaFinder</scope><name>stepindex_</name></member>
      <member refid="class_quant_lib_1_1_alpha_finder_1ad5b2c74f5cac2c320a7d261159d87d63" prot="private" virt="non-virtual"><scope>QuantLib::AlphaFinder</scope><name>targetVariance_</name></member>
      <member refid="class_quant_lib_1_1_alpha_finder_1a923e9a102fef7a584c9c137d094a5881" prot="private" virt="non-virtual"><scope>QuantLib::AlphaFinder</scope><name>testIfSolutionExists</name></member>
      <member refid="class_quant_lib_1_1_alpha_finder_1af38f59864332317e68b474bc8683bdd0" prot="private" virt="non-virtual"><scope>QuantLib::AlphaFinder</scope><name>totalVar_</name></member>
      <member refid="class_quant_lib_1_1_alpha_finder_1a32712a289bf5ff7f9349ebb7548d9b0e" prot="private" virt="non-virtual"><scope>QuantLib::AlphaFinder</scope><name>valueAtTurningPoint</name></member>
      <member refid="class_quant_lib_1_1_alpha_finder_1a51a5c6a8e635f3edd90e24513d81bc5f" prot="private" virt="non-virtual"><scope>QuantLib::AlphaFinder</scope><name>w0_</name></member>
      <member refid="class_quant_lib_1_1_alpha_finder_1a47cb44dfd1005e4c7c0cc712cba1c575" prot="private" virt="non-virtual"><scope>QuantLib::AlphaFinder</scope><name>w1_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

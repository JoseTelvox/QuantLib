<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_heston_s_l_v_m_c_model" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::HestonSLVMCModel</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_lazy_object" prot="public" virt="non-virtual">QuantLib::LazyObject</basecompoundref>
    <includes refid="hestonslvmcmodel_8hpp" local="no">hestonslvmcmodel.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_heston_s_l_v_m_c_model_1aa2f2aa328d5dbc74978843ff38a87722" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_local_vol_term_structure" kindref="compound">LocalVolTermStructure</ref> &gt;</type>
        <definition>const Handle&lt;LocalVolTermStructure&gt; QuantLib::HestonSLVMCModel::localVol_</definition>
        <argsstring></argsstring>
        <name>localVol_</name>
        <qualifiedname>QuantLib::HestonSLVMCModel::localVol_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/equity/hestonslvmcmodel.hpp" line="63" column="22" bodyfile="ql/models/equity/hestonslvmcmodel.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_heston_s_l_v_m_c_model_1a30a7269b20344747a0ad842611a24cc6" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_heston_model" kindref="compound">HestonModel</ref> &gt;</type>
        <definition>const Handle&lt;HestonModel&gt; QuantLib::HestonSLVMCModel::hestonModel_</definition>
        <argsstring></argsstring>
        <name>hestonModel_</name>
        <qualifiedname>QuantLib::HestonSLVMCModel::hestonModel_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/equity/hestonslvmcmodel.hpp" line="64" column="22" bodyfile="ql/models/equity/hestonslvmcmodel.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_heston_s_l_v_m_c_model_1a579f3db1c5d95c3217afcd8242363ea5" prot="private" static="no" mutable="no">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_brownian_generator_factory" kindref="compound">BrownianGeneratorFactory</ref> &gt;</type>
        <definition>const ext::shared_ptr&lt;BrownianGeneratorFactory&gt; QuantLib::HestonSLVMCModel::brownianGeneratorFactory_</definition>
        <argsstring></argsstring>
        <name>brownianGeneratorFactory_</name>
        <qualifiedname>QuantLib::HestonSLVMCModel::brownianGeneratorFactory_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/equity/hestonslvmcmodel.hpp" line="65" column="31" bodyfile="ql/models/equity/hestonslvmcmodel.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_heston_s_l_v_m_c_model_1a6c9680473da79438d8aa86351fe8abad" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>const Date QuantLib::HestonSLVMCModel::endDate_</definition>
        <argsstring></argsstring>
        <name>endDate_</name>
        <qualifiedname>QuantLib::HestonSLVMCModel::endDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/equity/hestonslvmcmodel.hpp" line="66" column="20" bodyfile="ql/models/equity/hestonslvmcmodel.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_heston_s_l_v_m_c_model_1a88f60f9eb780d4ca2dae1fe4e0dc1894" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>const Size QuantLib::HestonSLVMCModel::nBins_</definition>
        <argsstring></argsstring>
        <name>nBins_</name>
        <qualifiedname>QuantLib::HestonSLVMCModel::nBins_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/equity/hestonslvmcmodel.hpp" line="67" column="20" bodyfile="ql/models/equity/hestonslvmcmodel.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_heston_s_l_v_m_c_model_1ab96203aee6b56ebf7b9693f245827945" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>const Size QuantLib::HestonSLVMCModel::calibrationPaths_</definition>
        <argsstring></argsstring>
        <name>calibrationPaths_</name>
        <qualifiedname>QuantLib::HestonSLVMCModel::calibrationPaths_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/equity/hestonslvmcmodel.hpp" line="67" column="27" bodyfile="ql/models/equity/hestonslvmcmodel.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_heston_s_l_v_m_c_model_1a2a59d5152ed4de825ef2deac2fedb4b2" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::HestonSLVMCModel::mixingFactor_</definition>
        <argsstring></argsstring>
        <name>mixingFactor_</name>
        <qualifiedname>QuantLib::HestonSLVMCModel::mixingFactor_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/equity/hestonslvmcmodel.hpp" line="68" column="20" bodyfile="ql/models/equity/hestonslvmcmodel.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_heston_s_l_v_m_c_model_1ad09405dd640f800432983dcae2e28b06" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_time_grid" kindref="compound">TimeGrid</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;TimeGrid&gt; QuantLib::HestonSLVMCModel::timeGrid_</definition>
        <argsstring></argsstring>
        <name>timeGrid_</name>
        <qualifiedname>QuantLib::HestonSLVMCModel::timeGrid_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/equity/hestonslvmcmodel.hpp" line="69" column="25" bodyfile="ql/models/equity/hestonslvmcmodel.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_heston_s_l_v_m_c_model_1a0ca5cac3b3f1c7a0c5b3ca448147f66b" prot="private" static="no" mutable="yes">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_fixed_local_vol_surface" kindref="compound">FixedLocalVolSurface</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;FixedLocalVolSurface&gt; QuantLib::HestonSLVMCModel::leverageFunction_</definition>
        <argsstring></argsstring>
        <name>leverageFunction_</name>
        <qualifiedname>QuantLib::HestonSLVMCModel::leverageFunction_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/equity/hestonslvmcmodel.hpp" line="71" column="33" bodyfile="ql/models/equity/hestonslvmcmodel.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_heston_s_l_v_m_c_model_1a186a64f08ecab0c429f1690b1a322c07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::HestonSLVMCModel::HestonSLVMCModel</definition>
        <argsstring>(Handle&lt; LocalVolTermStructure &gt; localVol, Handle&lt; HestonModel &gt; hestonModel, ext::shared_ptr&lt; BrownianGeneratorFactory &gt; brownianGeneratorFactory, const Date &amp;endDate, Size timeStepsPerYear=365, Size nBins=201, Size calibrationPaths=(1&lt;&lt; 15), const std::vector&lt; Date &gt; &amp;mandatoryDates=std::vector&lt; Date &gt;(), Real mixingFactor=1.0)</argsstring>
        <name>HestonSLVMCModel</name>
        <qualifiedname>QuantLib::HestonSLVMCModel::HestonSLVMCModel</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_local_vol_term_structure" kindref="compound">LocalVolTermStructure</ref> &gt;</type>
          <declname>localVol</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_heston_model" kindref="compound">HestonModel</ref> &gt;</type>
          <declname>hestonModel</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_brownian_generator_factory" kindref="compound">BrownianGeneratorFactory</ref> &gt;</type>
          <declname>brownianGeneratorFactory</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>endDate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>timeStepsPerYear</declname>
          <defval>365</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>nBins</declname>
          <defval>201</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>calibrationPaths</declname>
          <defval>(1&lt;&lt; 15)</defval>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &gt; &amp;</type>
          <declname>mandatoryDates</declname>
          <defval>std::vector&lt; <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &gt;()</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>mixingFactor</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/equity/hestonslvmcmodel.hpp" line="45" column="9" bodyfile="ql/models/equity/hestonslvmcmodel.cpp" bodystart="39" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_heston_s_l_v_m_c_model_1ada87a6f6e9a28806dcbf9760e70d3aec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_heston_process" kindref="compound">HestonProcess</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; HestonProcess &gt; QuantLib::HestonSLVMCModel::hestonProcess</definition>
        <argsstring>() const</argsstring>
        <name>hestonProcess</name>
        <qualifiedname>QuantLib::HestonSLVMCModel::hestonProcess</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/equity/hestonslvmcmodel.hpp" line="55" column="25" bodyfile="ql/models/equity/hestonslvmcmodel.cpp" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_heston_s_l_v_m_c_model_1a3ae96baae22aab5507cf58955d1c4760" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_local_vol_term_structure" kindref="compound">LocalVolTermStructure</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; LocalVolTermStructure &gt; QuantLib::HestonSLVMCModel::localVol</definition>
        <argsstring>() const</argsstring>
        <name>localVol</name>
        <qualifiedname>QuantLib::HestonSLVMCModel::localVol</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/equity/hestonslvmcmodel.hpp" line="56" column="25" bodyfile="ql/models/equity/hestonslvmcmodel.cpp" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_heston_s_l_v_m_c_model_1ab8cdc9292f50438fdbb40759c56368cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_local_vol_term_structure" kindref="compound">LocalVolTermStructure</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; LocalVolTermStructure &gt; QuantLib::HestonSLVMCModel::leverageFunction</definition>
        <argsstring>() const</argsstring>
        <name>leverageFunction</name>
        <qualifiedname>QuantLib::HestonSLVMCModel::leverageFunction</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/equity/hestonslvmcmodel.hpp" line="57" column="25" bodyfile="ql/models/equity/hestonslvmcmodel.cpp" bodystart="79" bodyend="83"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_heston_s_l_v_m_c_model_1ab1fb69b58e262dcd5c466c8ed122e819" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::HestonSLVMCModel::performCalculations</definition>
        <argsstring>() const override</argsstring>
        <name>performCalculations</name>
        <qualifiedname>QuantLib::HestonSLVMCModel::performCalculations</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_lazy_object_1aafa5583a3743d9f93fa40da5b62e1ff8">performCalculations</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must implement any calculations which must be (re)done in order to calculate the desired results. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/equity/hestonslvmcmodel.hpp" line="60" column="14" bodyfile="ql/models/equity/hestonslvmcmodel.cpp" bodystart="85" bodyend="186"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>References:</para>
<para>Anthonie W. van der Stoep,Lech A. Grzelak, Cornelis W. Oosterlee, 2013, The Heston Stochastic-Local <ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref> Model: Efficient Monte Carlo Simulation <ulink url="http://papers.ssrn.com/sol3/papers.cfm?abstract_id=2278122">http://papers.ssrn.com/sol3/papers.cfm?abstract_id=2278122</ulink> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::HestonSLVMCModel</label>
        <link refid="class_quant_lib_1_1_heston_s_l_v_m_c_model"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::HestonSLVMCModel</label>
        <link refid="class_quant_lib_1_1_heston_s_l_v_m_c_model"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </collaborationgraph>
    <location file="ql/models/equity/hestonslvmcmodel.hpp" line="43" column="5" bodyfile="ql/models/equity/hestonslvmcmodel.hpp" bodystart="43" bodyend="72"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_lazy_object_1a02070ea7442d30625992c1711030d4b8" prot="protected" virt="non-virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>alwaysForward_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a17c9433135a259e4776baec66204a484" prot="public" virt="non-virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>alwaysForwardNotifications</name></member>
      <member refid="class_quant_lib_1_1_heston_s_l_v_m_c_model_1a579f3db1c5d95c3217afcd8242363ea5" prot="private" virt="non-virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>brownianGeneratorFactory_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a5244c7f83592375a0ea9048296435fd1" prot="protected" virt="virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a58b4986a80efa18634483a92c121e26e" prot="protected" virt="non-virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>calculated_</name></member>
      <member refid="class_quant_lib_1_1_heston_s_l_v_m_c_model_1ab96203aee6b56ebf7b9693f245827945" prot="private" virt="non-virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>calibrationPaths_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_heston_s_l_v_m_c_model_1a6c9680473da79438d8aa86351fe8abad" prot="private" virt="non-virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>endDate_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1afac6ee19c3107c453e1347dd8000e023" prot="public" virt="non-virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>forwardFirstNotificationOnly</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7157f41e83f2c5d924f5c5bafda04d1d" prot="public" virt="non-virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>freeze</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7bb721fe00c6854e602758aba629ab77" prot="protected" virt="non-virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>frozen_</name></member>
      <member refid="class_quant_lib_1_1_heston_s_l_v_m_c_model_1a30a7269b20344747a0ad842611a24cc6" prot="private" virt="non-virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>hestonModel_</name></member>
      <member refid="class_quant_lib_1_1_heston_s_l_v_m_c_model_1ada87a6f6e9a28806dcbf9760e70d3aec" prot="public" virt="non-virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>hestonProcess</name></member>
      <member refid="class_quant_lib_1_1_heston_s_l_v_m_c_model_1a186a64f08ecab0c429f1690b1a322c07" prot="public" virt="non-virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>HestonSLVMCModel</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a0a7c5d42815a4e16ee2158e24dbfc748" prot="public" virt="non-virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>isCalculated</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a26f18f4ff7faaaebd8eae50e064b493e" prot="public" virt="non-virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>LazyObject</name></member>
      <member refid="class_quant_lib_1_1_heston_s_l_v_m_c_model_1ab8cdc9292f50438fdbb40759c56368cf" prot="public" virt="non-virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>leverageFunction</name></member>
      <member refid="class_quant_lib_1_1_heston_s_l_v_m_c_model_1a0ca5cac3b3f1c7a0c5b3ca448147f66b" prot="private" virt="non-virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>leverageFunction_</name></member>
      <member refid="class_quant_lib_1_1_heston_s_l_v_m_c_model_1a3ae96baae22aab5507cf58955d1c4760" prot="public" virt="non-virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>localVol</name></member>
      <member refid="class_quant_lib_1_1_heston_s_l_v_m_c_model_1aa2f2aa328d5dbc74978843ff38a87722" prot="private" virt="non-virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>localVol_</name></member>
      <member refid="class_quant_lib_1_1_heston_s_l_v_m_c_model_1a2a59d5152ed4de825ef2deac2fedb4b2" prot="private" virt="non-virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>mixingFactor_</name></member>
      <member refid="class_quant_lib_1_1_heston_s_l_v_m_c_model_1a88f60f9eb780d4ca2dae1fe4e0dc1894" prot="private" virt="non-virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>nBins_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::HestonSLVMCModel</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::HestonSLVMCModel</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::HestonSLVMCModel</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::HestonSLVMCModel</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::HestonSLVMCModel</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::QuantLib::Observer::"><scope>QuantLib::HestonSLVMCModel</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_heston_s_l_v_m_c_model_1ab1fb69b58e262dcd5c466c8ed122e819" prot="protected" virt="virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>performCalculations</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a70c9b24e50132408d8d9ce4f6674662a" prot="public" virt="non-virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>recalculate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_heston_s_l_v_m_c_model_1ad09405dd640f800432983dcae2e28b06" prot="private" virt="non-virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>timeGrid_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a2e0e4786666453024b9d4e0761f2770b" prot="public" virt="non-virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>unfreeze</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1adee2bf49be5c4c78736be293321a856d" prot="public" virt="virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a9d719c43bb627177a90d7d12324a2d6e" prot="public" virt="non-virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>~LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::HestonSLVMCModel</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

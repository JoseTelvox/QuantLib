<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_moment_based_gaussian_polynomial" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::MomentBasedGaussianPolynomial</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_gaussian_orthogonal_polynomial" prot="public" virt="non-virtual">QuantLib::GaussianOrthogonalPolynomial</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_gauss_laguerre_trigonometric_base" prot="public" virt="non-virtual">QuantLib::GaussLaguerreTrigonometricBase&lt; mp_real &gt;</derivedcompoundref>
    <includes refid="momentbasedgaussianpolynomial_8hpp" local="no">momentbasedgaussianpolynomial.hpp</includes>
    <templateparamlist>
      <param>
        <type>class mp_real</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_moment_based_gaussian_polynomial_1a893dda6ca3bf6ae612713af9d300e226" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; mp_real &gt;</type>
        <definition>std::vector&lt;mp_real&gt; QuantLib::MomentBasedGaussianPolynomial&lt; mp_real &gt;::b_</definition>
        <argsstring></argsstring>
        <name>b_</name>
        <qualifiedname>QuantLib::MomentBasedGaussianPolynomial::b_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/integrals/momentbasedgaussianpolynomial.hpp" line="65" column="29" bodyfile="ql/math/integrals/momentbasedgaussianpolynomial.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_moment_based_gaussian_polynomial_1a89201ebd84e837189bfcfdfe4f1c07ba" prot="private" static="no" mutable="no">
        <type>std::vector&lt; mp_real &gt;</type>
        <definition>std::vector&lt;mp_real&gt; QuantLib::MomentBasedGaussianPolynomial&lt; mp_real &gt;::c_</definition>
        <argsstring></argsstring>
        <name>c_</name>
        <qualifiedname>QuantLib::MomentBasedGaussianPolynomial::c_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/integrals/momentbasedgaussianpolynomial.hpp" line="65" column="32" bodyfile="ql/math/integrals/momentbasedgaussianpolynomial.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_moment_based_gaussian_polynomial_1ac2c521d50df8d8af7b0dcc7ef3d3e69e" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; std::vector&lt; mp_real &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;mp_real&gt; &gt; QuantLib::MomentBasedGaussianPolynomial&lt; mp_real &gt;::z_</definition>
        <argsstring></argsstring>
        <name>z_</name>
        <qualifiedname>QuantLib::MomentBasedGaussianPolynomial::z_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/integrals/momentbasedgaussianpolynomial.hpp" line="66" column="29" bodyfile="ql/math/integrals/momentbasedgaussianpolynomial.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_moment_based_gaussian_polynomial_1a821eb6a76921577cb4c387b8420c6e09" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::MomentBasedGaussianPolynomial&lt; mp_real &gt;::MomentBasedGaussianPolynomial</definition>
        <argsstring>()</argsstring>
        <name>MomentBasedGaussianPolynomial</name>
        <qualifiedname>QuantLib::MomentBasedGaussianPolynomial::MomentBasedGaussianPolynomial</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/integrals/momentbasedgaussianpolynomial.hpp" line="51" column="9" bodyfile="ql/math/integrals/momentbasedgaussianpolynomial.hpp" bodystart="70" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_moment_based_gaussian_polynomial_1a445bfb29311a8c308994e5bb26f33e6a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::MomentBasedGaussianPolynomial&lt; mp_real &gt;::mu_0</definition>
        <argsstring>() const override</argsstring>
        <name>mu_0</name>
        <qualifiedname>QuantLib::MomentBasedGaussianPolynomial::mu_0</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_gaussian_orthogonal_polynomial_1a4e518337d30d6fbb1444551b1323d25c">mu_0</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/integrals/momentbasedgaussianpolynomial.hpp" line="53" column="14" bodyfile="ql/math/integrals/momentbasedgaussianpolynomial.hpp" bodystart="167" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_moment_based_gaussian_polynomial_1abae5a173a690467396b655f360a0ef6d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::MomentBasedGaussianPolynomial&lt; mp_real &gt;::alpha</definition>
        <argsstring>(Size i) const override</argsstring>
        <name>alpha</name>
        <qualifiedname>QuantLib::MomentBasedGaussianPolynomial::alpha</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_gaussian_orthogonal_polynomial_1a8914fabe6bef18ec39b110ca1f4710c6">alpha</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/integrals/momentbasedgaussianpolynomial.hpp" line="54" column="14" bodyfile="ql/math/integrals/momentbasedgaussianpolynomial.hpp" bodystart="143" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_moment_based_gaussian_polynomial_1a5b6c01dd4318f00b1aa375c30202d9cb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::MomentBasedGaussianPolynomial&lt; mp_real &gt;::beta</definition>
        <argsstring>(Size i) const override</argsstring>
        <name>beta</name>
        <qualifiedname>QuantLib::MomentBasedGaussianPolynomial::beta</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_gaussian_orthogonal_polynomial_1a5d437722f274f2f41b5ec95397824177">beta</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/integrals/momentbasedgaussianpolynomial.hpp" line="55" column="14" bodyfile="ql/math/integrals/momentbasedgaussianpolynomial.hpp" bodystart="153" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_moment_based_gaussian_polynomial_1a46e9970360eec5fc1a3f39121919b433" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>mp_real</type>
        <definition>virtual mp_real QuantLib::MomentBasedGaussianPolynomial&lt; mp_real &gt;::moment</definition>
        <argsstring>(Size i) const =0</argsstring>
        <name>moment</name>
        <qualifiedname>QuantLib::MomentBasedGaussianPolynomial::moment</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_gauss_laguerre_cosine_polynomial_1a6343dcb54841367ba0bc77f98e3275cc">moment</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_gauss_laguerre_sine_polynomial_1aa1bc76d3bdcc7497143ba5eeef15c58f">moment</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_gauss_non_central_chi_squared_polynomial_1a410579a9ff2aa2aa941603f3bf2d5546">moment</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/integrals/momentbasedgaussianpolynomial.hpp" line="57" column="25"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_moment_based_gaussian_polynomial_1afb84735bb966f6d727becca80fb9f9bb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::MomentBasedGaussianPolynomial&lt; Real &gt;::alpha</definition>
        <argsstring>(Size u) const</argsstring>
        <name>alpha</name>
        <qualifiedname>QuantLib::MomentBasedGaussianPolynomial::alpha</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_gaussian_orthogonal_polynomial_1a8914fabe6bef18ec39b110ca1f4710c6">alpha</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/integrals/momentbasedgaussianpolynomial.hpp" line="138" column="40" bodyfile="ql/math/integrals/momentbasedgaussianpolynomial.hpp" bodystart="138" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_moment_based_gaussian_polynomial_1a74a3273ef76f5735798419a5b18a264d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::MomentBasedGaussianPolynomial&lt; Real &gt;::beta</definition>
        <argsstring>(Size u) const</argsstring>
        <name>beta</name>
        <qualifiedname>QuantLib::MomentBasedGaussianPolynomial::beta</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_gaussian_orthogonal_polynomial_1a5d437722f274f2f41b5ec95397824177">beta</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/integrals/momentbasedgaussianpolynomial.hpp" line="148" column="40" bodyfile="ql/math/integrals/momentbasedgaussianpolynomial.hpp" bodystart="148" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_moment_based_gaussian_polynomial_1affeaa8c6ed0053efd86abf10d1870b0d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::MomentBasedGaussianPolynomial&lt; Real &gt;::mu_0</definition>
        <argsstring>() const</argsstring>
        <name>mu_0</name>
        <qualifiedname>QuantLib::MomentBasedGaussianPolynomial::mu_0</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_gaussian_orthogonal_polynomial_1a4e518337d30d6fbb1444551b1323d25c">mu_0</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/integrals/momentbasedgaussianpolynomial.hpp" line="159" column="40" bodyfile="ql/math/integrals/momentbasedgaussianpolynomial.hpp" bodystart="159" bodyend="164"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_moment_based_gaussian_polynomial_1a77f09d77cbfc36f07f4474602f9cac8e" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>mp_real</type>
        <definition>mp_real QuantLib::MomentBasedGaussianPolynomial&lt; mp_real &gt;::alpha_</definition>
        <argsstring>(Size i) const</argsstring>
        <name>alpha_</name>
        <qualifiedname>QuantLib::MomentBasedGaussianPolynomial::alpha_</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/integrals/momentbasedgaussianpolynomial.hpp" line="60" column="17" bodyfile="ql/math/integrals/momentbasedgaussianpolynomial.hpp" bodystart="103" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_moment_based_gaussian_polynomial_1aa3f3b0d3d2c2a58b8329bf0e0d2b81be" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>mp_real</type>
        <definition>mp_real QuantLib::MomentBasedGaussianPolynomial&lt; mp_real &gt;::beta_</definition>
        <argsstring>(Size i) const</argsstring>
        <name>beta_</name>
        <qualifiedname>QuantLib::MomentBasedGaussianPolynomial::beta_</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/integrals/momentbasedgaussianpolynomial.hpp" line="61" column="17" bodyfile="ql/math/integrals/momentbasedgaussianpolynomial.hpp" bodystart="122" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_moment_based_gaussian_polynomial_1a68439d08ed9ce42927af22b64a2c8411" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>mp_real</type>
        <definition>mp_real QuantLib::MomentBasedGaussianPolynomial&lt; mp_real &gt;::z</definition>
        <argsstring>(Integer k, Integer i) const</argsstring>
        <name>z</name>
        <qualifiedname>QuantLib::MomentBasedGaussianPolynomial::z</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
          <declname>k</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/integrals/momentbasedgaussianpolynomial.hpp" line="63" column="17" bodyfile="ql/math/integrals/momentbasedgaussianpolynomial.hpp" bodystart="74" bodyend="100"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>References: Gauss quadratures and orthogonal polynomials</para>
<para>G.H. Gloub and J.H. Welsch: Calculation of Gauss quadrature rule. Math. Comput. 23 (1986), 221-230, <ulink url="http://web.stanford.edu/class/cme335/spr11/S0025-5718-69-99647-1.pdf">http://web.stanford.edu/class/cme335/spr11/S0025-5718-69-99647-1.pdf</ulink></para>
<para>M. Morandi Cecchi and M. Redivo Zaglia, Computing the coefficients of a recurrence formula for numerical integration by moments and modified moments. <ulink url="http://ac.els-cdn.com/0377042793901522/1-s2.0-0377042793901522-main.pdf?_tid=643d5dca-a05d-11e6-9a56-00000aab0f27&amp;acdnat=1478023545_cf7c87cba4cc9e37a136e68a2564d411">http://ac.els-cdn.com/0377042793901522/1-s2.0-0377042793901522-main.pdf?_tid=643d5dca-a05d-11e6-9a56-00000aab0f27&amp;acdnat=1478023545_cf7c87cba4cc9e37a136e68a2564d411</ulink> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>QuantLib::GaussLaguerreCosinePolynomial&lt; mp_real &gt;</label>
        <link refid="class_quant_lib_1_1_gauss_laguerre_cosine_polynomial"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::GaussLaguerreSinePolynomial&lt; mp_real &gt;</label>
        <link refid="class_quant_lib_1_1_gauss_laguerre_sine_polynomial"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::GaussLaguerreTrigonometricBase&lt; mp_real &gt;</label>
        <link refid="class_quant_lib_1_1_gauss_laguerre_trigonometric_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::GaussianOrthogonalPolynomial</label>
        <link refid="class_quant_lib_1_1_gaussian_orthogonal_polynomial"/>
      </node>
      <node id="1">
        <label>QuantLib::MomentBasedGaussianPolynomial&lt; mp_real &gt;</label>
        <link refid="class_quant_lib_1_1_moment_based_gaussian_polynomial"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::GaussianOrthogonalPolynomial</label>
        <link refid="class_quant_lib_1_1_gaussian_orthogonal_polynomial"/>
      </node>
      <node id="1">
        <label>QuantLib::MomentBasedGaussianPolynomial&lt; mp_real &gt;</label>
        <link refid="class_quant_lib_1_1_moment_based_gaussian_polynomial"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/math/integrals/momentbasedgaussianpolynomial.hpp" line="48" column="5" bodyfile="ql/math/integrals/momentbasedgaussianpolynomial.hpp" bodystart="49" bodyend="67"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_moment_based_gaussian_polynomial_1abae5a173a690467396b655f360a0ef6d" prot="public" virt="virtual"><scope>QuantLib::MomentBasedGaussianPolynomial</scope><name>alpha</name></member>
      <member refid="class_quant_lib_1_1_moment_based_gaussian_polynomial_1afb84735bb966f6d727becca80fb9f9bb" prot="public" virt="virtual"><scope>QuantLib::MomentBasedGaussianPolynomial</scope><name>alpha</name></member>
      <member refid="class_quant_lib_1_1_moment_based_gaussian_polynomial_1a77f09d77cbfc36f07f4474602f9cac8e" prot="private" virt="non-virtual"><scope>QuantLib::MomentBasedGaussianPolynomial</scope><name>alpha_</name></member>
      <member refid="class_quant_lib_1_1_moment_based_gaussian_polynomial_1a893dda6ca3bf6ae612713af9d300e226" prot="private" virt="non-virtual"><scope>QuantLib::MomentBasedGaussianPolynomial</scope><name>b_</name></member>
      <member refid="class_quant_lib_1_1_moment_based_gaussian_polynomial_1a5b6c01dd4318f00b1aa375c30202d9cb" prot="public" virt="virtual"><scope>QuantLib::MomentBasedGaussianPolynomial</scope><name>beta</name></member>
      <member refid="class_quant_lib_1_1_moment_based_gaussian_polynomial_1a74a3273ef76f5735798419a5b18a264d" prot="public" virt="virtual"><scope>QuantLib::MomentBasedGaussianPolynomial</scope><name>beta</name></member>
      <member refid="class_quant_lib_1_1_moment_based_gaussian_polynomial_1aa3f3b0d3d2c2a58b8329bf0e0d2b81be" prot="private" virt="non-virtual"><scope>QuantLib::MomentBasedGaussianPolynomial</scope><name>beta_</name></member>
      <member refid="class_quant_lib_1_1_moment_based_gaussian_polynomial_1a89201ebd84e837189bfcfdfe4f1c07ba" prot="private" virt="non-virtual"><scope>QuantLib::MomentBasedGaussianPolynomial</scope><name>c_</name></member>
      <member refid="class_quant_lib_1_1_moment_based_gaussian_polynomial_1a46e9970360eec5fc1a3f39121919b433" prot="public" virt="pure-virtual"><scope>QuantLib::MomentBasedGaussianPolynomial</scope><name>moment</name></member>
      <member refid="class_quant_lib_1_1_moment_based_gaussian_polynomial_1a821eb6a76921577cb4c387b8420c6e09" prot="public" virt="non-virtual"><scope>QuantLib::MomentBasedGaussianPolynomial</scope><name>MomentBasedGaussianPolynomial</name></member>
      <member refid="class_quant_lib_1_1_moment_based_gaussian_polynomial_1a445bfb29311a8c308994e5bb26f33e6a" prot="public" virt="virtual"><scope>QuantLib::MomentBasedGaussianPolynomial</scope><name>mu_0</name></member>
      <member refid="class_quant_lib_1_1_moment_based_gaussian_polynomial_1affeaa8c6ed0053efd86abf10d1870b0d" prot="public" virt="virtual"><scope>QuantLib::MomentBasedGaussianPolynomial</scope><name>mu_0</name></member>
      <member refid="class_quant_lib_1_1_gaussian_orthogonal_polynomial_1a769accdc45f27c9b69a5ddebe2b9d3a3" prot="public" virt="non-virtual"><scope>QuantLib::MomentBasedGaussianPolynomial</scope><name>value</name></member>
      <member refid="class_quant_lib_1_1_gaussian_orthogonal_polynomial_1afba8fe00288c9d8cf42f63a91ad59836" prot="public" virt="pure-virtual"><scope>QuantLib::MomentBasedGaussianPolynomial</scope><name>w</name></member>
      <member refid="class_quant_lib_1_1_gaussian_orthogonal_polynomial_1a908f05e4162d866b3ff020fd5a1b7285" prot="public" virt="non-virtual"><scope>QuantLib::MomentBasedGaussianPolynomial</scope><name>weightedValue</name></member>
      <member refid="class_quant_lib_1_1_moment_based_gaussian_polynomial_1a68439d08ed9ce42927af22b64a2c8411" prot="private" virt="non-virtual"><scope>QuantLib::MomentBasedGaussianPolynomial</scope><name>z</name></member>
      <member refid="class_quant_lib_1_1_moment_based_gaussian_polynomial_1ac2c521d50df8d8af7b0dcc7ef3d3e69e" prot="private" virt="non-virtual"><scope>QuantLib::MomentBasedGaussianPolynomial</scope><name>z_</name></member>
      <member refid="class_quant_lib_1_1_gaussian_orthogonal_polynomial_1afc3b36cc5ee57e8fd77be775e1ef101b" prot="public" virt="virtual"><scope>QuantLib::MomentBasedGaussianPolynomial</scope><name>~GaussianOrthogonalPolynomial</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

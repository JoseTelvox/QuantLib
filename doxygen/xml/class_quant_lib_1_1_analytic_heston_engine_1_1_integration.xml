<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_analytic_heston_engine_1_1_integration" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::AnalyticHestonEngine::Integration</compoundname>
    <sectiondef kind="private-type">
      <memberdef kind="enum" id="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a32148cacd1152f3cff9e67b55e33953e" prot="private" static="no" strong="no">
        <type></type>
        <name>Algorithm</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::Integration::Algorithm</qualifiedname>
        <enumvalue id="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a32148cacd1152f3cff9e67b55e33953ea300f167a9bce222d5a65ea118c7a4ba5" prot="private">
          <name>GaussLobatto</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a32148cacd1152f3cff9e67b55e33953eabaebbac2a3be1f6459f6c0febbfc1297" prot="private">
          <name>GaussKronrod</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a32148cacd1152f3cff9e67b55e33953eaf8b814ff75725c546e01bcbac5db2143" prot="private">
          <name>Simpson</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a32148cacd1152f3cff9e67b55e33953ea564de0dd59fa9c77a6950c8058aade22" prot="private">
          <name>Trapezoid</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a32148cacd1152f3cff9e67b55e33953ea41c679521f7729425fdad25f433b50d3" prot="private">
          <name>DiscreteTrapezoid</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a32148cacd1152f3cff9e67b55e33953eaab883c26568a86b60bd39f854813e5fd" prot="private">
          <name>DiscreteSimpson</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a32148cacd1152f3cff9e67b55e33953eafcbc75012bb9c64575be8481bdf7b0d4" prot="private">
          <name>GaussLaguerre</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a32148cacd1152f3cff9e67b55e33953ea0898e30b0515dad0be9a2d15b62cd39a" prot="private">
          <name>GaussLegendre</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a32148cacd1152f3cff9e67b55e33953ea1cae9fd0ad6380ba1fc1eaa7c1179cc7" prot="private">
          <name>GaussChebyshev</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a32148cacd1152f3cff9e67b55e33953ea39c32fb7ec7612684aa67f9b04b03962" prot="private">
          <name>GaussChebyshev2nd</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a32148cacd1152f3cff9e67b55e33953eac81cc67ca79d57365698245dfe32881f" prot="private">
          <name>ExpSinh</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="241" column="9" bodyfile="ql/pricingengines/vanilla/analytichestonengine.hpp" bodystart="242" bodyend="246"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a2b117bf58e61248ffa4914d10f7ae7bd" prot="private" static="no" mutable="no">
        <type>const Algorithm</type>
        <definition>const Algorithm QuantLib::AnalyticHestonEngine::Integration::intAlgo_</definition>
        <argsstring></argsstring>
        <name>intAlgo_</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::Integration::intAlgo_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="252" column="25" bodyfile="ql/pricingengines/vanilla/analytichestonengine.hpp" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a87f97d257e26df636f344b3846cc1549" prot="private" static="no" mutable="no">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_integrator" kindref="compound">Integrator</ref> &gt;</type>
        <definition>const ext::shared_ptr&lt;Integrator&gt; QuantLib::AnalyticHestonEngine::Integration::integrator_</definition>
        <argsstring></argsstring>
        <name>integrator_</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::Integration::integrator_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="253" column="31" bodyfile="ql/pricingengines/vanilla/analytichestonengine.hpp" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a561b98a43b925329f08c0af897736232" prot="private" static="no" mutable="no">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_gaussian_quadrature" kindref="compound">GaussianQuadrature</ref> &gt;</type>
        <definition>const ext::shared_ptr&lt;GaussianQuadrature&gt; QuantLib::AnalyticHestonEngine::Integration::gaussianQuadrature_</definition>
        <argsstring></argsstring>
        <name>gaussianQuadrature_</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::Integration::gaussianQuadrature_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="254" column="31" bodyfile="ql/pricingengines/vanilla/analytichestonengine.hpp" bodystart="254" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a7fecade05c9ca6a8bbcb3a87a2ef1fc9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration" kindref="compound">Integration</ref></type>
        <definition>AnalyticHestonEngine::Integration QuantLib::AnalyticHestonEngine::Integration::gaussLaguerre</definition>
        <argsstring>(Size integrationOrder=128)</argsstring>
        <name>gaussLaguerre</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::Integration::gaussLaguerre</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>integrationOrder</declname>
          <defval>128</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="201" column="28" bodyfile="ql/pricingengines/vanilla/analytichestonengine.cpp" bodystart="927" bodyend="932"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1af1935bc5bfa21690ded1486128501638" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration" kindref="compound">Integration</ref></type>
        <definition>AnalyticHestonEngine::Integration QuantLib::AnalyticHestonEngine::Integration::gaussLegendre</definition>
        <argsstring>(Size integrationOrder=128)</argsstring>
        <name>gaussLegendre</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::Integration::gaussLegendre</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>integrationOrder</declname>
          <defval>128</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="202" column="28" bodyfile="ql/pricingengines/vanilla/analytichestonengine.cpp" bodystart="935" bodyend="939"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1ad1d7e9b17efa073a6be7480060b077a3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration" kindref="compound">Integration</ref></type>
        <definition>AnalyticHestonEngine::Integration QuantLib::AnalyticHestonEngine::Integration::gaussChebyshev</definition>
        <argsstring>(Size integrationOrder=128)</argsstring>
        <name>gaussChebyshev</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::Integration::gaussChebyshev</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>integrationOrder</declname>
          <defval>128</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="203" column="28" bodyfile="ql/pricingengines/vanilla/analytichestonengine.cpp" bodystart="942" bodyend="946"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1acf58b8a236d40e25c89079508f41c8c6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration" kindref="compound">Integration</ref></type>
        <definition>AnalyticHestonEngine::Integration QuantLib::AnalyticHestonEngine::Integration::gaussChebyshev2nd</definition>
        <argsstring>(Size integrationOrder=128)</argsstring>
        <name>gaussChebyshev2nd</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::Integration::gaussChebyshev2nd</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>integrationOrder</declname>
          <defval>128</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="204" column="28" bodyfile="ql/pricingengines/vanilla/analytichestonengine.cpp" bodystart="949" bodyend="953"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a9f16741293647d0a221cb67a86d17181" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration" kindref="compound">Integration</ref></type>
        <definition>AnalyticHestonEngine::Integration QuantLib::AnalyticHestonEngine::Integration::gaussLobatto</definition>
        <argsstring>(Real relTolerance, Real absTolerance, Size maxEvaluations=1000, bool useConvergenceEstimate=false)</argsstring>
        <name>gaussLobatto</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::Integration::gaussLobatto</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>relTolerance</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>absTolerance</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>maxEvaluations</declname>
          <defval>1000</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>useConvergenceEstimate</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="210" column="28" bodyfile="ql/pricingengines/vanilla/analytichestonengine.cpp" bodystart="889" bodyend="897"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a7fc45baaa7e113dafcce808481f3aee4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration" kindref="compound">Integration</ref></type>
        <definition>AnalyticHestonEngine::Integration QuantLib::AnalyticHestonEngine::Integration::gaussKronrod</definition>
        <argsstring>(Real absTolerance, Size maxEvaluations=1000)</argsstring>
        <name>gaussKronrod</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::Integration::gaussKronrod</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>absTolerance</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>maxEvaluations</declname>
          <defval>1000</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="215" column="28" bodyfile="ql/pricingengines/vanilla/analytichestonengine.cpp" bodystart="900" bodyend="906"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a4bc7c7e07bcac426f57000f8dba7456e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration" kindref="compound">Integration</ref></type>
        <definition>AnalyticHestonEngine::Integration QuantLib::AnalyticHestonEngine::Integration::simpson</definition>
        <argsstring>(Real absTolerance, Size maxEvaluations=1000)</argsstring>
        <name>simpson</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::Integration::simpson</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>absTolerance</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>maxEvaluations</declname>
          <defval>1000</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="217" column="28" bodyfile="ql/pricingengines/vanilla/analytichestonengine.cpp" bodystart="909" bodyend="915"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a04f8a85284d1f42ec66a707fa0fb9e29" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration" kindref="compound">Integration</ref></type>
        <definition>AnalyticHestonEngine::Integration QuantLib::AnalyticHestonEngine::Integration::trapezoid</definition>
        <argsstring>(Real absTolerance, Size maxEvaluations=1000)</argsstring>
        <name>trapezoid</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::Integration::trapezoid</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>absTolerance</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>maxEvaluations</declname>
          <defval>1000</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="219" column="28" bodyfile="ql/pricingengines/vanilla/analytichestonengine.cpp" bodystart="918" bodyend="924"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1afade7d34fdcb8a5c4f31df79e9bd0f77" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration" kindref="compound">Integration</ref></type>
        <definition>AnalyticHestonEngine::Integration QuantLib::AnalyticHestonEngine::Integration::discreteSimpson</definition>
        <argsstring>(Size evaluation=1000)</argsstring>
        <name>discreteSimpson</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::Integration::discreteSimpson</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>evaluation</declname>
          <defval>1000</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="221" column="28" bodyfile="ql/pricingengines/vanilla/analytichestonengine.cpp" bodystart="956" bodyend="960"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a8318f80f475a33a0e4f21c3d8d1ec6ff" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration" kindref="compound">Integration</ref></type>
        <definition>AnalyticHestonEngine::Integration QuantLib::AnalyticHestonEngine::Integration::discreteTrapezoid</definition>
        <argsstring>(Size evaluation=1000)</argsstring>
        <name>discreteTrapezoid</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::Integration::discreteTrapezoid</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>evaluation</declname>
          <defval>1000</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="222" column="28" bodyfile="ql/pricingengines/vanilla/analytichestonengine.cpp" bodystart="963" bodyend="967"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a8141ee93adb38dec677f0ef781e727ac" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration" kindref="compound">Integration</ref></type>
        <definition>AnalyticHestonEngine::Integration QuantLib::AnalyticHestonEngine::Integration::expSinh</definition>
        <argsstring>(Real relTolerance=1e-8)</argsstring>
        <name>expSinh</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::Integration::expSinh</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>relTolerance</declname>
          <defval>1e-8</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="223" column="28" bodyfile="ql/pricingengines/vanilla/analytichestonengine.cpp" bodystart="970" bodyend="974"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a811e71d1c5c6dfdd46d0368cdf214b80" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticHestonEngine::Integration::andersenPiterbargIntegrationLimit</definition>
        <argsstring>(Real c_inf, Real epsilon, Real v0, Real t)</argsstring>
        <name>andersenPiterbargIntegrationLimit</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::Integration::andersenPiterbargIntegrationLimit</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>c_inf</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>epsilon</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>v0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="225" column="21" bodyfile="ql/pricingengines/vanilla/analytichestonengine.cpp" bodystart="1048" bodyend="1067"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a3eace3bd21616db214a0c4c59186df81" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticHestonEngine::Integration::calculate</definition>
        <argsstring>(Real c_inf, const std::function&lt; Real(Real)&gt; &amp;f, const std::function&lt; Real()&gt; &amp;maxBound={}, Real scaling=1.0) const</argsstring>
        <name>calculate</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::Integration::calculate</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>c_inf</declname>
        </param>
        <param>
          <type>const std::function&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>(<ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>)&gt; &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const std::function&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>()&gt; &amp;</type>
          <declname>maxBound</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>scaling</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="228" column="14" bodyfile="ql/pricingengines/vanilla/analytichestonengine.cpp" bodystart="994" bodyend="1037"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a96dd301f980f96ec89dead4f6025f73f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticHestonEngine::Integration::calculate</definition>
        <argsstring>(Real c_inf, const std::function&lt; Real(Real)&gt; &amp;f, Real maxBound) const</argsstring>
        <name>calculate</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::Integration::calculate</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>c_inf</declname>
        </param>
        <param>
          <type>const std::function&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>(<ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>)&gt; &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>maxBound</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="233" column="14" bodyfile="ql/pricingengines/vanilla/analytichestonengine.cpp" bodystart="1039" bodyend="1046"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1abcf5073001d8797f44df2929a2e2bc90" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::AnalyticHestonEngine::Integration::numberOfEvaluations</definition>
        <argsstring>() const</argsstring>
        <name>numberOfEvaluations</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::Integration::numberOfEvaluations</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="237" column="14" bodyfile="ql/pricingengines/vanilla/analytichestonengine.cpp" bodystart="976" bodyend="984"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a5731650a88af59c144529d612bcac8c1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::AnalyticHestonEngine::Integration::isAdaptiveIntegration</definition>
        <argsstring>() const</argsstring>
        <name>isAdaptiveIntegration</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::Integration::isAdaptiveIntegration</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="238" column="14" bodyfile="ql/pricingengines/vanilla/analytichestonengine.cpp" bodystart="986" bodyend="992"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a0d115114e61088643ff5ea83d1d156ba" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::AnalyticHestonEngine::Integration::Integration</definition>
        <argsstring>(Algorithm intAlgo, ext::shared_ptr&lt; GaussianQuadrature &gt; quadrature)</argsstring>
        <name>Integration</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::Integration::Integration</qualifiedname>
        <param>
          <type>Algorithm</type>
          <declname>intAlgo</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_gaussian_quadrature" kindref="compound">GaussianQuadrature</ref> &gt;</type>
          <declname>quadrature</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="248" column="9" bodyfile="ql/pricingengines/vanilla/analytichestonengine.cpp" bodystart="884" bodyend="886"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1acafb7f8c2bbe6b7209f0a632fd993820" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::AnalyticHestonEngine::Integration::Integration</definition>
        <argsstring>(Algorithm intAlgo, ext::shared_ptr&lt; Integrator &gt; integrator)</argsstring>
        <name>Integration</name>
        <qualifiedname>QuantLib::AnalyticHestonEngine::Integration::Integration</qualifiedname>
        <param>
          <type>Algorithm</type>
          <declname>intAlgo</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_integrator" kindref="compound">Integrator</ref> &gt;</type>
          <declname>integrator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="250" column="9" bodyfile="ql/pricingengines/vanilla/analytichestonengine.cpp" bodystart="880" bodyend="882"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/pricingengines/vanilla/analytichestonengine.hpp" line="198" column="5" bodyfile="ql/pricingengines/vanilla/analytichestonengine.hpp" bodystart="198" bodyend="255"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a32148cacd1152f3cff9e67b55e33953e" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::Integration</scope><name>Algorithm</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a811e71d1c5c6dfdd46d0368cdf214b80" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::Integration</scope><name>andersenPiterbargIntegrationLimit</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a3eace3bd21616db214a0c4c59186df81" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::Integration</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a96dd301f980f96ec89dead4f6025f73f" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::Integration</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a32148cacd1152f3cff9e67b55e33953eaab883c26568a86b60bd39f854813e5fd" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::Integration</scope><name>DiscreteSimpson</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1afade7d34fdcb8a5c4f31df79e9bd0f77" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::Integration</scope><name>discreteSimpson</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a32148cacd1152f3cff9e67b55e33953ea41c679521f7729425fdad25f433b50d3" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::Integration</scope><name>DiscreteTrapezoid</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a8318f80f475a33a0e4f21c3d8d1ec6ff" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::Integration</scope><name>discreteTrapezoid</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a32148cacd1152f3cff9e67b55e33953eac81cc67ca79d57365698245dfe32881f" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::Integration</scope><name>ExpSinh</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a8141ee93adb38dec677f0ef781e727ac" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::Integration</scope><name>expSinh</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a32148cacd1152f3cff9e67b55e33953ea1cae9fd0ad6380ba1fc1eaa7c1179cc7" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::Integration</scope><name>GaussChebyshev</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1ad1d7e9b17efa073a6be7480060b077a3" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::Integration</scope><name>gaussChebyshev</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a32148cacd1152f3cff9e67b55e33953ea39c32fb7ec7612684aa67f9b04b03962" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::Integration</scope><name>GaussChebyshev2nd</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1acf58b8a236d40e25c89079508f41c8c6" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::Integration</scope><name>gaussChebyshev2nd</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a561b98a43b925329f08c0af897736232" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::Integration</scope><name>gaussianQuadrature_</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a32148cacd1152f3cff9e67b55e33953eabaebbac2a3be1f6459f6c0febbfc1297" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::Integration</scope><name>GaussKronrod</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a7fc45baaa7e113dafcce808481f3aee4" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::Integration</scope><name>gaussKronrod</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a32148cacd1152f3cff9e67b55e33953eafcbc75012bb9c64575be8481bdf7b0d4" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::Integration</scope><name>GaussLaguerre</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a7fecade05c9ca6a8bbcb3a87a2ef1fc9" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::Integration</scope><name>gaussLaguerre</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a32148cacd1152f3cff9e67b55e33953ea0898e30b0515dad0be9a2d15b62cd39a" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::Integration</scope><name>GaussLegendre</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1af1935bc5bfa21690ded1486128501638" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::Integration</scope><name>gaussLegendre</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a32148cacd1152f3cff9e67b55e33953ea300f167a9bce222d5a65ea118c7a4ba5" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::Integration</scope><name>GaussLobatto</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a9f16741293647d0a221cb67a86d17181" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::Integration</scope><name>gaussLobatto</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a2b117bf58e61248ffa4914d10f7ae7bd" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::Integration</scope><name>intAlgo_</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a0d115114e61088643ff5ea83d1d156ba" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::Integration</scope><name>Integration</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1acafb7f8c2bbe6b7209f0a632fd993820" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::Integration</scope><name>Integration</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a87f97d257e26df636f344b3846cc1549" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::Integration</scope><name>integrator_</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a5731650a88af59c144529d612bcac8c1" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::Integration</scope><name>isAdaptiveIntegration</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1abcf5073001d8797f44df2929a2e2bc90" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::Integration</scope><name>numberOfEvaluations</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a32148cacd1152f3cff9e67b55e33953eaf8b814ff75725c546e01bcbac5db2143" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::Integration</scope><name>Simpson</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a4bc7c7e07bcac426f57000f8dba7456e" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::Integration</scope><name>simpson</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a32148cacd1152f3cff9e67b55e33953ea564de0dd59fa9c77a6950c8058aade22" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::Integration</scope><name>Trapezoid</name></member>
      <member refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration_1a04f8a85284d1f42ec66a707fa0fb9e29" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHestonEngine::Integration</scope><name>trapezoid</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_inhomogeneous_pool_loss_model" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::InhomogeneousPoolLossModel</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_default_loss_model" prot="public" virt="non-virtual">QuantLib::DefaultLossModel</basecompoundref>
    <includes refid="inhomogeneouspooldef_8hpp" local="no">inhomogeneouspooldef.hpp</includes>
    <templateparamlist>
      <param>
        <type>class copulaPolicy</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a867396b9a51a40bce4e8efae458ab1f2" prot="public" static="no">
        <type>copulaPolicy</type>
        <definition>typedef copulaPolicy QuantLib::InhomogeneousPoolLossModel&lt; copulaPolicy &gt;::copulaType</definition>
        <argsstring></argsstring>
        <name>copulaType</name>
        <qualifiedname>QuantLib::InhomogeneousPoolLossModel::copulaType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/inhomogeneouspooldef.hpp" line="52" column="30" bodyfile="ql/experimental/credit/inhomogeneouspooldef.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a2b7fa4451cd06b43ce5c5c6d7b6b961f" prot="protected" static="no" mutable="no">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_constant_loss_latentmodel" kindref="compound">ConstantLossLatentmodel</ref>&lt; copulaPolicy &gt; &gt;</type>
        <definition>const ext::shared_ptr&lt;ConstantLossLatentmodel&lt;copulaPolicy&gt; &gt; QuantLib::InhomogeneousPoolLossModel&lt; copulaPolicy &gt;::copula_</definition>
        <argsstring></argsstring>
        <name>copula_</name>
        <qualifiedname>QuantLib::InhomogeneousPoolLossModel::copula_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/inhomogeneouspooldef.hpp" line="93" column="31" bodyfile="ql/experimental/credit/inhomogeneouspooldef.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a7494b488829364235e696303e9519994" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::InhomogeneousPoolLossModel&lt; copulaPolicy &gt;::nBuckets_</definition>
        <argsstring></argsstring>
        <name>nBuckets_</name>
        <qualifiedname>QuantLib::InhomogeneousPoolLossModel::nBuckets_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/inhomogeneouspooldef.hpp" line="94" column="14" bodyfile="ql/experimental/credit/inhomogeneouspooldef.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a991dc3244c9f4888f8cd3d736dfea5a5" prot="protected" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::InhomogeneousPoolLossModel&lt; copulaPolicy &gt;::attach_</definition>
        <argsstring></argsstring>
        <name>attach_</name>
        <qualifiedname>QuantLib::InhomogeneousPoolLossModel::attach_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/inhomogeneouspooldef.hpp" line="95" column="22" bodyfile="ql/experimental/credit/inhomogeneouspooldef.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a215c531f46c2a9ead0bb6cf80b21f156" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::InhomogeneousPoolLossModel&lt; copulaPolicy &gt;::detach_</definition>
        <argsstring></argsstring>
        <name>detach_</name>
        <qualifiedname>QuantLib::InhomogeneousPoolLossModel::detach_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/inhomogeneouspooldef.hpp" line="95" column="30" bodyfile="ql/experimental/credit/inhomogeneouspooldef.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1ad7e0111d69cd12150f8844d8dbd59881" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::InhomogeneousPoolLossModel&lt; copulaPolicy &gt;::notional_</definition>
        <argsstring></argsstring>
        <name>notional_</name>
        <qualifiedname>QuantLib::InhomogeneousPoolLossModel::notional_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/inhomogeneouspooldef.hpp" line="95" column="38" bodyfile="ql/experimental/credit/inhomogeneouspooldef.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1ac5d829aaec6c899b04648a48bc08b8a9" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::InhomogeneousPoolLossModel&lt; copulaPolicy &gt;::attachAmount_</definition>
        <argsstring></argsstring>
        <name>attachAmount_</name>
        <qualifiedname>QuantLib::InhomogeneousPoolLossModel::attachAmount_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/inhomogeneouspooldef.hpp" line="95" column="48" bodyfile="ql/experimental/credit/inhomogeneouspooldef.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1ac57afa575038f573f5268514a68afbb5" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::InhomogeneousPoolLossModel&lt; copulaPolicy &gt;::detachAmount_</definition>
        <argsstring></argsstring>
        <name>detachAmount_</name>
        <qualifiedname>QuantLib::InhomogeneousPoolLossModel::detachAmount_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/inhomogeneouspooldef.hpp" line="95" column="62" bodyfile="ql/experimental/credit/inhomogeneouspooldef.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a773bbbc9740d40d48c216de39990f20e" prot="protected" static="no" mutable="yes">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::InhomogeneousPoolLossModel&lt; copulaPolicy &gt;::notionals_</definition>
        <argsstring></argsstring>
        <name>notionals_</name>
        <qualifiedname>QuantLib::InhomogeneousPoolLossModel::notionals_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/inhomogeneouspooldef.hpp" line="96" column="29" bodyfile="ql/experimental/credit/inhomogeneouspooldef.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a137fde9e3927cf14583a041a4e2e7234" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::InhomogeneousPoolLossModel&lt; copulaPolicy &gt;::max_</definition>
        <argsstring></argsstring>
        <name>max_</name>
        <qualifiedname>QuantLib::InhomogeneousPoolLossModel::max_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/inhomogeneouspooldef.hpp" line="101" column="20" bodyfile="ql/experimental/credit/inhomogeneouspooldef.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a0e8232bec8049e26371b54c7c883bf55" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::InhomogeneousPoolLossModel&lt; copulaPolicy &gt;::min_</definition>
        <argsstring></argsstring>
        <name>min_</name>
        <qualifiedname>QuantLib::InhomogeneousPoolLossModel::min_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/inhomogeneouspooldef.hpp" line="102" column="20" bodyfile="ql/experimental/credit/inhomogeneouspooldef.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1ad6133e7d173fd8ec14aa2193685ae0ba" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>const Size QuantLib::InhomogeneousPoolLossModel&lt; copulaPolicy &gt;::nSteps_</definition>
        <argsstring></argsstring>
        <name>nSteps_</name>
        <qualifiedname>QuantLib::InhomogeneousPoolLossModel::nSteps_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/inhomogeneouspooldef.hpp" line="103" column="20" bodyfile="ql/experimental/credit/inhomogeneouspooldef.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a15f8fd5b53d8df58bd96f35290b71ac1" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::InhomogeneousPoolLossModel&lt; copulaPolicy &gt;::delta_</definition>
        <argsstring></argsstring>
        <name>delta_</name>
        <qualifiedname>QuantLib::InhomogeneousPoolLossModel::delta_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/inhomogeneouspooldef.hpp" line="104" column="20" bodyfile="ql/experimental/credit/inhomogeneouspooldef.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a8f7f6568e906e4b22baedebbd23b6834" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::InhomogeneousPoolLossModel&lt; CP &gt;::resetModel</definition>
        <argsstring>() override</argsstring>
        <name>resetModel</name>
        <qualifiedname>QuantLib::InhomogeneousPoolLossModel::resetModel</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_default_loss_model_1ac32cbab626c8ba8ebb0dcace3eed4a38">resetModel</reimplements>
        <briefdescription>
<para>Concrete models do now any updates/inits they need on basket reset. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/inhomogeneouspooldef.hpp" line="48" column="12" bodyfile="ql/experimental/credit/inhomogeneouspooldef.hpp" bodystart="114" bodyend="128"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a3931f9f35f6d34da32aac13e1b88d997" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::InhomogeneousPoolLossModel&lt; copulaPolicy &gt;::InhomogeneousPoolLossModel</definition>
        <argsstring>(const ext::shared_ptr&lt; ConstantLossLatentmodel&lt; copulaPolicy &gt; &gt; &amp;copula, Size nBuckets, Real max=5., Real min=-5., Size nSteps=50)</argsstring>
        <name>InhomogeneousPoolLossModel</name>
        <qualifiedname>QuantLib::InhomogeneousPoolLossModel::InhomogeneousPoolLossModel</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_constant_loss_latentmodel" kindref="compound">ConstantLossLatentmodel</ref>&lt; copulaPolicy &gt; &gt; &amp;</type>
          <declname>copula</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>nBuckets</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>max</declname>
          <defval>5.</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>min</declname>
          <defval>-5.</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>nSteps</declname>
          <defval>50</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/inhomogeneouspooldef.hpp" line="54" column="9" bodyfile="ql/experimental/credit/inhomogeneouspooldef.hpp" bodystart="54" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a053102c6a568fdb70903c10979e1586f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::InhomogeneousPoolLossModel&lt; copulaPolicy &gt;::expectedTrancheLoss</definition>
        <argsstring>(const Date &amp;d) const override</argsstring>
        <name>expectedTrancheLoss</name>
        <qualifiedname>QuantLib::InhomogeneousPoolLossModel::expectedTrancheLoss</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_default_loss_model_1a258763493804fe4c84b533716df00991">expectedTrancheLoss</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/inhomogeneouspooldef.hpp" line="73" column="12" bodyfile="ql/experimental/credit/inhomogeneouspooldef.hpp" bodystart="73" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a9172ce4e691a49aeb93098c9305b749c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::InhomogeneousPoolLossModel&lt; copulaPolicy &gt;::percentile</definition>
        <argsstring>(const Date &amp;d, Real percentile) const override</argsstring>
        <name>percentile</name>
        <qualifiedname>QuantLib::InhomogeneousPoolLossModel::percentile</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_default_loss_model_1ac7142d4e72958aef5a602167a138973e">percentile</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>percentile</declname>
        </param>
        <briefdescription>
<para>Value at Risk given a default loss percentile. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/inhomogeneouspooldef.hpp" line="82" column="12" bodyfile="ql/experimental/credit/inhomogeneouspooldef.hpp" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1ae84612645744d5b55b1818a00484256a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::InhomogeneousPoolLossModel&lt; copulaPolicy &gt;::expectedShortfall</definition>
        <argsstring>(const Date &amp;d, Probability percentile) const override</argsstring>
        <name>expectedShortfall</name>
        <qualifiedname>QuantLib::InhomogeneousPoolLossModel::expectedShortfall</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_default_loss_model_1a60bd1a166744f4de455cae1c1c83f6a1">expectedShortfall</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ac41728dd3be3e1869bbb9aec06a89d60" kindref="member">Probability</ref></type>
          <declname>percentile</declname>
        </param>
        <briefdescription>
<para>Expected shortfall given a default loss percentile. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/inhomogeneouspooldef.hpp" line="86" column="12" bodyfile="ql/experimental/credit/inhomogeneouspooldef.hpp" bodystart="86" bodyend="90"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1ab2864c82d41adde2085d20845467062d" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_distribution" kindref="compound">Distribution</ref></type>
        <definition>Distribution QuantLib::InhomogeneousPoolLossModel&lt; CP &gt;::lossDistrib</definition>
        <argsstring>(const Date &amp;d) const</argsstring>
        <name>lossDistrib</name>
        <qualifiedname>QuantLib::InhomogeneousPoolLossModel::lossDistrib</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/inhomogeneouspooldef.hpp" line="71" column="22" bodyfile="ql/experimental/credit/inhomogeneouspooldef.hpp" bodystart="131" bodyend="169"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para><ref refid="struct_quant_lib_1_1_default" kindref="compound">Default</ref> loss distribution convolution for finite non homogeneous pool. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::DefaultLossModel</label>
        <link refid="class_quant_lib_1_1_default_loss_model"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::InhomogeneousPoolLossModel&lt; copulaPolicy &gt;</label>
        <link refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::DefaultLossModel</label>
        <link refid="class_quant_lib_1_1_default_loss_model"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>basket_</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Handle&lt; QuantLib::Basket &gt;</label>
        <link refid="class_quant_lib_1_1_handle"/>
      </node>
      <node id="1">
        <label>QuantLib::InhomogeneousPoolLossModel&lt; copulaPolicy &gt;</label>
        <link refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::RelinkableHandle&lt; QuantLib::Basket &gt;</label>
        <link refid="class_quant_lib_1_1_relinkable_handle"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/credit/inhomogeneouspooldef.hpp" line="46" column="5" bodyfile="ql/experimental/credit/inhomogeneouspooldef.hpp" bodystart="46" bodyend="105"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a991dc3244c9f4888f8cd3d736dfea5a5" prot="protected" virt="non-virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>attach_</name></member>
      <member refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1ac5d829aaec6c899b04648a48bc08b8a9" prot="protected" virt="non-virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>attachAmount_</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1ad2700ffb7198321f52fdeb42e9a8e043" prot="protected" virt="non-virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>basket_</name></member>
      <member refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a2b7fa4451cd06b43ce5c5c6d7b6b961f" prot="protected" virt="non-virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>copula_</name></member>
      <member refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a867396b9a51a40bce4e8efae458ab1f2" prot="public" virt="non-virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>copulaType</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1a25ed3ba8a38c4afaca5dca5b8cfd1d7d" prot="protected" virt="virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>defaultCorrelation</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1ac51090f561e4372e495bfa9edee0000b" prot="protected" virt="non-virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>DefaultLossModel</name></member>
      <member refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a15f8fd5b53d8df58bd96f35290b71ac1" prot="private" virt="non-virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>delta_</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1ab57e81d3fdd238c0cb19db2808bc5b59" prot="protected" virt="virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>densityTrancheLoss</name></member>
      <member refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a215c531f46c2a9ead0bb6cf80b21f156" prot="protected" virt="non-virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>detach_</name></member>
      <member refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1ac57afa575038f573f5268514a68afbb5" prot="protected" virt="non-virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>detachAmount_</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1afd0d4637df1423173d5efc758a16f354" prot="protected" virt="virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>expectedRecovery</name></member>
      <member refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1ae84612645744d5b55b1818a00484256a" prot="public" virt="virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>expectedShortfall</name></member>
      <member refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a053102c6a568fdb70903c10979e1586f" prot="public" virt="virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>expectedTrancheLoss</name></member>
      <member refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a3931f9f35f6d34da32aac13e1b88d997" prot="public" virt="non-virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>InhomogeneousPoolLossModel</name></member>
      <member refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1ab2864c82d41adde2085d20845467062d" prot="protected" virt="non-virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>lossDistrib</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1aeff66ecf317c1dc23713424daf563f88" prot="protected" virt="virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>lossDistribution</name></member>
      <member refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a137fde9e3927cf14583a041a4e2e7234" prot="private" virt="non-virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>max_</name></member>
      <member refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a0e8232bec8049e26371b54c7c883bf55" prot="private" virt="non-virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>min_</name></member>
      <member refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a7494b488829364235e696303e9519994" prot="protected" virt="non-virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>nBuckets_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1ad7e0111d69cd12150f8844d8dbd59881" prot="protected" virt="non-virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>notional_</name></member>
      <member refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a773bbbc9740d40d48c216de39990f20e" prot="protected" virt="non-virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>notionals_</name></member>
      <member refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1ad6133e7d173fd8ec14aa2193685ae0ba" prot="private" virt="non-virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>nSteps_</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a9172ce4e691a49aeb93098c9305b749c" prot="public" virt="virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>percentile</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1ab46164d907ae7772c0a5f6788ce4568b" prot="protected" virt="virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>probAtLeastNEvents</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1a922ca5f0ea73b3a33420fbcfb2556e93" prot="protected" virt="virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>probOverLoss</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1ab8053b0ecb53c758939cf5c7a33fb328" prot="protected" virt="virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>probsBeingNthEvent</name></member>
      <member refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a8f7f6568e906e4b22baedebbd23b6834" prot="private" virt="virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>resetModel</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1a467843d56b00359a8fa7d0a1017079a5" prot="protected" virt="virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>splitESFLevel</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1ab70b30442fcdda802730fd711c5348da" prot="protected" virt="virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>splitVaRLevel</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::InhomogeneousPoolLossModel</scope><name>~Observable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

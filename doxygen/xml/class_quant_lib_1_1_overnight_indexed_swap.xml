<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_overnight_indexed_swap" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::OvernightIndexedSwap</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_fixed_vs_floating_swap" prot="public" virt="non-virtual">QuantLib::FixedVsFloatingSwap</basecompoundref>
    <includes refid="overnightindexedswap_8hpp" local="no">overnightindexedswap.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Results</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_overnight_indexed_swap_1ac623b8e446614a84d8f5b397ecd95014" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_overnight_index" kindref="compound">OvernightIndex</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;OvernightIndex&gt; QuantLib::OvernightIndexedSwap::overnightIndex_</definition>
        <argsstring></argsstring>
        <name>overnightIndex_</name>
        <qualifiedname>QuantLib::OvernightIndexedSwap::overnightIndex_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/overnightindexedswap.hpp" line="137" column="25" bodyfile="ql/instruments/overnightindexedswap.hpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_overnight_indexed_swap_1a9dca0861d01d8e3e2310cc18d4cf2a89" prot="private" static="no" mutable="no">
        <type><ref refid="struct_quant_lib_1_1_rate_averaging_1a62ddddd541804c42dae5d108a1ae5437" kindref="member">RateAveraging::Type</ref></type>
        <definition>RateAveraging::Type QuantLib::OvernightIndexedSwap::averagingMethod_</definition>
        <argsstring></argsstring>
        <name>averagingMethod_</name>
        <qualifiedname>QuantLib::OvernightIndexedSwap::averagingMethod_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/overnightindexedswap.hpp" line="138" column="29" bodyfile="ql/instruments/overnightindexedswap.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_overnight_indexed_swap_1a5a79a4387457677387496e4fbb183c07" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
        <definition>Natural QuantLib::OvernightIndexedSwap::lookbackDays_</definition>
        <argsstring></argsstring>
        <name>lookbackDays_</name>
        <qualifiedname>QuantLib::OvernightIndexedSwap::lookbackDays_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/overnightindexedswap.hpp" line="139" column="17" bodyfile="ql/instruments/overnightindexedswap.hpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_overnight_indexed_swap_1ae9a0656becae64c974d9b2800857826f" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
        <definition>Natural QuantLib::OvernightIndexedSwap::lockoutDays_</definition>
        <argsstring></argsstring>
        <name>lockoutDays_</name>
        <qualifiedname>QuantLib::OvernightIndexedSwap::lockoutDays_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/overnightindexedswap.hpp" line="140" column="17" bodyfile="ql/instruments/overnightindexedswap.hpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_overnight_indexed_swap_1a98af036557216085b855293927049ffc" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::OvernightIndexedSwap::applyObservationShift_</definition>
        <argsstring></argsstring>
        <name>applyObservationShift_</name>
        <qualifiedname>QuantLib::OvernightIndexedSwap::applyObservationShift_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/overnightindexedswap.hpp" line="141" column="14" bodyfile="ql/instruments/overnightindexedswap.hpp" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_overnight_indexed_swap_1ad2eb4934be78b0eea7a06afb10be5ad2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::OvernightIndexedSwap::overnightLegBPS</definition>
        <argsstring>() const</argsstring>
        <name>overnightLegBPS</name>
        <qualifiedname>QuantLib::OvernightIndexedSwap::overnightLegBPS</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/overnightindexedswap.hpp" line="131" column="14" bodyfile="ql/instruments/overnightindexedswap.hpp" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_overnight_indexed_swap_1af64a143bf50e82ad982deb287f6142bc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::OvernightIndexedSwap::overnightLegNPV</definition>
        <argsstring>() const</argsstring>
        <name>overnightLegNPV</name>
        <qualifiedname>QuantLib::OvernightIndexedSwap::overnightLegNPV</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/overnightindexedswap.hpp" line="132" column="14" bodyfile="ql/instruments/overnightindexedswap.hpp" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_overnight_indexed_swap_1abd3c51b5c33b4a8886f83bbb7dc4ba17" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::OvernightIndexedSwap::setupFloatingArguments</definition>
        <argsstring>(arguments *args) const override</argsstring>
        <name>setupFloatingArguments</name>
        <qualifiedname>QuantLib::OvernightIndexedSwap::setupFloatingArguments</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fixed_vs_floating_swap_1a8163c7e228db69d60d5f23f6df633fef">setupFloatingArguments</reimplements>
        <param>
          <type><ref refid="class_quant_lib_1_1_fixed_vs_floating_swap_1_1arguments" kindref="compound">arguments</ref> *</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/overnightindexedswap.hpp" line="135" column="14" bodyfile="ql/instruments/overnightindexedswap.cpp" bodystart="169" bodyend="194"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Inspectors</header>
      <memberdef kind="function" id="class_quant_lib_1_1_overnight_indexed_swap_1a3a8646d05e44d7180ecb973786ead973" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
        <definition>Frequency QuantLib::OvernightIndexedSwap::paymentFrequency</definition>
        <argsstring>() const</argsstring>
        <name>paymentFrequency</name>
        <qualifiedname>QuantLib::OvernightIndexedSwap::paymentFrequency</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/overnightindexedswap.hpp" line="113" column="19" bodyfile="ql/instruments/overnightindexedswap.hpp" bodystart="113" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_overnight_indexed_swap_1afe21e4e3eca81af91ba9a59c23f27a90" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; Real &gt; &amp; QuantLib::OvernightIndexedSwap::overnightNominals</definition>
        <argsstring>() const</argsstring>
        <name>overnightNominals</name>
        <qualifiedname>QuantLib::OvernightIndexedSwap::overnightNominals</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/overnightindexedswap.hpp" line="118" column="27" bodyfile="ql/instruments/overnightindexedswap.hpp" bodystart="118" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_overnight_indexed_swap_1ad6fa0f482eb5a5cfc7b80982f60593d9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_schedule" kindref="compound">Schedule</ref> &amp;</type>
        <definition>const Schedule &amp; QuantLib::OvernightIndexedSwap::overnightSchedule</definition>
        <argsstring>() const</argsstring>
        <name>overnightSchedule</name>
        <qualifiedname>QuantLib::OvernightIndexedSwap::overnightSchedule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/overnightindexedswap.hpp" line="119" column="24" bodyfile="ql/instruments/overnightindexedswap.hpp" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_overnight_indexed_swap_1ac46559acd59f323960393ff91a5a8bce" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_overnight_index" kindref="compound">OvernightIndex</ref> &gt; &amp;</type>
        <definition>const ext::shared_ptr&lt; OvernightIndex &gt; &amp; QuantLib::OvernightIndexedSwap::overnightIndex</definition>
        <argsstring>() const</argsstring>
        <name>overnightIndex</name>
        <qualifiedname>QuantLib::OvernightIndexedSwap::overnightIndex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/overnightindexedswap.hpp" line="120" column="31" bodyfile="ql/instruments/overnightindexedswap.hpp" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_overnight_indexed_swap_1a5977c1cff971f804deb027beb49185ff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespace_quant_lib_1a14f786c47ee979097c448d96b2defaab" kindref="member">Leg</ref> &amp;</type>
        <definition>const Leg &amp; QuantLib::OvernightIndexedSwap::overnightLeg</definition>
        <argsstring>() const</argsstring>
        <name>overnightLeg</name>
        <qualifiedname>QuantLib::OvernightIndexedSwap::overnightLeg</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/overnightindexedswap.hpp" line="121" column="19" bodyfile="ql/instruments/overnightindexedswap.hpp" bodystart="121" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_overnight_indexed_swap_1a8bbb95b7b16f3c3538bcce36662f88ca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_quant_lib_1_1_rate_averaging_1a62ddddd541804c42dae5d108a1ae5437" kindref="member">RateAveraging::Type</ref></type>
        <definition>RateAveraging::Type QuantLib::OvernightIndexedSwap::averagingMethod</definition>
        <argsstring>() const</argsstring>
        <name>averagingMethod</name>
        <qualifiedname>QuantLib::OvernightIndexedSwap::averagingMethod</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/overnightindexedswap.hpp" line="123" column="29" bodyfile="ql/instruments/overnightindexedswap.hpp" bodystart="123" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_overnight_indexed_swap_1a8d04f65f827d1ae2ad38cf138b07a95f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
        <definition>Natural QuantLib::OvernightIndexedSwap::lookbackDays</definition>
        <argsstring>() const</argsstring>
        <name>lookbackDays</name>
        <qualifiedname>QuantLib::OvernightIndexedSwap::lookbackDays</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/overnightindexedswap.hpp" line="124" column="17" bodyfile="ql/instruments/overnightindexedswap.hpp" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_overnight_indexed_swap_1a941a72c2e0881897c465fe2bbeeb5cf6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
        <definition>Natural QuantLib::OvernightIndexedSwap::lockoutDays</definition>
        <argsstring>() const</argsstring>
        <name>lockoutDays</name>
        <qualifiedname>QuantLib::OvernightIndexedSwap::lockoutDays</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/overnightindexedswap.hpp" line="125" column="17" bodyfile="ql/instruments/overnightindexedswap.hpp" bodystart="125" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_overnight_indexed_swap_1a39dd52fd07eec1ce1fe732b02b82b633" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::OvernightIndexedSwap::applyObservationShift</definition>
        <argsstring>() const</argsstring>
        <name>applyObservationShift</name>
        <qualifiedname>QuantLib::OvernightIndexedSwap::applyObservationShift</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/overnightindexedswap.hpp" line="126" column="14" bodyfile="ql/instruments/overnightindexedswap.hpp" bodystart="126" bodyend="126"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_overnight_indexed_swap_1a5c952a7add5ac5747a0f6b52acc27d86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::OvernightIndexedSwap::OvernightIndexedSwap</definition>
        <argsstring>(Type type, Real nominal, const Schedule &amp;schedule, Rate fixedRate, DayCounter fixedDC, const ext::shared_ptr&lt; OvernightIndex &gt; &amp;overnightIndex, Spread spread=0.0, Integer paymentLag=0, BusinessDayConvention paymentAdjustment=Following, const Calendar &amp;paymentCalendar=Calendar(), bool telescopicValueDates=false, RateAveraging::Type averagingMethod=RateAveraging::Compound, Natural lookbackDays=Null&lt; Natural &gt;(), Natural lockoutDays=0, bool applyObservationShift=false)</argsstring>
        <name>OvernightIndexedSwap</name>
        <qualifiedname>QuantLib::OvernightIndexedSwap::OvernightIndexedSwap</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_swap_1ad0806daa5b111fcb11ce521b19124b4e" kindref="member">Type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>nominal</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_schedule" kindref="compound">Schedule</ref> &amp;</type>
          <declname>schedule</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>fixedRate</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref></type>
          <declname>fixedDC</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_overnight_index" kindref="compound">OvernightIndex</ref> &gt; &amp;</type>
          <declname>overnightIndex</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ad61d2e1a3f01154233de0d5fbb85177c" kindref="member">Spread</ref></type>
          <declname>spread</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
          <declname>paymentLag</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
          <declname>paymentAdjustment</declname>
          <defval><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881ad881bac893a17d75191f0041eefda956" kindref="member">Following</ref></defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>paymentCalendar</declname>
          <defval><ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>telescopicValueDates</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="struct_quant_lib_1_1_rate_averaging_1a62ddddd541804c42dae5d108a1ae5437" kindref="member">RateAveraging::Type</ref></type>
          <declname>averagingMethod</declname>
          <defval><ref refid="struct_quant_lib_1_1_rate_averaging_1a62ddddd541804c42dae5d108a1ae5437a39cddbbaf5bb1ed36127f08a87d4871f" kindref="member">RateAveraging::Compound</ref></defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>lookbackDays</declname>
          <defval><ref refid="class_quant_lib_1_1_null" kindref="compound">Null</ref>&lt; <ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref> &gt;()</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>lockoutDays</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>applyObservationShift</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/overnightindexedswap.hpp" line="44" column="9" bodyfile="ql/instruments/overnightindexedswap.cpp" bodystart="30" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_overnight_indexed_swap_1ad9c3cf5c9e5ff894c99378a86dd353e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::OvernightIndexedSwap::OvernightIndexedSwap</definition>
        <argsstring>(Type type, const std::vector&lt; Real &gt; &amp;nominals, const Schedule &amp;schedule, Rate fixedRate, DayCounter fixedDC, const ext::shared_ptr&lt; OvernightIndex &gt; &amp;overnightIndex, Spread spread=0.0, Integer paymentLag=0, BusinessDayConvention paymentAdjustment=Following, const Calendar &amp;paymentCalendar=Calendar(), bool telescopicValueDates=false, RateAveraging::Type averagingMethod=RateAveraging::Compound, Natural lookbackDays=Null&lt; Natural &gt;(), Natural lockoutDays=0, bool applyObservationShift=false)</argsstring>
        <name>OvernightIndexedSwap</name>
        <qualifiedname>QuantLib::OvernightIndexedSwap::OvernightIndexedSwap</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_swap_1ad0806daa5b111fcb11ce521b19124b4e" kindref="member">Type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>nominals</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_schedule" kindref="compound">Schedule</ref> &amp;</type>
          <declname>schedule</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>fixedRate</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref></type>
          <declname>fixedDC</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_overnight_index" kindref="compound">OvernightIndex</ref> &gt; &amp;</type>
          <declname>overnightIndex</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ad61d2e1a3f01154233de0d5fbb85177c" kindref="member">Spread</ref></type>
          <declname>spread</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
          <declname>paymentLag</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
          <declname>paymentAdjustment</declname>
          <defval><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881ad881bac893a17d75191f0041eefda956" kindref="member">Following</ref></defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>paymentCalendar</declname>
          <defval><ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>telescopicValueDates</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="struct_quant_lib_1_1_rate_averaging_1a62ddddd541804c42dae5d108a1ae5437" kindref="member">RateAveraging::Type</ref></type>
          <declname>averagingMethod</declname>
          <defval><ref refid="struct_quant_lib_1_1_rate_averaging_1a62ddddd541804c42dae5d108a1ae5437a39cddbbaf5bb1ed36127f08a87d4871f" kindref="member">RateAveraging::Compound</ref></defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>lookbackDays</declname>
          <defval><ref refid="class_quant_lib_1_1_null" kindref="compound">Null</ref>&lt; <ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref> &gt;()</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>lockoutDays</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>applyObservationShift</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/overnightindexedswap.hpp" line="60" column="9" bodyfile="ql/instruments/overnightindexedswap.cpp" bodystart="61" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_overnight_indexed_swap_1ae5efda19e8d354d29c968860612b7013" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::OvernightIndexedSwap::OvernightIndexedSwap</definition>
        <argsstring>(Type type, Real nominal, Schedule fixedSchedule, Rate fixedRate, DayCounter fixedDC, Schedule overnightSchedule, const ext::shared_ptr&lt; OvernightIndex &gt; &amp;overnightIndex, Spread spread=0.0, Integer paymentLag=0, BusinessDayConvention paymentAdjustment=Following, const Calendar &amp;paymentCalendar=Calendar(), bool telescopicValueDates=false, RateAveraging::Type averagingMethod=RateAveraging::Compound, Natural lookbackDays=Null&lt; Natural &gt;(), Natural lockoutDays=0, bool applyObservationShift=false)</argsstring>
        <name>OvernightIndexedSwap</name>
        <qualifiedname>QuantLib::OvernightIndexedSwap::OvernightIndexedSwap</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_swap_1ad0806daa5b111fcb11ce521b19124b4e" kindref="member">Type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>nominal</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_schedule" kindref="compound">Schedule</ref></type>
          <declname>fixedSchedule</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>fixedRate</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref></type>
          <declname>fixedDC</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_schedule" kindref="compound">Schedule</ref></type>
          <declname>overnightSchedule</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_overnight_index" kindref="compound">OvernightIndex</ref> &gt; &amp;</type>
          <declname>overnightIndex</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ad61d2e1a3f01154233de0d5fbb85177c" kindref="member">Spread</ref></type>
          <declname>spread</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
          <declname>paymentLag</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
          <declname>paymentAdjustment</declname>
          <defval><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881ad881bac893a17d75191f0041eefda956" kindref="member">Following</ref></defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>paymentCalendar</declname>
          <defval><ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>telescopicValueDates</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="struct_quant_lib_1_1_rate_averaging_1a62ddddd541804c42dae5d108a1ae5437" kindref="member">RateAveraging::Type</ref></type>
          <declname>averagingMethod</declname>
          <defval><ref refid="struct_quant_lib_1_1_rate_averaging_1a62ddddd541804c42dae5d108a1ae5437a39cddbbaf5bb1ed36127f08a87d4871f" kindref="member">RateAveraging::Compound</ref></defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>lookbackDays</declname>
          <defval><ref refid="class_quant_lib_1_1_null" kindref="compound">Null</ref>&lt; <ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref> &gt;()</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>lockoutDays</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>applyObservationShift</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/overnightindexedswap.hpp" line="76" column="9" bodyfile="ql/instruments/overnightindexedswap.cpp" bodystart="94" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_overnight_indexed_swap_1a5b2d76731b94c426e0e3c4da2d716a02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::OvernightIndexedSwap::OvernightIndexedSwap</definition>
        <argsstring>(Type type, std::vector&lt; Real &gt; fixedNominals, Schedule fixedSchedule, Rate fixedRate, DayCounter fixedDC, const std::vector&lt; Real &gt; &amp;overnightNominals, Schedule overnightSchedule, const ext::shared_ptr&lt; OvernightIndex &gt; &amp;overnightIndex, Spread spread=0.0, Integer paymentLag=0, BusinessDayConvention paymentAdjustment=Following, const Calendar &amp;paymentCalendar=Calendar(), bool telescopicValueDates=false, RateAveraging::Type averagingMethod=RateAveraging::Compound, Natural lookbackDays=Null&lt; Natural &gt;(), Natural lockoutDays=0, bool applyObservationShift=false)</argsstring>
        <name>OvernightIndexedSwap</name>
        <qualifiedname>QuantLib::OvernightIndexedSwap::OvernightIndexedSwap</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_swap_1ad0806daa5b111fcb11ce521b19124b4e" kindref="member">Type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
          <declname>fixedNominals</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_schedule" kindref="compound">Schedule</ref></type>
          <declname>fixedSchedule</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>fixedRate</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref></type>
          <declname>fixedDC</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>overnightNominals</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_schedule" kindref="compound">Schedule</ref></type>
          <declname>overnightSchedule</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_overnight_index" kindref="compound">OvernightIndex</ref> &gt; &amp;</type>
          <declname>overnightIndex</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ad61d2e1a3f01154233de0d5fbb85177c" kindref="member">Spread</ref></type>
          <declname>spread</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
          <declname>paymentLag</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
          <declname>paymentAdjustment</declname>
          <defval><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881ad881bac893a17d75191f0041eefda956" kindref="member">Following</ref></defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>paymentCalendar</declname>
          <defval><ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>telescopicValueDates</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="struct_quant_lib_1_1_rate_averaging_1a62ddddd541804c42dae5d108a1ae5437" kindref="member">RateAveraging::Type</ref></type>
          <declname>averagingMethod</declname>
          <defval><ref refid="struct_quant_lib_1_1_rate_averaging_1a62ddddd541804c42dae5d108a1ae5437a39cddbbaf5bb1ed36127f08a87d4871f" kindref="member">RateAveraging::Compound</ref></defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>lookbackDays</declname>
          <defval><ref refid="class_quant_lib_1_1_null" kindref="compound">Null</ref>&lt; <ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref> &gt;()</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>lockoutDays</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>applyObservationShift</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/overnightindexedswap.hpp" line="93" column="9" bodyfile="ql/instruments/overnightindexedswap.cpp" bodystart="128" bodyend="167"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Overnight indexed swap: fix vs compounded overnight rate. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::FixedVsFloatingSwap</label>
        <link refid="class_quant_lib_1_1_fixed_vs_floating_swap"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Instrument</label>
        <link refid="class_quant_lib_1_1_instrument"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="7">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="1">
        <label>QuantLib::OvernightIndexedSwap</label>
        <link refid="class_quant_lib_1_1_overnight_indexed_swap"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Swap</label>
        <link refid="class_quant_lib_1_1_swap"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="2">
        <label>QuantLib::FixedVsFloatingSwap</label>
        <link refid="class_quant_lib_1_1_fixed_vs_floating_swap"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Instrument</label>
        <link refid="class_quant_lib_1_1_instrument"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>valuationDate_</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="7">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="1">
        <label>QuantLib::OvernightIndexedSwap</label>
        <link refid="class_quant_lib_1_1_overnight_indexed_swap"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Swap</label>
        <link refid="class_quant_lib_1_1_swap"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/instruments/overnightindexedswap.hpp" line="42" column="5" bodyfile="ql/instruments/overnightindexedswap.hpp" bodystart="42" bodyend="142"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_instrument_1a468edb294da268b097c91bf821084c07" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>additionalResults</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a57d2b34e8625ab3d9ffa50c0c7931099" prot="protected" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>additionalResults_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a02070ea7442d30625992c1711030d4b8" prot="protected" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>alwaysForward_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a17c9433135a259e4776baec66204a484" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>alwaysForwardNotifications</name></member>
      <member refid="class_quant_lib_1_1_overnight_indexed_swap_1a39dd52fd07eec1ce1fe732b02b82b633" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>applyObservationShift</name></member>
      <member refid="class_quant_lib_1_1_overnight_indexed_swap_1a98af036557216085b855293927049ffc" prot="private" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>applyObservationShift_</name></member>
      <member refid="class_quant_lib_1_1_overnight_indexed_swap_1a8bbb95b7b16f3c3538bcce36662f88ca" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>averagingMethod</name></member>
      <member refid="class_quant_lib_1_1_overnight_indexed_swap_1a9dca0861d01d8e3e2310cc18d4cf2a89" prot="private" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>averagingMethod_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a4c573c48f7eaead5042864ac0eb5b025" prot="protected" virt="virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a58b4986a80efa18634483a92c121e26e" prot="protected" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>calculated_</name></member>
      <member refid="class_quant_lib_1_1_swap_1a6e033a19eb0f2770eefb8b06912b3abe" prot="public" virt="virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_swap_1a1c5ee95948349edd10e6f7ad842b2c4a" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>endDiscounts</name></member>
      <member refid="class_quant_lib_1_1_swap_1ac3b82c6fb8b5951424767b5e95e9a0b3" prot="protected" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>endDiscounts_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1ac548cb61c864779db09bd0fac6ae7c81" prot="protected" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>engine_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a03502fb6c606b262c25acd94ff4c1e52" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>errorEstimate</name></member>
      <member refid="class_quant_lib_1_1_instrument_1abb8f4cfa7346fab7a2f3a8c8b4da30f3" prot="protected" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>errorEstimate_</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1a4fea6d84677587631aa2ccca6dfe4125" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>fairRate</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1a31bad27b5d73a70f99cec485f7531b53" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>fairSpread</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1abd6a0770406dd5c67ef5ea1cf58cc304" prot="public" virt="virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>fetchResults</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1abc2733a49193ae9304980a35a2ced35a" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>fixedDayCount</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1a4e2f4acdb65926744ff55c9e6c13559d" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>fixedLeg</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1a76ce60f9ed86a0bc072494f9cccf7cc6" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>fixedLegBPS</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1aa0c582832364277f8aac65876dde550e" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>fixedLegNPV</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1a5c230c1bfff51e8bd4a9fe715dbabda0" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>fixedNominals</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1afa743c8c74b4b7fa87305d60bdd147e6" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>fixedRate</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1a0ece282726df59e4ce2774db21f229fa" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>fixedSchedule</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1aa35cbe9d47e64075884bfe6543b5e425" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>FixedVsFloatingSwap</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1a009bdf0822016b8b61590a3d23bb3646" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>floatingDayCount</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1a2a68abf9182154999cb4eaa63a2c56a5" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>floatingLeg</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1aa4001085c1b79d0a0c7c6c8ba4de4531" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>floatingLegBPS</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1ab95fc74b2db9b608674894c75aeba415" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>floatingLegNPV</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1a311da31e22326fc5565f9d904a81f764" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>floatingNominals</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1a640d43cada8b55ce6a42b4a92abfd0e4" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>floatingSchedule</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1afac6ee19c3107c453e1347dd8000e023" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>forwardFirstNotificationOnly</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7157f41e83f2c5d924f5c5bafda04d1d" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>freeze</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7bb721fe00c6854e602758aba629ab77" prot="protected" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>frozen_</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1a81d5baa6358d9e35320fdf34b502abb3" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>iborIndex</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a5e4c746cbf7999c83dc57f87e241f1cc" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>Instrument</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a0a7c5d42815a4e16ee2158e24dbfc748" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>isCalculated</name></member>
      <member refid="class_quant_lib_1_1_swap_1aa8b6f838ad681344ecd604db48ea0b8e" prot="public" virt="virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>isExpired</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a26f18f4ff7faaaebd8eae50e064b493e" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>LazyObject</name></member>
      <member refid="class_quant_lib_1_1_swap_1a6d4f202e19e6d9505ebc111f197244ae" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>leg</name></member>
      <member refid="class_quant_lib_1_1_swap_1a79494447be4eebf5caf0f0940a9b204f" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>legBPS</name></member>
      <member refid="class_quant_lib_1_1_swap_1af40f759b518542c642d71cbc262cab84" prot="protected" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>legBPS_</name></member>
      <member refid="class_quant_lib_1_1_swap_1af1ef52511fbca1b23ffddf978f678d98" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>legNPV</name></member>
      <member refid="class_quant_lib_1_1_swap_1ac85f31b7bf3b97e6c03848c64bef33af" prot="protected" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>legNPV_</name></member>
      <member refid="class_quant_lib_1_1_swap_1a153af8a79c61fda7e68e65fee4817e35" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>legs</name></member>
      <member refid="class_quant_lib_1_1_swap_1a1ca08a7d6e5957950d40383eb4cf0b63" prot="protected" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>legs_</name></member>
      <member refid="class_quant_lib_1_1_overnight_indexed_swap_1a941a72c2e0881897c465fe2bbeeb5cf6" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>lockoutDays</name></member>
      <member refid="class_quant_lib_1_1_overnight_indexed_swap_1ae9a0656becae64c974d9b2800857826f" prot="private" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>lockoutDays_</name></member>
      <member refid="class_quant_lib_1_1_overnight_indexed_swap_1a8d04f65f827d1ae2ad38cf138b07a95f" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>lookbackDays</name></member>
      <member refid="class_quant_lib_1_1_overnight_indexed_swap_1a5a79a4387457677387496e4fbb183c07" prot="private" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>lookbackDays_</name></member>
      <member refid="class_quant_lib_1_1_swap_1a0a9d27adbab145e513399a18852e4d4f" prot="public" virt="virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>maturityDate</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1aeeb21baa76a37a8b281567ff60a7a824" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>nominal</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1ad4672fd75553d21da939664d75357cf0" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>nominals</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a5afdd9698267cd30ddd10cf01f3487b0" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>NPV</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a997663780100d30ae59b14ac0285322d" prot="protected" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>NPV_</name></member>
      <member refid="class_quant_lib_1_1_swap_1ab698ee91db4089a0fef963f6857c1c28" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>npvDateDiscount</name></member>
      <member refid="class_quant_lib_1_1_swap_1a390b5eebe9b8a8915d393465a93809ad" prot="protected" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>npvDateDiscount_</name></member>
      <member refid="class_quant_lib_1_1_swap_1aed6ec56ad5e15f7de107e98fb1526b66" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>numberOfLegs</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::OvernightIndexedSwap</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::OvernightIndexedSwap</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::OvernightIndexedSwap</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::OvernightIndexedSwap</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::OvernightIndexedSwap</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::QuantLib::Observer::"><scope>QuantLib::OvernightIndexedSwap</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_overnight_indexed_swap_1ac46559acd59f323960393ff91a5a8bce" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>overnightIndex</name></member>
      <member refid="class_quant_lib_1_1_overnight_indexed_swap_1ac623b8e446614a84d8f5b397ecd95014" prot="private" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>overnightIndex_</name></member>
      <member refid="class_quant_lib_1_1_overnight_indexed_swap_1a5c952a7add5ac5747a0f6b52acc27d86" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>OvernightIndexedSwap</name></member>
      <member refid="class_quant_lib_1_1_overnight_indexed_swap_1ad9c3cf5c9e5ff894c99378a86dd353e6" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>OvernightIndexedSwap</name></member>
      <member refid="class_quant_lib_1_1_overnight_indexed_swap_1ae5efda19e8d354d29c968860612b7013" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>OvernightIndexedSwap</name></member>
      <member refid="class_quant_lib_1_1_overnight_indexed_swap_1a5b2d76731b94c426e0e3c4da2d716a02" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>OvernightIndexedSwap</name></member>
      <member refid="class_quant_lib_1_1_overnight_indexed_swap_1a5977c1cff971f804deb027beb49185ff" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>overnightLeg</name></member>
      <member refid="class_quant_lib_1_1_overnight_indexed_swap_1ad2eb4934be78b0eea7a06afb10be5ad2" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>overnightLegBPS</name></member>
      <member refid="class_quant_lib_1_1_overnight_indexed_swap_1af64a143bf50e82ad982deb287f6142bc" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>overnightLegNPV</name></member>
      <member refid="class_quant_lib_1_1_overnight_indexed_swap_1afe21e4e3eca81af91ba9a59c23f27a90" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>overnightNominals</name></member>
      <member refid="class_quant_lib_1_1_overnight_indexed_swap_1ad6fa0f482eb5a5cfc7b80982f60593d9" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>overnightSchedule</name></member>
      <member refid="class_quant_lib_1_1_swap_1ad0806daa5b111fcb11ce521b19124b4ea31009108a6e84c98136e1053dbb41824" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>Payer</name></member>
      <member refid="class_quant_lib_1_1_swap_1a2530b88cf2c011a623c667838b8a9aa2" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>payer</name></member>
      <member refid="class_quant_lib_1_1_swap_1a82468c93e5a364d73e164df46bd50445" prot="protected" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>payer_</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1a637d34d71d13d8438b488a7b5771abc5" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>paymentConvention</name></member>
      <member refid="class_quant_lib_1_1_overnight_indexed_swap_1a3a8646d05e44d7180ecb973786ead973" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>paymentFrequency</name></member>
      <member refid="class_quant_lib_1_1_instrument_1aad23f546bbca156a49a95ca2bee124c4" prot="protected" virt="virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>performCalculations</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a70c9b24e50132408d8d9ce4f6674662a" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>recalculate</name></member>
      <member refid="class_quant_lib_1_1_swap_1ad0806daa5b111fcb11ce521b19124b4ea04e66442c860dac71042b03c64af4831" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>Receiver</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a266c15a12160a89f4f9707db85f9fa27" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>result</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a3444386491f179f64f4f0aac24997071" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>setPricingEngine</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1a0b37a99b7c94bfdd3f5a33c6af0e6cde" prot="public" virt="virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>setupArguments</name></member>
      <member refid="class_quant_lib_1_1_overnight_indexed_swap_1abd3c51b5c33b4a8886f83bbb7dc4ba17" prot="private" virt="virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>setupFloatingArguments</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1a100fbecafdf261cc1adfed986173ea1e" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>spread</name></member>
      <member refid="class_quant_lib_1_1_swap_1ae4df409ff659d19c6c76347d0d92c47b" prot="public" virt="virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>startDate</name></member>
      <member refid="class_quant_lib_1_1_swap_1a9a138527c286814c9dba09b3242bbda2" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>startDiscounts</name></member>
      <member refid="class_quant_lib_1_1_swap_1aa235d3e00058faa863f579d9665301e4" prot="protected" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>startDiscounts_</name></member>
      <member refid="class_quant_lib_1_1_swap_1a88c4221d6c0156759c5e84c3188459c8" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>Swap</name></member>
      <member refid="class_quant_lib_1_1_swap_1a546a1d0746c86ad1fed70a0904b18024" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>Swap</name></member>
      <member refid="class_quant_lib_1_1_swap_1a953a237540a310c121aebbf8b4f7621e" prot="protected" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>Swap</name></member>
      <member refid="class_quant_lib_1_1_swap_1ad0806daa5b111fcb11ce521b19124b4e" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>Type</name></member>
      <member refid="class_quant_lib_1_1_fixed_vs_floating_swap_1a09023a93f3c24bc9e27e5b67a7ff448a" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>type</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a2e0e4786666453024b9d4e0761f2770b" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>unfreeze</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1adee2bf49be5c4c78736be293321a856d" prot="public" virt="virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a53a0fc1adc70b73387ad53009725835d" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>valuationDate</name></member>
      <member refid="class_quant_lib_1_1_instrument_1aa60b558fc82f022e13535360ac4a6fed" prot="protected" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>valuationDate_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a9d719c43bb627177a90d7d12324a2d6e" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>~LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::OvernightIndexedSwap</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

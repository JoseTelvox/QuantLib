<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_zabr_model" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::ZabrModel</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_zabr_model_1a0416c593f3b67a20b1d8325a130ba8fe" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::ZabrModel::expiryTime_</definition>
        <argsstring></argsstring>
        <name>expiryTime_</name>
        <qualifiedname>QuantLib::ZabrModel::expiryTime_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabr.hpp" line="66" column="16" bodyfile="ql/experimental/volatility/zabr.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_zabr_model_1a7f5daba789997a51e91d399f1bf0279f" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::ZabrModel::forward_</definition>
        <argsstring></argsstring>
        <name>forward_</name>
        <qualifiedname>QuantLib::ZabrModel::forward_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabr.hpp" line="66" column="28" bodyfile="ql/experimental/volatility/zabr.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_zabr_model_1afe34332b7a717b3b356038fa86563d37" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::ZabrModel::alpha_</definition>
        <argsstring></argsstring>
        <name>alpha_</name>
        <qualifiedname>QuantLib::ZabrModel::alpha_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabr.hpp" line="67" column="16" bodyfile="ql/experimental/volatility/zabr.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_zabr_model_1a7973990ba7d7e3fdb1234043fc919aec" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::ZabrModel::beta_</definition>
        <argsstring></argsstring>
        <name>beta_</name>
        <qualifiedname>QuantLib::ZabrModel::beta_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabr.hpp" line="67" column="23" bodyfile="ql/experimental/volatility/zabr.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_zabr_model_1a48cc1dabdd118449d6d768f0f6ffea37" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::ZabrModel::nu_</definition>
        <argsstring></argsstring>
        <name>nu_</name>
        <qualifiedname>QuantLib::ZabrModel::nu_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabr.hpp" line="67" column="29" bodyfile="ql/experimental/volatility/zabr.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_zabr_model_1a0fd6faf87e850e40c92f93f6562b8b7a" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::ZabrModel::rho_</definition>
        <argsstring></argsstring>
        <name>rho_</name>
        <qualifiedname>QuantLib::ZabrModel::rho_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabr.hpp" line="67" column="33" bodyfile="ql/experimental/volatility/zabr.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_zabr_model_1a5e270f269b4d258d06c95251a0038bbe" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::ZabrModel::gamma_</definition>
        <argsstring></argsstring>
        <name>gamma_</name>
        <qualifiedname>QuantLib::ZabrModel::gamma_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabr.hpp" line="68" column="9" bodyfile="ql/experimental/volatility/zabr.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_zabr_model_1ae2c99128022db5378343fa12840f6479" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ZabrModel::ZabrModel</definition>
        <argsstring>(Real expiryTime, Real forward, Real alpha, Real beta, Real nu, Real rho, Real gamma)</argsstring>
        <name>ZabrModel</name>
        <qualifiedname>QuantLib::ZabrModel::ZabrModel</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>expiryTime</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>forward</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>alpha</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>beta</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>nu</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>rho</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>gamma</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabr.hpp" line="41" column="5" bodyfile="ql/experimental/volatility/zabr.cpp" bodystart="42" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_zabr_model_1a53121a81c5d0994980e80dfc7a16f157" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ZabrModel::localVolatility</definition>
        <argsstring>(Real f) const</argsstring>
        <name>localVolatility</name>
        <qualifiedname>QuantLib::ZabrModel::localVolatility</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabr.hpp" line="43" column="10" bodyfile="ql/experimental/volatility/zabr.cpp" bodystart="103" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_zabr_model_1a76ba46972013c7242e83b7d8afe6d6ca" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt; Real &gt; QuantLib::ZabrModel::localVolatility</definition>
        <argsstring>(const std::vector&lt; Real &gt; &amp;f) const</argsstring>
        <name>localVolatility</name>
        <qualifiedname>QuantLib::ZabrModel::localVolatility</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabr.hpp" line="44" column="17" bodyfile="ql/experimental/volatility/zabr.cpp" bodystart="107" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_zabr_model_1a2bd7591dc79ff17e7b77cbec65ba2c68" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ZabrModel::fdPrice</definition>
        <argsstring>(Real strike) const</argsstring>
        <name>fdPrice</name>
        <qualifiedname>QuantLib::ZabrModel::fdPrice</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>strike</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabr.hpp" line="46" column="10" bodyfile="ql/experimental/volatility/zabr.cpp" bodystart="115" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_zabr_model_1a5fb73818f05cee22613bb7809e9b4db2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt; Real &gt; QuantLib::ZabrModel::fdPrice</definition>
        <argsstring>(const std::vector&lt; Real &gt; &amp;strikes) const</argsstring>
        <name>fdPrice</name>
        <qualifiedname>QuantLib::ZabrModel::fdPrice</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>strikes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabr.hpp" line="47" column="17" bodyfile="ql/experimental/volatility/zabr.cpp" bodystart="119" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_zabr_model_1a37a93a476b3a2f5ec5370a11ee895ee3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ZabrModel::fullFdPrice</definition>
        <argsstring>(Real strike) const</argsstring>
        <name>fullFdPrice</name>
        <qualifiedname>QuantLib::ZabrModel::fullFdPrice</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>strike</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabr.hpp" line="49" column="10" bodyfile="ql/experimental/volatility/zabr.cpp" bodystart="199" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_zabr_model_1ae0b83fc94d3bd7e48f7c37f71af02ac4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ZabrModel::lognormalVolatility</definition>
        <argsstring>(Real strike) const</argsstring>
        <name>lognormalVolatility</name>
        <qualifiedname>QuantLib::ZabrModel::lognormalVolatility</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>strike</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabr.hpp" line="51" column="10" bodyfile="ql/experimental/volatility/zabr.cpp" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_zabr_model_1a8b44b37f11d484d9f60893bd4a197f18" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt; Real &gt; QuantLib::ZabrModel::lognormalVolatility</definition>
        <argsstring>(const std::vector&lt; Real &gt; &amp;strikes) const</argsstring>
        <name>lognormalVolatility</name>
        <qualifiedname>QuantLib::ZabrModel::lognormalVolatility</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>strikes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabr.hpp" line="52" column="17" bodyfile="ql/experimental/volatility/zabr.cpp" bodystart="69" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_zabr_model_1a5195eeeaf7b61e77bacb7534b0e85d10" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ZabrModel::normalVolatility</definition>
        <argsstring>(Real strike) const</argsstring>
        <name>normalVolatility</name>
        <qualifiedname>QuantLib::ZabrModel::normalVolatility</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>strike</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabr.hpp" line="54" column="10" bodyfile="ql/experimental/volatility/zabr.cpp" bodystart="84" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_zabr_model_1a2b19b9ee726719591a97c92615fc43b4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt; Real &gt; QuantLib::ZabrModel::normalVolatility</definition>
        <argsstring>(const std::vector&lt; Real &gt; &amp;strikes) const</argsstring>
        <name>normalVolatility</name>
        <qualifiedname>QuantLib::ZabrModel::normalVolatility</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>strikes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabr.hpp" line="55" column="17" bodyfile="ql/experimental/volatility/zabr.cpp" bodystart="88" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_zabr_model_1a091e781e8a43d149a1a04116272b269c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ZabrModel::forward</definition>
        <argsstring>() const</argsstring>
        <name>forward</name>
        <qualifiedname>QuantLib::ZabrModel::forward</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabr.hpp" line="57" column="10" bodyfile="ql/experimental/volatility/zabr.hpp" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_zabr_model_1a994666bb8b67620eab1e47e179620f8d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ZabrModel::expiryTime</definition>
        <argsstring>() const</argsstring>
        <name>expiryTime</name>
        <qualifiedname>QuantLib::ZabrModel::expiryTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabr.hpp" line="58" column="10" bodyfile="ql/experimental/volatility/zabr.hpp" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_zabr_model_1a8d7f5c525deb704474bd05b1a8365b2f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ZabrModel::alpha</definition>
        <argsstring>() const</argsstring>
        <name>alpha</name>
        <qualifiedname>QuantLib::ZabrModel::alpha</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabr.hpp" line="59" column="10" bodyfile="ql/experimental/volatility/zabr.hpp" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_zabr_model_1a510604e40ac990f965793a32bb9510c9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ZabrModel::beta</definition>
        <argsstring>() const</argsstring>
        <name>beta</name>
        <qualifiedname>QuantLib::ZabrModel::beta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabr.hpp" line="60" column="10" bodyfile="ql/experimental/volatility/zabr.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_zabr_model_1af24ac83a99916ad22cd93a71514bca1c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ZabrModel::nu</definition>
        <argsstring>() const</argsstring>
        <name>nu</name>
        <qualifiedname>QuantLib::ZabrModel::nu</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabr.hpp" line="61" column="10" bodyfile="ql/experimental/volatility/zabr.hpp" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_zabr_model_1a6539ce0b90a854e497ae9e9bbe0442ef" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ZabrModel::rho</definition>
        <argsstring>() const</argsstring>
        <name>rho</name>
        <qualifiedname>QuantLib::ZabrModel::rho</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabr.hpp" line="62" column="10" bodyfile="ql/experimental/volatility/zabr.hpp" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_zabr_model_1a8ce40ff27a8af9e402539298fbfd762f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ZabrModel::gamma</definition>
        <argsstring>() const</argsstring>
        <name>gamma</name>
        <qualifiedname>QuantLib::ZabrModel::gamma</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabr.hpp" line="63" column="10" bodyfile="ql/experimental/volatility/zabr.hpp" bodystart="63" bodyend="63"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_zabr_model_1a37d65045e062fcf0786f0162212fcbcf" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ZabrModel::x</definition>
        <argsstring>(Real strike) const</argsstring>
        <name>x</name>
        <qualifiedname>QuantLib::ZabrModel::x</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>strike</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabr.hpp" line="70" column="10" bodyfile="ql/experimental/volatility/zabr.cpp" bodystart="311" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_zabr_model_1a3a08dfaa2d80d96c7879c4956592e082" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt; Real &gt; QuantLib::ZabrModel::x</definition>
        <argsstring>(const std::vector&lt; Real &gt; &amp;strikes) const</argsstring>
        <name>x</name>
        <qualifiedname>QuantLib::ZabrModel::x</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>strikes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabr.hpp" line="71" column="17" bodyfile="ql/experimental/volatility/zabr.cpp" bodystart="315" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_zabr_model_1af922fe80bbbad3fd9475d0f1c1a8854c" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ZabrModel::y</definition>
        <argsstring>(Real strike) const</argsstring>
        <name>y</name>
        <qualifiedname>QuantLib::ZabrModel::y</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>strike</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabr.hpp" line="73" column="10" bodyfile="ql/experimental/volatility/zabr.cpp" bodystart="362" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_zabr_model_1a1dc7e976befb1c116543a551069a7862" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ZabrModel::F</definition>
        <argsstring>(Real y, Real u) const</argsstring>
        <name>F</name>
        <qualifiedname>QuantLib::ZabrModel::F</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabr.hpp" line="75" column="10" bodyfile="ql/experimental/volatility/zabr.cpp" bodystart="376" bodyend="384"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_zabr_model_1a61482cf1eb015607cd8ca5b1bbcb084a" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ZabrModel::lognormalVolatilityHelper</definition>
        <argsstring>(Real strike, Real x) const</argsstring>
        <name>lognormalVolatilityHelper</name>
        <qualifiedname>QuantLib::ZabrModel::lognormalVolatilityHelper</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabr.hpp" line="77" column="10" bodyfile="ql/experimental/volatility/zabr.cpp" bodystart="57" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_zabr_model_1a2d014795892dd809dfd3da8d25226c66" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ZabrModel::normalVolatilityHelper</definition>
        <argsstring>(Real strike, Real x) const</argsstring>
        <name>normalVolatilityHelper</name>
        <qualifiedname>QuantLib::ZabrModel::normalVolatilityHelper</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabr.hpp" line="78" column="10" bodyfile="ql/experimental/volatility/zabr.cpp" bodystart="77" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_zabr_model_1a8006631931e4b5e2d129586d06a77026" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ZabrModel::localVolatilityHelper</definition>
        <argsstring>(Real f, Real x) const</argsstring>
        <name>localVolatilityHelper</name>
        <qualifiedname>QuantLib::ZabrModel::localVolatilityHelper</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabr.hpp" line="79" column="10" bodyfile="ql/experimental/volatility/zabr.cpp" bodystart="96" bodyend="101"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/experimental/volatility/zabr.hpp" line="38" column="1" bodyfile="ql/experimental/volatility/zabr.hpp" bodystart="38" bodyend="80"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_zabr_model_1a8d7f5c525deb704474bd05b1a8365b2f" prot="public" virt="non-virtual"><scope>QuantLib::ZabrModel</scope><name>alpha</name></member>
      <member refid="class_quant_lib_1_1_zabr_model_1afe34332b7a717b3b356038fa86563d37" prot="private" virt="non-virtual"><scope>QuantLib::ZabrModel</scope><name>alpha_</name></member>
      <member refid="class_quant_lib_1_1_zabr_model_1a510604e40ac990f965793a32bb9510c9" prot="public" virt="non-virtual"><scope>QuantLib::ZabrModel</scope><name>beta</name></member>
      <member refid="class_quant_lib_1_1_zabr_model_1a7973990ba7d7e3fdb1234043fc919aec" prot="private" virt="non-virtual"><scope>QuantLib::ZabrModel</scope><name>beta_</name></member>
      <member refid="class_quant_lib_1_1_zabr_model_1a994666bb8b67620eab1e47e179620f8d" prot="public" virt="non-virtual"><scope>QuantLib::ZabrModel</scope><name>expiryTime</name></member>
      <member refid="class_quant_lib_1_1_zabr_model_1a0416c593f3b67a20b1d8325a130ba8fe" prot="private" virt="non-virtual"><scope>QuantLib::ZabrModel</scope><name>expiryTime_</name></member>
      <member refid="class_quant_lib_1_1_zabr_model_1a1dc7e976befb1c116543a551069a7862" prot="private" virt="non-virtual"><scope>QuantLib::ZabrModel</scope><name>F</name></member>
      <member refid="class_quant_lib_1_1_zabr_model_1a2bd7591dc79ff17e7b77cbec65ba2c68" prot="public" virt="non-virtual"><scope>QuantLib::ZabrModel</scope><name>fdPrice</name></member>
      <member refid="class_quant_lib_1_1_zabr_model_1a5fb73818f05cee22613bb7809e9b4db2" prot="public" virt="non-virtual"><scope>QuantLib::ZabrModel</scope><name>fdPrice</name></member>
      <member refid="class_quant_lib_1_1_zabr_model_1a091e781e8a43d149a1a04116272b269c" prot="public" virt="non-virtual"><scope>QuantLib::ZabrModel</scope><name>forward</name></member>
      <member refid="class_quant_lib_1_1_zabr_model_1a7f5daba789997a51e91d399f1bf0279f" prot="private" virt="non-virtual"><scope>QuantLib::ZabrModel</scope><name>forward_</name></member>
      <member refid="class_quant_lib_1_1_zabr_model_1a37a93a476b3a2f5ec5370a11ee895ee3" prot="public" virt="non-virtual"><scope>QuantLib::ZabrModel</scope><name>fullFdPrice</name></member>
      <member refid="class_quant_lib_1_1_zabr_model_1a8ce40ff27a8af9e402539298fbfd762f" prot="public" virt="non-virtual"><scope>QuantLib::ZabrModel</scope><name>gamma</name></member>
      <member refid="class_quant_lib_1_1_zabr_model_1a5e270f269b4d258d06c95251a0038bbe" prot="private" virt="non-virtual"><scope>QuantLib::ZabrModel</scope><name>gamma_</name></member>
      <member refid="class_quant_lib_1_1_zabr_model_1a53121a81c5d0994980e80dfc7a16f157" prot="public" virt="non-virtual"><scope>QuantLib::ZabrModel</scope><name>localVolatility</name></member>
      <member refid="class_quant_lib_1_1_zabr_model_1a76ba46972013c7242e83b7d8afe6d6ca" prot="public" virt="non-virtual"><scope>QuantLib::ZabrModel</scope><name>localVolatility</name></member>
      <member refid="class_quant_lib_1_1_zabr_model_1a8006631931e4b5e2d129586d06a77026" prot="private" virt="non-virtual"><scope>QuantLib::ZabrModel</scope><name>localVolatilityHelper</name></member>
      <member refid="class_quant_lib_1_1_zabr_model_1ae0b83fc94d3bd7e48f7c37f71af02ac4" prot="public" virt="non-virtual"><scope>QuantLib::ZabrModel</scope><name>lognormalVolatility</name></member>
      <member refid="class_quant_lib_1_1_zabr_model_1a8b44b37f11d484d9f60893bd4a197f18" prot="public" virt="non-virtual"><scope>QuantLib::ZabrModel</scope><name>lognormalVolatility</name></member>
      <member refid="class_quant_lib_1_1_zabr_model_1a61482cf1eb015607cd8ca5b1bbcb084a" prot="private" virt="non-virtual"><scope>QuantLib::ZabrModel</scope><name>lognormalVolatilityHelper</name></member>
      <member refid="class_quant_lib_1_1_zabr_model_1a5195eeeaf7b61e77bacb7534b0e85d10" prot="public" virt="non-virtual"><scope>QuantLib::ZabrModel</scope><name>normalVolatility</name></member>
      <member refid="class_quant_lib_1_1_zabr_model_1a2b19b9ee726719591a97c92615fc43b4" prot="public" virt="non-virtual"><scope>QuantLib::ZabrModel</scope><name>normalVolatility</name></member>
      <member refid="class_quant_lib_1_1_zabr_model_1a2d014795892dd809dfd3da8d25226c66" prot="private" virt="non-virtual"><scope>QuantLib::ZabrModel</scope><name>normalVolatilityHelper</name></member>
      <member refid="class_quant_lib_1_1_zabr_model_1af24ac83a99916ad22cd93a71514bca1c" prot="public" virt="non-virtual"><scope>QuantLib::ZabrModel</scope><name>nu</name></member>
      <member refid="class_quant_lib_1_1_zabr_model_1a48cc1dabdd118449d6d768f0f6ffea37" prot="private" virt="non-virtual"><scope>QuantLib::ZabrModel</scope><name>nu_</name></member>
      <member refid="class_quant_lib_1_1_zabr_model_1a6539ce0b90a854e497ae9e9bbe0442ef" prot="public" virt="non-virtual"><scope>QuantLib::ZabrModel</scope><name>rho</name></member>
      <member refid="class_quant_lib_1_1_zabr_model_1a0fd6faf87e850e40c92f93f6562b8b7a" prot="private" virt="non-virtual"><scope>QuantLib::ZabrModel</scope><name>rho_</name></member>
      <member refid="class_quant_lib_1_1_zabr_model_1a37d65045e062fcf0786f0162212fcbcf" prot="private" virt="non-virtual"><scope>QuantLib::ZabrModel</scope><name>x</name></member>
      <member refid="class_quant_lib_1_1_zabr_model_1a3a08dfaa2d80d96c7879c4956592e082" prot="private" virt="non-virtual"><scope>QuantLib::ZabrModel</scope><name>x</name></member>
      <member refid="class_quant_lib_1_1_zabr_model_1af922fe80bbbad3fd9475d0f1c1a8854c" prot="private" virt="non-virtual"><scope>QuantLib::ZabrModel</scope><name>y</name></member>
      <member refid="class_quant_lib_1_1_zabr_model_1ae2c99128022db5378343fa12840f6479" prot="public" virt="non-virtual"><scope>QuantLib::ZabrModel</scope><name>ZabrModel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

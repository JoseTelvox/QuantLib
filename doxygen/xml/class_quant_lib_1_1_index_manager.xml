<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_index_manager" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::IndexManager</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_singleton" prot="public" virt="non-virtual">QuantLib::Singleton&lt; IndexManager &gt;</basecompoundref>
    <includes refid="indexmanager_8hpp" local="no">indexmanager.hpp</includes>
    <innerclass refid="struct_quant_lib_1_1_index_manager_1_1_case_insensitive_compare" prot="private">QuantLib::IndexManager::CaseInsensitiveCompare</innerclass>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_quant_lib_1_1_index_manager_1ab10666efc7e0e3ce490caf4ee6718752" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Singleton&lt; IndexManager &gt;</definition>
        <argsstring></argsstring>
        <name>Singleton&lt; IndexManager &gt;</name>
        <qualifiedname>QuantLib::IndexManager::Singleton&lt; IndexManager &gt;</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_singleton" kindref="compound">Singleton</ref>&lt; <ref refid="class_quant_lib_1_1_index_manager" kindref="compound">IndexManager</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/indexmanager.hpp" line="1" column="0" bodyfile="ql/indexes/indexmanager.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_quant_lib_1_1_index_manager_1a5e006d6479c0d22c54edd9cc043979d4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Index</definition>
        <argsstring></argsstring>
        <name>Index</name>
        <qualifiedname>QuantLib::IndexManager::Index</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_index" kindref="compound">Index</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/indexmanager.hpp" line="40" column="22" bodyfile="ql/indexes/indexmanager.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_index_manager_1aef0001d8ce900b4e4ce5bb3c5c5437c5" prot="private" static="no" mutable="yes">
        <type>std::map&lt; std::string, <ref refid="class_quant_lib_1_1_time_series" kindref="compound">TimeSeries</ref>&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;, CaseInsensitiveCompare &gt;</type>
        <definition>std::map&lt;std::string, TimeSeries&lt;Real&gt;, CaseInsensitiveCompare&gt; QuantLib::IndexManager::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <qualifiedname>QuantLib::IndexManager::data_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/indexmanager.hpp" line="98" column="26" bodyfile="ql/indexes/indexmanager.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_index_manager_1a01b901d93bac24e83a4d1631f4bda707" prot="private" static="no" mutable="yes">
        <type>std::map&lt; std::string, ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_observable" kindref="compound">Observable</ref> &gt; &gt;</type>
        <definition>std::map&lt;std::string, ext::shared_ptr&lt;Observable&gt; &gt; QuantLib::IndexManager::notifiers_</definition>
        <argsstring></argsstring>
        <name>notifiers_</name>
        <qualifiedname>QuantLib::IndexManager::notifiers_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/indexmanager.hpp" line="99" column="26" bodyfile="ql/indexes/indexmanager.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_index_manager_1af528d4c39a64898812290c6238623068" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::IndexManager::IndexManager</definition>
        <argsstring>()=default</argsstring>
        <name>IndexManager</name>
        <qualifiedname>QuantLib::IndexManager::IndexManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/indexmanager.hpp" line="43" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_index_manager_1a5dcf312845605b4c977b069e40f0dd78" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::IndexManager::addFixing</definition>
        <argsstring>(const std::string &amp;name, const Date &amp;fixingDate, Real fixing, bool forceOverwrite=false)</argsstring>
        <name>addFixing</name>
        <qualifiedname>QuantLib::IndexManager::addFixing</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>fixingDate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>fixing</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forceOverwrite</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>add a fixing </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/indexmanager.hpp" line="102" column="14" bodyfile="ql/indexes/indexmanager.cpp" bodystart="39" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_index_manager_1aa6466e21df38058b40cb1e8fa39e3630" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DateIterator</type>
          </param>
          <param>
            <type>class ValueIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void QuantLib::IndexManager::addFixings</definition>
        <argsstring>(const std::string &amp;name, DateIterator dBegin, DateIterator dEnd, ValueIterator vBegin, bool forceOverwrite=false, const std::function&lt; bool(const Date &amp;d)&gt; &amp;isValidFixingDate={})</argsstring>
        <name>addFixings</name>
        <qualifiedname>QuantLib::IndexManager::addFixings</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>DateIterator</type>
          <declname>dBegin</declname>
        </param>
        <param>
          <type>DateIterator</type>
          <declname>dEnd</declname>
        </param>
        <param>
          <type>ValueIterator</type>
          <declname>vBegin</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forceOverwrite</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const std::function&lt; bool(const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;d)&gt; &amp;</type>
          <declname>isValidFixingDate</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>add fixings </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/indexmanager.hpp" line="108" column="14" bodyfile="ql/indexes/indexmanager.hpp" bodystart="108" bodyend="151"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_index_manager_1a514147555445b9a687ed51e0c97ab898" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; QuantLib::IndexManager::histories</definition>
        <argsstring>() const</argsstring>
        <name>histories</name>
        <qualifiedname>QuantLib::IndexManager::histories</qualifiedname>
        <briefdescription>
<para>returns all names of the indexes for which fixings were stored </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/indexmanager.hpp" line="47" column="21" bodyfile="ql/indexes/indexmanager.cpp" bodystart="55" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_index_manager_1ab08e83e2689debfc13ef775a13ed529c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::IndexManager::clearHistories</definition>
        <argsstring>()</argsstring>
        <name>clearHistories</name>
        <qualifiedname>QuantLib::IndexManager::clearHistories</qualifiedname>
        <briefdescription>
<para>clears all stored fixings </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/indexmanager.hpp" line="49" column="14" bodyfile="ql/indexes/indexmanager.cpp" bodystart="70" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_index_manager_1abd559a3b1bc2aed558b51c5908901432" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::IndexManager::hasHistory</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>hasHistory</name>
        <qualifiedname>QuantLib::IndexManager::hasHistory</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000086"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="class_quant_lib_1_1_index_1a3ca2ef1910e74b22dd55c39013642a5c" kindref="member">Index::hasHistoricalFixing</ref> instead. Deprecated in version 1.37. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/indexmanager.hpp" line="57" column="14" bodyfile="ql/indexes/indexmanager.cpp" bodystart="24" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_index_manager_1a3f97171cf7bdb7925257dc0943af9cc4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_time_series" kindref="compound">TimeSeries</ref>&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
        <definition>const TimeSeries&lt; Real &gt; &amp; QuantLib::IndexManager::getHistory</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>getHistory</name>
        <qualifiedname>QuantLib::IndexManager::getHistory</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000087"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="class_quant_lib_1_1_index_1a373faa497820b43992d18ead1a8b87a8" kindref="member">Index::timeSeries</ref> instead. Deprecated in version 1.37. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/indexmanager.hpp" line="63" column="26" bodyfile="ql/indexes/indexmanager.cpp" bodystart="28" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_index_manager_1aed0131e372bbb1b28589d8db8abe9f9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::IndexManager::clearHistory</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>clearHistory</name>
        <qualifiedname>QuantLib::IndexManager::clearHistory</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000088"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="class_quant_lib_1_1_index_1a6ebd31a5c6890f2dc0b25fc7824c809c" kindref="member">Index::clearFixings</ref> instead. Deprecated in version 1.37. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/indexmanager.hpp" line="69" column="14" bodyfile="ql/indexes/indexmanager.cpp" bodystart="63" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_index_manager_1a894f51198b68149af6fabcf43492e977" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::IndexManager::hasHistoricalFixing</definition>
        <argsstring>(const std::string &amp;name, const Date &amp;fixingDate) const</argsstring>
        <name>hasHistoricalFixing</name>
        <qualifiedname>QuantLib::IndexManager::hasHistoricalFixing</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>fixingDate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000089"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="class_quant_lib_1_1_index_1a3ca2ef1910e74b22dd55c39013642a5c" kindref="member">Index::hasHistoricalFixing</ref> instead. Deprecated in version 1.37. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/indexmanager.hpp" line="75" column="14" bodyfile="ql/indexes/indexmanager.cpp" bodystart="78" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_index_manager_1a02de69384fb7bb770925e01fe83e8c40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::IndexManager::setHistory</definition>
        <argsstring>(const std::string &amp;name, TimeSeries&lt; Real &gt; history)</argsstring>
        <name>setHistory</name>
        <qualifiedname>QuantLib::IndexManager::setHistory</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_time_series" kindref="compound">TimeSeries</ref>&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
          <declname>history</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000090"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="class_quant_lib_1_1_index_1a91fce2b65887f04e2cbcae5d9ffcc15e" kindref="member">Index::addFixings</ref> instead. Deprecated in version 1.37. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/indexmanager.hpp" line="81" column="14" bodyfile="ql/indexes/indexmanager.cpp" bodystart="32" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_index_manager_1a0bb6d151320a984c4dcaec76675a6fad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_observable" kindref="compound">Observable</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; Observable &gt; QuantLib::IndexManager::notifier</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>notifier</name>
        <qualifiedname>QuantLib::IndexManager::notifier</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000091"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Register with the relevant index instead. Deprecated in version 1.37. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/indexmanager.hpp" line="87" column="25" bodyfile="ql/indexes/indexmanager.cpp" bodystart="46" bodyend="53"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>global repository for past index fixings </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>index names are case insensitive </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::IndexManager</label>
        <link refid="class_quant_lib_1_1_index_manager"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Singleton&lt; IndexManager &gt;</label>
        <link refid="class_quant_lib_1_1_singleton"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::IndexManager</label>
        <link refid="class_quant_lib_1_1_index_manager"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Singleton&lt; IndexManager &gt;</label>
        <link refid="class_quant_lib_1_1_singleton"/>
      </node>
    </collaborationgraph>
    <location file="ql/indexes/indexmanager.hpp" line="38" column="5" bodyfile="ql/indexes/indexmanager.hpp" bodystart="38" bodyend="152"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_index_manager_1a5dcf312845605b4c977b069e40f0dd78" prot="private" virt="non-virtual"><scope>QuantLib::IndexManager</scope><name>addFixing</name></member>
      <member refid="class_quant_lib_1_1_index_manager_1aa6466e21df38058b40cb1e8fa39e3630" prot="private" virt="non-virtual"><scope>QuantLib::IndexManager</scope><name>addFixings</name></member>
      <member refid="class_quant_lib_1_1_index_manager_1ab08e83e2689debfc13ef775a13ed529c" prot="public" virt="non-virtual"><scope>QuantLib::IndexManager</scope><name>clearHistories</name></member>
      <member refid="class_quant_lib_1_1_index_manager_1aed0131e372bbb1b28589d8db8abe9f9c" prot="public" virt="non-virtual"><scope>QuantLib::IndexManager</scope><name>clearHistory</name></member>
      <member refid="class_quant_lib_1_1_index_manager_1aef0001d8ce900b4e4ce5bb3c5c5437c5" prot="private" virt="non-virtual"><scope>QuantLib::IndexManager</scope><name>data_</name></member>
      <member refid="class_quant_lib_1_1_index_manager_1a3f97171cf7bdb7925257dc0943af9cc4" prot="public" virt="non-virtual"><scope>QuantLib::IndexManager</scope><name>getHistory</name></member>
      <member refid="class_quant_lib_1_1_index_manager_1a894f51198b68149af6fabcf43492e977" prot="public" virt="non-virtual"><scope>QuantLib::IndexManager</scope><name>hasHistoricalFixing</name></member>
      <member refid="class_quant_lib_1_1_index_manager_1abd559a3b1bc2aed558b51c5908901432" prot="public" virt="non-virtual"><scope>QuantLib::IndexManager</scope><name>hasHistory</name></member>
      <member refid="class_quant_lib_1_1_index_manager_1a514147555445b9a687ed51e0c97ab898" prot="public" virt="non-virtual"><scope>QuantLib::IndexManager</scope><name>histories</name></member>
      <member refid="class_quant_lib_1_1_index_manager_1a5e006d6479c0d22c54edd9cc043979d4" prot="private" virt="non-virtual"><scope>QuantLib::IndexManager</scope><name>Index</name></member>
      <member refid="class_quant_lib_1_1_index_manager_1af528d4c39a64898812290c6238623068" prot="private" virt="non-virtual"><scope>QuantLib::IndexManager</scope><name>IndexManager</name></member>
      <member refid="class_quant_lib_1_1_singleton_1ac412b7766b32f56372a3e966c5f3f386" prot="public" virt="non-virtual"><scope>QuantLib::IndexManager</scope><name>instance</name></member>
      <member refid="class_quant_lib_1_1_index_manager_1a0bb6d151320a984c4dcaec76675a6fad" prot="public" virt="non-virtual"><scope>QuantLib::IndexManager</scope><name>notifier</name></member>
      <member refid="class_quant_lib_1_1_index_manager_1a01b901d93bac24e83a4d1631f4bda707" prot="private" virt="non-virtual"><scope>QuantLib::IndexManager</scope><name>notifiers_</name></member>
      <member refid="class_quant_lib_1_1_singleton_1a9d8c762b553192d479d7ff7edb20624d" prot="public" virt="non-virtual"><scope>QuantLib::IndexManager</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_singleton_1a87afbf4a53f4a13d2b64135656dc23ba" prot="public" virt="non-virtual"><scope>QuantLib::IndexManager</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_index_manager_1a02de69384fb7bb770925e01fe83e8c40" prot="public" virt="non-virtual"><scope>QuantLib::IndexManager</scope><name>setHistory</name></member>
      <member refid="class_quant_lib_1_1_singleton_1aec6ad8083eb125b47049a296aa078da3" prot="public" virt="non-virtual"><scope>QuantLib::IndexManager</scope><name>Singleton</name></member>
      <member refid="class_quant_lib_1_1_singleton_1adba174550e55859f5a7cf6fc060c3b24" prot="public" virt="non-virtual"><scope>QuantLib::IndexManager</scope><name>Singleton</name></member>
      <member refid="class_quant_lib_1_1_singleton_1a711b37092c979a43c38a4ac40dadd4d3" prot="protected" virt="non-virtual"><scope>QuantLib::IndexManager</scope><name>Singleton</name></member>
      <member refid="class_quant_lib_1_1_index_manager_1ab10666efc7e0e3ce490caf4ee6718752" prot="private" virt="non-virtual"><scope>QuantLib::IndexManager</scope><name>Singleton&lt; IndexManager &gt;</name></member>
      <member refid="class_quant_lib_1_1_singleton_1ac8b95ca8ebb2759f6dda65e3c787bc99" prot="public" virt="non-virtual"><scope>QuantLib::IndexManager</scope><name>~Singleton</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_simple_cost_function" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::SimpleCostFunction</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_cost_function" prot="public" virt="non-virtual">QuantLib::CostFunction</basecompoundref>
    <templateparamlist>
      <param>
        <type>class ValuesFn</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_simple_cost_function_1a06039d6e09e8fc7cb171c54ac7905231" prot="private" static="no" mutable="no">
        <type>ValuesFn</type>
        <definition>ValuesFn QuantLib::SimpleCostFunction&lt; ValuesFn &gt;::values_</definition>
        <argsstring></argsstring>
        <name>values_</name>
        <qualifiedname>QuantLib::SimpleCostFunction::values_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/costfunction.hpp" line="106" column="18" bodyfile="ql/math/optimization/costfunction.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_simple_cost_function_1a505687a92b2a71535f3cc16abba58b87" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::SimpleCostFunction&lt; ValuesFn &gt;::SimpleCostFunction</definition>
        <argsstring>(ValuesFn values)</argsstring>
        <name>SimpleCostFunction</name>
        <qualifiedname>QuantLib::SimpleCostFunction::SimpleCostFunction</qualifiedname>
        <param>
          <type>ValuesFn</type>
          <declname>values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/costfunction.hpp" line="102" column="18" bodyfile="ql/math/optimization/costfunction.hpp" bodystart="102" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_simple_cost_function_1af7ffd6da8c332de98ab4df7e8936ad72" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::SimpleCostFunction&lt; ValuesFn &gt;::values</definition>
        <argsstring>(const Array &amp;x) const override</argsstring>
        <name>values</name>
        <qualifiedname>QuantLib::SimpleCostFunction::values</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_cost_function_1ab43da17891b724c8352c01c2478d04db">values</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>method to overload to compute the cost function values in x </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/costfunction.hpp" line="104" column="15" bodyfile="ql/math/optimization/costfunction.hpp" bodystart="104" bodyend="104"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::CostFunction</label>
        <link refid="class_quant_lib_1_1_cost_function"/>
      </node>
      <node id="1">
        <label>QuantLib::SimpleCostFunction&lt; ValuesFn &gt;</label>
        <link refid="class_quant_lib_1_1_simple_cost_function"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::CostFunction</label>
        <link refid="class_quant_lib_1_1_cost_function"/>
      </node>
      <node id="1">
        <label>QuantLib::SimpleCostFunction&lt; ValuesFn &gt;</label>
        <link refid="class_quant_lib_1_1_simple_cost_function"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/math/optimization/costfunction.hpp" line="100" column="5" bodyfile="ql/math/optimization/costfunction.hpp" bodystart="100" bodyend="107"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_cost_function_1a0dc9070b6d79cf91aef8ba48e2808263" prot="public" virt="virtual"><scope>QuantLib::SimpleCostFunction</scope><name>finiteDifferenceEpsilon</name></member>
      <member refid="class_quant_lib_1_1_cost_function_1aad44fa61459514a8e55208d50716698b" prot="public" virt="virtual"><scope>QuantLib::SimpleCostFunction</scope><name>gradient</name></member>
      <member refid="class_quant_lib_1_1_cost_function_1a5bf2d8163ed5dea7ec811377e2835eca" prot="public" virt="virtual"><scope>QuantLib::SimpleCostFunction</scope><name>jacobian</name></member>
      <member refid="class_quant_lib_1_1_simple_cost_function_1a505687a92b2a71535f3cc16abba58b87" prot="public" virt="non-virtual"><scope>QuantLib::SimpleCostFunction</scope><name>SimpleCostFunction</name></member>
      <member refid="class_quant_lib_1_1_cost_function_1a2255742e3e05477d773cdf3705411661" prot="public" virt="virtual"><scope>QuantLib::SimpleCostFunction</scope><name>value</name></member>
      <member refid="class_quant_lib_1_1_cost_function_1ae0c8902d6ce2e535237ae4370956d161" prot="public" virt="virtual"><scope>QuantLib::SimpleCostFunction</scope><name>valueAndGradient</name></member>
      <member refid="class_quant_lib_1_1_simple_cost_function_1af7ffd6da8c332de98ab4df7e8936ad72" prot="public" virt="virtual"><scope>QuantLib::SimpleCostFunction</scope><name>values</name></member>
      <member refid="class_quant_lib_1_1_simple_cost_function_1a06039d6e09e8fc7cb171c54ac7905231" prot="private" virt="non-virtual"><scope>QuantLib::SimpleCostFunction</scope><name>values_</name></member>
      <member refid="class_quant_lib_1_1_cost_function_1a1aa00768b27a3446404b3029660c2e68" prot="public" virt="virtual"><scope>QuantLib::SimpleCostFunction</scope><name>valuesAndJacobian</name></member>
      <member refid="class_quant_lib_1_1_cost_function_1a04929e863b85bc26f50ad9052ba7ee73" prot="public" virt="virtual"><scope>QuantLib::SimpleCostFunction</scope><name>~CostFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

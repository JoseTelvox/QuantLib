<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_interval_price" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::IntervalPrice</compoundname>
    <includes refid="prices_8hpp" local="no">prices.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Helper functions</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_interval_price_1a94ead045d32effc447d49db62da58b1e" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::IntervalPrice::open_</definition>
        <argsstring></argsstring>
        <name>open_</name>
        <qualifiedname>QuantLib::IntervalPrice::open_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/prices.hpp" line="104" column="14" bodyfile="ql/prices.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_interval_price_1a4977fad5c3d0ea285635dc9e7e17e13a" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::IntervalPrice::close_</definition>
        <argsstring></argsstring>
        <name>close_</name>
        <qualifiedname>QuantLib::IntervalPrice::close_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/prices.hpp" line="104" column="20" bodyfile="ql/prices.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_interval_price_1afdacadc31e111c6f155edb2d157da30f" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::IntervalPrice::high_</definition>
        <argsstring></argsstring>
        <name>high_</name>
        <qualifiedname>QuantLib::IntervalPrice::high_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/prices.hpp" line="104" column="27" bodyfile="ql/prices.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_interval_price_1ac41fc85df9b50eab3dd191f9429bc26d" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::IntervalPrice::low_</definition>
        <argsstring></argsstring>
        <name>low_</name>
        <qualifiedname>QuantLib::IntervalPrice::low_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/prices.hpp" line="104" column="33" bodyfile="ql/prices.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interval_price_1ada7a4b50441d9fd76872a76c85cd639f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_time_series" kindref="compound">TimeSeries</ref>&lt; <ref refid="class_quant_lib_1_1_interval_price" kindref="compound">IntervalPrice</ref> &gt;</type>
        <definition>TimeSeries&lt; IntervalPrice &gt; QuantLib::IntervalPrice::makeSeries</definition>
        <argsstring>(const std::vector&lt; Date &gt; &amp;d, const std::vector&lt; Real &gt; &amp;open, const std::vector&lt; Real &gt; &amp;close, const std::vector&lt; Real &gt; &amp;high, const std::vector&lt; Real &gt; &amp;low)</argsstring>
        <name>makeSeries</name>
        <qualifiedname>QuantLib::IntervalPrice::makeSeries</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &gt; &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>open</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>close</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>high</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>low</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/prices.hpp" line="90" column="27" bodyfile="ql/prices.cpp" bodystart="104" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interval_price_1ab25c42cdd5cc26623185faf1da29d140" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt; Real &gt; QuantLib::IntervalPrice::extractValues</definition>
        <argsstring>(const TimeSeries&lt; IntervalPrice &gt; &amp;, IntervalPrice::Type)</argsstring>
        <name>extractValues</name>
        <qualifiedname>QuantLib::IntervalPrice::extractValues</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_time_series" kindref="compound">TimeSeries</ref>&lt; <ref refid="class_quant_lib_1_1_interval_price" kindref="compound">IntervalPrice</ref> &gt; &amp;</type>
          <defname>ts</defname>
        </param>
        <param>
          <type>IntervalPrice::Type</type>
          <defname>t</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/prices.hpp" line="96" column="28" bodyfile="ql/prices.cpp" bodystart="132" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interval_price_1a1e5ed2db3ca833f76358ef01b71adf51" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_time_series" kindref="compound">TimeSeries</ref>&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>TimeSeries&lt; Real &gt; QuantLib::IntervalPrice::extractComponent</definition>
        <argsstring>(const TimeSeries&lt; IntervalPrice &gt; &amp;, IntervalPrice::Type)</argsstring>
        <name>extractComponent</name>
        <qualifiedname>QuantLib::IntervalPrice::extractComponent</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_time_series" kindref="compound">TimeSeries</ref>&lt; <ref refid="class_quant_lib_1_1_interval_price" kindref="compound">IntervalPrice</ref> &gt; &amp;</type>
          <defname>ts</defname>
        </param>
        <param>
          <type>IntervalPrice::Type</type>
          <defname>t</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/prices.hpp" line="99" column="27" bodyfile="ql/prices.cpp" bodystart="143" bodyend="149"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Inspectors</header>
      <memberdef kind="function" id="class_quant_lib_1_1_interval_price_1a57949da4e08db0e7b4ecbbcbf513a435" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::IntervalPrice::open</definition>
        <argsstring>() const</argsstring>
        <name>open</name>
        <qualifiedname>QuantLib::IntervalPrice::open</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/prices.hpp" line="75" column="14" bodyfile="ql/prices.hpp" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interval_price_1a43749d39f011ea78e4e587784b801b89" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::IntervalPrice::close</definition>
        <argsstring>() const</argsstring>
        <name>close</name>
        <qualifiedname>QuantLib::IntervalPrice::close</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/prices.hpp" line="76" column="14" bodyfile="ql/prices.hpp" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interval_price_1a68e2a9d6ef2e4f2f4e6ced15988a0131" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::IntervalPrice::high</definition>
        <argsstring>() const</argsstring>
        <name>high</name>
        <qualifiedname>QuantLib::IntervalPrice::high</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/prices.hpp" line="77" column="14" bodyfile="ql/prices.hpp" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interval_price_1ac325f4b28ae236c9d3e9b4c7ff0c956e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::IntervalPrice::low</definition>
        <argsstring>() const</argsstring>
        <name>low</name>
        <qualifiedname>QuantLib::IntervalPrice::low</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/prices.hpp" line="78" column="14" bodyfile="ql/prices.hpp" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interval_price_1affa2c3207e70c34e12c5e497f6bbf203" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::IntervalPrice::value</definition>
        <argsstring>(IntervalPrice::Type) const</argsstring>
        <name>value</name>
        <qualifiedname>QuantLib::IntervalPrice::value</qualifiedname>
        <param>
          <type>IntervalPrice::Type</type>
          <defname>t</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/prices.hpp" line="79" column="14" bodyfile="ql/prices.cpp" bodystart="64" bodyend="77"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Modifiers</header>
      <memberdef kind="function" id="class_quant_lib_1_1_interval_price_1a2ba717d735d488205b89d9342da2e3ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::IntervalPrice::setValue</definition>
        <argsstring>(Real value, IntervalPrice::Type)</argsstring>
        <name>setValue</name>
        <qualifiedname>QuantLib::IntervalPrice::setValue</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>IntervalPrice::Type</type>
          <defname>t</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/prices.hpp" line="84" column="14" bodyfile="ql/prices.cpp" bodystart="79" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interval_price_1ab73be833f92a9915ff89646076d55061" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::IntervalPrice::setValues</definition>
        <argsstring>(Real open, Real close, Real high, Real low)</argsstring>
        <name>setValues</name>
        <qualifiedname>QuantLib::IntervalPrice::setValues</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>open</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>close</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>high</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>low</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/prices.hpp" line="85" column="14" bodyfile="ql/prices.cpp" bodystart="99" bodyend="101"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_quant_lib_1_1_interval_price_1aac67ae928342cc26e196b2e951f784c9" prot="public" static="no" strong="no">
        <type></type>
        <name>Type</name>
        <qualifiedname>QuantLib::IntervalPrice::Type</qualifiedname>
        <enumvalue id="class_quant_lib_1_1_interval_price_1aac67ae928342cc26e196b2e951f784c9afe97bb0ef7a6fc8c0c539c5ca8be8ca9" prot="public">
          <name>Open</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_interval_price_1aac67ae928342cc26e196b2e951f784c9a3e71193d65be17467147835cdd7a6717" prot="public">
          <name>Close</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_interval_price_1aac67ae928342cc26e196b2e951f784c9ae8e4efe0c2bb2d9bd671396f926b2472" prot="public">
          <name>High</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_interval_price_1aac67ae928342cc26e196b2e951f784c9a24adcf8db7ff7548dcf51ec16983a44f" prot="public">
          <name>Low</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/prices.hpp" line="68" column="9" bodyfile="ql/prices.hpp" bodystart="68" bodyend="68"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_interval_price_1af555a101894ad55ec4b847c71778914d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::IntervalPrice::IntervalPrice</definition>
        <argsstring>()</argsstring>
        <name>IntervalPrice</name>
        <qualifiedname>QuantLib::IntervalPrice::IntervalPrice</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/prices.hpp" line="70" column="9" bodyfile="ql/prices.cpp" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interval_price_1a416d8a670b94a0d859956d6d6e783d6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::IntervalPrice::IntervalPrice</definition>
        <argsstring>(Real open, Real close, Real high, Real low)</argsstring>
        <name>IntervalPrice</name>
        <qualifiedname>QuantLib::IntervalPrice::IntervalPrice</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>open</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>close</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>high</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>low</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/prices.hpp" line="71" column="9" bodyfile="ql/prices.cpp" bodystart="61" bodyend="62"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>interval price </para>
    </briefdescription>
    <detaileddescription>
<para><xrefsect id="test_1_test000092"><xreftitle>Test</xreftitle><xrefdescription><para>Inspectors, Modifiers, and Helper functions are tested. </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <location file="ql/prices.hpp" line="66" column="5" bodyfile="ql/prices.hpp" bodystart="66" bodyend="105"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_interval_price_1aac67ae928342cc26e196b2e951f784c9a3e71193d65be17467147835cdd7a6717" prot="public" virt="non-virtual"><scope>QuantLib::IntervalPrice</scope><name>Close</name></member>
      <member refid="class_quant_lib_1_1_interval_price_1a43749d39f011ea78e4e587784b801b89" prot="public" virt="non-virtual"><scope>QuantLib::IntervalPrice</scope><name>close</name></member>
      <member refid="class_quant_lib_1_1_interval_price_1a4977fad5c3d0ea285635dc9e7e17e13a" prot="private" virt="non-virtual"><scope>QuantLib::IntervalPrice</scope><name>close_</name></member>
      <member refid="class_quant_lib_1_1_interval_price_1a1e5ed2db3ca833f76358ef01b71adf51" prot="public" virt="non-virtual"><scope>QuantLib::IntervalPrice</scope><name>extractComponent</name></member>
      <member refid="class_quant_lib_1_1_interval_price_1ab25c42cdd5cc26623185faf1da29d140" prot="public" virt="non-virtual"><scope>QuantLib::IntervalPrice</scope><name>extractValues</name></member>
      <member refid="class_quant_lib_1_1_interval_price_1aac67ae928342cc26e196b2e951f784c9ae8e4efe0c2bb2d9bd671396f926b2472" prot="public" virt="non-virtual"><scope>QuantLib::IntervalPrice</scope><name>High</name></member>
      <member refid="class_quant_lib_1_1_interval_price_1a68e2a9d6ef2e4f2f4e6ced15988a0131" prot="public" virt="non-virtual"><scope>QuantLib::IntervalPrice</scope><name>high</name></member>
      <member refid="class_quant_lib_1_1_interval_price_1afdacadc31e111c6f155edb2d157da30f" prot="private" virt="non-virtual"><scope>QuantLib::IntervalPrice</scope><name>high_</name></member>
      <member refid="class_quant_lib_1_1_interval_price_1af555a101894ad55ec4b847c71778914d" prot="public" virt="non-virtual"><scope>QuantLib::IntervalPrice</scope><name>IntervalPrice</name></member>
      <member refid="class_quant_lib_1_1_interval_price_1a416d8a670b94a0d859956d6d6e783d6f" prot="public" virt="non-virtual"><scope>QuantLib::IntervalPrice</scope><name>IntervalPrice</name></member>
      <member refid="class_quant_lib_1_1_interval_price_1aac67ae928342cc26e196b2e951f784c9a24adcf8db7ff7548dcf51ec16983a44f" prot="public" virt="non-virtual"><scope>QuantLib::IntervalPrice</scope><name>Low</name></member>
      <member refid="class_quant_lib_1_1_interval_price_1ac325f4b28ae236c9d3e9b4c7ff0c956e" prot="public" virt="non-virtual"><scope>QuantLib::IntervalPrice</scope><name>low</name></member>
      <member refid="class_quant_lib_1_1_interval_price_1ac41fc85df9b50eab3dd191f9429bc26d" prot="private" virt="non-virtual"><scope>QuantLib::IntervalPrice</scope><name>low_</name></member>
      <member refid="class_quant_lib_1_1_interval_price_1ada7a4b50441d9fd76872a76c85cd639f" prot="public" virt="non-virtual"><scope>QuantLib::IntervalPrice</scope><name>makeSeries</name></member>
      <member refid="class_quant_lib_1_1_interval_price_1aac67ae928342cc26e196b2e951f784c9afe97bb0ef7a6fc8c0c539c5ca8be8ca9" prot="public" virt="non-virtual"><scope>QuantLib::IntervalPrice</scope><name>Open</name></member>
      <member refid="class_quant_lib_1_1_interval_price_1a57949da4e08db0e7b4ecbbcbf513a435" prot="public" virt="non-virtual"><scope>QuantLib::IntervalPrice</scope><name>open</name></member>
      <member refid="class_quant_lib_1_1_interval_price_1a94ead045d32effc447d49db62da58b1e" prot="private" virt="non-virtual"><scope>QuantLib::IntervalPrice</scope><name>open_</name></member>
      <member refid="class_quant_lib_1_1_interval_price_1a2ba717d735d488205b89d9342da2e3ea" prot="public" virt="non-virtual"><scope>QuantLib::IntervalPrice</scope><name>setValue</name></member>
      <member refid="class_quant_lib_1_1_interval_price_1ab73be833f92a9915ff89646076d55061" prot="public" virt="non-virtual"><scope>QuantLib::IntervalPrice</scope><name>setValues</name></member>
      <member refid="class_quant_lib_1_1_interval_price_1aac67ae928342cc26e196b2e951f784c9" prot="public" virt="non-virtual"><scope>QuantLib::IntervalPrice</scope><name>Type</name></member>
      <member refid="class_quant_lib_1_1_interval_price_1affa2c3207e70c34e12c5e497f6bbf203" prot="public" virt="non-virtual"><scope>QuantLib::IntervalPrice</scope><name>value</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

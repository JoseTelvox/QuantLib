<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_base_correlation_loss_model" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::BaseCorrelationLossModel</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_default_loss_model" prot="public" virt="non-virtual">QuantLib::DefaultLossModel</basecompoundref>
    <basecompoundref refid="class_quant_lib_1_1_observer" prot="public" virt="virtual">QuantLib::Observer</basecompoundref>
    <includes refid="basecorrelationlossmodel_8hpp" local="no">basecorrelationlossmodel.hpp</includes>
    <templateparamlist>
      <param>
        <type>class BaseModel_T</type>
      </param>
      <param>
        <type>class Corr2DInt_T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_quant_lib_1_1_base_correlation_loss_model_1a9fc74882978ffcb2d51a80b2b7b180d4" prot="private" static="no">
        <type>BaseModel_T::copulaType::initTraits</type>
        <definition>typedef BaseModel_T::copulaType::initTraits QuantLib::BaseCorrelationLossModel&lt; BaseModel_T, Corr2DInt_T &gt;::initTraits</definition>
        <argsstring></argsstring>
        <name>initTraits</name>
        <qualifiedname>QuantLib::BaseCorrelationLossModel::initTraits</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/basecorrelationlossmodel.hpp" line="95" column="62" bodyfile="ql/experimental/credit/basecorrelationlossmodel.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_base_correlation_loss_model_1a853c6added272dee4a9ffc63f4d5ec41" prot="private" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::BaseCorrelationLossModel&lt; BaseModel_T, Corr2DInt_T &gt;::attachRatio_</definition>
        <argsstring></argsstring>
        <name>attachRatio_</name>
        <qualifiedname>QuantLib::BaseCorrelationLossModel::attachRatio_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/basecorrelationlossmodel.hpp" line="141" column="22" bodyfile="ql/experimental/credit/basecorrelationlossmodel.hpp" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_base_correlation_loss_model_1a69085daa0437db0e8df460073b3d7f83" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::BaseCorrelationLossModel&lt; BaseModel_T, Corr2DInt_T &gt;::detachRatio_</definition>
        <argsstring></argsstring>
        <name>detachRatio_</name>
        <qualifiedname>QuantLib::BaseCorrelationLossModel::detachRatio_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/basecorrelationlossmodel.hpp" line="141" column="35" bodyfile="ql/experimental/credit/basecorrelationlossmodel.hpp" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_base_correlation_loss_model_1a62b3eba4e10204c490a40b63027c7437" prot="private" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::BaseCorrelationLossModel&lt; BaseModel_T, Corr2DInt_T &gt;::remainingNotional_</definition>
        <argsstring></argsstring>
        <name>remainingNotional_</name>
        <qualifiedname>QuantLib::BaseCorrelationLossModel::remainingNotional_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/basecorrelationlossmodel.hpp" line="142" column="22" bodyfile="ql/experimental/credit/basecorrelationlossmodel.hpp" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_base_correlation_loss_model_1a4c73e3edb7512a4cb5c38d73f3212cb0" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_simple_quote" kindref="compound">SimpleQuote</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;SimpleQuote&gt; QuantLib::BaseCorrelationLossModel&lt; BaseModel_T, Corr2DInt_T &gt;::localCorrelationAttach_</definition>
        <argsstring></argsstring>
        <name>localCorrelationAttach_</name>
        <qualifiedname>QuantLib::BaseCorrelationLossModel::localCorrelationAttach_</qualifiedname>
        <briefdescription>
<para>Correlation buffer to pick up values from the surface and. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/basecorrelationlossmodel.hpp" line="146" column="25" bodyfile="ql/experimental/credit/basecorrelationlossmodel.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_base_correlation_loss_model_1a0858f763e03cb9edcb2572e045dbdd30" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_simple_quote" kindref="compound">SimpleQuote</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;SimpleQuote&gt; QuantLib::BaseCorrelationLossModel&lt; BaseModel_T, Corr2DInt_T &gt;::localCorrelationDetach_</definition>
        <argsstring></argsstring>
        <name>localCorrelationDetach_</name>
        <qualifiedname>QuantLib::BaseCorrelationLossModel::localCorrelationDetach_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/basecorrelationlossmodel.hpp" line="147" column="13" bodyfile="ql/experimental/credit/basecorrelationlossmodel.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_base_correlation_loss_model_1ab5ea929364b542cd847ed9aa1b11e482" prot="private" static="no" mutable="yes">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_basket" kindref="compound">Basket</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;Basket&gt; QuantLib::BaseCorrelationLossModel&lt; BaseModel_T, Corr2DInt_T &gt;::basketAttach_</definition>
        <argsstring></argsstring>
        <name>basketAttach_</name>
        <qualifiedname>QuantLib::BaseCorrelationLossModel::basketAttach_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/basecorrelationlossmodel.hpp" line="148" column="33" bodyfile="ql/experimental/credit/basecorrelationlossmodel.hpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_base_correlation_loss_model_1a6de27eeb8163c6772150e1ce8767095c" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_basket" kindref="compound">Basket</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;Basket&gt; QuantLib::BaseCorrelationLossModel&lt; BaseModel_T, Corr2DInt_T &gt;::basketDetach_</definition>
        <argsstring></argsstring>
        <name>basketDetach_</name>
        <qualifiedname>QuantLib::BaseCorrelationLossModel::basketDetach_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/basecorrelationlossmodel.hpp" line="149" column="13" bodyfile="ql/experimental/credit/basecorrelationlossmodel.hpp" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_base_correlation_loss_model_1af34ece0c40262b479aaa1d7d4581d3ed" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::BaseCorrelationLossModel&lt; BaseModel_T, Corr2DInt_T &gt;::recoveries_</definition>
        <argsstring></argsstring>
        <name>recoveries_</name>
        <qualifiedname>QuantLib::BaseCorrelationLossModel::recoveries_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/basecorrelationlossmodel.hpp" line="151" column="29" bodyfile="ql/experimental/credit/basecorrelationlossmodel.hpp" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_base_correlation_loss_model_1a0227f0ae224ed6df1543143a2eb0e1af" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_base_correlation_term_structure" kindref="compound">BaseCorrelationTermStructure</ref>&lt; Corr2DInt_T &gt; &gt;</type>
        <definition>Handle&lt;BaseCorrelationTermStructure&lt;Corr2DInt_T&gt; &gt; QuantLib::BaseCorrelationLossModel&lt; BaseModel_T, Corr2DInt_T &gt;::correlTS_</definition>
        <argsstring></argsstring>
        <name>correlTS_</name>
        <qualifiedname>QuantLib::BaseCorrelationLossModel::correlTS_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/basecorrelationlossmodel.hpp" line="152" column="16" bodyfile="ql/experimental/credit/basecorrelationlossmodel.hpp" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_base_correlation_loss_model_1a25dd5f8ee9156893c4c98f75334518f0" prot="private" static="no" mutable="yes">
        <type>BaseModel_T::copulaType::initTraits</type>
        <definition>BaseModel_T::copulaType::initTraits QuantLib::BaseCorrelationLossModel&lt; BaseModel_T, Corr2DInt_T &gt;::copulaTraits_</definition>
        <argsstring></argsstring>
        <name>copulaTraits_</name>
        <qualifiedname>QuantLib::BaseCorrelationLossModel::copulaTraits_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/basecorrelationlossmodel.hpp" line="154" column="62" bodyfile="ql/experimental/credit/basecorrelationlossmodel.hpp" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_base_correlation_loss_model_1ade8afe4afeadaf0f4a996e6d029f486e" prot="private" static="no" mutable="yes">
        <type>ext::shared_ptr&lt; BaseModel_T &gt;</type>
        <definition>ext::shared_ptr&lt;BaseModel_T&gt; QuantLib::BaseCorrelationLossModel&lt; BaseModel_T, Corr2DInt_T &gt;::scalarCorrelModelAttach_</definition>
        <argsstring></argsstring>
        <name>scalarCorrelModelAttach_</name>
        <qualifiedname>QuantLib::BaseCorrelationLossModel::scalarCorrelModelAttach_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/basecorrelationlossmodel.hpp" line="156" column="33" bodyfile="ql/experimental/credit/basecorrelationlossmodel.hpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_base_correlation_loss_model_1af58d6e3b14978b5e229844661021a863" prot="private" static="no" mutable="yes">
        <type>ext::shared_ptr&lt; BaseModel_T &gt;</type>
        <definition>ext::shared_ptr&lt;BaseModel_T&gt; QuantLib::BaseCorrelationLossModel&lt; BaseModel_T, Corr2DInt_T &gt;::scalarCorrelModelDetach_</definition>
        <argsstring></argsstring>
        <name>scalarCorrelModelDetach_</name>
        <qualifiedname>QuantLib::BaseCorrelationLossModel::scalarCorrelModelDetach_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/basecorrelationlossmodel.hpp" line="157" column="33" bodyfile="ql/experimental/credit/basecorrelationlossmodel.hpp" bodystart="157" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_base_correlation_loss_model_1aaff16d19fe3f770fdb28aa74149a33f1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::BaseCorrelationLossModel&lt; BaseModel_T, Corr2DInt_T &gt;::BaseCorrelationLossModel</definition>
        <argsstring>(const Handle&lt; BaseCorrelationTermStructure&lt; Corr2DInt_T &gt; &gt; &amp;correlTS, std::vector&lt; Real &gt; recoveries, const initTraits &amp;traits=initTraits())</argsstring>
        <name>BaseCorrelationLossModel</name>
        <qualifiedname>QuantLib::BaseCorrelationLossModel::BaseCorrelationLossModel</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_base_correlation_term_structure" kindref="compound">BaseCorrelationTermStructure</ref>&lt; Corr2DInt_T &gt; &gt; &amp;</type>
          <declname>correlTS</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
          <declname>recoveries</declname>
        </param>
        <param>
          <type>const initTraits &amp;</type>
          <declname>traits</declname>
          <defval>initTraits()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/basecorrelationlossmodel.hpp" line="97" column="7" bodyfile="ql/experimental/credit/basecorrelationlossmodel.hpp" bodystart="97" bodyend="105"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_base_correlation_loss_model_1a5a3547bf29bd4e170b6f36fe795921e4" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::BaseCorrelationLossModel&lt; BaseModel_T, Corr2DInt_T &gt;::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <qualifiedname>QuantLib::BaseCorrelationLossModel::update</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_observer_1a07905c55dca858470fcf4a1aea0005aa">update</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must be implemented in derived classes. An instance of Observer does not call this method directly: instead, it will be called by the observables the instance registered with when they need to notify any changes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/basecorrelationlossmodel.hpp" line="109" column="12" bodyfile="ql/experimental/credit/basecorrelationlossmodel.hpp" bodystart="109" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_base_correlation_loss_model_1a6144978356c09a0fc89754c22774a17c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::BaseCorrelationLossModel&lt; BaseModel_T, Corr2DInt_T &gt;::resetModel</definition>
        <argsstring>() override</argsstring>
        <name>resetModel</name>
        <qualifiedname>QuantLib::BaseCorrelationLossModel::resetModel</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_default_loss_model_1ac32cbab626c8ba8ebb0dcace3eed4a38">resetModel</reimplements>
        <briefdescription>
<para>Concrete models do now any updates/inits they need on basket reset. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/basecorrelationlossmodel.hpp" line="117" column="12" bodyfile="ql/experimental/credit/basecorrelationlossmodel.hpp" bodystart="117" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_base_correlation_loss_model_1a38e71f9c1944eb5b7a4810014aa03c27" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::BaseCorrelationLossModel&lt; LM, I &gt;::expectedTrancheLoss</definition>
        <argsstring>(const Date &amp;d) const override</argsstring>
        <name>expectedTrancheLoss</name>
        <qualifiedname>QuantLib::BaseCorrelationLossModel::expectedTrancheLoss</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_default_loss_model_1a258763493804fe4c84b533716df00991">expectedTrancheLoss</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/basecorrelationlossmodel.hpp" line="133" column="12" bodyfile="ql/experimental/credit/basecorrelationlossmodel.hpp" bodystart="163" bodyend="178"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_base_correlation_loss_model_1a34d9297985dd6b7f9c5319f295b7d9ba" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::BaseCorrelationLossModel&lt; BaseModel_T, Corr2DInt_T &gt;::setupModels</definition>
        <argsstring>() const</argsstring>
        <name>setupModels</name>
        <qualifiedname>QuantLib::BaseCorrelationLossModel::setupModels</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets up attach/detach models. Gets called on basket update. To be specialized on the spacific model type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/basecorrelationlossmodel.hpp" line="139" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_base_correlation_loss_model_1a165d0c9c7459c45411c25ef6cdd7c4b1" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::BaseCorrelationLossModel&lt; GaussianLHPLossModel, BilinearInterpolation &gt;::setupModels</definition>
        <argsstring>() const</argsstring>
        <name>setupModels</name>
        <qualifiedname>QuantLib::BaseCorrelationLossModel::setupModels</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/basecorrelationlossmodel.hpp" line="193" column="2" bodyfile="ql/experimental/credit/basecorrelationlossmodel.hpp" bodystart="193" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_base_correlation_loss_model_1a8b04a331c632dd354615ea3837f5abbc" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::BaseCorrelationLossModel&lt; GaussianBinomialLossModel, BilinearInterpolation &gt;::setupModels</definition>
        <argsstring>() const</argsstring>
        <name>setupModels</name>
        <qualifiedname>QuantLib::BaseCorrelationLossModel::setupModels</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/basecorrelationlossmodel.hpp" line="208" column="2" bodyfile="ql/experimental/credit/basecorrelationlossmodel.hpp" bodystart="208" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_base_correlation_loss_model_1a1eaa4698bb717f50ec4a1482f48ce9f7" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::BaseCorrelationLossModel&lt; TBinomialLossModel, BilinearInterpolation &gt;::setupModels</definition>
        <argsstring>() const</argsstring>
        <name>setupModels</name>
        <qualifiedname>QuantLib::BaseCorrelationLossModel::setupModels</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/basecorrelationlossmodel.hpp" line="232" column="2" bodyfile="ql/experimental/credit/basecorrelationlossmodel.hpp" bodystart="232" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_base_correlation_loss_model_1a97e37587f6033701f8f2e425f128992e" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::BaseCorrelationLossModel&lt; IHGaussPoolLossModel, BilinearInterpolation &gt;::setupModels</definition>
        <argsstring>() const</argsstring>
        <name>setupModels</name>
        <qualifiedname>QuantLib::BaseCorrelationLossModel::setupModels</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/basecorrelationlossmodel.hpp" line="259" column="2" bodyfile="ql/experimental/credit/basecorrelationlossmodel.hpp" bodystart="259" bodyend="281"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Base Correlation loss model; interpolation is performed by portfolio (live) amount percentage.<simplesect kind="par"><title></title><para>Though the literature on this model is inmense, see for a more than introductory level (precrisis) chapters 19, 20 and 21 of <bold>Modelling single name and multi-name credit derivatives.</bold> Dominic O&apos;Kane, Wiley Finance, 2008</para>
</simplesect>
<simplesect kind="par"><title></title><para>For freely available documentation see:</para>
</simplesect>
<simplesect kind="par"><title></title><para>Credit Correlation: A Guide; JP Morgan Credit Derivatives Strategy; 12 March 2004 </para>
</simplesect>
<simplesect kind="par"><title></title><para>Introducing Base Correlations; JP Morgan Credit Derivatives Strategy; 22 March 2004 </para>
</simplesect>
<simplesect kind="par"><title></title><para>A Relative Value Framework for Credit Correlation; JP Morgan Credit Derivatives Strategy; 27 April 2004 </para>
</simplesect>
<simplesect kind="par"><title></title><para>Valuing and Hedging Synthetic <ref refid="class_quant_lib_1_1_c_d_o" kindref="compound">CDO</ref> Tranches Using Base Correlations; Bear Stearns; May 17, 2004 </para>
</simplesect>
<simplesect kind="par"><title></title><para>Correlation Primer; Nomura Fixed Income Research, August 6, 2004 </para>
</simplesect>
<simplesect kind="par"><title></title><para>Base Correlation Explained; Lehman Brothers Fixed Income Quantitative Credit Research; 15 November 2004 </para>
</simplesect>
<simplesect kind="par"><title></title><para>&apos;Pricing CDOs with a smile&apos; in Societe Generale Credit Research; February 2005 </para>
</simplesect>
<simplesect kind="par"><title></title><para>For bespoke base correlation see: </para>
</simplesect>
<simplesect kind="par"><title></title><para>Base Correlation Mapping in Lehman Brothers&apos; Quantitative Credit Research Quarterly; Volume 2007-Q1 </para>
</simplesect>
<simplesect kind="par"><title></title><para>You can explore typical postcrisis data by perusing some of the JPMorgan Global Correlation Daily Analytics </para>
</simplesect>
<simplesect kind="par"><title></title><para>Here the crisis model problems of ability to price stressed portfolios or tranches over the maximum loss are the responsibility of the base models. Users should select their models according to this; choosing the copula or a random loss given default base model (or more exotic ones). </para>
</simplesect>
<simplesect kind="par"><title></title><para>Notice this is different to a bespoke base correlation loss (bespoke here refering to basket composition, not just attachment levels) ; where loss interpolation is on the expected loss value to match the two baskets. Therefore the correlation surface should refer to the same basket intended to be priced. But this is left to the user and is not implemented in the correlation surface (yet...)</para>
</simplesect>
<xrefsect id="todo_1_todo000008"><xreftitle>Todo</xreftitle><xrefdescription><para>Bespoke portfolios BC models are yet to be implemented.</para>
</xrefdescription></xrefsect></para>
<para>BaseModel_T must have a constructor with a single quote value </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::BaseCorrelationLossModel&lt; BaseModel_T, Corr2DInt_T &gt;</label>
        <link refid="class_quant_lib_1_1_base_correlation_loss_model"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::DefaultLossModel</label>
        <link refid="class_quant_lib_1_1_default_loss_model"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::BaseCorrelationLossModel&lt; BaseModel_T, Corr2DInt_T &gt;</label>
        <link refid="class_quant_lib_1_1_base_correlation_loss_model"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::DefaultLossModel</label>
        <link refid="class_quant_lib_1_1_default_loss_model"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>basket_</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Handle&lt; QuantLib::Basket &gt;</label>
        <link refid="class_quant_lib_1_1_handle"/>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="4">
        <label>QuantLib::RelinkableHandle&lt; QuantLib::Basket &gt;</label>
        <link refid="class_quant_lib_1_1_relinkable_handle"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/credit/basecorrelationlossmodel.hpp" line="92" column="5" bodyfile="ql/experimental/credit/basecorrelationlossmodel.hpp" bodystart="93" bodyend="158"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_base_correlation_loss_model_1a853c6added272dee4a9ffc63f4d5ec41" prot="private" virt="non-virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>attachRatio_</name></member>
      <member refid="class_quant_lib_1_1_base_correlation_loss_model_1aaff16d19fe3f770fdb28aa74149a33f1" prot="public" virt="non-virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>BaseCorrelationLossModel</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1ad2700ffb7198321f52fdeb42e9a8e043" prot="protected" virt="non-virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>basket_</name></member>
      <member refid="class_quant_lib_1_1_base_correlation_loss_model_1ab5ea929364b542cd847ed9aa1b11e482" prot="private" virt="non-virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>basketAttach_</name></member>
      <member refid="class_quant_lib_1_1_base_correlation_loss_model_1a6de27eeb8163c6772150e1ce8767095c" prot="private" virt="non-virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>basketDetach_</name></member>
      <member refid="class_quant_lib_1_1_base_correlation_loss_model_1a25dd5f8ee9156893c4c98f75334518f0" prot="private" virt="non-virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>copulaTraits_</name></member>
      <member refid="class_quant_lib_1_1_base_correlation_loss_model_1a0227f0ae224ed6df1543143a2eb0e1af" prot="private" virt="non-virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>correlTS_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1a25ed3ba8a38c4afaca5dca5b8cfd1d7d" prot="protected" virt="virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>defaultCorrelation</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1ac51090f561e4372e495bfa9edee0000b" prot="protected" virt="non-virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>DefaultLossModel</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1ab57e81d3fdd238c0cb19db2808bc5b59" prot="protected" virt="virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>densityTrancheLoss</name></member>
      <member refid="class_quant_lib_1_1_base_correlation_loss_model_1a69085daa0437db0e8df460073b3d7f83" prot="private" virt="non-virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>detachRatio_</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1afd0d4637df1423173d5efc758a16f354" prot="protected" virt="virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>expectedRecovery</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1a60bd1a166744f4de455cae1c1c83f6a1" prot="protected" virt="virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>expectedShortfall</name></member>
      <member refid="class_quant_lib_1_1_base_correlation_loss_model_1a38e71f9c1944eb5b7a4810014aa03c27" prot="private" virt="virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>expectedTrancheLoss</name></member>
      <member refid="class_quant_lib_1_1_base_correlation_loss_model_1a9fc74882978ffcb2d51a80b2b7b180d4" prot="private" virt="non-virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>initTraits</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_base_correlation_loss_model_1a4c73e3edb7512a4cb5c38d73f3212cb0" prot="private" virt="non-virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>localCorrelationAttach_</name></member>
      <member refid="class_quant_lib_1_1_base_correlation_loss_model_1a0858f763e03cb9edcb2572e045dbdd30" prot="private" virt="non-virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>localCorrelationDetach_</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1aeff66ecf317c1dc23713424daf563f88" prot="protected" virt="virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>lossDistribution</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::BaseCorrelationLossModel</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::BaseCorrelationLossModel</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::BaseCorrelationLossModel</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::BaseCorrelationLossModel</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1ac7142d4e72958aef5a602167a138973e" prot="protected" virt="virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>percentile</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1ab46164d907ae7772c0a5f6788ce4568b" prot="protected" virt="virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>probAtLeastNEvents</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1a922ca5f0ea73b3a33420fbcfb2556e93" prot="protected" virt="virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>probOverLoss</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1ab8053b0ecb53c758939cf5c7a33fb328" prot="protected" virt="virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>probsBeingNthEvent</name></member>
      <member refid="class_quant_lib_1_1_base_correlation_loss_model_1af34ece0c40262b479aaa1d7d4581d3ed" prot="private" virt="non-virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>recoveries_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_base_correlation_loss_model_1a62b3eba4e10204c490a40b63027c7437" prot="private" virt="non-virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>remainingNotional_</name></member>
      <member refid="class_quant_lib_1_1_base_correlation_loss_model_1a6144978356c09a0fc89754c22774a17c" prot="private" virt="virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>resetModel</name></member>
      <member refid="class_quant_lib_1_1_base_correlation_loss_model_1ade8afe4afeadaf0f4a996e6d029f486e" prot="private" virt="non-virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>scalarCorrelModelAttach_</name></member>
      <member refid="class_quant_lib_1_1_base_correlation_loss_model_1af58d6e3b14978b5e229844661021a863" prot="private" virt="non-virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>scalarCorrelModelDetach_</name></member>
      <member refid="class_quant_lib_1_1_base_correlation_loss_model_1a34d9297985dd6b7f9c5319f295b7d9ba" prot="protected" virt="non-virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>setupModels</name></member>
      <member refid="class_quant_lib_1_1_base_correlation_loss_model_1a165d0c9c7459c45411c25ef6cdd7c4b1" prot="protected" virt="non-virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>setupModels</name></member>
      <member refid="class_quant_lib_1_1_base_correlation_loss_model_1a8b04a331c632dd354615ea3837f5abbc" prot="protected" virt="non-virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>setupModels</name></member>
      <member refid="class_quant_lib_1_1_base_correlation_loss_model_1a1eaa4698bb717f50ec4a1482f48ce9f7" prot="protected" virt="non-virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>setupModels</name></member>
      <member refid="class_quant_lib_1_1_base_correlation_loss_model_1a97e37587f6033701f8f2e425f128992e" prot="protected" virt="non-virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>setupModels</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1a467843d56b00359a8fa7d0a1017079a5" prot="protected" virt="virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>splitESFLevel</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1ab70b30442fcdda802730fd711c5348da" prot="protected" virt="virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>splitVaRLevel</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_base_correlation_loss_model_1a5a3547bf29bd4e170b6f36fe795921e4" prot="private" virt="virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::BaseCorrelationLossModel</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

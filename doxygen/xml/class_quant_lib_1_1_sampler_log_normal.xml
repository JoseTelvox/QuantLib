<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_sampler_log_normal" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::SamplerLogNormal</compoundname>
    <includes refid="hybridsimulatedannealingfunctors_8hpp" local="no">hybridsimulatedannealingfunctors.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_sampler_log_normal_1add9cac8e74212216ef1f6904a29fbb51" prot="private" static="no" mutable="no">
        <type>std::mt19937</type>
        <definition>std::mt19937 QuantLib::SamplerLogNormal::generator_</definition>
        <argsstring></argsstring>
        <name>generator_</name>
        <qualifiedname>QuantLib::SamplerLogNormal::generator_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" line="56" column="22" bodyfile="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_sampler_log_normal_1a4758e1a4713cd4e9be5f6175dbcfe9fe" prot="private" static="no" mutable="no">
        <type>std::normal_distribution&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::normal_distribution&lt;Real&gt; QuantLib::SamplerLogNormal::distribution_</definition>
        <argsstring></argsstring>
        <name>distribution_</name>
        <qualifiedname>QuantLib::SamplerLogNormal::distribution_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" line="57" column="34" bodyfile="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_sampler_log_normal_1aa0dfda0ffc49698016e655698fe7f3af" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::SamplerLogNormal::SamplerLogNormal</definition>
        <argsstring>(unsigned long seed=SeedGenerator::instance().get())</argsstring>
        <name>SamplerLogNormal</name>
        <qualifiedname>QuantLib::SamplerLogNormal::SamplerLogNormal</qualifiedname>
        <param>
          <type>unsigned long</type>
          <declname>seed</declname>
          <defval><ref refid="class_quant_lib_1_1_singleton_1ac412b7766b32f56372a3e966c5f3f386" kindref="member">SeedGenerator::instance</ref>().get()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" line="46" column="18" bodyfile="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" bodystart="46" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_sampler_log_normal_1a4ca501f9df6cd1d6d06975faba2ed1ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::SamplerLogNormal::operator()</definition>
        <argsstring>(Array &amp;newPoint, const Array &amp;currentPoint, const Array &amp;temp)</argsstring>
        <name>operator()</name>
        <qualifiedname>QuantLib::SamplerLogNormal::operator()</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>newPoint</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>currentPoint</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>temp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" line="49" column="14" bodyfile="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" bodystart="49" bodyend="54"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Lognormal Sampler. </para>
    </briefdescription>
    <detaileddescription>
<para><ref refid="struct_quant_lib_1_1_sample" kindref="compound">Sample</ref> from lognormal distribution. This means that the parameter space must have support on the positve side of the real line only. </para>
    </detaileddescription>
    <location file="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" line="43" column="5" bodyfile="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" bodystart="44" bodyend="58"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_sampler_log_normal_1a4758e1a4713cd4e9be5f6175dbcfe9fe" prot="private" virt="non-virtual"><scope>QuantLib::SamplerLogNormal</scope><name>distribution_</name></member>
      <member refid="class_quant_lib_1_1_sampler_log_normal_1add9cac8e74212216ef1f6904a29fbb51" prot="private" virt="non-virtual"><scope>QuantLib::SamplerLogNormal</scope><name>generator_</name></member>
      <member refid="class_quant_lib_1_1_sampler_log_normal_1a4ca501f9df6cd1d6d06975faba2ed1ac" prot="public" virt="non-virtual"><scope>QuantLib::SamplerLogNormal</scope><name>operator()</name></member>
      <member refid="class_quant_lib_1_1_sampler_log_normal_1aa0dfda0ffc49698016e655698fe7f3af" prot="public" virt="non-virtual"><scope>QuantLib::SamplerLogNormal</scope><name>SamplerLogNormal</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

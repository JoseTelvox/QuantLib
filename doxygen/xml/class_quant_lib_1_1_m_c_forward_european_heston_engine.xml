<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_m_c_forward_european_heston_engine" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::MCForwardEuropeanHestonEngine</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_m_c_forward_vanilla_engine" prot="public" virt="non-virtual">QuantLib::MCForwardVanillaEngine&lt; MultiVariate, PseudoRandom, Statistics &gt;</basecompoundref>
    <includes refid="mcforwardeuropeanhestonengine_8hpp" local="no">mcforwardeuropeanhestonengine.hpp</includes>
    <templateparamlist>
      <param>
        <type>class RNG</type>
        <defval><ref refid="namespace_quant_lib_1a68b9aaf5f0c17983506b1a1db8575ab0" kindref="member">PseudoRandom</ref></defval>
      </param>
      <param>
        <type>class S</type>
        <defval><ref refid="namespace_quant_lib_1ae2e788da35d2b866040a03b96227ee6e" kindref="member">Statistics</ref></defval>
      </param>
      <param>
        <type>class P</type>
        <defval><ref refid="class_quant_lib_1_1_heston_process" kindref="compound">HestonProcess</ref></defval>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_quant_lib_1_1_m_c_forward_european_heston_engine_1a016df6243b724a2923f314aa9938891e" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1_m_c_forward_vanilla_engine" kindref="compound">MCForwardVanillaEngine</ref>&lt; <ref refid="struct_quant_lib_1_1_multi_variate" kindref="compound">MultiVariate</ref>, RNG, S &gt;::path_generator_type</type>
        <definition>typedef MCForwardVanillaEngine&lt;MultiVariate,RNG,S&gt;::path_generator_type QuantLib::MCForwardEuropeanHestonEngine&lt; RNG, S, P &gt;::path_generator_type</definition>
        <argsstring></argsstring>
        <name>path_generator_type</name>
        <qualifiedname>QuantLib::MCForwardEuropeanHestonEngine::path_generator_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" line="53" column="13" bodyfile="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_quant_lib_1_1_m_c_forward_european_heston_engine_1a206a95913b1d67461c57a06b7d010ea1" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1_m_c_forward_vanilla_engine" kindref="compound">MCForwardVanillaEngine</ref>&lt; <ref refid="struct_quant_lib_1_1_multi_variate" kindref="compound">MultiVariate</ref>, RNG, S &gt;::path_pricer_type</type>
        <definition>typedef MCForwardVanillaEngine&lt;MultiVariate,RNG,S&gt;::path_pricer_type QuantLib::MCForwardEuropeanHestonEngine&lt; RNG, S, P &gt;::path_pricer_type</definition>
        <argsstring></argsstring>
        <name>path_pricer_type</name>
        <qualifiedname>QuantLib::MCForwardEuropeanHestonEngine::path_pricer_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" line="56" column="13" bodyfile="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_quant_lib_1_1_m_c_forward_european_heston_engine_1a3f9baf1c6bbe32fd44bad717e868ed31" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1_m_c_forward_vanilla_engine" kindref="compound">MCForwardVanillaEngine</ref>&lt; <ref refid="struct_quant_lib_1_1_multi_variate" kindref="compound">MultiVariate</ref>, RNG, S &gt;::stats_type</type>
        <definition>typedef MCForwardVanillaEngine&lt;MultiVariate,RNG,S&gt;::stats_type QuantLib::MCForwardEuropeanHestonEngine&lt; RNG, S, P &gt;::stats_type</definition>
        <argsstring></argsstring>
        <name>stats_type</name>
        <qualifiedname>QuantLib::MCForwardEuropeanHestonEngine::stats_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" line="58" column="13" bodyfile="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_m_c_forward_european_heston_engine_1a25c4dc1f63a2ecde333a08697e8ef508" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::MCForwardEuropeanHestonEngine&lt; RNG, S, P &gt;::MCForwardEuropeanHestonEngine</definition>
        <argsstring>(const ext::shared_ptr&lt; P &gt; &amp;process, Size timeSteps, Size timeStepsPerYear, bool antitheticVariate, Size requiredSamples, Real requiredTolerance, Size maxSamples, BigNatural seed, bool controlVariate=false)</argsstring>
        <name>MCForwardEuropeanHestonEngine</name>
        <qualifiedname>QuantLib::MCForwardEuropeanHestonEngine::MCForwardEuropeanHestonEngine</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; P &gt; &amp;</type>
          <declname>process</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>timeSteps</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>timeStepsPerYear</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>antitheticVariate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>requiredSamples</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>requiredTolerance</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>maxSamples</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
          <declname>seed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>controlVariate</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" line="60" column="9" bodyfile="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" bodystart="131" bodyend="150"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_m_c_forward_european_heston_engine_1a2d6aaad4ebc6063dac6d231f75d8fa43" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_path_pricer" kindref="compound">path_pricer_type</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; typename MCForwardEuropeanHestonEngine&lt; RNG, S, P &gt;::path_pricer_type &gt; QuantLib::MCForwardEuropeanHestonEngine&lt; RNG, S, P &gt;::pathPricer</definition>
        <argsstring>() const override</argsstring>
        <name>pathPricer</name>
        <qualifiedname>QuantLib::MCForwardEuropeanHestonEngine::pathPricer</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_mc_simulation_1a0e142b20adbf77779877d3603f9fa9b5">pathPricer</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" line="71" column="25" bodyfile="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" bodystart="155" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_m_c_forward_european_heston_engine_1a864ee0503ee46bdab1fa628696d72e48" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_path_pricer" kindref="compound">path_pricer_type</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; typename MCForwardEuropeanHestonEngine&lt; RNG, S, P &gt;::path_pricer_type &gt; QuantLib::MCForwardEuropeanHestonEngine&lt; RNG, S, P &gt;::controlPathPricer</definition>
        <argsstring>() const override</argsstring>
        <name>controlPathPricer</name>
        <qualifiedname>QuantLib::MCForwardEuropeanHestonEngine::controlPathPricer</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_mc_simulation_1ae3b7f6e12eaf228b5c65f70a721eb729">controlPathPricer</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" line="75" column="25" bodyfile="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" bodystart="188" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_m_c_forward_european_heston_engine_1af32c22ee8ddfcaf676c81a71b03f4a2a" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_pricing_engine" kindref="compound">PricingEngine</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; PricingEngine &gt; QuantLib::MCForwardEuropeanHestonEngine&lt; RNG, S, P &gt;::controlPricingEngine</definition>
        <argsstring>() const override</argsstring>
        <name>controlPricingEngine</name>
        <qualifiedname>QuantLib::MCForwardEuropeanHestonEngine::controlPricingEngine</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_mc_simulation_1ad835a3988a983d55494f911f53b78408">controlPricingEngine</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" line="76" column="25" bodyfile="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" bodystart="76" bodyend="83"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>References:</para>
<para>Control Variate trade-off considerations discussed in pull request: <ulink url="https://github.com/lballabio/QuantLib/pull/948">https://github.com/lballabio/QuantLib/pull/948</ulink></para>
<para><xrefsect id="test_1_test000125"><xreftitle>Test</xreftitle><xrefdescription><para><itemizedlist>
<listitem><para>Heston MC prices for a flat Heston process are compared to analytical BS prices with the same volatility for a range of moneynesses</para>
</listitem><listitem><para>Heston MC prices for a forward-starting option resetting at t=0 are compared to semi-analytical Heston prices for a range of moneynesses </para>
</listitem></itemizedlist>
</para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>QuantLib::GenericEngine&lt; ForwardOptionArguments&lt; VanillaOption::arguments &gt;, VanillaOption::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_engine"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::MCForwardEuropeanHestonEngine&lt; RNG, S, P &gt;</label>
        <link refid="class_quant_lib_1_1_m_c_forward_european_heston_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::MCForwardVanillaEngine&lt; MultiVariate, PseudoRandom, Statistics &gt;</label>
        <link refid="class_quant_lib_1_1_m_c_forward_vanilla_engine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::McSimulation&lt; MultiVariate, PseudoRandom, Statistics &gt;</label>
        <link refid="class_quant_lib_1_1_mc_simulation"/>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="4">
        <label>QuantLib::PricingEngine</label>
        <link refid="class_quant_lib_1_1_pricing_engine"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="7">
        <label>QuantLib::ForwardOptionArguments&lt; VanillaOption::arguments &gt;</label>
        <link refid="class_quant_lib_1_1_forward_option_arguments"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>resetDate</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::GenericEngine&lt; ForwardOptionArguments&lt; VanillaOption::arguments &gt;, VanillaOption::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_engine"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>arguments_</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::MCForwardEuropeanHestonEngine&lt; RNG, S, P &gt;</label>
        <link refid="class_quant_lib_1_1_m_c_forward_european_heston_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::MCForwardVanillaEngine&lt; MultiVariate, PseudoRandom, Statistics &gt;</label>
        <link refid="class_quant_lib_1_1_m_c_forward_vanilla_engine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QuantLib::McSimulation&lt; MultiVariate, PseudoRandom, Statistics &gt;</label>
        <link refid="class_quant_lib_1_1_mc_simulation"/>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="4">
        <label>QuantLib::PricingEngine</label>
        <link refid="class_quant_lib_1_1_pricing_engine"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>VanillaOption::arguments</label>
      </node>
    </collaborationgraph>
    <location file="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" line="48" column="5" bodyfile="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" bodystart="49" bodyend="84"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_mc_simulation_1a06f6de1952807cb9e689619d3f48450d" prot="protected" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>antitheticVariate_</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1ad2371cdbafa1989afb0e4733b1212c0d" prot="protected" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>arguments_</name></member>
      <member refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a4726877aea4cf2377ecf57af39fd4645" prot="protected" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>brownianBridge_</name></member>
      <member refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a2ab77797eccf9a55613adc283cc188d5" prot="public" virt="virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1af5ccf2e30a050c14f9e30965855b4993" prot="public" virt="non-virtual" ambiguityscope="QuantLib::McSimulation&lt; MultiVariate, PseudoRandom, Statistics &gt;::"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a81f0b6c250bc8a1ba246faa3b7bbe70f" prot="protected" virt="virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>controlPathGenerator</name></member>
      <member refid="class_quant_lib_1_1_m_c_forward_european_heston_engine_1a864ee0503ee46bdab1fa628696d72e48" prot="protected" virt="virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>controlPathPricer</name></member>
      <member refid="class_quant_lib_1_1_m_c_forward_european_heston_engine_1af32c22ee8ddfcaf676c81a71b03f4a2a" prot="protected" virt="virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>controlPricingEngine</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a0c55429fb2a2d840cd8d358a5973cc40" prot="protected" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>controlVariate_</name></member>
      <member refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a9c1a7f2d2025e9c55d98d98f86137cc2" prot="protected" virt="virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>controlVariateValue</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1aa74e7e1891852e5c96da544b87af083c" prot="public" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>errorEstimate</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1ad9c6e8dc65ca072d5e6e17640d74db3e" prot="public" virt="virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>getArguments</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1aea8272ef6e5e0ea1cffadfed0454fa88" prot="public" virt="virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>getResults</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1ae21c92c6196d56c6a889389268ef2075" prot="protected" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>maxError</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a10d5e5d85cc108ab976899890055e061" prot="protected" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>maxError</name></member>
      <member refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a2d051fe4324c00ef266d45884d19508c" prot="protected" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>maxSamples_</name></member>
      <member refid="class_quant_lib_1_1_m_c_forward_european_heston_engine_1a25c4dc1f63a2ecde333a08697e8ef508" prot="public" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>MCForwardEuropeanHestonEngine</name></member>
      <member refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1ac168c9fe8e61f42d788167d329def564" prot="public" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>MCForwardVanillaEngine</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1afbdbf4a8ce56b1b6060c49ac91b1f55a" prot="protected" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>mcModel_</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a3242253b8262657e78739463a077c1d6" prot="protected" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>McSimulation</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_m_c_forward_european_heston_engine_1a016df6243b724a2923f314aa9938891e" prot="public" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>path_generator_type</name></member>
      <member refid="class_quant_lib_1_1_m_c_forward_european_heston_engine_1a206a95913b1d67461c57a06b7d010ea1" prot="public" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>path_pricer_type</name></member>
      <member refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1ae0706154eb396f85655316a3d134aa9d" prot="protected" virt="virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>pathGenerator</name></member>
      <member refid="class_quant_lib_1_1_m_c_forward_european_heston_engine_1a2d6aaad4ebc6063dac6d231f75d8fa43" prot="protected" virt="virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>pathPricer</name></member>
      <member refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a666fcea387c3cb4b3e42c56fc2b4294f" prot="protected" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>process_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a6da26e629ac9b67075b5c333c398e9ec" prot="protected" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>requiredSamples_</name></member>
      <member refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1ab66b14509b0240732e56a64606b34352" prot="protected" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>requiredTolerance_</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1a81c5390ba1e713e57ca87d5f841d37f2" prot="public" virt="virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>reset</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a5c793e8d12a221aec4c60f022d34eb81" prot="public" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>result_type</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1a41281f2ea4990dbce90be1f9f2e231f6" prot="protected" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>results_</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1aada0200a7fb38c4bc94bbcb49464d35b" prot="public" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>sampleAccumulator</name></member>
      <member refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a064c0a673ccc7c71c1ef8beb90aca21a" prot="protected" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>seed_</name></member>
      <member refid="class_quant_lib_1_1_m_c_forward_european_heston_engine_1a3f9baf1c6bbe32fd44bad717e868ed31" prot="public" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>stats_type</name></member>
      <member refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a83aa0dbf1772c15208e4d6d252f6c648" prot="protected" virt="virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>timeGrid</name></member>
      <member refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a5080680076654836d33aa8952681cdab" prot="protected" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>timeSteps_</name></member>
      <member refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a2b6e1fdd4eed566017070437a01751c8" prot="protected" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>timeStepsPerYear_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1aaf5ef54d9e1abf8b1b50b48804edf3dc" prot="public" virt="virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a1c903a9dd586755f55377b522d99ac16" prot="public" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>value</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a06e9db2fbd3d80e6358e8494f4b6b6ea" prot="public" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>valueWithSamples</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a11624b5e53889858d9189f85e27d653d" prot="public" virt="virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>~McSimulation</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_pricing_engine_1a66b279a54578cd7e60d402e5147eb526" prot="public" virt="non-virtual"><scope>QuantLib::MCForwardEuropeanHestonEngine</scope><name>~PricingEngine</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_interpolated_smile_section" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::InterpolatedSmileSection</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_smile_section" prot="public" virt="non-virtual">QuantLib::SmileSection</basecompoundref>
    <basecompoundref refid="class_quant_lib_1_1_lazy_object" prot="public" virt="non-virtual">QuantLib::LazyObject</basecompoundref>
    <templateparamlist>
      <param>
        <type>class Interpolator</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_interpolated_smile_section_1a8cb4f08c7b148c0917b276451edc819c" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::InterpolatedSmileSection&lt; Interpolator &gt;::exerciseTimeSquareRoot_</definition>
        <argsstring></argsstring>
        <name>exerciseTimeSquareRoot_</name>
        <qualifiedname>QuantLib::InterpolatedSmileSection::exerciseTimeSquareRoot_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/interpolatedsmilesection.hpp" line="87" column="14" bodyfile="ql/termstructures/volatility/interpolatedsmilesection.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_interpolated_smile_section_1a67b42116f2661747e548d98a6d7df709" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>std::vector&lt;Rate&gt; QuantLib::InterpolatedSmileSection&lt; Interpolator &gt;::strikes_</definition>
        <argsstring></argsstring>
        <name>strikes_</name>
        <qualifiedname>QuantLib::InterpolatedSmileSection::strikes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/interpolatedsmilesection.hpp" line="88" column="21" bodyfile="ql/termstructures/volatility/interpolatedsmilesection.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_interpolated_smile_section_1a36b75763e7c6874fa237d141f68e2348" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &gt;</type>
        <definition>std::vector&lt;Handle&lt;Quote&gt; &gt; QuantLib::InterpolatedSmileSection&lt; Interpolator &gt;::stdDevHandles_</definition>
        <argsstring></argsstring>
        <name>stdDevHandles_</name>
        <qualifiedname>QuantLib::InterpolatedSmileSection::stdDevHandles_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/interpolatedsmilesection.hpp" line="89" column="21" bodyfile="ql/termstructures/volatility/interpolatedsmilesection.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_interpolated_smile_section_1aa4dac3b7254ff15f93d2934c14a27720" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
        <definition>Handle&lt;Quote&gt; QuantLib::InterpolatedSmileSection&lt; Interpolator &gt;::atmLevel_</definition>
        <argsstring></argsstring>
        <name>atmLevel_</name>
        <qualifiedname>QuantLib::InterpolatedSmileSection::atmLevel_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/interpolatedsmilesection.hpp" line="90" column="16" bodyfile="ql/termstructures/volatility/interpolatedsmilesection.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_interpolated_smile_section_1a2159b4899d95bf76fe739440f84f609f" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref> &gt;</type>
        <definition>std::vector&lt;Volatility&gt; QuantLib::InterpolatedSmileSection&lt; Interpolator &gt;::vols_</definition>
        <argsstring></argsstring>
        <name>vols_</name>
        <qualifiedname>QuantLib::InterpolatedSmileSection::vols_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/interpolatedsmilesection.hpp" line="91" column="29" bodyfile="ql/termstructures/volatility/interpolatedsmilesection.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_interpolated_smile_section_1a4d590c6772084c6e7a6757e2cc83dfb1" prot="private" static="no" mutable="yes">
        <type><ref refid="class_quant_lib_1_1_interpolation" kindref="compound">Interpolation</ref></type>
        <definition>Interpolation QuantLib::InterpolatedSmileSection&lt; Interpolator &gt;::interpolation_</definition>
        <argsstring></argsstring>
        <name>interpolation_</name>
        <qualifiedname>QuantLib::InterpolatedSmileSection::interpolation_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/interpolatedsmilesection.hpp" line="92" column="31" bodyfile="ql/termstructures/volatility/interpolatedsmilesection.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_interpolated_smile_section_1a7b7cb986f200a00b07d22c097dcada39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::InterpolatedSmileSection&lt; Interpolator &gt;::InterpolatedSmileSection</definition>
        <argsstring>(Time expiryTime, std::vector&lt; Rate &gt; strikes, const std::vector&lt; Handle&lt; Quote &gt; &gt; &amp;stdDevHandles, Handle&lt; Quote &gt; atmLevel, const Interpolator &amp;interpolator=Interpolator(), const DayCounter &amp;dc=Actual365Fixed(), VolatilityType type=ShiftedLognormal, Real shift=0.0)</argsstring>
        <name>InterpolatedSmileSection</name>
        <qualifiedname>QuantLib::InterpolatedSmileSection::InterpolatedSmileSection</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>expiryTime</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
          <declname>strikes</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &gt; &amp;</type>
          <declname>stdDevHandles</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
          <declname>atmLevel</declname>
        </param>
        <param>
          <type>const Interpolator &amp;</type>
          <declname>interpolator</declname>
          <defval>Interpolator()</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dc</declname>
          <defval><ref refid="class_quant_lib_1_1_actual365_fixed" kindref="compound">Actual365Fixed</ref>()</defval>
        </param>
        <param>
          <type>VolatilityType</type>
          <declname>type</declname>
          <defval>ShiftedLognormal</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>shift</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/interpolatedsmilesection.hpp" line="43" column="9" bodyfile="ql/termstructures/volatility/interpolatedsmilesection.hpp" bodystart="97" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolated_smile_section_1ac51b0f189ab753dc199f03f305d531d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::InterpolatedSmileSection&lt; Interpolator &gt;::InterpolatedSmileSection</definition>
        <argsstring>(Time expiryTime, std::vector&lt; Rate &gt; strikes, const std::vector&lt; Real &gt; &amp;stdDevs, Real atmLevel, const Interpolator &amp;interpolator=Interpolator(), const DayCounter &amp;dc=Actual365Fixed(), VolatilityType type=ShiftedLognormal, Real shift=0.0)</argsstring>
        <name>InterpolatedSmileSection</name>
        <qualifiedname>QuantLib::InterpolatedSmileSection::InterpolatedSmileSection</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>expiryTime</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
          <declname>strikes</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>stdDevs</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>atmLevel</declname>
        </param>
        <param>
          <type>const Interpolator &amp;</type>
          <declname>interpolator</declname>
          <defval>Interpolator()</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dc</declname>
          <defval><ref refid="class_quant_lib_1_1_actual365_fixed" kindref="compound">Actual365Fixed</ref>()</defval>
        </param>
        <param>
          <type>VolatilityType</type>
          <declname>type</declname>
          <defval>ShiftedLognormal</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>shift</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/interpolatedsmilesection.hpp" line="51" column="9" bodyfile="ql/termstructures/volatility/interpolatedsmilesection.hpp" bodystart="119" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolated_smile_section_1ac521c2f4e9d8403e78ec16d87203a228" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::InterpolatedSmileSection&lt; Interpolator &gt;::InterpolatedSmileSection</definition>
        <argsstring>(const Date &amp;d, std::vector&lt; Rate &gt; strikes, const std::vector&lt; Handle&lt; Quote &gt; &gt; &amp;stdDevHandles, Handle&lt; Quote &gt; atmLevel, const DayCounter &amp;dc=Actual365Fixed(), const Interpolator &amp;interpolator=Interpolator(), const Date &amp;referenceDate=Date(), VolatilityType type=ShiftedLognormal, Real shift=0.0)</argsstring>
        <name>InterpolatedSmileSection</name>
        <qualifiedname>QuantLib::InterpolatedSmileSection::InterpolatedSmileSection</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
          <declname>strikes</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &gt; &amp;</type>
          <declname>stdDevHandles</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
          <declname>atmLevel</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dc</declname>
          <defval><ref refid="class_quant_lib_1_1_actual365_fixed" kindref="compound">Actual365Fixed</ref>()</defval>
        </param>
        <param>
          <type>const Interpolator &amp;</type>
          <declname>interpolator</declname>
          <defval>Interpolator()</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>referenceDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>VolatilityType</type>
          <declname>type</declname>
          <defval>ShiftedLognormal</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>shift</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/interpolatedsmilesection.hpp" line="59" column="9" bodyfile="ql/termstructures/volatility/interpolatedsmilesection.hpp" bodystart="145" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolated_smile_section_1aa8fb1ede58a3eca359d7ac01bc11d726" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::InterpolatedSmileSection&lt; Interpolator &gt;::InterpolatedSmileSection</definition>
        <argsstring>(const Date &amp;d, std::vector&lt; Rate &gt; strikes, const std::vector&lt; Real &gt; &amp;stdDevs, Real atmLevel, const DayCounter &amp;dc=Actual365Fixed(), const Interpolator &amp;interpolator=Interpolator(), const Date &amp;referenceDate=Date(), VolatilityType type=ShiftedLognormal, Real shift=0.0)</argsstring>
        <name>InterpolatedSmileSection</name>
        <qualifiedname>QuantLib::InterpolatedSmileSection::InterpolatedSmileSection</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
          <declname>strikes</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>stdDevs</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>atmLevel</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dc</declname>
          <defval><ref refid="class_quant_lib_1_1_actual365_fixed" kindref="compound">Actual365Fixed</ref>()</defval>
        </param>
        <param>
          <type>const Interpolator &amp;</type>
          <declname>interpolator</declname>
          <defval>Interpolator()</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>referenceDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>VolatilityType</type>
          <declname>type</declname>
          <defval>ShiftedLognormal</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>shift</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/interpolatedsmilesection.hpp" line="68" column="9" bodyfile="ql/termstructures/volatility/interpolatedsmilesection.hpp" bodystart="168" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolated_smile_section_1a5c6ccd6537a8255b0735dfc35b439fb8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::InterpolatedSmileSection&lt; Interpolator &gt;::performCalculations</definition>
        <argsstring>() const override</argsstring>
        <name>performCalculations</name>
        <qualifiedname>QuantLib::InterpolatedSmileSection::performCalculations</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_lazy_object_1aafa5583a3743d9f93fa40da5b62e1ff8">performCalculations</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must implement any calculations which must be (re)done in order to calculate the desired results. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/interpolatedsmilesection.hpp" line="78" column="14" bodyfile="ql/termstructures/volatility/interpolatedsmilesection.hpp" bodystart="196" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolated_smile_section_1a708766444d13a0dcf7dbeed743fbe42e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::InterpolatedSmileSection&lt; Interpolator &gt;::varianceImpl</definition>
        <argsstring>(Rate strike) const override</argsstring>
        <name>varianceImpl</name>
        <qualifiedname>QuantLib::InterpolatedSmileSection::varianceImpl</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_smile_section_1a680162f5de7f231d1ff2b5fb76cfc54a">varianceImpl</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/interpolatedsmilesection.hpp" line="79" column="14" bodyfile="ql/termstructures/volatility/interpolatedsmilesection.hpp" bodystart="205" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolated_smile_section_1ad9f0096154471da62c34e0db151e5062" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
        <definition>Real QuantLib::InterpolatedSmileSection&lt; Interpolator &gt;::volatilityImpl</definition>
        <argsstring>(Rate strike) const override</argsstring>
        <name>volatilityImpl</name>
        <qualifiedname>QuantLib::InterpolatedSmileSection::volatilityImpl</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_smile_section_1a14bf773bdfb690c9b9e9cbe61f14c2bf">volatilityImpl</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/interpolatedsmilesection.hpp" line="80" column="20" bodyfile="ql/termstructures/volatility/interpolatedsmilesection.hpp" bodystart="212" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolated_smile_section_1a59923826de13cb5ccc086bceeb83a5c3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::InterpolatedSmileSection&lt; Interpolator &gt;::minStrike</definition>
        <argsstring>() const override</argsstring>
        <name>minStrike</name>
        <qualifiedname>QuantLib::InterpolatedSmileSection::minStrike</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_smile_section_1a54bb5cd9f6913f7d69efc85d51af2624">minStrike</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/interpolatedsmilesection.hpp" line="81" column="14" bodyfile="ql/termstructures/volatility/interpolatedsmilesection.hpp" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolated_smile_section_1a1f8d12d2f6cdc22bb3f96822c30ef80b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::InterpolatedSmileSection&lt; Interpolator &gt;::maxStrike</definition>
        <argsstring>() const override</argsstring>
        <name>maxStrike</name>
        <qualifiedname>QuantLib::InterpolatedSmileSection::maxStrike</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_smile_section_1aa74a46c0a15e98112c1f9afaad9e6604">maxStrike</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/interpolatedsmilesection.hpp" line="82" column="14" bodyfile="ql/termstructures/volatility/interpolatedsmilesection.hpp" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolated_smile_section_1a6fa54aefae795aaa5a887c37896303c7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::InterpolatedSmileSection&lt; Interpolator &gt;::atmLevel</definition>
        <argsstring>() const override</argsstring>
        <name>atmLevel</name>
        <qualifiedname>QuantLib::InterpolatedSmileSection::atmLevel</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_smile_section_1a7ff3d003fcdcf207cde30c3469b6422a">atmLevel</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/interpolatedsmilesection.hpp" line="83" column="14" bodyfile="ql/termstructures/volatility/interpolatedsmilesection.hpp" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolated_smile_section_1ac74bc9b7e5788192248937f2ab659356" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::InterpolatedSmileSection&lt; Interpolator &gt;::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <qualifiedname>QuantLib::InterpolatedSmileSection::update</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_observer_1a07905c55dca858470fcf4a1aea0005aa">update</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must be implemented in derived classes. An instance of Observer does not call this method directly: instead, it will be called by the observables the instance registered with when they need to notify any changes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/interpolatedsmilesection.hpp" line="84" column="14" bodyfile="ql/termstructures/volatility/interpolatedsmilesection.hpp" bodystart="218" bodyend="221"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::InterpolatedSmileSection&lt; Interpolator &gt;</label>
        <link refid="class_quant_lib_1_1_interpolated_smile_section"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>QuantLib::SmileSection</label>
        <link refid="class_quant_lib_1_1_smile_section"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::InterpolatedSmileSection&lt; Interpolator &gt;</label>
        <link refid="class_quant_lib_1_1_interpolated_smile_section"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>QuantLib::SmileSection</label>
        <link refid="class_quant_lib_1_1_smile_section"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/termstructures/volatility/interpolatedsmilesection.hpp" line="40" column="5" bodyfile="ql/termstructures/volatility/interpolatedsmilesection.hpp" bodystart="41" bodyend="93"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_lazy_object_1a02070ea7442d30625992c1711030d4b8" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>alwaysForward_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a17c9433135a259e4776baec66204a484" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>alwaysForwardNotifications</name></member>
      <member refid="class_quant_lib_1_1_interpolated_smile_section_1a6fa54aefae795aaa5a887c37896303c7" prot="public" virt="virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>atmLevel</name></member>
      <member refid="class_quant_lib_1_1_interpolated_smile_section_1aa4dac3b7254ff15f93d2934c14a27720" prot="private" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>atmLevel_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a5244c7f83592375a0ea9048296435fd1" prot="protected" virt="virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a58b4986a80efa18634483a92c121e26e" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>calculated_</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a9d62efde0aa0bc8b6628ab562b5c479d" prot="public" virt="virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>dayCounter</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a3a4e90440ae22c4c9c3e9253b0199a82" prot="public" virt="virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>density</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a9ecdb328b2b90432da8a4429c4d56f06" prot="public" virt="virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>digitalOptionPrice</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1ac9b9e60511fc940cd8d74fbbbcd87b5f" prot="public" virt="virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>exerciseDate</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a7bf1b552a5e93d12631f01a5fa59eb58" prot="public" virt="virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>exerciseTime</name></member>
      <member refid="class_quant_lib_1_1_interpolated_smile_section_1a8cb4f08c7b148c0917b276451edc819c" prot="private" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>exerciseTimeSquareRoot_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1afac6ee19c3107c453e1347dd8000e023" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>forwardFirstNotificationOnly</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7157f41e83f2c5d924f5c5bafda04d1d" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>freeze</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7bb721fe00c6854e602758aba629ab77" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>frozen_</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a7fba48f0a4277b91b0d0768d262affdb" prot="protected" virt="virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>initializeExerciseTime</name></member>
      <member refid="class_quant_lib_1_1_interpolated_smile_section_1a7b7cb986f200a00b07d22c097dcada39" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>InterpolatedSmileSection</name></member>
      <member refid="class_quant_lib_1_1_interpolated_smile_section_1ac51b0f189ab753dc199f03f305d531d4" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>InterpolatedSmileSection</name></member>
      <member refid="class_quant_lib_1_1_interpolated_smile_section_1ac521c2f4e9d8403e78ec16d87203a228" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>InterpolatedSmileSection</name></member>
      <member refid="class_quant_lib_1_1_interpolated_smile_section_1aa8fb1ede58a3eca359d7ac01bc11d726" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>InterpolatedSmileSection</name></member>
      <member refid="class_quant_lib_1_1_interpolated_smile_section_1a4d590c6772084c6e7a6757e2cc83dfb1" prot="private" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>interpolation_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a0a7c5d42815a4e16ee2158e24dbfc748" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>isCalculated</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a26f18f4ff7faaaebd8eae50e064b493e" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>LazyObject</name></member>
      <member refid="class_quant_lib_1_1_interpolated_smile_section_1a1f8d12d2f6cdc22bb3f96822c30ef80b" prot="public" virt="virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>maxStrike</name></member>
      <member refid="class_quant_lib_1_1_interpolated_smile_section_1a59923826de13cb5ccc086bceeb83a5c3" prot="public" virt="virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>minStrike</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::SmileSection::"><scope>QuantLib::InterpolatedSmileSection</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::SmileSection::"><scope>QuantLib::InterpolatedSmileSection</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::InterpolatedSmileSection</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::InterpolatedSmileSection</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::SmileSection::"><scope>QuantLib::InterpolatedSmileSection</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::SmileSection::QuantLib::Observer::"><scope>QuantLib::InterpolatedSmileSection</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1abf5fbad0f8d32a1b644ec3c23927061b" prot="public" virt="virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>optionPrice</name></member>
      <member refid="class_quant_lib_1_1_interpolated_smile_section_1a5c6ccd6537a8255b0735dfc35b439fb8" prot="public" virt="virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>performCalculations</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a70c9b24e50132408d8d9ce4f6674662a" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>recalculate</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a42fe316ed2696fb7b8b6fb8853b5bae0" prot="public" virt="virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>referenceDate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a3fbddba097e2b742fe8800217ed613cc" prot="public" virt="virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>shift</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a6c2ea1d64020c754251c89372fe46686" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>SmileSection</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1aae4f281efa6a9f4b5cea8165363df3b5" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>SmileSection</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a67cece6b7c60c0a5d7729bea038fe85c" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>SmileSection</name></member>
      <member refid="class_quant_lib_1_1_interpolated_smile_section_1a36b75763e7c6874fa237d141f68e2348" prot="private" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>stdDevHandles_</name></member>
      <member refid="class_quant_lib_1_1_interpolated_smile_section_1a67b42116f2661747e548d98a6d7df709" prot="private" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>strikes_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a2e0e4786666453024b9d4e0761f2770b" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>unfreeze</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_interpolated_smile_section_1ac74bc9b7e5788192248937f2ab659356" prot="public" virt="virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a5bab1e23eb1c4d12f927c7b80cafa550" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>variance</name></member>
      <member refid="class_quant_lib_1_1_interpolated_smile_section_1a708766444d13a0dcf7dbeed743fbe42e" prot="public" virt="virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>varianceImpl</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a7186ee49bc91697dcca75fd5204629be" prot="public" virt="virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>vega</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a0e1a9e52460bb881952fc9d9bce51a98" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>volatility</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a672a3e1398986f0a9c922b7b6bf3233c" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>volatility</name></member>
      <member refid="class_quant_lib_1_1_interpolated_smile_section_1ad9f0096154471da62c34e0db151e5062" prot="public" virt="virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>volatilityImpl</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1aac4cb2b17d273eecb0508f3a5c050a22" prot="public" virt="virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>volatilityType</name></member>
      <member refid="class_quant_lib_1_1_interpolated_smile_section_1a2159b4899d95bf76fe739440f84f609f" prot="private" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>vols_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a9d719c43bb627177a90d7d12324a2d6e" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>~LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a7c6cb707ed5e58e5a1fa92efc3a9a88f" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedSmileSection</scope><name>~SmileSection</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_upfront_cds_helper" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::UpfrontCdsHelper</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_cds_helper" prot="public" virt="non-virtual">QuantLib::CdsHelper</basecompoundref>
    <includes refid="defaultprobabilityhelpers_8hpp" local="no">defaultprobabilityhelpers.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_upfront_cds_helper_1ac54bc8c743e05b30a6e426c9d73c2007" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
        <definition>Natural QuantLib::UpfrontCdsHelper::upfrontSettlementDays_</definition>
        <argsstring></argsstring>
        <name>upfrontSettlementDays_</name>
        <qualifiedname>QuantLib::UpfrontCdsHelper::upfrontSettlementDays_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/credit/defaultprobabilityhelpers.hpp" line="238" column="17" bodyfile="ql/termstructures/credit/defaultprobabilityhelpers.hpp" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_upfront_cds_helper_1ab623a558386c0a566e5331de05e57adf" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::UpfrontCdsHelper::upfrontDate_</definition>
        <argsstring></argsstring>
        <name>upfrontDate_</name>
        <qualifiedname>QuantLib::UpfrontCdsHelper::upfrontDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/credit/defaultprobabilityhelpers.hpp" line="239" column="14" bodyfile="ql/termstructures/credit/defaultprobabilityhelpers.hpp" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_upfront_cds_helper_1acd9e9c2eb3c9ebda3d8b5ea34b8a8940" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::UpfrontCdsHelper::runningSpread_</definition>
        <argsstring></argsstring>
        <name>runningSpread_</name>
        <qualifiedname>QuantLib::UpfrontCdsHelper::runningSpread_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/credit/defaultprobabilityhelpers.hpp" line="240" column="14" bodyfile="ql/termstructures/credit/defaultprobabilityhelpers.hpp" bodystart="240" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_upfront_cds_helper_1a4c4194cc01af0166d40d923a7dbc88f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::UpfrontCdsHelper::UpfrontCdsHelper</definition>
        <argsstring>(const Handle&lt; Quote &gt; &amp;upfront, Rate runningSpread, const Period &amp;tenor, Integer settlementDays, const Calendar &amp;calendar, Frequency frequency, BusinessDayConvention paymentConvention, DateGeneration::Rule rule, const DayCounter &amp;dayCounter, Real recoveryRate, const Handle&lt; YieldTermStructure &gt; &amp;discountCurve, Natural upfrontSettlementDays=3, bool settlesAccrual=true, bool paysAtDefaultTime=true, const Date &amp;startDate=Date(), const DayCounter &amp;lastPeriodDayCounter=DayCounter(), bool rebatesAccrual=true, CreditDefaultSwap::PricingModel model=CreditDefaultSwap::Midpoint)</argsstring>
        <name>UpfrontCdsHelper</name>
        <qualifiedname>QuantLib::UpfrontCdsHelper::UpfrontCdsHelper</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &amp;</type>
          <declname>upfront</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>runningSpread</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>tenor</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
          <declname>settlementDays</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>calendar</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
          <declname>frequency</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
          <declname>paymentConvention</declname>
        </param>
        <param>
          <type><ref refid="struct_quant_lib_1_1_date_generation_1a3fee9b3c834b0d3be240d05886ac2f6e" kindref="member">DateGeneration::Rule</ref></type>
          <declname>rule</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>recoveryRate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>discountCurve</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>upfrontSettlementDays</declname>
          <defval>3</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>settlesAccrual</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>paysAtDefaultTime</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>startDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>lastPeriodDayCounter</declname>
          <defval><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>rebatesAccrual</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>CreditDefaultSwap::PricingModel</type>
          <declname>model</declname>
          <defval>CreditDefaultSwap::Midpoint</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>the upfront must be quoted in fractional units. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/credit/defaultprobabilityhelpers.hpp" line="194" column="9" bodyfile="ql/termstructures/credit/defaultprobabilityhelpers.cpp" bodystart="209" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_upfront_cds_helper_1a60eda1c433f96d5a24da876e08f99ffc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::UpfrontCdsHelper::UpfrontCdsHelper</definition>
        <argsstring>(Rate upfront, Rate runningSpread, const Period &amp;tenor, Integer settlementDays, const Calendar &amp;calendar, Frequency frequency, BusinessDayConvention paymentConvention, DateGeneration::Rule rule, const DayCounter &amp;dayCounter, Real recoveryRate, const Handle&lt; YieldTermStructure &gt; &amp;discountCurve, Natural upfrontSettlementDays=3, bool settlesAccrual=true, bool paysAtDefaultTime=true, const Date &amp;startDate=Date(), const DayCounter &amp;lastPeriodDayCounter=DayCounter(), bool rebatesAccrual=true, CreditDefaultSwap::PricingModel model=CreditDefaultSwap::Midpoint)</argsstring>
        <name>UpfrontCdsHelper</name>
        <qualifiedname>QuantLib::UpfrontCdsHelper::UpfrontCdsHelper</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>upfront</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>runningSpread</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>tenor</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
          <declname>settlementDays</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>calendar</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
          <declname>frequency</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
          <declname>paymentConvention</declname>
        </param>
        <param>
          <type><ref refid="struct_quant_lib_1_1_date_generation_1a3fee9b3c834b0d3be240d05886ac2f6e" kindref="member">DateGeneration::Rule</ref></type>
          <declname>rule</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>recoveryRate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>discountCurve</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>upfrontSettlementDays</declname>
          <defval>3</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>settlesAccrual</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>paysAtDefaultTime</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>startDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>lastPeriodDayCounter</declname>
          <defval><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>rebatesAccrual</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>CreditDefaultSwap::PricingModel</type>
          <declname>model</declname>
          <defval>CreditDefaultSwap::Midpoint</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>the upfront must be quoted in fractional units. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/credit/defaultprobabilityhelpers.hpp" line="214" column="9" bodyfile="ql/termstructures/credit/defaultprobabilityhelpers.cpp" bodystart="236" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_upfront_cds_helper_1a892f0572b4fea696ae39eb4ee9e4064d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::UpfrontCdsHelper::impliedQuote</definition>
        <argsstring>() const override</argsstring>
        <name>impliedQuote</name>
        <qualifiedname>QuantLib::UpfrontCdsHelper::impliedQuote</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_bootstrap_helper_1a6a29e23cead4e1b1bda334f1de80b17d">impliedQuote</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/credit/defaultprobabilityhelpers.hpp" line="232" column="14" bodyfile="ql/termstructures/credit/defaultprobabilityhelpers.cpp" bodystart="296" bodyend="301"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_upfront_cds_helper_1aa742e0044a62360f18f05f0565273f88" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::UpfrontCdsHelper::upfrontDate</definition>
        <argsstring>()</argsstring>
        <name>upfrontDate</name>
        <qualifiedname>QuantLib::UpfrontCdsHelper::upfrontDate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/credit/defaultprobabilityhelpers.hpp" line="235" column="14" bodyfile="ql/termstructures/credit/defaultprobabilityhelpers.cpp" bodystart="263" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_upfront_cds_helper_1a300ec593e0278521fe7c6846bec4183c" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::UpfrontCdsHelper::initializeDates</definition>
        <argsstring>() override</argsstring>
        <name>initializeDates</name>
        <qualifiedname>QuantLib::UpfrontCdsHelper::initializeDates</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_cds_helper_1a812469a09f5b7d6f41f1bf2bfe93ba05">initializeDates</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/credit/defaultprobabilityhelpers.hpp" line="236" column="14" bodyfile="ql/termstructures/credit/defaultprobabilityhelpers.cpp" bodystart="267" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_upfront_cds_helper_1a45ee1f5ae060b3592c8bb7d7d6f00989" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::UpfrontCdsHelper::resetEngine</definition>
        <argsstring>() override</argsstring>
        <name>resetEngine</name>
        <qualifiedname>QuantLib::UpfrontCdsHelper::resetEngine</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_cds_helper_1aa4d995ff1428ae4badd09b009ee285cf">resetEngine</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/credit/defaultprobabilityhelpers.hpp" line="237" column="14" bodyfile="ql/termstructures/credit/defaultprobabilityhelpers.cpp" bodystart="272" bodyend="294"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Upfront-quoted CDS hazard rate bootstrap helper. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>QuantLib::BootstrapHelper&lt; DefaultProbabilityTermStructure &gt;</label>
        <link refid="class_quant_lib_1_1_bootstrap_helper"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::CdsHelper</label>
        <link refid="class_quant_lib_1_1_cds_helper"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="1">
        <label>QuantLib::UpfrontCdsHelper</label>
        <link refid="class_quant_lib_1_1_upfront_cds_helper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>RelativeDateDefaultProbabilityHelper</label>
        <link refid="class_quant_lib_1_1_relative_date_bootstrap_helper"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>QuantLib::BootstrapHelper&lt; DefaultProbabilityTermStructure &gt;</label>
        <link refid="class_quant_lib_1_1_bootstrap_helper"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::Calendar</label>
        <link refid="class_quant_lib_1_1_calendar"/>
      </node>
      <node id="2">
        <label>QuantLib::CdsHelper</label>
        <link refid="class_quant_lib_1_1_cds_helper"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>tenor_</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>calendar_</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>dayCounter_</edgelabel>
          <edgelabel>lastPeriodDC_</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>discountCurve_</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>schedule_</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>probability_</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>protectionStart_</edgelabel>
          <edgelabel>startDate_</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="9">
        <label>QuantLib::DayCounter</label>
        <link refid="class_quant_lib_1_1_day_counter"/>
      </node>
      <node id="13">
        <label>QuantLib::Handle&lt; QuantLib::DefaultProbabilityTermStructure &gt;</label>
        <link refid="class_quant_lib_1_1_handle"/>
      </node>
      <node id="10">
        <label>QuantLib::Handle&lt; QuantLib::YieldTermStructure &gt;</label>
        <link refid="class_quant_lib_1_1_handle"/>
      </node>
      <node id="6">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="7">
        <label>QuantLib::Period</label>
        <link refid="class_quant_lib_1_1_period"/>
      </node>
      <node id="12">
        <label>QuantLib::RelinkableHandle&lt; QuantLib::DefaultProbabilityTermStructure &gt;</label>
        <link refid="class_quant_lib_1_1_relinkable_handle"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>QuantLib::Schedule</label>
        <link refid="class_quant_lib_1_1_schedule"/>
      </node>
      <node id="1">
        <label>QuantLib::UpfrontCdsHelper</label>
        <link refid="class_quant_lib_1_1_upfront_cds_helper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>RelativeDateDefaultProbabilityHelper</label>
        <link refid="class_quant_lib_1_1_relative_date_bootstrap_helper"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/termstructures/credit/defaultprobabilityhelpers.hpp" line="191" column="5" bodyfile="ql/termstructures/credit/defaultprobabilityhelpers.hpp" bodystart="191" bodyend="241"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a972d69e74106276b0fe15239047746b9" prot="public" virt="virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>accept</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a972d69e74106276b0fe15239047746b9" prot="public" virt="virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>accept</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a6e05e5d944839468441bca22c133d65a" prot="public" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>BootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a30a010aae5e4cc54d38457de4aa39c7e" prot="public" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>BootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a6e05e5d944839468441bca22c133d65a" prot="public" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>BootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a30a010aae5e4cc54d38457de4aa39c7e" prot="public" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>BootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_cds_helper_1ab056d0530d0c011e001082c05801cfae" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>calendar_</name></member>
      <member refid="class_quant_lib_1_1_cds_helper_1aa7245f1da17fc17a670d8aafb2b6327c" prot="public" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>CdsHelper</name></member>
      <member refid="class_quant_lib_1_1_cds_helper_1a339b4f6649e4973f83a51b4a5072292f" prot="public" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>CdsHelper</name></member>
      <member refid="class_quant_lib_1_1_cds_helper_1ada8d446d40c12cc9809f2524de03f82a" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>dayCounter_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_cds_helper_1ae08089772d97597180b9395350675840" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>discountCurve_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a1ca284f9f4ade8b17be1f5c284b1cfb2" prot="public" virt="virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>earliestDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a1ca284f9f4ade8b17be1f5c284b1cfb2" prot="public" virt="virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>earliestDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a3f5c545866d04dc90e2c3aec44974e08" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>earliestDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a3f5c545866d04dc90e2c3aec44974e08" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>earliestDate_</name></member>
      <member refid="class_quant_lib_1_1_relative_date_bootstrap_helper_1af7bdb39c6fd9c90a70af730244021a6d" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>evaluationDate_</name></member>
      <member refid="class_quant_lib_1_1_relative_date_bootstrap_helper_1af7bdb39c6fd9c90a70af730244021a6d" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>evaluationDate_</name></member>
      <member refid="class_quant_lib_1_1_cds_helper_1ada45ad3176699c64b193d6116c123ecf" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>frequency_</name></member>
      <member refid="class_quant_lib_1_1_upfront_cds_helper_1a892f0572b4fea696ae39eb4ee9e4064d" prot="public" virt="virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>impliedQuote</name></member>
      <member refid="class_quant_lib_1_1_upfront_cds_helper_1a300ec593e0278521fe7c6846bec4183c" prot="private" virt="virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>initializeDates</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::UpfrontCdsHelper</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_cds_helper_1afe0f9cb0f37cc2f22b34199d9b3affaa" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>lastPeriodDC_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a7b21f7d30980757a9721ef13ad7979af" prot="public" virt="virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>latestDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a7b21f7d30980757a9721ef13ad7979af" prot="public" virt="virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>latestDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a73a413539e8d6a526e8cc29f928f976c" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>latestDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a73a413539e8d6a526e8cc29f928f976c" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>latestDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1afc339bcd0b9d3029c20dfacaac5adf52" prot="public" virt="virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>latestRelevantDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1afc339bcd0b9d3029c20dfacaac5adf52" prot="public" virt="virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>latestRelevantDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a06f481f14c2b2b0624f2e0f8967353b0" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>latestRelevantDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a06f481f14c2b2b0624f2e0f8967353b0" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>latestRelevantDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1ad74f6e8a3c4f734a83edacaeb6fe53e0" prot="public" virt="virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>maturityDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1ad74f6e8a3c4f734a83edacaeb6fe53e0" prot="public" virt="virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>maturityDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1aa79e8a482771bdf0656a7afa4c557118" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>maturityDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1aa79e8a482771bdf0656a7afa4c557118" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>maturityDate_</name></member>
      <member refid="class_quant_lib_1_1_cds_helper_1ae941a7bd996a878276c4692a1f651112" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>model_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::UpfrontCdsHelper</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::UpfrontCdsHelper</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::UpfrontCdsHelper</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::UpfrontCdsHelper</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::UpfrontCdsHelper</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_cds_helper_1ac00c6b5daa9cd941243201ed943b388f" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>paymentConvention_</name></member>
      <member refid="class_quant_lib_1_1_cds_helper_1ad00bd6f4e8c80d01bc247731a9c54402" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>paysAtDefaultTime_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a00496ecfac2fb317e435a6fe48c5c267" prot="public" virt="virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>pillarDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a00496ecfac2fb317e435a6fe48c5c267" prot="public" virt="virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>pillarDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1aa1aa18bed40139d0dae5e0df17968255" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>pillarDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1aa1aa18bed40139d0dae5e0df17968255" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>pillarDate_</name></member>
      <member refid="class_quant_lib_1_1_cds_helper_1ac2bfceedda12cd9aab94c00f40d1a1a7" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>probability_</name></member>
      <member refid="class_quant_lib_1_1_cds_helper_1adb5370188c1988a067d7644c801a5b96" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>protectionStart_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a9e9a17bde5f762d0f75305310a84ae4d" prot="public" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>quote</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a9e9a17bde5f762d0f75305310a84ae4d" prot="public" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>quote</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a8480a30335c8da30122287bf782bc4b3" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>quote_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a8480a30335c8da30122287bf782bc4b3" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>quote_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a9bd06175fab6b2b4326c36b7e0f18007" prot="public" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>quoteError</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a9bd06175fab6b2b4326c36b7e0f18007" prot="public" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>quoteError</name></member>
      <member refid="class_quant_lib_1_1_cds_helper_1ac474071d1d16067b67cb36bab762fd81" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>rebatesAccrual_</name></member>
      <member refid="class_quant_lib_1_1_cds_helper_1a58f67ea7fe483e14f7fe1c334ef8c6a0" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>recoveryRate_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_relative_date_bootstrap_helper_1aeefd88603a3b1d911fc9aad76a67b065" prot="public" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>RelativeDateBootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_relative_date_bootstrap_helper_1a6375d375c4eab6ed86c0d1bee5394e41" prot="public" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>RelativeDateBootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_relative_date_bootstrap_helper_1aeefd88603a3b1d911fc9aad76a67b065" prot="public" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>RelativeDateBootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_relative_date_bootstrap_helper_1a6375d375c4eab6ed86c0d1bee5394e41" prot="public" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>RelativeDateBootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_upfront_cds_helper_1a45ee1f5ae060b3592c8bb7d7d6f00989" prot="private" virt="virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>resetEngine</name></member>
      <member refid="class_quant_lib_1_1_cds_helper_1a055270843dda63110a139087a657a904" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>rule_</name></member>
      <member refid="class_quant_lib_1_1_upfront_cds_helper_1acd9e9c2eb3c9ebda3d8b5ea34b8a8940" prot="private" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>runningSpread_</name></member>
      <member refid="class_quant_lib_1_1_cds_helper_1ab3b4de1c5089b39f4b74b42692655453" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>schedule_</name></member>
      <member refid="class_quant_lib_1_1_cds_helper_1ab92e8ade5f2036bf67971f0bb03560a1" prot="public" virt="virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>setTermStructure</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a1f17a55318c87b85475f7a0ace4881fc" prot="public" virt="virtual" ambiguityscope="QuantLib::RelativeDateBootstrapHelper&lt; DefaultProbabilityTermStructure &gt;::"><scope>QuantLib::UpfrontCdsHelper</scope><name>setTermStructure</name></member>
      <member refid="class_quant_lib_1_1_cds_helper_1af045df13e38864cc438c21ddb30c2602" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>settlementDays_</name></member>
      <member refid="class_quant_lib_1_1_cds_helper_1abe861b49bc7fd90c416f9c1312b2a617" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>settlesAccrual_</name></member>
      <member refid="class_quant_lib_1_1_cds_helper_1abdf371dcd68b5935bd01318e598f299c" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>startDate_</name></member>
      <member refid="class_quant_lib_1_1_cds_helper_1adb01b22f83ad7611f3db02211cf79406" prot="public" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>swap</name></member>
      <member refid="class_quant_lib_1_1_cds_helper_1a1d9155fe35de14701aeabf36d8f1a7a4" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>swap_</name></member>
      <member refid="class_quant_lib_1_1_cds_helper_1aba6bcf394e5e43064350ae64fc3b91c6" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>tenor_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a45322b36556492c6e52e1c64ebc8668e" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>termStructure_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a45322b36556492c6e52e1c64ebc8668e" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>termStructure_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_cds_helper_1a1eebda1730baab9e219cfd42925e2d2d" prot="public" virt="virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_relative_date_bootstrap_helper_1a248333b3e87cfcbfeca52f97cca368b0" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>updateDates_</name></member>
      <member refid="class_quant_lib_1_1_relative_date_bootstrap_helper_1a248333b3e87cfcbfeca52f97cca368b0" prot="protected" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>updateDates_</name></member>
      <member refid="class_quant_lib_1_1_upfront_cds_helper_1a4c4194cc01af0166d40d923a7dbc88f3" prot="public" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>UpfrontCdsHelper</name></member>
      <member refid="class_quant_lib_1_1_upfront_cds_helper_1a60eda1c433f96d5a24da876e08f99ffc" prot="public" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>UpfrontCdsHelper</name></member>
      <member refid="class_quant_lib_1_1_upfront_cds_helper_1aa742e0044a62360f18f05f0565273f88" prot="private" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>upfrontDate</name></member>
      <member refid="class_quant_lib_1_1_upfront_cds_helper_1ab623a558386c0a566e5331de05e57adf" prot="private" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>upfrontDate_</name></member>
      <member refid="class_quant_lib_1_1_upfront_cds_helper_1ac54bc8c743e05b30a6e426c9d73c2007" prot="private" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>upfrontSettlementDays_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a950cc899a68be0a5f04119edd931bd1d" prot="public" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>~BootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a950cc899a68be0a5f04119edd931bd1d" prot="public" virt="non-virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>~BootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::UpfrontCdsHelper</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_one_factor_affine_survival_structure" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::OneFactorAffineSurvivalStructure</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_hazard_rate_structure" prot="public" virt="non-virtual">QuantLib::HazardRateStructure</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_interpolated_affine_hazard_rate_curve" prot="public" virt="non-virtual">QuantLib::InterpolatedAffineHazardRateCurve&lt; Interpolator &gt;</derivedcompoundref>
    <includes refid="onefactoraffinesurvival_8hpp" local="no">onefactoraffinesurvival.hpp</includes>
    <sectiondef kind="user-defined">
      <header>DefaultProbabilityTermStructure implementation</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_one_factor_affine_survival_structure_1aa2d14bc2a5d909bf1dddeebf0c012e36" prot="protected" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_one_factor_affine_model" kindref="compound">OneFactorAffineModel</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;OneFactorAffineModel&gt; QuantLib::OneFactorAffineSurvivalStructure::model_</definition>
        <argsstring></argsstring>
        <name>model_</name>
        <qualifiedname>QuantLib::OneFactorAffineSurvivalStructure::model_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/onefactoraffinesurvival.hpp" line="145" column="25" bodyfile="ql/experimental/credit/onefactoraffinesurvival.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_one_factor_affine_survival_structure_1abdf10218905ef52a11b0737fb952e0d4" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1ac41728dd3be3e1869bbb9aec06a89d60" kindref="member">Probability</ref></type>
        <definition>Probability QuantLib::OneFactorAffineSurvivalStructure::survivalProbabilityImpl</definition>
        <argsstring>(Time) const override</argsstring>
        <name>survivalProbabilityImpl</name>
        <qualifiedname>QuantLib::OneFactorAffineSurvivalStructure::survivalProbabilityImpl</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_hazard_rate_structure_1aa5e90da86c9290f755b6ed456d786134">survivalProbabilityImpl</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <defname>t</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>survival probability calculation implemented in terms of the hazard rate <formula id="487">$ h(t) $</formula> as   <formula id="488">\[S(t) = \exp\left( - \int_0^t h(\tau) d\tau \right).
\]</formula></para>
<para><simplesect kind="warning"><para>This default implementation uses numerical integration, which might be inefficient and inaccurate. Derived classes should override it if a more efficient implementation is available. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/onefactoraffinesurvival.hpp" line="132" column="19" bodyfile="ql/experimental/credit/onefactoraffinesurvival.hpp" bodystart="149" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_one_factor_affine_survival_structure_1a87487077e9a57d99e4645ecc7b305853" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::OneFactorAffineSurvivalStructure::defaultDensityImpl</definition>
        <argsstring>(Time) const override</argsstring>
        <name>defaultDensityImpl</name>
        <qualifiedname>QuantLib::OneFactorAffineSurvivalStructure::defaultDensityImpl</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_hazard_rate_structure_1ab6222d00a246f3d6ab56f37202a67ffc">defaultDensityImpl</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <defname>t</defname>
        </param>
        <briefdescription>
<para>default density calculation </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/onefactoraffinesurvival.hpp" line="133" column="12" bodyfile="ql/experimental/credit/onefactoraffinesurvival.hpp" bodystart="166" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_one_factor_affine_survival_structure_1a03403ece54ee92f094c94aadc3d860e8" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1ac41728dd3be3e1869bbb9aec06a89d60" kindref="member">Probability</ref></type>
        <definition>Probability QuantLib::OneFactorAffineSurvivalStructure::conditionalSurvivalProbabilityImpl</definition>
        <argsstring>(Time tFwd, Time tgt, Real yVal) const</argsstring>
        <name>conditionalSurvivalProbabilityImpl</name>
        <qualifiedname>QuantLib::OneFactorAffineSurvivalStructure::conditionalSurvivalProbabilityImpl</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_interpolated_affine_hazard_rate_curve_1a3a17ffdda985015f1794296927c74486">conditionalSurvivalProbabilityImpl</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>tFwd</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>tgt</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>yVal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/onefactoraffinesurvival.hpp" line="137" column="27" bodyfile="ql/experimental/credit/onefactoraffinesurvival.hpp" bodystart="160" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_one_factor_affine_survival_structure_1a8adfccd57fb151250cfb66efeb4e1b67" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::OneFactorAffineSurvivalStructure::hazardRateImpl</definition>
        <argsstring>(Time) const override</argsstring>
        <name>hazardRateImpl</name>
        <qualifiedname>QuantLib::OneFactorAffineSurvivalStructure::hazardRateImpl</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_hazard_rate_structure_1a54ab66312dda719c022efeb35f670523">hazardRateImpl</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        </param>
        <briefdescription>
<para>hazard rate calculation </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/onefactoraffinesurvival.hpp" line="140" column="12" bodyfile="ql/experimental/credit/onefactoraffinesurvival.hpp" bodystart="140" bodyend="143"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>TermStructure interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_one_factor_affine_survival_structure_1ae6c5897a3d3d5d549bea17ea10ddd02a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::OneFactorAffineSurvivalStructure::maxDate</definition>
        <argsstring>() const override</argsstring>
        <name>maxDate</name>
        <qualifiedname>QuantLib::OneFactorAffineSurvivalStructure::maxDate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_term_structure_1ae9af756bbddc15962711f77f514f08fa">maxDate</reimplements>
        <briefdescription>
<para>the latest date for which the curve can return values </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/onefactoraffinesurvival.hpp" line="75" column="12" bodyfile="ql/experimental/credit/onefactoraffinesurvival.hpp" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_one_factor_affine_survival_structure_1ad9c3edf4f4cfec799108a4f954c22d2c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1ac41728dd3be3e1869bbb9aec06a89d60" kindref="member">Probability</ref></type>
        <definition>Probability QuantLib::OneFactorAffineSurvivalStructure::conditionalSurvivalProbability</definition>
        <argsstring>(const Date &amp;dFwd, const Date &amp;dTgt, Real yVal, bool extrapolate=false) const</argsstring>
        <name>conditionalSurvivalProbability</name>
        <qualifiedname>QuantLib::OneFactorAffineSurvivalStructure::conditionalSurvivalProbability</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>dFwd</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>dTgt</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>yVal</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the probability at a future time dTgt, conditional to survival at a prior time dFwd and to the realization of a particular hazard rate value at dFwd. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dFwd</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> of the forward survival calculation and HR realization. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dTgt</parametername>
</parameternamelist>
<parameterdescription>
<para>Target time of survival probability. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yVal</parametername>
</parameternamelist>
<parameterdescription>
<para>Realized value of the HR at time dFwd. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>extrapolate</parametername>
</parameternamelist>
<parameterdescription>
<para>Allow curve extrapolation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Survival probability.</para>
</simplesect>
<xrefsect id="todo_1_todo000015"><xreftitle>Todo</xreftitle><xrefdescription><para>turn into a protected method to be called by defaults and survivals </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/onefactoraffinesurvival.hpp" line="101" column="19" bodyfile="ql/experimental/credit/onefactoraffinesurvival.hpp" bodystart="101" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_one_factor_affine_survival_structure_1aa75eeef3e35b618a4275b5e6f6b08545" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1ac41728dd3be3e1869bbb9aec06a89d60" kindref="member">Probability</ref></type>
        <definition>Probability QuantLib::OneFactorAffineSurvivalStructure::conditionalSurvivalProbability</definition>
        <argsstring>(Time tFwd, Time tgt, Real yVal, bool extrapolate=false) const</argsstring>
        <name>conditionalSurvivalProbability</name>
        <qualifiedname>QuantLib::OneFactorAffineSurvivalStructure::conditionalSurvivalProbability</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>tFwd</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>tgt</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>yVal</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/onefactoraffinesurvival.hpp" line="108" column="21" bodyfile="ql/experimental/credit/onefactoraffinesurvival.hpp" bodystart="108" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_one_factor_affine_survival_structure_1a98a76802b8f55e12e620d70f85208f2c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::OneFactorAffineSurvivalStructure::hazardRate</definition>
        <argsstring>(Time t, bool extrapolate=false) const</argsstring>
        <name>hazardRate</name>
        <qualifiedname>QuantLib::OneFactorAffineSurvivalStructure::hazardRate</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/onefactoraffinesurvival.hpp" line="125" column="14" bodyfile="ql/experimental/credit/onefactoraffinesurvival.hpp" bodystart="125" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_one_factor_affine_survival_structure_1a34185683a296917b42ed3e6b6f158758" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::DefaultProbabilityTermStructure::hazardRate</definition>
        <argsstring>(const Date &amp;d, bool extrapolate=false) const</argsstring>
        <name>hazardRate</name>
        <qualifiedname>QuantLib::OneFactorAffineSurvivalStructure::hazardRate</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/onefactoraffinesurvival.hpp" line="124" column="9" bodyfile="ql/termstructures/defaulttermstructure.hpp" bodystart="214" bodyend="217"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_one_factor_affine_survival_structure_1a06bd5a67457225170c4fd15db64c08e0" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::OneFactorAffineSurvivalStructure::OneFactorAffineSurvivalStructure</definition>
        <argsstring>(ext::shared_ptr&lt; OneFactorAffineModel &gt; model, const DayCounter &amp;dayCounter=DayCounter(), const std::vector&lt; Handle&lt; Quote &gt; &gt; &amp;jumps=std::vector&lt; Handle&lt; Quote &gt; &gt;(), const std::vector&lt; Date &gt; &amp;jumpDates=std::vector&lt; Date &gt;())</argsstring>
        <name>OneFactorAffineSurvivalStructure</name>
        <qualifiedname>QuantLib::OneFactorAffineSurvivalStructure::OneFactorAffineSurvivalStructure</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_one_factor_affine_model" kindref="compound">OneFactorAffineModel</ref> &gt;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
          <defval><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref>()</defval>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &gt; &amp;</type>
          <declname>jumps</declname>
          <defval>std::vector&lt; <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &gt;()</defval>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &gt; &amp;</type>
          <declname>jumpDates</declname>
          <defval>std::vector&lt; <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/onefactoraffinesurvival.hpp" line="45" column="16" bodyfile="ql/experimental/credit/onefactoraffinesurvival.hpp" bodystart="45" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_one_factor_affine_survival_structure_1a5a168c841fbc440a39a480f8bd3b76b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::OneFactorAffineSurvivalStructure::OneFactorAffineSurvivalStructure</definition>
        <argsstring>(ext::shared_ptr&lt; OneFactorAffineModel &gt; model, const Date &amp;referenceDate, const Calendar &amp;cal=Calendar(), const DayCounter &amp;dayCounter=DayCounter(), const std::vector&lt; Handle&lt; Quote &gt; &gt; &amp;jumps=std::vector&lt; Handle&lt; Quote &gt; &gt;(), const std::vector&lt; Date &gt; &amp;jumpDates=std::vector&lt; Date &gt;())</argsstring>
        <name>OneFactorAffineSurvivalStructure</name>
        <qualifiedname>QuantLib::OneFactorAffineSurvivalStructure::OneFactorAffineSurvivalStructure</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_one_factor_affine_model" kindref="compound">OneFactorAffineModel</ref> &gt;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>referenceDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>cal</declname>
          <defval><ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
          <defval><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref>()</defval>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &gt; &amp;</type>
          <declname>jumps</declname>
          <defval>std::vector&lt; <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &gt;()</defval>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &gt; &amp;</type>
          <declname>jumpDates</declname>
          <defval>std::vector&lt; <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/onefactoraffinesurvival.hpp" line="52" column="7" bodyfile="ql/experimental/credit/onefactoraffinesurvival.hpp" bodystart="52" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_one_factor_affine_survival_structure_1a3168451cabb42a90bafd054ac4700221" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::OneFactorAffineSurvivalStructure::OneFactorAffineSurvivalStructure</definition>
        <argsstring>(ext::shared_ptr&lt; OneFactorAffineModel &gt; model, Natural settlementDays, const Calendar &amp;calendar, const DayCounter &amp;dayCounter=DayCounter(), const std::vector&lt; Handle&lt; Quote &gt; &gt; &amp;jumps=std::vector&lt; Handle&lt; Quote &gt; &gt;(), const std::vector&lt; Date &gt; &amp;jumpDates=std::vector&lt; Date &gt;())</argsstring>
        <name>OneFactorAffineSurvivalStructure</name>
        <qualifiedname>QuantLib::OneFactorAffineSurvivalStructure::OneFactorAffineSurvivalStructure</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_one_factor_affine_model" kindref="compound">OneFactorAffineModel</ref> &gt;</type>
          <declname>model</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>settlementDays</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>calendar</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
          <defval><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref>()</defval>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &gt; &amp;</type>
          <declname>jumps</declname>
          <defval>std::vector&lt; <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &gt;()</defval>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &gt; &amp;</type>
          <declname>jumpDates</declname>
          <defval>std::vector&lt; <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/onefactoraffinesurvival.hpp" line="62" column="7" bodyfile="ql/experimental/credit/onefactoraffinesurvival.hpp" bodystart="62" bodyend="70"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Survival probability term structure based on a one factor stochastic model of the default intensity. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>QuantLib::DefaultProbabilityTermStructure</label>
        <link refid="class_quant_lib_1_1_default_probability_term_structure"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::Extrapolator</label>
        <link refid="class_quant_lib_1_1_extrapolator"/>
      </node>
      <node id="2">
        <label>QuantLib::HazardRateStructure</label>
        <link refid="class_quant_lib_1_1_hazard_rate_structure"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::InterpolatedAffineHazardRateCurve&lt; Interpolator &gt;</label>
        <link refid="class_quant_lib_1_1_interpolated_affine_hazard_rate_curve"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="1">
        <label>QuantLib::OneFactorAffineSurvivalStructure</label>
        <link refid="class_quant_lib_1_1_one_factor_affine_survival_structure"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::TermStructure</label>
        <link refid="class_quant_lib_1_1_term_structure"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8">
        <label>QuantLib::Calendar</label>
        <link refid="class_quant_lib_1_1_calendar"/>
      </node>
      <node id="3">
        <label>QuantLib::DefaultProbabilityTermStructure</label>
        <link refid="class_quant_lib_1_1_default_probability_term_structure"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::Extrapolator</label>
        <link refid="class_quant_lib_1_1_extrapolator"/>
      </node>
      <node id="2">
        <label>QuantLib::HazardRateStructure</label>
        <link refid="class_quant_lib_1_1_hazard_rate_structure"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="1">
        <label>QuantLib::OneFactorAffineSurvivalStructure</label>
        <link refid="class_quant_lib_1_1_one_factor_affine_survival_structure"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::TermStructure</label>
        <link refid="class_quant_lib_1_1_term_structure"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>calendar_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/credit/onefactoraffinesurvival.hpp" line="41" column="5" bodyfile="ql/experimental/credit/onefactoraffinesurvival.hpp" bodystart="42" bodyend="146"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_extrapolator_1ab3936a9b5b5c163d3e511437c16c1d9e" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>allowsExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac4ea5cbce495c9a47a44eeaedf7a9d45" prot="public" virt="virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>calendar</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a0a09e3fa8cdfbc9aa9685da0c35ccb90" prot="protected" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>calendar_</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1aa7297742ffbeeb0c7611f90a0f7d15bf" prot="protected" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>checkRange</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a4d246bcb13b7518a75088bf7cf01ea75" prot="protected" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>checkRange</name></member>
      <member refid="class_quant_lib_1_1_one_factor_affine_survival_structure_1ad9c3edf4f4cfec799108a4f954c22d2c" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>conditionalSurvivalProbability</name></member>
      <member refid="class_quant_lib_1_1_one_factor_affine_survival_structure_1aa75eeef3e35b618a4275b5e6f6b08545" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>conditionalSurvivalProbability</name></member>
      <member refid="class_quant_lib_1_1_one_factor_affine_survival_structure_1a03403ece54ee92f094c94aadc3d860e8" prot="protected" virt="virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>conditionalSurvivalProbabilityImpl</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac03e725e4e0685b209caa626b00924ca" prot="public" virt="virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>dayCounter</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_default_probability_term_structure_1a2a64c69647782ccb93fcae8fd01f4f09" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>defaultDensity</name></member>
      <member refid="class_quant_lib_1_1_default_probability_term_structure_1a485232da71dad0064bd935fa4a3e194a" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>defaultDensity</name></member>
      <member refid="class_quant_lib_1_1_one_factor_affine_survival_structure_1a87487077e9a57d99e4645ecc7b305853" prot="protected" virt="virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>defaultDensityImpl</name></member>
      <member refid="class_quant_lib_1_1_default_probability_term_structure_1ad227f187cd055b79ce2f762267dba742" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>defaultProbability</name></member>
      <member refid="class_quant_lib_1_1_default_probability_term_structure_1a52bd07aee5c775b9b656c1e2450f7af2" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>defaultProbability</name></member>
      <member refid="class_quant_lib_1_1_default_probability_term_structure_1abd9c7a3fcf2783e143128a3213de7e7e" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>defaultProbability</name></member>
      <member refid="class_quant_lib_1_1_default_probability_term_structure_1a1aaa2eb79380d798d312569cc215b81c" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>defaultProbability</name></member>
      <member refid="class_quant_lib_1_1_default_probability_term_structure_1a5772031aaac117d4316b13a64dd36e1c" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>DefaultProbabilityTermStructure</name></member>
      <member refid="class_quant_lib_1_1_default_probability_term_structure_1a35659d03c3c241136ccd3704beac62e3" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>DefaultProbabilityTermStructure</name></member>
      <member refid="class_quant_lib_1_1_default_probability_term_structure_1a100590357dde200e0714e494675ca6db" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>DefaultProbabilityTermStructure</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1a6af69387d5cae0fe84d6a0c858406218" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>disableExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1a5f7b5650a44d6c63095bc739470c8bfb" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>enableExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1af1c3adaccdfaf07d3d07edaa234444f7" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>Extrapolator</name></member>
      <member refid="class_quant_lib_1_1_one_factor_affine_survival_structure_1a98a76802b8f55e12e620d70f85208f2c" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>hazardRate</name></member>
      <member refid="class_quant_lib_1_1_one_factor_affine_survival_structure_1a34185683a296917b42ed3e6b6f158758" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>hazardRate</name></member>
      <member refid="class_quant_lib_1_1_one_factor_affine_survival_structure_1a8adfccd57fb151250cfb66efeb4e1b67" prot="protected" virt="virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>hazardRateImpl</name></member>
      <member refid="class_quant_lib_1_1_hazard_rate_structure_1a3ee963c0938cd05e4c0d2615cd394f78" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>HazardRateStructure</name></member>
      <member refid="class_quant_lib_1_1_hazard_rate_structure_1a17a42097e854b0e5c29ac460bbafd2d8" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>HazardRateStructure</name></member>
      <member refid="class_quant_lib_1_1_hazard_rate_structure_1a3893bf347983f36b63fc38ca32a21442" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>HazardRateStructure</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_default_probability_term_structure_1ae52f8ae2d71c17d3bab2899e21550be5" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>jumpDates</name></member>
      <member refid="class_quant_lib_1_1_default_probability_term_structure_1a3fd8ffc1dcea0a75c9f21eecb805a999" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>jumpTimes</name></member>
      <member refid="class_quant_lib_1_1_one_factor_affine_survival_structure_1ae6c5897a3d3d5d549bea17ea10ddd02a" prot="public" virt="virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>maxDate</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a2f820c32e198e1046d97ca3dd9a807c5" prot="public" virt="virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>maxTime</name></member>
      <member refid="class_quant_lib_1_1_one_factor_affine_survival_structure_1aa2d14bc2a5d909bf1dddeebf0c012e36" prot="protected" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>model_</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a8319e5c2c37b09a825d61210c9cb8e2a" prot="protected" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>moving_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_one_factor_affine_survival_structure_1a06bd5a67457225170c4fd15db64c08e0" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>OneFactorAffineSurvivalStructure</name></member>
      <member refid="class_quant_lib_1_1_one_factor_affine_survival_structure_1a5a168c841fbc440a39a480f8bd3b76b7" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>OneFactorAffineSurvivalStructure</name></member>
      <member refid="class_quant_lib_1_1_one_factor_affine_survival_structure_1a3168451cabb42a90bafd054ac4700221" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>OneFactorAffineSurvivalStructure</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::QuantLib::Observable::"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1accbf3d4af41db0333d456eb5616c4e1e" prot="public" virt="virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>referenceDate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1abeb79eefda70a9414f206ca9e70ced0f" prot="public" virt="virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>settlementDays</name></member>
      <member refid="class_quant_lib_1_1_default_probability_term_structure_1aaf62e7c72afb270890984b4e129e29fa" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>survivalProbability</name></member>
      <member refid="class_quant_lib_1_1_default_probability_term_structure_1a9d2c4949bb2b66ebfef34e986cc50f4f" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>survivalProbability</name></member>
      <member refid="class_quant_lib_1_1_one_factor_affine_survival_structure_1abdf10218905ef52a11b0737fb952e0d4" prot="protected" virt="virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>survivalProbabilityImpl</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac8365997e6d41134b4e0998fe6b4e949" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>TermStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a95764a49e0368b653eadbe619d9ef334" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>TermStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1aab73d2acafdc8fbdf9336e7084bd88a1" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>TermStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac8da61eb0f06ae07a35e8e4bbe7146b0" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>timeFromReference</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_default_probability_term_structure_1ad5e8ad7630b7b90f32b3f56659c82e23" prot="public" virt="virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a2fcf1c78e57786ad5c123f52dbf619e8" prot="protected" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>updated_</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1af0ca0156436ffbce159183198eb27e2e" prot="public" virt="virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>~Extrapolator</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ad202ddcc14fc4a6c16686d6164d7b36c" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorAffineSurvivalStructure</scope><name>~TermStructure</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

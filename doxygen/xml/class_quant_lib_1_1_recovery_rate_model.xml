<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_recovery_rate_model" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::RecoveryRateModel</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_observable" prot="public" virt="virtual">QuantLib::Observable</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_constant_recovery_model" prot="public" virt="non-virtual">QuantLib::ConstantRecoveryModel</derivedcompoundref>
    <includes refid="recoveryratemodel_8hpp" local="no">recoveryratemodel.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_recovery_rate_model_1aa3997899ded9e83da4c6820adc86bb50" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::RecoveryRateModel::recoveryValue</definition>
        <argsstring>(const Date &amp;defaultDate, const DefaultProbKey &amp;defaultKey=DefaultProbKey()) const</argsstring>
        <name>recoveryValue</name>
        <qualifiedname>QuantLib::RecoveryRateModel::recoveryValue</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>defaultDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_default_prob_key" kindref="compound">DefaultProbKey</ref> &amp;</type>
          <declname>defaultKey</declname>
          <defval><ref refid="class_quant_lib_1_1_default_prob_key" kindref="compound">DefaultProbKey</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the expected recovery rate at a future time conditional on some default event type and seniority. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/recoveryratemodel.hpp" line="38" column="22" bodyfile="ql/experimental/credit/recoveryratemodel.hpp" bodystart="38" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_recovery_rate_model_1a6848563c275b880210eb8d61752941b4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool QuantLib::RecoveryRateModel::appliesToSeniority</definition>
        <argsstring>(Seniority) const =0</argsstring>
        <name>appliesToSeniority</name>
        <qualifiedname>QuantLib::RecoveryRateModel::appliesToSeniority</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_constant_recovery_model_1a24136ad70555a4b228fa382d9ae1c738">appliesToSeniority</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1a197bfb2321381d9a5d8c94b56f6ef6cf" kindref="member">Seniority</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if the model will return recovery rates for the requested seniority. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/recoveryratemodel.hpp" line="46" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_recovery_rate_model_1a7e60142b6e6e01103a4fa1b0d6720f38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::RecoveryRateModel::~RecoveryRateModel</definition>
        <argsstring>() override=default</argsstring>
        <name>~RecoveryRateModel</name>
        <qualifiedname>QuantLib::RecoveryRateModel::~RecoveryRateModel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/recoveryratemodel.hpp" line="47" column="9"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_recovery_rate_model_1acbf46fd6332006ffa6878951573ad1a5" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::RecoveryRateModel::recoveryValueImpl</definition>
        <argsstring>(const Date &amp;, const DefaultProbKey &amp;defaultKey) const =0</argsstring>
        <name>recoveryValueImpl</name>
        <qualifiedname>QuantLib::RecoveryRateModel::recoveryValueImpl</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_constant_recovery_model_1ac6c56f99ef42378a4d8aaa1dfe086732">recoveryValueImpl</reimplementedby>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_default_prob_key" kindref="compound">DefaultProbKey</ref> &amp;</type>
          <declname>defaultKey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns <ref refid="class_quant_lib_1_1_null" kindref="compound">Null&lt;Real&gt;</ref> if unable to produce a recovery for the requested seniority. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/recoveryratemodel.hpp" line="53" column="22"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Models of the recovery rate provide future values of a recovery rate in the event of a default. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>QuantLib::ConstantRecoveryModel</label>
        <link refid="class_quant_lib_1_1_constant_recovery_model"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="1">
        <label>QuantLib::RecoveryRateModel</label>
        <link refid="class_quant_lib_1_1_recovery_rate_model"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="1">
        <label>QuantLib::RecoveryRateModel</label>
        <link refid="class_quant_lib_1_1_recovery_rate_model"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/credit/recoveryratemodel.hpp" line="33" column="5" bodyfile="ql/experimental/credit/recoveryratemodel.hpp" bodystart="33" bodyend="56"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_recovery_rate_model_1a6848563c275b880210eb8d61752941b4" prot="public" virt="pure-virtual"><scope>QuantLib::RecoveryRateModel</scope><name>appliesToSeniority</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::RecoveryRateModel</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::RecoveryRateModel</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::RecoveryRateModel</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::RecoveryRateModel</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual"><scope>QuantLib::RecoveryRateModel</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual"><scope>QuantLib::RecoveryRateModel</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_recovery_rate_model_1aa3997899ded9e83da4c6820adc86bb50" prot="public" virt="virtual"><scope>QuantLib::RecoveryRateModel</scope><name>recoveryValue</name></member>
      <member refid="class_quant_lib_1_1_recovery_rate_model_1acbf46fd6332006ffa6878951573ad1a5" prot="protected" virt="pure-virtual"><scope>QuantLib::RecoveryRateModel</scope><name>recoveryValueImpl</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::RecoveryRateModel</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_recovery_rate_model_1a7e60142b6e6e01103a4fa1b0d6720f38" prot="public" virt="non-virtual"><scope>QuantLib::RecoveryRateModel</scope><name>~RecoveryRateModel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

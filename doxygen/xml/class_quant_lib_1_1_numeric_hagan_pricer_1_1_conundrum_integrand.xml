<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::NumericHaganPricer::ConundrumIntegrand</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_numeric_hagan_pricer_1_1_function" prot="public" virt="non-virtual">QuantLib::NumericHaganPricer::Function</basecompoundref>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1aa48057b0ec06d9c76590cec43f86e645" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class NumericHaganPricer</definition>
        <argsstring></argsstring>
        <name>NumericHaganPricer</name>
        <qualifiedname>QuantLib::NumericHaganPricer::ConundrumIntegrand::NumericHaganPricer</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_numeric_hagan_pricer" kindref="compound">NumericHaganPricer</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/conundrumpricer.hpp" line="270" column="26" bodyfile="ql/cashflows/conundrumpricer.hpp" bodystart="270" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1ab72709337f0b5729437f2e0e7aa20316" prot="protected" static="no" mutable="no">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_vanilla_option_pricer" kindref="compound">VanillaOptionPricer</ref> &gt;</type>
        <definition>const ext::shared_ptr&lt;VanillaOptionPricer&gt; QuantLib::NumericHaganPricer::ConundrumIntegrand::vanillaOptionPricer_</definition>
        <argsstring></argsstring>
        <name>vanillaOptionPricer_</name>
        <qualifiedname>QuantLib::NumericHaganPricer::ConundrumIntegrand::vanillaOptionPricer_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/conundrumpricer.hpp" line="293" column="35" bodyfile="ql/cashflows/conundrumpricer.hpp" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1ae9ba401bc94b7ef8cbbfd155b590891d" prot="protected" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::NumericHaganPricer::ConundrumIntegrand::forwardValue_</definition>
        <argsstring></argsstring>
        <name>forwardValue_</name>
        <qualifiedname>QuantLib::NumericHaganPricer::ConundrumIntegrand::forwardValue_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/conundrumpricer.hpp" line="294" column="24" bodyfile="ql/cashflows/conundrumpricer.hpp" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1a399db9e31d8cae626e79ec52450df2e4" prot="protected" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::NumericHaganPricer::ConundrumIntegrand::annuity_</definition>
        <argsstring></argsstring>
        <name>annuity_</name>
        <qualifiedname>QuantLib::NumericHaganPricer::ConundrumIntegrand::annuity_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/conundrumpricer.hpp" line="294" column="38" bodyfile="ql/cashflows/conundrumpricer.hpp" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1a76f4c3669bc9b4980acb8c3d46652ef7" prot="protected" static="no" mutable="no">
        <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>const Date QuantLib::NumericHaganPricer::ConundrumIntegrand::fixingDate_</definition>
        <argsstring></argsstring>
        <name>fixingDate_</name>
        <qualifiedname>QuantLib::NumericHaganPricer::ConundrumIntegrand::fixingDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/conundrumpricer.hpp" line="295" column="24" bodyfile="ql/cashflows/conundrumpricer.hpp" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1a3f0a1fca386fe7905de23900a0409b70" prot="protected" static="no" mutable="no">
        <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>const Date QuantLib::NumericHaganPricer::ConundrumIntegrand::paymentDate_</definition>
        <argsstring></argsstring>
        <name>paymentDate_</name>
        <qualifiedname>QuantLib::NumericHaganPricer::ConundrumIntegrand::paymentDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/conundrumpricer.hpp" line="295" column="36" bodyfile="ql/cashflows/conundrumpricer.hpp" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1af18969b0af5c122f88e6392ac36d48db" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::NumericHaganPricer::ConundrumIntegrand::strike_</definition>
        <argsstring></argsstring>
        <name>strike_</name>
        <qualifiedname>QuantLib::NumericHaganPricer::ConundrumIntegrand::strike_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/conundrumpricer.hpp" line="296" column="18" bodyfile="ql/cashflows/conundrumpricer.hpp" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1a6656440cdd7d3eb32c82dd945d65e58d" prot="protected" static="no" mutable="no">
        <type>const Option::Type</type>
        <definition>const Option::Type QuantLib::NumericHaganPricer::ConundrumIntegrand::optionType_</definition>
        <argsstring></argsstring>
        <name>optionType_</name>
        <qualifiedname>QuantLib::NumericHaganPricer::ConundrumIntegrand::optionType_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/conundrumpricer.hpp" line="297" column="32" bodyfile="ql/cashflows/conundrumpricer.hpp" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1a269f3c5cb2523b3c67753b9fec70fcb0" prot="protected" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_g_function" kindref="compound">GFunction</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;GFunction&gt; QuantLib::NumericHaganPricer::ConundrumIntegrand::gFunction_</definition>
        <argsstring></argsstring>
        <name>gFunction_</name>
        <qualifiedname>QuantLib::NumericHaganPricer::ConundrumIntegrand::gFunction_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/conundrumpricer.hpp" line="298" column="29" bodyfile="ql/cashflows/conundrumpricer.hpp" bodystart="298" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1ae2df313e4a7392399baba89387def2de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::NumericHaganPricer::ConundrumIntegrand::ConundrumIntegrand</definition>
        <argsstring>(ext::shared_ptr&lt; VanillaOptionPricer &gt; o, const ext::shared_ptr&lt; YieldTermStructure &gt; &amp;rateCurve, ext::shared_ptr&lt; GFunction &gt; gFunction, Date fixingDate, Date paymentDate, Real annuity, Real forwardValue, Real strike, Option::Type optionType)</argsstring>
        <name>ConundrumIntegrand</name>
        <qualifiedname>QuantLib::NumericHaganPricer::ConundrumIntegrand::ConundrumIntegrand</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_vanilla_option_pricer" kindref="compound">VanillaOptionPricer</ref> &gt;</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>rateCurve</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_g_function" kindref="compound">GFunction</ref> &gt;</type>
          <declname>gFunction</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
          <declname>fixingDate</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
          <declname>paymentDate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>annuity</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>forwardValue</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type>Option::Type</type>
          <declname>optionType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/conundrumpricer.hpp" line="272" column="13" bodyfile="ql/cashflows/conundrumpricer.cpp" bodystart="442" bodyend="454"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1ad49120efbd077666e54d919f656a5dc4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::NumericHaganPricer::ConundrumIntegrand::operator()</definition>
        <argsstring>(Real x) const override</argsstring>
        <name>operator()</name>
        <qualifiedname>QuantLib::NumericHaganPricer::ConundrumIntegrand::operator()</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_numeric_hagan_pricer_1_1_function_1ad1340a2545b62ff00e52ece578e58da0">operator()</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/conundrumpricer.hpp" line="281" column="18" bodyfile="ql/cashflows/conundrumpricer.cpp" bodystart="492" bodyend="495"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1ae530b659522228ac7730a238db5ca43f" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::NumericHaganPricer::ConundrumIntegrand::functionF</definition>
        <argsstring>(Real x) const</argsstring>
        <name>functionF</name>
        <qualifiedname>QuantLib::NumericHaganPricer::ConundrumIntegrand::functionF</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/conundrumpricer.hpp" line="284" column="18" bodyfile="ql/cashflows/conundrumpricer.cpp" bodystart="472" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1a5282afdcc9f943009e5f8677bbb51459" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::NumericHaganPricer::ConundrumIntegrand::firstDerivativeOfF</definition>
        <argsstring>(Real x) const</argsstring>
        <name>firstDerivativeOfF</name>
        <qualifiedname>QuantLib::NumericHaganPricer::ConundrumIntegrand::firstDerivativeOfF</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/conundrumpricer.hpp" line="285" column="18" bodyfile="ql/cashflows/conundrumpricer.cpp" bodystart="478" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1ac130258257f907301cc514bd12f9977f" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::NumericHaganPricer::ConundrumIntegrand::secondDerivativeOfF</definition>
        <argsstring>(Real x) const</argsstring>
        <name>secondDerivativeOfF</name>
        <qualifiedname>QuantLib::NumericHaganPricer::ConundrumIntegrand::secondDerivativeOfF</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/conundrumpricer.hpp" line="286" column="18" bodyfile="ql/cashflows/conundrumpricer.cpp" bodystart="485" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1a1db1ad1035b509fd5d1edb227774b766" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::NumericHaganPricer::ConundrumIntegrand::strike</definition>
        <argsstring>() const</argsstring>
        <name>strike</name>
        <qualifiedname>QuantLib::NumericHaganPricer::ConundrumIntegrand::strike</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/conundrumpricer.hpp" line="288" column="18" bodyfile="ql/cashflows/conundrumpricer.cpp" bodystart="460" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1a31dd2e86b21998ca51deca6ccbb1fc50" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::NumericHaganPricer::ConundrumIntegrand::annuity</definition>
        <argsstring>() const</argsstring>
        <name>annuity</name>
        <qualifiedname>QuantLib::NumericHaganPricer::ConundrumIntegrand::annuity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/conundrumpricer.hpp" line="289" column="18" bodyfile="ql/cashflows/conundrumpricer.cpp" bodystart="464" bodyend="466"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1a60b2b7dd279594070643c49a696db689" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::NumericHaganPricer::ConundrumIntegrand::fixingDate</definition>
        <argsstring>() const</argsstring>
        <name>fixingDate</name>
        <qualifiedname>QuantLib::NumericHaganPricer::ConundrumIntegrand::fixingDate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/conundrumpricer.hpp" line="290" column="18" bodyfile="ql/cashflows/conundrumpricer.cpp" bodystart="468" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1a1c75cd63f047187157cfb673d160866a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::NumericHaganPricer::ConundrumIntegrand::setStrike</definition>
        <argsstring>(Real strike)</argsstring>
        <name>setStrike</name>
        <qualifiedname>QuantLib::NumericHaganPricer::ConundrumIntegrand::setStrike</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>strike</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/conundrumpricer.hpp" line="291" column="18" bodyfile="ql/cashflows/conundrumpricer.cpp" bodystart="456" bodyend="458"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::NumericHaganPricer::ConundrumIntegrand</label>
        <link refid="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::NumericHaganPricer::Function</label>
        <link refid="class_quant_lib_1_1_numeric_hagan_pricer_1_1_function"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="1">
        <label>QuantLib::NumericHaganPricer::ConundrumIntegrand</label>
        <link refid="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>fixingDate_</edgelabel>
          <edgelabel>paymentDate_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::NumericHaganPricer::Function</label>
        <link refid="class_quant_lib_1_1_numeric_hagan_pricer_1_1_function"/>
      </node>
    </collaborationgraph>
    <location file="ql/cashflows/conundrumpricer.hpp" line="269" column="9" bodyfile="ql/cashflows/conundrumpricer.hpp" bodystart="269" bodyend="299"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1a31dd2e86b21998ca51deca6ccbb1fc50" prot="protected" virt="non-virtual"><scope>QuantLib::NumericHaganPricer::ConundrumIntegrand</scope><name>annuity</name></member>
      <member refid="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1a399db9e31d8cae626e79ec52450df2e4" prot="protected" virt="non-virtual"><scope>QuantLib::NumericHaganPricer::ConundrumIntegrand</scope><name>annuity_</name></member>
      <member refid="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1ae2df313e4a7392399baba89387def2de" prot="public" virt="non-virtual"><scope>QuantLib::NumericHaganPricer::ConundrumIntegrand</scope><name>ConundrumIntegrand</name></member>
      <member refid="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1a5282afdcc9f943009e5f8677bbb51459" prot="protected" virt="non-virtual"><scope>QuantLib::NumericHaganPricer::ConundrumIntegrand</scope><name>firstDerivativeOfF</name></member>
      <member refid="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1a60b2b7dd279594070643c49a696db689" prot="protected" virt="non-virtual"><scope>QuantLib::NumericHaganPricer::ConundrumIntegrand</scope><name>fixingDate</name></member>
      <member refid="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1a76f4c3669bc9b4980acb8c3d46652ef7" prot="protected" virt="non-virtual"><scope>QuantLib::NumericHaganPricer::ConundrumIntegrand</scope><name>fixingDate_</name></member>
      <member refid="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1ae9ba401bc94b7ef8cbbfd155b590891d" prot="protected" virt="non-virtual"><scope>QuantLib::NumericHaganPricer::ConundrumIntegrand</scope><name>forwardValue_</name></member>
      <member refid="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1ae530b659522228ac7730a238db5ca43f" prot="protected" virt="non-virtual"><scope>QuantLib::NumericHaganPricer::ConundrumIntegrand</scope><name>functionF</name></member>
      <member refid="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1a269f3c5cb2523b3c67753b9fec70fcb0" prot="protected" virt="non-virtual"><scope>QuantLib::NumericHaganPricer::ConundrumIntegrand</scope><name>gFunction_</name></member>
      <member refid="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1aa48057b0ec06d9c76590cec43f86e645" prot="private" virt="non-virtual"><scope>QuantLib::NumericHaganPricer::ConundrumIntegrand</scope><name>NumericHaganPricer</name></member>
      <member refid="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1ad49120efbd077666e54d919f656a5dc4" prot="public" virt="virtual"><scope>QuantLib::NumericHaganPricer::ConundrumIntegrand</scope><name>operator()</name></member>
      <member refid="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1a6656440cdd7d3eb32c82dd945d65e58d" prot="protected" virt="non-virtual"><scope>QuantLib::NumericHaganPricer::ConundrumIntegrand</scope><name>optionType_</name></member>
      <member refid="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1a3f0a1fca386fe7905de23900a0409b70" prot="protected" virt="non-virtual"><scope>QuantLib::NumericHaganPricer::ConundrumIntegrand</scope><name>paymentDate_</name></member>
      <member refid="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1ac130258257f907301cc514bd12f9977f" prot="protected" virt="non-virtual"><scope>QuantLib::NumericHaganPricer::ConundrumIntegrand</scope><name>secondDerivativeOfF</name></member>
      <member refid="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1a1c75cd63f047187157cfb673d160866a" prot="protected" virt="non-virtual"><scope>QuantLib::NumericHaganPricer::ConundrumIntegrand</scope><name>setStrike</name></member>
      <member refid="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1a1db1ad1035b509fd5d1edb227774b766" prot="protected" virt="non-virtual"><scope>QuantLib::NumericHaganPricer::ConundrumIntegrand</scope><name>strike</name></member>
      <member refid="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1af18969b0af5c122f88e6392ac36d48db" prot="protected" virt="non-virtual"><scope>QuantLib::NumericHaganPricer::ConundrumIntegrand</scope><name>strike_</name></member>
      <member refid="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1ab72709337f0b5729437f2e0e7aa20316" prot="protected" virt="non-virtual"><scope>QuantLib::NumericHaganPricer::ConundrumIntegrand</scope><name>vanillaOptionPricer_</name></member>
      <member refid="class_quant_lib_1_1_numeric_hagan_pricer_1_1_function_1adaec69435ae5bc9698f7953d8cd5324f" prot="public" virt="virtual"><scope>QuantLib::NumericHaganPricer::ConundrumIntegrand</scope><name>~Function</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_analytic_hagan_pricer" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::AnalyticHaganPricer</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_hagan_pricer" prot="public" virt="non-virtual">QuantLib::HaganPricer</basecompoundref>
    <includes refid="conundrumpricer_8hpp" local="no">conundrumpricer.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_hagan_pricer_1aeb43a4ec7c49e5399b1fa1ad75c189da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::AnalyticHaganPricer::AnalyticHaganPricer</definition>
        <argsstring>(const Handle&lt; SwaptionVolatilityStructure &gt; &amp;swaptionVol, GFunctionFactory::YieldCurveModel modelOfYieldCurve, const Handle&lt; Quote &gt; &amp;meanReversion)</argsstring>
        <name>AnalyticHaganPricer</name>
        <qualifiedname>QuantLib::AnalyticHaganPricer::AnalyticHaganPricer</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_swaption_volatility_structure" kindref="compound">SwaptionVolatilityStructure</ref> &gt; &amp;</type>
          <declname>swaptionVol</declname>
        </param>
        <param>
          <type>GFunctionFactory::YieldCurveModel</type>
          <declname>modelOfYieldCurve</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &amp;</type>
          <declname>meanReversion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/conundrumpricer.hpp" line="319" column="9" bodyfile="ql/cashflows/conundrumpricer.cpp" bodystart="503" bodyend="508"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_hagan_pricer_1aaab90f253d53048c4a247169a2afa0a7" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticHaganPricer::optionletPrice</definition>
        <argsstring>(Option::Type optionType, Real strike) const override</argsstring>
        <name>optionletPrice</name>
        <qualifiedname>QuantLib::AnalyticHaganPricer::optionletPrice</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_hagan_pricer_1a7bec565a0e862a620d413908cba59e61">optionletPrice</reimplements>
        <param>
          <type>Option::Type</type>
          <declname>optionType</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>strike</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/conundrumpricer.hpp" line="324" column="14" bodyfile="ql/cashflows/conundrumpricer.cpp" bodystart="511" bodyend="552"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_hagan_pricer_1ae82c6402d7ed287309ed5590085dad37" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticHaganPricer::swapletPrice</definition>
        <argsstring>() const override</argsstring>
        <name>swapletPrice</name>
        <qualifiedname>QuantLib::AnalyticHaganPricer::swapletPrice</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_hagan_pricer_1a23c1dcf84cbc7cd88b76215d8ca1e83e">swapletPrice</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/conundrumpricer.hpp" line="325" column="14" bodyfile="ql/cashflows/conundrumpricer.cpp" bodystart="555" bodyend="580"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>CMS-coupon pricer. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::AnalyticHaganPricer</label>
        <link refid="class_quant_lib_1_1_analytic_hagan_pricer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::CmsCouponPricer</label>
        <link refid="class_quant_lib_1_1_cms_coupon_pricer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::FloatingRateCouponPricer</label>
        <link refid="class_quant_lib_1_1_floating_rate_coupon_pricer"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::HaganPricer</label>
        <link refid="class_quant_lib_1_1_hagan_pricer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::MeanRevertingPricer</label>
        <link refid="class_quant_lib_1_1_mean_reverting_pricer"/>
      </node>
      <node id="6">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::AnalyticHaganPricer</label>
        <link refid="class_quant_lib_1_1_analytic_hagan_pricer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>QuantLib::CashFlow</label>
        <link refid="class_quant_lib_1_1_cash_flow"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::CmsCoupon</label>
        <link refid="class_quant_lib_1_1_cms_coupon"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::CmsCouponPricer</label>
        <link refid="class_quant_lib_1_1_cms_coupon_pricer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QuantLib::Coupon</label>
        <link refid="class_quant_lib_1_1_coupon"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>accrualEndDate_</edgelabel>
          <edgelabel>accrualStartDate_</edgelabel>
          <edgelabel>exCouponDate_</edgelabel>
          <edgelabel>paymentDate_</edgelabel>
          <edgelabel>refPeriodEnd_</edgelabel>
          <edgelabel>refPeriodStart_</edgelabel>
        </childnode>
      </node>
      <node id="14">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="15">
        <label>QuantLib::DayCounter</label>
        <link refid="class_quant_lib_1_1_day_counter"/>
      </node>
      <node id="12">
        <label>QuantLib::Event</label>
        <link refid="class_quant_lib_1_1_event"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QuantLib::FloatingRateCoupon</label>
        <link refid="class_quant_lib_1_1_floating_rate_coupon"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>dayCounter_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::FloatingRateCouponPricer</label>
        <link refid="class_quant_lib_1_1_floating_rate_coupon_pricer"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::HaganPricer</label>
        <link refid="class_quant_lib_1_1_hagan_pricer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>coupon_</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>fixingDate_</edgelabel>
          <edgelabel>paymentDate_</edgelabel>
        </childnode>
        <childnode refid="16" relation="usage">
          <edgelabel>meanReversion_</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>swapTenor_</edgelabel>
        </childnode>
      </node>
      <node id="16">
        <label>QuantLib::Handle&lt; QuantLib::Quote &gt;</label>
        <link refid="class_quant_lib_1_1_handle"/>
      </node>
      <node id="13">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::MeanRevertingPricer</label>
        <link refid="class_quant_lib_1_1_mean_reverting_pricer"/>
      </node>
      <node id="6">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="17">
        <label>QuantLib::Period</label>
        <link refid="class_quant_lib_1_1_period"/>
      </node>
    </collaborationgraph>
    <location file="ql/cashflows/conundrumpricer.hpp" line="317" column="5" bodyfile="ql/cashflows/conundrumpricer.hpp" bodystart="317" bodyend="326"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_analytic_hagan_pricer_1aeb43a4ec7c49e5399b1fa1ad75c189da" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>AnalyticHaganPricer</name></member>
      <member refid="class_quant_lib_1_1_hagan_pricer_1a74105a7b79a91e1822fdcb2274a7b035" prot="protected" virt="non-virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>annuity_</name></member>
      <member refid="class_quant_lib_1_1_hagan_pricer_1ab979dea0c4f774e5f180c898ebd25d27" prot="public" virt="virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>capletPrice</name></member>
      <member refid="class_quant_lib_1_1_hagan_pricer_1a288318fbfbe1d64a374d27e84569154e" prot="public" virt="virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>capletRate</name></member>
      <member refid="class_quant_lib_1_1_cms_coupon_pricer_1a073def84c0b155d3e73dd9744df9b4f6" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>CmsCouponPricer</name></member>
      <member refid="class_quant_lib_1_1_hagan_pricer_1a2c86caba4adefc7316d3406ededd7676" prot="protected" virt="non-virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>coupon_</name></member>
      <member refid="class_quant_lib_1_1_hagan_pricer_1a8d981391b98f1df5f11fb46bb758d323" prot="protected" virt="non-virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>cutoffForCaplet_</name></member>
      <member refid="class_quant_lib_1_1_hagan_pricer_1a2c4258ba367ef503b1f8444417205ba9" prot="protected" virt="non-virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>cutoffForFloorlet_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_hagan_pricer_1a76db990b95396406bbf97b4d5431a2eb" prot="protected" virt="non-virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>discount_</name></member>
      <member refid="class_quant_lib_1_1_hagan_pricer_1a18e41279298a4a3dd2a251ac4fdf1498" prot="protected" virt="non-virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>fixingDate_</name></member>
      <member refid="class_quant_lib_1_1_hagan_pricer_1a5d039bcea481f2244f05d81a151ee8fa" prot="public" virt="virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>floorletPrice</name></member>
      <member refid="class_quant_lib_1_1_hagan_pricer_1ae82ed430056a41ff6eb5452c1a506572" prot="public" virt="virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>floorletRate</name></member>
      <member refid="class_quant_lib_1_1_hagan_pricer_1a2b95693c334a5a6ed1d5fd81c46f192b" prot="protected" virt="non-virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>gearing_</name></member>
      <member refid="class_quant_lib_1_1_hagan_pricer_1a076b3e203b2e17ebb04454494c340cc5" prot="protected" virt="non-virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>gFunction_</name></member>
      <member refid="class_quant_lib_1_1_hagan_pricer_1a22c6a3b4ccc0d6ab995e65d6253c4ecd" prot="protected" virt="non-virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>HaganPricer</name></member>
      <member refid="class_quant_lib_1_1_hagan_pricer_1a738b144efbbd7933b5a2b7b0d9e8be69" prot="protected" virt="virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>initialize</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_hagan_pricer_1a53dffef1467ae40f8709f9b455c80647" prot="public" virt="virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>meanReversion</name></member>
      <member refid="class_quant_lib_1_1_hagan_pricer_1aae634a1a2f490a623c63da255f1d09ca" prot="protected" virt="non-virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>meanReversion_</name></member>
      <member refid="class_quant_lib_1_1_hagan_pricer_1a1894ea557ce85c0c635d44d5fcb5d6db" prot="protected" virt="non-virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>modelOfYieldCurve_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::FloatingRateCouponPricer::"><scope>QuantLib::AnalyticHaganPricer</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::FloatingRateCouponPricer::"><scope>QuantLib::AnalyticHaganPricer</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::FloatingRateCouponPricer::"><scope>QuantLib::AnalyticHaganPricer</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::AnalyticHaganPricer</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::FloatingRateCouponPricer::QuantLib::Observable::"><scope>QuantLib::AnalyticHaganPricer</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::AnalyticHaganPricer</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_analytic_hagan_pricer_1aaab90f253d53048c4a247169a2afa0a7" prot="protected" virt="virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>optionletPrice</name></member>
      <member refid="class_quant_lib_1_1_hagan_pricer_1acdbbcabc3ec155e8011da10248d42f39" prot="protected" virt="non-virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>paymentDate_</name></member>
      <member refid="class_quant_lib_1_1_hagan_pricer_1a54a1165a02ea9c6c7304854815b3af71" prot="protected" virt="non-virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>rateCurve_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_hagan_pricer_1ad316bae623c6211c177bc0575a77ad04" prot="public" virt="virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>setMeanReversion</name></member>
      <member refid="class_quant_lib_1_1_cms_coupon_pricer_1adb8e5447aa643a195013a2fc6a42352f" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>setSwaptionVolatility</name></member>
      <member refid="class_quant_lib_1_1_hagan_pricer_1acfd12878edba4d013b4d3237a2836fdf" prot="protected" virt="non-virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>spread_</name></member>
      <member refid="class_quant_lib_1_1_hagan_pricer_1af7bfe24cf6893d63a5c81c9bb8be90b7" prot="protected" virt="non-virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>spreadLegValue_</name></member>
      <member refid="class_quant_lib_1_1_analytic_hagan_pricer_1ae82c6402d7ed287309ed5590085dad37" prot="protected" virt="virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>swapletPrice</name></member>
      <member refid="class_quant_lib_1_1_hagan_pricer_1a936eae5b3db4b98524ec31ccfdd7d18a" prot="public" virt="virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>swapletRate</name></member>
      <member refid="class_quant_lib_1_1_hagan_pricer_1a170bfbd56bee89be9b61c2d8768ba23c" prot="protected" virt="non-virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>swapRateValue_</name></member>
      <member refid="class_quant_lib_1_1_hagan_pricer_1aa2fef42f64bb4726eec39835b2860434" prot="protected" virt="non-virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>swapTenor_</name></member>
      <member refid="class_quant_lib_1_1_cms_coupon_pricer_1ae6671ad67f0cfe96eabac6d022d7ecfe" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>swaptionVolatility</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_floating_rate_coupon_pricer_1a43d7327d65789c0feda11e80a589ad57" prot="public" virt="virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_hagan_pricer_1af2a462e7d394450f2fd5e8915688b2e4" prot="protected" virt="non-virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>vanillaOptionPricer_</name></member>
      <member refid="class_quant_lib_1_1_floating_rate_coupon_pricer_1af1a82cce3d2ea5e343e556ad4c40b5d5" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>~FloatingRateCouponPricer</name></member>
      <member refid="class_quant_lib_1_1_mean_reverting_pricer_1a584cc89fd734e18bf51ab065ac181906" prot="public" virt="virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>~MeanRevertingPricer</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::AnalyticHaganPricer</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

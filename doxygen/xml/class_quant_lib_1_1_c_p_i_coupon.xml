<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_c_p_i_coupon" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::CPICoupon</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_inflation_coupon" prot="public" virt="non-virtual">QuantLib::InflationCoupon</basecompoundref>
    <includes refid="cpicoupon_8hpp" local="no">cpicoupon.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Visitability</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_p_i_coupon_1a3a10bffd29a73bf8bef72d836b0d5743" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CPICoupon::baseCPI_</definition>
        <argsstring></argsstring>
        <name>baseCPI_</name>
        <qualifiedname>QuantLib::CPICoupon::baseCPI_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/cpicoupon.hpp" line="153" column="14" bodyfile="ql/cashflows/cpicoupon.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_p_i_coupon_1aa670376d396f93907469131ca4a23dfd" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CPICoupon::fixedRate_</definition>
        <argsstring></argsstring>
        <name>fixedRate_</name>
        <qualifiedname>QuantLib::CPICoupon::fixedRate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/cpicoupon.hpp" line="154" column="14" bodyfile="ql/cashflows/cpicoupon.hpp" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_p_i_coupon_1a67cfc9dca8b229f14dd98e1f6288fefa" prot="protected" static="no" mutable="no">
        <type><ref refid="struct_quant_lib_1_1_c_p_i_1adaf018681fd1d9478c984348c82c9013" kindref="member">CPI::InterpolationType</ref></type>
        <definition>CPI::InterpolationType QuantLib::CPICoupon::observationInterpolation_</definition>
        <argsstring></argsstring>
        <name>observationInterpolation_</name>
        <qualifiedname>QuantLib::CPICoupon::observationInterpolation_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/cpicoupon.hpp" line="155" column="32" bodyfile="ql/cashflows/cpicoupon.hpp" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_p_i_coupon_1aacce690b251014d1ce53671bd5ffac36" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::CPICoupon::baseDate_</definition>
        <argsstring></argsstring>
        <name>baseDate_</name>
        <qualifiedname>QuantLib::CPICoupon::baseDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/cpicoupon.hpp" line="156" column="14" bodyfile="ql/cashflows/cpicoupon.hpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_coupon_1ad2efbcdee81b6cb3c92972bcc0b4e3ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::CPICoupon::accept</definition>
        <argsstring>(AcyclicVisitor &amp;) override</argsstring>
        <name>accept</name>
        <qualifiedname>QuantLib::CPICoupon::accept</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_coupon_1a959c554719d9c895b72b4fa6efd1c9e8">accept</reimplements>
        <param>
          <type><ref refid="class_quant_lib_1_1_acyclic_visitor" kindref="compound">AcyclicVisitor</ref> &amp;</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/cpicoupon.hpp" line="150" column="14" bodyfile="ql/cashflows/cpicoupon.cpp" bodystart="93" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_coupon_1a93d9ab991c28c2ee49c7799eb88fb3cd" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QuantLib::CPICoupon::checkPricerImpl</definition>
        <argsstring>(const ext::shared_ptr&lt; InflationCouponPricer &gt; &amp;) const override</argsstring>
        <name>checkPricerImpl</name>
        <qualifiedname>QuantLib::CPICoupon::checkPricerImpl</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_inflation_coupon_1a9970f8f9bf0519fd74ca24f6c5500f58">checkPricerImpl</reimplements>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_inflation_coupon_pricer" kindref="compound">InflationCouponPricer</ref> &gt; &amp;</type>
        </param>
        <briefdescription>
<para>makes sure you were given the correct type of pricer </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/cpicoupon.hpp" line="158" column="14" bodyfile="ql/cashflows/cpicoupon.cpp" bodystart="131" bodyend="135"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Constructors</header>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_coupon_1a475191dfaec862d9cb5c3a199bdd872b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::CPICoupon::CPICoupon</definition>
        <argsstring>(Real baseCPI, const Date &amp;paymentDate, Real nominal, const Date &amp;startDate, const Date &amp;endDate, const ext::shared_ptr&lt; ZeroInflationIndex &gt; &amp;index, const Period &amp;observationLag, CPI::InterpolationType observationInterpolation, const DayCounter &amp;dayCounter, Real fixedRate, const Date &amp;refPeriodStart=Date(), const Date &amp;refPeriodEnd=Date(), const Date &amp;exCouponDate=Date())</argsstring>
        <name>CPICoupon</name>
        <qualifiedname>QuantLib::CPICoupon::CPICoupon</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>baseCPI</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>paymentDate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>nominal</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>startDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>endDate</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_zero_inflation_index" kindref="compound">ZeroInflationIndex</ref> &gt; &amp;</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>observationLag</declname>
        </param>
        <param>
          <type><ref refid="struct_quant_lib_1_1_c_p_i_1adaf018681fd1d9478c984348c82c9013" kindref="member">CPI::InterpolationType</ref></type>
          <declname>observationInterpolation</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>fixedRate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>refPeriodStart</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>refPeriodEnd</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>exCouponDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This constructor takes the base <ref refid="struct_quant_lib_1_1_c_p_i" kindref="compound">CPI</ref> to be used in the calculations. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/cpicoupon.hpp" line="60" column="9" bodyfile="ql/cashflows/cpicoupon.cpp" bodystart="32" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_coupon_1adf2ded1b6879d510cf66a2af553f0d2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::CPICoupon::CPICoupon</definition>
        <argsstring>(const Date &amp;baseDate, const Date &amp;paymentDate, Real nominal, const Date &amp;startDate, const Date &amp;endDate, const ext::shared_ptr&lt; ZeroInflationIndex &gt; &amp;index, const Period &amp;observationLag, CPI::InterpolationType observationInterpolation, const DayCounter &amp;dayCounter, Real fixedRate, const Date &amp;refPeriodStart=Date(), const Date &amp;refPeriodEnd=Date(), const Date &amp;exCouponDate=Date())</argsstring>
        <name>CPICoupon</name>
        <qualifiedname>QuantLib::CPICoupon::CPICoupon</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>baseDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>paymentDate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>nominal</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>startDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>endDate</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_zero_inflation_index" kindref="compound">ZeroInflationIndex</ref> &gt; &amp;</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>observationLag</declname>
        </param>
        <param>
          <type><ref refid="struct_quant_lib_1_1_c_p_i_1adaf018681fd1d9478c984348c82c9013" kindref="member">CPI::InterpolationType</ref></type>
          <declname>observationInterpolation</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>fixedRate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>refPeriodStart</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>refPeriodEnd</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>exCouponDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This constructor takes a base date; the coupon will use it to retrieve the base <ref refid="struct_quant_lib_1_1_c_p_i" kindref="compound">CPI</ref> to be used in the calculations. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/cpicoupon.hpp" line="77" column="9" bodyfile="ql/cashflows/cpicoupon.cpp" bodystart="49" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_coupon_1afafebdff9b546e8bbd56a203c4f9217e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::CPICoupon::CPICoupon</definition>
        <argsstring>(Real baseCPI, const Date &amp;baseDate, const Date &amp;paymentDate, Real nominal, const Date &amp;startDate, const Date &amp;endDate, const ext::shared_ptr&lt; ZeroInflationIndex &gt; &amp;index, const Period &amp;observationLag, CPI::InterpolationType observationInterpolation, const DayCounter &amp;dayCounter, Real fixedRate, const Date &amp;refPeriodStart=Date(), const Date &amp;refPeriodEnd=Date(), const Date &amp;exCouponDate=Date())</argsstring>
        <name>CPICoupon</name>
        <qualifiedname>QuantLib::CPICoupon::CPICoupon</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>baseCPI</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>baseDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>paymentDate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>nominal</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>startDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>endDate</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_zero_inflation_index" kindref="compound">ZeroInflationIndex</ref> &gt; &amp;</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>observationLag</declname>
        </param>
        <param>
          <type><ref refid="struct_quant_lib_1_1_c_p_i_1adaf018681fd1d9478c984348c82c9013" kindref="member">CPI::InterpolationType</ref></type>
          <declname>observationInterpolation</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>fixedRate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>refPeriodStart</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>refPeriodEnd</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>exCouponDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This constructor takes both a base <ref refid="struct_quant_lib_1_1_c_p_i" kindref="compound">CPI</ref> and a base date. If both are passed, the base <ref refid="struct_quant_lib_1_1_c_p_i" kindref="compound">CPI</ref> is used in the calculations. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/cpicoupon.hpp" line="94" column="9" bodyfile="ql/cashflows/cpicoupon.cpp" bodystart="66" bodyend="91"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Inspectors</header>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_coupon_1abf0d73df3c9d5f6a125aa758cc510012" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CPICoupon::fixedRate</definition>
        <argsstring>() const</argsstring>
        <name>fixedRate</name>
        <qualifiedname>QuantLib::CPICoupon::fixedRate</qualifiedname>
        <briefdescription>
<para>fixed rate that will be inflated by the index ratio </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/cpicoupon.hpp" line="113" column="14" bodyfile="ql/cashflows/cpicoupon.hpp" bodystart="259" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_coupon_1a94848ee57e018dacef66231471be6bfa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::CPICoupon::baseCPI</definition>
        <argsstring>() const</argsstring>
        <name>baseCPI</name>
        <qualifiedname>QuantLib::CPICoupon::baseCPI</qualifiedname>
        <briefdescription>
<para>base value for the <ref refid="struct_quant_lib_1_1_c_p_i" kindref="compound">CPI</ref> index </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>make sure that the interpolation used to create this is what you are using for the fixing, i.e. the observationInterpolation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/cpicoupon.hpp" line="120" column="14" bodyfile="ql/cashflows/cpicoupon.hpp" bodystart="271" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_coupon_1a4cb372ceac7fbc9f8ff2d4c520780b4c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::CPICoupon::baseDate</definition>
        <argsstring>() const</argsstring>
        <name>baseDate</name>
        <qualifiedname>QuantLib::CPICoupon::baseDate</qualifiedname>
        <briefdescription>
<para>base date for the base fixing of the <ref refid="struct_quant_lib_1_1_c_p_i" kindref="compound">CPI</ref> index </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/cpicoupon.hpp" line="123" column="14" bodyfile="ql/cashflows/cpicoupon.hpp" bodystart="275" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_coupon_1a17390eca97fec080ccf7f1ec1142bfd6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_quant_lib_1_1_c_p_i_1adaf018681fd1d9478c984348c82c9013" kindref="member">CPI::InterpolationType</ref></type>
        <definition>CPI::InterpolationType QuantLib::CPICoupon::observationInterpolation</definition>
        <argsstring>() const</argsstring>
        <name>observationInterpolation</name>
        <qualifiedname>QuantLib::CPICoupon::observationInterpolation</qualifiedname>
        <briefdescription>
<para>how do you observe the index? as-is, flat, linear? </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/cpicoupon.hpp" line="126" column="32" bodyfile="ql/cashflows/cpicoupon.hpp" bodystart="279" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_coupon_1a2041171e6fe1d73d73f674ddf5d1353e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_zero_inflation_index" kindref="compound">ZeroInflationIndex</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; ZeroInflationIndex &gt; QuantLib::CPICoupon::cpiIndex</definition>
        <argsstring>() const</argsstring>
        <name>cpiIndex</name>
        <qualifiedname>QuantLib::CPICoupon::cpiIndex</qualifiedname>
        <briefdescription>
<para>index used </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/cpicoupon.hpp" line="129" column="25" bodyfile="ql/cashflows/cpicoupon.hpp" bodystart="283" bodyend="285"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Calculations</header>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_coupon_1abe8f5e15e0bccb5aa98cfd778823fabc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CPICoupon::accruedAmount</definition>
        <argsstring>(const Date &amp;) const override</argsstring>
        <name>accruedAmount</name>
        <qualifiedname>QuantLib::CPICoupon::accruedAmount</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_coupon_1a221cdef4475e85ef50fb8173f0b9b984">accruedAmount</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
        </param>
        <briefdescription>
<para>accrued amount at the given date </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/cpicoupon.hpp" line="134" column="14" bodyfile="ql/cashflows/cpicoupon.cpp" bodystart="101" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_coupon_1a8bb9fa997d1af6f06bdc145ec78443c9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::CPICoupon::indexFixing</definition>
        <argsstring>() const override</argsstring>
        <name>indexFixing</name>
        <qualifiedname>QuantLib::CPICoupon::indexFixing</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_inflation_coupon_1a4e40e13b0f3cbbcb956ff270c6133cb7">indexFixing</reimplements>
        <briefdescription>
<para>the index value observed (with a lag) at the end date </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/cpicoupon.hpp" line="137" column="14" bodyfile="ql/cashflows/cpicoupon.hpp" bodystart="267" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_coupon_1a04b96552e6a68b6a74f5088d76602aed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::CPICoupon::indexRatio</definition>
        <argsstring>(Date d) const</argsstring>
        <name>indexRatio</name>
        <qualifiedname>QuantLib::CPICoupon::indexRatio</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>the ratio between the index fixing at the passed date and the base <ref refid="struct_quant_lib_1_1_c_p_i" kindref="compound">CPI</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>No adjustments are applied </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/cpicoupon.hpp" line="141" column="14" bodyfile="ql/cashflows/cpicoupon.cpp" bodystart="112" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_coupon_1a49ac3ae8ff1f49fff95cc07015fcf87c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::CPICoupon::adjustedIndexGrowth</definition>
        <argsstring>() const</argsstring>
        <name>adjustedIndexGrowth</name>
        <qualifiedname>QuantLib::CPICoupon::adjustedIndexGrowth</qualifiedname>
        <briefdescription>
<para>the ratio between the end index fixing and the base <ref refid="struct_quant_lib_1_1_c_p_i" kindref="compound">CPI</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>This might include adjustments calculated by the pricer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/cpicoupon.hpp" line="145" column="14" bodyfile="ql/cashflows/cpicoupon.hpp" bodystart="263" bodyend="265"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Coupon paying the performance of a <ref refid="struct_quant_lib_1_1_c_p_i" kindref="compound">CPI</ref> (zero inflation) index </para>
    </briefdescription>
    <detaileddescription>
<para>The performance is relative to the index value on the base date.</para>
<para>The other inflation value is taken from the refPeriodEnd date with observation lag, so any roll/calendar etc. will be built in by the caller. By default this is done in the <ref refid="class_quant_lib_1_1_inflation_coupon" kindref="compound">InflationCoupon</ref> which uses ModifiedPreceding with fixing days assumed positive meaning earlier, i.e. always stay in same month (relative to referencePeriodEnd).</para>
<para>This is more sophisticated than an IndexedCashFlow because it does date calculations itself.</para>
<para><xrefsect id="todo_1_todo000002"><xreftitle>Todo</xreftitle><xrefdescription><para>we do not do any convexity adjustment for lags different to the natural ZCIIS lag that was used to create the forward inflation curve. </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::CPICoupon</label>
        <link refid="class_quant_lib_1_1_c_p_i_coupon"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::CashFlow</label>
        <link refid="class_quant_lib_1_1_cash_flow"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Coupon</label>
        <link refid="class_quant_lib_1_1_coupon"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Event</label>
        <link refid="class_quant_lib_1_1_event"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::InflationCoupon</label>
        <link refid="class_quant_lib_1_1_inflation_coupon"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="8">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::CPICoupon</label>
        <link refid="class_quant_lib_1_1_c_p_i_coupon"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>baseDate_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::CashFlow</label>
        <link refid="class_quant_lib_1_1_cash_flow"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Coupon</label>
        <link refid="class_quant_lib_1_1_coupon"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>accrualEndDate_</edgelabel>
          <edgelabel>accrualStartDate_</edgelabel>
          <edgelabel>exCouponDate_</edgelabel>
          <edgelabel>paymentDate_</edgelabel>
          <edgelabel>refPeriodEnd_</edgelabel>
          <edgelabel>refPeriodStart_</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="11">
        <label>QuantLib::DayCounter</label>
        <link refid="class_quant_lib_1_1_day_counter"/>
      </node>
      <node id="5">
        <label>QuantLib::Event</label>
        <link refid="class_quant_lib_1_1_event"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::InflationCoupon</label>
        <link refid="class_quant_lib_1_1_inflation_coupon"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>observationLag_</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>dayCounter_</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="8">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="10">
        <label>QuantLib::Period</label>
        <link refid="class_quant_lib_1_1_period"/>
      </node>
    </collaborationgraph>
    <location file="ql/cashflows/cpicoupon.hpp" line="55" column="5" bodyfile="ql/cashflows/cpicoupon.hpp" bodystart="55" bodyend="159"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_c_p_i_coupon_1ad2efbcdee81b6cb3c92972bcc0b4e3ad" prot="public" virt="virtual"><scope>QuantLib::CPICoupon</scope><name>accept</name></member>
      <member refid="class_quant_lib_1_1_coupon_1ae6b211492a4610a3e2fec3f2f430247a" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>accrualDays</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a5808fa2cd843a929bb14427b16dd3bde" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>accrualEndDate</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a58c14a6e0a6cc20165ff4a5289a72d41" prot="protected" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>accrualEndDate_</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a971dd3951a6fca68e16d4c00fccd2eab" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>accrualPeriod</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a1fc9f110182c5f201069dc3053f73deb" prot="protected" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>accrualPeriod_</name></member>
      <member refid="class_quant_lib_1_1_coupon_1aa063dce446a588713d94746a80cd0746" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>accrualStartDate</name></member>
      <member refid="class_quant_lib_1_1_coupon_1adb4da57a28a92b2a1a341f0c586aded0" prot="protected" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>accrualStartDate_</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_coupon_1abe8f5e15e0bccb5aa98cfd778823fabc" prot="public" virt="virtual"><scope>QuantLib::CPICoupon</scope><name>accruedAmount</name></member>
      <member refid="class_quant_lib_1_1_coupon_1acee86a8c573d57b79971329275682a29" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>accruedDays</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a67ff3181d3f3c078d193c9383f7cf51b" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>accruedPeriod</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_coupon_1a49ac3ae8ff1f49fff95cc07015fcf87c" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>adjustedIndexGrowth</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a02070ea7442d30625992c1711030d4b8" prot="protected" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>alwaysForward_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a17c9433135a259e4776baec66204a484" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>alwaysForwardNotifications</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1af471b62dc88d979a3d24db1996cb84db" prot="public" virt="virtual"><scope>QuantLib::CPICoupon</scope><name>amount</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_coupon_1a94848ee57e018dacef66231471be6bfa" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>baseCPI</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_coupon_1a3a10bffd29a73bf8bef72d836b0d5743" prot="protected" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>baseCPI_</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_coupon_1a4cb372ceac7fbc9f8ff2d4c520780b4c" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>baseDate</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_coupon_1aacce690b251014d1ce53671bd5ffac36" prot="protected" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>baseDate_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a5244c7f83592375a0ea9048296435fd1" prot="protected" virt="virtual"><scope>QuantLib::CPICoupon</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a58b4986a80efa18634483a92c121e26e" prot="protected" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>calculated_</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_coupon_1a93d9ab991c28c2ee49c7799eb88fb3cd" prot="protected" virt="virtual"><scope>QuantLib::CPICoupon</scope><name>checkPricerImpl</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a37d50b6041a918e6422a0e0e9974ab05" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>Coupon</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_coupon_1a475191dfaec862d9cb5c3a199bdd872b" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>CPICoupon</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_coupon_1adf2ded1b6879d510cf66a2af553f0d2d" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>CPICoupon</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_coupon_1afafebdff9b546e8bbd56a203c4f9217e" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>CPICoupon</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_coupon_1a2041171e6fe1d73d73f674ddf5d1353e" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>cpiIndex</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a36b31db67e84b7858c23b134c3ed9a42" prot="public" virt="virtual"><scope>QuantLib::CPICoupon</scope><name>date</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a68ebb497c1a0e62cf4097ff804d954bc" prot="public" virt="virtual"><scope>QuantLib::CPICoupon</scope><name>dayCounter</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a140b39f6353bdb146426da543fd85bbd" prot="protected" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>dayCounter_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::CPICoupon</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a6278162ff5d79ca19655c7fbc4b702ca" prot="public" virt="virtual"><scope>QuantLib::CPICoupon</scope><name>exCouponDate</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a9edde82b0183dc0b0138baa423c7097e" prot="protected" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>exCouponDate_</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_coupon_1abf0d73df3c9d5f6a125aa758cc510012" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>fixedRate</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_coupon_1aa670376d396f93907469131ca4a23dfd" prot="protected" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>fixedRate_</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1ad269d6a037445b03efcf0ff099fbd7df" prot="public" virt="virtual"><scope>QuantLib::CPICoupon</scope><name>fixingDate</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a0e67390d5065280adea4c197d34cf464" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>fixingDays</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1ac1ded4d90bf71cc63f58bc05e52eda04" prot="protected" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>fixingDays_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1afac6ee19c3107c453e1347dd8000e023" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>forwardFirstNotificationOnly</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7157f41e83f2c5d924f5c5bafda04d1d" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>freeze</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7bb721fe00c6854e602758aba629ab77" prot="protected" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>frozen_</name></member>
      <member refid="class_quant_lib_1_1_cash_flow_1a42691c396f43dde0b5ed37f4a014b0e8" prot="public" virt="virtual"><scope>QuantLib::CPICoupon</scope><name>hasOccurred</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a245ccc1b7c2bfcb897af546dd613e09a" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>index</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1ad908b80564765674274971e32ae1cf87" prot="protected" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>index_</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_coupon_1a8bb9fa997d1af6f06bdc145ec78443c9" prot="public" virt="virtual"><scope>QuantLib::CPICoupon</scope><name>indexFixing</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_coupon_1a04b96552e6a68b6a74f5088d76602aed" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>indexRatio</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a098ce17748f32863f9ae8659c7dd1716" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>InflationCoupon</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a0a7c5d42815a4e16ee2158e24dbfc748" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>isCalculated</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a26f18f4ff7faaaebd8eae50e064b493e" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>LazyObject</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a579b9d1341796c612126053722928bb3" prot="public" virt="virtual"><scope>QuantLib::CPICoupon</scope><name>nominal</name></member>
      <member refid="class_quant_lib_1_1_coupon_1aed38f11424938b0a46bb5a0b3db94a75" prot="protected" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>nominal_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Event::"><scope>QuantLib::CPICoupon</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Event::"><scope>QuantLib::CPICoupon</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_coupon_1a17390eca97fec080ccf7f1ec1142bfd6" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>observationInterpolation</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_coupon_1a67cfc9dca8b229f14dd98e1f6288fefa" prot="protected" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>observationInterpolation_</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a787bb517a1a463b36d97b55bd81a1b9b" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>observationLag</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1aad1ef78f2192653441dd99cd13e7b453" prot="protected" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>observationLag_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::CPICoupon</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::CPICoupon</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Event::"><scope>QuantLib::CPICoupon</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::QuantLib::Observer::"><scope>QuantLib::CPICoupon</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a27eb1806820783a5a1f8dbefa18f4c56" prot="protected" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>paymentDate_</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a574b65622bdf3af2888a06b011778df9" prot="public" virt="virtual"><scope>QuantLib::CPICoupon</scope><name>performCalculations</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a8229837a6730de9eec1987394de9d2da" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>price</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a553c98b098e7ec17f25c9f11a0a18269" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>pricer</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a5eaa3988faec3edb68cb73fb54481e31" prot="protected" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>pricer_</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a1d84a54420161835317f950b484670e8" prot="public" virt="virtual"><scope>QuantLib::CPICoupon</scope><name>rate</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1aa74373af3d3e154b872f54319e339f7b" prot="protected" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>rate_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a70c9b24e50132408d8d9ce4f6674662a" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>recalculate</name></member>
      <member refid="class_quant_lib_1_1_coupon_1ad261da91ac390a467e20f48a01d29465" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>referencePeriodEnd</name></member>
      <member refid="class_quant_lib_1_1_coupon_1aa3c229434f73d8ab9e26eb70a609c0f5" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>referencePeriodStart</name></member>
      <member refid="class_quant_lib_1_1_coupon_1ae4af1ed468e66e946eda0b9026fa9e76" prot="protected" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>refPeriodEnd_</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a208f7f13571a5b93f2436ceb7e0b669f" prot="protected" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>refPeriodStart_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a512b8cf2f8daa10ba4a71c8d574a05a9" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>setPricer</name></member>
      <member refid="class_quant_lib_1_1_cash_flow_1a103a14e1657bd2d7cb6574bf6dcf96d0" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>tradingExCoupon</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a2e0e4786666453024b9d4e0761f2770b" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>unfreeze</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1adee2bf49be5c4c78736be293321a856d" prot="public" virt="virtual"><scope>QuantLib::CPICoupon</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_cash_flow_1a4ac3d8fa6eeb8c307345ada96b25cecf" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>~CashFlow</name></member>
      <member refid="class_quant_lib_1_1_event_1a26cef5942731bfb52ed77e74abdcfe9f" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>~Event</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a9d719c43bb627177a90d7d12324a2d6e" prot="public" virt="non-virtual"><scope>QuantLib::CPICoupon</scope><name>~LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::CPICoupon</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::CPICoupon</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

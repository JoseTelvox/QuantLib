<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_make_m_c_himalaya_engine" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::MakeMCHimalayaEngine</compoundname>
    <includes refid="mchimalayaengine_8hpp" local="no">mchimalayaengine.hpp</includes>
    <templateparamlist>
      <param>
        <type>class RNG</type>
        <defval><ref refid="namespace_quant_lib_1a68b9aaf5f0c17983506b1a1db8575ab0" kindref="member">PseudoRandom</ref></defval>
      </param>
      <param>
        <type>class S</type>
        <defval><ref refid="namespace_quant_lib_1ae2e788da35d2b866040a03b96227ee6e" kindref="member">Statistics</ref></defval>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_himalaya_engine_1afc8fc4714cf2c35550fe92ea686916d8" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_stochastic_process_array" kindref="compound">StochasticProcessArray</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;StochasticProcessArray&gt; QuantLib::MakeMCHimalayaEngine&lt; RNG, S &gt;::process_</definition>
        <argsstring></argsstring>
        <name>process_</name>
        <qualifiedname>QuantLib::MakeMCHimalayaEngine::process_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/mchimalayaengine.hpp" line="107" column="25" bodyfile="ql/experimental/exoticoptions/mchimalayaengine.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_himalaya_engine_1aef240f0893bb4001464011a62964805d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::MakeMCHimalayaEngine&lt; RNG, S &gt;::brownianBridge_</definition>
        <argsstring></argsstring>
        <name>brownianBridge_</name>
        <qualifiedname>QuantLib::MakeMCHimalayaEngine::brownianBridge_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/mchimalayaengine.hpp" line="108" column="14" bodyfile="ql/experimental/exoticoptions/mchimalayaengine.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_himalaya_engine_1acfb37cde5fbb0bb0590e8fc5e185d694" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::MakeMCHimalayaEngine&lt; RNG, S &gt;::antithetic_</definition>
        <argsstring></argsstring>
        <name>antithetic_</name>
        <qualifiedname>QuantLib::MakeMCHimalayaEngine::antithetic_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/mchimalayaengine.hpp" line="108" column="31" bodyfile="ql/experimental/exoticoptions/mchimalayaengine.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_himalaya_engine_1adbd10c597424c89c7684619b46bee123" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCHimalayaEngine&lt; RNG, S &gt;::samples_</definition>
        <argsstring></argsstring>
        <name>samples_</name>
        <qualifiedname>QuantLib::MakeMCHimalayaEngine::samples_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/mchimalayaengine.hpp" line="109" column="14" bodyfile="ql/experimental/exoticoptions/mchimalayaengine.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_himalaya_engine_1a8d82627eb8d9909c5de1e86c10d3912a" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCHimalayaEngine&lt; RNG, S &gt;::maxSamples_</definition>
        <argsstring></argsstring>
        <name>maxSamples_</name>
        <qualifiedname>QuantLib::MakeMCHimalayaEngine::maxSamples_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/mchimalayaengine.hpp" line="109" column="23" bodyfile="ql/experimental/exoticoptions/mchimalayaengine.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_himalaya_engine_1a32ddcfcc2d8748829eef48109886e228" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::MakeMCHimalayaEngine&lt; RNG, S &gt;::tolerance_</definition>
        <argsstring></argsstring>
        <name>tolerance_</name>
        <qualifiedname>QuantLib::MakeMCHimalayaEngine::tolerance_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/mchimalayaengine.hpp" line="110" column="14" bodyfile="ql/experimental/exoticoptions/mchimalayaengine.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_himalaya_engine_1a44fecd8aea616de97df4b970c76d33fd" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
        <definition>BigNatural QuantLib::MakeMCHimalayaEngine&lt; RNG, S &gt;::seed_</definition>
        <argsstring></argsstring>
        <name>seed_</name>
        <qualifiedname>QuantLib::MakeMCHimalayaEngine::seed_</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/mchimalayaengine.hpp" line="111" column="20" bodyfile="ql/experimental/exoticoptions/mchimalayaengine.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_himalaya_engine_1a27a672731599ef0b6198b509931d6dae" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::MakeMCHimalayaEngine&lt; RNG, S &gt;::MakeMCHimalayaEngine</definition>
        <argsstring>(ext::shared_ptr&lt; StochasticProcessArray &gt;)</argsstring>
        <name>MakeMCHimalayaEngine</name>
        <qualifiedname>QuantLib::MakeMCHimalayaEngine::MakeMCHimalayaEngine</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_stochastic_process_array" kindref="compound">StochasticProcessArray</ref> &gt;</type>
          <defname>process</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/mchimalayaengine.hpp" line="96" column="18" bodyfile="ql/experimental/exoticoptions/mchimalayaengine.hpp" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_himalaya_engine_1a9352978fe5eeabd9b224e4b239d1d187" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_himalaya_engine" kindref="compound">MakeMCHimalayaEngine</ref> &amp;</type>
        <definition>MakeMCHimalayaEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCHimalayaEngine&lt; RNG, S &gt;::withBrownianBridge</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>withBrownianBridge</name>
        <qualifiedname>QuantLib::MakeMCHimalayaEngine::withBrownianBridge</qualifiedname>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/mchimalayaengine.hpp" line="98" column="30" bodyfile="ql/experimental/exoticoptions/mchimalayaengine.hpp" bodystart="184" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_himalaya_engine_1adb33c7f71aeafeff79d458fe1e3cfe75" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_himalaya_engine" kindref="compound">MakeMCHimalayaEngine</ref> &amp;</type>
        <definition>MakeMCHimalayaEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCHimalayaEngine&lt; RNG, S &gt;::withAntitheticVariate</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>withAntitheticVariate</name>
        <qualifiedname>QuantLib::MakeMCHimalayaEngine::withAntitheticVariate</qualifiedname>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/mchimalayaengine.hpp" line="99" column="30" bodyfile="ql/experimental/exoticoptions/mchimalayaengine.hpp" bodystart="191" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_himalaya_engine_1a47f74ea2d1025be4b37da3fda4cec50e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_himalaya_engine" kindref="compound">MakeMCHimalayaEngine</ref> &amp;</type>
        <definition>MakeMCHimalayaEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCHimalayaEngine&lt; RNG, S &gt;::withSamples</definition>
        <argsstring>(Size samples)</argsstring>
        <name>withSamples</name>
        <qualifiedname>QuantLib::MakeMCHimalayaEngine::withSamples</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/mchimalayaengine.hpp" line="100" column="30" bodyfile="ql/experimental/exoticoptions/mchimalayaengine.hpp" bodystart="198" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_himalaya_engine_1aa95a0f1aa1c2a23a4d5d79f7b22134ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_himalaya_engine" kindref="compound">MakeMCHimalayaEngine</ref> &amp;</type>
        <definition>MakeMCHimalayaEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCHimalayaEngine&lt; RNG, S &gt;::withAbsoluteTolerance</definition>
        <argsstring>(Real tolerance)</argsstring>
        <name>withAbsoluteTolerance</name>
        <qualifiedname>QuantLib::MakeMCHimalayaEngine::withAbsoluteTolerance</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>tolerance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/mchimalayaengine.hpp" line="101" column="30" bodyfile="ql/experimental/exoticoptions/mchimalayaengine.hpp" bodystart="207" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_himalaya_engine_1a58ae612f07e3a7b21dfeac8c377051a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_himalaya_engine" kindref="compound">MakeMCHimalayaEngine</ref> &amp;</type>
        <definition>MakeMCHimalayaEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCHimalayaEngine&lt; RNG, S &gt;::withMaxSamples</definition>
        <argsstring>(Size samples)</argsstring>
        <name>withMaxSamples</name>
        <qualifiedname>QuantLib::MakeMCHimalayaEngine::withMaxSamples</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/mchimalayaengine.hpp" line="102" column="30" bodyfile="ql/experimental/exoticoptions/mchimalayaengine.hpp" bodystart="219" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_himalaya_engine_1a2598df6efaeb45fdf6b042fc5ca88fc1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_himalaya_engine" kindref="compound">MakeMCHimalayaEngine</ref> &amp;</type>
        <definition>MakeMCHimalayaEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCHimalayaEngine&lt; RNG, S &gt;::withSeed</definition>
        <argsstring>(BigNatural seed)</argsstring>
        <name>withSeed</name>
        <qualifiedname>QuantLib::MakeMCHimalayaEngine::withSeed</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/mchimalayaengine.hpp" line="103" column="30" bodyfile="ql/experimental/exoticoptions/mchimalayaengine.hpp" bodystart="226" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_himalaya_engine_1a0095acf3aa0f45f61ee0708d01c9f5c5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::MakeMCHimalayaEngine&lt; RNG, S &gt;::operator ext::shared_ptr&lt; PricingEngine &gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator ext::shared_ptr&lt; PricingEngine &gt;</name>
        <qualifiedname>QuantLib::MakeMCHimalayaEngine::shared_ptr&lt; PricingEngine &gt;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/mchimalayaengine.hpp" line="105" column="9" bodyfile="ql/experimental/exoticoptions/mchimalayaengine.hpp" bodystart="233" bodyend="243"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Monte Carlo Himalaya-option engine factory. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/experimental/exoticoptions/mchimalayaengine.hpp" line="94" column="5" bodyfile="ql/experimental/exoticoptions/mchimalayaengine.hpp" bodystart="94" bodyend="112"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_make_m_c_himalaya_engine_1acfb37cde5fbb0bb0590e8fc5e185d694" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCHimalayaEngine</scope><name>antithetic_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_himalaya_engine_1aef240f0893bb4001464011a62964805d" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCHimalayaEngine</scope><name>brownianBridge_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_himalaya_engine_1a27a672731599ef0b6198b509931d6dae" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCHimalayaEngine</scope><name>MakeMCHimalayaEngine</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_himalaya_engine_1a8d82627eb8d9909c5de1e86c10d3912a" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCHimalayaEngine</scope><name>maxSamples_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_himalaya_engine_1a0095acf3aa0f45f61ee0708d01c9f5c5" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCHimalayaEngine</scope><name>operator ext::shared_ptr&lt; PricingEngine &gt;</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_himalaya_engine_1afc8fc4714cf2c35550fe92ea686916d8" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCHimalayaEngine</scope><name>process_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_himalaya_engine_1adbd10c597424c89c7684619b46bee123" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCHimalayaEngine</scope><name>samples_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_himalaya_engine_1a44fecd8aea616de97df4b970c76d33fd" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCHimalayaEngine</scope><name>seed_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_himalaya_engine_1a32ddcfcc2d8748829eef48109886e228" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCHimalayaEngine</scope><name>tolerance_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_himalaya_engine_1aa95a0f1aa1c2a23a4d5d79f7b22134ee" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCHimalayaEngine</scope><name>withAbsoluteTolerance</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_himalaya_engine_1adb33c7f71aeafeff79d458fe1e3cfe75" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCHimalayaEngine</scope><name>withAntitheticVariate</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_himalaya_engine_1a9352978fe5eeabd9b224e4b239d1d187" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCHimalayaEngine</scope><name>withBrownianBridge</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_himalaya_engine_1a58ae612f07e3a7b21dfeac8c377051a4" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCHimalayaEngine</scope><name>withMaxSamples</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_himalaya_engine_1a47f74ea2d1025be4b37da3fda4cec50e" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCHimalayaEngine</scope><name>withSamples</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_himalaya_engine_1a2598df6efaeb45fdf6b042fc5ca88fc1" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCHimalayaEngine</scope><name>withSeed</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

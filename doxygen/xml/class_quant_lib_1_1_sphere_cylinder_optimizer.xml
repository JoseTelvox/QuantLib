<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_sphere_cylinder_optimizer" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::SphereCylinderOptimizer</compoundname>
    <includes refid="spherecylinder_8hpp" local="no">spherecylinder.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_sphere_cylinder_optimizer_1ac9147de8a3ead766d3a0f914e12f59cc" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SphereCylinderOptimizer::r_</definition>
        <argsstring></argsstring>
        <name>r_</name>
        <qualifiedname>QuantLib::SphereCylinderOptimizer::r_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/spherecylinder.hpp" line="60" column="14" bodyfile="ql/math/optimization/spherecylinder.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_sphere_cylinder_optimizer_1a20957ac369dfe8bad38f59faafcd0d99" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SphereCylinderOptimizer::s_</definition>
        <argsstring></argsstring>
        <name>s_</name>
        <qualifiedname>QuantLib::SphereCylinderOptimizer::s_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/spherecylinder.hpp" line="60" column="17" bodyfile="ql/math/optimization/spherecylinder.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_sphere_cylinder_optimizer_1a00e615204d2819e40c7be8925f894bb5" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SphereCylinderOptimizer::alpha_</definition>
        <argsstring></argsstring>
        <name>alpha_</name>
        <qualifiedname>QuantLib::SphereCylinderOptimizer::alpha_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/spherecylinder.hpp" line="60" column="20" bodyfile="ql/math/optimization/spherecylinder.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_sphere_cylinder_optimizer_1a18bc63831f056bc8d1bc016b230aad19" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SphereCylinderOptimizer::z1_</definition>
        <argsstring></argsstring>
        <name>z1_</name>
        <qualifiedname>QuantLib::SphereCylinderOptimizer::z1_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/spherecylinder.hpp" line="60" column="27" bodyfile="ql/math/optimization/spherecylinder.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_sphere_cylinder_optimizer_1adc03b5b83522436f0ba588c184433ef9" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SphereCylinderOptimizer::z2_</definition>
        <argsstring></argsstring>
        <name>z2_</name>
        <qualifiedname>QuantLib::SphereCylinderOptimizer::z2_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/spherecylinder.hpp" line="60" column="31" bodyfile="ql/math/optimization/spherecylinder.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_sphere_cylinder_optimizer_1a9418cd4415058c3ecded9c671b3e26b3" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SphereCylinderOptimizer::z3_</definition>
        <argsstring></argsstring>
        <name>z3_</name>
        <qualifiedname>QuantLib::SphereCylinderOptimizer::z3_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/spherecylinder.hpp" line="60" column="35" bodyfile="ql/math/optimization/spherecylinder.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_sphere_cylinder_optimizer_1a2194979153cec8637af02c87cc5a4e44" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SphereCylinderOptimizer::topValue_</definition>
        <argsstring></argsstring>
        <name>topValue_</name>
        <qualifiedname>QuantLib::SphereCylinderOptimizer::topValue_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/spherecylinder.hpp" line="62" column="14" bodyfile="ql/math/optimization/spherecylinder.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_sphere_cylinder_optimizer_1a8168a1fb967fd90b6003a5fb64d146fe" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SphereCylinderOptimizer::bottomValue_</definition>
        <argsstring></argsstring>
        <name>bottomValue_</name>
        <qualifiedname>QuantLib::SphereCylinderOptimizer::bottomValue_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/spherecylinder.hpp" line="63" column="14" bodyfile="ql/math/optimization/spherecylinder.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_sphere_cylinder_optimizer_1ab5d3a0d244f0b40f4a2dec23fcfbdb50" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::SphereCylinderOptimizer::nonEmpty_</definition>
        <argsstring></argsstring>
        <name>nonEmpty_</name>
        <qualifiedname>QuantLib::SphereCylinderOptimizer::nonEmpty_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/spherecylinder.hpp" line="64" column="14" bodyfile="ql/math/optimization/spherecylinder.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_sphere_cylinder_optimizer_1a4a1c9c447c201a6475b3568ad49f1e1b" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SphereCylinderOptimizer::zweight_</definition>
        <argsstring></argsstring>
        <name>zweight_</name>
        <qualifiedname>QuantLib::SphereCylinderOptimizer::zweight_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/spherecylinder.hpp" line="65" column="14" bodyfile="ql/math/optimization/spherecylinder.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_sphere_cylinder_optimizer_1a59fac03ba349f06866e1ed6433fb7b53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::SphereCylinderOptimizer::SphereCylinderOptimizer</definition>
        <argsstring>(Real r, Real s, Real alpha, Real z1, Real z2, Real z3, Real zweight=1.0)</argsstring>
        <name>SphereCylinderOptimizer</name>
        <qualifiedname>QuantLib::SphereCylinderOptimizer::SphereCylinderOptimizer</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>alpha</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>z1</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>z2</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>z3</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>zweight</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/spherecylinder.hpp" line="42" column="9" bodyfile="ql/math/optimization/spherecylinder.cpp" bodystart="75" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_sphere_cylinder_optimizer_1ace65de3e807153a8d6ab0cfc11036586" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::SphereCylinderOptimizer::isIntersectionNonEmpty</definition>
        <argsstring>() const</argsstring>
        <name>isIntersectionNonEmpty</name>
        <qualifiedname>QuantLib::SphereCylinderOptimizer::isIntersectionNonEmpty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/spherecylinder.hpp" line="49" column="14" bodyfile="ql/math/optimization/spherecylinder.cpp" bodystart="110" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_sphere_cylinder_optimizer_1a37200e7a2d249a03805f6e37a17a7425" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::SphereCylinderOptimizer::findClosest</definition>
        <argsstring>(Size maxIterations, Real tolerance, Real &amp;y1, Real &amp;y2, Real &amp;y3) const</argsstring>
        <name>findClosest</name>
        <qualifiedname>QuantLib::SphereCylinderOptimizer::findClosest</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>maxIterations</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>tolerance</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &amp;</type>
          <declname>y1</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &amp;</type>
          <declname>y2</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &amp;</type>
          <declname>y3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/spherecylinder.hpp" line="50" column="14" bodyfile="ql/math/optimization/spherecylinder.cpp" bodystart="114" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_sphere_cylinder_optimizer_1a2cdcd9551e025ade6ea825110fd13a5b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::SphereCylinderOptimizer::findByProjection</definition>
        <argsstring>(Real &amp;y1, Real &amp;y2, Real &amp;y3) const</argsstring>
        <name>findByProjection</name>
        <qualifiedname>QuantLib::SphereCylinderOptimizer::findByProjection</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &amp;</type>
          <declname>y1</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &amp;</type>
          <declname>y2</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &amp;</type>
          <declname>y3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/spherecylinder.hpp" line="55" column="14" bodyfile="ql/math/optimization/spherecylinder.cpp" bodystart="147" bodyend="174"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_sphere_cylinder_optimizer_1acc933e6c5b4425a0f216b6e4bbf746eb" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SphereCylinderOptimizer::objectiveFunction</definition>
        <argsstring>(Real x2) const</argsstring>
        <name>objectiveFunction</name>
        <qualifiedname>QuantLib::SphereCylinderOptimizer::objectiveFunction</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/spherecylinder.hpp" line="61" column="14" bodyfile="ql/math/optimization/spherecylinder.cpp" bodystart="130" bodyend="145"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><itemizedlist>
<listitem><para>we are in r^3 sphere centred at O radius r</para>
</listitem><listitem><para>vertical cylinder centred at (alpha,0) radius s</para>
</listitem><listitem><para>Z some point in R3</para>
</listitem><listitem><para>find point on intersection that is closest to Z</para>
</listitem></itemizedlist>
</para>
<para>the intersection may be empty! </para>
    </detaileddescription>
    <location file="ql/math/optimization/spherecylinder.hpp" line="40" column="5" bodyfile="ql/math/optimization/spherecylinder.hpp" bodystart="40" bodyend="66"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_sphere_cylinder_optimizer_1a00e615204d2819e40c7be8925f894bb5" prot="private" virt="non-virtual"><scope>QuantLib::SphereCylinderOptimizer</scope><name>alpha_</name></member>
      <member refid="class_quant_lib_1_1_sphere_cylinder_optimizer_1a8168a1fb967fd90b6003a5fb64d146fe" prot="private" virt="non-virtual"><scope>QuantLib::SphereCylinderOptimizer</scope><name>bottomValue_</name></member>
      <member refid="class_quant_lib_1_1_sphere_cylinder_optimizer_1a2cdcd9551e025ade6ea825110fd13a5b" prot="public" virt="non-virtual"><scope>QuantLib::SphereCylinderOptimizer</scope><name>findByProjection</name></member>
      <member refid="class_quant_lib_1_1_sphere_cylinder_optimizer_1a37200e7a2d249a03805f6e37a17a7425" prot="public" virt="non-virtual"><scope>QuantLib::SphereCylinderOptimizer</scope><name>findClosest</name></member>
      <member refid="class_quant_lib_1_1_sphere_cylinder_optimizer_1ace65de3e807153a8d6ab0cfc11036586" prot="public" virt="non-virtual"><scope>QuantLib::SphereCylinderOptimizer</scope><name>isIntersectionNonEmpty</name></member>
      <member refid="class_quant_lib_1_1_sphere_cylinder_optimizer_1ab5d3a0d244f0b40f4a2dec23fcfbdb50" prot="private" virt="non-virtual"><scope>QuantLib::SphereCylinderOptimizer</scope><name>nonEmpty_</name></member>
      <member refid="class_quant_lib_1_1_sphere_cylinder_optimizer_1acc933e6c5b4425a0f216b6e4bbf746eb" prot="private" virt="non-virtual"><scope>QuantLib::SphereCylinderOptimizer</scope><name>objectiveFunction</name></member>
      <member refid="class_quant_lib_1_1_sphere_cylinder_optimizer_1ac9147de8a3ead766d3a0f914e12f59cc" prot="private" virt="non-virtual"><scope>QuantLib::SphereCylinderOptimizer</scope><name>r_</name></member>
      <member refid="class_quant_lib_1_1_sphere_cylinder_optimizer_1a20957ac369dfe8bad38f59faafcd0d99" prot="private" virt="non-virtual"><scope>QuantLib::SphereCylinderOptimizer</scope><name>s_</name></member>
      <member refid="class_quant_lib_1_1_sphere_cylinder_optimizer_1a59fac03ba349f06866e1ed6433fb7b53" prot="public" virt="non-virtual"><scope>QuantLib::SphereCylinderOptimizer</scope><name>SphereCylinderOptimizer</name></member>
      <member refid="class_quant_lib_1_1_sphere_cylinder_optimizer_1a2194979153cec8637af02c87cc5a4e44" prot="private" virt="non-virtual"><scope>QuantLib::SphereCylinderOptimizer</scope><name>topValue_</name></member>
      <member refid="class_quant_lib_1_1_sphere_cylinder_optimizer_1a18bc63831f056bc8d1bc016b230aad19" prot="private" virt="non-virtual"><scope>QuantLib::SphereCylinderOptimizer</scope><name>z1_</name></member>
      <member refid="class_quant_lib_1_1_sphere_cylinder_optimizer_1adc03b5b83522436f0ba588c184433ef9" prot="private" virt="non-virtual"><scope>QuantLib::SphereCylinderOptimizer</scope><name>z2_</name></member>
      <member refid="class_quant_lib_1_1_sphere_cylinder_optimizer_1a9418cd4415058c3ecded9c671b3e26b3" prot="private" virt="non-virtual"><scope>QuantLib::SphereCylinderOptimizer</scope><name>z3_</name></member>
      <member refid="class_quant_lib_1_1_sphere_cylinder_optimizer_1a4a1c9c447c201a6475b3568ad49f1e1b" prot="private" virt="non-virtual"><scope>QuantLib::SphereCylinderOptimizer</scope><name>zweight_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

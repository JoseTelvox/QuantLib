<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_make_m_c_variance_swap_engine" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::MakeMCVarianceSwapEngine</compoundname>
    <includes refid="mcvarianceswapengine_8hpp" local="no">mcvarianceswapengine.hpp</includes>
    <templateparamlist>
      <param>
        <type>class RNG</type>
        <defval><ref refid="namespace_quant_lib_1a68b9aaf5f0c17983506b1a1db8575ab0" kindref="member">PseudoRandom</ref></defval>
      </param>
      <param>
        <type>class S</type>
        <defval><ref refid="namespace_quant_lib_1ae2e788da35d2b866040a03b96227ee6e" kindref="member">Statistics</ref></defval>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_variance_swap_engine_1a5ff3d80f1bbad185014c928021e0ebd6" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_generalized_black_scholes_process" kindref="compound">GeneralizedBlackScholesProcess</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;GeneralizedBlackScholesProcess&gt; QuantLib::MakeMCVarianceSwapEngine&lt; RNG, S &gt;::process_</definition>
        <argsstring></argsstring>
        <name>process_</name>
        <qualifiedname>QuantLib::MakeMCVarianceSwapEngine::process_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcvarianceswapengine.hpp" line="146" column="25" bodyfile="ql/pricingengines/forward/mcvarianceswapengine.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_variance_swap_engine_1aa1bd19eeac9d303e20d227036072f7f2" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::MakeMCVarianceSwapEngine&lt; RNG, S &gt;::antithetic_</definition>
        <argsstring></argsstring>
        <name>antithetic_</name>
        <qualifiedname>QuantLib::MakeMCVarianceSwapEngine::antithetic_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcvarianceswapengine.hpp" line="147" column="14" bodyfile="ql/pricingengines/forward/mcvarianceswapengine.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_variance_swap_engine_1af13778ca970253d79e258c3c59f52e67" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCVarianceSwapEngine&lt; RNG, S &gt;::steps_</definition>
        <argsstring></argsstring>
        <name>steps_</name>
        <qualifiedname>QuantLib::MakeMCVarianceSwapEngine::steps_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcvarianceswapengine.hpp" line="148" column="14" bodyfile="ql/pricingengines/forward/mcvarianceswapengine.hpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_variance_swap_engine_1a57840cd7df152435243256692a434181" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCVarianceSwapEngine&lt; RNG, S &gt;::stepsPerYear_</definition>
        <argsstring></argsstring>
        <name>stepsPerYear_</name>
        <qualifiedname>QuantLib::MakeMCVarianceSwapEngine::stepsPerYear_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcvarianceswapengine.hpp" line="148" column="21" bodyfile="ql/pricingengines/forward/mcvarianceswapengine.hpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_variance_swap_engine_1a59af675a75ad5b46e8d64b50903c2b55" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCVarianceSwapEngine&lt; RNG, S &gt;::samples_</definition>
        <argsstring></argsstring>
        <name>samples_</name>
        <qualifiedname>QuantLib::MakeMCVarianceSwapEngine::samples_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcvarianceswapengine.hpp" line="148" column="35" bodyfile="ql/pricingengines/forward/mcvarianceswapengine.hpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_variance_swap_engine_1a6fbd15bc637a85e2868629175c165050" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCVarianceSwapEngine&lt; RNG, S &gt;::maxSamples_</definition>
        <argsstring></argsstring>
        <name>maxSamples_</name>
        <qualifiedname>QuantLib::MakeMCVarianceSwapEngine::maxSamples_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcvarianceswapengine.hpp" line="148" column="44" bodyfile="ql/pricingengines/forward/mcvarianceswapengine.hpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_variance_swap_engine_1acd00b20c98b9af47f0ca319f5aa12829" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::MakeMCVarianceSwapEngine&lt; RNG, S &gt;::tolerance_</definition>
        <argsstring></argsstring>
        <name>tolerance_</name>
        <qualifiedname>QuantLib::MakeMCVarianceSwapEngine::tolerance_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcvarianceswapengine.hpp" line="149" column="14" bodyfile="ql/pricingengines/forward/mcvarianceswapengine.hpp" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_variance_swap_engine_1a7193ab5bfd83207992791fec64df0cd3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::MakeMCVarianceSwapEngine&lt; RNG, S &gt;::brownianBridge_</definition>
        <argsstring></argsstring>
        <name>brownianBridge_</name>
        <qualifiedname>QuantLib::MakeMCVarianceSwapEngine::brownianBridge_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcvarianceswapengine.hpp" line="150" column="14" bodyfile="ql/pricingengines/forward/mcvarianceswapengine.hpp" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_variance_swap_engine_1a65ece7c54d2a1f12d1b1dda7f5f7ccfc" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
        <definition>BigNatural QuantLib::MakeMCVarianceSwapEngine&lt; RNG, S &gt;::seed_</definition>
        <argsstring></argsstring>
        <name>seed_</name>
        <qualifiedname>QuantLib::MakeMCVarianceSwapEngine::seed_</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcvarianceswapengine.hpp" line="151" column="20" bodyfile="ql/pricingengines/forward/mcvarianceswapengine.hpp" bodystart="151" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_variance_swap_engine_1a3cde89ece648cbc7d2f3430ae0172a4a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::MakeMCVarianceSwapEngine&lt; RNG, S &gt;::MakeMCVarianceSwapEngine</definition>
        <argsstring>(ext::shared_ptr&lt; GeneralizedBlackScholesProcess &gt; process)</argsstring>
        <name>MakeMCVarianceSwapEngine</name>
        <qualifiedname>QuantLib::MakeMCVarianceSwapEngine::MakeMCVarianceSwapEngine</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_generalized_black_scholes_process" kindref="compound">GeneralizedBlackScholesProcess</ref> &gt;</type>
          <declname>process</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcvarianceswapengine.hpp" line="133" column="9" bodyfile="ql/pricingengines/forward/mcvarianceswapengine.hpp" bodystart="225" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_variance_swap_engine_1a672b7318f3d1cc0e12759fe118a01247" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_variance_swap_engine" kindref="compound">MakeMCVarianceSwapEngine</ref> &amp;</type>
        <definition>MakeMCVarianceSwapEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCVarianceSwapEngine&lt; RNG, S &gt;::withSteps</definition>
        <argsstring>(Size steps)</argsstring>
        <name>withSteps</name>
        <qualifiedname>QuantLib::MakeMCVarianceSwapEngine::withSteps</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcvarianceswapengine.hpp" line="135" column="34" bodyfile="ql/pricingengines/forward/mcvarianceswapengine.hpp" bodystart="232" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_variance_swap_engine_1a6f01d9efdb81c01242a7e0541f9e90dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_variance_swap_engine" kindref="compound">MakeMCVarianceSwapEngine</ref> &amp;</type>
        <definition>MakeMCVarianceSwapEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCVarianceSwapEngine&lt; RNG, S &gt;::withStepsPerYear</definition>
        <argsstring>(Size steps)</argsstring>
        <name>withStepsPerYear</name>
        <qualifiedname>QuantLib::MakeMCVarianceSwapEngine::withStepsPerYear</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcvarianceswapengine.hpp" line="136" column="34" bodyfile="ql/pricingengines/forward/mcvarianceswapengine.hpp" bodystart="239" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_variance_swap_engine_1a50c40bc1575696539a9e2768892feaba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_variance_swap_engine" kindref="compound">MakeMCVarianceSwapEngine</ref> &amp;</type>
        <definition>MakeMCVarianceSwapEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCVarianceSwapEngine&lt; RNG, S &gt;::withBrownianBridge</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>withBrownianBridge</name>
        <qualifiedname>QuantLib::MakeMCVarianceSwapEngine::withBrownianBridge</qualifiedname>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcvarianceswapengine.hpp" line="137" column="34" bodyfile="ql/pricingengines/forward/mcvarianceswapengine.hpp" bodystart="281" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_variance_swap_engine_1af9d961e3da9896ad9765af5d05a85880" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_variance_swap_engine" kindref="compound">MakeMCVarianceSwapEngine</ref> &amp;</type>
        <definition>MakeMCVarianceSwapEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCVarianceSwapEngine&lt; RNG, S &gt;::withSamples</definition>
        <argsstring>(Size samples)</argsstring>
        <name>withSamples</name>
        <qualifiedname>QuantLib::MakeMCVarianceSwapEngine::withSamples</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcvarianceswapengine.hpp" line="138" column="34" bodyfile="ql/pricingengines/forward/mcvarianceswapengine.hpp" bodystart="246" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_variance_swap_engine_1a9f48f9cacf41ec4b6c4169b1fac6875c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_variance_swap_engine" kindref="compound">MakeMCVarianceSwapEngine</ref> &amp;</type>
        <definition>MakeMCVarianceSwapEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCVarianceSwapEngine&lt; RNG, S &gt;::withAbsoluteTolerance</definition>
        <argsstring>(Real tolerance)</argsstring>
        <name>withAbsoluteTolerance</name>
        <qualifiedname>QuantLib::MakeMCVarianceSwapEngine::withAbsoluteTolerance</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>tolerance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcvarianceswapengine.hpp" line="139" column="34" bodyfile="ql/pricingengines/forward/mcvarianceswapengine.hpp" bodystart="255" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_variance_swap_engine_1ae367564d2069e8c0b9707a95c7ecdc0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_variance_swap_engine" kindref="compound">MakeMCVarianceSwapEngine</ref> &amp;</type>
        <definition>MakeMCVarianceSwapEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCVarianceSwapEngine&lt; RNG, S &gt;::withMaxSamples</definition>
        <argsstring>(Size samples)</argsstring>
        <name>withMaxSamples</name>
        <qualifiedname>QuantLib::MakeMCVarianceSwapEngine::withMaxSamples</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcvarianceswapengine.hpp" line="140" column="34" bodyfile="ql/pricingengines/forward/mcvarianceswapengine.hpp" bodystart="267" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_variance_swap_engine_1a55d387701e4e047e87cfb44466c9a89e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_variance_swap_engine" kindref="compound">MakeMCVarianceSwapEngine</ref> &amp;</type>
        <definition>MakeMCVarianceSwapEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCVarianceSwapEngine&lt; RNG, S &gt;::withSeed</definition>
        <argsstring>(BigNatural seed)</argsstring>
        <name>withSeed</name>
        <qualifiedname>QuantLib::MakeMCVarianceSwapEngine::withSeed</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcvarianceswapengine.hpp" line="141" column="34" bodyfile="ql/pricingengines/forward/mcvarianceswapengine.hpp" bodystart="274" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_variance_swap_engine_1a2529e31e2fc94b95017a898bffd76608" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_variance_swap_engine" kindref="compound">MakeMCVarianceSwapEngine</ref> &amp;</type>
        <definition>MakeMCVarianceSwapEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCVarianceSwapEngine&lt; RNG, S &gt;::withAntitheticVariate</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>withAntitheticVariate</name>
        <qualifiedname>QuantLib::MakeMCVarianceSwapEngine::withAntitheticVariate</qualifiedname>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcvarianceswapengine.hpp" line="142" column="34" bodyfile="ql/pricingengines/forward/mcvarianceswapengine.hpp" bodystart="288" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_variance_swap_engine_1a084397742cbc93db3e8b6b70e7b30cf6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::MakeMCVarianceSwapEngine&lt; RNG, S &gt;::operator ext::shared_ptr&lt; PricingEngine &gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator ext::shared_ptr&lt; PricingEngine &gt;</name>
        <qualifiedname>QuantLib::MakeMCVarianceSwapEngine::shared_ptr&lt; PricingEngine &gt;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcvarianceswapengine.hpp" line="144" column="9" bodyfile="ql/pricingengines/forward/mcvarianceswapengine.hpp" bodystart="295" bodyend="309"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Monte Carlo variance-swap engine factory. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/pricingengines/forward/mcvarianceswapengine.hpp" line="131" column="5" bodyfile="ql/pricingengines/forward/mcvarianceswapengine.hpp" bodystart="131" bodyend="152"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_make_m_c_variance_swap_engine_1aa1bd19eeac9d303e20d227036072f7f2" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCVarianceSwapEngine</scope><name>antithetic_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_variance_swap_engine_1a7193ab5bfd83207992791fec64df0cd3" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCVarianceSwapEngine</scope><name>brownianBridge_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_variance_swap_engine_1a3cde89ece648cbc7d2f3430ae0172a4a" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCVarianceSwapEngine</scope><name>MakeMCVarianceSwapEngine</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_variance_swap_engine_1a6fbd15bc637a85e2868629175c165050" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCVarianceSwapEngine</scope><name>maxSamples_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_variance_swap_engine_1a084397742cbc93db3e8b6b70e7b30cf6" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCVarianceSwapEngine</scope><name>operator ext::shared_ptr&lt; PricingEngine &gt;</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_variance_swap_engine_1a5ff3d80f1bbad185014c928021e0ebd6" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCVarianceSwapEngine</scope><name>process_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_variance_swap_engine_1a59af675a75ad5b46e8d64b50903c2b55" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCVarianceSwapEngine</scope><name>samples_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_variance_swap_engine_1a65ece7c54d2a1f12d1b1dda7f5f7ccfc" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCVarianceSwapEngine</scope><name>seed_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_variance_swap_engine_1af13778ca970253d79e258c3c59f52e67" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCVarianceSwapEngine</scope><name>steps_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_variance_swap_engine_1a57840cd7df152435243256692a434181" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCVarianceSwapEngine</scope><name>stepsPerYear_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_variance_swap_engine_1acd00b20c98b9af47f0ca319f5aa12829" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCVarianceSwapEngine</scope><name>tolerance_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_variance_swap_engine_1a9f48f9cacf41ec4b6c4169b1fac6875c" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCVarianceSwapEngine</scope><name>withAbsoluteTolerance</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_variance_swap_engine_1a2529e31e2fc94b95017a898bffd76608" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCVarianceSwapEngine</scope><name>withAntitheticVariate</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_variance_swap_engine_1a50c40bc1575696539a9e2768892feaba" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCVarianceSwapEngine</scope><name>withBrownianBridge</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_variance_swap_engine_1ae367564d2069e8c0b9707a95c7ecdc0e" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCVarianceSwapEngine</scope><name>withMaxSamples</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_variance_swap_engine_1af9d961e3da9896ad9765af5d05a85880" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCVarianceSwapEngine</scope><name>withSamples</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_variance_swap_engine_1a55d387701e4e047e87cfb44466c9a89e" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCVarianceSwapEngine</scope><name>withSeed</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_variance_swap_engine_1a672b7318f3d1cc0e12759fe118a01247" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCVarianceSwapEngine</scope><name>withSteps</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_variance_swap_engine_1a6f01d9efdb81c01242a7e0541f9e90dc" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCVarianceSwapEngine</scope><name>withStepsPerYear</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

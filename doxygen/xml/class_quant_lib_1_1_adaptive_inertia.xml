<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_adaptive_inertia" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::AdaptiveInertia</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_particle_swarm_optimization_1_1_inertia" prot="public" virt="non-virtual">QuantLib::ParticleSwarmOptimization::Inertia</basecompoundref>
    <includes refid="particleswarmoptimization_8hpp" local="no">particleswarmoptimization.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_adaptive_inertia_1af4322b834e23e6eec37de523f22faeb5" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AdaptiveInertia::c0_</definition>
        <argsstring></argsstring>
        <name>c0_</name>
        <qualifiedname>QuantLib::AdaptiveInertia::c0_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/particleswarmoptimization.hpp" line="248" column="14" bodyfile="ql/experimental/math/particleswarmoptimization.hpp" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_adaptive_inertia_1a9da945f6ad0ed02d3e1c202046f1f12d" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AdaptiveInertia::best_</definition>
        <argsstring></argsstring>
        <name>best_</name>
        <qualifiedname>QuantLib::AdaptiveInertia::best_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/particleswarmoptimization.hpp" line="248" column="18" bodyfile="ql/experimental/math/particleswarmoptimization.hpp" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_adaptive_inertia_1a0efbad00b88ed30c3e00f9719c12c084" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AdaptiveInertia::minInertia_</definition>
        <argsstring></argsstring>
        <name>minInertia_</name>
        <qualifiedname>QuantLib::AdaptiveInertia::minInertia_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/particleswarmoptimization.hpp" line="249" column="14" bodyfile="ql/experimental/math/particleswarmoptimization.hpp" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_adaptive_inertia_1a58d6afc53a9cfb9ce0e7d96a08af950c" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AdaptiveInertia::maxInertia_</definition>
        <argsstring></argsstring>
        <name>maxInertia_</name>
        <qualifiedname>QuantLib::AdaptiveInertia::maxInertia_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/particleswarmoptimization.hpp" line="249" column="26" bodyfile="ql/experimental/math/particleswarmoptimization.hpp" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_adaptive_inertia_1a3bbf70bccc954a4223ca57dc9dc484d2" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::AdaptiveInertia::M_</definition>
        <argsstring></argsstring>
        <name>M_</name>
        <qualifiedname>QuantLib::AdaptiveInertia::M_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/particleswarmoptimization.hpp" line="250" column="14" bodyfile="ql/experimental/math/particleswarmoptimization.hpp" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_adaptive_inertia_1a34712b12ca7050041e02e74a590d785b" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::AdaptiveInertia::sh_</definition>
        <argsstring></argsstring>
        <name>sh_</name>
        <qualifiedname>QuantLib::AdaptiveInertia::sh_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/particleswarmoptimization.hpp" line="251" column="14" bodyfile="ql/experimental/math/particleswarmoptimization.hpp" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_adaptive_inertia_1a8c75c817ccc83c88a13ba380eae64328" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::AdaptiveInertia::sl_</definition>
        <argsstring></argsstring>
        <name>sl_</name>
        <qualifiedname>QuantLib::AdaptiveInertia::sl_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/particleswarmoptimization.hpp" line="251" column="18" bodyfile="ql/experimental/math/particleswarmoptimization.hpp" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_adaptive_inertia_1a365fb03a80adeee5099fb83b541b364e" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::AdaptiveInertia::adaptiveCounter</definition>
        <argsstring></argsstring>
        <name>adaptiveCounter</name>
        <qualifiedname>QuantLib::AdaptiveInertia::adaptiveCounter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/particleswarmoptimization.hpp" line="252" column="14" bodyfile="ql/experimental/math/particleswarmoptimization.hpp" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_adaptive_inertia_1a5344cdf1afb8702143ec3318170a6025" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::AdaptiveInertia::started_</definition>
        <argsstring></argsstring>
        <name>started_</name>
        <qualifiedname>QuantLib::AdaptiveInertia::started_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/particleswarmoptimization.hpp" line="253" column="14" bodyfile="ql/experimental/math/particleswarmoptimization.hpp" bodystart="253" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_adaptive_inertia_1aefa3011e67f852981b9c1eae98751318" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::AdaptiveInertia::AdaptiveInertia</definition>
        <argsstring>(Real minInertia, Real maxInertia, Size sh=5, Size sl=2)</argsstring>
        <name>AdaptiveInertia</name>
        <qualifiedname>QuantLib::AdaptiveInertia::AdaptiveInertia</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>minInertia</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>maxInertia</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>sh</declname>
          <defval>5</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>sl</declname>
          <defval>2</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/particleswarmoptimization.hpp" line="235" column="9" bodyfile="ql/experimental/math/particleswarmoptimization.hpp" bodystart="235" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_adaptive_inertia_1ac56d3de6618c726b842b2a61ee854f31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::AdaptiveInertia::setSize</definition>
        <argsstring>(Size M, Size N, Real c0, const EndCriteria &amp;endCriteria) override</argsstring>
        <name>setSize</name>
        <qualifiedname>QuantLib::AdaptiveInertia::setSize</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_particle_swarm_optimization_1_1_inertia_1acce7660fa598fb7b27e261ad1a661c97">setSize</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>M</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>N</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>c0</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_end_criteria" kindref="compound">EndCriteria</ref> &amp;</type>
          <declname>endCriteria</declname>
        </param>
        <briefdescription>
<para>initialize state for current problem </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/particleswarmoptimization.hpp" line="238" column="14" bodyfile="ql/experimental/math/particleswarmoptimization.hpp" bodystart="238" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_adaptive_inertia_1adab9db1f2290e7e576381e0b4f29da24" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::AdaptiveInertia::setValues</definition>
        <argsstring>() override</argsstring>
        <name>setValues</name>
        <qualifiedname>QuantLib::AdaptiveInertia::setValues</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_particle_swarm_optimization_1_1_inertia_1a0bb27e39d6dba1adad3489831f690fd7">setValues</reimplements>
        <briefdescription>
<para>produce changes to PSO state for current iteration </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/particleswarmoptimization.hpp" line="245" column="14" bodyfile="ql/experimental/math/particleswarmoptimization.cpp" bodystart="179" bodyend="206"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para><ref refid="class_quant_lib_1_1_adaptive_inertia" kindref="compound">AdaptiveInertia</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::AdaptiveInertia</label>
        <link refid="class_quant_lib_1_1_adaptive_inertia"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::ParticleSwarmOptimization::Inertia</label>
        <link refid="class_quant_lib_1_1_particle_swarm_optimization_1_1_inertia"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::AdaptiveInertia</label>
        <link refid="class_quant_lib_1_1_adaptive_inertia"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Array</label>
        <link refid="class_quant_lib_1_1_array"/>
      </node>
      <node id="6">
        <label>QuantLib::MersenneTwisterUniformRng</label>
        <link refid="class_quant_lib_1_1_mersenne_twister_uniform_rng"/>
      </node>
      <node id="4">
        <label>QuantLib::OptimizationMethod</label>
        <link refid="class_quant_lib_1_1_optimization_method"/>
      </node>
      <node id="3">
        <label>QuantLib::ParticleSwarmOptimization</label>
        <link refid="class_quant_lib_1_1_particle_swarm_optimization"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>gBF_</edgelabel>
          <edgelabel>lX_</edgelabel>
          <edgelabel>pBF_</edgelabel>
          <edgelabel>uX_</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>rng_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::ParticleSwarmOptimization::Inertia</label>
        <link refid="class_quant_lib_1_1_particle_swarm_optimization_1_1_inertia"/>
        <childnode refid="3" relation="usage">
          <edgelabel>pso_</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>gBF_</edgelabel>
          <edgelabel>lX_</edgelabel>
          <edgelabel>pBF_</edgelabel>
          <edgelabel>uX_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/math/particleswarmoptimization.hpp" line="233" column="5" bodyfile="ql/experimental/math/particleswarmoptimization.hpp" bodystart="233" bodyend="254"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_adaptive_inertia_1a365fb03a80adeee5099fb83b541b364e" prot="private" virt="non-virtual"><scope>QuantLib::AdaptiveInertia</scope><name>adaptiveCounter</name></member>
      <member refid="class_quant_lib_1_1_adaptive_inertia_1aefa3011e67f852981b9c1eae98751318" prot="public" virt="non-virtual"><scope>QuantLib::AdaptiveInertia</scope><name>AdaptiveInertia</name></member>
      <member refid="class_quant_lib_1_1_adaptive_inertia_1a9da945f6ad0ed02d3e1c202046f1f12d" prot="private" virt="non-virtual"><scope>QuantLib::AdaptiveInertia</scope><name>best_</name></member>
      <member refid="class_quant_lib_1_1_adaptive_inertia_1af4322b834e23e6eec37de523f22faeb5" prot="private" virt="non-virtual"><scope>QuantLib::AdaptiveInertia</scope><name>c0_</name></member>
      <member refid="class_quant_lib_1_1_particle_swarm_optimization_1_1_inertia_1a3a87e990a4a92802579a514b1d938de8" prot="protected" virt="non-virtual"><scope>QuantLib::AdaptiveInertia</scope><name>gBF_</name></member>
      <member refid="class_quant_lib_1_1_particle_swarm_optimization_1_1_inertia_1ae492c9198edf7137a45464c7ca64a835" prot="protected" virt="non-virtual"><scope>QuantLib::AdaptiveInertia</scope><name>gBX_</name></member>
      <member refid="class_quant_lib_1_1_particle_swarm_optimization_1_1_inertia_1aafb1970cc7c0d2897dbac6ed5b39fa8b" prot="protected" virt="virtual"><scope>QuantLib::AdaptiveInertia</scope><name>init</name></member>
      <member refid="class_quant_lib_1_1_particle_swarm_optimization_1_1_inertia_1afdc28535a7e533d4208568b16453598b" prot="protected" virt="non-virtual"><scope>QuantLib::AdaptiveInertia</scope><name>lX_</name></member>
      <member refid="class_quant_lib_1_1_adaptive_inertia_1a3bbf70bccc954a4223ca57dc9dc484d2" prot="private" virt="non-virtual"><scope>QuantLib::AdaptiveInertia</scope><name>M_</name></member>
      <member refid="class_quant_lib_1_1_adaptive_inertia_1a58d6afc53a9cfb9ce0e7d96a08af950c" prot="private" virt="non-virtual"><scope>QuantLib::AdaptiveInertia</scope><name>maxInertia_</name></member>
      <member refid="class_quant_lib_1_1_adaptive_inertia_1a0efbad00b88ed30c3e00f9719c12c084" prot="private" virt="non-virtual"><scope>QuantLib::AdaptiveInertia</scope><name>minInertia_</name></member>
      <member refid="class_quant_lib_1_1_particle_swarm_optimization_1_1_inertia_1a9d6c8609aef7044acab333eb4da5e0cf" prot="protected" virt="non-virtual"><scope>QuantLib::AdaptiveInertia</scope><name>pBF_</name></member>
      <member refid="class_quant_lib_1_1_particle_swarm_optimization_1_1_inertia_1a0d4b3ad2b9c61d18c27cb403c9349bc7" prot="protected" virt="non-virtual"><scope>QuantLib::AdaptiveInertia</scope><name>pBX_</name></member>
      <member refid="class_quant_lib_1_1_particle_swarm_optimization_1_1_inertia_1a9ae0311ca3aa900bb4971a75eea41237" prot="protected" virt="non-virtual"><scope>QuantLib::AdaptiveInertia</scope><name>pso_</name></member>
      <member refid="class_quant_lib_1_1_adaptive_inertia_1ac56d3de6618c726b842b2a61ee854f31" prot="public" virt="virtual"><scope>QuantLib::AdaptiveInertia</scope><name>setSize</name></member>
      <member refid="class_quant_lib_1_1_adaptive_inertia_1adab9db1f2290e7e576381e0b4f29da24" prot="public" virt="virtual"><scope>QuantLib::AdaptiveInertia</scope><name>setValues</name></member>
      <member refid="class_quant_lib_1_1_adaptive_inertia_1a34712b12ca7050041e02e74a590d785b" prot="private" virt="non-virtual"><scope>QuantLib::AdaptiveInertia</scope><name>sh_</name></member>
      <member refid="class_quant_lib_1_1_adaptive_inertia_1a8c75c817ccc83c88a13ba380eae64328" prot="private" virt="non-virtual"><scope>QuantLib::AdaptiveInertia</scope><name>sl_</name></member>
      <member refid="class_quant_lib_1_1_adaptive_inertia_1a5344cdf1afb8702143ec3318170a6025" prot="private" virt="non-virtual"><scope>QuantLib::AdaptiveInertia</scope><name>started_</name></member>
      <member refid="class_quant_lib_1_1_particle_swarm_optimization_1_1_inertia_1af923e470fcc36de4a91fdf46f4b91997" prot="protected" virt="non-virtual"><scope>QuantLib::AdaptiveInertia</scope><name>uX_</name></member>
      <member refid="class_quant_lib_1_1_particle_swarm_optimization_1_1_inertia_1ad9ce032e7bbf1eea88b4c1b70efe1bb8" prot="protected" virt="non-virtual"><scope>QuantLib::AdaptiveInertia</scope><name>V_</name></member>
      <member refid="class_quant_lib_1_1_particle_swarm_optimization_1_1_inertia_1a9bce9b1f500affbdfc23ad355c21cdb0" prot="protected" virt="non-virtual"><scope>QuantLib::AdaptiveInertia</scope><name>X_</name></member>
      <member refid="class_quant_lib_1_1_particle_swarm_optimization_1_1_inertia_1a0a02c4b175d125c89f8145c139d3eea6" prot="public" virt="virtual"><scope>QuantLib::AdaptiveInertia</scope><name>~Inertia</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

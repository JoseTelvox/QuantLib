<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::ExtendedOrnsteinUhlenbeckProcess</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_stochastic_process1_d" prot="public" virt="non-virtual">QuantLib::StochasticProcess1D</basecompoundref>
    <includes refid="extendedornsteinuhlenbeckprocess_8hpp" local="no">extendedornsteinuhlenbeckprocess.hpp</includes>
    <sectiondef kind="user-defined">
      <header>StochasticProcess interface</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1a304146202f6e7efd5dba6d20d051baef" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::ExtendedOrnsteinUhlenbeckProcess::speed_</definition>
        <argsstring></argsstring>
        <name>speed_</name>
        <qualifiedname>QuantLib::ExtendedOrnsteinUhlenbeckProcess::speed_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/extendedornsteinuhlenbeckprocess.hpp" line="65" column="20" bodyfile="ql/experimental/processes/extendedornsteinuhlenbeckprocess.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1a4773e56cfeea31b35626e8eaaa51b7bd" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
        <definition>const Volatility QuantLib::ExtendedOrnsteinUhlenbeckProcess::vol_</definition>
        <argsstring></argsstring>
        <name>vol_</name>
        <qualifiedname>QuantLib::ExtendedOrnsteinUhlenbeckProcess::vol_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/extendedornsteinuhlenbeckprocess.hpp" line="66" column="26" bodyfile="ql/experimental/processes/extendedornsteinuhlenbeckprocess.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1a8f0e33115fceec73c1140555ae8e0283" prot="private" static="no" mutable="no">
        <type>const std::function&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>(<ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>)&gt;</type>
        <definition>const std::function&lt;Real (Real)&gt; QuantLib::ExtendedOrnsteinUhlenbeckProcess::b_</definition>
        <argsstring></argsstring>
        <name>b_</name>
        <qualifiedname>QuantLib::ExtendedOrnsteinUhlenbeckProcess::b_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/extendedornsteinuhlenbeckprocess.hpp" line="67" column="29" bodyfile="ql/experimental/processes/extendedornsteinuhlenbeckprocess.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1aca0df398c2fb5e0ca5023a36bdb87431" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::ExtendedOrnsteinUhlenbeckProcess::intEps_</definition>
        <argsstring></argsstring>
        <name>intEps_</name>
        <qualifiedname>QuantLib::ExtendedOrnsteinUhlenbeckProcess::intEps_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/extendedornsteinuhlenbeckprocess.hpp" line="68" column="20" bodyfile="ql/experimental/processes/extendedornsteinuhlenbeckprocess.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1ac758fd217fe55094f8515098bba86e77" prot="private" static="no" mutable="no">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_ornstein_uhlenbeck_process" kindref="compound">OrnsteinUhlenbeckProcess</ref> &gt;</type>
        <definition>const ext::shared_ptr&lt;OrnsteinUhlenbeckProcess&gt; QuantLib::ExtendedOrnsteinUhlenbeckProcess::ouProcess_</definition>
        <argsstring></argsstring>
        <name>ouProcess_</name>
        <qualifiedname>QuantLib::ExtendedOrnsteinUhlenbeckProcess::ouProcess_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/extendedornsteinuhlenbeckprocess.hpp" line="69" column="31" bodyfile="ql/experimental/processes/extendedornsteinuhlenbeckprocess.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1ab2a64bbef439a6c4a1e1410e4463f2ed" prot="private" static="no" mutable="no">
        <type>const Discretization</type>
        <definition>const Discretization QuantLib::ExtendedOrnsteinUhlenbeckProcess::discretization_</definition>
        <argsstring></argsstring>
        <name>discretization_</name>
        <qualifiedname>QuantLib::ExtendedOrnsteinUhlenbeckProcess::discretization_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/extendedornsteinuhlenbeckprocess.hpp" line="70" column="30" bodyfile="ql/experimental/processes/extendedornsteinuhlenbeckprocess.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1add35f586c64c98edab8b8594952a684a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ExtendedOrnsteinUhlenbeckProcess::x0</definition>
        <argsstring>() const override</argsstring>
        <name>x0</name>
        <qualifiedname>QuantLib::ExtendedOrnsteinUhlenbeckProcess::x0</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process1_d_1a4a0eee3b5c6592950bd6635177f76113">x0</reimplements>
        <briefdescription>
<para>returns the initial value of the state variable </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/extendedornsteinuhlenbeckprocess.hpp" line="55" column="14" bodyfile="ql/experimental/processes/extendedornsteinuhlenbeckprocess.cpp" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1a2c267791bbc13b659ec7588b9e3c8f81" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ExtendedOrnsteinUhlenbeckProcess::speed</definition>
        <argsstring>() const</argsstring>
        <name>speed</name>
        <qualifiedname>QuantLib::ExtendedOrnsteinUhlenbeckProcess::speed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/extendedornsteinuhlenbeckprocess.hpp" line="56" column="14" bodyfile="ql/experimental/processes/extendedornsteinuhlenbeckprocess.cpp" bodystart="76" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1a75d36aa050a7f08eaebd710bd93d05cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ExtendedOrnsteinUhlenbeckProcess::volatility</definition>
        <argsstring>() const</argsstring>
        <name>volatility</name>
        <qualifiedname>QuantLib::ExtendedOrnsteinUhlenbeckProcess::volatility</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/extendedornsteinuhlenbeckprocess.hpp" line="57" column="14" bodyfile="ql/experimental/processes/extendedornsteinuhlenbeckprocess.cpp" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1aec807fecd07ea87956fe5e2975585fcf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ExtendedOrnsteinUhlenbeckProcess::drift</definition>
        <argsstring>(Time t, Real x) const override</argsstring>
        <name>drift</name>
        <qualifiedname>QuantLib::ExtendedOrnsteinUhlenbeckProcess::drift</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process1_d_1ad27eced4c2abbe7d8da5951969158e2d">drift</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>returns the drift part of the equation, i.e. <formula id="478">$ \mu(t, x_t) $</formula> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/extendedornsteinuhlenbeckprocess.hpp" line="58" column="14" bodyfile="ql/experimental/processes/extendedornsteinuhlenbeckprocess.cpp" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1a9a8de978c25ee1f2cd0685e3ab936061" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ExtendedOrnsteinUhlenbeckProcess::diffusion</definition>
        <argsstring>(Time t, Real x) const override</argsstring>
        <name>diffusion</name>
        <qualifiedname>QuantLib::ExtendedOrnsteinUhlenbeckProcess::diffusion</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process1_d_1a66bde34ae0158d64169e39655fdfcfc0">diffusion</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>returns the diffusion part of the equation, i.e. <formula id="479">$ \sigma(t, x_t) $</formula> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/extendedornsteinuhlenbeckprocess.hpp" line="59" column="14" bodyfile="ql/experimental/processes/extendedornsteinuhlenbeckprocess.cpp" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1a96d47c743ecc4bdfbaadcf7cc44aac55" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ExtendedOrnsteinUhlenbeckProcess::expectation</definition>
        <argsstring>(Time t0, Real x0, Time dt) const override</argsstring>
        <name>expectation</name>
        <qualifiedname>QuantLib::ExtendedOrnsteinUhlenbeckProcess::expectation</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process1_d_1a4543779731a4ce76e9dd85f3c81752e7">expectation</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the expectation <formula id="480">$ E(x_{t_0 + \Delta t} | x_{t_0} = x_0) $</formula> of the process after a time interval <formula id="471">$ \Delta t $</formula> according to the given discretization. This method can be overridden in derived classes which want to hard-code a particular discretization. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/extendedornsteinuhlenbeckprocess.hpp" line="60" column="14" bodyfile="ql/experimental/processes/extendedornsteinuhlenbeckprocess.cpp" bodystart="84" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1a879019f44cf5adb4d0ba8685d4d3990d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ExtendedOrnsteinUhlenbeckProcess::stdDeviation</definition>
        <argsstring>(Time t0, Real x0, Time dt) const override</argsstring>
        <name>stdDeviation</name>
        <qualifiedname>QuantLib::ExtendedOrnsteinUhlenbeckProcess::stdDeviation</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process1_d_1a3290404acdbfcbbd6bbf8b035862e803">stdDeviation</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the standard deviation <formula id="481">$ S(x_{t_0 + \Delta t} | x_{t_0} = x_0) $</formula> of the process after a time interval <formula id="471">$ \Delta t $</formula> according to the given discretization. This method can be overridden in derived classes which want to hard-code a particular discretization. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/extendedornsteinuhlenbeckprocess.hpp" line="61" column="14" bodyfile="ql/experimental/processes/extendedornsteinuhlenbeckprocess.cpp" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1ac500ceb002d71f0604eb569a14cf36e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ExtendedOrnsteinUhlenbeckProcess::variance</definition>
        <argsstring>(Time t0, Real x0, Time dt) const override</argsstring>
        <name>variance</name>
        <qualifiedname>QuantLib::ExtendedOrnsteinUhlenbeckProcess::variance</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process1_d_1afec760c46c7f53d98cea9befd7087508">variance</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the variance <formula id="482">$ V(x_{t_0 + \Delta t} | x_{t_0} = x_0) $</formula> of the process after a time interval <formula id="471">$ \Delta t $</formula> according to the given discretization. This method can be overridden in derived classes which want to hard-code a particular discretization. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/extendedornsteinuhlenbeckprocess.hpp" line="62" column="14" bodyfile="ql/experimental/processes/extendedornsteinuhlenbeckprocess.cpp" bodystart="71" bodyend="74"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1a701a5856e29a0a0bb3681f8c998c57bf" prot="public" static="no" strong="no">
        <type></type>
        <name>Discretization</name>
        <qualifiedname>QuantLib::ExtendedOrnsteinUhlenbeckProcess::Discretization</qualifiedname>
        <enumvalue id="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1a701a5856e29a0a0bb3681f8c998c57bfa4962a61e3cde744646087f27c245313b" prot="public">
          <name>MidPoint</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1a701a5856e29a0a0bb3681f8c998c57bfa4103851578cf11af94d81ae10c116f5c" prot="public">
          <name>Trapezodial</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1a701a5856e29a0a0bb3681f8c998c57bfac6b7b1c2332029597c2b4545ffae2cea" prot="public">
          <name>GaussLobatto</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/extendedornsteinuhlenbeckprocess.hpp" line="44" column="9" bodyfile="ql/experimental/processes/extendedornsteinuhlenbeckprocess.hpp" bodystart="44" bodyend="44"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1a65acd2e2bae8f264bb47792867df8d05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ExtendedOrnsteinUhlenbeckProcess::ExtendedOrnsteinUhlenbeckProcess</definition>
        <argsstring>(Real speed, Volatility sigma, Real x0, std::function&lt; Real(Real)&gt; b, Discretization discretization=MidPoint, Real intEps=1e-4)</argsstring>
        <name>ExtendedOrnsteinUhlenbeckProcess</name>
        <qualifiedname>QuantLib::ExtendedOrnsteinUhlenbeckProcess::ExtendedOrnsteinUhlenbeckProcess</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>speed</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
          <declname>sigma</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x0</declname>
        </param>
        <param>
          <type>std::function&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>(<ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>)&gt;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>Discretization</type>
          <declname>discretization</declname>
          <defval><ref refid="struct_quant_lib_1_1_mid_point" kindref="compound">MidPoint</ref></defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>intEps</declname>
          <defval>1e-4</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/extendedornsteinuhlenbeckprocess.hpp" line="46" column="9" bodyfile="ql/experimental/processes/extendedornsteinuhlenbeckprocess.cpp" bodystart="41" bodyend="52"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Extended Ornstein-Uhlenbeck process class. </para>
    </briefdescription>
    <detaileddescription>
<para>This class describes the Ornstein-Uhlenbeck process governed by   <formula id="174">\[    dx = a (b(t) - x_t) dt + \sigma dW_t.
\]</formula> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::ExtendedOrnsteinUhlenbeckProcess</label>
        <link refid="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="3">
        <label>QuantLib::StochasticProcess</label>
        <link refid="class_quant_lib_1_1_stochastic_process"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::StochasticProcess1D</label>
        <link refid="class_quant_lib_1_1_stochastic_process1_d"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::ExtendedOrnsteinUhlenbeckProcess</label>
        <link refid="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="3">
        <label>QuantLib::StochasticProcess</label>
        <link refid="class_quant_lib_1_1_stochastic_process"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::StochasticProcess1D</label>
        <link refid="class_quant_lib_1_1_stochastic_process1_d"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/processes/extendedornsteinuhlenbeckprocess.hpp" line="42" column="5" bodyfile="ql/experimental/processes/extendedornsteinuhlenbeckprocess.hpp" bodystart="42" bodyend="71"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_stochastic_process1_d_1a303b2e3c9243b674ac1f145c304811b7" prot="public" virt="virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>apply</name></member>
      <member refid="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1a8f0e33115fceec73c1140555ae8e0283" prot="private" virt="non-virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>b_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1a9a8de978c25ee1f2cd0685e3ab936061" prot="public" virt="virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>diffusion</name></member>
      <member refid="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1a701a5856e29a0a0bb3681f8c998c57bf" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>Discretization</name></member>
      <member refid="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1ab2a64bbef439a6c4a1e1410e4463f2ed" prot="private" virt="non-virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>discretization_</name></member>
      <member refid="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1aec807fecd07ea87956fe5e2975585fcf" prot="public" virt="virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>drift</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process1_d_1a39605ea27c7ef3a7feafed4fafcc1f90" prot="public" virt="virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>evolve</name></member>
      <member refid="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1a96d47c743ecc4bdfbaadcf7cc44aac55" prot="public" virt="virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>expectation</name></member>
      <member refid="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1a65acd2e2bae8f264bb47792867df8d05" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>ExtendedOrnsteinUhlenbeckProcess</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a0346d38598fb9a5a1cd58024f05081aa" prot="public" virt="virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>factors</name></member>
      <member refid="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1a701a5856e29a0a0bb3681f8c998c57bfac6b7b1c2332029597c2b4545ffae2cea" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>GaussLobatto</name></member>
      <member refid="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1aca0df398c2fb5e0ca5023a36bdb87431" prot="private" virt="non-virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>intEps_</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1a701a5856e29a0a0bb3681f8c998c57bfa4962a61e3cde744646087f27c245313b" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>MidPoint</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1ac758fd217fe55094f8515098bba86e77" prot="private" virt="non-virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>ouProcess_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1a2c267791bbc13b659ec7588b9e3c8f81" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>speed</name></member>
      <member refid="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1a304146202f6e7efd5dba6d20d051baef" prot="private" virt="non-virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>speed_</name></member>
      <member refid="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1a879019f44cf5adb4d0ba8685d4d3990d" prot="public" virt="virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>stdDeviation</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a2dd24b794a6b320bc60ba9e1a87bf48e" prot="protected" virt="non-virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>StochasticProcess</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a957ee9776d6048835106ea29ea44927f" prot="protected" virt="non-virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>StochasticProcess</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process1_d_1a8fd2dc83f956da3dd008242ee5a5c926" prot="protected" virt="non-virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>StochasticProcess1D</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process1_d_1a0971f058bea9a93d2ced17c685576686" prot="protected" virt="non-virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>StochasticProcess1D</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a39c5f08a3779665f9185a558d2b8418d" prot="public" virt="virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>time</name></member>
      <member refid="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1a701a5856e29a0a0bb3681f8c998c57bfa4103851578cf11af94d81ae10c116f5c" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>Trapezodial</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a0f22628658fd2dc702c13c354ef3244e" prot="public" virt="virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1ac500ceb002d71f0604eb569a14cf36e2" prot="public" virt="virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>variance</name></member>
      <member refid="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1a4773e56cfeea31b35626e8eaaa51b7bd" prot="private" virt="non-virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>vol_</name></member>
      <member refid="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1a75d36aa050a7f08eaebd710bd93d05cf" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>volatility</name></member>
      <member refid="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process_1add35f586c64c98edab8b8594952a684a" prot="public" virt="virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>x0</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a0e2b6a14e675db5abd0ab8965ff7b2c3" prot="public" virt="non-virtual"><scope>QuantLib::ExtendedOrnsteinUhlenbeckProcess</scope><name>~StochasticProcess</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

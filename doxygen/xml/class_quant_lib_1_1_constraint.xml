<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_constraint" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::Constraint</compoundname>
    <derivedcompoundref refid="class_quant_lib_1_1_boundary_constraint" prot="public" virt="non-virtual">QuantLib::BoundaryConstraint</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_calibrated_model_1_1_private_constraint" prot="public" virt="non-virtual">QuantLib::CalibratedModel::PrivateConstraint</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_composite_constraint" prot="public" virt="non-virtual">QuantLib::CompositeConstraint</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_cox_ingersoll_ross_1_1_volatility_constraint" prot="public" virt="non-virtual">QuantLib::CoxIngersollRoss::VolatilityConstraint</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_g_j_r_g_a_r_c_h_model_1_1_volatility_constraint" prot="public" virt="non-virtual">QuantLib::GJRGARCHModel::VolatilityConstraint</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_heston_model_1_1_feller_constraint" prot="public" virt="non-virtual">QuantLib::HestonModel::FellerConstraint</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_no_constraint" prot="public" virt="non-virtual">QuantLib::NoConstraint</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_nonhomogeneous_boundary_constraint" prot="public" virt="non-virtual">QuantLib::NonhomogeneousBoundaryConstraint</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_positive_constraint" prot="public" virt="non-virtual">QuantLib::PositiveConstraint</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_projected_constraint" prot="public" virt="non-virtual">QuantLib::ProjectedConstraint</derivedcompoundref>
    <includes refid="constraint_8hpp" local="no">constraint.hpp</includes>
    <innerclass refid="class_quant_lib_1_1_constraint_1_1_impl" prot="protected">QuantLib::Constraint::Impl</innerclass>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_constraint_1a12ef7bf25a92dcfa368b905d50157912" prot="protected" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_constraint_1_1_impl" kindref="compound">Impl</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;Impl&gt; QuantLib::Constraint::impl_</definition>
        <argsstring></argsstring>
        <name>impl_</name>
        <qualifiedname>QuantLib::Constraint::impl_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/constraint.hpp" line="54" column="25" bodyfile="ql/math/optimization/constraint.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_constraint_1a1ca0c5c7fe2744ea5c73d72f6fc0be45" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::Constraint::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <qualifiedname>QuantLib::Constraint::empty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/constraint.hpp" line="56" column="14" bodyfile="ql/math/optimization/constraint.hpp" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_constraint_1a4a80949ba440e69448cacb8712349a31" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::Constraint::test</definition>
        <argsstring>(const Array &amp;p) const</argsstring>
        <name>test</name>
        <qualifiedname>QuantLib::Constraint::test</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/constraint.hpp" line="57" column="14" bodyfile="ql/math/optimization/constraint.hpp" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_constraint_1ab1a10d5f10304fa6bfe9d9bfce79fc26" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::Constraint::upperBound</definition>
        <argsstring>(const Array &amp;params) const</argsstring>
        <name>upperBound</name>
        <qualifiedname>QuantLib::Constraint::upperBound</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/constraint.hpp" line="58" column="15" bodyfile="ql/math/optimization/constraint.hpp" bodystart="58" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_constraint_1a7c8afc54c3f3edeb7acf2a53544aef4c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::Constraint::lowerBound</definition>
        <argsstring>(const Array &amp;params) const</argsstring>
        <name>lowerBound</name>
        <qualifiedname>QuantLib::Constraint::lowerBound</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/constraint.hpp" line="66" column="15" bodyfile="ql/math/optimization/constraint.hpp" bodystart="66" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_constraint_1a6e7fc1520bf6c5dcb54f2f3275959c03" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Constraint::update</definition>
        <argsstring>(Array &amp;p, const Array &amp;direction, Real beta) const</argsstring>
        <name>update</name>
        <qualifiedname>QuantLib::Constraint::update</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>direction</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>beta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/constraint.hpp" line="74" column="14" bodyfile="ql/math/optimization/constraint.cpp" bodystart="27" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_constraint_1adc6726ff3c77b2d99626316465c88ba2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Constraint::Constraint</definition>
        <argsstring>(ext::shared_ptr&lt; Impl &gt; impl=ext::shared_ptr&lt; Impl &gt;())</argsstring>
        <name>Constraint</name>
        <qualifiedname>QuantLib::Constraint::Constraint</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_constraint_1_1_impl" kindref="compound">Impl</ref> &gt;</type>
          <declname>impl</declname>
          <defval>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_constraint_1_1_impl" kindref="compound">Impl</ref> &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/constraint.hpp" line="75" column="9" bodyfile="ql/math/optimization/constraint.cpp" bodystart="25" bodyend="25"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Base constraint class. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::BoundaryConstraint</label>
        <link refid="class_quant_lib_1_1_boundary_constraint"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::CalibratedModel::PrivateConstraint</label>
        <link refid="class_quant_lib_1_1_calibrated_model_1_1_private_constraint"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::CompositeConstraint</label>
        <link refid="class_quant_lib_1_1_composite_constraint"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::Constraint</label>
        <link refid="class_quant_lib_1_1_constraint"/>
      </node>
      <node id="5">
        <label>QuantLib::CoxIngersollRoss::VolatilityConstraint</label>
        <link refid="class_quant_lib_1_1_cox_ingersoll_ross_1_1_volatility_constraint"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::GJRGARCHModel::VolatilityConstraint</label>
        <link refid="class_quant_lib_1_1_g_j_r_g_a_r_c_h_model_1_1_volatility_constraint"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::HestonModel::FellerConstraint</label>
        <link refid="class_quant_lib_1_1_heston_model_1_1_feller_constraint"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::NoConstraint</label>
        <link refid="class_quant_lib_1_1_no_constraint"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QuantLib::NonhomogeneousBoundaryConstraint</label>
        <link refid="class_quant_lib_1_1_nonhomogeneous_boundary_constraint"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QuantLib::PositiveConstraint</label>
        <link refid="class_quant_lib_1_1_positive_constraint"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>QuantLib::ProjectedConstraint</label>
        <link refid="class_quant_lib_1_1_projected_constraint"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="ql/math/optimization/constraint.hpp" line="35" column="5" bodyfile="ql/math/optimization/constraint.hpp" bodystart="35" bodyend="76"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_constraint_1adc6726ff3c77b2d99626316465c88ba2" prot="public" virt="non-virtual"><scope>QuantLib::Constraint</scope><name>Constraint</name></member>
      <member refid="class_quant_lib_1_1_constraint_1a1ca0c5c7fe2744ea5c73d72f6fc0be45" prot="public" virt="non-virtual"><scope>QuantLib::Constraint</scope><name>empty</name></member>
      <member refid="class_quant_lib_1_1_constraint_1a12ef7bf25a92dcfa368b905d50157912" prot="protected" virt="non-virtual"><scope>QuantLib::Constraint</scope><name>impl_</name></member>
      <member refid="class_quant_lib_1_1_constraint_1a7c8afc54c3f3edeb7acf2a53544aef4c" prot="public" virt="non-virtual"><scope>QuantLib::Constraint</scope><name>lowerBound</name></member>
      <member refid="class_quant_lib_1_1_constraint_1a4a80949ba440e69448cacb8712349a31" prot="public" virt="non-virtual"><scope>QuantLib::Constraint</scope><name>test</name></member>
      <member refid="class_quant_lib_1_1_constraint_1a6e7fc1520bf6c5dcb54f2f3275959c03" prot="public" virt="non-virtual"><scope>QuantLib::Constraint</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_constraint_1ab1a10d5f10304fa6bfe9d9bfce79fc26" prot="public" virt="non-virtual"><scope>QuantLib::Constraint</scope><name>upperBound</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

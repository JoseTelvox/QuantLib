<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_gauss_laguerre_trigonometric_base" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::GaussLaguerreTrigonometricBase</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_moment_based_gaussian_polynomial" prot="public" virt="non-virtual">QuantLib::MomentBasedGaussianPolynomial&lt; mp_real &gt;</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_gauss_laguerre_cosine_polynomial" prot="public" virt="non-virtual">QuantLib::GaussLaguerreCosinePolynomial&lt; mp_real &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_gauss_laguerre_sine_polynomial" prot="public" virt="non-virtual">QuantLib::GaussLaguerreSinePolynomial&lt; mp_real &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>class mp_real</type>
      </param>
    </templateparamlist>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_gauss_laguerre_trigonometric_base_1ad742b75e0148ee492fb41ab971a8281f" prot="protected" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::GaussLaguerreTrigonometricBase&lt; mp_real &gt;::u_</definition>
        <argsstring></argsstring>
        <name>u_</name>
        <qualifiedname>QuantLib::GaussLaguerreTrigonometricBase::u_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/integrals/gausslaguerrecosinepolynomial.hpp" line="73" column="12" bodyfile="ql/math/integrals/gausslaguerrecosinepolynomial.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_gauss_laguerre_trigonometric_base_1afef1ba740dd72c78adbdfc7c73e054be" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; mp_real &gt;</type>
        <definition>std::vector&lt;mp_real&gt; QuantLib::GaussLaguerreTrigonometricBase&lt; mp_real &gt;::m_</definition>
        <argsstring></argsstring>
        <name>m_</name>
        <qualifiedname>QuantLib::GaussLaguerreTrigonometricBase::m_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/integrals/gausslaguerrecosinepolynomial.hpp" line="76" column="21" bodyfile="ql/math/integrals/gausslaguerrecosinepolynomial.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_gauss_laguerre_trigonometric_base_1a4a549322cdb56f6a822efada3ced3f36" prot="private" static="no" mutable="no">
        <type>std::vector&lt; mp_real &gt;</type>
        <definition>std::vector&lt;mp_real&gt; QuantLib::GaussLaguerreTrigonometricBase&lt; mp_real &gt;::f_</definition>
        <argsstring></argsstring>
        <name>f_</name>
        <qualifiedname>QuantLib::GaussLaguerreTrigonometricBase::f_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/integrals/gausslaguerrecosinepolynomial.hpp" line="76" column="24" bodyfile="ql/math/integrals/gausslaguerrecosinepolynomial.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_gauss_laguerre_trigonometric_base_1a0820bc8407e2205d6e515fd32e5ce481" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::GaussLaguerreTrigonometricBase&lt; mp_real &gt;::GaussLaguerreTrigonometricBase</definition>
        <argsstring>(Real u)</argsstring>
        <name>GaussLaguerreTrigonometricBase</name>
        <qualifiedname>QuantLib::GaussLaguerreTrigonometricBase::GaussLaguerreTrigonometricBase</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/integrals/gausslaguerrecosinepolynomial.hpp" line="37" column="10" bodyfile="ql/math/integrals/gausslaguerrecosinepolynomial.hpp" bodystart="37" bodyend="38"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_gauss_laguerre_trigonometric_base_1a2289a28125608f60ee018e74b728e6d8" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>mp_real</type>
        <definition>virtual mp_real QuantLib::GaussLaguerreTrigonometricBase&lt; mp_real &gt;::m0</definition>
        <argsstring>() const =0</argsstring>
        <name>m0</name>
        <qualifiedname>QuantLib::GaussLaguerreTrigonometricBase::m0</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_gauss_laguerre_cosine_polynomial_1a493c837ef01da1e56d274951227cee21">m0</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_gauss_laguerre_sine_polynomial_1aa87c2ea9828e8b44461823851bc86807">m0</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/integrals/gausslaguerrecosinepolynomial.hpp" line="41" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gauss_laguerre_trigonometric_base_1aba9a5c02931c2727cc654dee5bac24f5" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>mp_real</type>
        <definition>virtual mp_real QuantLib::GaussLaguerreTrigonometricBase&lt; mp_real &gt;::m1</definition>
        <argsstring>() const =0</argsstring>
        <name>m1</name>
        <qualifiedname>QuantLib::GaussLaguerreTrigonometricBase::m1</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_gauss_laguerre_cosine_polynomial_1a54036ce866b2a1ebcaebf2974ac72d90">m1</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_gauss_laguerre_sine_polynomial_1a643db518358689eb109e84f2c3ca19cb">m1</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/integrals/gausslaguerrecosinepolynomial.hpp" line="42" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gauss_laguerre_trigonometric_base_1a2e78ab7aa62eefd278ab3ad089b3a324" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>mp_real</type>
        <definition>mp_real QuantLib::GaussLaguerreTrigonometricBase&lt; mp_real &gt;::moment_</definition>
        <argsstring>(Size n) const</argsstring>
        <name>moment_</name>
        <qualifiedname>QuantLib::GaussLaguerreTrigonometricBase::moment_</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/integrals/gausslaguerrecosinepolynomial.hpp" line="44" column="9" bodyfile="ql/math/integrals/gausslaguerrecosinepolynomial.hpp" bodystart="44" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gauss_laguerre_trigonometric_base_1a2c996001f79e2719cd4e665c621bde29" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>mp_real</type>
        <definition>mp_real QuantLib::GaussLaguerreTrigonometricBase&lt; mp_real &gt;::fact</definition>
        <argsstring>(Size n) const</argsstring>
        <name>fact</name>
        <qualifiedname>QuantLib::GaussLaguerreTrigonometricBase::fact</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/integrals/gausslaguerrecosinepolynomial.hpp" line="60" column="9" bodyfile="ql/math/integrals/gausslaguerrecosinepolynomial.hpp" bodystart="60" bodyend="72"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>QuantLib::GaussLaguerreCosinePolynomial&lt; mp_real &gt;</label>
        <link refid="class_quant_lib_1_1_gauss_laguerre_cosine_polynomial"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::GaussLaguerreSinePolynomial&lt; mp_real &gt;</label>
        <link refid="class_quant_lib_1_1_gauss_laguerre_sine_polynomial"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::GaussLaguerreTrigonometricBase&lt; mp_real &gt;</label>
        <link refid="class_quant_lib_1_1_gauss_laguerre_trigonometric_base"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::GaussianOrthogonalPolynomial</label>
        <link refid="class_quant_lib_1_1_gaussian_orthogonal_polynomial"/>
      </node>
      <node id="2">
        <label>QuantLib::MomentBasedGaussianPolynomial&lt; mp_real &gt;</label>
        <link refid="class_quant_lib_1_1_moment_based_gaussian_polynomial"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::GaussLaguerreTrigonometricBase&lt; mp_real &gt;</label>
        <link refid="class_quant_lib_1_1_gauss_laguerre_trigonometric_base"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::GaussianOrthogonalPolynomial</label>
        <link refid="class_quant_lib_1_1_gaussian_orthogonal_polynomial"/>
      </node>
      <node id="2">
        <label>QuantLib::MomentBasedGaussianPolynomial&lt; mp_real &gt;</label>
        <link refid="class_quant_lib_1_1_moment_based_gaussian_polynomial"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/math/integrals/gausslaguerrecosinepolynomial.hpp" line="34" column="1" bodyfile="ql/math/integrals/gausslaguerrecosinepolynomial.hpp" bodystart="35" bodyend="77"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_moment_based_gaussian_polynomial_1abae5a173a690467396b655f360a0ef6d" prot="public" virt="virtual"><scope>QuantLib::GaussLaguerreTrigonometricBase</scope><name>alpha</name></member>
      <member refid="class_quant_lib_1_1_moment_based_gaussian_polynomial_1afb84735bb966f6d727becca80fb9f9bb" prot="public" virt="virtual"><scope>QuantLib::GaussLaguerreTrigonometricBase</scope><name>alpha</name></member>
      <member refid="class_quant_lib_1_1_moment_based_gaussian_polynomial_1a5b6c01dd4318f00b1aa375c30202d9cb" prot="public" virt="virtual"><scope>QuantLib::GaussLaguerreTrigonometricBase</scope><name>beta</name></member>
      <member refid="class_quant_lib_1_1_moment_based_gaussian_polynomial_1a74a3273ef76f5735798419a5b18a264d" prot="public" virt="virtual"><scope>QuantLib::GaussLaguerreTrigonometricBase</scope><name>beta</name></member>
      <member refid="class_quant_lib_1_1_gauss_laguerre_trigonometric_base_1a4a549322cdb56f6a822efada3ced3f36" prot="private" virt="non-virtual"><scope>QuantLib::GaussLaguerreTrigonometricBase</scope><name>f_</name></member>
      <member refid="class_quant_lib_1_1_gauss_laguerre_trigonometric_base_1a2c996001f79e2719cd4e665c621bde29" prot="protected" virt="non-virtual"><scope>QuantLib::GaussLaguerreTrigonometricBase</scope><name>fact</name></member>
      <member refid="class_quant_lib_1_1_gauss_laguerre_trigonometric_base_1a0820bc8407e2205d6e515fd32e5ce481" prot="public" virt="non-virtual"><scope>QuantLib::GaussLaguerreTrigonometricBase</scope><name>GaussLaguerreTrigonometricBase</name></member>
      <member refid="class_quant_lib_1_1_gauss_laguerre_trigonometric_base_1a2289a28125608f60ee018e74b728e6d8" prot="protected" virt="pure-virtual"><scope>QuantLib::GaussLaguerreTrigonometricBase</scope><name>m0</name></member>
      <member refid="class_quant_lib_1_1_gauss_laguerre_trigonometric_base_1aba9a5c02931c2727cc654dee5bac24f5" prot="protected" virt="pure-virtual"><scope>QuantLib::GaussLaguerreTrigonometricBase</scope><name>m1</name></member>
      <member refid="class_quant_lib_1_1_gauss_laguerre_trigonometric_base_1afef1ba740dd72c78adbdfc7c73e054be" prot="private" virt="non-virtual"><scope>QuantLib::GaussLaguerreTrigonometricBase</scope><name>m_</name></member>
      <member refid="class_quant_lib_1_1_moment_based_gaussian_polynomial_1a46e9970360eec5fc1a3f39121919b433" prot="public" virt="pure-virtual"><scope>QuantLib::GaussLaguerreTrigonometricBase</scope><name>moment</name></member>
      <member refid="class_quant_lib_1_1_gauss_laguerre_trigonometric_base_1a2e78ab7aa62eefd278ab3ad089b3a324" prot="protected" virt="non-virtual"><scope>QuantLib::GaussLaguerreTrigonometricBase</scope><name>moment_</name></member>
      <member refid="class_quant_lib_1_1_moment_based_gaussian_polynomial_1a821eb6a76921577cb4c387b8420c6e09" prot="public" virt="non-virtual"><scope>QuantLib::GaussLaguerreTrigonometricBase</scope><name>MomentBasedGaussianPolynomial</name></member>
      <member refid="class_quant_lib_1_1_moment_based_gaussian_polynomial_1a445bfb29311a8c308994e5bb26f33e6a" prot="public" virt="virtual"><scope>QuantLib::GaussLaguerreTrigonometricBase</scope><name>mu_0</name></member>
      <member refid="class_quant_lib_1_1_moment_based_gaussian_polynomial_1affeaa8c6ed0053efd86abf10d1870b0d" prot="public" virt="virtual"><scope>QuantLib::GaussLaguerreTrigonometricBase</scope><name>mu_0</name></member>
      <member refid="class_quant_lib_1_1_gauss_laguerre_trigonometric_base_1ad742b75e0148ee492fb41ab971a8281f" prot="protected" virt="non-virtual"><scope>QuantLib::GaussLaguerreTrigonometricBase</scope><name>u_</name></member>
      <member refid="class_quant_lib_1_1_gaussian_orthogonal_polynomial_1a769accdc45f27c9b69a5ddebe2b9d3a3" prot="public" virt="non-virtual"><scope>QuantLib::GaussLaguerreTrigonometricBase</scope><name>value</name></member>
      <member refid="class_quant_lib_1_1_gaussian_orthogonal_polynomial_1afba8fe00288c9d8cf42f63a91ad59836" prot="public" virt="pure-virtual"><scope>QuantLib::GaussLaguerreTrigonometricBase</scope><name>w</name></member>
      <member refid="class_quant_lib_1_1_gaussian_orthogonal_polynomial_1a908f05e4162d866b3ff020fd5a1b7285" prot="public" virt="non-virtual"><scope>QuantLib::GaussLaguerreTrigonometricBase</scope><name>weightedValue</name></member>
      <member refid="class_quant_lib_1_1_gaussian_orthogonal_polynomial_1afc3b36cc5ee57e8fd77be775e1ef101b" prot="public" virt="virtual"><scope>QuantLib::GaussLaguerreTrigonometricBase</scope><name>~GaussianOrthogonalPolynomial</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

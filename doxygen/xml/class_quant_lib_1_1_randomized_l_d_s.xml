<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_randomized_l_d_s" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::RandomizedLDS</compoundname>
    <includes refid="randomizedlds_8hpp" local="no">randomizedlds.hpp</includes>
    <templateparamlist>
      <param>
        <type>class LDS</type>
      </param>
      <param>
        <type>class PRS</type>
        <defval><ref refid="class_quant_lib_1_1_random_sequence_generator" kindref="compound">RandomSequenceGenerator</ref>&lt;<ref refid="class_quant_lib_1_1_mersenne_twister_uniform_rng" kindref="compound">MersenneTwisterUniformRng</ref>&gt;</defval>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_quant_lib_1_1_randomized_l_d_s_1ae3f87375e417049074edb2f68619cba9" prot="public" static="no">
        <type><ref refid="struct_quant_lib_1_1_sample" kindref="compound">Sample</ref>&lt; std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &gt;</type>
        <definition>typedef Sample&lt;std::vector&lt;Real&gt; &gt; QuantLib::RandomizedLDS&lt; LDS, PRS &gt;::sample_type</definition>
        <argsstring></argsstring>
        <name>sample_type</name>
        <qualifiedname>QuantLib::RandomizedLDS::sample_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/randomizedlds.hpp" line="61" column="24" bodyfile="ql/math/randomnumbers/randomizedlds.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_randomized_l_d_s_1a2e3b1d983a5e04ef9cb3ca91451f9a8b" prot="private" static="no" mutable="yes">
        <type>LDS</type>
        <definition>LDS QuantLib::RandomizedLDS&lt; LDS, PRS &gt;::ldsg_</definition>
        <argsstring></argsstring>
        <name>ldsg_</name>
        <qualifiedname>QuantLib::RandomizedLDS::ldsg_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/randomizedlds.hpp" line="80" column="21" bodyfile="ql/math/randomnumbers/randomizedlds.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_randomized_l_d_s_1a608de894621931ff7686a66f5b19dfc5" prot="private" static="no" mutable="no">
        <type>LDS</type>
        <definition>LDS QuantLib::RandomizedLDS&lt; LDS, PRS &gt;::pristineldsg_</definition>
        <argsstring></argsstring>
        <name>pristineldsg_</name>
        <qualifiedname>QuantLib::RandomizedLDS::pristineldsg_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/randomizedlds.hpp" line="80" column="27" bodyfile="ql/math/randomnumbers/randomizedlds.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_randomized_l_d_s_1a92c52865e43508b6b696184edb868607" prot="private" static="no" mutable="no">
        <type>PRS</type>
        <definition>PRS QuantLib::RandomizedLDS&lt; LDS, PRS &gt;::prsg_</definition>
        <argsstring></argsstring>
        <name>prsg_</name>
        <qualifiedname>QuantLib::RandomizedLDS::prsg_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/randomizedlds.hpp" line="81" column="13" bodyfile="ql/math/randomnumbers/randomizedlds.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_randomized_l_d_s_1a7e98f041ad745e6fabe1982d6ed22170" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::RandomizedLDS&lt; LDS, PRS &gt;::dimension_</definition>
        <argsstring></argsstring>
        <name>dimension_</name>
        <qualifiedname>QuantLib::RandomizedLDS::dimension_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/randomizedlds.hpp" line="82" column="14" bodyfile="ql/math/randomnumbers/randomizedlds.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_randomized_l_d_s_1af58b953b3042dbefdcd150bd189bc6e0" prot="private" static="no" mutable="yes">
        <type><ref refid="struct_quant_lib_1_1_sample" kindref="compound">sample_type</ref></type>
        <definition>sample_type QuantLib::RandomizedLDS&lt; LDS, PRS &gt;::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <qualifiedname>QuantLib::RandomizedLDS::x</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/randomizedlds.hpp" line="83" column="29" bodyfile="ql/math/randomnumbers/randomizedlds.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_randomized_l_d_s_1ab0b8efaa80c20fc24b6b2704f67d1f96" prot="private" static="no" mutable="no">
        <type><ref refid="struct_quant_lib_1_1_sample" kindref="compound">sample_type</ref></type>
        <definition>sample_type QuantLib::RandomizedLDS&lt; LDS, PRS &gt;::randomizer_</definition>
        <argsstring></argsstring>
        <name>randomizer_</name>
        <qualifiedname>QuantLib::RandomizedLDS::randomizer_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/randomizedlds.hpp" line="83" column="31" bodyfile="ql/math/randomnumbers/randomizedlds.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_randomized_l_d_s_1ad06388733a92eb1b967da3628bdbab0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::RandomizedLDS&lt; LDS, PRS &gt;::RandomizedLDS</definition>
        <argsstring>(const LDS &amp;ldsg, PRS prsg)</argsstring>
        <name>RandomizedLDS</name>
        <qualifiedname>QuantLib::RandomizedLDS::RandomizedLDS</qualifiedname>
        <param>
          <type>const LDS &amp;</type>
          <declname>ldsg</declname>
        </param>
        <param>
          <type>PRS</type>
          <declname>prsg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/randomizedlds.hpp" line="62" column="9" bodyfile="ql/math/randomnumbers/randomizedlds.hpp" bodystart="87" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_randomized_l_d_s_1ab6848db86a1734424deb1930688c4652" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::RandomizedLDS&lt; LDS, PRS &gt;::RandomizedLDS</definition>
        <argsstring>(const LDS &amp;ldsg)</argsstring>
        <name>RandomizedLDS</name>
        <qualifiedname>QuantLib::RandomizedLDS::RandomizedLDS</qualifiedname>
        <param>
          <type>const LDS &amp;</type>
          <declname>ldsg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/randomizedlds.hpp" line="63" column="9" bodyfile="ql/math/randomnumbers/randomizedlds.hpp" bodystart="100" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_randomized_l_d_s_1abe384bc5b34fe71ff19fcf7c03b04308" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::RandomizedLDS&lt; LDS, PRS &gt;::RandomizedLDS</definition>
        <argsstring>(Size dimensionality, BigNatural ldsSeed=0, BigNatural prsSeed=0)</argsstring>
        <name>RandomizedLDS</name>
        <qualifiedname>QuantLib::RandomizedLDS::RandomizedLDS</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>dimensionality</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
          <declname>ldsSeed</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
          <declname>prsSeed</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/randomizedlds.hpp" line="64" column="9" bodyfile="ql/math/randomnumbers/randomizedlds.hpp" bodystart="110" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_randomized_l_d_s_1ae68a2f254c73bf32a86fa549a496260f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="struct_quant_lib_1_1_sample" kindref="compound">sample_type</ref> &amp;</type>
        <definition>const RandomizedLDS&lt; LDS, PRS &gt;::sample_type &amp; QuantLib::RandomizedLDS&lt; LDS, PRS &gt;::nextSequence</definition>
        <argsstring>() const</argsstring>
        <name>nextSequence</name>
        <qualifiedname>QuantLib::RandomizedLDS::nextSequence</qualifiedname>
        <briefdescription>
<para>returns next sample using a given randomizing vector </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/randomizedlds.hpp" line="68" column="27" bodyfile="ql/math/randomnumbers/randomizedlds.hpp" bodystart="122" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_randomized_l_d_s_1a8ee19e582b2d871c3a366e229616e014" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="struct_quant_lib_1_1_sample" kindref="compound">sample_type</ref> &amp;</type>
        <definition>const sample_type &amp; QuantLib::RandomizedLDS&lt; LDS, PRS &gt;::lastSequence</definition>
        <argsstring>() const</argsstring>
        <name>lastSequence</name>
        <qualifiedname>QuantLib::RandomizedLDS::lastSequence</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/randomizedlds.hpp" line="69" column="27" bodyfile="ql/math/randomnumbers/randomizedlds.hpp" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_randomized_l_d_s_1a8d00068df767c8222067ca20ceb5a8da" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::RandomizedLDS&lt; LDS, PRS &gt;::nextRandomizer</definition>
        <argsstring>()</argsstring>
        <name>nextRandomizer</name>
        <qualifiedname>QuantLib::RandomizedLDS::nextRandomizer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>update the randomizing vector and re-initialize the low discrepancy generator </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/randomizedlds.hpp" line="74" column="14" bodyfile="ql/math/randomnumbers/randomizedlds.hpp" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_randomized_l_d_s_1a87086c81a9ed22483a9a9fc66ddc73ce" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::RandomizedLDS&lt; LDS, PRS &gt;::dimension</definition>
        <argsstring>() const</argsstring>
        <name>dimension</name>
        <qualifiedname>QuantLib::RandomizedLDS::dimension</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/randomizedlds.hpp" line="78" column="14" bodyfile="ql/math/randomnumbers/randomizedlds.hpp" bodystart="78" bodyend="78"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Randomized (random shift) low-discrepancy sequence. </para>
    </briefdescription>
    <detaileddescription>
<para>Random-shifts a uniform low-discrepancy sequence of dimension <formula id="4">$ N $</formula> by adding (modulo 1 for each coordinate) a pseudo-random uniform deviate in <formula id="330">$ (0, 1)^N. $</formula> It is used for implementing Randomized Quasi Monte Carlo.</para>
<para>The uniform low discrepancy sequence is supplied by LDS; the uniform pseudo-random sequence is supplied by PRS.</para>
<para>Both class LDS and PRS must implement the following interface: <programlisting><codeline><highlight class="normal">LDS::sample_type<sp/>LDS::nextSequence()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>LDS::dimension()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
</programlisting></para>
<para><simplesect kind="pre"><para>LDS and PRS must have the same dimension <formula id="4">$ N $</formula></para>
</simplesect>
<simplesect kind="warning"><para>Inverting LDS and PRS is possible, but it doesn&apos;t make sense.</para>
</simplesect>
<xrefsect id="todo_1_todo000050"><xreftitle>Todo</xreftitle><xrefdescription><para>implement the other randomization algorithms</para>
</xrefdescription></xrefsect></para>
<para><xrefsect id="test_1_test000060"><xreftitle>Test</xreftitle><xrefdescription><para>correct initialization is tested. </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <location file="ql/math/randomnumbers/randomizedlds.hpp" line="59" column="5" bodyfile="ql/math/randomnumbers/randomizedlds.hpp" bodystart="59" bodyend="84"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_randomized_l_d_s_1a87086c81a9ed22483a9a9fc66ddc73ce" prot="public" virt="non-virtual"><scope>QuantLib::RandomizedLDS</scope><name>dimension</name></member>
      <member refid="class_quant_lib_1_1_randomized_l_d_s_1a7e98f041ad745e6fabe1982d6ed22170" prot="private" virt="non-virtual"><scope>QuantLib::RandomizedLDS</scope><name>dimension_</name></member>
      <member refid="class_quant_lib_1_1_randomized_l_d_s_1a8ee19e582b2d871c3a366e229616e014" prot="public" virt="non-virtual"><scope>QuantLib::RandomizedLDS</scope><name>lastSequence</name></member>
      <member refid="class_quant_lib_1_1_randomized_l_d_s_1a2e3b1d983a5e04ef9cb3ca91451f9a8b" prot="private" virt="non-virtual"><scope>QuantLib::RandomizedLDS</scope><name>ldsg_</name></member>
      <member refid="class_quant_lib_1_1_randomized_l_d_s_1a8d00068df767c8222067ca20ceb5a8da" prot="public" virt="non-virtual"><scope>QuantLib::RandomizedLDS</scope><name>nextRandomizer</name></member>
      <member refid="class_quant_lib_1_1_randomized_l_d_s_1ae68a2f254c73bf32a86fa549a496260f" prot="public" virt="non-virtual"><scope>QuantLib::RandomizedLDS</scope><name>nextSequence</name></member>
      <member refid="class_quant_lib_1_1_randomized_l_d_s_1a608de894621931ff7686a66f5b19dfc5" prot="private" virt="non-virtual"><scope>QuantLib::RandomizedLDS</scope><name>pristineldsg_</name></member>
      <member refid="class_quant_lib_1_1_randomized_l_d_s_1a92c52865e43508b6b696184edb868607" prot="private" virt="non-virtual"><scope>QuantLib::RandomizedLDS</scope><name>prsg_</name></member>
      <member refid="class_quant_lib_1_1_randomized_l_d_s_1ad06388733a92eb1b967da3628bdbab0e" prot="public" virt="non-virtual"><scope>QuantLib::RandomizedLDS</scope><name>RandomizedLDS</name></member>
      <member refid="class_quant_lib_1_1_randomized_l_d_s_1ab6848db86a1734424deb1930688c4652" prot="public" virt="non-virtual"><scope>QuantLib::RandomizedLDS</scope><name>RandomizedLDS</name></member>
      <member refid="class_quant_lib_1_1_randomized_l_d_s_1abe384bc5b34fe71ff19fcf7c03b04308" prot="public" virt="non-virtual"><scope>QuantLib::RandomizedLDS</scope><name>RandomizedLDS</name></member>
      <member refid="class_quant_lib_1_1_randomized_l_d_s_1ab0b8efaa80c20fc24b6b2704f67d1f96" prot="private" virt="non-virtual"><scope>QuantLib::RandomizedLDS</scope><name>randomizer_</name></member>
      <member refid="class_quant_lib_1_1_randomized_l_d_s_1ae3f87375e417049074edb2f68619cba9" prot="public" virt="non-virtual"><scope>QuantLib::RandomizedLDS</scope><name>sample_type</name></member>
      <member refid="class_quant_lib_1_1_randomized_l_d_s_1af58b953b3042dbefdcd150bd189bc6e0" prot="private" virt="non-virtual"><scope>QuantLib::RandomizedLDS</scope><name>x</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

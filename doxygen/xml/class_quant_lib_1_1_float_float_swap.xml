<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_float_float_swap" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::FloatFloatSwap</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_swap" prot="public" virt="non-virtual">QuantLib::Swap</basecompoundref>
    <includes refid="floatfloatswap_8hpp" local="no">floatfloatswap.hpp</includes>
    <innerclass refid="class_quant_lib_1_1_float_float_swap_1_1arguments" prot="public">QuantLib::FloatFloatSwap::arguments</innerclass>
    <innerclass refid="class_quant_lib_1_1_float_float_swap_1_1engine" prot="public">QuantLib::FloatFloatSwap::engine</innerclass>
    <innerclass refid="class_quant_lib_1_1_float_float_swap_1_1results" prot="public">QuantLib::FloatFloatSwap::results</innerclass>
    <sectiondef kind="user-defined">
      <header>Results</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_float_float_swap_1a3da7471af05b28bfcf5414e11f966001" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_swap_1ad0806daa5b111fcb11ce521b19124b4e" kindref="member">Swap::Type</ref></type>
        <definition>Swap::Type QuantLib::FloatFloatSwap::type_</definition>
        <argsstring></argsstring>
        <name>type_</name>
        <qualifiedname>QuantLib::FloatFloatSwap::type_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="138" column="20" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_float_float_swap_1a9b7e300de708ba290880adbf7e4edbf0" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::FloatFloatSwap::nominal1_</definition>
        <argsstring></argsstring>
        <name>nominal1_</name>
        <qualifiedname>QuantLib::FloatFloatSwap::nominal1_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="139" column="21" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_float_float_swap_1a947aff9b67a738d91db9ee386f69be14" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::FloatFloatSwap::nominal2_</definition>
        <argsstring></argsstring>
        <name>nominal2_</name>
        <qualifiedname>QuantLib::FloatFloatSwap::nominal2_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="139" column="31" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_float_float_swap_1a3e7e1450f01271cde7985d6d9e3ae963" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_schedule" kindref="compound">Schedule</ref></type>
        <definition>Schedule QuantLib::FloatFloatSwap::schedule1_</definition>
        <argsstring></argsstring>
        <name>schedule1_</name>
        <qualifiedname>QuantLib::FloatFloatSwap::schedule1_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="140" column="18" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_float_float_swap_1a0e1473840774546e00dedb0c3dcc45e0" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_schedule" kindref="compound">Schedule</ref></type>
        <definition>Schedule QuantLib::FloatFloatSwap::schedule2_</definition>
        <argsstring></argsstring>
        <name>schedule2_</name>
        <qualifiedname>QuantLib::FloatFloatSwap::schedule2_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="140" column="29" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_float_float_swap_1ada070ff01dd6ff612d6dab441f54a348" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_interest_rate_index" kindref="compound">InterestRateIndex</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;InterestRateIndex&gt; QuantLib::FloatFloatSwap::index1_</definition>
        <argsstring></argsstring>
        <name>index1_</name>
        <qualifiedname>QuantLib::FloatFloatSwap::index1_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="141" column="25" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_float_float_swap_1a03a6fc79afb40eb8be6ac28e6f6accc5" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_interest_rate_index" kindref="compound">InterestRateIndex</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;InterestRateIndex&gt; QuantLib::FloatFloatSwap::index2_</definition>
        <argsstring></argsstring>
        <name>index2_</name>
        <qualifiedname>QuantLib::FloatFloatSwap::index2_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="141" column="33" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_float_float_swap_1a43af5d14e31bdd32343b7c7560888a67" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::FloatFloatSwap::gearing1_</definition>
        <argsstring></argsstring>
        <name>gearing1_</name>
        <qualifiedname>QuantLib::FloatFloatSwap::gearing1_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="142" column="21" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_float_float_swap_1a63ff381db8a6c32138e043be5f3eb05c" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::FloatFloatSwap::gearing2_</definition>
        <argsstring></argsstring>
        <name>gearing2_</name>
        <qualifiedname>QuantLib::FloatFloatSwap::gearing2_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="142" column="31" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_float_float_swap_1a51031fe9e0766100c3b48337daafeb07" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::FloatFloatSwap::spread1_</definition>
        <argsstring></argsstring>
        <name>spread1_</name>
        <qualifiedname>QuantLib::FloatFloatSwap::spread1_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="142" column="41" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_float_float_swap_1a090c98deed6236b32da62dfa132eb8be" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::FloatFloatSwap::spread2_</definition>
        <argsstring></argsstring>
        <name>spread2_</name>
        <qualifiedname>QuantLib::FloatFloatSwap::spread2_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="142" column="50" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_float_float_swap_1a25bb545aaa40c5146226d764d97baf68" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::FloatFloatSwap::cappedRate1_</definition>
        <argsstring></argsstring>
        <name>cappedRate1_</name>
        <qualifiedname>QuantLib::FloatFloatSwap::cappedRate1_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="143" column="21" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_float_float_swap_1aecdf12f80cb75d18921ef442055f602c" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::FloatFloatSwap::flooredRate1_</definition>
        <argsstring></argsstring>
        <name>flooredRate1_</name>
        <qualifiedname>QuantLib::FloatFloatSwap::flooredRate1_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="143" column="34" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_float_float_swap_1ae7355c784f5cae229a6e6052067abb1d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::FloatFloatSwap::cappedRate2_</definition>
        <argsstring></argsstring>
        <name>cappedRate2_</name>
        <qualifiedname>QuantLib::FloatFloatSwap::cappedRate2_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="143" column="48" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_float_float_swap_1a42fb6191480fb4b76c8641cd4ea10cc5" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::FloatFloatSwap::flooredRate2_</definition>
        <argsstring></argsstring>
        <name>flooredRate2_</name>
        <qualifiedname>QuantLib::FloatFloatSwap::flooredRate2_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="144" column="13" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_float_float_swap_1afd09975f4b5aa61fbe322bb7a1735b60" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref></type>
        <definition>DayCounter QuantLib::FloatFloatSwap::dayCount1_</definition>
        <argsstring></argsstring>
        <name>dayCount1_</name>
        <qualifiedname>QuantLib::FloatFloatSwap::dayCount1_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="145" column="20" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_float_float_swap_1afadd391b513c7816b6a6e59266824d74" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref></type>
        <definition>DayCounter QuantLib::FloatFloatSwap::dayCount2_</definition>
        <argsstring></argsstring>
        <name>dayCount2_</name>
        <qualifiedname>QuantLib::FloatFloatSwap::dayCount2_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="145" column="31" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_float_float_swap_1aee1b49fda5b4a02cf2de6d9aec1feaf2" prot="private" static="no" mutable="no">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt;bool&gt; QuantLib::FloatFloatSwap::isRedemptionFlow1_</definition>
        <argsstring></argsstring>
        <name>isRedemptionFlow1_</name>
        <qualifiedname>QuantLib::FloatFloatSwap::isRedemptionFlow1_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="146" column="21" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_float_float_swap_1a7ab1fe15f1ed72d450f074a3ce3a3502" prot="private" static="no" mutable="no">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt;bool&gt; QuantLib::FloatFloatSwap::isRedemptionFlow2_</definition>
        <argsstring></argsstring>
        <name>isRedemptionFlow2_</name>
        <qualifiedname>QuantLib::FloatFloatSwap::isRedemptionFlow2_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="146" column="40" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_float_float_swap_1ab3d082e19c163d9251f43e6a040201ad" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
        <definition>BusinessDayConvention QuantLib::FloatFloatSwap::paymentConvention1_</definition>
        <argsstring></argsstring>
        <name>paymentConvention1_</name>
        <qualifiedname>QuantLib::FloatFloatSwap::paymentConvention1_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="147" column="31" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_float_float_swap_1ab3ff675fd5fae2504b25781e7952b787" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
        <definition>BusinessDayConvention QuantLib::FloatFloatSwap::paymentConvention2_</definition>
        <argsstring></argsstring>
        <name>paymentConvention2_</name>
        <qualifiedname>QuantLib::FloatFloatSwap::paymentConvention2_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="147" column="51" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_float_float_swap_1a0eb8f848b49daf14e7e231c99e1daaf6" prot="private" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool QuantLib::FloatFloatSwap::intermediateCapitalExchange_</definition>
        <argsstring></argsstring>
        <name>intermediateCapitalExchange_</name>
        <qualifiedname>QuantLib::FloatFloatSwap::intermediateCapitalExchange_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="148" column="20" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_float_float_swap_1aad29570c69e51417d2cee137a59218ce" prot="private" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool QuantLib::FloatFloatSwap::finalCapitalExchange_</definition>
        <argsstring></argsstring>
        <name>finalCapitalExchange_</name>
        <qualifiedname>QuantLib::FloatFloatSwap::finalCapitalExchange_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="148" column="49" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_float_float_swap_1a737fdee484a18aa33f592795fa791f60" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::FloatFloatSwap::setupArguments</definition>
        <argsstring>(PricingEngine::arguments *args) const override</argsstring>
        <name>setupArguments</name>
        <qualifiedname>QuantLib::FloatFloatSwap::setupArguments</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_instrument_1af7344eebc48a1a361386e5c5a90a8fcc">setupArguments</reimplements>
        <param>
          <type><ref refid="class_quant_lib_1_1_pricing_engine_1_1arguments" kindref="compound">PricingEngine::arguments</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>When a derived argument structure is defined for an instrument, this method should be overridden to fill it. This is mandatory in case a pricing engine is used. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="131" column="14" bodyfile="ql/instruments/floatfloatswap.cpp" bodystart="391" bodyend="525"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_float_float_swap_1a9230f9809e4905890dccc8f872af4be3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::FloatFloatSwap::fetchResults</definition>
        <argsstring>(const PricingEngine::results *) const override</argsstring>
        <name>fetchResults</name>
        <qualifiedname>QuantLib::FloatFloatSwap::fetchResults</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_instrument_1aebe809131db2941325d037c031bbf41b">fetchResults</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_pricing_engine_1_1results" kindref="compound">PricingEngine::results</ref> *</type>
          <defname>r</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>When a derived result structure is defined for an instrument, this method should be overridden to read from it. This is mandatory in case a pricing engine is used. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="132" column="14" bodyfile="ql/instruments/floatfloatswap.cpp" bodystart="529" bodyend="531"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_float_float_swap_1abab48c2421382cc94dfd7cda39a5f64a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::FloatFloatSwap::init</definition>
        <argsstring>(ext::optional&lt; BusinessDayConvention &gt; paymentConvention1, ext::optional&lt; BusinessDayConvention &gt; paymentConvention2)</argsstring>
        <name>init</name>
        <qualifiedname>QuantLib::FloatFloatSwap::init</qualifiedname>
        <param>
          <type>ext::optional&lt; <ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref> &gt;</type>
          <declname>paymentConvention1</declname>
        </param>
        <param>
          <type>ext::optional&lt; <ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref> &gt;</type>
          <declname>paymentConvention2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="135" column="14" bodyfile="ql/instruments/floatfloatswap.cpp" bodystart="111" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_float_float_swap_1a2b8701d339365540e6d13b24fdfacc58" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::FloatFloatSwap::setupExpired</definition>
        <argsstring>() const override</argsstring>
        <name>setupExpired</name>
        <qualifiedname>QuantLib::FloatFloatSwap::setupExpired</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_instrument_1a73d90597fcd3ff52a8aed674393ab574">setupExpired</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must leave the instrument in a consistent state when the expiration condition is met. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="137" column="14" bodyfile="ql/instruments/floatfloatswap.cpp" bodystart="527" bodyend="527"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Inspectors</header>
      <memberdef kind="function" id="class_quant_lib_1_1_float_float_swap_1add7891a00dfc5391023a7a0919c539fd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_swap_1ad0806daa5b111fcb11ce521b19124b4e" kindref="member">Swap::Type</ref></type>
        <definition>Swap::Type QuantLib::FloatFloatSwap::type</definition>
        <argsstring>() const</argsstring>
        <name>type</name>
        <qualifiedname>QuantLib::FloatFloatSwap::type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="96" column="20" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="187" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_float_float_swap_1affe5c71005b9ee469f479a54592da065" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; Real &gt; &amp; QuantLib::FloatFloatSwap::nominal1</definition>
        <argsstring>() const</argsstring>
        <name>nominal1</name>
        <qualifiedname>QuantLib::FloatFloatSwap::nominal1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="97" column="27" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="189" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_float_float_swap_1a814745e993ee3925ab18a37ce7d79525" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; Real &gt; &amp; QuantLib::FloatFloatSwap::nominal2</definition>
        <argsstring>() const</argsstring>
        <name>nominal2</name>
        <qualifiedname>QuantLib::FloatFloatSwap::nominal2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="98" column="27" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="193" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_float_float_swap_1a5ce23a6e6c719726e94a07b222f0186b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_schedule" kindref="compound">Schedule</ref> &amp;</type>
        <definition>const Schedule &amp; QuantLib::FloatFloatSwap::schedule1</definition>
        <argsstring>() const</argsstring>
        <name>schedule1</name>
        <qualifiedname>QuantLib::FloatFloatSwap::schedule1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="100" column="24" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="197" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_float_float_swap_1af62501b4b211b1ed24bf55a6c6b1b962" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_schedule" kindref="compound">Schedule</ref> &amp;</type>
        <definition>const Schedule &amp; QuantLib::FloatFloatSwap::schedule2</definition>
        <argsstring>() const</argsstring>
        <name>schedule2</name>
        <qualifiedname>QuantLib::FloatFloatSwap::schedule2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="101" column="24" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="201" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_float_float_swap_1abf44f90339cf366bd563ecbaca6fc073" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_interest_rate_index" kindref="compound">InterestRateIndex</ref> &gt; &amp;</type>
        <definition>const ext::shared_ptr&lt; InterestRateIndex &gt; &amp; QuantLib::FloatFloatSwap::index1</definition>
        <argsstring>() const</argsstring>
        <name>index1</name>
        <qualifiedname>QuantLib::FloatFloatSwap::index1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="103" column="31" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="206" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_float_float_swap_1a21f37f22a05e0bf984a73c31751bc665" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_interest_rate_index" kindref="compound">InterestRateIndex</ref> &gt; &amp;</type>
        <definition>const ext::shared_ptr&lt; InterestRateIndex &gt; &amp; QuantLib::FloatFloatSwap::index2</definition>
        <argsstring>() const</argsstring>
        <name>index2</name>
        <qualifiedname>QuantLib::FloatFloatSwap::index2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="104" column="31" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="211" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_float_float_swap_1a3860866d75d9b69e91a09ff6978b0e1e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt; Real &gt; QuantLib::FloatFloatSwap::spread1</definition>
        <argsstring>() const</argsstring>
        <name>spread1</name>
        <qualifiedname>QuantLib::FloatFloatSwap::spread1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="106" column="21" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="215" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_float_float_swap_1a53ee9aba2472112234c62819f444d0f0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt; Real &gt; QuantLib::FloatFloatSwap::spread2</definition>
        <argsstring>() const</argsstring>
        <name>spread2</name>
        <qualifiedname>QuantLib::FloatFloatSwap::spread2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="107" column="21" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="217" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_float_float_swap_1a06ed7f231fad3f2a0017870ca0c1af02" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt; Real &gt; QuantLib::FloatFloatSwap::gearing1</definition>
        <argsstring>() const</argsstring>
        <name>gearing1</name>
        <qualifiedname>QuantLib::FloatFloatSwap::gearing1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="109" column="21" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="219" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_float_float_swap_1a02162957c9e0c12ce23151e28a835ae6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt; Real &gt; QuantLib::FloatFloatSwap::gearing2</definition>
        <argsstring>() const</argsstring>
        <name>gearing2</name>
        <qualifiedname>QuantLib::FloatFloatSwap::gearing2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="110" column="21" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="221" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_float_float_swap_1a04c95df433429f4380b6f2770de1733a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>std::vector&lt; Real &gt; QuantLib::FloatFloatSwap::cappedRate1</definition>
        <argsstring>() const</argsstring>
        <name>cappedRate1</name>
        <qualifiedname>QuantLib::FloatFloatSwap::cappedRate1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="112" column="21" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="223" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_float_float_swap_1a0ee614c8c4d7a9836297c58416388108" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>std::vector&lt; Real &gt; QuantLib::FloatFloatSwap::flooredRate1</definition>
        <argsstring>() const</argsstring>
        <name>flooredRate1</name>
        <qualifiedname>QuantLib::FloatFloatSwap::flooredRate1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="113" column="21" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="227" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_float_float_swap_1a5cbd0bb97225db330073a30e76efcf52" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>std::vector&lt; Real &gt; QuantLib::FloatFloatSwap::cappedRate2</definition>
        <argsstring>() const</argsstring>
        <name>cappedRate2</name>
        <qualifiedname>QuantLib::FloatFloatSwap::cappedRate2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="114" column="21" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="225" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_float_float_swap_1a1cb3ea6f6a7679b3600193455df293f0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>std::vector&lt; Real &gt; QuantLib::FloatFloatSwap::flooredRate2</definition>
        <argsstring>() const</argsstring>
        <name>flooredRate2</name>
        <qualifiedname>QuantLib::FloatFloatSwap::flooredRate2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="115" column="21" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="229" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_float_float_swap_1a9d0659747329f247e03315b57b7f0674" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
        <definition>const DayCounter &amp; QuantLib::FloatFloatSwap::dayCount1</definition>
        <argsstring>() const</argsstring>
        <name>dayCount1</name>
        <qualifiedname>QuantLib::FloatFloatSwap::dayCount1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="117" column="26" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="231" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_float_float_swap_1a699cac79c807ca0a217ae6c8f677c80a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
        <definition>const DayCounter &amp; QuantLib::FloatFloatSwap::dayCount2</definition>
        <argsstring>() const</argsstring>
        <name>dayCount2</name>
        <qualifiedname>QuantLib::FloatFloatSwap::dayCount2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="118" column="26" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="235" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_float_float_swap_1a7c106578040f495d82a1c34b38dc52b8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
        <definition>BusinessDayConvention QuantLib::FloatFloatSwap::paymentConvention1</definition>
        <argsstring>() const</argsstring>
        <name>paymentConvention1</name>
        <qualifiedname>QuantLib::FloatFloatSwap::paymentConvention1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="120" column="31" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="239" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_float_float_swap_1a3bf23324b42712483a0e778650f82877" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
        <definition>BusinessDayConvention QuantLib::FloatFloatSwap::paymentConvention2</definition>
        <argsstring>() const</argsstring>
        <name>paymentConvention2</name>
        <qualifiedname>QuantLib::FloatFloatSwap::paymentConvention2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="121" column="31" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="243" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_float_float_swap_1aa3a17dfc043fe86b9eba1d610ed4bcdc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespace_quant_lib_1a14f786c47ee979097c448d96b2defaab" kindref="member">Leg</ref> &amp;</type>
        <definition>const Leg &amp; QuantLib::FloatFloatSwap::leg1</definition>
        <argsstring>() const</argsstring>
        <name>leg1</name>
        <qualifiedname>QuantLib::FloatFloatSwap::leg1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="123" column="19" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="247" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_float_float_swap_1ae059bb7085530bb8c9402bf1b7fdb633" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespace_quant_lib_1a14f786c47ee979097c448d96b2defaab" kindref="member">Leg</ref> &amp;</type>
        <definition>const Leg &amp; QuantLib::FloatFloatSwap::leg2</definition>
        <argsstring>() const</argsstring>
        <name>leg2</name>
        <qualifiedname>QuantLib::FloatFloatSwap::leg2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="124" column="19" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="249" bodyend="249"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_float_float_swap_1ab13379127407bc39580abf587f521e01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FloatFloatSwap::FloatFloatSwap</definition>
        <argsstring>(Swap::Type type, Real nominal1, Real nominal2, Schedule schedule1, ext::shared_ptr&lt; InterestRateIndex &gt; index1, DayCounter dayCount1, Schedule schedule2, ext::shared_ptr&lt; InterestRateIndex &gt; index2, DayCounter dayCount2, bool intermediateCapitalExchange=false, bool finalCapitalExchange=false, Real gearing1=1.0, Real spread1=0.0, Real cappedRate1=Null&lt; Real &gt;(), Real flooredRate1=Null&lt; Real &gt;(), Real gearing2=1.0, Real spread2=0.0, Real cappedRate2=Null&lt; Real &gt;(), Real flooredRate2=Null&lt; Real &gt;(), const ext::optional&lt; BusinessDayConvention &gt; &amp;paymentConvention1=ext::nullopt, const ext::optional&lt; BusinessDayConvention &gt; &amp;paymentConvention2=ext::nullopt)</argsstring>
        <name>FloatFloatSwap</name>
        <qualifiedname>QuantLib::FloatFloatSwap::FloatFloatSwap</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_swap_1ad0806daa5b111fcb11ce521b19124b4e" kindref="member">Swap::Type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>nominal1</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>nominal2</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_schedule" kindref="compound">Schedule</ref></type>
          <declname>schedule1</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_interest_rate_index" kindref="compound">InterestRateIndex</ref> &gt;</type>
          <declname>index1</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref></type>
          <declname>dayCount1</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_schedule" kindref="compound">Schedule</ref></type>
          <declname>schedule2</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_interest_rate_index" kindref="compound">InterestRateIndex</ref> &gt;</type>
          <declname>index2</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref></type>
          <declname>dayCount2</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>intermediateCapitalExchange</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>finalCapitalExchange</declname>
          <defval>false</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>gearing1</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>spread1</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>cappedRate1</declname>
          <defval><ref refid="class_quant_lib_1_1_null" kindref="compound">Null</ref>&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;()</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>flooredRate1</declname>
          <defval><ref refid="class_quant_lib_1_1_null" kindref="compound">Null</ref>&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;()</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>gearing2</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>spread2</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>cappedRate2</declname>
          <defval><ref refid="class_quant_lib_1_1_null" kindref="compound">Null</ref>&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;()</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>flooredRate2</declname>
          <defval><ref refid="class_quant_lib_1_1_null" kindref="compound">Null</ref>&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;()</defval>
        </param>
        <param>
          <type>const ext::optional&lt; <ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref> &gt; &amp;</type>
          <declname>paymentConvention1</declname>
          <defval>ext::nullopt</defval>
        </param>
        <param>
          <type>const ext::optional&lt; <ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref> &gt; &amp;</type>
          <declname>paymentConvention2</declname>
          <defval>ext::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="48" column="9" bodyfile="ql/instruments/floatfloatswap.cpp" bodystart="37" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_float_float_swap_1a98408bb935f1600d0be0693407b2684a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FloatFloatSwap::FloatFloatSwap</definition>
        <argsstring>(Swap::Type type, std::vector&lt; Real &gt; nominal1, std::vector&lt; Real &gt; nominal2, Schedule schedule1, ext::shared_ptr&lt; InterestRateIndex &gt; index1, DayCounter dayCount1, Schedule schedule2, ext::shared_ptr&lt; InterestRateIndex &gt; index2, DayCounter dayCount2, bool intermediateCapitalExchange=false, bool finalCapitalExchange=false, std::vector&lt; Real &gt; gearing1=std::vector&lt; Real &gt;(), std::vector&lt; Real &gt; spread1=std::vector&lt; Real &gt;(), std::vector&lt; Real &gt; cappedRate1=std::vector&lt; Real &gt;(), std::vector&lt; Real &gt; flooredRate1=std::vector&lt; Real &gt;(), std::vector&lt; Real &gt; gearing2=std::vector&lt; Real &gt;(), std::vector&lt; Real &gt; spread2=std::vector&lt; Real &gt;(), std::vector&lt; Real &gt; cappedRate2=std::vector&lt; Real &gt;(), std::vector&lt; Real &gt; flooredRate2=std::vector&lt; Real &gt;(), const ext::optional&lt; BusinessDayConvention &gt; &amp;paymentConvention1=ext::nullopt, const ext::optional&lt; BusinessDayConvention &gt; &amp;paymentConvention2=ext::nullopt)</argsstring>
        <name>FloatFloatSwap</name>
        <qualifiedname>QuantLib::FloatFloatSwap::FloatFloatSwap</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_swap_1ad0806daa5b111fcb11ce521b19124b4e" kindref="member">Swap::Type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
          <declname>nominal1</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
          <declname>nominal2</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_schedule" kindref="compound">Schedule</ref></type>
          <declname>schedule1</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_interest_rate_index" kindref="compound">InterestRateIndex</ref> &gt;</type>
          <declname>index1</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref></type>
          <declname>dayCount1</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_schedule" kindref="compound">Schedule</ref></type>
          <declname>schedule2</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_interest_rate_index" kindref="compound">InterestRateIndex</ref> &gt;</type>
          <declname>index2</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref></type>
          <declname>dayCount2</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>intermediateCapitalExchange</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>finalCapitalExchange</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
          <declname>gearing1</declname>
          <defval>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;()</defval>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
          <declname>spread1</declname>
          <defval>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;()</defval>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
          <declname>cappedRate1</declname>
          <defval>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;()</defval>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
          <declname>flooredRate1</declname>
          <defval>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;()</defval>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
          <declname>gearing2</declname>
          <defval>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;()</defval>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
          <declname>spread2</declname>
          <defval>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;()</defval>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
          <declname>cappedRate2</declname>
          <defval>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;()</defval>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
          <declname>flooredRate2</declname>
          <defval>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;()</defval>
        </param>
        <param>
          <type>const ext::optional&lt; <ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref> &gt; &amp;</type>
          <declname>paymentConvention1</declname>
          <defval>ext::nullopt</defval>
        </param>
        <param>
          <type>const ext::optional&lt; <ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref> &gt; &amp;</type>
          <declname>paymentConvention2</declname>
          <defval>ext::nullopt</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/floatfloatswap.hpp" line="71" column="9" bodyfile="ql/instruments/floatfloatswap.cpp" bodystart="77" bodyend="109"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>float float swap </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::FloatFloatSwap</label>
        <link refid="class_quant_lib_1_1_float_float_swap"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Instrument</label>
        <link refid="class_quant_lib_1_1_instrument"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>QuantLib::Swap</label>
        <link refid="class_quant_lib_1_1_swap"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="1">
        <label>QuantLib::FloatFloatSwap</label>
        <link refid="class_quant_lib_1_1_float_float_swap"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Instrument</label>
        <link refid="class_quant_lib_1_1_instrument"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>valuationDate_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>QuantLib::Swap</label>
        <link refid="class_quant_lib_1_1_swap"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/instruments/floatfloatswap.hpp" line="43" column="5" bodyfile="ql/instruments/floatfloatswap.hpp" bodystart="43" bodyend="149"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_instrument_1a468edb294da268b097c91bf821084c07" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>additionalResults</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a57d2b34e8625ab3d9ffa50c0c7931099" prot="protected" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>additionalResults_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a02070ea7442d30625992c1711030d4b8" prot="protected" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>alwaysForward_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a17c9433135a259e4776baec66204a484" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>alwaysForwardNotifications</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a4c573c48f7eaead5042864ac0eb5b025" prot="protected" virt="virtual"><scope>QuantLib::FloatFloatSwap</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a58b4986a80efa18634483a92c121e26e" prot="protected" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>calculated_</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1a04c95df433429f4380b6f2770de1733a" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>cappedRate1</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1a25bb545aaa40c5146226d764d97baf68" prot="private" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>cappedRate1_</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1a5cbd0bb97225db330073a30e76efcf52" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>cappedRate2</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1ae7355c784f5cae229a6e6052067abb1d" prot="private" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>cappedRate2_</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1a9d0659747329f247e03315b57b7f0674" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>dayCount1</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1afd09975f4b5aa61fbe322bb7a1735b60" prot="private" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>dayCount1_</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1a699cac79c807ca0a217ae6c8f677c80a" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>dayCount2</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1afadd391b513c7816b6a6e59266824d74" prot="private" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>dayCount2_</name></member>
      <member refid="class_quant_lib_1_1_swap_1a6e033a19eb0f2770eefb8b06912b3abe" prot="public" virt="virtual"><scope>QuantLib::FloatFloatSwap</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_swap_1a1c5ee95948349edd10e6f7ad842b2c4a" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>endDiscounts</name></member>
      <member refid="class_quant_lib_1_1_swap_1ac3b82c6fb8b5951424767b5e95e9a0b3" prot="protected" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>endDiscounts_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1ac548cb61c864779db09bd0fac6ae7c81" prot="protected" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>engine_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a03502fb6c606b262c25acd94ff4c1e52" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>errorEstimate</name></member>
      <member refid="class_quant_lib_1_1_instrument_1abb8f4cfa7346fab7a2f3a8c8b4da30f3" prot="protected" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>errorEstimate_</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1a9230f9809e4905890dccc8f872af4be3" prot="public" virt="virtual"><scope>QuantLib::FloatFloatSwap</scope><name>fetchResults</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1aad29570c69e51417d2cee137a59218ce" prot="private" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>finalCapitalExchange_</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1ab13379127407bc39580abf587f521e01" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>FloatFloatSwap</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1a98408bb935f1600d0be0693407b2684a" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>FloatFloatSwap</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1a0ee614c8c4d7a9836297c58416388108" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>flooredRate1</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1aecdf12f80cb75d18921ef442055f602c" prot="private" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>flooredRate1_</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1a1cb3ea6f6a7679b3600193455df293f0" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>flooredRate2</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1a42fb6191480fb4b76c8641cd4ea10cc5" prot="private" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>flooredRate2_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1afac6ee19c3107c453e1347dd8000e023" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>forwardFirstNotificationOnly</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7157f41e83f2c5d924f5c5bafda04d1d" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>freeze</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7bb721fe00c6854e602758aba629ab77" prot="protected" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>frozen_</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1a06ed7f231fad3f2a0017870ca0c1af02" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>gearing1</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1a43af5d14e31bdd32343b7c7560888a67" prot="private" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>gearing1_</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1a02162957c9e0c12ce23151e28a835ae6" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>gearing2</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1a63ff381db8a6c32138e043be5f3eb05c" prot="private" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>gearing2_</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1abf44f90339cf366bd563ecbaca6fc073" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>index1</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1ada070ff01dd6ff612d6dab441f54a348" prot="private" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>index1_</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1a21f37f22a05e0bf984a73c31751bc665" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>index2</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1a03a6fc79afb40eb8be6ac28e6f6accc5" prot="private" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>index2_</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1abab48c2421382cc94dfd7cda39a5f64a" prot="private" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>init</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a5e4c746cbf7999c83dc57f87e241f1cc" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>Instrument</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1a0eb8f848b49daf14e7e231c99e1daaf6" prot="private" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>intermediateCapitalExchange_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a0a7c5d42815a4e16ee2158e24dbfc748" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>isCalculated</name></member>
      <member refid="class_quant_lib_1_1_swap_1aa8b6f838ad681344ecd604db48ea0b8e" prot="public" virt="virtual"><scope>QuantLib::FloatFloatSwap</scope><name>isExpired</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1aee1b49fda5b4a02cf2de6d9aec1feaf2" prot="private" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>isRedemptionFlow1_</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1a7ab1fe15f1ed72d450f074a3ce3a3502" prot="private" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>isRedemptionFlow2_</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a26f18f4ff7faaaebd8eae50e064b493e" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>LazyObject</name></member>
      <member refid="class_quant_lib_1_1_swap_1a6d4f202e19e6d9505ebc111f197244ae" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>leg</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1aa3a17dfc043fe86b9eba1d610ed4bcdc" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>leg1</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1ae059bb7085530bb8c9402bf1b7fdb633" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>leg2</name></member>
      <member refid="class_quant_lib_1_1_swap_1a79494447be4eebf5caf0f0940a9b204f" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>legBPS</name></member>
      <member refid="class_quant_lib_1_1_swap_1af40f759b518542c642d71cbc262cab84" prot="protected" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>legBPS_</name></member>
      <member refid="class_quant_lib_1_1_swap_1af1ef52511fbca1b23ffddf978f678d98" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>legNPV</name></member>
      <member refid="class_quant_lib_1_1_swap_1ac85f31b7bf3b97e6c03848c64bef33af" prot="protected" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>legNPV_</name></member>
      <member refid="class_quant_lib_1_1_swap_1a153af8a79c61fda7e68e65fee4817e35" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>legs</name></member>
      <member refid="class_quant_lib_1_1_swap_1a1ca08a7d6e5957950d40383eb4cf0b63" prot="protected" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>legs_</name></member>
      <member refid="class_quant_lib_1_1_swap_1a0a9d27adbab145e513399a18852e4d4f" prot="public" virt="virtual"><scope>QuantLib::FloatFloatSwap</scope><name>maturityDate</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1affe5c71005b9ee469f479a54592da065" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>nominal1</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1a9b7e300de708ba290880adbf7e4edbf0" prot="private" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>nominal1_</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1a814745e993ee3925ab18a37ce7d79525" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>nominal2</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1a947aff9b67a738d91db9ee386f69be14" prot="private" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>nominal2_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a5afdd9698267cd30ddd10cf01f3487b0" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>NPV</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a997663780100d30ae59b14ac0285322d" prot="protected" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>NPV_</name></member>
      <member refid="class_quant_lib_1_1_swap_1ab698ee91db4089a0fef963f6857c1c28" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>npvDateDiscount</name></member>
      <member refid="class_quant_lib_1_1_swap_1a390b5eebe9b8a8915d393465a93809ad" prot="protected" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>npvDateDiscount_</name></member>
      <member refid="class_quant_lib_1_1_swap_1aed6ec56ad5e15f7de107e98fb1526b66" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>numberOfLegs</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::FloatFloatSwap</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::FloatFloatSwap</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::FloatFloatSwap</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::FloatFloatSwap</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::FloatFloatSwap</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::QuantLib::Observer::"><scope>QuantLib::FloatFloatSwap</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_swap_1ad0806daa5b111fcb11ce521b19124b4ea31009108a6e84c98136e1053dbb41824" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>Payer</name></member>
      <member refid="class_quant_lib_1_1_swap_1a2530b88cf2c011a623c667838b8a9aa2" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>payer</name></member>
      <member refid="class_quant_lib_1_1_swap_1a82468c93e5a364d73e164df46bd50445" prot="protected" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>payer_</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1a7c106578040f495d82a1c34b38dc52b8" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>paymentConvention1</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1ab3d082e19c163d9251f43e6a040201ad" prot="private" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>paymentConvention1_</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1a3bf23324b42712483a0e778650f82877" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>paymentConvention2</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1ab3ff675fd5fae2504b25781e7952b787" prot="private" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>paymentConvention2_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1aad23f546bbca156a49a95ca2bee124c4" prot="protected" virt="virtual"><scope>QuantLib::FloatFloatSwap</scope><name>performCalculations</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a70c9b24e50132408d8d9ce4f6674662a" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>recalculate</name></member>
      <member refid="class_quant_lib_1_1_swap_1ad0806daa5b111fcb11ce521b19124b4ea04e66442c860dac71042b03c64af4831" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>Receiver</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a266c15a12160a89f4f9707db85f9fa27" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>result</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1a5ce23a6e6c719726e94a07b222f0186b" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>schedule1</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1a3e7e1450f01271cde7985d6d9e3ae963" prot="private" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>schedule1_</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1af62501b4b211b1ed24bf55a6c6b1b962" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>schedule2</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1a0e1473840774546e00dedb0c3dcc45e0" prot="private" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>schedule2_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a3444386491f179f64f4f0aac24997071" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>setPricingEngine</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1a737fdee484a18aa33f592795fa791f60" prot="public" virt="virtual"><scope>QuantLib::FloatFloatSwap</scope><name>setupArguments</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1a2b8701d339365540e6d13b24fdfacc58" prot="private" virt="virtual"><scope>QuantLib::FloatFloatSwap</scope><name>setupExpired</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1a3860866d75d9b69e91a09ff6978b0e1e" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>spread1</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1a51031fe9e0766100c3b48337daafeb07" prot="private" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>spread1_</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1a53ee9aba2472112234c62819f444d0f0" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>spread2</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1a090c98deed6236b32da62dfa132eb8be" prot="private" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>spread2_</name></member>
      <member refid="class_quant_lib_1_1_swap_1ae4df409ff659d19c6c76347d0d92c47b" prot="public" virt="virtual"><scope>QuantLib::FloatFloatSwap</scope><name>startDate</name></member>
      <member refid="class_quant_lib_1_1_swap_1a9a138527c286814c9dba09b3242bbda2" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>startDiscounts</name></member>
      <member refid="class_quant_lib_1_1_swap_1aa235d3e00058faa863f579d9665301e4" prot="protected" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>startDiscounts_</name></member>
      <member refid="class_quant_lib_1_1_swap_1a88c4221d6c0156759c5e84c3188459c8" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>Swap</name></member>
      <member refid="class_quant_lib_1_1_swap_1a546a1d0746c86ad1fed70a0904b18024" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>Swap</name></member>
      <member refid="class_quant_lib_1_1_swap_1a953a237540a310c121aebbf8b4f7621e" prot="protected" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>Swap</name></member>
      <member refid="class_quant_lib_1_1_swap_1ad0806daa5b111fcb11ce521b19124b4e" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>Type</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1add7891a00dfc5391023a7a0919c539fd" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>type</name></member>
      <member refid="class_quant_lib_1_1_float_float_swap_1a3da7471af05b28bfcf5414e11f966001" prot="private" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>type_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a2e0e4786666453024b9d4e0761f2770b" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>unfreeze</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1adee2bf49be5c4c78736be293321a856d" prot="public" virt="virtual"><scope>QuantLib::FloatFloatSwap</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a53a0fc1adc70b73387ad53009725835d" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>valuationDate</name></member>
      <member refid="class_quant_lib_1_1_instrument_1aa60b558fc82f022e13535360ac4a6fed" prot="protected" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>valuationDate_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a9d719c43bb627177a90d7d12324a2d6e" prot="public" virt="non-virtual"><scope>QuantLib::FloatFloatSwap</scope><name>~LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::FloatFloatSwap</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::FloatFloatSwap</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

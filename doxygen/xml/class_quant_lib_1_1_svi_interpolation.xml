<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_svi_interpolation" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::SviInterpolation</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_interpolation" prot="public" virt="non-virtual">QuantLib::Interpolation</basecompoundref>
    <includes refid="sviinterpolation_8hpp" local="no">sviinterpolation.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_svi_interpolation_1a962f01d03ef156a84c80c44512135dc3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I1</type>
          </param>
          <param>
            <type>class I2</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>QuantLib::SviInterpolation::SviInterpolation</definition>
        <argsstring>(const I1 &amp;xBegin, const I1 &amp;xEnd, const I2 &amp;yBegin, Time t, const Real &amp;forward, Real a, Real b, Real sigma, Real rho, Real m, bool aIsFixed, bool bIsFixed, bool sigmaIsFixed, bool rhoIsFixed, bool mIsFixed, bool vegaWeighted=true, const ext::shared_ptr&lt; EndCriteria &gt; &amp;endCriteria=ext::shared_ptr&lt; EndCriteria &gt;(), const ext::shared_ptr&lt; OptimizationMethod &gt; &amp;optMethod=ext::shared_ptr&lt; OptimizationMethod &gt;(), const Real errorAccept=0.0020, const bool useMaxError=false, const Size maxGuesses=50)</argsstring>
        <name>SviInterpolation</name>
        <qualifiedname>QuantLib::SviInterpolation::SviInterpolation</qualifiedname>
        <param>
          <type>const I1 &amp;</type>
          <declname>xBegin</declname>
        </param>
        <param>
          <type>const I1 &amp;</type>
          <declname>xEnd</declname>
        </param>
        <param>
          <type>const I2 &amp;</type>
          <declname>yBegin</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &amp;</type>
          <declname>forward</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>sigma</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>rho</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>m</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aIsFixed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bIsFixed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>sigmaIsFixed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>rhoIsFixed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>mIsFixed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>vegaWeighted</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_end_criteria" kindref="compound">EndCriteria</ref> &gt; &amp;</type>
          <declname>endCriteria</declname>
          <defval>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_end_criteria" kindref="compound">EndCriteria</ref> &gt;()</defval>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_optimization_method" kindref="compound">OptimizationMethod</ref> &gt; &amp;</type>
          <declname>optMethod</declname>
          <defval>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_optimization_method" kindref="compound">OptimizationMethod</ref> &gt;()</defval>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>errorAccept</declname>
          <defval>0.0020</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>useMaxError</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>maxGuesses</declname>
          <defval>50</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolation.hpp" line="147" column="5" bodyfile="ql/experimental/volatility/sviinterpolation.hpp" bodystart="147" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_svi_interpolation_1a2e0637ec132028f80af5e942dacd5409" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SviInterpolation::expiry</definition>
        <argsstring>() const</argsstring>
        <name>expiry</name>
        <qualifiedname>QuantLib::SviInterpolation::expiry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolation.hpp" line="170" column="10" bodyfile="ql/experimental/volatility/sviinterpolation.hpp" bodystart="170" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_svi_interpolation_1a0de035a12c4840d32cee7ade1a870f7e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SviInterpolation::forward</definition>
        <argsstring>() const</argsstring>
        <name>forward</name>
        <qualifiedname>QuantLib::SviInterpolation::forward</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolation.hpp" line="171" column="10" bodyfile="ql/experimental/volatility/sviinterpolation.hpp" bodystart="171" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_svi_interpolation_1a54ec0762190fa9501b4dd50314321a80" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SviInterpolation::a</definition>
        <argsstring>() const</argsstring>
        <name>a</name>
        <qualifiedname>QuantLib::SviInterpolation::a</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolation.hpp" line="172" column="10" bodyfile="ql/experimental/volatility/sviinterpolation.hpp" bodystart="172" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_svi_interpolation_1a447bb330b2a2bc73b88f9e38ae109509" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SviInterpolation::b</definition>
        <argsstring>() const</argsstring>
        <name>b</name>
        <qualifiedname>QuantLib::SviInterpolation::b</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolation.hpp" line="173" column="10" bodyfile="ql/experimental/volatility/sviinterpolation.hpp" bodystart="173" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_svi_interpolation_1a5fde8d783ccd9b0fd40dd1f497a004dd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SviInterpolation::sigma</definition>
        <argsstring>() const</argsstring>
        <name>sigma</name>
        <qualifiedname>QuantLib::SviInterpolation::sigma</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolation.hpp" line="174" column="10" bodyfile="ql/experimental/volatility/sviinterpolation.hpp" bodystart="174" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_svi_interpolation_1a84dacf34bc70db79d868d47a53f361eb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SviInterpolation::rho</definition>
        <argsstring>() const</argsstring>
        <name>rho</name>
        <qualifiedname>QuantLib::SviInterpolation::rho</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolation.hpp" line="175" column="10" bodyfile="ql/experimental/volatility/sviinterpolation.hpp" bodystart="175" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_svi_interpolation_1a8c7c05871d88436d5eb7b265daf5ee67" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SviInterpolation::m</definition>
        <argsstring>() const</argsstring>
        <name>m</name>
        <qualifiedname>QuantLib::SviInterpolation::m</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolation.hpp" line="176" column="10" bodyfile="ql/experimental/volatility/sviinterpolation.hpp" bodystart="176" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_svi_interpolation_1a7337c97ac902d5174d30a22a6ac51593" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SviInterpolation::rmsError</definition>
        <argsstring>() const</argsstring>
        <name>rmsError</name>
        <qualifiedname>QuantLib::SviInterpolation::rmsError</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolation.hpp" line="177" column="10" bodyfile="ql/experimental/volatility/sviinterpolation.hpp" bodystart="177" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_svi_interpolation_1a07d451ac4dfdf7b361156757bffe8627" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SviInterpolation::maxError</definition>
        <argsstring>() const</argsstring>
        <name>maxError</name>
        <qualifiedname>QuantLib::SviInterpolation::maxError</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolation.hpp" line="178" column="10" bodyfile="ql/experimental/volatility/sviinterpolation.hpp" bodystart="178" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_svi_interpolation_1ac4ef496207fdd03105d1308b65d28a29" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; Real &gt; &amp; QuantLib::SviInterpolation::interpolationWeights</definition>
        <argsstring>() const</argsstring>
        <name>interpolationWeights</name>
        <qualifiedname>QuantLib::SviInterpolation::interpolationWeights</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolation.hpp" line="179" column="23" bodyfile="ql/experimental/volatility/sviinterpolation.hpp" bodystart="179" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_svi_interpolation_1a4905cee0c370fa7ef5c51b2a220bdd35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>EndCriteria::Type</type>
        <definition>EndCriteria::Type QuantLib::SviInterpolation::endCriteria</definition>
        <argsstring>()</argsstring>
        <name>endCriteria</name>
        <qualifiedname>QuantLib::SviInterpolation::endCriteria</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolation.hpp" line="182" column="23" bodyfile="ql/experimental/volatility/sviinterpolation.hpp" bodystart="182" bodyend="182"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_svi_interpolation_1a540dd8439d552b56607264bb334c3a17" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1detail_1_1_x_a_b_r_coeff_holder" kindref="compound">detail::XABRCoeffHolder</ref>&lt; <ref refid="struct_quant_lib_1_1detail_1_1_svi_specs" kindref="compound">detail::SviSpecs</ref> &gt; &amp;</type>
        <definition>const detail::XABRCoeffHolder&lt; detail::SviSpecs &gt; &amp; QuantLib::SviInterpolation::coeffs</definition>
        <argsstring>() const</argsstring>
        <name>coeffs</name>
        <qualifiedname>QuantLib::SviInterpolation::coeffs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolation.hpp" line="185" column="35" bodyfile="ql/experimental/volatility/sviinterpolation.hpp" bodystart="185" bodyend="187"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Svi smile interpolation between discrete volatility points. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>QuantLib::Extrapolator</label>
        <link refid="class_quant_lib_1_1_extrapolator"/>
      </node>
      <node id="2">
        <label>QuantLib::Interpolation</label>
        <link refid="class_quant_lib_1_1_interpolation"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::SviInterpolation</label>
        <link refid="class_quant_lib_1_1_svi_interpolation"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>QuantLib::Extrapolator</label>
        <link refid="class_quant_lib_1_1_extrapolator"/>
      </node>
      <node id="2">
        <label>QuantLib::Interpolation</label>
        <link refid="class_quant_lib_1_1_interpolation"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::SviInterpolation</label>
        <link refid="class_quant_lib_1_1_svi_interpolation"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/volatility/sviinterpolation.hpp" line="144" column="1" bodyfile="ql/experimental/volatility/sviinterpolation.hpp" bodystart="144" bodyend="188"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_svi_interpolation_1a54ec0762190fa9501b4dd50314321a80" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolation</scope><name>a</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1ab3936a9b5b5c163d3e511437c16c1d9e" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolation</scope><name>allowsExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolation_1a447bb330b2a2bc73b88f9e38ae109509" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolation</scope><name>b</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1ab682157f4f0585bc28beefc6c22c8ba8" prot="protected" virt="non-virtual"><scope>QuantLib::SviInterpolation</scope><name>checkRange</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolation_1a540dd8439d552b56607264bb334c3a17" prot="private" virt="non-virtual"><scope>QuantLib::SviInterpolation</scope><name>coeffs</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1ab52a971431083a0a474266d6cdc9f936" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolation</scope><name>derivative</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1a6af69387d5cae0fe84d6a0c858406218" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolation</scope><name>disableExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1aca518c22ea0e7c6a410757877f11756c" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolation</scope><name>empty</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1a5f7b5650a44d6c63095bc739470c8bfb" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolation</scope><name>enableExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolation_1a4905cee0c370fa7ef5c51b2a220bdd35" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolation</scope><name>endCriteria</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolation_1a2e0637ec132028f80af5e942dacd5409" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolation</scope><name>expiry</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1af1c3adaccdfaf07d3d07edaa234444f7" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolation</scope><name>Extrapolator</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolation_1a0de035a12c4840d32cee7ade1a870f7e" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolation</scope><name>forward</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1aef7940748a211476a0ed80e3a6ca9b9b" prot="protected" virt="non-virtual"><scope>QuantLib::SviInterpolation</scope><name>impl_</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1a3357fa39f1e41da02be1792133f6d622" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolation</scope><name>Interpolation</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolation_1ac4ef496207fdd03105d1308b65d28a29" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolation</scope><name>interpolationWeights</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1af0892ba060b7b7d58943718b074f079a" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolation</scope><name>isInRange</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolation_1a8c7c05871d88436d5eb7b265daf5ee67" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolation</scope><name>m</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolation_1a07d451ac4dfdf7b361156757bffe8627" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolation</scope><name>maxError</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1a9e0ba688e60feed84158204bf22b678d" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolation</scope><name>operator()</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1a5b8ec18bc4927757f4a04967f13b271c" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolation</scope><name>primitive</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolation_1a84dacf34bc70db79d868d47a53f361eb" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolation</scope><name>rho</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolation_1a7337c97ac902d5174d30a22a6ac51593" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolation</scope><name>rmsError</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1afab97bcd82695d553682b5f6eebb1718" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolation</scope><name>secondDerivative</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolation_1a5fde8d783ccd9b0fd40dd1f497a004dd" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolation</scope><name>sigma</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolation_1a962f01d03ef156a84c80c44512135dc3" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolation</scope><name>SviInterpolation</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1a56cfc87cb5966ee36d72e5ffc7b1ff5c" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolation</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1a12711f5ec2e165fdb5104f3979855cc4" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolation</scope><name>xMax</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1afc10233f6b565f10e291389631e5ea1f" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolation</scope><name>xMin</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1af0ca0156436ffbce159183198eb27e2e" prot="public" virt="virtual"><scope>QuantLib::SviInterpolation</scope><name>~Extrapolator</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1a2b6d1246d8676354fb8f1efb03c9852f" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolation</scope><name>~Interpolation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

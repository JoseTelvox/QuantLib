<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_black_calibration_helper" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::BlackCalibrationHelper</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_lazy_object" prot="public" virt="non-virtual">QuantLib::LazyObject</basecompoundref>
    <basecompoundref refid="class_quant_lib_1_1_calibration_helper" prot="public" virt="non-virtual">QuantLib::CalibrationHelper</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_cap_helper" prot="public" virt="non-virtual">QuantLib::CapHelper</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_heston_model_helper" prot="public" virt="non-virtual">QuantLib::HestonModelHelper</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_swaption_helper" prot="public" virt="non-virtual">QuantLib::SwaptionHelper</derivedcompoundref>
    <includes refid="calibrationhelper_8hpp" local="no">calibrationhelper.hpp</includes>
    <innerclass refid="class_quant_lib_1_1_black_calibration_helper_1_1_implied_volatility_helper" prot="public">QuantLib::BlackCalibrationHelper::ImpliedVolatilityHelper</innerclass>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_quant_lib_1_1_black_calibration_helper_1ad0c37f18b5a7437948984d502cf452d1" prot="public" static="no" strong="no">
        <type></type>
        <name>CalibrationErrorType</name>
        <qualifiedname>QuantLib::BlackCalibrationHelper::CalibrationErrorType</qualifiedname>
        <enumvalue id="class_quant_lib_1_1_black_calibration_helper_1ad0c37f18b5a7437948984d502cf452d1af6737ba30d0d15e1d859ca571e22cc7b" prot="public">
          <name>RelativePriceError</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_black_calibration_helper_1ad0c37f18b5a7437948984d502cf452d1a02ff583d39aaad1fdc360d1ebfd6fa1b" prot="public">
          <name>PriceError</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_black_calibration_helper_1ad0c37f18b5a7437948984d502cf452d1a6292b805aac22ccbdfb4c2aa7d84b715" prot="public">
          <name>ImpliedVolError</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/calibrationhelper.hpp" line="50" column="9" bodyfile="ql/models/calibrationhelper.hpp" bodystart="50" bodyend="51"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_black_calibration_helper_1a4953b2c78a885a3c1153dcd4a7e25081" prot="protected" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::BlackCalibrationHelper::marketValue_</definition>
        <argsstring></argsstring>
        <name>marketValue_</name>
        <qualifiedname>QuantLib::BlackCalibrationHelper::marketValue_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/calibrationhelper.hpp" line="98" column="22" bodyfile="ql/models/calibrationhelper.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_black_calibration_helper_1a7475b5378fd94c1e93c2909ec1a396b1" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
        <definition>Handle&lt;Quote&gt; QuantLib::BlackCalibrationHelper::volatility_</definition>
        <argsstring></argsstring>
        <name>volatility_</name>
        <qualifiedname>QuantLib::BlackCalibrationHelper::volatility_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/calibrationhelper.hpp" line="99" column="16" bodyfile="ql/models/calibrationhelper.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_black_calibration_helper_1aa2a18de0c484abc5a4df19bc98e9d84d" prot="protected" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_pricing_engine" kindref="compound">PricingEngine</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;PricingEngine&gt; QuantLib::BlackCalibrationHelper::engine_</definition>
        <argsstring></argsstring>
        <name>engine_</name>
        <qualifiedname>QuantLib::BlackCalibrationHelper::engine_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/calibrationhelper.hpp" line="100" column="25" bodyfile="ql/models/calibrationhelper.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_black_calibration_helper_1a36706d6fac4b20c8cf294c1f8a7a2e16" prot="protected" static="no" mutable="no">
        <type>const VolatilityType</type>
        <definition>const VolatilityType QuantLib::BlackCalibrationHelper::volatilityType_</definition>
        <argsstring></argsstring>
        <name>volatilityType_</name>
        <qualifiedname>QuantLib::BlackCalibrationHelper::volatilityType_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/calibrationhelper.hpp" line="101" column="30" bodyfile="ql/models/calibrationhelper.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_black_calibration_helper_1a313c93ae9ad8622c93afe6d76474271f" prot="protected" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::BlackCalibrationHelper::shift_</definition>
        <argsstring></argsstring>
        <name>shift_</name>
        <qualifiedname>QuantLib::BlackCalibrationHelper::shift_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/calibrationhelper.hpp" line="102" column="20" bodyfile="ql/models/calibrationhelper.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_black_calibration_helper_1aaa9a22f8a43da69704315206cb6d375d" prot="private" static="no" mutable="no">
        <type>const CalibrationErrorType</type>
        <definition>const CalibrationErrorType QuantLib::BlackCalibrationHelper::calibrationErrorType_</definition>
        <argsstring></argsstring>
        <name>calibrationErrorType_</name>
        <qualifiedname>QuantLib::BlackCalibrationHelper::calibrationErrorType_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/calibrationhelper.hpp" line="106" column="36" bodyfile="ql/models/calibrationhelper.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_black_calibration_helper_1a477df55babc564e206fcf320cc6eb24c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::BlackCalibrationHelper::BlackCalibrationHelper</definition>
        <argsstring>(Handle&lt; Quote &gt; volatility, CalibrationErrorType calibrationErrorType=RelativePriceError, const VolatilityType type=ShiftedLognormal, const Real shift=0.0)</argsstring>
        <name>BlackCalibrationHelper</name>
        <qualifiedname>QuantLib::BlackCalibrationHelper::BlackCalibrationHelper</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
          <declname>volatility</declname>
        </param>
        <param>
          <type>CalibrationErrorType</type>
          <declname>calibrationErrorType</declname>
          <defval>RelativePriceError</defval>
        </param>
        <param>
          <type>const VolatilityType</type>
          <declname>type</declname>
          <defval>ShiftedLognormal</defval>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>shift</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/calibrationhelper.hpp" line="53" column="9" bodyfile="ql/models/calibrationhelper.hpp" bodystart="53" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_black_calibration_helper_1ad61f4667f3db57d46fdd71ea49bd6433" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::BlackCalibrationHelper::performCalculations</definition>
        <argsstring>() const override</argsstring>
        <name>performCalculations</name>
        <qualifiedname>QuantLib::BlackCalibrationHelper::performCalculations</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_lazy_object_1aafa5583a3743d9f93fa40da5b62e1ff8">performCalculations</reimplements>
        <reimplementedby refid="class_quant_lib_1_1_cap_helper_1a900820f8c505ec5166d77a948606d8ff">performCalculations</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_heston_model_helper_1a1491b44fc695f84e2cd798aa18db7c03">performCalculations</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_swaption_helper_1a4665cdb1ea1d409d188e91a563714baf">performCalculations</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must implement any calculations which must be (re)done in order to calculate the desired results. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/calibrationhelper.hpp" line="62" column="14" bodyfile="ql/models/calibrationhelper.hpp" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_black_calibration_helper_1adb2295d22872b7f624239b3ad7f6f73b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
        <definition>Handle&lt; Quote &gt; QuantLib::BlackCalibrationHelper::volatility</definition>
        <argsstring>() const</argsstring>
        <name>volatility</name>
        <qualifiedname>QuantLib::BlackCalibrationHelper::volatility</qualifiedname>
        <briefdescription>
<para>returns the volatility <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/calibrationhelper.hpp" line="67" column="16" bodyfile="ql/models/calibrationhelper.hpp" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_black_calibration_helper_1af91f1b9770402e12ac06bda4d401c510" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>VolatilityType</type>
        <definition>VolatilityType QuantLib::BlackCalibrationHelper::volatilityType</definition>
        <argsstring>() const</argsstring>
        <name>volatilityType</name>
        <qualifiedname>QuantLib::BlackCalibrationHelper::volatilityType</qualifiedname>
        <briefdescription>
<para>returns the volatility type </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/calibrationhelper.hpp" line="70" column="24" bodyfile="ql/models/calibrationhelper.hpp" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_black_calibration_helper_1aa780b826711423299ee216cd8ccc40d0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::BlackCalibrationHelper::marketValue</definition>
        <argsstring>() const</argsstring>
        <name>marketValue</name>
        <qualifiedname>QuantLib::BlackCalibrationHelper::marketValue</qualifiedname>
        <briefdescription>
<para>returns the actual price of the instrument (from volatility) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/calibrationhelper.hpp" line="73" column="14" bodyfile="ql/models/calibrationhelper.hpp" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_black_calibration_helper_1a14a74949a453678460f9b723c047eb71" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::BlackCalibrationHelper::modelValue</definition>
        <argsstring>() const =0</argsstring>
        <name>modelValue</name>
        <qualifiedname>QuantLib::BlackCalibrationHelper::modelValue</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_cap_helper_1ae07ab26f4f25c58b9211dbd37c64d853">modelValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_heston_model_helper_1a97a850982c12b5143b0dedda35d06b94">modelValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_swaption_helper_1a2a74861b79a33913fd43432f60b68b2c">modelValue</reimplementedby>
        <briefdescription>
<para>returns the price of the instrument according to the model </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/calibrationhelper.hpp" line="76" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_black_calibration_helper_1a2722e738c93c59974863f478ab102a58" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::BlackCalibrationHelper::calibrationError</definition>
        <argsstring>() override</argsstring>
        <name>calibrationError</name>
        <qualifiedname>QuantLib::BlackCalibrationHelper::calibrationError</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_calibration_helper_1a175a23e1cbdc1d748f227a8018f3e752">calibrationError</reimplements>
        <briefdescription>
<para>returns the error resulting from the model valuation </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/calibrationhelper.hpp" line="79" column="14" bodyfile="ql/models/calibrationhelper.cpp" bodystart="52" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_black_calibration_helper_1a588593059372e6a4fd3a5d8f321c6eff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void QuantLib::BlackCalibrationHelper::addTimesTo</definition>
        <argsstring>(std::list&lt; Time &gt; &amp;times) const =0</argsstring>
        <name>addTimesTo</name>
        <qualifiedname>QuantLib::BlackCalibrationHelper::addTimesTo</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_cap_helper_1a9f1b523e60808fb29d42e5f6b245e501">addTimesTo</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_heston_model_helper_1aff30b9b02da5bf3c17ab46166c186c29">addTimesTo</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_swaption_helper_1ad5f56f8a73c3f35982753e3bde11c388">addTimesTo</reimplementedby>
        <param>
          <type>std::list&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt; &amp;</type>
          <declname>times</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/calibrationhelper.hpp" line="81" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_black_calibration_helper_1a4a3a58fc494790845a1866d1c9a32e15" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
        <definition>Volatility QuantLib::BlackCalibrationHelper::impliedVolatility</definition>
        <argsstring>(Real targetValue, Real accuracy, Size maxEvaluations, Volatility minVol, Volatility maxVol) const</argsstring>
        <name>impliedVolatility</name>
        <qualifiedname>QuantLib::BlackCalibrationHelper::impliedVolatility</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>targetValue</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>accuracy</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>maxEvaluations</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
          <declname>minVol</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
          <declname>maxVol</declname>
        </param>
        <briefdescription>
<para>Black volatility implied by the model. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/calibrationhelper.hpp" line="84" column="20" bodyfile="ql/models/calibrationhelper.cpp" bodystart="40" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_black_calibration_helper_1a5ad3a0f6853a78be83832da1dd452e88" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::BlackCalibrationHelper::blackPrice</definition>
        <argsstring>(Volatility volatility) const =0</argsstring>
        <name>blackPrice</name>
        <qualifiedname>QuantLib::BlackCalibrationHelper::blackPrice</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_cap_helper_1a5d04239938e53e095b570a9c9a422a6d">blackPrice</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_heston_model_helper_1aab3916bce5fe58f2f979b58f06b734c6">blackPrice</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_swaption_helper_1a442feb4fc879e5d83140a5d398902c88">blackPrice</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
          <declname>volatility</declname>
        </param>
        <briefdescription>
<para>Black or Bachelier price given a volatility. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/calibrationhelper.hpp" line="91" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_black_calibration_helper_1a494a781c1b9f32d46166aac427e368af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::BlackCalibrationHelper::setPricingEngine</definition>
        <argsstring>(const ext::shared_ptr&lt; PricingEngine &gt; &amp;engine)</argsstring>
        <name>setPricingEngine</name>
        <qualifiedname>QuantLib::BlackCalibrationHelper::setPricingEngine</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_pricing_engine" kindref="compound">PricingEngine</ref> &gt; &amp;</type>
          <declname>engine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/calibrationhelper.hpp" line="93" column="14" bodyfile="ql/models/calibrationhelper.hpp" bodystart="93" bodyend="95"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>liquid Black76 market instrument used during calibration </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::BlackCalibrationHelper</label>
        <link refid="class_quant_lib_1_1_black_calibration_helper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::CalibrationHelper</label>
        <link refid="class_quant_lib_1_1_calibration_helper"/>
      </node>
      <node id="6">
        <label>QuantLib::CapHelper</label>
        <link refid="class_quant_lib_1_1_cap_helper"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::HestonModelHelper</label>
        <link refid="class_quant_lib_1_1_heston_model_helper"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="8">
        <label>QuantLib::SwaptionHelper</label>
        <link refid="class_quant_lib_1_1_swaption_helper"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::BlackCalibrationHelper</label>
        <link refid="class_quant_lib_1_1_black_calibration_helper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>volatility_</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::CalibrationHelper</label>
        <link refid="class_quant_lib_1_1_calibration_helper"/>
      </node>
      <node id="6">
        <label>QuantLib::Handle&lt; QuantLib::Quote &gt;</label>
        <link refid="class_quant_lib_1_1_handle"/>
      </node>
      <node id="2">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </collaborationgraph>
    <location file="ql/models/calibrationhelper.hpp" line="48" column="5" bodyfile="ql/models/calibrationhelper.hpp" bodystart="48" bodyend="107"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1a588593059372e6a4fd3a5d8f321c6eff" prot="public" virt="pure-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>addTimesTo</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a02070ea7442d30625992c1711030d4b8" prot="protected" virt="non-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>alwaysForward_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a17c9433135a259e4776baec66204a484" prot="public" virt="non-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>alwaysForwardNotifications</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1a477df55babc564e206fcf320cc6eb24c" prot="public" virt="non-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>BlackCalibrationHelper</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1a5ad3a0f6853a78be83832da1dd452e88" prot="public" virt="pure-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>blackPrice</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a5244c7f83592375a0ea9048296435fd1" prot="protected" virt="virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a58b4986a80efa18634483a92c121e26e" prot="protected" virt="non-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>calculated_</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1a2722e738c93c59974863f478ab102a58" prot="public" virt="virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>calibrationError</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1ad0c37f18b5a7437948984d502cf452d1" prot="public" virt="non-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>CalibrationErrorType</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1aaa9a22f8a43da69704315206cb6d375d" prot="private" virt="non-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>calibrationErrorType_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1aa2a18de0c484abc5a4df19bc98e9d84d" prot="protected" virt="non-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>engine_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1afac6ee19c3107c453e1347dd8000e023" prot="public" virt="non-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>forwardFirstNotificationOnly</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7157f41e83f2c5d924f5c5bafda04d1d" prot="public" virt="non-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>freeze</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7bb721fe00c6854e602758aba629ab77" prot="protected" virt="non-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>frozen_</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1a4a3a58fc494790845a1866d1c9a32e15" prot="public" virt="non-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>impliedVolatility</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1ad0c37f18b5a7437948984d502cf452d1a6292b805aac22ccbdfb4c2aa7d84b715" prot="public" virt="non-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>ImpliedVolError</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a0a7c5d42815a4e16ee2158e24dbfc748" prot="public" virt="non-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>isCalculated</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a26f18f4ff7faaaebd8eae50e064b493e" prot="public" virt="non-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>LazyObject</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1aa780b826711423299ee216cd8ccc40d0" prot="public" virt="non-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>marketValue</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1a4953b2c78a885a3c1153dcd4a7e25081" prot="protected" virt="non-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>marketValue_</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1a14a74949a453678460f9b723c047eb71" prot="public" virt="pure-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>modelValue</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::BlackCalibrationHelper</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::BlackCalibrationHelper</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::BlackCalibrationHelper</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::BlackCalibrationHelper</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::BlackCalibrationHelper</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::QuantLib::Observer::"><scope>QuantLib::BlackCalibrationHelper</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1ad61f4667f3db57d46fdd71ea49bd6433" prot="public" virt="virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>performCalculations</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1ad0c37f18b5a7437948984d502cf452d1a02ff583d39aaad1fdc360d1ebfd6fa1b" prot="public" virt="non-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>PriceError</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a70c9b24e50132408d8d9ce4f6674662a" prot="public" virt="non-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>recalculate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1ad0c37f18b5a7437948984d502cf452d1af6737ba30d0d15e1d859ca571e22cc7b" prot="public" virt="non-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>RelativePriceError</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1a494a781c1b9f32d46166aac427e368af" prot="public" virt="non-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>setPricingEngine</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1a313c93ae9ad8622c93afe6d76474271f" prot="protected" virt="non-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>shift_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a2e0e4786666453024b9d4e0761f2770b" prot="public" virt="non-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>unfreeze</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1adee2bf49be5c4c78736be293321a856d" prot="public" virt="virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1adb2295d22872b7f624239b3ad7f6f73b" prot="public" virt="non-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>volatility</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1a7475b5378fd94c1e93c2909ec1a396b1" prot="protected" virt="non-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>volatility_</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1af91f1b9770402e12ac06bda4d401c510" prot="public" virt="non-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>volatilityType</name></member>
      <member refid="class_quant_lib_1_1_black_calibration_helper_1a36706d6fac4b20c8cf294c1f8a7a2e16" prot="protected" virt="non-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>volatilityType_</name></member>
      <member refid="class_quant_lib_1_1_calibration_helper_1a54ce4cbc7441b8851a293066e206bbe4" prot="public" virt="virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>~CalibrationHelper</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a9d719c43bb627177a90d7d12324a2d6e" prot="public" virt="non-virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>~LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::BlackCalibrationHelper</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

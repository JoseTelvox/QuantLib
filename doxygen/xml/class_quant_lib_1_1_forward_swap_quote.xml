<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_forward_swap_quote" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::ForwardSwapQuote</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_quote" prot="public" virt="non-virtual">QuantLib::Quote</basecompoundref>
    <basecompoundref refid="class_quant_lib_1_1_lazy_object" prot="public" virt="non-virtual">QuantLib::LazyObject</basecompoundref>
    <includes refid="forwardswapquote_8hpp" local="no">forwardswapquote.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Observer interface</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_swap_quote_1a072d8da9f169cd32f95516bf0249039c" prot="protected" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_swap_index" kindref="compound">SwapIndex</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;SwapIndex&gt; QuantLib::ForwardSwapQuote::swapIndex_</definition>
        <argsstring></argsstring>
        <name>swapIndex_</name>
        <qualifiedname>QuantLib::ForwardSwapQuote::swapIndex_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quotes/forwardswapquote.hpp" line="57" column="25" bodyfile="ql/quotes/forwardswapquote.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_swap_quote_1a94a8cd421a8b3a709fbe5d73b66986d9" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
        <definition>Handle&lt;Quote&gt; QuantLib::ForwardSwapQuote::spread_</definition>
        <argsstring></argsstring>
        <name>spread_</name>
        <qualifiedname>QuantLib::ForwardSwapQuote::spread_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quotes/forwardswapquote.hpp" line="58" column="16" bodyfile="ql/quotes/forwardswapquote.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_swap_quote_1a834b386990e0e4eca05f6afc5dca2704" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref></type>
        <definition>Period QuantLib::ForwardSwapQuote::fwdStart_</definition>
        <argsstring></argsstring>
        <name>fwdStart_</name>
        <qualifiedname>QuantLib::ForwardSwapQuote::fwdStart_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quotes/forwardswapquote.hpp" line="59" column="16" bodyfile="ql/quotes/forwardswapquote.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_swap_quote_1ab58fe95173c9ff0c83ba1b73c5fa3ada" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::ForwardSwapQuote::evaluationDate_</definition>
        <argsstring></argsstring>
        <name>evaluationDate_</name>
        <qualifiedname>QuantLib::ForwardSwapQuote::evaluationDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quotes/forwardswapquote.hpp" line="61" column="14" bodyfile="ql/quotes/forwardswapquote.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_swap_quote_1a6b89ac5a15e3f3f40cb22bea47000318" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::ForwardSwapQuote::valueDate_</definition>
        <argsstring></argsstring>
        <name>valueDate_</name>
        <qualifiedname>QuantLib::ForwardSwapQuote::valueDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quotes/forwardswapquote.hpp" line="61" column="30" bodyfile="ql/quotes/forwardswapquote.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_swap_quote_1ab15dd4b484e2653d1760ea374e782724" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::ForwardSwapQuote::startDate_</definition>
        <argsstring></argsstring>
        <name>startDate_</name>
        <qualifiedname>QuantLib::ForwardSwapQuote::startDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quotes/forwardswapquote.hpp" line="61" column="41" bodyfile="ql/quotes/forwardswapquote.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_swap_quote_1adbed2f595b82aa5b9a1b5912948cfb7a" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::ForwardSwapQuote::fixingDate_</definition>
        <argsstring></argsstring>
        <name>fixingDate_</name>
        <qualifiedname>QuantLib::ForwardSwapQuote::fixingDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quotes/forwardswapquote.hpp" line="61" column="52" bodyfile="ql/quotes/forwardswapquote.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_swap_quote_1ad3cce085a8733440ae36ac00d22c5987" prot="protected" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_vanilla_swap" kindref="compound">VanillaSwap</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;VanillaSwap&gt; QuantLib::ForwardSwapQuote::swap_</definition>
        <argsstring></argsstring>
        <name>swap_</name>
        <qualifiedname>QuantLib::ForwardSwapQuote::swap_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quotes/forwardswapquote.hpp" line="62" column="25" bodyfile="ql/quotes/forwardswapquote.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_swap_quote_1a4ce147e5a6e01db5f2bad5d23e1c2e97" prot="protected" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::ForwardSwapQuote::result_</definition>
        <argsstring></argsstring>
        <name>result_</name>
        <qualifiedname>QuantLib::ForwardSwapQuote::result_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quotes/forwardswapquote.hpp" line="64" column="22" bodyfile="ql/quotes/forwardswapquote.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_swap_quote_1a284586d3db49edb05665146977d6ba17" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::ForwardSwapQuote::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <qualifiedname>QuantLib::ForwardSwapQuote::update</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_observer_1a07905c55dca858470fcf4a1aea0005aa">update</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must be implemented in derived classes. An instance of Observer does not call this method directly: instead, it will be called by the observables the instance registered with when they need to notify any changes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quotes/forwardswapquote.hpp" line="48" column="14" bodyfile="ql/quotes/forwardswapquote.cpp" bodystart="49" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_swap_quote_1ada5973d3907f90f76b25362b2dd30ef1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
        <definition>const Date &amp; QuantLib::ForwardSwapQuote::valueDate</definition>
        <argsstring>() const</argsstring>
        <name>valueDate</name>
        <qualifiedname>QuantLib::ForwardSwapQuote::valueDate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quotes/forwardswapquote.hpp" line="50" column="20" bodyfile="ql/quotes/forwardswapquote.cpp" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_swap_quote_1a1b2b243dec682d59016472699caf4118" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
        <definition>const Date &amp; QuantLib::ForwardSwapQuote::startDate</definition>
        <argsstring>() const</argsstring>
        <name>startDate</name>
        <qualifiedname>QuantLib::ForwardSwapQuote::startDate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quotes/forwardswapquote.hpp" line="51" column="20" bodyfile="ql/quotes/forwardswapquote.cpp" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_swap_quote_1a4ed602aafd6d074bf371cc37cdbe2c74" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
        <definition>const Date &amp; QuantLib::ForwardSwapQuote::fixingDate</definition>
        <argsstring>() const</argsstring>
        <name>fixingDate</name>
        <qualifiedname>QuantLib::ForwardSwapQuote::fixingDate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quotes/forwardswapquote.hpp" line="52" column="20" bodyfile="ql/quotes/forwardswapquote.cpp" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_swap_quote_1a5a14b98e39f3583ed616d42da188768b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::ForwardSwapQuote::initializeDates</definition>
        <argsstring>()</argsstring>
        <name>initializeDates</name>
        <qualifiedname>QuantLib::ForwardSwapQuote::initializeDates</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quotes/forwardswapquote.hpp" line="54" column="14" bodyfile="ql/quotes/forwardswapquote.cpp" bodystart="37" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_swap_quote_1a1277254a69273612ed56e9a6ec774d90" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::ForwardSwapQuote::performCalculations</definition>
        <argsstring>() const override</argsstring>
        <name>performCalculations</name>
        <qualifiedname>QuantLib::ForwardSwapQuote::performCalculations</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_lazy_object_1aafa5583a3743d9f93fa40da5b62e1ff8">performCalculations</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must implement any calculations which must be (re)done in order to calculate the desired results. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quotes/forwardswapquote.hpp" line="55" column="14" bodyfile="ql/quotes/forwardswapquote.cpp" bodystart="88" bodyend="98"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Quote interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_swap_quote_1ad89d3fd83193a3f65ccdf08318239bbd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ForwardSwapQuote::value</definition>
        <argsstring>() const override</argsstring>
        <name>value</name>
        <qualifiedname>QuantLib::ForwardSwapQuote::value</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_quote_1a25f93d1c25434ae28f20f9416b497ccb">value</reimplements>
        <briefdescription>
<para>returns the current value </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quotes/forwardswapquote.hpp" line="43" column="14" bodyfile="ql/quotes/forwardswapquote.cpp" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_swap_quote_1a375187292ca7157c49361901d31bfd44" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QuantLib::ForwardSwapQuote::isValid</definition>
        <argsstring>() const override</argsstring>
        <name>isValid</name>
        <qualifiedname>QuantLib::ForwardSwapQuote::isValid</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_quote_1a9a340a974b8403b9385867b62bb8ae2d">isValid</reimplements>
        <briefdescription>
<para>returns true if the <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> holds a valid value </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quotes/forwardswapquote.hpp" line="44" column="14" bodyfile="ql/quotes/forwardswapquote.cpp" bodystart="77" bodyend="86"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_forward_swap_quote_1aee296544237ca75af07fc9a18c4a84ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ForwardSwapQuote::ForwardSwapQuote</definition>
        <argsstring>(ext::shared_ptr&lt; SwapIndex &gt; swapIndex, Handle&lt; Quote &gt; spread, const Period &amp;fwdStart)</argsstring>
        <name>ForwardSwapQuote</name>
        <qualifiedname>QuantLib::ForwardSwapQuote::ForwardSwapQuote</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_swap_index" kindref="compound">SwapIndex</ref> &gt;</type>
          <declname>swapIndex</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
          <declname>spread</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>fwdStart</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quotes/forwardswapquote.hpp" line="38" column="9" bodyfile="ql/quotes/forwardswapquote.cpp" bodystart="26" bodyend="35"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para><ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> for a forward starting swap. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::ForwardSwapQuote</label>
        <link refid="class_quant_lib_1_1_forward_swap_quote"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>QuantLib::Quote</label>
        <link refid="class_quant_lib_1_1_quote"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="1">
        <label>QuantLib::ForwardSwapQuote</label>
        <link refid="class_quant_lib_1_1_forward_swap_quote"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>spread_</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>fwdStart_</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>evaluationDate_</edgelabel>
          <edgelabel>fixingDate_</edgelabel>
          <edgelabel>startDate_</edgelabel>
          <edgelabel>valueDate_</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::Handle&lt; QuantLib::Quote &gt;</label>
        <link refid="class_quant_lib_1_1_handle"/>
      </node>
      <node id="4">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="7">
        <label>QuantLib::Period</label>
        <link refid="class_quant_lib_1_1_period"/>
      </node>
      <node id="2">
        <label>QuantLib::Quote</label>
        <link refid="class_quant_lib_1_1_quote"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/quotes/forwardswapquote.hpp" line="35" column="5" bodyfile="ql/quotes/forwardswapquote.hpp" bodystart="36" bodyend="65"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_lazy_object_1a02070ea7442d30625992c1711030d4b8" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>alwaysForward_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a17c9433135a259e4776baec66204a484" prot="public" virt="non-virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>alwaysForwardNotifications</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a5244c7f83592375a0ea9048296435fd1" prot="protected" virt="virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a58b4986a80efa18634483a92c121e26e" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>calculated_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_forward_swap_quote_1ab58fe95173c9ff0c83ba1b73c5fa3ada" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>evaluationDate_</name></member>
      <member refid="class_quant_lib_1_1_forward_swap_quote_1a4ed602aafd6d074bf371cc37cdbe2c74" prot="public" virt="non-virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>fixingDate</name></member>
      <member refid="class_quant_lib_1_1_forward_swap_quote_1adbed2f595b82aa5b9a1b5912948cfb7a" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>fixingDate_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1afac6ee19c3107c453e1347dd8000e023" prot="public" virt="non-virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>forwardFirstNotificationOnly</name></member>
      <member refid="class_quant_lib_1_1_forward_swap_quote_1aee296544237ca75af07fc9a18c4a84ee" prot="public" virt="non-virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>ForwardSwapQuote</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7157f41e83f2c5d924f5c5bafda04d1d" prot="public" virt="non-virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>freeze</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7bb721fe00c6854e602758aba629ab77" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>frozen_</name></member>
      <member refid="class_quant_lib_1_1_forward_swap_quote_1a834b386990e0e4eca05f6afc5dca2704" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>fwdStart_</name></member>
      <member refid="class_quant_lib_1_1_forward_swap_quote_1a5a14b98e39f3583ed616d42da188768b" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>initializeDates</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a0a7c5d42815a4e16ee2158e24dbfc748" prot="public" virt="non-virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>isCalculated</name></member>
      <member refid="class_quant_lib_1_1_forward_swap_quote_1a375187292ca7157c49361901d31bfd44" prot="public" virt="virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>isValid</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a26f18f4ff7faaaebd8eae50e064b493e" prot="public" virt="non-virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Quote::"><scope>QuantLib::ForwardSwapQuote</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Quote::"><scope>QuantLib::ForwardSwapQuote</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::ForwardSwapQuote</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::ForwardSwapQuote</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Quote::"><scope>QuantLib::ForwardSwapQuote</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::QuantLib::Observer::"><scope>QuantLib::ForwardSwapQuote</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_forward_swap_quote_1a1277254a69273612ed56e9a6ec774d90" prot="protected" virt="virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>performCalculations</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a70c9b24e50132408d8d9ce4f6674662a" prot="public" virt="non-virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>recalculate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_forward_swap_quote_1a4ce147e5a6e01db5f2bad5d23e1c2e97" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>result_</name></member>
      <member refid="class_quant_lib_1_1_forward_swap_quote_1a94a8cd421a8b3a709fbe5d73b66986d9" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>spread_</name></member>
      <member refid="class_quant_lib_1_1_forward_swap_quote_1a1b2b243dec682d59016472699caf4118" prot="public" virt="non-virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>startDate</name></member>
      <member refid="class_quant_lib_1_1_forward_swap_quote_1ab15dd4b484e2653d1760ea374e782724" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>startDate_</name></member>
      <member refid="class_quant_lib_1_1_forward_swap_quote_1ad3cce085a8733440ae36ac00d22c5987" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>swap_</name></member>
      <member refid="class_quant_lib_1_1_forward_swap_quote_1a072d8da9f169cd32f95516bf0249039c" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>swapIndex_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a2e0e4786666453024b9d4e0761f2770b" prot="public" virt="non-virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>unfreeze</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_forward_swap_quote_1a284586d3db49edb05665146977d6ba17" prot="public" virt="virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_forward_swap_quote_1ad89d3fd83193a3f65ccdf08318239bbd" prot="public" virt="virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>value</name></member>
      <member refid="class_quant_lib_1_1_forward_swap_quote_1ada5973d3907f90f76b25362b2dd30ef1" prot="public" virt="non-virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>valueDate</name></member>
      <member refid="class_quant_lib_1_1_forward_swap_quote_1a6b89ac5a15e3f3f40cb22bea47000318" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>valueDate_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a9d719c43bb627177a90d7d12324a2d6e" prot="public" virt="non-virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>~LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_quote_1a0433957cb1683b2ca329ef56bd741143" prot="public" virt="non-virtual"><scope>QuantLib::ForwardSwapQuote</scope><name>~Quote</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

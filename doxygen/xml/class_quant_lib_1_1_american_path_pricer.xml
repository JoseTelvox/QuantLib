<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_american_path_pricer" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::AmericanPathPricer</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_early_exercise_path_pricer" prot="public" virt="non-virtual">QuantLib::EarlyExercisePathPricer&lt; Path &gt;</basecompoundref>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_american_path_pricer_1a2bf1dcc4ce300fe9f3df36088f9a6728" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AmericanPathPricer::scalingValue_</definition>
        <argsstring></argsstring>
        <name>scalingValue_</name>
        <qualifiedname>QuantLib::AmericanPathPricer::scalingValue_</qualifiedname>
        <initializer>= 1.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="99" column="14" bodyfile="ql/pricingengines/vanilla/mcamericanengine.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_american_path_pricer_1aebd66a4e1a4a68dfd2db2af19cebf288" prot="protected" static="no" mutable="no">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_payoff" kindref="compound">Payoff</ref> &gt;</type>
        <definition>const ext::shared_ptr&lt;Payoff&gt; QuantLib::AmericanPathPricer::payoff_</definition>
        <argsstring></argsstring>
        <name>payoff_</name>
        <qualifiedname>QuantLib::AmericanPathPricer::payoff_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="100" column="31" bodyfile="ql/pricingengines/vanilla/mcamericanengine.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_american_path_pricer_1a7eb80c70c97b3599aaf4ab8897e1a13c" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::function&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>(<ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>)&gt; &gt;</type>
        <definition>std::vector&lt;std::function&lt;Real(Real)&gt; &gt; QuantLib::AmericanPathPricer::v_</definition>
        <argsstring></argsstring>
        <name>v_</name>
        <qualifiedname>QuantLib::AmericanPathPricer::v_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="101" column="21" bodyfile="ql/pricingengines/vanilla/mcamericanengine.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_american_path_pricer_1acfdc84fcbcb1c9523b6a7af4ef412cc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::AmericanPathPricer::AmericanPathPricer</definition>
        <argsstring>(ext::shared_ptr&lt; Payoff &gt; payoff, Size polynomialOrder, LsmBasisSystem::PolynomialType polynomialType)</argsstring>
        <name>AmericanPathPricer</name>
        <qualifiedname>QuantLib::AmericanPathPricer::AmericanPathPricer</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_payoff" kindref="compound">Payoff</ref> &gt;</type>
          <declname>payoff</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>polynomialOrder</declname>
        </param>
        <param>
          <type>LsmBasisSystem::PolynomialType</type>
          <declname>polynomialType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="87" column="9" bodyfile="ql/pricingengines/vanilla/mcamericanengine.cpp" bodystart="31" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_american_path_pricer_1a132b68dde9122b815489979927d623bb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AmericanPathPricer::state</definition>
        <argsstring>(const Path &amp;path, Size t) const override</argsstring>
        <name>state</name>
        <qualifiedname>QuantLib::AmericanPathPricer::state</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_early_exercise_path_pricer_1a2c981c5b31899820758f6546c6bb3d42">state</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_path" kindref="compound">Path</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="91" column="14" bodyfile="ql/pricingengines/vanilla/mcamericanengine.cpp" bodystart="63" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_american_path_pricer_1a6dfdd3f8a152c9a49d18d4a1527825f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AmericanPathPricer::operator()</definition>
        <argsstring>(const Path &amp;path, Size t) const override</argsstring>
        <name>operator()</name>
        <qualifiedname>QuantLib::AmericanPathPricer::operator()</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_early_exercise_path_pricer_1a7cd31d290cb2a712232bd80a6e914d6a">operator()</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_path" kindref="compound">Path</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="92" column="14" bodyfile="ql/pricingengines/vanilla/mcamericanengine.cpp" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_american_path_pricer_1a01c7f10df96cc3f3badb889179df5ba1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; std::function&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>(<ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>)&gt; &gt;</type>
        <definition>std::vector&lt; std::function&lt; Real(Real)&gt; &gt; QuantLib::AmericanPathPricer::basisSystem</definition>
        <argsstring>() const override</argsstring>
        <name>basisSystem</name>
        <qualifiedname>QuantLib::AmericanPathPricer::basisSystem</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_early_exercise_path_pricer_1aa060a7f04c06fdac78232729b73f35ef">basisSystem</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="94" column="21" bodyfile="ql/pricingengines/vanilla/mcamericanengine.cpp" bodystart="70" bodyend="72"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_american_path_pricer_1ae00852e74a33a581e3aad083f69a05c7" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AmericanPathPricer::payoff</definition>
        <argsstring>(Real state) const</argsstring>
        <name>payoff</name>
        <qualifiedname>QuantLib::AmericanPathPricer::payoff</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="97" column="14" bodyfile="ql/pricingengines/vanilla/mcamericanengine.cpp" bodystart="55" bodyend="57"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::AmericanPathPricer</label>
        <link refid="class_quant_lib_1_1_american_path_pricer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::EarlyExercisePathPricer&lt; Path &gt;</label>
        <link refid="class_quant_lib_1_1_early_exercise_path_pricer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::AmericanPathPricer</label>
        <link refid="class_quant_lib_1_1_american_path_pricer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::EarlyExercisePathPricer&lt; Path &gt;</label>
        <link refid="class_quant_lib_1_1_early_exercise_path_pricer"/>
      </node>
    </collaborationgraph>
    <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="85" column="5" bodyfile="ql/pricingengines/vanilla/mcamericanengine.hpp" bodystart="85" bodyend="102"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_american_path_pricer_1acfdc84fcbcb1c9523b6a7af4ef412cc9" prot="public" virt="non-virtual"><scope>QuantLib::AmericanPathPricer</scope><name>AmericanPathPricer</name></member>
      <member refid="class_quant_lib_1_1_american_path_pricer_1a01c7f10df96cc3f3badb889179df5ba1" prot="public" virt="virtual"><scope>QuantLib::AmericanPathPricer</scope><name>basisSystem</name></member>
      <member refid="class_quant_lib_1_1_american_path_pricer_1a6dfdd3f8a152c9a49d18d4a1527825f1" prot="public" virt="virtual"><scope>QuantLib::AmericanPathPricer</scope><name>operator()</name></member>
      <member refid="class_quant_lib_1_1_american_path_pricer_1ae00852e74a33a581e3aad083f69a05c7" prot="protected" virt="non-virtual"><scope>QuantLib::AmericanPathPricer</scope><name>payoff</name></member>
      <member refid="class_quant_lib_1_1_american_path_pricer_1aebd66a4e1a4a68dfd2db2af19cebf288" prot="protected" virt="non-virtual"><scope>QuantLib::AmericanPathPricer</scope><name>payoff_</name></member>
      <member refid="class_quant_lib_1_1_american_path_pricer_1a2bf1dcc4ce300fe9f3df36088f9a6728" prot="protected" virt="non-virtual"><scope>QuantLib::AmericanPathPricer</scope><name>scalingValue_</name></member>
      <member refid="class_quant_lib_1_1_american_path_pricer_1a132b68dde9122b815489979927d623bb" prot="public" virt="virtual"><scope>QuantLib::AmericanPathPricer</scope><name>state</name></member>
      <member refid="class_quant_lib_1_1_early_exercise_path_pricer_1a8afd6fa5622a1d228a2a605e42cf1741" prot="public" virt="non-virtual"><scope>QuantLib::AmericanPathPricer</scope><name>StateType</name></member>
      <member refid="class_quant_lib_1_1_american_path_pricer_1a7eb80c70c97b3599aaf4ab8897e1a13c" prot="protected" virt="non-virtual"><scope>QuantLib::AmericanPathPricer</scope><name>v_</name></member>
      <member refid="class_quant_lib_1_1_early_exercise_path_pricer_1a8c85720c7a27199c88a1d5b818dac065" prot="public" virt="virtual"><scope>QuantLib::AmericanPathPricer</scope><name>~EarlyExercisePathPricer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

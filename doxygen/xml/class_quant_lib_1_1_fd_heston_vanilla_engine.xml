<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_fd_heston_vanilla_engine" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::FdHestonVanillaEngine</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_generic_model_engine" prot="public" virt="non-virtual">QuantLib::GenericModelEngine&lt; HestonModel, VanillaOption::arguments, VanillaOption::results &gt;</basecompoundref>
    <includes refid="fdhestonvanillaengine_8hpp" local="no">fdhestonvanillaengine.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_fd_heston_vanilla_engine_1a45bd7e05f35462ea05921148a1cf40ce" prot="private" static="no" mutable="no">
        <type>DividendSchedule</type>
        <definition>DividendSchedule QuantLib::FdHestonVanillaEngine::dividends_</definition>
        <argsstring></argsstring>
        <name>dividends_</name>
        <qualifiedname>QuantLib::FdHestonVanillaEngine::dividends_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonvanillaengine.hpp" line="103" column="26" bodyfile="ql/pricingengines/vanilla/fdhestonvanillaengine.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fd_heston_vanilla_engine_1acd48182802e7572044788f0ce3f1f9a3" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>const Size QuantLib::FdHestonVanillaEngine::tGrid_</definition>
        <argsstring></argsstring>
        <name>tGrid_</name>
        <qualifiedname>QuantLib::FdHestonVanillaEngine::tGrid_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonvanillaengine.hpp" line="104" column="20" bodyfile="ql/pricingengines/vanilla/fdhestonvanillaengine.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fd_heston_vanilla_engine_1a2f4224bff9c46ae8ff956bfafb57ecb3" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>const Size QuantLib::FdHestonVanillaEngine::xGrid_</definition>
        <argsstring></argsstring>
        <name>xGrid_</name>
        <qualifiedname>QuantLib::FdHestonVanillaEngine::xGrid_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonvanillaengine.hpp" line="104" column="27" bodyfile="ql/pricingengines/vanilla/fdhestonvanillaengine.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fd_heston_vanilla_engine_1a111c76096bc5ae83c306caa14eb0c4b9" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>const Size QuantLib::FdHestonVanillaEngine::vGrid_</definition>
        <argsstring></argsstring>
        <name>vGrid_</name>
        <qualifiedname>QuantLib::FdHestonVanillaEngine::vGrid_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonvanillaengine.hpp" line="104" column="34" bodyfile="ql/pricingengines/vanilla/fdhestonvanillaengine.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fd_heston_vanilla_engine_1a622a3987100495975d16b82210c8e9d1" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>const Size QuantLib::FdHestonVanillaEngine::dampingSteps_</definition>
        <argsstring></argsstring>
        <name>dampingSteps_</name>
        <qualifiedname>QuantLib::FdHestonVanillaEngine::dampingSteps_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonvanillaengine.hpp" line="104" column="41" bodyfile="ql/pricingengines/vanilla/fdhestonvanillaengine.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fd_heston_vanilla_engine_1a686905ddfd2ea2f70681b9285a8cda8f" prot="private" static="no" mutable="no">
        <type>const <ref refid="struct_quant_lib_1_1_fdm_scheme_desc" kindref="compound">FdmSchemeDesc</ref></type>
        <definition>const FdmSchemeDesc QuantLib::FdHestonVanillaEngine::schemeDesc_</definition>
        <argsstring></argsstring>
        <name>schemeDesc_</name>
        <qualifiedname>QuantLib::FdHestonVanillaEngine::schemeDesc_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonvanillaengine.hpp" line="105" column="29" bodyfile="ql/pricingengines/vanilla/fdhestonvanillaengine.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fd_heston_vanilla_engine_1a73efdc46b9696ab524d6442a9a148a83" prot="private" static="no" mutable="no">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_local_vol_term_structure" kindref="compound">LocalVolTermStructure</ref> &gt;</type>
        <definition>const ext::shared_ptr&lt;LocalVolTermStructure&gt; QuantLib::FdHestonVanillaEngine::leverageFct_</definition>
        <argsstring></argsstring>
        <name>leverageFct_</name>
        <qualifiedname>QuantLib::FdHestonVanillaEngine::leverageFct_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonvanillaengine.hpp" line="106" column="31" bodyfile="ql/pricingengines/vanilla/fdhestonvanillaengine.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fd_heston_vanilla_engine_1a2c9e4bea9becbfe9e2b3672a20d45e46" prot="private" static="no" mutable="no">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_fdm_quanto_helper" kindref="compound">FdmQuantoHelper</ref> &gt;</type>
        <definition>const ext::shared_ptr&lt;FdmQuantoHelper&gt; QuantLib::FdHestonVanillaEngine::quantoHelper_</definition>
        <argsstring></argsstring>
        <name>quantoHelper_</name>
        <qualifiedname>QuantLib::FdHestonVanillaEngine::quantoHelper_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonvanillaengine.hpp" line="107" column="31" bodyfile="ql/pricingengines/vanilla/fdhestonvanillaengine.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fd_heston_vanilla_engine_1abf2f37b1b110d17a08e218a17fc62915" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::FdHestonVanillaEngine::mixingFactor_</definition>
        <argsstring></argsstring>
        <name>mixingFactor_</name>
        <qualifiedname>QuantLib::FdHestonVanillaEngine::mixingFactor_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonvanillaengine.hpp" line="108" column="20" bodyfile="ql/pricingengines/vanilla/fdhestonvanillaengine.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fd_heston_vanilla_engine_1a980486a7bd10fa0dda231236a4d13d2f" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::FdHestonVanillaEngine::strikes_</definition>
        <argsstring></argsstring>
        <name>strikes_</name>
        <qualifiedname>QuantLib::FdHestonVanillaEngine::strikes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonvanillaengine.hpp" line="110" column="21" bodyfile="ql/pricingengines/vanilla/fdhestonvanillaengine.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fd_heston_vanilla_engine_1ad0a57985f7ed05fdfd6d51f36d637c59" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; std::pair&lt; <ref refid="class_quant_lib_1_1_option_1_1arguments" kindref="compound">VanillaOption::arguments</ref>, <ref refid="class_quant_lib_1_1_instrument_1_1results" kindref="compound">VanillaOption::results</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::pair&lt;VanillaOption::arguments, VanillaOption::results&gt; &gt; QuantLib::FdHestonVanillaEngine::cachedArgs2results_</definition>
        <argsstring></argsstring>
        <name>cachedArgs2results_</name>
        <qualifiedname>QuantLib::FdHestonVanillaEngine::cachedArgs2results_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonvanillaengine.hpp" line="113" column="61" bodyfile="ql/pricingengines/vanilla/fdhestonvanillaengine.hpp" bodystart="113" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_fd_heston_vanilla_engine_1a03c7e5354482fe404b37823b270dbcb0" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FdHestonVanillaEngine::FdHestonVanillaEngine</definition>
        <argsstring>(const ext::shared_ptr&lt; HestonModel &gt; &amp;model, Size tGrid=100, Size xGrid=100, Size vGrid=50, Size dampingSteps=0, const FdmSchemeDesc &amp;schemeDesc=FdmSchemeDesc::Hundsdorfer(), ext::shared_ptr&lt; LocalVolTermStructure &gt; leverageFct={}, Real mixingFactor=1.0)</argsstring>
        <name>FdHestonVanillaEngine</name>
        <qualifiedname>QuantLib::FdHestonVanillaEngine::FdHestonVanillaEngine</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_heston_model" kindref="compound">HestonModel</ref> &gt; &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>tGrid</declname>
          <defval>100</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>xGrid</declname>
          <defval>100</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>vGrid</declname>
          <defval>50</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>dampingSteps</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const <ref refid="struct_quant_lib_1_1_fdm_scheme_desc" kindref="compound">FdmSchemeDesc</ref> &amp;</type>
          <declname>schemeDesc</declname>
          <defval>FdmSchemeDesc::Hundsdorfer()</defval>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_local_vol_term_structure" kindref="compound">LocalVolTermStructure</ref> &gt;</type>
          <declname>leverageFct</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>mixingFactor</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonvanillaengine.hpp" line="53" column="9" bodyfile="ql/pricingengines/vanilla/fdhestonvanillaengine.cpp" bodystart="37" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fd_heston_vanilla_engine_1a9aa7c2ebfe6ebabd5a06c1ac03c1bd19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FdHestonVanillaEngine::FdHestonVanillaEngine</definition>
        <argsstring>(const ext::shared_ptr&lt; HestonModel &gt; &amp;model, DividendSchedule dividends, Size tGrid=100, Size xGrid=100, Size vGrid=50, Size dampingSteps=0, const FdmSchemeDesc &amp;schemeDesc=FdmSchemeDesc::Hundsdorfer(), ext::shared_ptr&lt; LocalVolTermStructure &gt; leverageFct={}, Real mixingFactor=1.0)</argsstring>
        <name>FdHestonVanillaEngine</name>
        <qualifiedname>QuantLib::FdHestonVanillaEngine::FdHestonVanillaEngine</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_heston_model" kindref="compound">HestonModel</ref> &gt; &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>DividendSchedule</type>
          <declname>dividends</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>tGrid</declname>
          <defval>100</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>xGrid</declname>
          <defval>100</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>vGrid</declname>
          <defval>50</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>dampingSteps</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const <ref refid="struct_quant_lib_1_1_fdm_scheme_desc" kindref="compound">FdmSchemeDesc</ref> &amp;</type>
          <declname>schemeDesc</declname>
          <defval>FdmSchemeDesc::Hundsdorfer()</defval>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_local_vol_term_structure" kindref="compound">LocalVolTermStructure</ref> &gt;</type>
          <declname>leverageFct</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>mixingFactor</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonvanillaengine.hpp" line="62" column="9" bodyfile="ql/pricingengines/vanilla/fdhestonvanillaengine.cpp" bodystart="52" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fd_heston_vanilla_engine_1a010568b2bda2cdd0ce416fabcbba0d09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FdHestonVanillaEngine::FdHestonVanillaEngine</definition>
        <argsstring>(const ext::shared_ptr&lt; HestonModel &gt; &amp;model, ext::shared_ptr&lt; FdmQuantoHelper &gt; quantoHelper, Size tGrid=100, Size xGrid=100, Size vGrid=50, Size dampingSteps=0, const FdmSchemeDesc &amp;schemeDesc=FdmSchemeDesc::Hundsdorfer(), ext::shared_ptr&lt; LocalVolTermStructure &gt; leverageFct={}, Real mixingFactor=1.0)</argsstring>
        <name>FdHestonVanillaEngine</name>
        <qualifiedname>QuantLib::FdHestonVanillaEngine::FdHestonVanillaEngine</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_heston_model" kindref="compound">HestonModel</ref> &gt; &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_fdm_quanto_helper" kindref="compound">FdmQuantoHelper</ref> &gt;</type>
          <declname>quantoHelper</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>tGrid</declname>
          <defval>100</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>xGrid</declname>
          <defval>100</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>vGrid</declname>
          <defval>50</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>dampingSteps</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const <ref refid="struct_quant_lib_1_1_fdm_scheme_desc" kindref="compound">FdmSchemeDesc</ref> &amp;</type>
          <declname>schemeDesc</declname>
          <defval>FdmSchemeDesc::Hundsdorfer()</defval>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_local_vol_term_structure" kindref="compound">LocalVolTermStructure</ref> &gt;</type>
          <declname>leverageFct</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>mixingFactor</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonvanillaengine.hpp" line="72" column="9" bodyfile="ql/pricingengines/vanilla/fdhestonvanillaengine.cpp" bodystart="69" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fd_heston_vanilla_engine_1aa33ac77f4065d1934c059b5d1732d88a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FdHestonVanillaEngine::FdHestonVanillaEngine</definition>
        <argsstring>(const ext::shared_ptr&lt; HestonModel &gt; &amp;model, DividendSchedule dividends, ext::shared_ptr&lt; FdmQuantoHelper &gt; quantoHelper, Size tGrid=100, Size xGrid=100, Size vGrid=50, Size dampingSteps=0, const FdmSchemeDesc &amp;schemeDesc=FdmSchemeDesc::Hundsdorfer(), ext::shared_ptr&lt; LocalVolTermStructure &gt; leverageFct={}, Real mixingFactor=1.0)</argsstring>
        <name>FdHestonVanillaEngine</name>
        <qualifiedname>QuantLib::FdHestonVanillaEngine::FdHestonVanillaEngine</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_heston_model" kindref="compound">HestonModel</ref> &gt; &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>DividendSchedule</type>
          <declname>dividends</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_fdm_quanto_helper" kindref="compound">FdmQuantoHelper</ref> &gt;</type>
          <declname>quantoHelper</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>tGrid</declname>
          <defval>100</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>xGrid</declname>
          <defval>100</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>vGrid</declname>
          <defval>50</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>dampingSteps</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>const <ref refid="struct_quant_lib_1_1_fdm_scheme_desc" kindref="compound">FdmSchemeDesc</ref> &amp;</type>
          <declname>schemeDesc</declname>
          <defval>FdmSchemeDesc::Hundsdorfer()</defval>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_local_vol_term_structure" kindref="compound">LocalVolTermStructure</ref> &gt;</type>
          <declname>leverageFct</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>mixingFactor</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonvanillaengine.hpp" line="82" column="9" bodyfile="ql/pricingengines/vanilla/fdhestonvanillaengine.cpp" bodystart="85" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fd_heston_vanilla_engine_1a9cccc256eba505f1bc4f427f8f661181" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::FdHestonVanillaEngine::calculate</definition>
        <argsstring>() const override</argsstring>
        <name>calculate</name>
        <qualifiedname>QuantLib::FdHestonVanillaEngine::calculate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_pricing_engine_1ad2be11cff80d9792f0cc8231711fcb06">calculate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonvanillaengine.hpp" line="93" column="14" bodyfile="ql/pricingengines/vanilla/fdhestonvanillaengine.cpp" bodystart="175" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fd_heston_vanilla_engine_1a3a797577ecec38162fdb2f0f60ed064d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::FdHestonVanillaEngine::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <qualifiedname>QuantLib::FdHestonVanillaEngine::update</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_observer_1a07905c55dca858470fcf4a1aea0005aa">update</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must be implemented in derived classes. An instance of Observer does not call this method directly: instead, it will be called by the observables the instance registered with when they need to notify any changes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonvanillaengine.hpp" line="96" column="14" bodyfile="ql/pricingengines/vanilla/fdhestonvanillaengine.cpp" bodystart="231" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fd_heston_vanilla_engine_1a4a2b8b02939b33ae342bf3796f59042b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::FdHestonVanillaEngine::enableMultipleStrikesCaching</definition>
        <argsstring>(const std::vector&lt; Real &gt; &amp;strikes)</argsstring>
        <name>enableMultipleStrikesCaching</name>
        <qualifiedname>QuantLib::FdHestonVanillaEngine::enableMultipleStrikesCaching</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>strikes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonvanillaengine.hpp" line="97" column="14" bodyfile="ql/pricingengines/vanilla/fdhestonvanillaengine.cpp" bodystart="238" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fd_heston_vanilla_engine_1a8362ea451ca5fb54eb8801ddbe692a2f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_quant_lib_1_1_fdm_solver_desc" kindref="compound">FdmSolverDesc</ref></type>
        <definition>FdmSolverDesc QuantLib::FdHestonVanillaEngine::getSolverDesc</definition>
        <argsstring>(Real equityScaleFactor) const</argsstring>
        <name>getSolverDesc</name>
        <qualifiedname>QuantLib::FdHestonVanillaEngine::getSolverDesc</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>equityScaleFactor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonvanillaengine.hpp" line="100" column="23" bodyfile="ql/pricingengines/vanilla/fdhestonvanillaengine.cpp" bodystart="103" bodyend="173"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Finite-differences Heston vanilla option engine. </para>
    </briefdescription>
    <detaileddescription>
<para><xrefsect id="test_1_test000153"><xreftitle>Test</xreftitle><xrefdescription><para>the correctness of the returned value is tested by reproducing results available in web/literature and comparison with Black pricing. </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::FdHestonVanillaEngine</label>
        <link refid="class_quant_lib_1_1_fd_heston_vanilla_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::GenericEngine&lt; VanillaOption::arguments, VanillaOption::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_engine"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::GenericModelEngine&lt; HestonModel, VanillaOption::arguments, VanillaOption::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_model_engine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="4">
        <label>QuantLib::PricingEngine</label>
        <link refid="class_quant_lib_1_1_pricing_engine"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::FdHestonVanillaEngine</label>
        <link refid="class_quant_lib_1_1_fd_heston_vanilla_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::GenericEngine&lt; VanillaOption::arguments, VanillaOption::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_engine"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::GenericModelEngine&lt; HestonModel, VanillaOption::arguments, VanillaOption::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_model_engine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>model_</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::Handle&lt; HestonModel &gt;</label>
        <link refid="class_quant_lib_1_1_handle"/>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="4">
        <label>QuantLib::PricingEngine</label>
        <link refid="class_quant_lib_1_1_pricing_engine"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/pricingengines/vanilla/fdhestonvanillaengine.hpp" line="47" column="5" bodyfile="ql/pricingengines/vanilla/fdhestonvanillaengine.hpp" bodystart="50" bodyend="114"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_generic_engine_1ad2371cdbafa1989afb0e4733b1212c0d" prot="protected" virt="non-virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>arguments_</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_vanilla_engine_1ad0a57985f7ed05fdfd6d51f36d637c59" prot="private" virt="non-virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>cachedArgs2results_</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_vanilla_engine_1a9cccc256eba505f1bc4f427f8f661181" prot="public" virt="virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_vanilla_engine_1a622a3987100495975d16b82210c8e9d1" prot="private" virt="non-virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>dampingSteps_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_vanilla_engine_1a45bd7e05f35462ea05921148a1cf40ce" prot="private" virt="non-virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>dividends_</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_vanilla_engine_1a4a2b8b02939b33ae342bf3796f59042b" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>enableMultipleStrikesCaching</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_vanilla_engine_1a03c7e5354482fe404b37823b270dbcb0" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>FdHestonVanillaEngine</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_vanilla_engine_1a9aa7c2ebfe6ebabd5a06c1ac03c1bd19" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>FdHestonVanillaEngine</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_vanilla_engine_1a010568b2bda2cdd0ce416fabcbba0d09" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>FdHestonVanillaEngine</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_vanilla_engine_1aa33ac77f4065d1934c059b5d1732d88a" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>FdHestonVanillaEngine</name></member>
      <member refid="class_quant_lib_1_1_generic_model_engine_1ab8c094dbe99234f8aa9dc0a92e0e5fd1" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>GenericModelEngine</name></member>
      <member refid="class_quant_lib_1_1_generic_model_engine_1a8ab246499452beddca7225a2c63f8549" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>GenericModelEngine</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1ad9c6e8dc65ca072d5e6e17640d74db3e" prot="public" virt="virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>getArguments</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1aea8272ef6e5e0ea1cffadfed0454fa88" prot="public" virt="virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>getResults</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_vanilla_engine_1a8362ea451ca5fb54eb8801ddbe692a2f" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>getSolverDesc</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_vanilla_engine_1a73efdc46b9696ab524d6442a9a148a83" prot="private" virt="non-virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>leverageFct_</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_vanilla_engine_1abf2f37b1b110d17a08e218a17fc62915" prot="private" virt="non-virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>mixingFactor_</name></member>
      <member refid="class_quant_lib_1_1_generic_model_engine_1a48733a3abfeb33214816709c9c5c6b62" prot="protected" virt="non-virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>model_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::FdHestonVanillaEngine</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::FdHestonVanillaEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::FdHestonVanillaEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::FdHestonVanillaEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_vanilla_engine_1a2c9e4bea9becbfe9e2b3672a20d45e46" prot="private" virt="non-virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>quantoHelper_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1a81c5390ba1e713e57ca87d5f841d37f2" prot="public" virt="virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>reset</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1a41281f2ea4990dbce90be1f9f2e231f6" prot="protected" virt="non-virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>results_</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_vanilla_engine_1a686905ddfd2ea2f70681b9285a8cda8f" prot="private" virt="non-virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>schemeDesc_</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_vanilla_engine_1a980486a7bd10fa0dda231236a4d13d2f" prot="private" virt="non-virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>strikes_</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_vanilla_engine_1acd48182802e7572044788f0ce3f1f9a3" prot="private" virt="non-virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>tGrid_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_vanilla_engine_1a3a797577ecec38162fdb2f0f60ed064d" prot="public" virt="virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_vanilla_engine_1a111c76096bc5ae83c306caa14eb0c4b9" prot="private" virt="non-virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>vGrid_</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_vanilla_engine_1a2f4224bff9c46ae8ff956bfafb57ecb3" prot="private" virt="non-virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>xGrid_</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_pricing_engine_1a66b279a54578cd7e60d402e5147eb526" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonVanillaEngine</scope><name>~PricingEngine</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_forward" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::Forward</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_instrument" prot="public" virt="non-virtual">QuantLib::Instrument</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_bond_forward" prot="public" virt="non-virtual">QuantLib::BondForward</derivedcompoundref>
    <includes refid="forward_8hpp" local="no">forward.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Calculations</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_1aeb299610c4b6a2a00966883339366a26" prot="protected" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Forward::underlyingIncome_</definition>
        <argsstring></argsstring>
        <name>underlyingIncome_</name>
        <qualifiedname>QuantLib::Forward::underlyingIncome_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>derived classes must set this, typically via <ref refid="class_quant_lib_1_1_forward_1a5c7aecf175d13720287ae2f67eb416dd" kindref="member">spotIncome()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forward.hpp" line="123" column="22" bodyfile="ql/instruments/forward.hpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_1a6aba48f67b6e6436117151fc9e9d9d75" prot="protected" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Forward::underlyingSpotValue_</definition>
        <argsstring></argsstring>
        <name>underlyingSpotValue_</name>
        <qualifiedname>QuantLib::Forward::underlyingSpotValue_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>derived classes must set this, typically via <ref refid="class_quant_lib_1_1_forward_1ae0e5cb4fcca8cf33cc53d816c008ade6" kindref="member">spotValue()</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forward.hpp" line="125" column="22" bodyfile="ql/instruments/forward.hpp" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_1ae4ab04af485ae5cfa36eaacf7f6a0e18" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref></type>
        <definition>DayCounter QuantLib::Forward::dayCounter_</definition>
        <argsstring></argsstring>
        <name>dayCounter_</name>
        <qualifiedname>QuantLib::Forward::dayCounter_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forward.hpp" line="127" column="20" bodyfile="ql/instruments/forward.hpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_1af7d5d763ca827fba16dca1f6a58628c8" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref></type>
        <definition>Calendar QuantLib::Forward::calendar_</definition>
        <argsstring></argsstring>
        <name>calendar_</name>
        <qualifiedname>QuantLib::Forward::calendar_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forward.hpp" line="128" column="18" bodyfile="ql/instruments/forward.hpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_1a9d885c317ea8e1f3736d27acb84d640c" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
        <definition>BusinessDayConvention QuantLib::Forward::businessDayConvention_</definition>
        <argsstring></argsstring>
        <name>businessDayConvention_</name>
        <qualifiedname>QuantLib::Forward::businessDayConvention_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forward.hpp" line="129" column="31" bodyfile="ql/instruments/forward.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_1a2d084076e1c44718ddd03c70953abbea" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
        <definition>Natural QuantLib::Forward::settlementDays_</definition>
        <argsstring></argsstring>
        <name>settlementDays_</name>
        <qualifiedname>QuantLib::Forward::settlementDays_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forward.hpp" line="130" column="17" bodyfile="ql/instruments/forward.hpp" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_1a6c6db14005514343f7d23ca683baded5" prot="protected" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_payoff" kindref="compound">Payoff</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;Payoff&gt; QuantLib::Forward::payoff_</definition>
        <argsstring></argsstring>
        <name>payoff_</name>
        <qualifiedname>QuantLib::Forward::payoff_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forward.hpp" line="131" column="25" bodyfile="ql/instruments/forward.hpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_1a892cb1fb8680a85b8cbd9b0a414ab5d5" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::Forward::valueDate_</definition>
        <argsstring></argsstring>
        <name>valueDate_</name>
        <qualifiedname>QuantLib::Forward::valueDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>valueDate = settlement date (date the fwd contract starts accruing) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forward.hpp" line="135" column="14" bodyfile="ql/instruments/forward.hpp" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_1a3dc0d0f2332f1c25acb4d929139ce339" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::Forward::maturityDate_</definition>
        <argsstring></argsstring>
        <name>maturityDate_</name>
        <qualifiedname>QuantLib::Forward::maturityDate_</qualifiedname>
        <briefdescription>
<para>maturityDate of the forward contract or delivery date of underlying </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forward.hpp" line="137" column="14" bodyfile="ql/instruments/forward.hpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_1a0d20518281bd7c01bce0e0959dcfba4d" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
        <definition>Handle&lt;YieldTermStructure&gt; QuantLib::Forward::discountCurve_</definition>
        <argsstring></argsstring>
        <name>discountCurve_</name>
        <qualifiedname>QuantLib::Forward::discountCurve_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forward.hpp" line="138" column="16" bodyfile="ql/instruments/forward.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_1ab0bb02779606e3e23cc54358b165fc26" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
        <definition>Handle&lt;YieldTermStructure&gt; QuantLib::Forward::incomeDiscountCurve_</definition>
        <argsstring></argsstring>
        <name>incomeDiscountCurve_</name>
        <qualifiedname>QuantLib::Forward::incomeDiscountCurve_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>must set this in derived classes, based on particular underlying </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forward.hpp" line="140" column="16" bodyfile="ql/instruments/forward.hpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_1a7b5ba71c068a4497da85464b40d57e57" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Forward::forwardValue</definition>
        <argsstring>() const</argsstring>
        <name>forwardValue</name>
        <qualifiedname>QuantLib::Forward::forwardValue</qualifiedname>
        <briefdescription>
<para>forward value/price of underlying, discounting income/dividends </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>if this is a bond forward price, is must be a dirty forward price. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forward.hpp" line="94" column="22" bodyfile="ql/instruments/forward.cpp" bodystart="61" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_1a8ec033473f09000a20c68087a368cf34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_interest_rate" kindref="compound">InterestRate</ref></type>
        <definition>InterestRate QuantLib::Forward::impliedYield</definition>
        <argsstring>(Real underlyingSpotValue, Real forwardValue, Date settlementDate, Compounding compoundingConvention, const DayCounter &amp;dayCounter)</argsstring>
        <name>impliedYield</name>
        <qualifiedname>QuantLib::Forward::impliedYield</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>underlyingSpotValue</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>forwardValue</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
          <declname>settlementDate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a1d1b94285bc6741279c70fac8b34265b" kindref="member">Compounding</ref></type>
          <declname>compoundingConvention</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Simple yield calculation based on underlying spot and forward values, taking into account underlying income. When <formula id="208">$ t&gt;0 $</formula>, call with: underlyingSpotValue=spotValue(t), forwardValue=strikePrice, to get current yield. For a repo, if <formula id="209">$ t=0 $</formula>, impliedYield should reproduce the spot repo rate. For FRA&apos;s, this should reproduce the relevant zero rate at the FRA&apos;s maturityDate_; </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forward.hpp" line="105" column="22" bodyfile="ql/instruments/forward.cpp" bodystart="68" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_1a75363821617cef8b333ae513cdc4d208" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Forward::Forward</definition>
        <argsstring>(DayCounter dayCounter, Calendar calendar, BusinessDayConvention businessDayConvention, Natural settlementDays, ext::shared_ptr&lt; Payoff &gt; payoff, const Date &amp;valueDate, const Date &amp;maturityDate, Handle&lt; YieldTermStructure &gt; discountCurve=Handle&lt; YieldTermStructure &gt;())</argsstring>
        <name>Forward</name>
        <qualifiedname>QuantLib::Forward::Forward</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref></type>
          <declname>dayCounter</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref></type>
          <declname>calendar</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
          <declname>businessDayConvention</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>settlementDays</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_payoff" kindref="compound">Payoff</ref> &gt;</type>
          <declname>payoff</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>valueDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>maturityDate</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
          <declname>discountCurve</declname>
          <defval><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forward.hpp" line="112" column="9" bodyfile="ql/instruments/forward.cpp" bodystart="27" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_1ab3daff09cd89e116bf08623d1e4f3ecf" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::Forward::performCalculations</definition>
        <argsstring>() const override</argsstring>
        <name>performCalculations</name>
        <qualifiedname>QuantLib::Forward::performCalculations</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_lazy_object_1aafa5583a3743d9f93fa40da5b62e1ff8">performCalculations</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must implement any calculations which must be (re)done in order to calculate the desired results. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forward.hpp" line="121" column="14" bodyfile="ql/instruments/forward.cpp" bodystart="83" bodyend="92"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Inspectors</header>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_1a03822810b0b69602c1efc94cda751dc8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::Forward::settlementDate</definition>
        <argsstring>() const</argsstring>
        <name>settlementDate</name>
        <qualifiedname>QuantLib::Forward::settlementDate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forward.hpp" line="70" column="22" bodyfile="ql/instruments/forward.cpp" bodystart="48" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_1abb8f5b830d014ef3eb6da8694c4dd04c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
        <definition>const Calendar &amp; QuantLib::Forward::calendar</definition>
        <argsstring>() const</argsstring>
        <name>calendar</name>
        <qualifiedname>QuantLib::Forward::calendar</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forward.hpp" line="71" column="24" bodyfile="ql/instruments/forward.hpp" bodystart="168" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_1a0020d6772c1cc44440918880b429eef5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
        <definition>BusinessDayConvention QuantLib::Forward::businessDayConvention</definition>
        <argsstring>() const</argsstring>
        <name>businessDayConvention</name>
        <qualifiedname>QuantLib::Forward::businessDayConvention</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forward.hpp" line="72" column="31" bodyfile="ql/instruments/forward.hpp" bodystart="172" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_1a1c25bcba00e199d0ffea182b33b85f1d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
        <definition>const DayCounter &amp; QuantLib::Forward::dayCounter</definition>
        <argsstring>() const</argsstring>
        <name>dayCounter</name>
        <qualifiedname>QuantLib::Forward::dayCounter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forward.hpp" line="73" column="26" bodyfile="ql/instruments/forward.hpp" bodystart="176" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_1a81bfb4ec786c8ac8d88d2d60f230201b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
        <definition>Handle&lt; YieldTermStructure &gt; QuantLib::Forward::discountCurve</definition>
        <argsstring>() const</argsstring>
        <name>discountCurve</name>
        <qualifiedname>QuantLib::Forward::discountCurve</qualifiedname>
        <briefdescription>
<para>term structure relevant to the contract (e.g. repo curve) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forward.hpp" line="75" column="16" bodyfile="ql/instruments/forward.hpp" bodystart="180" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_1a1166ed92b6d15d7c9afd8ee1b711e47b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
        <definition>Handle&lt; YieldTermStructure &gt; QuantLib::Forward::incomeDiscountCurve</definition>
        <argsstring>() const</argsstring>
        <name>incomeDiscountCurve</name>
        <qualifiedname>QuantLib::Forward::incomeDiscountCurve</qualifiedname>
        <briefdescription>
<para>term structure that discounts the underlying&apos;s income cash flows </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forward.hpp" line="77" column="16" bodyfile="ql/instruments/forward.hpp" bodystart="184" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_1a5c13d5112b6221fbdd2736ca9aa2b35d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QuantLib::Forward::isExpired</definition>
        <argsstring>() const override</argsstring>
        <name>isExpired</name>
        <qualifiedname>QuantLib::Forward::isExpired</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_instrument_1a121a2a929b179900744a58272d46aefe">isExpired</reimplements>
        <briefdescription>
<para>returns whether the instrument is still tradable. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forward.hpp" line="79" column="14" bodyfile="ql/instruments/forward.cpp" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_1ae0e5cb4fcca8cf33cc53d816c008ade6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::Forward::spotValue</definition>
        <argsstring>() const =0</argsstring>
        <name>spotValue</name>
        <qualifiedname>QuantLib::Forward::spotValue</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_bond_forward_1ac3cd1bd668e133bfef475f0496a6cffd">spotValue</reimplementedby>
        <briefdescription>
<para>returns spot value/price of an underlying financial instrument </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forward.hpp" line="83" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_1a5c7aecf175d13720287ae2f67eb416dd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::Forward::spotIncome</definition>
        <argsstring>(const Handle&lt; YieldTermStructure &gt; &amp;incomeDiscountCurve) const =0</argsstring>
        <name>spotIncome</name>
        <qualifiedname>QuantLib::Forward::spotIncome</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_bond_forward_1a3d5c74638e9ca85e5e7f47a4617ba353">spotIncome</reimplementedby>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>incomeDiscountCurve</declname>
        </param>
        <briefdescription>
<para>NPV of income/dividends/storage-costs etc. of underlying instrument. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forward.hpp" line="85" column="22"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Abstract base forward class. </para>
    </briefdescription>
    <detaileddescription>
<para>Derived classes must implement the virtual functions <ref refid="class_quant_lib_1_1_forward_1ae0e5cb4fcca8cf33cc53d816c008ade6" kindref="member">spotValue()</ref> (NPV or spot price) and <ref refid="class_quant_lib_1_1_forward_1a5c7aecf175d13720287ae2f67eb416dd" kindref="member">spotIncome()</ref> associated with the specific relevant underlying (e.g. bond, stock, commodity, loan/deposit). These functions must be used to set the protected member variables underlyingSpotValue_ and underlyingIncome_ within <ref refid="class_quant_lib_1_1_forward_1ab3daff09cd89e116bf08623d1e4f3ecf" kindref="member">performCalculations()</ref> in the derived class before the base-class implementation is called.</para>
<para><ref refid="class_quant_lib_1_1_forward_1a5c7aecf175d13720287ae2f67eb416dd" kindref="member">spotIncome()</ref> refers generically to the present value of coupons, dividends or storage costs.</para>
<para>discountCurve_ is the curve used to discount forward contract cash flows back to the evaluation day, as well as to obtain forward values for spot values/prices.</para>
<para>incomeDiscountCurve_, which for generality is not automatically set to the discountCurve_, is the curve used to discount future income/dividends/storage-costs etc back to the evaluation date.</para>
<para><xrefsect id="todo_1_todo000041"><xreftitle>Todo</xreftitle><xrefdescription><para>Add preconditions and tests</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="warning"><para>This class still needs to be rigorously tested </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="6">
        <label>QuantLib::BondForward</label>
        <link refid="class_quant_lib_1_1_bond_forward"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::Forward</label>
        <link refid="class_quant_lib_1_1_forward"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Instrument</label>
        <link refid="class_quant_lib_1_1_instrument"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8">
        <label>QuantLib::Calendar</label>
        <link refid="class_quant_lib_1_1_calendar"/>
      </node>
      <node id="6">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="7">
        <label>QuantLib::DayCounter</label>
        <link refid="class_quant_lib_1_1_day_counter"/>
      </node>
      <node id="1">
        <label>QuantLib::Forward</label>
        <link refid="class_quant_lib_1_1_forward"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>dayCounter_</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>calendar_</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>maturityDate_</edgelabel>
          <edgelabel>valueDate_</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>discountCurve_</edgelabel>
          <edgelabel>incomeDiscountCurve_</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>QuantLib::Handle&lt; QuantLib::YieldTermStructure &gt;</label>
        <link refid="class_quant_lib_1_1_handle"/>
      </node>
      <node id="2">
        <label>QuantLib::Instrument</label>
        <link refid="class_quant_lib_1_1_instrument"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>valuationDate_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </collaborationgraph>
    <location file="ql/instruments/forward.hpp" line="66" column="5" bodyfile="ql/instruments/forward.hpp" bodystart="66" bodyend="141"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_instrument_1a468edb294da268b097c91bf821084c07" prot="public" virt="non-virtual"><scope>QuantLib::Forward</scope><name>additionalResults</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a57d2b34e8625ab3d9ffa50c0c7931099" prot="protected" virt="non-virtual"><scope>QuantLib::Forward</scope><name>additionalResults_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a02070ea7442d30625992c1711030d4b8" prot="protected" virt="non-virtual"><scope>QuantLib::Forward</scope><name>alwaysForward_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a17c9433135a259e4776baec66204a484" prot="public" virt="non-virtual"><scope>QuantLib::Forward</scope><name>alwaysForwardNotifications</name></member>
      <member refid="class_quant_lib_1_1_forward_1a0020d6772c1cc44440918880b429eef5" prot="public" virt="non-virtual"><scope>QuantLib::Forward</scope><name>businessDayConvention</name></member>
      <member refid="class_quant_lib_1_1_forward_1a9d885c317ea8e1f3736d27acb84d640c" prot="protected" virt="non-virtual"><scope>QuantLib::Forward</scope><name>businessDayConvention_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a4c573c48f7eaead5042864ac0eb5b025" prot="protected" virt="virtual"><scope>QuantLib::Forward</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a58b4986a80efa18634483a92c121e26e" prot="protected" virt="non-virtual"><scope>QuantLib::Forward</scope><name>calculated_</name></member>
      <member refid="class_quant_lib_1_1_forward_1abb8f5b830d014ef3eb6da8694c4dd04c" prot="public" virt="non-virtual"><scope>QuantLib::Forward</scope><name>calendar</name></member>
      <member refid="class_quant_lib_1_1_forward_1af7d5d763ca827fba16dca1f6a58628c8" prot="protected" virt="non-virtual"><scope>QuantLib::Forward</scope><name>calendar_</name></member>
      <member refid="class_quant_lib_1_1_forward_1a1c25bcba00e199d0ffea182b33b85f1d" prot="public" virt="non-virtual"><scope>QuantLib::Forward</scope><name>dayCounter</name></member>
      <member refid="class_quant_lib_1_1_forward_1ae4ab04af485ae5cfa36eaacf7f6a0e18" prot="protected" virt="non-virtual"><scope>QuantLib::Forward</scope><name>dayCounter_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::Forward</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_forward_1a81bfb4ec786c8ac8d88d2d60f230201b" prot="public" virt="non-virtual"><scope>QuantLib::Forward</scope><name>discountCurve</name></member>
      <member refid="class_quant_lib_1_1_forward_1a0d20518281bd7c01bce0e0959dcfba4d" prot="protected" virt="non-virtual"><scope>QuantLib::Forward</scope><name>discountCurve_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1ac548cb61c864779db09bd0fac6ae7c81" prot="protected" virt="non-virtual"><scope>QuantLib::Forward</scope><name>engine_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a03502fb6c606b262c25acd94ff4c1e52" prot="public" virt="non-virtual"><scope>QuantLib::Forward</scope><name>errorEstimate</name></member>
      <member refid="class_quant_lib_1_1_instrument_1abb8f4cfa7346fab7a2f3a8c8b4da30f3" prot="protected" virt="non-virtual"><scope>QuantLib::Forward</scope><name>errorEstimate_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1aebe809131db2941325d037c031bbf41b" prot="public" virt="virtual"><scope>QuantLib::Forward</scope><name>fetchResults</name></member>
      <member refid="class_quant_lib_1_1_forward_1a75363821617cef8b333ae513cdc4d208" prot="protected" virt="non-virtual"><scope>QuantLib::Forward</scope><name>Forward</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1afac6ee19c3107c453e1347dd8000e023" prot="public" virt="non-virtual"><scope>QuantLib::Forward</scope><name>forwardFirstNotificationOnly</name></member>
      <member refid="class_quant_lib_1_1_forward_1a7b5ba71c068a4497da85464b40d57e57" prot="public" virt="virtual"><scope>QuantLib::Forward</scope><name>forwardValue</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7157f41e83f2c5d924f5c5bafda04d1d" prot="public" virt="non-virtual"><scope>QuantLib::Forward</scope><name>freeze</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7bb721fe00c6854e602758aba629ab77" prot="protected" virt="non-virtual"><scope>QuantLib::Forward</scope><name>frozen_</name></member>
      <member refid="class_quant_lib_1_1_forward_1a8ec033473f09000a20c68087a368cf34" prot="public" virt="non-virtual"><scope>QuantLib::Forward</scope><name>impliedYield</name></member>
      <member refid="class_quant_lib_1_1_forward_1a1166ed92b6d15d7c9afd8ee1b711e47b" prot="public" virt="non-virtual"><scope>QuantLib::Forward</scope><name>incomeDiscountCurve</name></member>
      <member refid="class_quant_lib_1_1_forward_1ab0bb02779606e3e23cc54358b165fc26" prot="protected" virt="non-virtual"><scope>QuantLib::Forward</scope><name>incomeDiscountCurve_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a5e4c746cbf7999c83dc57f87e241f1cc" prot="public" virt="non-virtual"><scope>QuantLib::Forward</scope><name>Instrument</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a0a7c5d42815a4e16ee2158e24dbfc748" prot="public" virt="non-virtual"><scope>QuantLib::Forward</scope><name>isCalculated</name></member>
      <member refid="class_quant_lib_1_1_forward_1a5c13d5112b6221fbdd2736ca9aa2b35d" prot="public" virt="virtual"><scope>QuantLib::Forward</scope><name>isExpired</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::Forward</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a26f18f4ff7faaaebd8eae50e064b493e" prot="public" virt="non-virtual"><scope>QuantLib::Forward</scope><name>LazyObject</name></member>
      <member refid="class_quant_lib_1_1_forward_1a3dc0d0f2332f1c25acb4d929139ce339" prot="protected" virt="non-virtual"><scope>QuantLib::Forward</scope><name>maturityDate_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::Forward</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a5afdd9698267cd30ddd10cf01f3487b0" prot="public" virt="non-virtual"><scope>QuantLib::Forward</scope><name>NPV</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a997663780100d30ae59b14ac0285322d" prot="protected" virt="non-virtual"><scope>QuantLib::Forward</scope><name>NPV_</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::Forward</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::Forward</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::Forward</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::Forward</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::Forward</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::Forward</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::Forward</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::QuantLib::Observer::"><scope>QuantLib::Forward</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_forward_1a6c6db14005514343f7d23ca683baded5" prot="protected" virt="non-virtual"><scope>QuantLib::Forward</scope><name>payoff_</name></member>
      <member refid="class_quant_lib_1_1_forward_1ab3daff09cd89e116bf08623d1e4f3ecf" prot="protected" virt="virtual"><scope>QuantLib::Forward</scope><name>performCalculations</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a70c9b24e50132408d8d9ce4f6674662a" prot="public" virt="non-virtual"><scope>QuantLib::Forward</scope><name>recalculate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::Forward</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::Forward</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a266c15a12160a89f4f9707db85f9fa27" prot="public" virt="non-virtual"><scope>QuantLib::Forward</scope><name>result</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a3444386491f179f64f4f0aac24997071" prot="public" virt="non-virtual"><scope>QuantLib::Forward</scope><name>setPricingEngine</name></member>
      <member refid="class_quant_lib_1_1_forward_1a03822810b0b69602c1efc94cda751dc8" prot="public" virt="virtual"><scope>QuantLib::Forward</scope><name>settlementDate</name></member>
      <member refid="class_quant_lib_1_1_forward_1a2d084076e1c44718ddd03c70953abbea" prot="protected" virt="non-virtual"><scope>QuantLib::Forward</scope><name>settlementDays_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1af7344eebc48a1a361386e5c5a90a8fcc" prot="public" virt="virtual"><scope>QuantLib::Forward</scope><name>setupArguments</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a73d90597fcd3ff52a8aed674393ab574" prot="protected" virt="virtual"><scope>QuantLib::Forward</scope><name>setupExpired</name></member>
      <member refid="class_quant_lib_1_1_forward_1a5c7aecf175d13720287ae2f67eb416dd" prot="public" virt="pure-virtual"><scope>QuantLib::Forward</scope><name>spotIncome</name></member>
      <member refid="class_quant_lib_1_1_forward_1ae0e5cb4fcca8cf33cc53d816c008ade6" prot="public" virt="pure-virtual"><scope>QuantLib::Forward</scope><name>spotValue</name></member>
      <member refid="class_quant_lib_1_1_forward_1aeb299610c4b6a2a00966883339366a26" prot="protected" virt="non-virtual"><scope>QuantLib::Forward</scope><name>underlyingIncome_</name></member>
      <member refid="class_quant_lib_1_1_forward_1a6aba48f67b6e6436117151fc9e9d9d75" prot="protected" virt="non-virtual"><scope>QuantLib::Forward</scope><name>underlyingSpotValue_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a2e0e4786666453024b9d4e0761f2770b" prot="public" virt="non-virtual"><scope>QuantLib::Forward</scope><name>unfreeze</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::Forward</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::Forward</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1adee2bf49be5c4c78736be293321a856d" prot="public" virt="virtual"><scope>QuantLib::Forward</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a53a0fc1adc70b73387ad53009725835d" prot="public" virt="non-virtual"><scope>QuantLib::Forward</scope><name>valuationDate</name></member>
      <member refid="class_quant_lib_1_1_instrument_1aa60b558fc82f022e13535360ac4a6fed" prot="protected" virt="non-virtual"><scope>QuantLib::Forward</scope><name>valuationDate_</name></member>
      <member refid="class_quant_lib_1_1_forward_1a892cb1fb8680a85b8cbd9b0a414ab5d5" prot="protected" virt="non-virtual"><scope>QuantLib::Forward</scope><name>valueDate_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a9d719c43bb627177a90d7d12324a2d6e" prot="public" virt="non-virtual"><scope>QuantLib::Forward</scope><name>~LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::Forward</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::Forward</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

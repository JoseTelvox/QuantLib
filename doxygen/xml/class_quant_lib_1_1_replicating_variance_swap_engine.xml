<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_replicating_variance_swap_engine" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::ReplicatingVarianceSwapEngine</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_variance_swap_1_1engine" prot="public" virt="non-virtual">QuantLib::VarianceSwap::engine</basecompoundref>
    <includes refid="replicatingvarianceswapengine_8hpp" local="no">replicatingvarianceswapengine.hpp</includes>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_quant_lib_1_1_replicating_variance_swap_engine_1adbf871dbc35decc51e4c8618fb562ff5" prot="public" static="no">
        <type>std::vector&lt; std::pair&lt; ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_striked_type_payoff" kindref="compound">StrikedTypePayoff</ref> &gt;, <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &gt;</type>
        <definition>typedef std::vector&lt;std::pair&lt; ext::shared_ptr&lt;StrikedTypePayoff&gt;, Real&gt; &gt; QuantLib::ReplicatingVarianceSwapEngine::weights_type</definition>
        <argsstring></argsstring>
        <name>weights_type</name>
        <qualifiedname>QuantLib::ReplicatingVarianceSwapEngine::weights_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/replicatingvarianceswapengine.hpp" line="47" column="2" bodyfile="ql/pricingengines/forward/replicatingvarianceswapengine.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_replicating_variance_swap_engine_1a0c1280197de9c615c6ba2d355988a2ad" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_generalized_black_scholes_process" kindref="compound">GeneralizedBlackScholesProcess</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;GeneralizedBlackScholesProcess&gt; QuantLib::ReplicatingVarianceSwapEngine::process_</definition>
        <argsstring></argsstring>
        <name>process_</name>
        <qualifiedname>QuantLib::ReplicatingVarianceSwapEngine::process_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/replicatingvarianceswapengine.hpp" line="68" column="25" bodyfile="ql/pricingengines/forward/replicatingvarianceswapengine.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_replicating_variance_swap_engine_1a1a1d95786eeeaafc490f06f682e09bb3" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ReplicatingVarianceSwapEngine::dk_</definition>
        <argsstring></argsstring>
        <name>dk_</name>
        <qualifiedname>QuantLib::ReplicatingVarianceSwapEngine::dk_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/replicatingvarianceswapengine.hpp" line="69" column="14" bodyfile="ql/pricingengines/forward/replicatingvarianceswapengine.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_replicating_variance_swap_engine_1a21307845281bb0a9efc4d3884c2ebb3e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::ReplicatingVarianceSwapEngine::callStrikes_</definition>
        <argsstring></argsstring>
        <name>callStrikes_</name>
        <qualifiedname>QuantLib::ReplicatingVarianceSwapEngine::callStrikes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/replicatingvarianceswapengine.hpp" line="70" column="21" bodyfile="ql/pricingengines/forward/replicatingvarianceswapengine.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_replicating_variance_swap_engine_1a71c720460f43e4b57ac07cfb6d5e3438" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::ReplicatingVarianceSwapEngine::putStrikes_</definition>
        <argsstring></argsstring>
        <name>putStrikes_</name>
        <qualifiedname>QuantLib::ReplicatingVarianceSwapEngine::putStrikes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/replicatingvarianceswapengine.hpp" line="70" column="34" bodyfile="ql/pricingengines/forward/replicatingvarianceswapengine.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_replicating_variance_swap_engine_1af607de360ea81b4538b23634a2d3b9e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ReplicatingVarianceSwapEngine::ReplicatingVarianceSwapEngine</definition>
        <argsstring>(ext::shared_ptr&lt; GeneralizedBlackScholesProcess &gt; process, Real dk=5.0, const std::vector&lt; Real &gt; &amp;callStrikes=std::vector&lt; Real &gt;(), const std::vector&lt; Real &gt; &amp;putStrikes=std::vector&lt; Real &gt;())</argsstring>
        <name>ReplicatingVarianceSwapEngine</name>
        <qualifiedname>QuantLib::ReplicatingVarianceSwapEngine::ReplicatingVarianceSwapEngine</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_generalized_black_scholes_process" kindref="compound">GeneralizedBlackScholesProcess</ref> &gt;</type>
          <declname>process</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>dk</declname>
          <defval>5.0</defval>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>callStrikes</declname>
          <defval>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;()</defval>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>putStrikes</declname>
          <defval>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/replicatingvarianceswapengine.hpp" line="49" column="9" bodyfile="ql/pricingengines/forward/replicatingvarianceswapengine.hpp" bodystart="76" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_replicating_variance_swap_engine_1afee6f5269c72b75f3d3c5af61be15814" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::ReplicatingVarianceSwapEngine::calculate</definition>
        <argsstring>() const override</argsstring>
        <name>calculate</name>
        <qualifiedname>QuantLib::ReplicatingVarianceSwapEngine::calculate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_pricing_engine_1ad2be11cff80d9792f0cc8231711fcb06">calculate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/replicatingvarianceswapengine.hpp" line="53" column="14" bodyfile="ql/pricingengines/forward/replicatingvarianceswapengine.hpp" bodystart="182" bodyend="206"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_replicating_variance_swap_engine_1acffd49b5a09ae61fa7ce9763cd984430" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::ReplicatingVarianceSwapEngine::computeOptionWeights</definition>
        <argsstring>(const std::vector&lt; Real &gt; &amp;, Option::Type, weights_type &amp;optionWeights) const</argsstring>
        <name>computeOptionWeights</name>
        <qualifiedname>QuantLib::ReplicatingVarianceSwapEngine::computeOptionWeights</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <defname>availStrikes</defname>
        </param>
        <param>
          <type>Option::Type</type>
          <defname>type</defname>
        </param>
        <param>
          <type>weights_type &amp;</type>
          <declname>optionWeights</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/replicatingvarianceswapengine.hpp" line="57" column="14" bodyfile="ql/pricingengines/forward/replicatingvarianceswapengine.hpp" bodystart="94" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_replicating_variance_swap_engine_1a0d922bf65373f0ab3fa83c8c27f60a72" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ReplicatingVarianceSwapEngine::computeLogPayoff</definition>
        <argsstring>(Real, Real) const</argsstring>
        <name>computeLogPayoff</name>
        <qualifiedname>QuantLib::ReplicatingVarianceSwapEngine::computeLogPayoff</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <defname>strike</defname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <defname>callPutStrikeBoundary</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/replicatingvarianceswapengine.hpp" line="60" column="14" bodyfile="ql/pricingengines/forward/replicatingvarianceswapengine.hpp" bodystart="146" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_replicating_variance_swap_engine_1a36951d0886593786e82d622e4a6568f3" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ReplicatingVarianceSwapEngine::computeReplicatingPortfolio</definition>
        <argsstring>(const weights_type &amp;optionWeights) const</argsstring>
        <name>computeReplicatingPortfolio</name>
        <qualifiedname>QuantLib::ReplicatingVarianceSwapEngine::computeReplicatingPortfolio</qualifiedname>
        <param>
          <type>const weights_type &amp;</type>
          <declname>optionWeights</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/replicatingvarianceswapengine.hpp" line="61" column="14" bodyfile="ql/pricingengines/forward/replicatingvarianceswapengine.hpp" bodystart="155" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_replicating_variance_swap_engine_1a148a217864b9ff91da122ebee220f2e2" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::ReplicatingVarianceSwapEngine::riskFreeRate</definition>
        <argsstring>() const</argsstring>
        <name>riskFreeRate</name>
        <qualifiedname>QuantLib::ReplicatingVarianceSwapEngine::riskFreeRate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/replicatingvarianceswapengine.hpp" line="63" column="14" bodyfile="ql/pricingengines/forward/replicatingvarianceswapengine.hpp" bodystart="219" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_replicating_variance_swap_engine_1aa1424a386eaf398596d6c855997a2f97" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a05e8e288a4bdedfe5b4e16d8cec14f1c" kindref="member">DiscountFactor</ref></type>
        <definition>DiscountFactor QuantLib::ReplicatingVarianceSwapEngine::riskFreeDiscount</definition>
        <argsstring>() const</argsstring>
        <name>riskFreeDiscount</name>
        <qualifiedname>QuantLib::ReplicatingVarianceSwapEngine::riskFreeDiscount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/replicatingvarianceswapengine.hpp" line="64" column="24" bodyfile="ql/pricingengines/forward/replicatingvarianceswapengine.hpp" bodystart="226" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_replicating_variance_swap_engine_1a8bc589b74c81a154248c7af1e7fc70b0" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ReplicatingVarianceSwapEngine::underlying</definition>
        <argsstring>() const</argsstring>
        <name>underlying</name>
        <qualifiedname>QuantLib::ReplicatingVarianceSwapEngine::underlying</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/replicatingvarianceswapengine.hpp" line="65" column="14" bodyfile="ql/pricingengines/forward/replicatingvarianceswapengine.hpp" bodystart="209" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_replicating_variance_swap_engine_1aee8af85b68e6a020cf046b87556810f2" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>Time QuantLib::ReplicatingVarianceSwapEngine::residualTime</definition>
        <argsstring>() const</argsstring>
        <name>residualTime</name>
        <qualifiedname>QuantLib::ReplicatingVarianceSwapEngine::residualTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/replicatingvarianceswapengine.hpp" line="66" column="14" bodyfile="ql/pricingengines/forward/replicatingvarianceswapengine.hpp" bodystart="214" bodyend="216"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Variance-swap pricing engine using replicating cost,. </para>
    </briefdescription>
    <detaileddescription>
<para>as described in Demeterfi, Derman, Kamal &amp; Zou, &quot;A Guide to Volatility and Variance Swaps&quot;, 1999</para>
<para><xrefsect id="test_1_test000127"><xreftitle>Test</xreftitle><xrefdescription><para>returned variances verified against results from literature </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>QuantLib::GenericEngine&lt; VarianceSwap::arguments, VarianceSwap::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_engine"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="4">
        <label>QuantLib::PricingEngine</label>
        <link refid="class_quant_lib_1_1_pricing_engine"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::ReplicatingVarianceSwapEngine</label>
        <link refid="class_quant_lib_1_1_replicating_variance_swap_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::VarianceSwap::engine</label>
        <link refid="class_quant_lib_1_1_variance_swap_1_1engine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="3">
        <label>QuantLib::GenericEngine&lt; VarianceSwap::arguments, VarianceSwap::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_engine"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>arguments_</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>results_</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>QuantLib::Instrument::results</label>
        <link refid="class_quant_lib_1_1_instrument_1_1results"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>valuationDate</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="4">
        <label>QuantLib::PricingEngine</label>
        <link refid="class_quant_lib_1_1_pricing_engine"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::PricingEngine::arguments</label>
        <link refid="class_quant_lib_1_1_pricing_engine_1_1arguments"/>
      </node>
      <node id="12">
        <label>QuantLib::PricingEngine::results</label>
        <link refid="class_quant_lib_1_1_pricing_engine_1_1results"/>
      </node>
      <node id="1">
        <label>QuantLib::ReplicatingVarianceSwapEngine</label>
        <link refid="class_quant_lib_1_1_replicating_variance_swap_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::VarianceSwap::arguments</label>
        <link refid="class_quant_lib_1_1_variance_swap_1_1arguments"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>maturityDate</edgelabel>
          <edgelabel>startDate</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::VarianceSwap::engine</label>
        <link refid="class_quant_lib_1_1_variance_swap_1_1engine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QuantLib::VarianceSwap::results</label>
        <link refid="class_quant_lib_1_1_variance_swap_1_1results"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/pricingengines/forward/replicatingvarianceswapengine.hpp" line="44" column="5" bodyfile="ql/pricingengines/forward/replicatingvarianceswapengine.hpp" bodystart="44" bodyend="71"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_generic_engine_1ad2371cdbafa1989afb0e4733b1212c0d" prot="protected" virt="non-virtual"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>arguments_</name></member>
      <member refid="class_quant_lib_1_1_replicating_variance_swap_engine_1afee6f5269c72b75f3d3c5af61be15814" prot="public" virt="virtual"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_replicating_variance_swap_engine_1a21307845281bb0a9efc4d3884c2ebb3e" prot="private" virt="non-virtual"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>callStrikes_</name></member>
      <member refid="class_quant_lib_1_1_replicating_variance_swap_engine_1a0d922bf65373f0ab3fa83c8c27f60a72" prot="protected" virt="non-virtual"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>computeLogPayoff</name></member>
      <member refid="class_quant_lib_1_1_replicating_variance_swap_engine_1acffd49b5a09ae61fa7ce9763cd984430" prot="protected" virt="non-virtual"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>computeOptionWeights</name></member>
      <member refid="class_quant_lib_1_1_replicating_variance_swap_engine_1a36951d0886593786e82d622e4a6568f3" prot="protected" virt="non-virtual"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>computeReplicatingPortfolio</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_replicating_variance_swap_engine_1a1a1d95786eeeaafc490f06f682e09bb3" prot="private" virt="non-virtual"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>dk_</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1ad9c6e8dc65ca072d5e6e17640d74db3e" prot="public" virt="virtual"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>getArguments</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1aea8272ef6e5e0ea1cffadfed0454fa88" prot="public" virt="virtual"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>getResults</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_replicating_variance_swap_engine_1a0c1280197de9c615c6ba2d355988a2ad" prot="private" virt="non-virtual"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>process_</name></member>
      <member refid="class_quant_lib_1_1_replicating_variance_swap_engine_1a71c720460f43e4b57ac07cfb6d5e3438" prot="private" virt="non-virtual"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>putStrikes_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_replicating_variance_swap_engine_1af607de360ea81b4538b23634a2d3b9e3" prot="public" virt="non-virtual"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>ReplicatingVarianceSwapEngine</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1a81c5390ba1e713e57ca87d5f841d37f2" prot="public" virt="virtual"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>reset</name></member>
      <member refid="class_quant_lib_1_1_replicating_variance_swap_engine_1aee8af85b68e6a020cf046b87556810f2" prot="protected" virt="non-virtual"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>residualTime</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1a41281f2ea4990dbce90be1f9f2e231f6" prot="protected" virt="non-virtual"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>results_</name></member>
      <member refid="class_quant_lib_1_1_replicating_variance_swap_engine_1aa1424a386eaf398596d6c855997a2f97" prot="protected" virt="non-virtual"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>riskFreeDiscount</name></member>
      <member refid="class_quant_lib_1_1_replicating_variance_swap_engine_1a148a217864b9ff91da122ebee220f2e2" prot="protected" virt="non-virtual"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>riskFreeRate</name></member>
      <member refid="class_quant_lib_1_1_replicating_variance_swap_engine_1a8bc589b74c81a154248c7af1e7fc70b0" prot="protected" virt="non-virtual"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>underlying</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1aaf5ef54d9e1abf8b1b50b48804edf3dc" prot="public" virt="virtual"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_replicating_variance_swap_engine_1adbf871dbc35decc51e4c8618fb562ff5" prot="public" virt="non-virtual"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>weights_type</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_pricing_engine_1a66b279a54578cd7e60d402e5147eb526" prot="public" virt="non-virtual"><scope>QuantLib::ReplicatingVarianceSwapEngine</scope><name>~PricingEngine</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

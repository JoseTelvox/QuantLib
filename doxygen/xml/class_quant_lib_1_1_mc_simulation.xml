<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_mc_simulation" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::McSimulation</compoundname>
    <derivedcompoundref refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base" prot="public" virt="non-virtual">QuantLib::path_generator_type&lt; MultiVariate, RNG, S &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base" prot="public" virt="non-virtual">QuantLib::path_pricer_type&lt; MultiVariate, RNG, S &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base" prot="public" virt="non-virtual">QuantLib::stats_type&lt; MultiVariate, RNG, S &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_m_c_forward_vanilla_engine" prot="public" virt="non-virtual">QuantLib::path_generator_type&lt; MultiVariate, RNG, S &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_m_c_forward_vanilla_engine" prot="public" virt="non-virtual">QuantLib::path_pricer_type&lt; MultiVariate, RNG, S &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_m_c_forward_vanilla_engine" prot="public" virt="non-virtual">QuantLib::stats_type&lt; MultiVariate, RNG, S &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_m_c_vanilla_engine" prot="public" virt="non-virtual">QuantLib::path_pricer_type&lt; MultiVariate, RNG, S &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_m_c_vanilla_engine" prot="public" virt="non-virtual">QuantLib::MCVanillaEngine&lt; MultiVariate, RNG, S &gt;</derivedcompoundref>
    <includes refid="mcsimulation_8hpp" local="no">mcsimulation.hpp</includes>
    <templateparamlist>
      <param>
        <type>template&lt; class &gt; class</type>
        <declname>MC</declname>
        <defname>MC</defname>
      </param>
      <param>
        <type>class RNG</type>
      </param>
      <param>
        <type>class S</type>
        <defval><ref refid="namespace_quant_lib_1ae2e788da35d2b866040a03b96227ee6e" kindref="member">Statistics</ref></defval>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_quant_lib_1_1_mc_simulation_1abb9fda006eeffea19c1f3a932c1fea8d" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1_monte_carlo_model" kindref="compound">MonteCarloModel</ref>&lt; MC, RNG, S &gt;::path_generator_type</type>
        <definition>typedef MonteCarloModel&lt;MC,RNG,S&gt;::path_generator_type QuantLib::McSimulation&lt; MC, RNG, S &gt;::path_generator_type</definition>
        <argsstring></argsstring>
        <name>path_generator_type</name>
        <qualifiedname>QuantLib::McSimulation::path_generator_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/mcsimulation.hpp" line="46" column="13" bodyfile="ql/pricingengines/mcsimulation.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_quant_lib_1_1_mc_simulation_1a2c8dd16267be56bc37989f4f8e6d734d" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1_monte_carlo_model" kindref="compound">MonteCarloModel</ref>&lt; MC, RNG, S &gt;::path_pricer_type</type>
        <definition>typedef MonteCarloModel&lt;MC,RNG,S&gt;::path_pricer_type QuantLib::McSimulation&lt; MC, RNG, S &gt;::path_pricer_type</definition>
        <argsstring></argsstring>
        <name>path_pricer_type</name>
        <qualifiedname>QuantLib::McSimulation::path_pricer_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/mcsimulation.hpp" line="48" column="13" bodyfile="ql/pricingengines/mcsimulation.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_quant_lib_1_1_mc_simulation_1a1ef01b50176cf01af164ed0b8b67bd7e" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1_monte_carlo_model" kindref="compound">MonteCarloModel</ref>&lt; MC, RNG, S &gt;::stats_type</type>
        <definition>typedef MonteCarloModel&lt;MC,RNG,S&gt;::stats_type QuantLib::McSimulation&lt; MC, RNG, S &gt;::stats_type</definition>
        <argsstring></argsstring>
        <name>stats_type</name>
        <qualifiedname>QuantLib::McSimulation::stats_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/mcsimulation.hpp" line="50" column="13" bodyfile="ql/pricingengines/mcsimulation.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_quant_lib_1_1_mc_simulation_1a5c793e8d12a221aec4c60f022d34eb81" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1_monte_carlo_model" kindref="compound">MonteCarloModel</ref>&lt; MC, RNG, S &gt;::result_type</type>
        <definition>typedef MonteCarloModel&lt;MC,RNG,S&gt;::result_type QuantLib::McSimulation&lt; MC, RNG, S &gt;::result_type</definition>
        <argsstring></argsstring>
        <name>result_type</name>
        <qualifiedname>QuantLib::McSimulation::result_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/mcsimulation.hpp" line="51" column="56" bodyfile="ql/pricingengines/mcsimulation.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_mc_simulation_1afbdbf4a8ce56b1b6060c49ac91b1f55a" prot="protected" static="no" mutable="yes">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_monte_carlo_model" kindref="compound">MonteCarloModel</ref>&lt; MC, RNG, S &gt; &gt;</type>
        <definition>ext::shared_ptr&lt;MonteCarloModel&lt;MC,RNG,S&gt; &gt; QuantLib::McSimulation&lt; MC, RNG, S &gt;::mcModel_</definition>
        <argsstring></argsstring>
        <name>mcModel_</name>
        <qualifiedname>QuantLib::McSimulation::mcModel_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/mcsimulation.hpp" line="98" column="33" bodyfile="ql/pricingengines/mcsimulation.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_mc_simulation_1a06f6de1952807cb9e689619d3f48450d" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::McSimulation&lt; MC, RNG, S &gt;::antitheticVariate_</definition>
        <argsstring></argsstring>
        <name>antitheticVariate_</name>
        <qualifiedname>QuantLib::McSimulation::antitheticVariate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/mcsimulation.hpp" line="99" column="14" bodyfile="ql/pricingengines/mcsimulation.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_mc_simulation_1a0c55429fb2a2d840cd8d358a5973cc40" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::McSimulation&lt; MC, RNG, S &gt;::controlVariate_</definition>
        <argsstring></argsstring>
        <name>controlVariate_</name>
        <qualifiedname>QuantLib::McSimulation::controlVariate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/mcsimulation.hpp" line="99" column="33" bodyfile="ql/pricingengines/mcsimulation.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_mc_simulation_1a11624b5e53889858d9189f85e27d653d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual QuantLib::McSimulation&lt; MC, RNG, S &gt;::~McSimulation</definition>
        <argsstring>()=default</argsstring>
        <name>~McSimulation</name>
        <qualifiedname>QuantLib::McSimulation::~McSimulation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/mcsimulation.hpp" line="53" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_mc_simulation_1a1c903a9dd586755f55377b522d99ac16" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>result_type</type>
        <definition>McSimulation&lt; MC, RNG, S &gt;::result_type QuantLib::McSimulation&lt; MC, RNG, S &gt;::value</definition>
        <argsstring>(Real tolerance, Size maxSamples=QL_MAX_INTEGER, Size minSamples=1023) const</argsstring>
        <name>value</name>
        <qualifiedname>QuantLib::McSimulation::value</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>tolerance</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>maxSamples</declname>
          <defval><ref refid="group__limit_macros_1gac49205214551771cf97efe9839ac6cb5" kindref="member">QL_MAX_INTEGER</ref></defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>minSamples</declname>
          <defval>1023</defval>
        </param>
        <briefdescription>
<para>add samples until the required absolute tolerance is reached </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/mcsimulation.hpp" line="55" column="21" bodyfile="ql/pricingengines/mcsimulation.hpp" bodystart="106" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_mc_simulation_1a06e9db2fbd3d80e6358e8494f4b6b6ea" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>result_type</type>
        <definition>McSimulation&lt; MC, RNG, S &gt;::result_type QuantLib::McSimulation&lt; MC, RNG, S &gt;::valueWithSamples</definition>
        <argsstring>(Size samples) const</argsstring>
        <name>valueWithSamples</name>
        <qualifiedname>QuantLib::McSimulation::valueWithSamples</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>samples</declname>
        </param>
        <briefdescription>
<para>simulate a fixed number of samples </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/mcsimulation.hpp" line="59" column="21" bodyfile="ql/pricingengines/mcsimulation.hpp" bodystart="144" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_mc_simulation_1aa74e7e1891852e5c96da544b87af083c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>result_type</type>
        <definition>McSimulation&lt; MC, RNG, S &gt;::result_type QuantLib::McSimulation&lt; MC, RNG, S &gt;::errorEstimate</definition>
        <argsstring>() const</argsstring>
        <name>errorEstimate</name>
        <qualifiedname>QuantLib::McSimulation::errorEstimate</qualifiedname>
        <briefdescription>
<para>error estimated using the samples simulated so far </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/mcsimulation.hpp" line="61" column="21" bodyfile="ql/pricingengines/mcsimulation.hpp" bodystart="211" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_mc_simulation_1aada0200a7fb38c4bc94bbcb49464d35b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const stats_type &amp;</type>
        <definition>const McSimulation&lt; MC, RNG, S &gt;::stats_type &amp; QuantLib::McSimulation&lt; MC, RNG, S &gt;::sampleAccumulator</definition>
        <argsstring>() const</argsstring>
        <name>sampleAccumulator</name>
        <qualifiedname>QuantLib::McSimulation::sampleAccumulator</qualifiedname>
        <briefdescription>
<para>access to the sample accumulator for richer statistics </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/mcsimulation.hpp" line="63" column="26" bodyfile="ql/pricingengines/mcsimulation.hpp" bodystart="217" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_mc_simulation_1af5ccf2e30a050c14f9e30965855b4993" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::McSimulation&lt; MC, RNG, S &gt;::calculate</definition>
        <argsstring>(Real requiredTolerance, Size requiredSamples, Size maxSamples) const</argsstring>
        <name>calculate</name>
        <qualifiedname>QuantLib::McSimulation::calculate</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>requiredTolerance</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>requiredSamples</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>maxSamples</declname>
        </param>
        <briefdescription>
<para>basic calculate method provided to inherited pricing engines </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Initialize the one-factor Monte Carlo</para>
        </inbodydescription>
        <location file="ql/pricingengines/mcsimulation.hpp" line="65" column="14" bodyfile="ql/pricingengines/mcsimulation.hpp" bodystart="159" bodyend="207"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_mc_simulation_1a3242253b8262657e78739463a077c1d6" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::McSimulation&lt; MC, RNG, S &gt;::McSimulation</definition>
        <argsstring>(bool antitheticVariate, bool controlVariate)</argsstring>
        <name>McSimulation</name>
        <qualifiedname>QuantLib::McSimulation::McSimulation</qualifiedname>
        <param>
          <type>bool</type>
          <declname>antitheticVariate</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>controlVariate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/mcsimulation.hpp" line="69" column="9" bodyfile="ql/pricingengines/mcsimulation.hpp" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_mc_simulation_1a0e142b20adbf77779877d3603f9fa9b5" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_path_pricer" kindref="compound">path_pricer_type</ref> &gt;</type>
        <definition>virtual ext::shared_ptr&lt; path_pricer_type &gt; QuantLib::McSimulation&lt; MC, RNG, S &gt;::pathPricer</definition>
        <argsstring>() const =0</argsstring>
        <name>pathPricer</name>
        <qualifiedname>QuantLib::McSimulation::pathPricer</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_m_c_barrier_engine_1aadfd227e6b32b2807a22db824fed7876">pathPricer</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_digital_engine_1aba38ebec7430f40d8bd3497dff2d21cd">pathPricer</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_arithmetic_a_p_engine_1ac959c2133abc78a7c9f61d39c42d0461">pathPricer</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_arithmetic_a_p_heston_engine_1a0a38ae2c4bfbab17d5645e20cf660294">pathPricer</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_arithmetic_a_s_engine_1af5dc5bd5d1873d6039d5566f312f4936">pathPricer</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_geometric_a_p_engine_1a9d59e865e02ff12465e8a2a37d39d307">pathPricer</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_geometric_a_p_heston_engine_1a81f1067692f057fa1b01ac3b18e54049">pathPricer</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_double_barrier_engine_1a40ce4a193f9c823b82d6ef8f00306bcb">pathPricer</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_european_basket_engine_1a1bdaf504ad36f6914fe5a0b34de5ca08">pathPricer</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_european_engine_1ae2cdd8f156b55dec86455e7b0f3e2cb9">pathPricer</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_european_g_j_r_g_a_r_c_h_engine_1a94e4530018c772232ebc2e73cb5bc824">pathPricer</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_european_heston_engine_1a08251d546d692fa367a06b5410124267">pathPricer</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_everest_engine_1a28f4b7e9494c5846bf80762aa254f066">pathPricer</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_european_b_s_engine_1a92f290b8d11805691bb0fab389cdf126">pathPricer</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_european_heston_engine_1a2d6aaad4ebc6063dac6d231f75d8fa43">pathPricer</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_heston_hull_white_engine_1a88b05de902aee45e6606374eb423ed85">pathPricer</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_himalaya_engine_1a2a3a227ee5168bc8497cecb624128231">pathPricer</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_hull_white_cap_floor_engine_1a873fd0e61d6d26815d14978a5d3dff64">pathPricer</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_longstaff_schwartz_engine_1aadaa6d56aad9a5ea6fdaa950d3b0e9c3">pathPricer</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_longstaff_schwartz_engine_1aadaa6d56aad9a5ea6fdaa950d3b0e9c3">pathPricer</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_longstaff_schwartz_engine_1aadaa6d56aad9a5ea6fdaa950d3b0e9c3">pathPricer</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a3224e3d0f4f5ea7bc84589418a84762b">pathPricer</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a3224e3d0f4f5ea7bc84589418a84762b">pathPricer</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_lookback_engine_1ab09c8364aea99d79bc2faf0f19e9fe15">pathPricer</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_pagoda_engine_1aef08ad57289c73af359eb47e3bdb8b3d">pathPricer</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_path_basket_engine_1ad94a29c5615ad7e61dbafc69c7a470a3">pathPricer</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_performance_engine_1aa6c2307365441b77222816cae9123ce8">pathPricer</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_variance_swap_engine_1a75b60ee26e75ab39f1f4752726e5b105">pathPricer</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/mcsimulation.hpp" line="73" column="33"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_mc_simulation_1a9618deed5bf4bdba261c1d68bebc3a6f" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_multi_path_generator" kindref="compound">path_generator_type</ref> &gt;</type>
        <definition>virtual ext::shared_ptr&lt; path_generator_type &gt; QuantLib::McSimulation&lt; MC, RNG, S &gt;::pathGenerator</definition>
        <argsstring>() const =0</argsstring>
        <name>pathGenerator</name>
        <qualifiedname>QuantLib::McSimulation::pathGenerator</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_m_c_barrier_engine_1a2a16415c4c39594310263a6d63d5e5d1">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a68e1871fa4693ed40279e438152f3016">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a68e1871fa4693ed40279e438152f3016">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a68e1871fa4693ed40279e438152f3016">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_double_barrier_engine_1a7372959d1929b065c3452de68014be94">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_european_basket_engine_1a1e93d5ab88d8d5b1a5cc7e793e679269">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_everest_engine_1adf4cdb164fce604e336e4c4188902533">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1ae0706154eb396f85655316a3d134aa9d">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1ae0706154eb396f85655316a3d134aa9d">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1ae0706154eb396f85655316a3d134aa9d">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_himalaya_engine_1a7ead4bea68b8a50c5448703f3114aecd">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_hull_white_cap_floor_engine_1acacb4850c15c867a34e3c5745f7a7e52">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_longstaff_schwartz_engine_1a8d279f09223d2fa043d2a7ea0d3cf484">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_longstaff_schwartz_engine_1a8d279f09223d2fa043d2a7ea0d3cf484">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_longstaff_schwartz_engine_1a8d279f09223d2fa043d2a7ea0d3cf484">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a7a1cedc37d7c9e22ffb11d2b18f599d8">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a7a1cedc37d7c9e22ffb11d2b18f599d8">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_lookback_engine_1a597dc935573c8e174dba9da05e642988">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_pagoda_engine_1a67d86bf9407c1e929cd5cf2126499d6c">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_path_basket_engine_1a3631935abfdb69b83c816f5778d1b0a4">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_performance_engine_1a70dd705b91d52c92df7eb815c2649a0e">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1af619e062350d6b7f5f8b5e09e435c0ff">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1af619e062350d6b7f5f8b5e09e435c0ff">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1af619e062350d6b7f5f8b5e09e435c0ff">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1af619e062350d6b7f5f8b5e09e435c0ff">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1af619e062350d6b7f5f8b5e09e435c0ff">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_variance_swap_engine_1a8773bac83bf34bc7eeeda39505dbd7c1">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a68e1871fa4693ed40279e438152f3016">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a68e1871fa4693ed40279e438152f3016">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a68e1871fa4693ed40279e438152f3016">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a68e1871fa4693ed40279e438152f3016">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1ae0706154eb396f85655316a3d134aa9d">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1ae0706154eb396f85655316a3d134aa9d">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1ae0706154eb396f85655316a3d134aa9d">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1ae0706154eb396f85655316a3d134aa9d">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1af619e062350d6b7f5f8b5e09e435c0ff">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1af619e062350d6b7f5f8b5e09e435c0ff">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a68e1871fa4693ed40279e438152f3016">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a68e1871fa4693ed40279e438152f3016">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a68e1871fa4693ed40279e438152f3016">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a68e1871fa4693ed40279e438152f3016">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1ae0706154eb396f85655316a3d134aa9d">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1ae0706154eb396f85655316a3d134aa9d">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1ae0706154eb396f85655316a3d134aa9d">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1ae0706154eb396f85655316a3d134aa9d">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1af619e062350d6b7f5f8b5e09e435c0ff">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1af619e062350d6b7f5f8b5e09e435c0ff">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1af619e062350d6b7f5f8b5e09e435c0ff">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1af619e062350d6b7f5f8b5e09e435c0ff">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a68e1871fa4693ed40279e438152f3016">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a68e1871fa4693ed40279e438152f3016">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a68e1871fa4693ed40279e438152f3016">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a68e1871fa4693ed40279e438152f3016">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1ae0706154eb396f85655316a3d134aa9d">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1ae0706154eb396f85655316a3d134aa9d">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1ae0706154eb396f85655316a3d134aa9d">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1ae0706154eb396f85655316a3d134aa9d">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1af619e062350d6b7f5f8b5e09e435c0ff">pathGenerator</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1af619e062350d6b7f5f8b5e09e435c0ff">pathGenerator</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/mcsimulation.hpp" line="74" column="33"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_mc_simulation_1a5b5c524a5e54a4f91ce6a6d6537e7ee3" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_quant_lib_1_1_time_grid" kindref="compound">TimeGrid</ref></type>
        <definition>virtual TimeGrid QuantLib::McSimulation&lt; MC, RNG, S &gt;::timeGrid</definition>
        <argsstring>() const =0</argsstring>
        <name>timeGrid</name>
        <qualifiedname>QuantLib::McSimulation::timeGrid</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_m_c_barrier_engine_1aa0c2465173d4a7adc3bfd28639507d78">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a73db7a157361f154cb366af5d9be2efd">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a73db7a157361f154cb366af5d9be2efd">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a73db7a157361f154cb366af5d9be2efd">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_double_barrier_engine_1ad7d376770d1c37ec70dd81a5c48b5d6b">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_european_basket_engine_1ae664decd68aa8da1e1189d257518e89a">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_everest_engine_1ac94b47ffe88dbdbdce613618abd1386e">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a83aa0dbf1772c15208e4d6d252f6c648">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a83aa0dbf1772c15208e4d6d252f6c648">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a83aa0dbf1772c15208e4d6d252f6c648">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_himalaya_engine_1a3745e05399d43c80689d644ad9c1f70a">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_hull_white_cap_floor_engine_1ab6fb5d53c0848191ac93911aa0a4649b">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_longstaff_schwartz_engine_1a2e1e35599cb9ec91f3ffa8d49d869eff">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_longstaff_schwartz_engine_1a2e1e35599cb9ec91f3ffa8d49d869eff">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_longstaff_schwartz_engine_1a2e1e35599cb9ec91f3ffa8d49d869eff">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a4cffc89abb9b573a1b7645c4f855702c">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a4cffc89abb9b573a1b7645c4f855702c">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_lookback_engine_1a512a67474869521f9bd98b930af54b7a">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_pagoda_engine_1a1a7153355d3fdc24f65efe5016948472">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_path_basket_engine_1a712ef9cafea7c617a7f34f97d53cd41e">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_performance_engine_1a1cee516b40b5a9a5ed5e585b543c3fe5">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1a9860e354e46988f9fca156a8177ecf62">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1a9860e354e46988f9fca156a8177ecf62">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1a9860e354e46988f9fca156a8177ecf62">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1a9860e354e46988f9fca156a8177ecf62">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1a9860e354e46988f9fca156a8177ecf62">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_variance_swap_engine_1aedfdc4be7f70a4f0101679fdb950abfb">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a73db7a157361f154cb366af5d9be2efd">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a73db7a157361f154cb366af5d9be2efd">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a73db7a157361f154cb366af5d9be2efd">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a73db7a157361f154cb366af5d9be2efd">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a83aa0dbf1772c15208e4d6d252f6c648">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a83aa0dbf1772c15208e4d6d252f6c648">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a83aa0dbf1772c15208e4d6d252f6c648">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a83aa0dbf1772c15208e4d6d252f6c648">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1a9860e354e46988f9fca156a8177ecf62">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1a9860e354e46988f9fca156a8177ecf62">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a73db7a157361f154cb366af5d9be2efd">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a73db7a157361f154cb366af5d9be2efd">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a73db7a157361f154cb366af5d9be2efd">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a73db7a157361f154cb366af5d9be2efd">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a83aa0dbf1772c15208e4d6d252f6c648">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a83aa0dbf1772c15208e4d6d252f6c648">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a83aa0dbf1772c15208e4d6d252f6c648">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a83aa0dbf1772c15208e4d6d252f6c648">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1a9860e354e46988f9fca156a8177ecf62">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1a9860e354e46988f9fca156a8177ecf62">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1a9860e354e46988f9fca156a8177ecf62">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1a9860e354e46988f9fca156a8177ecf62">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a73db7a157361f154cb366af5d9be2efd">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a73db7a157361f154cb366af5d9be2efd">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a73db7a157361f154cb366af5d9be2efd">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a73db7a157361f154cb366af5d9be2efd">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a83aa0dbf1772c15208e4d6d252f6c648">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a83aa0dbf1772c15208e4d6d252f6c648">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a83aa0dbf1772c15208e4d6d252f6c648">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a83aa0dbf1772c15208e4d6d252f6c648">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1a9860e354e46988f9fca156a8177ecf62">timeGrid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1a9860e354e46988f9fca156a8177ecf62">timeGrid</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/mcsimulation.hpp" line="76" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_mc_simulation_1ae3b7f6e12eaf228b5c65f70a721eb729" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_path_pricer" kindref="compound">path_pricer_type</ref> &gt;</type>
        <definition>virtual ext::shared_ptr&lt; path_pricer_type &gt; QuantLib::McSimulation&lt; MC, RNG, S &gt;::controlPathPricer</definition>
        <argsstring>() const</argsstring>
        <name>controlPathPricer</name>
        <qualifiedname>QuantLib::McSimulation::controlPathPricer</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_m_c_american_engine_1a663949ba0f284901891f6b017a6d72dc">controlPathPricer</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_arithmetic_a_p_engine_1a84f718c2daadbdb83b9e37fbd8c95d7d">controlPathPricer</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_arithmetic_a_p_heston_engine_1ae5bd7cb856c9eb896efa616538d09670">controlPathPricer</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_european_heston_engine_1a864ee0503ee46bdab1fa628696d72e48">controlPathPricer</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_heston_hull_white_engine_1a8f670e48070648b39f2d57f2fdf4dc4d">controlPathPricer</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/mcsimulation.hpp" line="77" column="33" bodyfile="ql/pricingengines/mcsimulation.hpp" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_mc_simulation_1a81f0b6c250bc8a1ba246faa3b7bbe70f" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_multi_path_generator" kindref="compound">path_generator_type</ref> &gt;</type>
        <definition>virtual ext::shared_ptr&lt; path_generator_type &gt; QuantLib::McSimulation&lt; MC, RNG, S &gt;::controlPathGenerator</definition>
        <argsstring>() const</argsstring>
        <name>controlPathGenerator</name>
        <qualifiedname>QuantLib::McSimulation::controlPathGenerator</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_m_c_heston_hull_white_engine_1a7e0d15ae2849c84e708bd69402ea1c2a">controlPathGenerator</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/mcsimulation.hpp" line="81" column="9" bodyfile="ql/pricingengines/mcsimulation.hpp" bodystart="81" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_mc_simulation_1ad835a3988a983d55494f911f53b78408" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_pricing_engine" kindref="compound">PricingEngine</ref> &gt;</type>
        <definition>virtual ext::shared_ptr&lt; PricingEngine &gt; QuantLib::McSimulation&lt; MC, RNG, S &gt;::controlPricingEngine</definition>
        <argsstring>() const</argsstring>
        <name>controlPricingEngine</name>
        <qualifiedname>QuantLib::McSimulation::controlPricingEngine</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_m_c_american_engine_1a1386e5d4b5e92647f04251b76bddacbd">controlPricingEngine</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_arithmetic_a_p_engine_1af82e653202231b550b02686a290a59e6">controlPricingEngine</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_arithmetic_a_p_heston_engine_1aa0165a8d1dce85bf77403a671132c34c">controlPricingEngine</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_european_heston_engine_1af32c22ee8ddfcaf676c81a71b03f4a2a">controlPricingEngine</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_heston_hull_white_engine_1a0d96671954183b7bce8aaa51d4c2bbf1">controlPricingEngine</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/mcsimulation.hpp" line="84" column="33" bodyfile="ql/pricingengines/mcsimulation.hpp" bodystart="84" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_mc_simulation_1a503ac4db5fa01aa75596c6b42d9d5832" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>result_type</type>
        <definition>virtual result_type QuantLib::McSimulation&lt; MC, RNG, S &gt;::controlVariateValue</definition>
        <argsstring>() const</argsstring>
        <name>controlVariateValue</name>
        <qualifiedname>QuantLib::McSimulation::controlVariateValue</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_m_c_american_engine_1abed42ceec1587719cfb5064d9f6ec815">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a2ae1ef63dba5436dc687afdcd512bae5">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a2ae1ef63dba5436dc687afdcd512bae5">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a2ae1ef63dba5436dc687afdcd512bae5">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a9c1a7f2d2025e9c55d98d98f86137cc2">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a9c1a7f2d2025e9c55d98d98f86137cc2">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a9c1a7f2d2025e9c55d98d98f86137cc2">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1ac1df3f9481ce47a70dfb4bef1eb393ea">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1ac1df3f9481ce47a70dfb4bef1eb393ea">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1ac1df3f9481ce47a70dfb4bef1eb393ea">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1ac1df3f9481ce47a70dfb4bef1eb393ea">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1ac1df3f9481ce47a70dfb4bef1eb393ea">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a2ae1ef63dba5436dc687afdcd512bae5">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a2ae1ef63dba5436dc687afdcd512bae5">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a2ae1ef63dba5436dc687afdcd512bae5">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a2ae1ef63dba5436dc687afdcd512bae5">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a9c1a7f2d2025e9c55d98d98f86137cc2">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a9c1a7f2d2025e9c55d98d98f86137cc2">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a9c1a7f2d2025e9c55d98d98f86137cc2">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a9c1a7f2d2025e9c55d98d98f86137cc2">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1ac1df3f9481ce47a70dfb4bef1eb393ea">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1ac1df3f9481ce47a70dfb4bef1eb393ea">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a2ae1ef63dba5436dc687afdcd512bae5">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a2ae1ef63dba5436dc687afdcd512bae5">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a2ae1ef63dba5436dc687afdcd512bae5">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a2ae1ef63dba5436dc687afdcd512bae5">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a9c1a7f2d2025e9c55d98d98f86137cc2">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a9c1a7f2d2025e9c55d98d98f86137cc2">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a9c1a7f2d2025e9c55d98d98f86137cc2">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a9c1a7f2d2025e9c55d98d98f86137cc2">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1ac1df3f9481ce47a70dfb4bef1eb393ea">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1ac1df3f9481ce47a70dfb4bef1eb393ea">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1ac1df3f9481ce47a70dfb4bef1eb393ea">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1ac1df3f9481ce47a70dfb4bef1eb393ea">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a2ae1ef63dba5436dc687afdcd512bae5">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a2ae1ef63dba5436dc687afdcd512bae5">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a2ae1ef63dba5436dc687afdcd512bae5">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base_1a2ae1ef63dba5436dc687afdcd512bae5">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a9c1a7f2d2025e9c55d98d98f86137cc2">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a9c1a7f2d2025e9c55d98d98f86137cc2">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a9c1a7f2d2025e9c55d98d98f86137cc2">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_forward_vanilla_engine_1a9c1a7f2d2025e9c55d98d98f86137cc2">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1ac1df3f9481ce47a70dfb4bef1eb393ea">controlVariateValue</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_m_c_vanilla_engine_1ac1df3f9481ce47a70dfb4bef1eb393ea">controlVariateValue</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/mcsimulation.hpp" line="87" column="29" bodyfile="ql/pricingengines/mcsimulation.hpp" bodystart="87" bodyend="89"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="class_quant_lib_1_1_mc_simulation_1ae21c92c6196d56c6a889389268ef2075" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Sequence</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>static Real QuantLib::McSimulation&lt; MC, RNG, S &gt;::maxError</definition>
        <argsstring>(const Sequence &amp;sequence)</argsstring>
        <name>maxError</name>
        <qualifiedname>QuantLib::McSimulation::maxError</qualifiedname>
        <param>
          <type>const Sequence &amp;</type>
          <declname>sequence</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/mcsimulation.hpp" line="91" column="21" bodyfile="ql/pricingengines/mcsimulation.hpp" bodystart="91" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_mc_simulation_1a10d5e5d85cc108ab976899890055e061" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>static Real QuantLib::McSimulation&lt; MC, RNG, S &gt;::maxError</definition>
        <argsstring>(Real error)</argsstring>
        <name>maxError</name>
        <qualifiedname>QuantLib::McSimulation::maxError</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>error</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/mcsimulation.hpp" line="94" column="21" bodyfile="ql/pricingengines/mcsimulation.hpp" bodystart="94" bodyend="96"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>base class for Monte Carlo engines </para>
    </briefdescription>
    <detaileddescription>
<para>Eventually this class might offer greeks methods. Deriving a class from <ref refid="class_quant_lib_1_1_mc_simulation" kindref="compound">McSimulation</ref> gives an easy way to write a Monte Carlo engine.</para>
<para>See McVanillaEngine as an example. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::path_generator_type&lt; MultiVariate, RNG, S &gt;</label>
        <link refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::path_pricer_type&lt; MultiVariate, RNG, S &gt;</label>
        <link refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::stats_type&lt; MultiVariate, RNG, S &gt;</label>
        <link refid="class_quant_lib_1_1_m_c_discrete_averaging_asian_engine_base"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::path_generator_type&lt; MultiVariate, RNG, S &gt;</label>
        <link refid="class_quant_lib_1_1_m_c_forward_vanilla_engine"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::path_pricer_type&lt; MultiVariate, RNG, S &gt;</label>
        <link refid="class_quant_lib_1_1_m_c_forward_vanilla_engine"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::stats_type&lt; MultiVariate, RNG, S &gt;</label>
        <link refid="class_quant_lib_1_1_m_c_forward_vanilla_engine"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QuantLib::MCVanillaEngine&lt; MultiVariate, RNG, S &gt;</label>
        <link refid="class_quant_lib_1_1_m_c_vanilla_engine"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::path_pricer_type&lt; MultiVariate, RNG, S &gt;</label>
        <link refid="class_quant_lib_1_1_m_c_vanilla_engine"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::McSimulation&lt; MC, RNG, S &gt;</label>
        <link refid="class_quant_lib_1_1_mc_simulation"/>
      </node>
    </inheritancegraph>
    <location file="ql/pricingengines/mcsimulation.hpp" line="43" column="5" bodyfile="ql/pricingengines/mcsimulation.hpp" bodystart="43" bodyend="100"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_mc_simulation_1a06f6de1952807cb9e689619d3f48450d" prot="protected" virt="non-virtual"><scope>QuantLib::McSimulation</scope><name>antitheticVariate_</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1af5ccf2e30a050c14f9e30965855b4993" prot="public" virt="non-virtual"><scope>QuantLib::McSimulation</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a81f0b6c250bc8a1ba246faa3b7bbe70f" prot="protected" virt="virtual"><scope>QuantLib::McSimulation</scope><name>controlPathGenerator</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1ae3b7f6e12eaf228b5c65f70a721eb729" prot="protected" virt="virtual"><scope>QuantLib::McSimulation</scope><name>controlPathPricer</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1ad835a3988a983d55494f911f53b78408" prot="protected" virt="virtual"><scope>QuantLib::McSimulation</scope><name>controlPricingEngine</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a0c55429fb2a2d840cd8d358a5973cc40" prot="protected" virt="non-virtual"><scope>QuantLib::McSimulation</scope><name>controlVariate_</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a503ac4db5fa01aa75596c6b42d9d5832" prot="protected" virt="virtual"><scope>QuantLib::McSimulation</scope><name>controlVariateValue</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1aa74e7e1891852e5c96da544b87af083c" prot="public" virt="non-virtual"><scope>QuantLib::McSimulation</scope><name>errorEstimate</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1ae21c92c6196d56c6a889389268ef2075" prot="protected" virt="non-virtual"><scope>QuantLib::McSimulation</scope><name>maxError</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a10d5e5d85cc108ab976899890055e061" prot="protected" virt="non-virtual"><scope>QuantLib::McSimulation</scope><name>maxError</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1afbdbf4a8ce56b1b6060c49ac91b1f55a" prot="protected" virt="non-virtual"><scope>QuantLib::McSimulation</scope><name>mcModel_</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a3242253b8262657e78739463a077c1d6" prot="protected" virt="non-virtual"><scope>QuantLib::McSimulation</scope><name>McSimulation</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1abb9fda006eeffea19c1f3a932c1fea8d" prot="public" virt="non-virtual"><scope>QuantLib::McSimulation</scope><name>path_generator_type</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a2c8dd16267be56bc37989f4f8e6d734d" prot="public" virt="non-virtual"><scope>QuantLib::McSimulation</scope><name>path_pricer_type</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a9618deed5bf4bdba261c1d68bebc3a6f" prot="protected" virt="pure-virtual"><scope>QuantLib::McSimulation</scope><name>pathGenerator</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a0e142b20adbf77779877d3603f9fa9b5" prot="protected" virt="pure-virtual"><scope>QuantLib::McSimulation</scope><name>pathPricer</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a5c793e8d12a221aec4c60f022d34eb81" prot="public" virt="non-virtual"><scope>QuantLib::McSimulation</scope><name>result_type</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1aada0200a7fb38c4bc94bbcb49464d35b" prot="public" virt="non-virtual"><scope>QuantLib::McSimulation</scope><name>sampleAccumulator</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a1ef01b50176cf01af164ed0b8b67bd7e" prot="public" virt="non-virtual"><scope>QuantLib::McSimulation</scope><name>stats_type</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a5b5c524a5e54a4f91ce6a6d6537e7ee3" prot="protected" virt="pure-virtual"><scope>QuantLib::McSimulation</scope><name>timeGrid</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a1c903a9dd586755f55377b522d99ac16" prot="public" virt="non-virtual"><scope>QuantLib::McSimulation</scope><name>value</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a06e9db2fbd3d80e6358e8494f4b6b6ea" prot="public" virt="non-virtual"><scope>QuantLib::McSimulation</scope><name>valueWithSamples</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a11624b5e53889858d9189f85e27d653d" prot="public" virt="virtual"><scope>QuantLib::McSimulation</scope><name>~McSimulation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

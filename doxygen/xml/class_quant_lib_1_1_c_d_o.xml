<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_c_d_o" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::CDO</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_instrument" prot="public" virt="non-virtual">QuantLib::Instrument</basecompoundref>
    <includes refid="cdo_8hpp" local="no">cdo.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_c_d_o_1afdcb611da1c5783d0057909f0ef39d5c" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CDO::attachment_</definition>
        <argsstring></argsstring>
        <name>attachment_</name>
        <qualifiedname>QuantLib::CDO::attachment_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="154" column="14" bodyfile="ql/experimental/credit/cdo.hpp" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_d_o_1a3ee0a91904febdfdbf2a33cb6f9d69b4" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CDO::detachment_</definition>
        <argsstring></argsstring>
        <name>detachment_</name>
        <qualifiedname>QuantLib::CDO::detachment_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="155" column="14" bodyfile="ql/experimental/credit/cdo.hpp" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_d_o_1a9cf1ce6933cc80a1eefecd694300378c" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::CDO::nominals_</definition>
        <argsstring></argsstring>
        <name>nominals_</name>
        <qualifiedname>QuantLib::CDO::nominals_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="156" column="21" bodyfile="ql/experimental/credit/cdo.hpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_d_o_1a9272098269232fab524d9cacb741eacd" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_default_probability_term_structure" kindref="compound">DefaultProbabilityTermStructure</ref> &gt; &gt;</type>
        <definition>std::vector&lt;Handle&lt;DefaultProbabilityTermStructure&gt; &gt; QuantLib::CDO::basket_</definition>
        <argsstring></argsstring>
        <name>basket_</name>
        <qualifiedname>QuantLib::CDO::basket_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="157" column="21" bodyfile="ql/experimental/credit/cdo.hpp" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_d_o_1ab819a5f8c66eec92e60a17535e0f6684" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_one_factor_copula" kindref="compound">OneFactorCopula</ref> &gt;</type>
        <definition>Handle&lt;OneFactorCopula&gt; QuantLib::CDO::copula_</definition>
        <argsstring></argsstring>
        <name>copula_</name>
        <qualifiedname>QuantLib::CDO::copula_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="158" column="16" bodyfile="ql/experimental/credit/cdo.hpp" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_d_o_1ad83b4b24ddf6ba4cafa8e0f0d20c12ff" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::CDO::protectionSeller_</definition>
        <argsstring></argsstring>
        <name>protectionSeller_</name>
        <qualifiedname>QuantLib::CDO::protectionSeller_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="159" column="14" bodyfile="ql/experimental/credit/cdo.hpp" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_d_o_1ac9695996c42c2288538e1d3ce92d3e1e" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_schedule" kindref="compound">Schedule</ref></type>
        <definition>Schedule QuantLib::CDO::premiumSchedule_</definition>
        <argsstring></argsstring>
        <name>premiumSchedule_</name>
        <qualifiedname>QuantLib::CDO::premiumSchedule_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="161" column="18" bodyfile="ql/experimental/credit/cdo.hpp" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_d_o_1a1277e25fcb57d70f171e5e78c2755962" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::CDO::premiumRate_</definition>
        <argsstring></argsstring>
        <name>premiumRate_</name>
        <qualifiedname>QuantLib::CDO::premiumRate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="162" column="14" bodyfile="ql/experimental/credit/cdo.hpp" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_d_o_1a4ca7b20924ed59216d05f14d40513e71" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref></type>
        <definition>DayCounter QuantLib::CDO::dayCounter_</definition>
        <argsstring></argsstring>
        <name>dayCounter_</name>
        <qualifiedname>QuantLib::CDO::dayCounter_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="163" column="20" bodyfile="ql/experimental/credit/cdo.hpp" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_d_o_1a06ad15392492b6f948dc0592022110c7" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::CDO::recoveryRate_</definition>
        <argsstring></argsstring>
        <name>recoveryRate_</name>
        <qualifiedname>QuantLib::CDO::recoveryRate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="164" column="14" bodyfile="ql/experimental/credit/cdo.hpp" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_d_o_1aa13b765c1bb7ef76127a5ea5a11d5009" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::CDO::upfrontPremiumRate_</definition>
        <argsstring></argsstring>
        <name>upfrontPremiumRate_</name>
        <qualifiedname>QuantLib::CDO::upfrontPremiumRate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="165" column="14" bodyfile="ql/experimental/credit/cdo.hpp" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_d_o_1adb4f98341d345156edb4101a71dc686c" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
        <definition>Handle&lt;YieldTermStructure&gt; QuantLib::CDO::yieldTS_</definition>
        <argsstring></argsstring>
        <name>yieldTS_</name>
        <qualifiedname>QuantLib::CDO::yieldTS_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="166" column="16" bodyfile="ql/experimental/credit/cdo.hpp" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_d_o_1a4d011421401c11a7cc3bef4ff2498bb1" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::CDO::nBuckets_</definition>
        <argsstring></argsstring>
        <name>nBuckets_</name>
        <qualifiedname>QuantLib::CDO::nBuckets_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="167" column="14" bodyfile="ql/experimental/credit/cdo.hpp" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_d_o_1a9aa18834bd88d6eb6986a7d58f7c65e0" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref></type>
        <definition>Period QuantLib::CDO::integrationStep_</definition>
        <argsstring></argsstring>
        <name>integrationStep_</name>
        <qualifiedname>QuantLib::CDO::integrationStep_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="168" column="16" bodyfile="ql/experimental/credit/cdo.hpp" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_d_o_1ae61de2cd521d0f9d14d771a1516cc5c3" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::CDO::lgds_</definition>
        <argsstring></argsstring>
        <name>lgds_</name>
        <qualifiedname>QuantLib::CDO::lgds_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="170" column="21" bodyfile="ql/experimental/credit/cdo.hpp" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_d_o_1ab214bd686dfd22100423261e9be93ee0" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CDO::nominal_</definition>
        <argsstring></argsstring>
        <name>nominal_</name>
        <qualifiedname>QuantLib::CDO::nominal_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="172" column="14" bodyfile="ql/experimental/credit/cdo.hpp" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_d_o_1a0056a33c13b20dd807ba87f2ee51f4a3" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CDO::lgd_</definition>
        <argsstring></argsstring>
        <name>lgd_</name>
        <qualifiedname>QuantLib::CDO::lgd_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="173" column="14" bodyfile="ql/experimental/credit/cdo.hpp" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_d_o_1a3b56923d172591da295b26f14b08646f" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CDO::xMax_</definition>
        <argsstring></argsstring>
        <name>xMax_</name>
        <qualifiedname>QuantLib::CDO::xMax_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="174" column="14" bodyfile="ql/experimental/credit/cdo.hpp" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_d_o_1a5342d03264ceb314ded23fb794c80318" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CDO::xMin_</definition>
        <argsstring></argsstring>
        <name>xMin_</name>
        <qualifiedname>QuantLib::CDO::xMin_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="175" column="14" bodyfile="ql/experimental/credit/cdo.hpp" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_d_o_1a90e001580279dc2017b695a469b0c9d7" prot="private" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::CDO::error_</definition>
        <argsstring></argsstring>
        <name>error_</name>
        <qualifiedname>QuantLib::CDO::error_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="177" column="22" bodyfile="ql/experimental/credit/cdo.hpp" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_d_o_1a45f545b0cf6d49d5f36807f28e2ba5b7" prot="private" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CDO::premiumValue_</definition>
        <argsstring></argsstring>
        <name>premiumValue_</name>
        <qualifiedname>QuantLib::CDO::premiumValue_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="179" column="22" bodyfile="ql/experimental/credit/cdo.hpp" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_d_o_1ad60ac225a9686c724e87c06e2781b874" prot="private" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CDO::protectionValue_</definition>
        <argsstring></argsstring>
        <name>protectionValue_</name>
        <qualifiedname>QuantLib::CDO::protectionValue_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="180" column="22" bodyfile="ql/experimental/credit/cdo.hpp" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_d_o_1a0bbb6101c6e3e5ed421129b3ce95af29" prot="private" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CDO::upfrontPremiumValue_</definition>
        <argsstring></argsstring>
        <name>upfrontPremiumValue_</name>
        <qualifiedname>QuantLib::CDO::upfrontPremiumValue_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="181" column="22" bodyfile="ql/experimental/credit/cdo.hpp" bodystart="181" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_c_d_o_1a9310923f08d90bce636554081f38610c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::CDO::CDO</definition>
        <argsstring>(Real attachment, Real detachment, std::vector&lt; Real &gt; nominals, const std::vector&lt; Handle&lt; DefaultProbabilityTermStructure &gt; &gt; &amp;basket, Handle&lt; OneFactorCopula &gt; copula, bool protectionSeller, Schedule premiumSchedule, Rate premiumRate, DayCounter dayCounter, Rate recoveryRate, Rate upfrontPremiumRate, Handle&lt; YieldTermStructure &gt; yieldTS, Size nBuckets, const Period &amp;integrationStep=Period(10, Years))</argsstring>
        <name>CDO</name>
        <qualifiedname>QuantLib::CDO::CDO</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>attachment</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>detachment</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
          <declname>nominals</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_default_probability_term_structure" kindref="compound">DefaultProbabilityTermStructure</ref> &gt; &gt; &amp;</type>
          <declname>basket</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_one_factor_copula" kindref="compound">OneFactorCopula</ref> &gt;</type>
          <declname>copula</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>protectionSeller</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_schedule" kindref="compound">Schedule</ref></type>
          <declname>premiumSchedule</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>premiumRate</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref></type>
          <declname>dayCounter</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>recoveryRate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>upfrontPremiumRate</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
          <declname>yieldTS</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>nBuckets</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>integrationStep</declname>
          <defval><ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref>(10, Years)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>attachment</parametername>
</parameternamelist>
<parameterdescription>
<para>fraction of the LGD where protection starts </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>detachment</parametername>
</parameternamelist>
<parameterdescription>
<para>fraction of the LGD where protection ends </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nominals</parametername>
</parameternamelist>
<parameterdescription>
<para>vector of basket nominal amounts </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>basket</parametername>
</parameternamelist>
<parameterdescription>
<para>default basket represented by a vector of default term structures that allow computing single name default probabilities depending on time </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>copula</parametername>
</parameternamelist>
<parameterdescription>
<para>one-factor copula </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>protectionSeller</parametername>
</parameternamelist>
<parameterdescription>
<para>sold protection if set to true, purchased otherwise </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>premiumSchedule</parametername>
</parameternamelist>
<parameterdescription>
<para>schedule for premium payments </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>premiumRate</parametername>
</parameternamelist>
<parameterdescription>
<para>annual premium rate, e.g. 0.05 for 5% p.a. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dayCounter</parametername>
</parameternamelist>
<parameterdescription>
<para>day count convention for the premium rate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>recoveryRate</parametername>
</parameternamelist>
<parameterdescription>
<para>recovery rate as a fraction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>upfrontPremiumRate</parametername>
</parameternamelist>
<parameterdescription>
<para>premium as a tranche notional fraction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yieldTS</parametername>
</parameternamelist>
<parameterdescription>
<para>yield term structure handle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nBuckets</parametername>
</parameternamelist>
<parameterdescription>
<para>number of distribution buckets </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>integrationStep</parametername>
</parameternamelist>
<parameterdescription>
<para>time step for integrating over one premium period; if larger than premium period length, a single step is taken </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="121" column="9" bodyfile="ql/experimental/credit/cdo.cpp" bodystart="28" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_d_o_1a549f4a41f0ece44bbd469fac90283839" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CDO::nominal</definition>
        <argsstring>() const</argsstring>
        <name>nominal</name>
        <qualifiedname>QuantLib::CDO::nominal</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="136" column="14" bodyfile="ql/experimental/credit/cdo.hpp" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_d_o_1aabbf1b9a462a9a986c056eea15320c9a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CDO::lgd</definition>
        <argsstring>() const</argsstring>
        <name>lgd</name>
        <qualifiedname>QuantLib::CDO::lgd</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="137" column="14" bodyfile="ql/experimental/credit/cdo.hpp" bodystart="137" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_d_o_1a8ac1584d24d92126128eb4a7b7e65759" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CDO::attachment</definition>
        <argsstring>() const</argsstring>
        <name>attachment</name>
        <qualifiedname>QuantLib::CDO::attachment</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="138" column="14" bodyfile="ql/experimental/credit/cdo.hpp" bodystart="138" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_d_o_1ad5c85091e62243259c6699f2c456728c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CDO::detachment</definition>
        <argsstring>() const</argsstring>
        <name>detachment</name>
        <qualifiedname>QuantLib::CDO::detachment</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="139" column="14" bodyfile="ql/experimental/credit/cdo.hpp" bodystart="139" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_d_o_1aa156f595eeb4eefd639e1c77420b7805" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt; Real &gt; QuantLib::CDO::nominals</definition>
        <argsstring>()</argsstring>
        <name>nominals</name>
        <qualifiedname>QuantLib::CDO::nominals</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="140" column="21" bodyfile="ql/experimental/credit/cdo.hpp" bodystart="140" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_d_o_1ac751720b53980bbc495843a993abe33e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::CDO::size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <qualifiedname>QuantLib::CDO::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="141" column="14" bodyfile="ql/experimental/credit/cdo.hpp" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_d_o_1af4f82412bcb61cb09dbcabc47754ec32" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QuantLib::CDO::isExpired</definition>
        <argsstring>() const override</argsstring>
        <name>isExpired</name>
        <qualifiedname>QuantLib::CDO::isExpired</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_instrument_1a121a2a929b179900744a58272d46aefe">isExpired</reimplements>
        <briefdescription>
<para>returns whether the instrument might have value greater than zero. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="143" column="14" bodyfile="ql/experimental/credit/cdo.cpp" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_d_o_1a33530f522ea48718f6de315a9887fd70" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::CDO::fairPremium</definition>
        <argsstring>() const</argsstring>
        <name>fairPremium</name>
        <qualifiedname>QuantLib::CDO::fairPremium</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="144" column="14" bodyfile="ql/experimental/credit/cdo.cpp" bodystart="203" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_d_o_1ac4bdffc43682bcb9b729e327dd795377" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::CDO::premiumValue</definition>
        <argsstring>() const</argsstring>
        <name>premiumValue</name>
        <qualifiedname>QuantLib::CDO::premiumValue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="145" column="14" bodyfile="ql/experimental/credit/cdo.cpp" bodystart="188" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_d_o_1a211446b1c6bcba46b06271509f855868" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::CDO::protectionValue</definition>
        <argsstring>() const</argsstring>
        <name>protectionValue</name>
        <qualifiedname>QuantLib::CDO::protectionValue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="146" column="14" bodyfile="ql/experimental/credit/cdo.cpp" bodystart="193" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_d_o_1adc36d3843d087ef33f6344b1b2c81a2e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::CDO::error</definition>
        <argsstring>() const</argsstring>
        <name>error</name>
        <qualifiedname>QuantLib::CDO::error</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="147" column="14" bodyfile="ql/experimental/credit/cdo.cpp" bodystart="198" bodyend="201"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_c_d_o_1a2dc8597f83a6452c973e997f1b600424" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::CDO::setupExpired</definition>
        <argsstring>() const override</argsstring>
        <name>setupExpired</name>
        <qualifiedname>QuantLib::CDO::setupExpired</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_instrument_1a73d90597fcd3ff52a8aed674393ab574">setupExpired</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must leave the instrument in a consistent state when the expiration condition is met. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="150" column="14" bodyfile="ql/experimental/credit/cdo.cpp" bodystart="90" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_d_o_1a52fcd2d0a0a6406edc8a81bbd16751a0" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::CDO::performCalculations</definition>
        <argsstring>() const override</argsstring>
        <name>performCalculations</name>
        <qualifiedname>QuantLib::CDO::performCalculations</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_lazy_object_1aafa5583a3743d9f93fa40da5b62e1ff8">performCalculations</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must implement any calculations which must be (re)done in order to calculate the desired results. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="151" column="14" bodyfile="ql/experimental/credit/cdo.cpp" bodystart="118" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_d_o_1a9bc44dc4d14be2b279f269f82522c7b3" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CDO::expectedTrancheLoss</definition>
        <argsstring>(Date d) const</argsstring>
        <name>expectedTrancheLoss</name>
        <qualifiedname>QuantLib::CDO::expectedTrancheLoss</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/cdo.hpp" line="152" column="14" bodyfile="ql/experimental/credit/cdo.cpp" bodystart="95" bodyend="115"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>collateralized debt obligation </para>
    </briefdescription>
    <detaileddescription>
<para>The instrument prices a mezzanine <ref refid="class_quant_lib_1_1_c_d_o" kindref="compound">CDO</ref> tranche with loss given default between attachment point <formula id="29">$ D_1$</formula> and detachment point <formula id="30">$ D_2 &gt; D_1 $</formula>.</para>
<para>For purchased protection, the instrument value is given by the difference of the protection value <formula id="31">$ V_1 $</formula> and premium value <formula id="32">$ V_2 $</formula>,</para>
<para><formula id="33">\[ V = V_1 - V_2. \]</formula></para>
<para>The protection leg is priced as follows:</para>
<para><itemizedlist>
<listitem><para>Build the probability distribution for volume of defaults <formula id="6">$ L $</formula> (before recovery) or <ref refid="class_quant_lib_1_1_loss" kindref="compound">Loss</ref> Given <ref refid="struct_quant_lib_1_1_default" kindref="compound">Default</ref>  <formula id="34">$ LGD =
  (1-r)\,L $</formula> at times/dates <formula id="35">$ t_i, i=1, ..., N$</formula> (premium schedule times with intermediate steps)</para>
</listitem><listitem><para>Determine the expected value <formula id="36">$ E_i = E_{t_i}\,\left[Pay(LGD)\right] $</formula> of the protection payoff <formula id="37">$ Pay(LGD) $</formula> at each time <formula id="38">$ t_i$</formula> where         <formula id="39">\[ Pay(L) = min (D_1, LGD) - min (D_2, LGD) = \left\{
 \begin{array}{lcl}
 \displaystyle 0 &amp;;&amp; LGD &lt; D_1 \\
 \displaystyle LGD - D_1 &amp;;&amp; D_1 \leq LGD \leq D_2 \\
 \displaystyle D_2 - D_1 &amp;;&amp; LGD &gt; D_2
 \end{array}
 \right.
\]</formula></para>
</listitem><listitem><para>The protection value is then calculated as <formula id="40">\[ V_1 \:=\: \sum_{i=1}^N (E_i - E_{i-1}) \cdot  d_i \]</formula> where <formula id="41">$ d_i$</formula> is the discount factor at time/date <formula id="17">$ t_i $</formula></para>
</listitem></itemizedlist>
</para>
<para>The premium is paid on the protected notional amount, initially <formula id="42">$ D_2 - D_1. $</formula> This notional amount is reduced by the expected protection payments <formula id="43">$ E_i $</formula> at times <formula id="44">$ t_i, $</formula> so that the premium value is calculated as</para>
<para><formula id="45">\[V_2 = m \, \cdot \sum_{i=1}^N \,(D_2 - D_1 - E_i)
           \cdot \Delta_{i-1,i}\,d_i
\]</formula></para>
<para>where <formula id="46">$ m $</formula> is the premium rate, <formula id="47">$ \Delta_{i-1, i}$</formula> is the day count fraction between date/time <formula id="48">$ t_{i-1}$</formula> and <formula id="49">$ t_i.$</formula></para>
<para>The construction of the portfolio loss distribution  <formula id="50">$ E_i
$</formula> is based on the probability bucketing algorithm described in</para>
<para><bold> John Hull and Alan White, &quot;Valuation of a CDO and nth to default CDS
without Monte Carlo simulation&quot;, Journal of Derivatives 12, 2, 2004 </bold></para>
<para>The pricing algorithm allows for varying notional amounts and default termstructures of the underlyings.</para>
<para><xrefsect id="todo_1_todo000011"><xreftitle>Todo</xreftitle><xrefdescription><para>Investigate and fix cases <formula id="51">$ E_{i+1} &lt; E_i. $</formula> </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::CDO</label>
        <link refid="class_quant_lib_1_1_c_d_o"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Instrument</label>
        <link refid="class_quant_lib_1_1_instrument"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::CDO</label>
        <link refid="class_quant_lib_1_1_c_d_o"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="2">
        <label>QuantLib::Instrument</label>
        <link refid="class_quant_lib_1_1_instrument"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>valuationDate_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/credit/cdo.hpp" line="98" column="5" bodyfile="ql/experimental/credit/cdo.hpp" bodystart="98" bodyend="182"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_instrument_1a468edb294da268b097c91bf821084c07" prot="public" virt="non-virtual"><scope>QuantLib::CDO</scope><name>additionalResults</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a57d2b34e8625ab3d9ffa50c0c7931099" prot="protected" virt="non-virtual"><scope>QuantLib::CDO</scope><name>additionalResults_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a02070ea7442d30625992c1711030d4b8" prot="protected" virt="non-virtual"><scope>QuantLib::CDO</scope><name>alwaysForward_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a17c9433135a259e4776baec66204a484" prot="public" virt="non-virtual"><scope>QuantLib::CDO</scope><name>alwaysForwardNotifications</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1a8ac1584d24d92126128eb4a7b7e65759" prot="public" virt="non-virtual"><scope>QuantLib::CDO</scope><name>attachment</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1afdcb611da1c5783d0057909f0ef39d5c" prot="private" virt="non-virtual"><scope>QuantLib::CDO</scope><name>attachment_</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1a9272098269232fab524d9cacb741eacd" prot="private" virt="non-virtual"><scope>QuantLib::CDO</scope><name>basket_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a4c573c48f7eaead5042864ac0eb5b025" prot="protected" virt="virtual"><scope>QuantLib::CDO</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a58b4986a80efa18634483a92c121e26e" prot="protected" virt="non-virtual"><scope>QuantLib::CDO</scope><name>calculated_</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1a9310923f08d90bce636554081f38610c" prot="public" virt="non-virtual"><scope>QuantLib::CDO</scope><name>CDO</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1ab819a5f8c66eec92e60a17535e0f6684" prot="private" virt="non-virtual"><scope>QuantLib::CDO</scope><name>copula_</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1a4ca7b20924ed59216d05f14d40513e71" prot="private" virt="non-virtual"><scope>QuantLib::CDO</scope><name>dayCounter_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::CDO</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1ad5c85091e62243259c6699f2c456728c" prot="public" virt="non-virtual"><scope>QuantLib::CDO</scope><name>detachment</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1a3ee0a91904febdfdbf2a33cb6f9d69b4" prot="private" virt="non-virtual"><scope>QuantLib::CDO</scope><name>detachment_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1ac548cb61c864779db09bd0fac6ae7c81" prot="protected" virt="non-virtual"><scope>QuantLib::CDO</scope><name>engine_</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1adc36d3843d087ef33f6344b1b2c81a2e" prot="public" virt="non-virtual"><scope>QuantLib::CDO</scope><name>error</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1a90e001580279dc2017b695a469b0c9d7" prot="private" virt="non-virtual"><scope>QuantLib::CDO</scope><name>error_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a03502fb6c606b262c25acd94ff4c1e52" prot="public" virt="non-virtual"><scope>QuantLib::CDO</scope><name>errorEstimate</name></member>
      <member refid="class_quant_lib_1_1_instrument_1abb8f4cfa7346fab7a2f3a8c8b4da30f3" prot="protected" virt="non-virtual"><scope>QuantLib::CDO</scope><name>errorEstimate_</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1a9bc44dc4d14be2b279f269f82522c7b3" prot="private" virt="non-virtual"><scope>QuantLib::CDO</scope><name>expectedTrancheLoss</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1a33530f522ea48718f6de315a9887fd70" prot="public" virt="non-virtual"><scope>QuantLib::CDO</scope><name>fairPremium</name></member>
      <member refid="class_quant_lib_1_1_instrument_1aebe809131db2941325d037c031bbf41b" prot="public" virt="virtual"><scope>QuantLib::CDO</scope><name>fetchResults</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1afac6ee19c3107c453e1347dd8000e023" prot="public" virt="non-virtual"><scope>QuantLib::CDO</scope><name>forwardFirstNotificationOnly</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7157f41e83f2c5d924f5c5bafda04d1d" prot="public" virt="non-virtual"><scope>QuantLib::CDO</scope><name>freeze</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7bb721fe00c6854e602758aba629ab77" prot="protected" virt="non-virtual"><scope>QuantLib::CDO</scope><name>frozen_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a5e4c746cbf7999c83dc57f87e241f1cc" prot="public" virt="non-virtual"><scope>QuantLib::CDO</scope><name>Instrument</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1a9aa18834bd88d6eb6986a7d58f7c65e0" prot="private" virt="non-virtual"><scope>QuantLib::CDO</scope><name>integrationStep_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a0a7c5d42815a4e16ee2158e24dbfc748" prot="public" virt="non-virtual"><scope>QuantLib::CDO</scope><name>isCalculated</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1af4f82412bcb61cb09dbcabc47754ec32" prot="public" virt="virtual"><scope>QuantLib::CDO</scope><name>isExpired</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::CDO</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a26f18f4ff7faaaebd8eae50e064b493e" prot="public" virt="non-virtual"><scope>QuantLib::CDO</scope><name>LazyObject</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1aabbf1b9a462a9a986c056eea15320c9a" prot="public" virt="non-virtual"><scope>QuantLib::CDO</scope><name>lgd</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1a0056a33c13b20dd807ba87f2ee51f4a3" prot="private" virt="non-virtual"><scope>QuantLib::CDO</scope><name>lgd_</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1ae61de2cd521d0f9d14d771a1516cc5c3" prot="private" virt="non-virtual"><scope>QuantLib::CDO</scope><name>lgds_</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1a4d011421401c11a7cc3bef4ff2498bb1" prot="private" virt="non-virtual"><scope>QuantLib::CDO</scope><name>nBuckets_</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1a549f4a41f0ece44bbd469fac90283839" prot="public" virt="non-virtual"><scope>QuantLib::CDO</scope><name>nominal</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1ab214bd686dfd22100423261e9be93ee0" prot="private" virt="non-virtual"><scope>QuantLib::CDO</scope><name>nominal_</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1aa156f595eeb4eefd639e1c77420b7805" prot="public" virt="non-virtual"><scope>QuantLib::CDO</scope><name>nominals</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1a9cf1ce6933cc80a1eefecd694300378c" prot="private" virt="non-virtual"><scope>QuantLib::CDO</scope><name>nominals_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::CDO</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a5afdd9698267cd30ddd10cf01f3487b0" prot="public" virt="non-virtual"><scope>QuantLib::CDO</scope><name>NPV</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a997663780100d30ae59b14ac0285322d" prot="protected" virt="non-virtual"><scope>QuantLib::CDO</scope><name>NPV_</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::CDO</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::CDO</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::CDO</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::CDO</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::CDO</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::CDO</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::CDO</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::QuantLib::Observer::"><scope>QuantLib::CDO</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1a52fcd2d0a0a6406edc8a81bbd16751a0" prot="private" virt="virtual"><scope>QuantLib::CDO</scope><name>performCalculations</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1a1277e25fcb57d70f171e5e78c2755962" prot="private" virt="non-virtual"><scope>QuantLib::CDO</scope><name>premiumRate_</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1ac9695996c42c2288538e1d3ce92d3e1e" prot="private" virt="non-virtual"><scope>QuantLib::CDO</scope><name>premiumSchedule_</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1ac4bdffc43682bcb9b729e327dd795377" prot="public" virt="non-virtual"><scope>QuantLib::CDO</scope><name>premiumValue</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1a45f545b0cf6d49d5f36807f28e2ba5b7" prot="private" virt="non-virtual"><scope>QuantLib::CDO</scope><name>premiumValue_</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1ad83b4b24ddf6ba4cafa8e0f0d20c12ff" prot="private" virt="non-virtual"><scope>QuantLib::CDO</scope><name>protectionSeller_</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1a211446b1c6bcba46b06271509f855868" prot="public" virt="non-virtual"><scope>QuantLib::CDO</scope><name>protectionValue</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1ad60ac225a9686c724e87c06e2781b874" prot="private" virt="non-virtual"><scope>QuantLib::CDO</scope><name>protectionValue_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a70c9b24e50132408d8d9ce4f6674662a" prot="public" virt="non-virtual"><scope>QuantLib::CDO</scope><name>recalculate</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1a06ad15392492b6f948dc0592022110c7" prot="private" virt="non-virtual"><scope>QuantLib::CDO</scope><name>recoveryRate_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::CDO</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::CDO</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a266c15a12160a89f4f9707db85f9fa27" prot="public" virt="non-virtual"><scope>QuantLib::CDO</scope><name>result</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a3444386491f179f64f4f0aac24997071" prot="public" virt="non-virtual"><scope>QuantLib::CDO</scope><name>setPricingEngine</name></member>
      <member refid="class_quant_lib_1_1_instrument_1af7344eebc48a1a361386e5c5a90a8fcc" prot="public" virt="virtual"><scope>QuantLib::CDO</scope><name>setupArguments</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1a2dc8597f83a6452c973e997f1b600424" prot="private" virt="virtual"><scope>QuantLib::CDO</scope><name>setupExpired</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1ac751720b53980bbc495843a993abe33e" prot="public" virt="non-virtual"><scope>QuantLib::CDO</scope><name>size</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a2e0e4786666453024b9d4e0761f2770b" prot="public" virt="non-virtual"><scope>QuantLib::CDO</scope><name>unfreeze</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::CDO</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::CDO</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1adee2bf49be5c4c78736be293321a856d" prot="public" virt="virtual"><scope>QuantLib::CDO</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1aa13b765c1bb7ef76127a5ea5a11d5009" prot="private" virt="non-virtual"><scope>QuantLib::CDO</scope><name>upfrontPremiumRate_</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1a0bbb6101c6e3e5ed421129b3ce95af29" prot="private" virt="non-virtual"><scope>QuantLib::CDO</scope><name>upfrontPremiumValue_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a53a0fc1adc70b73387ad53009725835d" prot="public" virt="non-virtual"><scope>QuantLib::CDO</scope><name>valuationDate</name></member>
      <member refid="class_quant_lib_1_1_instrument_1aa60b558fc82f022e13535360ac4a6fed" prot="protected" virt="non-virtual"><scope>QuantLib::CDO</scope><name>valuationDate_</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1a3b56923d172591da295b26f14b08646f" prot="private" virt="non-virtual"><scope>QuantLib::CDO</scope><name>xMax_</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1a5342d03264ceb314ded23fb794c80318" prot="private" virt="non-virtual"><scope>QuantLib::CDO</scope><name>xMin_</name></member>
      <member refid="class_quant_lib_1_1_c_d_o_1adb4f98341d345156edb4101a71dc686c" prot="private" virt="non-virtual"><scope>QuantLib::CDO</scope><name>yieldTS_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a9d719c43bb627177a90d7d12324a2d6e" prot="public" virt="non-virtual"><scope>QuantLib::CDO</scope><name>~LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::CDO</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::CDO</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_delta_vol_quote" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::DeltaVolQuote</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_quote" prot="public" virt="non-virtual">QuantLib::Quote</basecompoundref>
    <basecompoundref refid="class_quant_lib_1_1_observer" prot="public" virt="non-virtual">QuantLib::Observer</basecompoundref>
    <includes refid="deltavolquote_8hpp" local="no">deltavolquote.hpp</includes>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_quant_lib_1_1_delta_vol_quote_1ac278480ada6f958ce0a671de10b0be0e" prot="public" static="no" strong="no">
        <type></type>
        <name>DeltaType</name>
        <qualifiedname>QuantLib::DeltaVolQuote::DeltaType</qualifiedname>
        <enumvalue id="class_quant_lib_1_1_delta_vol_quote_1ac278480ada6f958ce0a671de10b0be0eae09ce66e7c506aab8f87502fc6c51aee" prot="public">
          <name>Spot</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_delta_vol_quote_1ac278480ada6f958ce0a671de10b0be0ea09b3f6d565179bdccb4ab10a3f747c9d" prot="public">
          <name>Fwd</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_delta_vol_quote_1ac278480ada6f958ce0a671de10b0be0ea0d3c992463282123289c8d342797d435" prot="public">
          <name>PaSpot</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_delta_vol_quote_1ac278480ada6f958ce0a671de10b0be0ea9e040b35262cd12cd35b8526132befde" prot="public">
          <name>PaFwd</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/fx/deltavolquote.hpp" line="39" column="9" bodyfile="ql/experimental/fx/deltavolquote.hpp" bodystart="39" bodyend="44"/>
      </memberdef>
      <memberdef kind="enum" id="class_quant_lib_1_1_delta_vol_quote_1acf822fe76d2ca26ea692d87e13506b09" prot="public" static="no" strong="no">
        <type></type>
        <name>AtmType</name>
        <qualifiedname>QuantLib::DeltaVolQuote::AtmType</qualifiedname>
        <enumvalue id="class_quant_lib_1_1_delta_vol_quote_1acf822fe76d2ca26ea692d87e13506b09a5066da55a4d50ac9e960cde84a384449" prot="public">
          <name>AtmNull</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_delta_vol_quote_1acf822fe76d2ca26ea692d87e13506b09a4489c17ad0b12f793007a3938f92bd06" prot="public">
          <name>AtmSpot</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_delta_vol_quote_1acf822fe76d2ca26ea692d87e13506b09a7e7f4c69ce0e7a1e00c1464dfd78db9c" prot="public">
          <name>AtmFwd</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_delta_vol_quote_1acf822fe76d2ca26ea692d87e13506b09a47cd5dcfc299bcfe8f1db5d589b0d32e" prot="public">
          <name>AtmDeltaNeutral</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_delta_vol_quote_1acf822fe76d2ca26ea692d87e13506b09a7021a06eb25a5334082223ebd67f5910" prot="public">
          <name>AtmVegaMax</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_delta_vol_quote_1acf822fe76d2ca26ea692d87e13506b09a72e43d00fbcba8fafffb53a1f77808b8" prot="public">
          <name>AtmGammaMax</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_delta_vol_quote_1acf822fe76d2ca26ea692d87e13506b09a575fd79879524ea69dd5200a26d5fe78" prot="public">
          <name>AtmPutCall50</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/fx/deltavolquote.hpp" line="46" column="9" bodyfile="ql/experimental/fx/deltavolquote.hpp" bodystart="46" bodyend="54"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_delta_vol_quote_1a5dae61c52fb8bbc3d798f2cd2dfd3b30" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::DeltaVolQuote::delta_</definition>
        <argsstring></argsstring>
        <name>delta_</name>
        <qualifiedname>QuantLib::DeltaVolQuote::delta_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/fx/deltavolquote.hpp" line="74" column="16" bodyfile="ql/experimental/fx/deltavolquote.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_delta_vol_quote_1a35e0ba7e2c4886f780b476087d6dc6b8" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
        <definition>Handle&lt;Quote&gt; QuantLib::DeltaVolQuote::vol_</definition>
        <argsstring></argsstring>
        <name>vol_</name>
        <qualifiedname>QuantLib::DeltaVolQuote::vol_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/fx/deltavolquote.hpp" line="75" column="18" bodyfile="ql/experimental/fx/deltavolquote.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_delta_vol_quote_1ac501b76e5ec8511675b5f845711ced09" prot="private" static="no" mutable="no">
        <type>DeltaType</type>
        <definition>DeltaType QuantLib::DeltaVolQuote::deltaType_</definition>
        <argsstring></argsstring>
        <name>deltaType_</name>
        <qualifiedname>QuantLib::DeltaVolQuote::deltaType_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/fx/deltavolquote.hpp" line="76" column="21" bodyfile="ql/experimental/fx/deltavolquote.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_delta_vol_quote_1a3a7c4b466ae75a8d1ef2f95dca60bc2f" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>Time QuantLib::DeltaVolQuote::maturity_</definition>
        <argsstring></argsstring>
        <name>maturity_</name>
        <qualifiedname>QuantLib::DeltaVolQuote::maturity_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/fx/deltavolquote.hpp" line="77" column="16" bodyfile="ql/experimental/fx/deltavolquote.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_delta_vol_quote_1a65b04fee021dac69772d3fda64727852" prot="private" static="no" mutable="no">
        <type>AtmType</type>
        <definition>AtmType QuantLib::DeltaVolQuote::atmType_</definition>
        <argsstring></argsstring>
        <name>atmType_</name>
        <qualifiedname>QuantLib::DeltaVolQuote::atmType_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/fx/deltavolquote.hpp" line="78" column="19" bodyfile="ql/experimental/fx/deltavolquote.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_delta_vol_quote_1a533ad408a73e3325efa2a25fd31140e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::DeltaVolQuote::DeltaVolQuote</definition>
        <argsstring>(Real delta, Handle&lt; Quote &gt; vol, Time maturity, DeltaType deltaType)</argsstring>
        <name>DeltaVolQuote</name>
        <qualifiedname>QuantLib::DeltaVolQuote::DeltaVolQuote</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>delta</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
          <declname>vol</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>maturity</declname>
        </param>
        <param>
          <type>DeltaType</type>
          <declname>deltaType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/fx/deltavolquote.hpp" line="57" column="9" bodyfile="ql/experimental/fx/deltavolquote.cpp" bodystart="25" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_delta_vol_quote_1adb944d2c585b0ade8e2d971edb7d0808" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::DeltaVolQuote::DeltaVolQuote</definition>
        <argsstring>(Handle&lt; Quote &gt; vol, DeltaType deltaType, Time maturity, AtmType atmType)</argsstring>
        <name>DeltaVolQuote</name>
        <qualifiedname>QuantLib::DeltaVolQuote::DeltaVolQuote</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
          <declname>vol</declname>
        </param>
        <param>
          <type>DeltaType</type>
          <declname>deltaType</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>maturity</declname>
        </param>
        <param>
          <type>AtmType</type>
          <declname>atmType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/fx/deltavolquote.hpp" line="60" column="9" bodyfile="ql/experimental/fx/deltavolquote.cpp" bodystart="32" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_delta_vol_quote_1ad08b06c50a54098917d80a0dfdf8467d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::DeltaVolQuote::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <qualifiedname>QuantLib::DeltaVolQuote::update</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_observer_1a07905c55dca858470fcf4a1aea0005aa">update</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must be implemented in derived classes. An instance of Observer does not call this method directly: instead, it will be called by the observables the instance registered with when they need to notify any changes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/fx/deltavolquote.hpp" line="62" column="14" bodyfile="ql/experimental/fx/deltavolquote.cpp" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_delta_vol_quote_1a6053a723956b3e04853584ecd4a8bca6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::DeltaVolQuote::value</definition>
        <argsstring>() const override</argsstring>
        <name>value</name>
        <qualifiedname>QuantLib::DeltaVolQuote::value</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_quote_1a25f93d1c25434ae28f20f9416b497ccb">value</reimplements>
        <briefdescription>
<para>returns the current value </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/fx/deltavolquote.hpp" line="64" column="14" bodyfile="ql/experimental/fx/deltavolquote.cpp" bodystart="41" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_delta_vol_quote_1aec59aa8258f9a6b36c08d3b9d39d8c08" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::DeltaVolQuote::delta</definition>
        <argsstring>() const</argsstring>
        <name>delta</name>
        <qualifiedname>QuantLib::DeltaVolQuote::delta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/fx/deltavolquote.hpp" line="65" column="14" bodyfile="ql/experimental/fx/deltavolquote.cpp" bodystart="45" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_delta_vol_quote_1a4d86af438736ee21ee08619a97b44273" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>Time QuantLib::DeltaVolQuote::maturity</definition>
        <argsstring>() const</argsstring>
        <name>maturity</name>
        <qualifiedname>QuantLib::DeltaVolQuote::maturity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/fx/deltavolquote.hpp" line="66" column="14" bodyfile="ql/experimental/fx/deltavolquote.cpp" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_delta_vol_quote_1aa13fc938e6bec5f6cc591479ea3da6cb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>AtmType</type>
        <definition>DeltaVolQuote::AtmType QuantLib::DeltaVolQuote::atmType</definition>
        <argsstring>() const</argsstring>
        <name>atmType</name>
        <qualifiedname>QuantLib::DeltaVolQuote::atmType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/fx/deltavolquote.hpp" line="68" column="17" bodyfile="ql/experimental/fx/deltavolquote.cpp" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_delta_vol_quote_1adbb569d6a0827c6a6d6453815dd9d54d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>DeltaType</type>
        <definition>DeltaVolQuote::DeltaType QuantLib::DeltaVolQuote::deltaType</definition>
        <argsstring>() const</argsstring>
        <name>deltaType</name>
        <qualifiedname>QuantLib::DeltaVolQuote::deltaType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/fx/deltavolquote.hpp" line="69" column="19" bodyfile="ql/experimental/fx/deltavolquote.cpp" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_delta_vol_quote_1a441d8a275646af27eb1237e0a5c1da06" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QuantLib::DeltaVolQuote::isValid</definition>
        <argsstring>() const override</argsstring>
        <name>isValid</name>
        <qualifiedname>QuantLib::DeltaVolQuote::isValid</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_quote_1a9a340a974b8403b9385867b62bb8ae2d">isValid</reimplements>
        <briefdescription>
<para>returns true if the <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> holds a valid value </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/fx/deltavolquote.hpp" line="71" column="14" bodyfile="ql/experimental/fx/deltavolquote.cpp" bodystart="53" bodyend="55"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Class for the quotation of delta vs vol. </para>
    </briefdescription>
    <detaileddescription>
<para>It includes the various delta quotation types in FX markets as well as ATM types. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::DeltaVolQuote</label>
        <link refid="class_quant_lib_1_1_delta_vol_quote"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>QuantLib::Quote</label>
        <link refid="class_quant_lib_1_1_quote"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::DeltaVolQuote</label>
        <link refid="class_quant_lib_1_1_delta_vol_quote"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>QuantLib::Quote</label>
        <link refid="class_quant_lib_1_1_quote"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/fx/deltavolquote.hpp" line="36" column="5" bodyfile="ql/experimental/fx/deltavolquote.hpp" bodystart="37" bodyend="79"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_delta_vol_quote_1acf822fe76d2ca26ea692d87e13506b09a47cd5dcfc299bcfe8f1db5d589b0d32e" prot="public" virt="non-virtual"><scope>QuantLib::DeltaVolQuote</scope><name>AtmDeltaNeutral</name></member>
      <member refid="class_quant_lib_1_1_delta_vol_quote_1acf822fe76d2ca26ea692d87e13506b09a7e7f4c69ce0e7a1e00c1464dfd78db9c" prot="public" virt="non-virtual"><scope>QuantLib::DeltaVolQuote</scope><name>AtmFwd</name></member>
      <member refid="class_quant_lib_1_1_delta_vol_quote_1acf822fe76d2ca26ea692d87e13506b09a72e43d00fbcba8fafffb53a1f77808b8" prot="public" virt="non-virtual"><scope>QuantLib::DeltaVolQuote</scope><name>AtmGammaMax</name></member>
      <member refid="class_quant_lib_1_1_delta_vol_quote_1acf822fe76d2ca26ea692d87e13506b09a5066da55a4d50ac9e960cde84a384449" prot="public" virt="non-virtual"><scope>QuantLib::DeltaVolQuote</scope><name>AtmNull</name></member>
      <member refid="class_quant_lib_1_1_delta_vol_quote_1acf822fe76d2ca26ea692d87e13506b09a575fd79879524ea69dd5200a26d5fe78" prot="public" virt="non-virtual"><scope>QuantLib::DeltaVolQuote</scope><name>AtmPutCall50</name></member>
      <member refid="class_quant_lib_1_1_delta_vol_quote_1acf822fe76d2ca26ea692d87e13506b09a4489c17ad0b12f793007a3938f92bd06" prot="public" virt="non-virtual"><scope>QuantLib::DeltaVolQuote</scope><name>AtmSpot</name></member>
      <member refid="class_quant_lib_1_1_delta_vol_quote_1acf822fe76d2ca26ea692d87e13506b09" prot="public" virt="non-virtual"><scope>QuantLib::DeltaVolQuote</scope><name>AtmType</name></member>
      <member refid="class_quant_lib_1_1_delta_vol_quote_1aa13fc938e6bec5f6cc591479ea3da6cb" prot="public" virt="non-virtual"><scope>QuantLib::DeltaVolQuote</scope><name>atmType</name></member>
      <member refid="class_quant_lib_1_1_delta_vol_quote_1a65b04fee021dac69772d3fda64727852" prot="private" virt="non-virtual"><scope>QuantLib::DeltaVolQuote</scope><name>atmType_</name></member>
      <member refid="class_quant_lib_1_1_delta_vol_quote_1acf822fe76d2ca26ea692d87e13506b09a7021a06eb25a5334082223ebd67f5910" prot="public" virt="non-virtual"><scope>QuantLib::DeltaVolQuote</scope><name>AtmVegaMax</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::DeltaVolQuote</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_delta_vol_quote_1aec59aa8258f9a6b36c08d3b9d39d8c08" prot="public" virt="non-virtual"><scope>QuantLib::DeltaVolQuote</scope><name>delta</name></member>
      <member refid="class_quant_lib_1_1_delta_vol_quote_1a5dae61c52fb8bbc3d798f2cd2dfd3b30" prot="private" virt="non-virtual"><scope>QuantLib::DeltaVolQuote</scope><name>delta_</name></member>
      <member refid="class_quant_lib_1_1_delta_vol_quote_1ac278480ada6f958ce0a671de10b0be0e" prot="public" virt="non-virtual"><scope>QuantLib::DeltaVolQuote</scope><name>DeltaType</name></member>
      <member refid="class_quant_lib_1_1_delta_vol_quote_1adbb569d6a0827c6a6d6453815dd9d54d" prot="public" virt="non-virtual"><scope>QuantLib::DeltaVolQuote</scope><name>deltaType</name></member>
      <member refid="class_quant_lib_1_1_delta_vol_quote_1ac501b76e5ec8511675b5f845711ced09" prot="private" virt="non-virtual"><scope>QuantLib::DeltaVolQuote</scope><name>deltaType_</name></member>
      <member refid="class_quant_lib_1_1_delta_vol_quote_1a533ad408a73e3325efa2a25fd31140e8" prot="public" virt="non-virtual"><scope>QuantLib::DeltaVolQuote</scope><name>DeltaVolQuote</name></member>
      <member refid="class_quant_lib_1_1_delta_vol_quote_1adb944d2c585b0ade8e2d971edb7d0808" prot="public" virt="non-virtual"><scope>QuantLib::DeltaVolQuote</scope><name>DeltaVolQuote</name></member>
      <member refid="class_quant_lib_1_1_delta_vol_quote_1ac278480ada6f958ce0a671de10b0be0ea09b3f6d565179bdccb4ab10a3f747c9d" prot="public" virt="non-virtual"><scope>QuantLib::DeltaVolQuote</scope><name>Fwd</name></member>
      <member refid="class_quant_lib_1_1_delta_vol_quote_1a441d8a275646af27eb1237e0a5c1da06" prot="public" virt="virtual"><scope>QuantLib::DeltaVolQuote</scope><name>isValid</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::DeltaVolQuote</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_delta_vol_quote_1a4d86af438736ee21ee08619a97b44273" prot="public" virt="non-virtual"><scope>QuantLib::DeltaVolQuote</scope><name>maturity</name></member>
      <member refid="class_quant_lib_1_1_delta_vol_quote_1a3a7c4b466ae75a8d1ef2f95dca60bc2f" prot="private" virt="non-virtual"><scope>QuantLib::DeltaVolQuote</scope><name>maturity_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::DeltaVolQuote</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::DeltaVolQuote</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Quote::"><scope>QuantLib::DeltaVolQuote</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Quote::"><scope>QuantLib::DeltaVolQuote</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::DeltaVolQuote</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::DeltaVolQuote</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::DeltaVolQuote</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Quote::"><scope>QuantLib::DeltaVolQuote</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Quote::"><scope>QuantLib::DeltaVolQuote</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_delta_vol_quote_1ac278480ada6f958ce0a671de10b0be0ea9e040b35262cd12cd35b8526132befde" prot="public" virt="non-virtual"><scope>QuantLib::DeltaVolQuote</scope><name>PaFwd</name></member>
      <member refid="class_quant_lib_1_1_delta_vol_quote_1ac278480ada6f958ce0a671de10b0be0ea0d3c992463282123289c8d342797d435" prot="public" virt="non-virtual"><scope>QuantLib::DeltaVolQuote</scope><name>PaSpot</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::DeltaVolQuote</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::DeltaVolQuote</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_delta_vol_quote_1ac278480ada6f958ce0a671de10b0be0eae09ce66e7c506aab8f87502fc6c51aee" prot="public" virt="non-virtual"><scope>QuantLib::DeltaVolQuote</scope><name>Spot</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::DeltaVolQuote</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::DeltaVolQuote</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_delta_vol_quote_1ad08b06c50a54098917d80a0dfdf8467d" prot="public" virt="virtual"><scope>QuantLib::DeltaVolQuote</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_delta_vol_quote_1a6053a723956b3e04853584ecd4a8bca6" prot="public" virt="virtual"><scope>QuantLib::DeltaVolQuote</scope><name>value</name></member>
      <member refid="class_quant_lib_1_1_delta_vol_quote_1a35e0ba7e2c4886f780b476087d6dc6b8" prot="private" virt="non-virtual"><scope>QuantLib::DeltaVolQuote</scope><name>vol_</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::DeltaVolQuote</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::DeltaVolQuote</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_quote_1a0433957cb1683b2ca329ef56bd741143" prot="public" virt="non-virtual"><scope>QuantLib::DeltaVolQuote</scope><name>~Quote</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

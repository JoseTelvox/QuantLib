<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="struct_quant_lib_1_1detail_1_1_svi_specs" kind="struct" language="C++" prot="public">
    <compoundname>QuantLib::detail::SviSpecs</compoundname>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_quant_lib_1_1detail_1_1_svi_specs_1a56608effee328be94e2c3bc20a7cde0c" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1_svi_smile_section" kindref="compound">SviWrapper</ref></type>
        <definition>typedef SviWrapper QuantLib::detail::SviSpecs::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <qualifiedname>QuantLib::detail::SviSpecs::type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolation.hpp" line="134" column="24" bodyfile="ql/experimental/volatility/sviinterpolation.hpp" bodystart="134" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_quant_lib_1_1detail_1_1_svi_specs_1a445349217b8043b0df64a0999136b90e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::detail::SviSpecs::dimension</definition>
        <argsstring>()</argsstring>
        <name>dimension</name>
        <qualifiedname>QuantLib::detail::SviSpecs::dimension</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolation.hpp" line="58" column="10" bodyfile="ql/experimental/volatility/sviinterpolation.hpp" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1detail_1_1_svi_specs_1ac429aeb406b71255c21d7a4822ea0033" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::detail::SviSpecs::defaultValues</definition>
        <argsstring>(std::vector&lt; Real &gt; &amp;params, std::vector&lt; bool &gt; &amp;paramIsFixed, const Real &amp;forward, const Real expiryTime, const std::vector&lt; Real &gt; &amp;addParams)</argsstring>
        <name>defaultValues</name>
        <qualifiedname>QuantLib::detail::SviSpecs::defaultValues</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>std::vector&lt; bool &gt; &amp;</type>
          <declname>paramIsFixed</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &amp;</type>
          <declname>forward</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>expiryTime</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>addParams</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolation.hpp" line="59" column="10" bodyfile="ql/experimental/volatility/sviinterpolation.hpp" bodystart="59" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1detail_1_1_svi_specs_1a15b0fb157090277eedc4fb080bb437a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::detail::SviSpecs::guess</definition>
        <argsstring>(Array &amp;values, const std::vector&lt; bool &gt; &amp;paramIsFixed, const Real &amp;forward, const Real expiryTime, const std::vector&lt; Real &gt; &amp;r, const std::vector&lt; Real &gt; &amp;addParams)</argsstring>
        <name>guess</name>
        <qualifiedname>QuantLib::detail::SviSpecs::guess</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>const std::vector&lt; bool &gt; &amp;</type>
          <declname>paramIsFixed</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &amp;</type>
          <declname>forward</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>expiryTime</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>addParams</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolation.hpp" line="81" column="10" bodyfile="ql/experimental/volatility/sviinterpolation.hpp" bodystart="81" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1detail_1_1_svi_specs_1a1a9c59573ae52c236fdcd85fbac7695c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::detail::SviSpecs::inverse</definition>
        <argsstring>(const Array &amp;y, const std::vector&lt; bool &gt; &amp;, const std::vector&lt; Real &gt; &amp;, const Real)</argsstring>
        <name>inverse</name>
        <qualifiedname>QuantLib::detail::SviSpecs::inverse</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const std::vector&lt; bool &gt; &amp;</type>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolation.hpp" line="98" column="11" bodyfile="ql/experimental/volatility/sviinterpolation.hpp" bodystart="98" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1detail_1_1_svi_specs_1a2a59a09740f2860164d43887567dbbd8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::detail::SviSpecs::eps1</definition>
        <argsstring>()</argsstring>
        <name>eps1</name>
        <qualifiedname>QuantLib::detail::SviSpecs::eps1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolation.hpp" line="110" column="10" bodyfile="ql/experimental/volatility/sviinterpolation.hpp" bodystart="110" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1detail_1_1_svi_specs_1af9d53fe38af8a1f5fca53d4b98186480" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::detail::SviSpecs::eps2</definition>
        <argsstring>()</argsstring>
        <name>eps2</name>
        <qualifiedname>QuantLib::detail::SviSpecs::eps2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolation.hpp" line="111" column="10" bodyfile="ql/experimental/volatility/sviinterpolation.hpp" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1detail_1_1_svi_specs_1a4a7d01280f29d9452682978ef01b160b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::detail::SviSpecs::direct</definition>
        <argsstring>(const Array &amp;x, const std::vector&lt; bool &gt; &amp;paramIsFixed, const std::vector&lt; Real &gt; &amp;params, const Real forward)</argsstring>
        <name>direct</name>
        <qualifiedname>QuantLib::detail::SviSpecs::direct</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const std::vector&lt; bool &gt; &amp;</type>
          <declname>paramIsFixed</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>forward</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolation.hpp" line="112" column="11" bodyfile="ql/experimental/volatility/sviinterpolation.hpp" bodystart="112" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1detail_1_1_svi_specs_1a63fd47731a58da5f1cf0c826468b0429" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::detail::SviSpecs::weight</definition>
        <argsstring>(const Real strike, const Real forward, const Real stdDev, const std::vector&lt; Real &gt; &amp;addParams)</argsstring>
        <name>weight</name>
        <qualifiedname>QuantLib::detail::SviSpecs::weight</qualifiedname>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>forward</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>stdDev</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>addParams</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolation.hpp" line="130" column="10" bodyfile="ql/experimental/volatility/sviinterpolation.hpp" bodystart="130" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1detail_1_1_svi_specs_1aaa598f29e5b3751b42ef1608a511830b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_svi_smile_section" kindref="compound">type</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; type &gt; QuantLib::detail::SviSpecs::instance</definition>
        <argsstring>(const Time t, const Real &amp;forward, const std::vector&lt; Real &gt; &amp;params, const std::vector&lt; Real &gt; &amp;addParams)</argsstring>
        <name>instance</name>
        <qualifiedname>QuantLib::detail::SviSpecs::instance</qualifiedname>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &amp;</type>
          <declname>forward</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>addParams</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolation.hpp" line="135" column="21" bodyfile="ql/experimental/volatility/sviinterpolation.hpp" bodystart="135" bodyend="139"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/experimental/volatility/sviinterpolation.hpp" line="57" column="1" bodyfile="ql/experimental/volatility/sviinterpolation.hpp" bodystart="57" bodyend="140"/>
    <listofallmembers>
      <member refid="struct_quant_lib_1_1detail_1_1_svi_specs_1ac429aeb406b71255c21d7a4822ea0033" prot="public" virt="non-virtual"><scope>QuantLib::detail::SviSpecs</scope><name>defaultValues</name></member>
      <member refid="struct_quant_lib_1_1detail_1_1_svi_specs_1a445349217b8043b0df64a0999136b90e" prot="public" virt="non-virtual"><scope>QuantLib::detail::SviSpecs</scope><name>dimension</name></member>
      <member refid="struct_quant_lib_1_1detail_1_1_svi_specs_1a4a7d01280f29d9452682978ef01b160b" prot="public" virt="non-virtual"><scope>QuantLib::detail::SviSpecs</scope><name>direct</name></member>
      <member refid="struct_quant_lib_1_1detail_1_1_svi_specs_1a2a59a09740f2860164d43887567dbbd8" prot="public" virt="non-virtual"><scope>QuantLib::detail::SviSpecs</scope><name>eps1</name></member>
      <member refid="struct_quant_lib_1_1detail_1_1_svi_specs_1af9d53fe38af8a1f5fca53d4b98186480" prot="public" virt="non-virtual"><scope>QuantLib::detail::SviSpecs</scope><name>eps2</name></member>
      <member refid="struct_quant_lib_1_1detail_1_1_svi_specs_1a15b0fb157090277eedc4fb080bb437a2" prot="public" virt="non-virtual"><scope>QuantLib::detail::SviSpecs</scope><name>guess</name></member>
      <member refid="struct_quant_lib_1_1detail_1_1_svi_specs_1aaa598f29e5b3751b42ef1608a511830b" prot="public" virt="non-virtual"><scope>QuantLib::detail::SviSpecs</scope><name>instance</name></member>
      <member refid="struct_quant_lib_1_1detail_1_1_svi_specs_1a1a9c59573ae52c236fdcd85fbac7695c" prot="public" virt="non-virtual"><scope>QuantLib::detail::SviSpecs</scope><name>inverse</name></member>
      <member refid="struct_quant_lib_1_1detail_1_1_svi_specs_1a56608effee328be94e2c3bc20a7cde0c" prot="public" virt="non-virtual"><scope>QuantLib::detail::SviSpecs</scope><name>type</name></member>
      <member refid="struct_quant_lib_1_1detail_1_1_svi_specs_1a63fd47731a58da5f1cf0c826468b0429" prot="public" virt="non-virtual"><scope>QuantLib::detail::SviSpecs</scope><name>weight</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_overnight_index_future_rate_helper" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::OvernightIndexFutureRateHelper</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_bootstrap_helper" prot="public" virt="non-virtual">QuantLib::BootstrapHelper&lt; YieldTermStructure &gt;</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_sofr_future_rate_helper" prot="public" virt="non-virtual">QuantLib::SofrFutureRateHelper</derivedcompoundref>
    <includes refid="overnightindexfutureratehelper_8hpp" local="no">overnightindexfutureratehelper.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Visitability</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_overnight_index_future_rate_helper_1aef2d97419b8e5726eb8962b1e437a3db" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_overnight_index_future" kindref="compound">OvernightIndexFuture</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;OvernightIndexFuture&gt; QuantLib::OvernightIndexFutureRateHelper::future_</definition>
        <argsstring></argsstring>
        <name>future_</name>
        <qualifiedname>QuantLib::OvernightIndexFutureRateHelper::future_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/overnightindexfutureratehelper.hpp" line="56" column="25" bodyfile="ql/termstructures/yield/overnightindexfutureratehelper.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_overnight_index_future_rate_helper_1a0475049fd345d6b5c8f5c80aeb1798bb" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_relinkable_handle" kindref="compound">RelinkableHandle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
        <definition>RelinkableHandle&lt;YieldTermStructure&gt; QuantLib::OvernightIndexFutureRateHelper::termStructureHandle_</definition>
        <argsstring></argsstring>
        <name>termStructureHandle_</name>
        <qualifiedname>QuantLib::OvernightIndexFutureRateHelper::termStructureHandle_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/overnightindexfutureratehelper.hpp" line="57" column="26" bodyfile="ql/termstructures/yield/overnightindexfutureratehelper.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_overnight_index_future_rate_helper_1a49df6d9c66e0137f17b3aeaf668b53a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::OvernightIndexFutureRateHelper::accept</definition>
        <argsstring>(AcyclicVisitor &amp;) override</argsstring>
        <name>accept</name>
        <qualifiedname>QuantLib::OvernightIndexFutureRateHelper::accept</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_bootstrap_helper_1a972d69e74106276b0fe15239047746b9">accept</reimplements>
        <param>
          <type><ref refid="class_quant_lib_1_1_acyclic_visitor" kindref="compound">AcyclicVisitor</ref> &amp;</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/overnightindexfutureratehelper.hpp" line="52" column="14" bodyfile="ql/termstructures/yield/overnightindexfutureratehelper.cpp" bodystart="81" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_overnight_index_future_rate_helper_1adb80d409a0768dc5f93048c249398a0b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::OvernightIndexFutureRateHelper::convexityAdjustment</definition>
        <argsstring>() const</argsstring>
        <name>convexityAdjustment</name>
        <qualifiedname>QuantLib::OvernightIndexFutureRateHelper::convexityAdjustment</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/overnightindexfutureratehelper.hpp" line="54" column="14" bodyfile="ql/termstructures/yield/overnightindexfutureratehelper.cpp" bodystart="89" bodyend="91"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>RateHelper interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_overnight_index_future_rate_helper_1a4aed9c07a4c2050ec53bd40cb0a49bc0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::OvernightIndexFutureRateHelper::impliedQuote</definition>
        <argsstring>() const override</argsstring>
        <name>impliedQuote</name>
        <qualifiedname>QuantLib::OvernightIndexFutureRateHelper::impliedQuote</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_bootstrap_helper_1a6a29e23cead4e1b1bda334f1de80b17d">impliedQuote</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/overnightindexfutureratehelper.hpp" line="47" column="14" bodyfile="ql/termstructures/yield/overnightindexfutureratehelper.cpp" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_overnight_index_future_rate_helper_1a82c425de28027d2163a8de367998cc71" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::OvernightIndexFutureRateHelper::setTermStructure</definition>
        <argsstring>(YieldTermStructure *) override</argsstring>
        <name>setTermStructure</name>
        <qualifiedname>QuantLib::OvernightIndexFutureRateHelper::setTermStructure</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_bootstrap_helper_1a1f17a55318c87b85475f7a0ace4881fc">setTermStructure</reimplements>
        <param>
          <type><ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> *</type>
        </param>
        <briefdescription>
<para>sets the term structure to be used for pricing </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>Being a pointer and not a shared_ptr, the term structure is not guaranteed to remain allocated for the whole life of the rate helper. It is responsibility of the programmer to ensure that the pointer remains valid. It is advised that this method is called only inside the term structure being bootstrapped, setting the pointer to <bold>this</bold>, i.e., the term structure itself. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/overnightindexfutureratehelper.hpp" line="48" column="14" bodyfile="ql/termstructures/yield/overnightindexfutureratehelper.cpp" bodystart="70" bodyend="79"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_overnight_index_future_rate_helper_1a95a6719a2b0f11d58427c1e8008302dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::OvernightIndexFutureRateHelper::OvernightIndexFutureRateHelper</definition>
        <argsstring>(const Handle&lt; Quote &gt; &amp;price, const Date &amp;valueDate, const Date &amp;maturityDate, const ext::shared_ptr&lt; OvernightIndex &gt; &amp;overnightIndex, const Handle&lt; Quote &gt; &amp;convexityAdjustment={}, RateAveraging::Type averagingMethod=RateAveraging::Compound)</argsstring>
        <name>OvernightIndexFutureRateHelper</name>
        <qualifiedname>QuantLib::OvernightIndexFutureRateHelper::OvernightIndexFutureRateHelper</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &amp;</type>
          <declname>price</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>valueDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>maturityDate</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_overnight_index" kindref="compound">OvernightIndex</ref> &gt; &amp;</type>
          <declname>overnightIndex</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &amp;</type>
          <declname>convexityAdjustment</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="struct_quant_lib_1_1_rate_averaging_1a62ddddd541804c42dae5d108a1ae5437" kindref="member">RateAveraging::Type</ref></type>
          <declname>averagingMethod</declname>
          <defval><ref refid="struct_quant_lib_1_1_rate_averaging_1a62ddddd541804c42dae5d108a1ae5437a39cddbbaf5bb1ed36127f08a87d4871f" kindref="member">RateAveraging::Compound</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/overnightindexfutureratehelper.hpp" line="36" column="9" bodyfile="ql/termstructures/yield/overnightindexfutureratehelper.cpp" bodystart="46" bodyend="63"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>RateHelper for bootstrapping over overnight compounding futures. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="3">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="1">
        <label>QuantLib::OvernightIndexFutureRateHelper</label>
        <link refid="class_quant_lib_1_1_overnight_index_future_rate_helper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::SofrFutureRateHelper</label>
        <link refid="class_quant_lib_1_1_sofr_future_rate_helper"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>RateHelper</label>
        <link refid="class_quant_lib_1_1_bootstrap_helper"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="3">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="1">
        <label>QuantLib::OvernightIndexFutureRateHelper</label>
        <link refid="class_quant_lib_1_1_overnight_index_future_rate_helper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>RateHelper</label>
        <link refid="class_quant_lib_1_1_bootstrap_helper"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/termstructures/yield/overnightindexfutureratehelper.hpp" line="34" column="5" bodyfile="ql/termstructures/yield/overnightindexfutureratehelper.hpp" bodystart="34" bodyend="58"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_overnight_index_future_rate_helper_1a49df6d9c66e0137f17b3aeaf668b53a3" prot="public" virt="virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>accept</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a6e05e5d944839468441bca22c133d65a" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>BootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a30a010aae5e4cc54d38457de4aa39c7e" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>BootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a6e05e5d944839468441bca22c133d65a" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>BootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a30a010aae5e4cc54d38457de4aa39c7e" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>BootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_overnight_index_future_rate_helper_1adb80d409a0768dc5f93048c249398a0b" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>convexityAdjustment</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a1ca284f9f4ade8b17be1f5c284b1cfb2" prot="public" virt="virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>earliestDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a1ca284f9f4ade8b17be1f5c284b1cfb2" prot="public" virt="virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>earliestDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a3f5c545866d04dc90e2c3aec44974e08" prot="protected" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>earliestDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a3f5c545866d04dc90e2c3aec44974e08" prot="protected" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>earliestDate_</name></member>
      <member refid="class_quant_lib_1_1_overnight_index_future_rate_helper_1aef2d97419b8e5726eb8962b1e437a3db" prot="private" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>future_</name></member>
      <member refid="class_quant_lib_1_1_overnight_index_future_rate_helper_1a4aed9c07a4c2050ec53bd40cb0a49bc0" prot="public" virt="virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>impliedQuote</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a7b21f7d30980757a9721ef13ad7979af" prot="public" virt="virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>latestDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a7b21f7d30980757a9721ef13ad7979af" prot="public" virt="virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>latestDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a73a413539e8d6a526e8cc29f928f976c" prot="protected" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>latestDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a73a413539e8d6a526e8cc29f928f976c" prot="protected" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>latestDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1afc339bcd0b9d3029c20dfacaac5adf52" prot="public" virt="virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>latestRelevantDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1afc339bcd0b9d3029c20dfacaac5adf52" prot="public" virt="virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>latestRelevantDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a06f481f14c2b2b0624f2e0f8967353b0" prot="protected" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>latestRelevantDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a06f481f14c2b2b0624f2e0f8967353b0" prot="protected" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>latestRelevantDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1ad74f6e8a3c4f734a83edacaeb6fe53e0" prot="public" virt="virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>maturityDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1ad74f6e8a3c4f734a83edacaeb6fe53e0" prot="public" virt="virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>maturityDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1aa79e8a482771bdf0656a7afa4c557118" prot="protected" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>maturityDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1aa79e8a482771bdf0656a7afa4c557118" prot="protected" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>maturityDate_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_overnight_index_future_rate_helper_1a95a6719a2b0f11d58427c1e8008302dc" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>OvernightIndexFutureRateHelper</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a00496ecfac2fb317e435a6fe48c5c267" prot="public" virt="virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>pillarDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a00496ecfac2fb317e435a6fe48c5c267" prot="public" virt="virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>pillarDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1aa1aa18bed40139d0dae5e0df17968255" prot="protected" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>pillarDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1aa1aa18bed40139d0dae5e0df17968255" prot="protected" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>pillarDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a9e9a17bde5f762d0f75305310a84ae4d" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>quote</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a9e9a17bde5f762d0f75305310a84ae4d" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>quote</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a8480a30335c8da30122287bf782bc4b3" prot="protected" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>quote_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a8480a30335c8da30122287bf782bc4b3" prot="protected" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>quote_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a9bd06175fab6b2b4326c36b7e0f18007" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>quoteError</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a9bd06175fab6b2b4326c36b7e0f18007" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>quoteError</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_overnight_index_future_rate_helper_1a82c425de28027d2163a8de367998cc71" prot="public" virt="virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>setTermStructure</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a1f17a55318c87b85475f7a0ace4881fc" prot="public" virt="virtual" ambiguityscope="QuantLib::BootstrapHelper&lt; YieldTermStructure &gt;::"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>setTermStructure</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a45322b36556492c6e52e1c64ebc8668e" prot="protected" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>termStructure_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a45322b36556492c6e52e1c64ebc8668e" prot="protected" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>termStructure_</name></member>
      <member refid="class_quant_lib_1_1_overnight_index_future_rate_helper_1a0475049fd345d6b5c8f5c80aeb1798bb" prot="private" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>termStructureHandle_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a29362a38767e0231afc9430c8039cf42" prot="public" virt="virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a29362a38767e0231afc9430c8039cf42" prot="public" virt="virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a950cc899a68be0a5f04119edd931bd1d" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>~BootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a950cc899a68be0a5f04119edd931bd1d" prot="public" virt="non-virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>~BootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::OvernightIndexFutureRateHelper</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

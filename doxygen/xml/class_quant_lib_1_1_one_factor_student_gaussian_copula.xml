<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_one_factor_student_gaussian_copula" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::OneFactorStudentGaussianCopula</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_one_factor_copula" prot="public" virt="non-virtual">QuantLib::OneFactorCopula</basecompoundref>
    <includes refid="onefactorstudentcopula_8hpp" local="no">onefactorstudentcopula.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_one_factor_student_gaussian_copula_1a3dc1671c2b232c4ff162c4596c070cff" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_student_distribution" kindref="compound">StudentDistribution</ref></type>
        <definition>StudentDistribution QuantLib::OneFactorStudentGaussianCopula::density_</definition>
        <argsstring></argsstring>
        <name>density_</name>
        <qualifiedname>QuantLib::OneFactorStudentGaussianCopula::density_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/onefactorstudentcopula.hpp" line="175" column="29" bodyfile="ql/experimental/credit/onefactorstudentcopula.hpp" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_one_factor_student_gaussian_copula_1abc2b23f567a0c3e295b3cb4da53f3a5f" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_cumulative_normal_distribution" kindref="compound">CumulativeNormalDistribution</ref></type>
        <definition>CumulativeNormalDistribution QuantLib::OneFactorStudentGaussianCopula::cumulative_</definition>
        <argsstring></argsstring>
        <name>cumulative_</name>
        <qualifiedname>QuantLib::OneFactorStudentGaussianCopula::cumulative_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/onefactorstudentcopula.hpp" line="176" column="38" bodyfile="ql/experimental/credit/onefactorstudentcopula.hpp" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_one_factor_student_gaussian_copula_1a55e09ea76c2cc9b4a8929413f82a967a" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int QuantLib::OneFactorStudentGaussianCopula::nm_</definition>
        <argsstring></argsstring>
        <name>nm_</name>
        <qualifiedname>QuantLib::OneFactorStudentGaussianCopula::nm_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/onefactorstudentcopula.hpp" line="177" column="13" bodyfile="ql/experimental/credit/onefactorstudentcopula.hpp" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_one_factor_student_gaussian_copula_1a8334fcb6de7f4c511d8b3a1c9e1b831f" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::OneFactorStudentGaussianCopula::scaleM_</definition>
        <argsstring></argsstring>
        <name>scaleM_</name>
        <qualifiedname>QuantLib::OneFactorStudentGaussianCopula::scaleM_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/onefactorstudentcopula.hpp" line="179" column="14" bodyfile="ql/experimental/credit/onefactorstudentcopula.hpp" bodystart="179" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_one_factor_student_gaussian_copula_1ad0d23e17659e5b75b14f91be1a16d011" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::OneFactorStudentGaussianCopula::OneFactorStudentGaussianCopula</definition>
        <argsstring>(const Handle&lt; Quote &gt; &amp;correlation, int nm, Real maximum=10, Size integrationSteps=200)</argsstring>
        <name>OneFactorStudentGaussianCopula</name>
        <qualifiedname>QuantLib::OneFactorStudentGaussianCopula::OneFactorStudentGaussianCopula</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &amp;</type>
          <declname>correlation</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nm</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>maximum</declname>
          <defval>10</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>integrationSteps</declname>
          <defval>200</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/onefactorstudentcopula.hpp" line="163" column="9" bodyfile="ql/experimental/credit/onefactorstudentcopula.cpp" bodystart="191" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_one_factor_student_gaussian_copula_1a37ee83e624b800e8e8b4173999cf8c25" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::OneFactorStudentGaussianCopula::density</definition>
        <argsstring>(Real m) const override</argsstring>
        <name>density</name>
        <qualifiedname>QuantLib::OneFactorStudentGaussianCopula::density</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_one_factor_copula_1a474a5f6157375532d09d92b0e8f1b593">density</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>m</declname>
        </param>
        <briefdescription>
<para>Density function of M. </para>
        </briefdescription>
        <detaileddescription>
<para>Derived classes must override this method and ensure zero mean and unit variance. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/onefactorstudentcopula.hpp" line="168" column="14" bodyfile="ql/experimental/credit/onefactorstudentcopula.hpp" bodystart="187" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_one_factor_student_gaussian_copula_1a92da6877e677e43d90fab623595d2331" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::OneFactorStudentGaussianCopula::cumulativeZ</definition>
        <argsstring>(Real z) const override</argsstring>
        <name>cumulativeZ</name>
        <qualifiedname>QuantLib::OneFactorStudentGaussianCopula::cumulativeZ</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_one_factor_copula_1a0b3c619ab0979cb073ed3013abcfe8b4">cumulativeZ</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Cumulative distribution of Z. </para>
        </briefdescription>
        <detaileddescription>
<para>Derived classes must override this method and ensure zero mean and unit variance. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/onefactorstudentcopula.hpp" line="169" column="14" bodyfile="ql/experimental/credit/onefactorstudentcopula.hpp" bodystart="191" bodyend="193"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_one_factor_student_gaussian_copula_1a349ce797c43fd9e89e0d106a0b1d4183" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::OneFactorStudentGaussianCopula::performCalculations</definition>
        <argsstring>() const override</argsstring>
        <name>performCalculations</name>
        <qualifiedname>QuantLib::OneFactorStudentGaussianCopula::performCalculations</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_lazy_object_1aafa5583a3743d9f93fa40da5b62e1ff8">performCalculations</reimplements>
        <briefdescription>
<para><ref refid="class_quant_lib_1_1_observer" kindref="compound">Observer</ref> interface. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/onefactorstudentcopula.hpp" line="173" column="14" bodyfile="ql/experimental/credit/onefactorstudentcopula.cpp" bodystart="207" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_one_factor_student_gaussian_copula_1a54d989450c9732efdc82c5e05baedca1" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::OneFactorStudentGaussianCopula::cumulativeYintegral</definition>
        <argsstring>(Real y) const</argsstring>
        <name>cumulativeYintegral</name>
        <qualifiedname>QuantLib::OneFactorStudentGaussianCopula::cumulativeYintegral</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/onefactorstudentcopula.hpp" line="184" column="14" bodyfile="ql/experimental/credit/onefactorstudentcopula.cpp" bodystart="227" bodyend="271"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>One-factor Student t - Gaussian Copula. </para>
    </briefdescription>
    <detaileddescription>
<para>The copula model <formula id="54">\[ Y_i = a_i\,M+\sqrt{1-a_i^2}\:Z_i \]</formula> is specified here by setting the probability density functions for <formula id="87">$ Z_i $</formula> ( <formula id="88">$ D_Z $</formula>) to a Gaussian and for <formula id="89">$ M $</formula> ( <formula id="90">$ D_M $</formula>) to a Student t-distribution with <formula id="92">$ N_m $</formula> degrees of freedom.</para>
<para>The variance of the Student t-distribution with <formula id="93">$ \nu $</formula> degrees of freedom is <formula id="94">$ \nu / (\nu - 2) $</formula>. Since the copula approach requires zero mean and unit variance distributions, <formula id="89">$ M $</formula> is scaled by  <formula id="99">$ \sqrt{(N_m - 2) /
N_m}. $</formula></para>
<para><xrefsect id="todo_1_todo000019"><xreftitle>Todo</xreftitle><xrefdescription><para>Improve performance/accuracy of the calculation of inverse cumulative Y. Tabulate and store it for selected correlations? </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>QuantLib::OneFactorCopula</label>
        <link refid="class_quant_lib_1_1_one_factor_copula"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::OneFactorStudentGaussianCopula</label>
        <link refid="class_quant_lib_1_1_one_factor_student_gaussian_copula"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>QuantLib::Handle&lt; QuantLib::Quote &gt;</label>
        <link refid="class_quant_lib_1_1_handle"/>
      </node>
      <node id="3">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>QuantLib::OneFactorCopula</label>
        <link refid="class_quant_lib_1_1_one_factor_copula"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>correlation_</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::OneFactorStudentGaussianCopula</label>
        <link refid="class_quant_lib_1_1_one_factor_student_gaussian_copula"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/credit/onefactorstudentcopula.hpp" line="161" column="5" bodyfile="ql/experimental/credit/onefactorstudentcopula.hpp" bodystart="161" bodyend="185"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_lazy_object_1a02070ea7442d30625992c1711030d4b8" prot="protected" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>alwaysForward_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a17c9433135a259e4776baec66204a484" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>alwaysForwardNotifications</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a5244c7f83592375a0ea9048296435fd1" prot="protected" virt="virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a58b4986a80efa18634483a92c121e26e" prot="protected" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>calculated_</name></member>
      <member refid="class_quant_lib_1_1_one_factor_copula_1a39040bcfa07eb134ab4a051a6e6a614b" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>checkMoments</name></member>
      <member refid="class_quant_lib_1_1_one_factor_copula_1a5cc67b81212f5af145a571784b3e61d6" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>conditionalProbability</name></member>
      <member refid="class_quant_lib_1_1_one_factor_copula_1a5c4aa1a82789813fcd245b7b38f6c344" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>conditionalProbability</name></member>
      <member refid="class_quant_lib_1_1_one_factor_copula_1ac301719aca4fdb8a93289d0e7f72352c" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>correlation</name></member>
      <member refid="class_quant_lib_1_1_one_factor_copula_1a18d42174650383ffc5fc3d9750ed2f1a" prot="protected" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>correlation_</name></member>
      <member refid="class_quant_lib_1_1_one_factor_student_gaussian_copula_1abc2b23f567a0c3e295b3cb4da53f3a5f" prot="private" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>cumulative_</name></member>
      <member refid="class_quant_lib_1_1_one_factor_copula_1aa8f26b08b68d15a7a913ce40d4ff7966" prot="public" virt="virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>cumulativeY</name></member>
      <member refid="class_quant_lib_1_1_one_factor_copula_1a2f83e654c64ef9b61ac9c288fb00b2d9" prot="protected" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>cumulativeY_</name></member>
      <member refid="class_quant_lib_1_1_one_factor_student_gaussian_copula_1a54d989450c9732efdc82c5e05baedca1" prot="private" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>cumulativeYintegral</name></member>
      <member refid="class_quant_lib_1_1_one_factor_student_gaussian_copula_1a92da6877e677e43d90fab623595d2331" prot="public" virt="virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>cumulativeZ</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_one_factor_student_gaussian_copula_1a37ee83e624b800e8e8b4173999cf8c25" prot="public" virt="virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>density</name></member>
      <member refid="class_quant_lib_1_1_one_factor_student_gaussian_copula_1a3dc1671c2b232c4ff162c4596c070cff" prot="private" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>density_</name></member>
      <member refid="class_quant_lib_1_1_one_factor_copula_1a4823fe1581fba1288762776ba2a3c757" prot="protected" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>densitydm</name></member>
      <member refid="class_quant_lib_1_1_one_factor_copula_1adf63c91c75b67642f308c5dfe1cad711" prot="protected" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>dm</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1afac6ee19c3107c453e1347dd8000e023" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>forwardFirstNotificationOnly</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7157f41e83f2c5d924f5c5bafda04d1d" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>freeze</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7bb721fe00c6854e602758aba629ab77" prot="protected" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>frozen_</name></member>
      <member refid="class_quant_lib_1_1_one_factor_copula_1a477e0493a6093f497064855008c80dab" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>integral</name></member>
      <member refid="class_quant_lib_1_1_one_factor_copula_1adc149153ced991bba4cb716c2bb42327" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>integral</name></member>
      <member refid="class_quant_lib_1_1_one_factor_copula_1a1e25b1a30d63904c85de847228e51614" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>integral</name></member>
      <member refid="class_quant_lib_1_1_one_factor_copula_1a879f82a318fd4f0ec81c9577bcefbba6" prot="public" virt="virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>inverseCumulativeY</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a0a7c5d42815a4e16ee2158e24dbfc748" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>isCalculated</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a26f18f4ff7faaaebd8eae50e064b493e" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>LazyObject</name></member>
      <member refid="class_quant_lib_1_1_one_factor_copula_1a726fccd0904e76ba737588d2e9d631f3" prot="protected" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>m</name></member>
      <member refid="class_quant_lib_1_1_one_factor_copula_1a45d8cdfbd65e7f01a5cf54bd35570671" prot="protected" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>max_</name></member>
      <member refid="class_quant_lib_1_1_one_factor_copula_1ace40265dfc5d21e58fa56e50554ae449" prot="protected" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>min_</name></member>
      <member refid="class_quant_lib_1_1_one_factor_student_gaussian_copula_1a55e09ea76c2cc9b4a8929413f82a967a" prot="private" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>nm_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_one_factor_copula_1a097679ac888315c7bffb9fece9819333" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>OneFactorCopula</name></member>
      <member refid="class_quant_lib_1_1_one_factor_student_gaussian_copula_1ad0d23e17659e5b75b14f91be1a16d011" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>OneFactorStudentGaussianCopula</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::QuantLib::Observer::"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_one_factor_student_gaussian_copula_1a349ce797c43fd9e89e0d106a0b1d4183" prot="private" virt="virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>performCalculations</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a70c9b24e50132408d8d9ce4f6674662a" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>recalculate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_one_factor_student_gaussian_copula_1a8334fcb6de7f4c511d8b3a1c9e1b831f" prot="private" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>scaleM_</name></member>
      <member refid="class_quant_lib_1_1_one_factor_copula_1a8dd3a2685f5376c82f5766ae86e4550f" prot="protected" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>steps</name></member>
      <member refid="class_quant_lib_1_1_one_factor_copula_1a7933ff8bd857233ec5052673c2c2e8fe" prot="protected" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>steps_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a2e0e4786666453024b9d4e0761f2770b" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>unfreeze</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1adee2bf49be5c4c78736be293321a856d" prot="public" virt="virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_one_factor_copula_1a2747fbaaf34af9e4b4f34ea2a85d00e0" prot="protected" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>y_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a9d719c43bb627177a90d7d12324a2d6e" prot="public" virt="non-virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>~LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::OneFactorStudentGaussianCopula</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

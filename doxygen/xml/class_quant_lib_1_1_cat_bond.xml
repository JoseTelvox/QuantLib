<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_cat_bond" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::CatBond</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_bond" prot="public" virt="non-virtual">QuantLib::Bond</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_floating_cat_bond" prot="public" virt="non-virtual">QuantLib::FloatingCatBond</derivedcompoundref>
    <innerclass refid="class_quant_lib_1_1_cat_bond_1_1arguments" prot="public">QuantLib::CatBond::arguments</innerclass>
    <innerclass refid="class_quant_lib_1_1_cat_bond_1_1engine" prot="public">QuantLib::CatBond::engine</innerclass>
    <innerclass refid="class_quant_lib_1_1_cat_bond_1_1results" prot="public">QuantLib::CatBond::results</innerclass>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_cat_bond_1a19ba40c02065e8913e0184216bd60747" prot="protected" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_notional_risk" kindref="compound">NotionalRisk</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;NotionalRisk&gt; QuantLib::CatBond::notionalRisk_</definition>
        <argsstring></argsstring>
        <name>notionalRisk_</name>
        <qualifiedname>QuantLib::CatBond::notionalRisk_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/catbonds/catbond.hpp" line="59" column="25" bodyfile="ql/experimental/catbonds/catbond.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cat_bond_1ad8d4c4e0d682eb3ed76d27c7c54838c6" prot="protected" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CatBond::lossProbability_</definition>
        <argsstring></argsstring>
        <name>lossProbability_</name>
        <qualifiedname>QuantLib::CatBond::lossProbability_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/catbonds/catbond.hpp" line="61" column="22" bodyfile="ql/experimental/catbonds/catbond.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cat_bond_1ac53446b885bbd438f68b33727c0c8cc1" prot="protected" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CatBond::exhaustionProbability_</definition>
        <argsstring></argsstring>
        <name>exhaustionProbability_</name>
        <qualifiedname>QuantLib::CatBond::exhaustionProbability_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/catbonds/catbond.hpp" line="62" column="22" bodyfile="ql/experimental/catbonds/catbond.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cat_bond_1aa9d1c8c830ceb313bbf5e502ce411710" prot="protected" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CatBond::expectedLoss_</definition>
        <argsstring></argsstring>
        <name>expectedLoss_</name>
        <qualifiedname>QuantLib::CatBond::expectedLoss_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/catbonds/catbond.hpp" line="63" column="22" bodyfile="ql/experimental/catbonds/catbond.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_cat_bond_1a71ed618d1fd118df5d75c808a4648d89" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::CatBond::CatBond</definition>
        <argsstring>(Natural settlementDays, const Calendar &amp;calendar, const Date &amp;issueDate, ext::shared_ptr&lt; NotionalRisk &gt; notionalRisk)</argsstring>
        <name>CatBond</name>
        <qualifiedname>QuantLib::CatBond::CatBond</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>settlementDays</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>calendar</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>issueDate</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_notional_risk" kindref="compound">NotionalRisk</ref> &gt;</type>
          <declname>notionalRisk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/catbonds/catbond.hpp" line="44" column="9" bodyfile="ql/experimental/catbonds/catbond.hpp" bodystart="44" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_cat_bond_1a99476a93f5e3ca3bd4c10d6b479925e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::CatBond::~CatBond</definition>
        <argsstring>() override=default</argsstring>
        <name>~CatBond</name>
        <qualifiedname>QuantLib::CatBond::~CatBond</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/catbonds/catbond.hpp" line="49" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_cat_bond_1a99e8c971565a49e48f122e43f91b20af" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::CatBond::setupArguments</definition>
        <argsstring>(PricingEngine::arguments *) const override</argsstring>
        <name>setupArguments</name>
        <qualifiedname>QuantLib::CatBond::setupArguments</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_bond_1ad87ed8ba111686fd6b8277e90f9209ec">setupArguments</reimplements>
        <param>
          <type><ref refid="class_quant_lib_1_1_pricing_engine_1_1arguments" kindref="compound">PricingEngine::arguments</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>When a derived argument structure is defined for an instrument, this method should be overridden to fill it. This is mandatory in case a pricing engine is used. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/catbonds/catbond.hpp" line="51" column="14" bodyfile="ql/experimental/catbonds/catbond.cpp" bodystart="38" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_cat_bond_1a5a05dbed5849460fa4f41326161490aa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::CatBond::fetchResults</definition>
        <argsstring>(const PricingEngine::results *) const override</argsstring>
        <name>fetchResults</name>
        <qualifiedname>QuantLib::CatBond::fetchResults</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_bond_1a4d7a6493fade5f4f1f88bdd2b56c7138">fetchResults</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_pricing_engine_1_1results" kindref="compound">PricingEngine::results</ref> *</type>
          <defname>r</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>When a derived result structure is defined for an instrument, this method should be overridden to read from it. This is mandatory in case a pricing engine is used. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/catbonds/catbond.hpp" line="52" column="14" bodyfile="ql/experimental/catbonds/catbond.cpp" bodystart="49" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_cat_bond_1ac87a5c6f0d1273fc1b569c0f40485b07" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CatBond::lossProbability</definition>
        <argsstring>() const</argsstring>
        <name>lossProbability</name>
        <qualifiedname>QuantLib::CatBond::lossProbability</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/catbonds/catbond.hpp" line="54" column="14" bodyfile="ql/experimental/catbonds/catbond.hpp" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_cat_bond_1ab727c39e16bd2c31e6872a309dee8216" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CatBond::expectedLoss</definition>
        <argsstring>() const</argsstring>
        <name>expectedLoss</name>
        <qualifiedname>QuantLib::CatBond::expectedLoss</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/catbonds/catbond.hpp" line="55" column="14" bodyfile="ql/experimental/catbonds/catbond.hpp" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_cat_bond_1a5df1f21b40202cd1547b11c495834dda" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CatBond::exhaustionProbability</definition>
        <argsstring>() const</argsstring>
        <name>exhaustionProbability</name>
        <qualifiedname>QuantLib::CatBond::exhaustionProbability</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/catbonds/catbond.hpp" line="56" column="14" bodyfile="ql/experimental/catbonds/catbond.hpp" bodystart="56" bodyend="56"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::Bond</label>
        <link refid="class_quant_lib_1_1_bond"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::CatBond</label>
        <link refid="class_quant_lib_1_1_cat_bond"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::FloatingCatBond</label>
        <link refid="class_quant_lib_1_1_floating_cat_bond"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Instrument</label>
        <link refid="class_quant_lib_1_1_instrument"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::Bond</label>
        <link refid="class_quant_lib_1_1_bond"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>calendar_</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>issueDate_</edgelabel>
          <edgelabel>maturityDate_</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::Calendar</label>
        <link refid="class_quant_lib_1_1_calendar"/>
      </node>
      <node id="1">
        <label>QuantLib::CatBond</label>
        <link refid="class_quant_lib_1_1_cat_bond"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="3">
        <label>QuantLib::Instrument</label>
        <link refid="class_quant_lib_1_1_instrument"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>valuationDate_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/catbonds/catbond.hpp" line="37" column="5" bodyfile="ql/experimental/catbonds/catbond.hpp" bodystart="38" bodyend="64"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_bond_1aebd407a08c0adfaa3bda7c1c3bc5686b" prot="public" virt="virtual"><scope>QuantLib::CatBond</scope><name>accruedAmount</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a468edb294da268b097c91bf821084c07" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>additionalResults</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a57d2b34e8625ab3d9ffa50c0c7931099" prot="protected" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>additionalResults_</name></member>
      <member refid="class_quant_lib_1_1_bond_1a0c477dc3fa147e8a15c6a8a3e79e0740" prot="protected" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>addRedemptionsToCashflows</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a02070ea7442d30625992c1711030d4b8" prot="protected" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>alwaysForward_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a17c9433135a259e4776baec66204a484" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>alwaysForwardNotifications</name></member>
      <member refid="class_quant_lib_1_1_bond_1ab3b0339ab8780a8feb6974c55568b431" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>Bond</name></member>
      <member refid="class_quant_lib_1_1_bond_1a045620250d5442d6c8e96e425ed2db3c" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>Bond</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a4c573c48f7eaead5042864ac0eb5b025" prot="protected" virt="virtual"><scope>QuantLib::CatBond</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a58b4986a80efa18634483a92c121e26e" prot="protected" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>calculated_</name></member>
      <member refid="class_quant_lib_1_1_bond_1ae5b077356ca91d3eea2022dadeb03ee0" prot="protected" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>calculateNotionalsFromCashflows</name></member>
      <member refid="class_quant_lib_1_1_bond_1aa3050d7de30989970dd3c6cd445b53dc" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>calendar</name></member>
      <member refid="class_quant_lib_1_1_bond_1abdb0f073ef7ab0446b2fcc537b338a2d" prot="protected" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>calendar_</name></member>
      <member refid="class_quant_lib_1_1_bond_1a904f66ebb3eba4df33ba30ec37770bb0" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>cashflows</name></member>
      <member refid="class_quant_lib_1_1_bond_1a3b67d66ca4ca84900877a17c14a88fb7" prot="protected" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>cashflows_</name></member>
      <member refid="class_quant_lib_1_1_cat_bond_1a71ed618d1fd118df5d75c808a4648d89" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>CatBond</name></member>
      <member refid="class_quant_lib_1_1_bond_1a3eb154449d554f9b633917fac47ec23a" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>cleanPrice</name></member>
      <member refid="class_quant_lib_1_1_bond_1a2854e074dfdca6312fcb284457821df5" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>cleanPrice</name></member>
      <member refid="class_quant_lib_1_1_bond_1a7ec2560eadfd56ca7e185b9bb91b99e6" prot="public" virt="virtual"><scope>QuantLib::CatBond</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_bond_1a3b148aba5b10f3d58f5d52ea16f01dda" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>dirtyPrice</name></member>
      <member refid="class_quant_lib_1_1_bond_1ad6c18f3aea7e889e0e498c611445fbeb" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>dirtyPrice</name></member>
      <member refid="class_quant_lib_1_1_instrument_1ac548cb61c864779db09bd0fac6ae7c81" prot="protected" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>engine_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a03502fb6c606b262c25acd94ff4c1e52" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>errorEstimate</name></member>
      <member refid="class_quant_lib_1_1_instrument_1abb8f4cfa7346fab7a2f3a8c8b4da30f3" prot="protected" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>errorEstimate_</name></member>
      <member refid="class_quant_lib_1_1_cat_bond_1a5df1f21b40202cd1547b11c495834dda" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>exhaustionProbability</name></member>
      <member refid="class_quant_lib_1_1_cat_bond_1ac53446b885bbd438f68b33727c0c8cc1" prot="protected" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>exhaustionProbability_</name></member>
      <member refid="class_quant_lib_1_1_cat_bond_1ab727c39e16bd2c31e6872a309dee8216" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>expectedLoss</name></member>
      <member refid="class_quant_lib_1_1_cat_bond_1aa9d1c8c830ceb313bbf5e502ce411710" prot="protected" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>expectedLoss_</name></member>
      <member refid="class_quant_lib_1_1_cat_bond_1a5a05dbed5849460fa4f41326161490aa" prot="public" virt="virtual"><scope>QuantLib::CatBond</scope><name>fetchResults</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1afac6ee19c3107c453e1347dd8000e023" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>forwardFirstNotificationOnly</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7157f41e83f2c5d924f5c5bafda04d1d" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>freeze</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7bb721fe00c6854e602758aba629ab77" prot="protected" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>frozen_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a5e4c746cbf7999c83dc57f87e241f1cc" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>Instrument</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a0a7c5d42815a4e16ee2158e24dbfc748" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>isCalculated</name></member>
      <member refid="class_quant_lib_1_1_bond_1a29e653651790da335c5000fed98f9426" prot="public" virt="virtual"><scope>QuantLib::CatBond</scope><name>isExpired</name></member>
      <member refid="class_quant_lib_1_1_bond_1a10a1ee7aea8c987c331eca201ff00e6c" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>issueDate</name></member>
      <member refid="class_quant_lib_1_1_bond_1a6e5b7c316a846a8f60fdfa3eed11548d" prot="protected" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>issueDate_</name></member>
      <member refid="class_quant_lib_1_1_bond_1ab2b91de576632e775e5093ccbd65c61f" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>isTradable</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a26f18f4ff7faaaebd8eae50e064b493e" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>LazyObject</name></member>
      <member refid="class_quant_lib_1_1_cat_bond_1ac87a5c6f0d1273fc1b569c0f40485b07" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>lossProbability</name></member>
      <member refid="class_quant_lib_1_1_cat_bond_1ad8d4c4e0d682eb3ed76d27c7c54838c6" prot="protected" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>lossProbability_</name></member>
      <member refid="class_quant_lib_1_1_bond_1a11c98eb10f94cfca3bf0f724a67be155" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>maturityDate</name></member>
      <member refid="class_quant_lib_1_1_bond_1a826583ebd14ee9d90e1e2864897da034" prot="protected" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>maturityDate_</name></member>
      <member refid="class_quant_lib_1_1_bond_1aa9853f3e8b7f807b31e2575929d87552" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>nextCashFlowDate</name></member>
      <member refid="class_quant_lib_1_1_bond_1a0e3407e3f2f80bceeb806b446cdd0ee0" prot="public" virt="virtual"><scope>QuantLib::CatBond</scope><name>nextCouponRate</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_bond_1a671a3d7c8c0b1db1bf85cba7a1e9473d" prot="public" virt="virtual"><scope>QuantLib::CatBond</scope><name>notional</name></member>
      <member refid="class_quant_lib_1_1_cat_bond_1a19ba40c02065e8913e0184216bd60747" prot="protected" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>notionalRisk_</name></member>
      <member refid="class_quant_lib_1_1_bond_1adda5ca64da20be9a916a0a96f8c26ac3" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>notionals</name></member>
      <member refid="class_quant_lib_1_1_bond_1a01aa695599f96e8bca2b44e78fd1f3cc" prot="protected" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>notionals_</name></member>
      <member refid="class_quant_lib_1_1_bond_1ad305a0db329332dfd086767111930dee" prot="protected" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>notionalSchedule_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a5afdd9698267cd30ddd10cf01f3487b0" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>NPV</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a997663780100d30ae59b14ac0285322d" prot="protected" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>NPV_</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::CatBond</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::CatBond</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::CatBond</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::CatBond</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::CatBond</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::QuantLib::Observer::"><scope>QuantLib::CatBond</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_instrument_1aad23f546bbca156a49a95ca2bee124c4" prot="protected" virt="virtual"><scope>QuantLib::CatBond</scope><name>performCalculations</name></member>
      <member refid="class_quant_lib_1_1_bond_1a9ff7fa3a8248acae7c9c30591ec0ee28" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>previousCashFlowDate</name></member>
      <member refid="class_quant_lib_1_1_bond_1a0c8d6afffecbe48a2f6e1f0af6df6869" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>previousCouponRate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a70c9b24e50132408d8d9ce4f6674662a" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>recalculate</name></member>
      <member refid="class_quant_lib_1_1_bond_1ad15747f06d81987db5154e02427ce434" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>redemption</name></member>
      <member refid="class_quant_lib_1_1_bond_1a4e0a0d7c5bb9a85f13752ee69dc4332c" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>redemptions</name></member>
      <member refid="class_quant_lib_1_1_bond_1aa51ead614a160da5dedaf862db8ef84e" prot="protected" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>redemptions_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a266c15a12160a89f4f9707db85f9fa27" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>result</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a3444386491f179f64f4f0aac24997071" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>setPricingEngine</name></member>
      <member refid="class_quant_lib_1_1_bond_1aa01b6ab924b0c7417f4f6e5e0d446058" prot="protected" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>setSingleRedemption</name></member>
      <member refid="class_quant_lib_1_1_bond_1af8923cdcd5b8357fb8af32d8b989c55d" prot="protected" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>setSingleRedemption</name></member>
      <member refid="class_quant_lib_1_1_bond_1a764b8113c4300acd802a63ca39523662" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>settlementDate</name></member>
      <member refid="class_quant_lib_1_1_bond_1aae053246ae68e2593ea1640af7449c80" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>settlementDays</name></member>
      <member refid="class_quant_lib_1_1_bond_1a73653e4daab6f79d4e4b43959805dcf5" prot="protected" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>settlementDays_</name></member>
      <member refid="class_quant_lib_1_1_bond_1a5a19201439ca249d30573e6c0c759da2" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>settlementValue</name></member>
      <member refid="class_quant_lib_1_1_bond_1aae897f34447839310879a45f4e69b683" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>settlementValue</name></member>
      <member refid="class_quant_lib_1_1_bond_1a371196d9d28a301f517ebf7126db45a2" prot="protected" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>settlementValue_</name></member>
      <member refid="class_quant_lib_1_1_cat_bond_1a99e8c971565a49e48f122e43f91b20af" prot="public" virt="virtual"><scope>QuantLib::CatBond</scope><name>setupArguments</name></member>
      <member refid="class_quant_lib_1_1_bond_1aa86e41b660226fe375a5f0cc32e23f88" prot="protected" virt="virtual"><scope>QuantLib::CatBond</scope><name>setupExpired</name></member>
      <member refid="class_quant_lib_1_1_bond_1aa20cefd3e28d4736122629b2d291c86e" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>startDate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a2e0e4786666453024b9d4e0761f2770b" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>unfreeze</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1adee2bf49be5c4c78736be293321a856d" prot="public" virt="virtual"><scope>QuantLib::CatBond</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a53a0fc1adc70b73387ad53009725835d" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>valuationDate</name></member>
      <member refid="class_quant_lib_1_1_instrument_1aa60b558fc82f022e13535360ac4a6fed" prot="protected" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>valuationDate_</name></member>
      <member refid="class_quant_lib_1_1_bond_1aa74fece7368a248c713a554fb1942076" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>yield</name></member>
      <member refid="class_quant_lib_1_1_bond_1afa69fb56ae9a24d725adc2c825982357" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>yield</name></member>
      <member refid="class_quant_lib_1_1_bond_1a3eba4b514302bbe824899397100c50e5" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>yield</name></member>
      <member refid="class_quant_lib_1_1_cat_bond_1a99476a93f5e3ca3bd4c10d6b479925e6" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>~CatBond</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a9d719c43bb627177a90d7d12324a2d6e" prot="public" virt="non-virtual"><scope>QuantLib::CatBond</scope><name>~LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::CatBond</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::CatBond</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

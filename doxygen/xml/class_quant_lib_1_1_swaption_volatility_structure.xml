<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_swaption_volatility_structure" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::SwaptionVolatilityStructure</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_volatility_term_structure" prot="public" virt="non-virtual">QuantLib::VolatilityTermStructure</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_constant_swaption_volatility" prot="public" virt="non-virtual">QuantLib::ConstantSwaptionVolatility</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_gaussian1d_swaption_volatility" prot="public" virt="non-virtual">QuantLib::Gaussian1dSwaptionVolatility</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_spreaded_swaption_volatility" prot="public" virt="non-virtual">QuantLib::SpreadedSwaptionVolatility</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_swaption_volatility_discrete" prot="public" virt="non-virtual">QuantLib::SwaptionVolatilityDiscrete</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_tenor_swaption_v_t_s" prot="public" virt="non-virtual">QuantLib::TenorSwaptionVTS</derivedcompoundref>
    <includes refid="swaptionvolstructure_8hpp" local="no">swaptionvolstructure.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Constructors</header>
      <description><para>See the <ref refid="class_quant_lib_1_1_term_structure" kindref="compound">TermStructure</ref> documentation for issues regarding constructors. </para>
</description>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1abd6d1f07a9aae40747af8ec3b834ab3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::SwaptionVolatilityStructure::SwaptionVolatilityStructure</definition>
        <argsstring>(BusinessDayConvention bdc, const DayCounter &amp;dc=DayCounter())</argsstring>
        <name>SwaptionVolatilityStructure</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::SwaptionVolatilityStructure</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
          <declname>bdc</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dc</declname>
          <defval><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>term structures initialized by means of this constructor must manage their own reference date by overriding the <ref refid="class_quant_lib_1_1_term_structure_1accbf3d4af41db0333d456eb5616c4e1e" kindref="member">referenceDate()</ref> method. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="52" column="9" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.cpp" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1ae35d59fd3747d789235ae1d804a52fa7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::SwaptionVolatilityStructure::SwaptionVolatilityStructure</definition>
        <argsstring>(const Date &amp;referenceDate, const Calendar &amp;calendar, BusinessDayConvention bdc, const DayCounter &amp;dc=DayCounter())</argsstring>
        <name>SwaptionVolatilityStructure</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::SwaptionVolatilityStructure</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>referenceDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>calendar</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
          <declname>bdc</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dc</declname>
          <defval><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref>()</defval>
        </param>
        <briefdescription>
<para>initialize with a fixed reference date </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="55" column="9" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.cpp" bodystart="32" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1a703ae26172d027d9ae14024acd0ed45c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::SwaptionVolatilityStructure::SwaptionVolatilityStructure</definition>
        <argsstring>(Natural settlementDays, const Calendar &amp;, BusinessDayConvention bdc, const DayCounter &amp;dc=DayCounter())</argsstring>
        <name>SwaptionVolatilityStructure</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::SwaptionVolatilityStructure</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>settlementDays</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <defname>calendar</defname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
          <declname>bdc</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dc</declname>
          <defval><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref>()</defval>
        </param>
        <briefdescription>
<para>calculate the reference date based on the global evaluation date </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="60" column="9" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.cpp" bodystart="39" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1aad2b18f708410e363b1c6e7c56d90be6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::SwaptionVolatilityStructure::~SwaptionVolatilityStructure</definition>
        <argsstring>() override=default</argsstring>
        <name>~SwaptionVolatilityStructure</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::~SwaptionVolatilityStructure</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="65" column="9"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Volatility, variance and smile</header>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1a7bc429391cc8c53f944f19322b5ef507" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
        <definition>Volatility QuantLib::SwaptionVolatilityStructure::volatility</definition>
        <argsstring>(const Period &amp;optionTenor, const Period &amp;swapTenor, Rate strike, bool extrapolate=false) const</argsstring>
        <name>volatility</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::volatility</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>optionTenor</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>swapTenor</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>returns the volatility for a given option tenor and swap tenor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="69" column="20" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" bodystart="225" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1aebba981315101163d15bebd422ee1d56" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
        <definition>Volatility QuantLib::SwaptionVolatilityStructure::volatility</definition>
        <argsstring>(const Date &amp;optionDate, const Period &amp;swapTenor, Rate strike, bool extrapolate=false) const</argsstring>
        <name>volatility</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::volatility</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>optionDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>swapTenor</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>returns the volatility for a given option date and swap tenor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="74" column="20" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" bodystart="325" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1a886e28ff9dfcee3595a606d533126fda" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
        <definition>Volatility QuantLib::SwaptionVolatilityStructure::volatility</definition>
        <argsstring>(Time optionTime, const Period &amp;swapTenor, Rate strike, bool extrapolate=false) const</argsstring>
        <name>volatility</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::volatility</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>optionTime</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>swapTenor</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>returns the volatility for a given option time and swap tenor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="79" column="20" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" bodystart="348" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1a5e7d30990ea15370fdd05dadc05a9a94" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
        <definition>Volatility QuantLib::SwaptionVolatilityStructure::volatility</definition>
        <argsstring>(const Period &amp;optionTenor, Time swapLength, Rate strike, bool extrapolate=false) const</argsstring>
        <name>volatility</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::volatility</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>optionTenor</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>swapLength</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>returns the volatility for a given option tenor and swap length </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="84" column="20" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" bodystart="234" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1a8547d16488e9cd23fe2a80e293656045" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
        <definition>Volatility QuantLib::SwaptionVolatilityStructure::volatility</definition>
        <argsstring>(const Date &amp;optionDate, Time swapLength, Rate strike, bool extrapolate=false) const</argsstring>
        <name>volatility</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::volatility</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>optionDate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>swapLength</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>returns the volatility for a given option date and swap length </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="89" column="20" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" bodystart="336" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1abbb9e37e45655ac0a8bd429b7dfe791b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
        <definition>Volatility QuantLib::SwaptionVolatilityStructure::volatility</definition>
        <argsstring>(Time optionTime, Time swapLength, Rate strike, bool extrapolate=false) const</argsstring>
        <name>volatility</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::volatility</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>optionTime</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>swapLength</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>returns the volatility for a given option time and swap length </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="94" column="20" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" bodystart="360" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1aad619f657a057cd2c4e7acf0fab86dd3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SwaptionVolatilityStructure::blackVariance</definition>
        <argsstring>(const Period &amp;optionTenor, const Period &amp;swapTenor, Rate strike, bool extrapolate=false) const</argsstring>
        <name>blackVariance</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::blackVariance</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>optionTenor</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>swapTenor</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>returns the Black variance for a given option tenor and swap tenor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="100" column="14" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" bodystart="243" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1a97f805e38edf4b2cf92415add4addc3b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SwaptionVolatilityStructure::blackVariance</definition>
        <argsstring>(const Date &amp;optionDate, const Period &amp;swapTenor, Rate strike, bool extrapolate=false) const</argsstring>
        <name>blackVariance</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::blackVariance</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>optionDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>swapTenor</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>returns the Black variance for a given option date and swap tenor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="105" column="14" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" bodystart="286" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1a5ab74b07cc458bfd966711d827ddefe4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SwaptionVolatilityStructure::blackVariance</definition>
        <argsstring>(Time optionTime, const Period &amp;swapTenor, Rate strike, bool extrapolate=false) const</argsstring>
        <name>blackVariance</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::blackVariance</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>optionTime</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>swapTenor</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>returns the Black variance for a given option time and swap tenor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="110" column="14" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" bodystart="296" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1a3ef8a10af55f71e1e4ec0e618a5b0416" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SwaptionVolatilityStructure::blackVariance</definition>
        <argsstring>(const Period &amp;optionTenor, Time swapLength, Rate strike, bool extrapolate=false) const</argsstring>
        <name>blackVariance</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::blackVariance</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>optionTenor</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>swapLength</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>returns the Black variance for a given option tenor and swap length </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="115" column="14" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" bodystart="252" bodyend="258"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1a267a1a05f29d45518e063912c2a4c463" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SwaptionVolatilityStructure::blackVariance</definition>
        <argsstring>(const Date &amp;optionDate, Time swapLength, Rate strike, bool extrapolate=false) const</argsstring>
        <name>blackVariance</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::blackVariance</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>optionDate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>swapLength</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>returns the Black variance for a given option date and swap length </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="120" column="14" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" bodystart="305" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1a4282c33cffab4b0c508fdff2735c70f4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SwaptionVolatilityStructure::blackVariance</definition>
        <argsstring>(Time optionTime, Time swapLength, Rate strike, bool extrapolate=false) const</argsstring>
        <name>blackVariance</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::blackVariance</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>optionTime</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>swapLength</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>returns the Black variance for a given option time and swap length </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="125" column="14" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" bodystart="315" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1a8479ca4d2aa0fd1a267627a6287b1b8e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SwaptionVolatilityStructure::shift</definition>
        <argsstring>(const Period &amp;optionTenor, const Period &amp;swapTenor, bool extrapolate=false) const</argsstring>
        <name>shift</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::shift</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>optionTenor</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>swapTenor</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>returns the shift for a given option tenor and swap tenor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="131" column="14" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" bodystart="261" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1a86fec0f6153bc0ec3cbac9011368e7e6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SwaptionVolatilityStructure::shift</definition>
        <argsstring>(const Date &amp;optionDate, const Period &amp;swapTenor, bool extrapolate=false) const</argsstring>
        <name>shift</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::shift</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>optionDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>swapTenor</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>returns the shift for a given option date and swap tenor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="135" column="14" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" bodystart="371" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1a167336df1723692ba1eb44a8f58bb28c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SwaptionVolatilityStructure::shift</definition>
        <argsstring>(Time optionTime, const Period &amp;swapTenor, bool extrapolate=false) const</argsstring>
        <name>shift</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::shift</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>optionTime</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>swapTenor</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>returns the shift for a given option time and swap tenor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="139" column="14" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" bodystart="390" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1a0d4e22185eecf76928429763b85bd081" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SwaptionVolatilityStructure::shift</definition>
        <argsstring>(const Period &amp;optionTenor, Time swapLength, bool extrapolate=false) const</argsstring>
        <name>shift</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::shift</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>optionTenor</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>swapLength</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>returns the shift for a given option tenor and swap length </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="143" column="14" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" bodystart="269" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1a810c6def11f7a114acb64c07bad757a3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SwaptionVolatilityStructure::shift</definition>
        <argsstring>(const Date &amp;optionDate, Time swapLength, bool extrapolate=false) const</argsstring>
        <name>shift</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::shift</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>optionDate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>swapLength</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>returns the shift for a given option date and swap length </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="147" column="14" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" bodystart="380" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1a94bac4c4352503cd8105164f0b42fd62" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SwaptionVolatilityStructure::shift</definition>
        <argsstring>(Time optionTime, Time swapLength, bool extrapolate=false) const</argsstring>
        <name>shift</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::shift</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>optionTime</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>swapLength</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>returns the shift for a given option time and swap length </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="151" column="14" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" bodystart="400" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1aa4f06f9248db36f2a049a7e7504051fe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_smile_section" kindref="compound">SmileSection</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; SmileSection &gt; QuantLib::SwaptionVolatilityStructure::smileSection</definition>
        <argsstring>(const Period &amp;optionTenor, const Period &amp;swapTenor, bool extr=false) const</argsstring>
        <name>smileSection</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::smileSection</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>optionTenor</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>swapTenor</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extr</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>returns the smile for a given option tenor and swap tenor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="156" column="25" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" bodystart="277" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1a05a765784ea58eb10a1bfa60fbce157b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_smile_section" kindref="compound">SmileSection</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; SmileSection &gt; QuantLib::SwaptionVolatilityStructure::smileSection</definition>
        <argsstring>(const Date &amp;optionDate, const Period &amp;swapTenor, bool extr=false) const</argsstring>
        <name>smileSection</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::smileSection</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>optionDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>swapTenor</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extr</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>returns the smile for a given option date and swap tenor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="160" column="25" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" bodystart="409" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1a040df128aa83d1334e9ba0a8c326ab3a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_smile_section" kindref="compound">SmileSection</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; SmileSection &gt; QuantLib::SwaptionVolatilityStructure::smileSection</definition>
        <argsstring>(Time optionTime, const Period &amp;swapTenor, bool extr=false) const</argsstring>
        <name>smileSection</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::smileSection</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>optionTime</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>swapTenor</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extr</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>returns the smile for a given option time and swap tenor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="164" column="25" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" bodystart="418" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1a3f49a37fcc191910a650feaf87c9be3a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_smile_section" kindref="compound">SmileSection</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; SmileSection &gt; QuantLib::SwaptionVolatilityStructure::smileSection</definition>
        <argsstring>(const Period &amp;optionTenor, Time swapLength, bool extr=false) const</argsstring>
        <name>smileSection</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::smileSection</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>optionTenor</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>swapLength</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extr</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>returns the smile for a given option tenor and swap length </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="168" column="25" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" bodystart="427" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1a24a667fd5d98c387f645493e298e3c0b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_smile_section" kindref="compound">SmileSection</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; SmileSection &gt; QuantLib::SwaptionVolatilityStructure::smileSection</definition>
        <argsstring>(const Date &amp;optionDate, Time swapLength, bool extr=false) const</argsstring>
        <name>smileSection</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::smileSection</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>optionDate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>swapLength</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extr</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>returns the smile for a given option date and swap length </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="172" column="25" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" bodystart="437" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1a9b52fc36e51094a8db9984935c83a7e8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_smile_section" kindref="compound">SmileSection</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; SmileSection &gt; QuantLib::SwaptionVolatilityStructure::smileSection</definition>
        <argsstring>(Time optionTime, Time swapLength, bool extr=false) const</argsstring>
        <name>smileSection</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::smileSection</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>optionTime</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>swapLength</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extr</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>returns the smile for a given option time and swap length </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="176" column="25" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" bodystart="446" bodyend="452"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Limits</header>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1aed33f007e1e4ebe505beb7ab4737a6b9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
        <definition>virtual const Period &amp; QuantLib::SwaptionVolatilityStructure::maxSwapTenor</definition>
        <argsstring>() const =0</argsstring>
        <name>maxSwapTenor</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::maxSwapTenor</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_constant_swaption_volatility_1ad9b2c2d1c2a438ddec3e340491630970">maxSwapTenor</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_gaussian1d_swaption_volatility_1ad1c1d69e39df4712414cffe7cda22bbc">maxSwapTenor</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_spreaded_swaption_volatility_1ae55dc40e42b41e9e35a2ce9a0010678d">maxSwapTenor</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_swaption_volatility_cube_1a9b5eb75bac0a156d6a2af8309c942eff">maxSwapTenor</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_swaption_volatility_matrix_1a2c193f9848e8b04c091c7505dbdbefe3">maxSwapTenor</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_tenor_swaption_v_t_s_1abd9ec39dae5f9da2b150f5c7ac7246d9">maxSwapTenor</reimplementedby>
        <briefdescription>
<para>the largest length for which the term structure can return vols </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="183" column="30"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1a9988a4f4a437c976adfcb4861532352a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>Time QuantLib::SwaptionVolatilityStructure::maxSwapLength</definition>
        <argsstring>() const</argsstring>
        <name>maxSwapLength</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::maxSwapLength</qualifiedname>
        <briefdescription>
<para>the largest swapLength for which the term structure can return vols </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="185" column="14" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" bodystart="485" bodyend="487"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1ae5278ecbe11814a32f61f4f65a0ce1a5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>VolatilityType</type>
        <definition>virtual VolatilityType QuantLib::SwaptionVolatilityStructure::volatilityType</definition>
        <argsstring>() const</argsstring>
        <name>volatilityType</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::volatilityType</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_constant_swaption_volatility_1a18ea02604fa2344e1ff6704d4fe79ccb">volatilityType</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_spreaded_swaption_volatility_1a1de5d7a14cfb49c5c19a9a85dc3e3a60">volatilityType</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_swaption_volatility_cube_1aeaad12be512c2f4c81b94b0735b2aa7d">volatilityType</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_swaption_volatility_matrix_1a620b371bf5bbb53a882a978dbbe5038f">volatilityType</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_tenor_swaption_v_t_s_1a540a64fcf4e77e8d24bf76a1e632d6d9">volatilityType</reimplementedby>
        <briefdescription>
<para>volatility type </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="189" column="32" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" bodystart="189" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1a1fbd0d2ce647f1c95a042aeceff4f5e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>Time QuantLib::SwaptionVolatilityStructure::swapLength</definition>
        <argsstring>(const Period &amp;swapTenor) const</argsstring>
        <name>swapLength</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::swapLength</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>swapTenor</declname>
        </param>
        <briefdescription>
<para>implements the conversion between swap tenor and swap (time) length </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="194" column="14" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.cpp" bodystart="47" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1a7a35582639abbe4a65e0225fb35f484b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>Time QuantLib::SwaptionVolatilityStructure::swapLength</definition>
        <argsstring>(const Date &amp;start, const Date &amp;end) const</argsstring>
        <name>swapLength</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::swapLength</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>implements the conversion between swap dates and swap (time) length </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="196" column="14" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.cpp" bodystart="60" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1aea09cc29a3021eaf2258a299fbe77c4f" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_smile_section" kindref="compound">SmileSection</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; SmileSection &gt; QuantLib::SwaptionVolatilityStructure::smileSectionImpl</definition>
        <argsstring>(const Date &amp;optionDate, const Period &amp;swapTenor) const</argsstring>
        <name>smileSectionImpl</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::smileSectionImpl</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_constant_swaption_volatility_1ab4c4820e0274d6827a3d9b9c5249e26a">smileSectionImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_gaussian1d_swaption_volatility_1a9bfb7a0730b46aa5f06093f6165657e7">smileSectionImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_interpolated_swaption_volatility_cube_1aba5820f6f41be18f8c2e2f8e8c4b5be3">smileSectionImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_spreaded_swaption_volatility_1a08f3b76fb2d425a9386d7082693ea092">smileSectionImpl</reimplementedby>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>optionDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>swapTenor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="199" column="33" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" bodystart="457" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1a764cdce196b548e55e2ad5eb590e03cb" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_smile_section" kindref="compound">SmileSection</ref> &gt;</type>
        <definition>virtual ext::shared_ptr&lt; SmileSection &gt; QuantLib::SwaptionVolatilityStructure::smileSectionImpl</definition>
        <argsstring>(Time optionTime, Time swapLength) const =0</argsstring>
        <name>smileSectionImpl</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::smileSectionImpl</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_constant_swaption_volatility_1a4f0c21b3576f2fa307a9ae181b8182a9">smileSectionImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_gaussian1d_swaption_volatility_1aa775183abf5b13b6871bef1ce4c99919">smileSectionImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_interpolated_swaption_volatility_cube_1ae76b1f8ab66aec065aac91d9da4947d3">smileSectionImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_spreaded_swaption_volatility_1aba133017d9594ca1156aca84db06a52e">smileSectionImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_swaption_volatility_matrix_1a943934928d5ad9cdbd60dc69c77daf09">smileSectionImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_tenor_swaption_v_t_s_1a0a0a37367cf629f916a6c6878ac60cb4">smileSectionImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_xabr_swaption_volatility_cube_1ac37594e16e0ab704579041925003aadb">smileSectionImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_xabr_swaption_volatility_cube_1ac37594e16e0ab704579041925003aadb">smileSectionImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_xabr_swaption_volatility_cube_1ac37594e16e0ab704579041925003aadb">smileSectionImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_xabr_swaption_volatility_cube_1ac37594e16e0ab704579041925003aadb">smileSectionImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_xabr_swaption_volatility_cube_1ac37594e16e0ab704579041925003aadb">smileSectionImpl</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>optionTime</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>swapLength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="202" column="33"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1a113cc40ddd67938aa9741212acfce0f5" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
        <definition>Volatility QuantLib::SwaptionVolatilityStructure::volatilityImpl</definition>
        <argsstring>(const Date &amp;optionDate, const Period &amp;swapTenor, Rate strike) const</argsstring>
        <name>volatilityImpl</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::volatilityImpl</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_constant_swaption_volatility_1a896d0140135792caf93fdcbd402e9d31">volatilityImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_gaussian1d_swaption_volatility_1abca5483df15817e17e06fea900e0c5a6">volatilityImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_spreaded_swaption_volatility_1af25e1ef33741d66c62b8defedefd5a00">volatilityImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_swaption_volatility_cube_1a4440386b7dfb12f435fbb0f795d54326">volatilityImpl</reimplementedby>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>optionDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>swapTenor</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="205" column="28" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" bodystart="464" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1ac4121eede499d7014d78e682d7cc7671" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
        <definition>virtual Volatility QuantLib::SwaptionVolatilityStructure::volatilityImpl</definition>
        <argsstring>(Time optionTime, Time swapLength, Rate strike) const =0</argsstring>
        <name>volatilityImpl</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::volatilityImpl</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_constant_swaption_volatility_1a3b6810b5cf5e7a77e5c5098c0f1e69eb">volatilityImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_gaussian1d_swaption_volatility_1a536d01b7f1f8b25bcf03a0d6cb48a87a">volatilityImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_spreaded_swaption_volatility_1a24631bec1f18a5a2dc8051251d061ba1">volatilityImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_swaption_volatility_cube_1a3348e590a787e1678e5e63cae082edb1">volatilityImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_swaption_volatility_matrix_1a2216467f0f46d947d0753d0ff875b6d8">volatilityImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_tenor_swaption_v_t_s_1a0e1f01651bf89348dee7d0b4b2949ab2">volatilityImpl</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>optionTime</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>swapLength</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="208" column="28"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1a94801eee69f2e79f6d7fb18de689d7c3" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SwaptionVolatilityStructure::shiftImpl</definition>
        <argsstring>(const Date &amp;optionDate, const Period &amp;swapTenor) const</argsstring>
        <name>shiftImpl</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::shiftImpl</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>optionDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>swapTenor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="211" column="22" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" bodystart="473" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1af58b9ac27bc0f2e87dd7c68c6e5f7709" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SwaptionVolatilityStructure::shiftImpl</definition>
        <argsstring>(Time optionTime, Time swapLength) const</argsstring>
        <name>shiftImpl</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::shiftImpl</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_constant_swaption_volatility_1a05233a4c0806d444e12a82c182acdaa5">shiftImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_spreaded_swaption_volatility_1ad3b9cb1b8e99c598b7923c38239f04b0">shiftImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_swaption_volatility_cube_1a73fb306943c73b2f0c2ae3e2f64c5b8b">shiftImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_swaption_volatility_matrix_1a3370241d99c3298374f75a3e461825f7">shiftImpl</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>optionTime</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>swapLength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="213" column="22" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" bodystart="478" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1a773ed22468d6ae913ae53e9dcdb22a8a" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::SwaptionVolatilityStructure::checkSwapTenor</definition>
        <argsstring>(const Period &amp;swapTenor, bool extrapolate) const</argsstring>
        <name>checkSwapTenor</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::checkSwapTenor</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>swapTenor</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="214" column="14" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.cpp" bodystart="70" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swaption_volatility_structure_1a10021651c36f97ca48b100303f0c8870" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::SwaptionVolatilityStructure::checkSwapTenor</definition>
        <argsstring>(Time swapLength, bool extrapolate) const</argsstring>
        <name>checkSwapTenor</name>
        <qualifiedname>QuantLib::SwaptionVolatilityStructure::checkSwapTenor</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>swapLength</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="216" column="14" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.cpp" bodystart="80" bodyend="88"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Swaption-volatility structure </para>
    </briefdescription>
    <detaileddescription>
<para>This abstract class defines the interface of concrete swaption volatility structures which will be derived from this one. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="7">
        <label>QuantLib::ConstantSwaptionVolatility</label>
        <link refid="class_quant_lib_1_1_constant_swaption_volatility"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::Extrapolator</label>
        <link refid="class_quant_lib_1_1_extrapolator"/>
      </node>
      <node id="8">
        <label>QuantLib::Gaussian1dSwaptionVolatility</label>
        <link refid="class_quant_lib_1_1_gaussian1d_swaption_volatility"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>QuantLib::InterpolatedSwaptionVolatilityCube</label>
        <link refid="class_quant_lib_1_1_interpolated_swaption_volatility_cube"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="9">
        <label>QuantLib::SpreadedSwaptionVolatility</label>
        <link refid="class_quant_lib_1_1_spreaded_swaption_volatility"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>QuantLib::SwaptionVolatilityCube</label>
        <link refid="class_quant_lib_1_1_swaption_volatility_cube"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QuantLib::SwaptionVolatilityDiscrete</label>
        <link refid="class_quant_lib_1_1_swaption_volatility_discrete"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>QuantLib::SwaptionVolatilityMatrix</label>
        <link refid="class_quant_lib_1_1_swaption_volatility_matrix"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::SwaptionVolatilityStructure</label>
        <link refid="class_quant_lib_1_1_swaption_volatility_structure"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>QuantLib::TenorSwaptionVTS</label>
        <link refid="class_quant_lib_1_1_tenor_swaption_v_t_s"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::TermStructure</label>
        <link refid="class_quant_lib_1_1_term_structure"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::VolatilityTermStructure</label>
        <link refid="class_quant_lib_1_1_volatility_term_structure"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>QuantLib::XabrSwaptionVolatilityCube&lt; Model &gt;</label>
        <link refid="class_quant_lib_1_1_xabr_swaption_volatility_cube"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>QuantLib::XabrSwaptionVolatilityCube&lt; SwaptionVolCubeNoArbSabrModel &gt;</label>
        <link refid="class_quant_lib_1_1_xabr_swaption_volatility_cube"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>QuantLib::XabrSwaptionVolatilityCube&lt; SwaptionVolCubeSabrModel &gt;</label>
        <link refid="class_quant_lib_1_1_xabr_swaption_volatility_cube"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7">
        <label>QuantLib::Calendar</label>
        <link refid="class_quant_lib_1_1_calendar"/>
      </node>
      <node id="6">
        <label>QuantLib::Extrapolator</label>
        <link refid="class_quant_lib_1_1_extrapolator"/>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="1">
        <label>QuantLib::SwaptionVolatilityStructure</label>
        <link refid="class_quant_lib_1_1_swaption_volatility_structure"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::TermStructure</label>
        <link refid="class_quant_lib_1_1_term_structure"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>calendar_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::VolatilityTermStructure</label>
        <link refid="class_quant_lib_1_1_volatility_term_structure"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" line="41" column="5" bodyfile="ql/termstructures/volatility/swaption/swaptionvolstructure.hpp" bodystart="41" bodyend="218"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_extrapolator_1ab3936a9b5b5c163d3e511437c16c1d9e" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>allowsExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1aad619f657a057cd2c4e7acf0fab86dd3" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>blackVariance</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1a97f805e38edf4b2cf92415add4addc3b" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>blackVariance</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1a5ab74b07cc458bfd966711d827ddefe4" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>blackVariance</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1a3ef8a10af55f71e1e4ec0e618a5b0416" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>blackVariance</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1a267a1a05f29d45518e063912c2a4c463" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>blackVariance</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1a4282c33cffab4b0c508fdff2735c70f4" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>blackVariance</name></member>
      <member refid="class_quant_lib_1_1_volatility_term_structure_1aaa1bad703d789d96a86c0d09f5bd0c05" prot="public" virt="virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>businessDayConvention</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac4ea5cbce495c9a47a44eeaedf7a9d45" prot="public" virt="virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>calendar</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a0a09e3fa8cdfbc9aa9685da0c35ccb90" prot="protected" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>calendar_</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1aa7297742ffbeeb0c7611f90a0f7d15bf" prot="protected" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>checkRange</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a4d246bcb13b7518a75088bf7cf01ea75" prot="protected" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>checkRange</name></member>
      <member refid="class_quant_lib_1_1_volatility_term_structure_1aad02ea6fe4bf30c662adaf01a46d5537" prot="protected" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>checkStrike</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1a773ed22468d6ae913ae53e9dcdb22a8a" prot="protected" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>checkSwapTenor</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1a10021651c36f97ca48b100303f0c8870" prot="protected" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>checkSwapTenor</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac03e725e4e0685b209caa626b00924ca" prot="public" virt="virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>dayCounter</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1a6af69387d5cae0fe84d6a0c858406218" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>disableExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1a5f7b5650a44d6c63095bc739470c8bfb" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>enableExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1af1c3adaccdfaf07d3d07edaa234444f7" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>Extrapolator</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ae9af756bbddc15962711f77f514f08fa" prot="public" virt="pure-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>maxDate</name></member>
      <member refid="class_quant_lib_1_1_volatility_term_structure_1a31f164f3562124b7de3ea6caf0af08a9" prot="public" virt="pure-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>maxStrike</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1a9988a4f4a437c976adfcb4861532352a" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>maxSwapLength</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1aed33f007e1e4ebe505beb7ab4737a6b9" prot="public" virt="pure-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>maxSwapTenor</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a2f820c32e198e1046d97ca3dd9a807c5" prot="public" virt="virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>maxTime</name></member>
      <member refid="class_quant_lib_1_1_volatility_term_structure_1a71a5c8f0fb8d9d478126f79d975cb26f" prot="public" virt="pure-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>minStrike</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a8319e5c2c37b09a825d61210c9cb8e2a" prot="protected" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>moving_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::QuantLib::Observable::"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_volatility_term_structure_1a22aae9cc9f2deb51962cc13092de98b5" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>optionDateFromTenor</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1accbf3d4af41db0333d456eb5616c4e1e" prot="public" virt="virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>referenceDate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1abeb79eefda70a9414f206ca9e70ced0f" prot="public" virt="virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>settlementDays</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1a8479ca4d2aa0fd1a267627a6287b1b8e" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>shift</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1a86fec0f6153bc0ec3cbac9011368e7e6" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>shift</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1a167336df1723692ba1eb44a8f58bb28c" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>shift</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1a0d4e22185eecf76928429763b85bd081" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>shift</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1a810c6def11f7a114acb64c07bad757a3" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>shift</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1a94bac4c4352503cd8105164f0b42fd62" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>shift</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1a94801eee69f2e79f6d7fb18de689d7c3" prot="protected" virt="virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>shiftImpl</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1af58b9ac27bc0f2e87dd7c68c6e5f7709" prot="protected" virt="virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>shiftImpl</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1aa4f06f9248db36f2a049a7e7504051fe" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>smileSection</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1a05a765784ea58eb10a1bfa60fbce157b" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>smileSection</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1a040df128aa83d1334e9ba0a8c326ab3a" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>smileSection</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1a3f49a37fcc191910a650feaf87c9be3a" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>smileSection</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1a24a667fd5d98c387f645493e298e3c0b" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>smileSection</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1a9b52fc36e51094a8db9984935c83a7e8" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>smileSection</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1aea09cc29a3021eaf2258a299fbe77c4f" prot="protected" virt="virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>smileSectionImpl</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1a764cdce196b548e55e2ad5eb590e03cb" prot="protected" virt="pure-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>smileSectionImpl</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1a1fbd0d2ce647f1c95a042aeceff4f5e4" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>swapLength</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1a7a35582639abbe4a65e0225fb35f484b" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>swapLength</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1abd6d1f07a9aae40747af8ec3b834ab3b" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>SwaptionVolatilityStructure</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1ae35d59fd3747d789235ae1d804a52fa7" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>SwaptionVolatilityStructure</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1a703ae26172d027d9ae14024acd0ed45c" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>SwaptionVolatilityStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac8365997e6d41134b4e0998fe6b4e949" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>TermStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a95764a49e0368b653eadbe619d9ef334" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>TermStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1aab73d2acafdc8fbdf9336e7084bd88a1" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>TermStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac8da61eb0f06ae07a35e8e4bbe7146b0" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>timeFromReference</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a016528f1fe9cabca6472d8f4776351e2" prot="public" virt="virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a2fcf1c78e57786ad5c123f52dbf619e8" prot="protected" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>updated_</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1a7bc429391cc8c53f944f19322b5ef507" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>volatility</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1aebba981315101163d15bebd422ee1d56" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>volatility</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1a886e28ff9dfcee3595a606d533126fda" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>volatility</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1a5e7d30990ea15370fdd05dadc05a9a94" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>volatility</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1a8547d16488e9cd23fe2a80e293656045" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>volatility</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1abbb9e37e45655ac0a8bd429b7dfe791b" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>volatility</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1a113cc40ddd67938aa9741212acfce0f5" prot="protected" virt="virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>volatilityImpl</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1ac4121eede499d7014d78e682d7cc7671" prot="protected" virt="pure-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>volatilityImpl</name></member>
      <member refid="class_quant_lib_1_1_volatility_term_structure_1adfc4d4619ecf74dd849ba4fdf0b36d22" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>VolatilityTermStructure</name></member>
      <member refid="class_quant_lib_1_1_volatility_term_structure_1aa43b8722cce970ee126cc5907026f860" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>VolatilityTermStructure</name></member>
      <member refid="class_quant_lib_1_1_volatility_term_structure_1a10cfe1d03a1cfd642e7608d019f2cafc" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>VolatilityTermStructure</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1ae5278ecbe11814a32f61f4f65a0ce1a5" prot="public" virt="virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>volatilityType</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1af0ca0156436ffbce159183198eb27e2e" prot="public" virt="virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>~Extrapolator</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_swaption_volatility_structure_1aad2b18f708410e363b1c6e7c56d90be6" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>~SwaptionVolatilityStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ad202ddcc14fc4a6c16686d6164d7b36c" prot="public" virt="non-virtual"><scope>QuantLib::SwaptionVolatilityStructure</scope><name>~TermStructure</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

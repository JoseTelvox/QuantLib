<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_quote" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::Quote</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_observable" prot="public" virt="virtual">QuantLib::Observable</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_composite_quote" prot="public" virt="non-virtual">QuantLib::CompositeQuote&lt; BinaryFunction &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_delta_vol_quote" prot="public" virt="non-virtual">QuantLib::DeltaVolQuote</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_derived_quote" prot="public" virt="non-virtual">QuantLib::DerivedQuote&lt; UnaryFunction &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_eurodollar_futures_implied_std_dev_quote" prot="public" virt="non-virtual">QuantLib::EurodollarFuturesImpliedStdDevQuote</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_forward_swap_quote" prot="public" virt="non-virtual">QuantLib::ForwardSwapQuote</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_forward_value_quote" prot="public" virt="non-virtual">QuantLib::ForwardValueQuote</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_futures_conv_adjustment_quote" prot="public" virt="non-virtual">QuantLib::FuturesConvAdjustmentQuote</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_implied_std_dev_quote" prot="public" virt="non-virtual">QuantLib::ImpliedStdDevQuote</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_last_fixing_quote" prot="public" virt="non-virtual">QuantLib::LastFixingQuote</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_recovery_rate_quote" prot="public" virt="non-virtual">QuantLib::RecoveryRateQuote</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_rendistato_equivalent_swap_length_quote" prot="public" virt="non-virtual">QuantLib::RendistatoEquivalentSwapLengthQuote</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_rendistato_equivalent_swap_spread_quote" prot="public" virt="non-virtual">QuantLib::RendistatoEquivalentSwapSpreadQuote</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_simple_quote" prot="public" virt="non-virtual">QuantLib::SimpleQuote</derivedcompoundref>
    <includes refid="quote_8hpp" local="no">quote.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_quote_1a0433957cb1683b2ca329ef56bd741143" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Quote::~Quote</definition>
        <argsstring>() override=default</argsstring>
        <name>~Quote</name>
        <qualifiedname>QuantLib::Quote::~Quote</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quote.hpp" line="39" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_quote_1a25f93d1c25434ae28f20f9416b497ccb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::Quote::value</definition>
        <argsstring>() const =0</argsstring>
        <name>value</name>
        <qualifiedname>QuantLib::Quote::value</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_composite_quote_1a8d2ee293350e4f394d60781476ad7f1b">value</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_delta_vol_quote_1a6053a723956b3e04853584ecd4a8bca6">value</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_derived_quote_1a39b266b657d14bfd0e35655381b853c4">value</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_eurodollar_futures_implied_std_dev_quote_1a39966fdc4c8b6e1e2c8e3cb24768c00a">value</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_forward_swap_quote_1ad89d3fd83193a3f65ccdf08318239bbd">value</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_forward_value_quote_1a1b052a5b66fb03a706a62824fcd7677f">value</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_futures_conv_adjustment_quote_1a5a0c5227a3aae491af7b9639741f2313">value</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_implied_std_dev_quote_1acf202bebfe9f30cf9b7fa214860f514a">value</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_last_fixing_quote_1a224367b90377b5a92a2713c0c27c1525">value</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_recovery_rate_quote_1ad79ba34ef57c6400fcd5abda39551140">value</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_rendistato_equivalent_swap_length_quote_1a731544c9bc38eb46792fe7285055ad6e">value</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_rendistato_equivalent_swap_spread_quote_1a4ddba667d631cf87e983ff041a22a1e4">value</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_simple_quote_1ad804b8ec07ce9d114f20fbcd093b2730">value</reimplementedby>
        <briefdescription>
<para>returns the current value </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quote.hpp" line="41" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_quote_1a9a340a974b8403b9385867b62bb8ae2d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool QuantLib::Quote::isValid</definition>
        <argsstring>() const =0</argsstring>
        <name>isValid</name>
        <qualifiedname>QuantLib::Quote::isValid</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_composite_quote_1ad862f91acb53fdd40b62b42a1fb60361">isValid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_delta_vol_quote_1a441d8a275646af27eb1237e0a5c1da06">isValid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_derived_quote_1a944cc698a915fc9b5342163c479c60da">isValid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_eurodollar_futures_implied_std_dev_quote_1a9ab6afd492b2d02e758b4f9dc337f145">isValid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_forward_swap_quote_1a375187292ca7157c49361901d31bfd44">isValid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_forward_value_quote_1ac0117f44c7f1cfe8e849e9b545b7cbdc">isValid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_futures_conv_adjustment_quote_1a3f39d11e2f9a43c258664081b40a10d4">isValid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_implied_std_dev_quote_1a78bfc0471486606d03c3238f81672694">isValid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_last_fixing_quote_1ace6ee8b0f1276d16c13ef03730394a39">isValid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_recovery_rate_quote_1a8091574023388fb651dad2e236a2e289">isValid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_rendistato_equivalent_swap_length_quote_1a45c380228ca2200ae8e8d643b45e7177">isValid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_rendistato_equivalent_swap_spread_quote_1a586f83952c00f5b9049ec491841850fd">isValid</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_simple_quote_1a14ad2f936e4e327e31f6090cc09db2ea">isValid</reimplementedby>
        <briefdescription>
<para>returns true if the <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> holds a valid value </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quote.hpp" line="43" column="22"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>purely virtual base class for market observables </para>
    </briefdescription>
    <detaileddescription>
<para><xrefsect id="test_1_test000161"><xreftitle>Test</xreftitle><xrefdescription><para>the observability of class instances is tested. </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>QuantLib::CompositeQuote&lt; BinaryFunction &gt;</label>
        <link refid="class_quant_lib_1_1_composite_quote"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::DeltaVolQuote</label>
        <link refid="class_quant_lib_1_1_delta_vol_quote"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::DerivedQuote&lt; UnaryFunction &gt;</label>
        <link refid="class_quant_lib_1_1_derived_quote"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::EurodollarFuturesImpliedStdDevQuote</label>
        <link refid="class_quant_lib_1_1_eurodollar_futures_implied_std_dev_quote"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::ForwardSwapQuote</label>
        <link refid="class_quant_lib_1_1_forward_swap_quote"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::ForwardValueQuote</label>
        <link refid="class_quant_lib_1_1_forward_value_quote"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QuantLib::FuturesConvAdjustmentQuote</label>
        <link refid="class_quant_lib_1_1_futures_conv_adjustment_quote"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QuantLib::ImpliedStdDevQuote</label>
        <link refid="class_quant_lib_1_1_implied_std_dev_quote"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>QuantLib::LastFixingQuote</label>
        <link refid="class_quant_lib_1_1_last_fixing_quote"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="1">
        <label>QuantLib::Quote</label>
        <link refid="class_quant_lib_1_1_quote"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>QuantLib::RecoveryRateQuote</label>
        <link refid="class_quant_lib_1_1_recovery_rate_quote"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>QuantLib::RendistatoEquivalentSwapLengthQuote</label>
        <link refid="class_quant_lib_1_1_rendistato_equivalent_swap_length_quote"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>QuantLib::RendistatoEquivalentSwapSpreadQuote</label>
        <link refid="class_quant_lib_1_1_rendistato_equivalent_swap_spread_quote"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>QuantLib::SimpleQuote</label>
        <link refid="class_quant_lib_1_1_simple_quote"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="1">
        <label>QuantLib::Quote</label>
        <link refid="class_quant_lib_1_1_quote"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/quote.hpp" line="37" column="5" bodyfile="ql/quote.hpp" bodystart="37" bodyend="44"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_quote_1a9a340a974b8403b9385867b62bb8ae2d" prot="public" virt="pure-virtual"><scope>QuantLib::Quote</scope><name>isValid</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::Quote</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::Quote</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::Quote</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::Quote</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual"><scope>QuantLib::Quote</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual"><scope>QuantLib::Quote</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_quote_1a25f93d1c25434ae28f20f9416b497ccb" prot="public" virt="pure-virtual"><scope>QuantLib::Quote</scope><name>value</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::Quote</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_quote_1a0433957cb1683b2ca329ef56bd741143" prot="public" virt="non-virtual"><scope>QuantLib::Quote</scope><name>~Quote</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

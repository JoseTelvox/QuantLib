<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_inverse_cumulative_rsg" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::InverseCumulativeRsg</compoundname>
    <includes refid="inversecumulativersg_8hpp" local="no">inversecumulativersg.hpp</includes>
    <templateparamlist>
      <param>
        <type>class USG</type>
      </param>
      <param>
        <type>class IC</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_quant_lib_1_1_inverse_cumulative_rsg_1ae574a70fcadd4d66eecdc16e7a372273" prot="public" static="no">
        <type><ref refid="struct_quant_lib_1_1_sample" kindref="compound">Sample</ref>&lt; std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &gt;</type>
        <definition>typedef Sample&lt;std::vector&lt;Real&gt; &gt; QuantLib::InverseCumulativeRsg&lt; USG, IC &gt;::sample_type</definition>
        <argsstring></argsstring>
        <name>sample_type</name>
        <qualifiedname>QuantLib::InverseCumulativeRsg::sample_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/inversecumulativersg.hpp" line="59" column="24" bodyfile="ql/math/randomnumbers/inversecumulativersg.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_inverse_cumulative_rsg_1a280d8d42f4d5a8dfb70901aa846a46ee" prot="private" static="no" mutable="no">
        <type>USG</type>
        <definition>USG QuantLib::InverseCumulativeRsg&lt; USG, IC &gt;::uniformSequenceGenerator_</definition>
        <argsstring></argsstring>
        <name>uniformSequenceGenerator_</name>
        <qualifiedname>QuantLib::InverseCumulativeRsg::uniformSequenceGenerator_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/inversecumulativersg.hpp" line="67" column="13" bodyfile="ql/math/randomnumbers/inversecumulativersg.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_inverse_cumulative_rsg_1ad0870ac361dff50ab884381ae7cf5e32" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::InverseCumulativeRsg&lt; USG, IC &gt;::dimension_</definition>
        <argsstring></argsstring>
        <name>dimension_</name>
        <qualifiedname>QuantLib::InverseCumulativeRsg::dimension_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/inversecumulativersg.hpp" line="68" column="14" bodyfile="ql/math/randomnumbers/inversecumulativersg.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_inverse_cumulative_rsg_1a78a21d8b168c98cf7d101f1bdf3b6804" prot="private" static="no" mutable="yes">
        <type><ref refid="struct_quant_lib_1_1_sample" kindref="compound">sample_type</ref></type>
        <definition>sample_type QuantLib::InverseCumulativeRsg&lt; USG, IC &gt;::x_</definition>
        <argsstring></argsstring>
        <name>x_</name>
        <qualifiedname>QuantLib::InverseCumulativeRsg::x_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/inversecumulativersg.hpp" line="69" column="29" bodyfile="ql/math/randomnumbers/inversecumulativersg.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_inverse_cumulative_rsg_1aa831b62bde3af75adc36c34c8fda86f5" prot="private" static="no" mutable="no">
        <type>IC</type>
        <definition>IC QuantLib::InverseCumulativeRsg&lt; USG, IC &gt;::ICD_</definition>
        <argsstring></argsstring>
        <name>ICD_</name>
        <qualifiedname>QuantLib::InverseCumulativeRsg::ICD_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/inversecumulativersg.hpp" line="70" column="12" bodyfile="ql/math/randomnumbers/inversecumulativersg.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_inverse_cumulative_rsg_1a705ec2e50ed4154df079b2ba7b8f9c87" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::InverseCumulativeRsg&lt; USG, IC &gt;::InverseCumulativeRsg</definition>
        <argsstring>(USG uniformSequenceGenerator)</argsstring>
        <name>InverseCumulativeRsg</name>
        <qualifiedname>QuantLib::InverseCumulativeRsg::InverseCumulativeRsg</qualifiedname>
        <param>
          <type>USG</type>
          <declname>uniformSequenceGenerator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/inversecumulativersg.hpp" line="60" column="18" bodyfile="ql/math/randomnumbers/inversecumulativersg.hpp" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inverse_cumulative_rsg_1a5537c77a596cf4e9ed27426cee8ffcec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::InverseCumulativeRsg&lt; USG, IC &gt;::InverseCumulativeRsg</definition>
        <argsstring>(USG uniformSequenceGenerator, const IC &amp;inverseCumulative)</argsstring>
        <name>InverseCumulativeRsg</name>
        <qualifiedname>QuantLib::InverseCumulativeRsg::InverseCumulativeRsg</qualifiedname>
        <param>
          <type>USG</type>
          <declname>uniformSequenceGenerator</declname>
        </param>
        <param>
          <type>const IC &amp;</type>
          <declname>inverseCumulative</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/inversecumulativersg.hpp" line="61" column="9" bodyfile="ql/math/randomnumbers/inversecumulativersg.hpp" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inverse_cumulative_rsg_1ae3137e7b3273ef8d362e6e240d004ce4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="struct_quant_lib_1_1_sample" kindref="compound">sample_type</ref> &amp;</type>
        <definition>const InverseCumulativeRsg&lt; USG, IC &gt;::sample_type &amp; QuantLib::InverseCumulativeRsg&lt; USG, IC &gt;::nextSequence</definition>
        <argsstring>() const</argsstring>
        <name>nextSequence</name>
        <qualifiedname>QuantLib::InverseCumulativeRsg::nextSequence</qualifiedname>
        <briefdescription>
<para>returns next sample from the inverse cumulative distribution </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/inversecumulativersg.hpp" line="63" column="27" bodyfile="ql/math/randomnumbers/inversecumulativersg.hpp" bodystart="85" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inverse_cumulative_rsg_1aa2e3dd3bc157aab2932fc655ef7bcc59" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="struct_quant_lib_1_1_sample" kindref="compound">sample_type</ref> &amp;</type>
        <definition>const sample_type &amp; QuantLib::InverseCumulativeRsg&lt; USG, IC &gt;::lastSequence</definition>
        <argsstring>() const</argsstring>
        <name>lastSequence</name>
        <qualifiedname>QuantLib::InverseCumulativeRsg::lastSequence</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/inversecumulativersg.hpp" line="64" column="27" bodyfile="ql/math/randomnumbers/inversecumulativersg.hpp" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inverse_cumulative_rsg_1a7cb777110f29481f76f6e12d6062ea2f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::InverseCumulativeRsg&lt; USG, IC &gt;::dimension</definition>
        <argsstring>() const</argsstring>
        <name>dimension</name>
        <qualifiedname>QuantLib::InverseCumulativeRsg::dimension</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/inversecumulativersg.hpp" line="65" column="14" bodyfile="ql/math/randomnumbers/inversecumulativersg.hpp" bodystart="65" bodyend="65"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Inverse cumulative random sequence generator. </para>
    </briefdescription>
    <detaileddescription>
<para>It uses a sequence of uniform deviate in (0, 1) as the source of cumulative distribution values. Then an inverse cumulative distribution is used to calculate the distribution deviate.</para>
<para>The uniform deviate sequence is supplied by USG.</para>
<para>Class USG must implement the following interface: <programlisting><codeline><highlight class="normal">USG::sample_type<sp/>USG::nextSequence()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>USG::dimension()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
</programlisting></para>
<para>The inverse cumulative distribution is supplied by IC.</para>
<para>Class IC must implement the following interface: <programlisting><codeline><highlight class="normal">IC::IC();</highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>IC::operator()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <location file="ql/math/randomnumbers/inversecumulativersg.hpp" line="57" column="5" bodyfile="ql/math/randomnumbers/inversecumulativersg.hpp" bodystart="57" bodyend="71"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_inverse_cumulative_rsg_1a7cb777110f29481f76f6e12d6062ea2f" prot="public" virt="non-virtual"><scope>QuantLib::InverseCumulativeRsg</scope><name>dimension</name></member>
      <member refid="class_quant_lib_1_1_inverse_cumulative_rsg_1ad0870ac361dff50ab884381ae7cf5e32" prot="private" virt="non-virtual"><scope>QuantLib::InverseCumulativeRsg</scope><name>dimension_</name></member>
      <member refid="class_quant_lib_1_1_inverse_cumulative_rsg_1aa831b62bde3af75adc36c34c8fda86f5" prot="private" virt="non-virtual"><scope>QuantLib::InverseCumulativeRsg</scope><name>ICD_</name></member>
      <member refid="class_quant_lib_1_1_inverse_cumulative_rsg_1a705ec2e50ed4154df079b2ba7b8f9c87" prot="public" virt="non-virtual"><scope>QuantLib::InverseCumulativeRsg</scope><name>InverseCumulativeRsg</name></member>
      <member refid="class_quant_lib_1_1_inverse_cumulative_rsg_1a5537c77a596cf4e9ed27426cee8ffcec" prot="public" virt="non-virtual"><scope>QuantLib::InverseCumulativeRsg</scope><name>InverseCumulativeRsg</name></member>
      <member refid="class_quant_lib_1_1_inverse_cumulative_rsg_1aa2e3dd3bc157aab2932fc655ef7bcc59" prot="public" virt="non-virtual"><scope>QuantLib::InverseCumulativeRsg</scope><name>lastSequence</name></member>
      <member refid="class_quant_lib_1_1_inverse_cumulative_rsg_1ae3137e7b3273ef8d362e6e240d004ce4" prot="public" virt="non-virtual"><scope>QuantLib::InverseCumulativeRsg</scope><name>nextSequence</name></member>
      <member refid="class_quant_lib_1_1_inverse_cumulative_rsg_1ae574a70fcadd4d66eecdc16e7a372273" prot="public" virt="non-virtual"><scope>QuantLib::InverseCumulativeRsg</scope><name>sample_type</name></member>
      <member refid="class_quant_lib_1_1_inverse_cumulative_rsg_1a280d8d42f4d5a8dfb70901aa846a46ee" prot="private" virt="non-virtual"><scope>QuantLib::InverseCumulativeRsg</scope><name>uniformSequenceGenerator_</name></member>
      <member refid="class_quant_lib_1_1_inverse_cumulative_rsg_1a78a21d8b168c98cf7d101f1bdf3b6804" prot="private" virt="non-virtual"><scope>QuantLib::InverseCumulativeRsg</scope><name>x_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

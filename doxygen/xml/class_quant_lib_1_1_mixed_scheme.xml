<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_mixed_scheme" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::MixedScheme</compoundname>
    <derivedcompoundref refid="class_quant_lib_1_1_crank_nicolson" prot="public" virt="non-virtual">QuantLib::CrankNicolson&lt; Operator &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_explicit_euler" prot="public" virt="non-virtual">QuantLib::ExplicitEuler&lt; Operator &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_implicit_euler" prot="public" virt="non-virtual">QuantLib::ImplicitEuler&lt; Operator &gt;</derivedcompoundref>
    <includes refid="mixedscheme_8hpp" local="no">mixedscheme.hpp</includes>
    <templateparamlist>
      <param>
        <type>class Operator</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_quant_lib_1_1_mixed_scheme_1a3c9e909119f67f0bf365fdf1c3345cd6" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1_operator_traits" kindref="compound">OperatorTraits</ref>&lt; Operator &gt;</type>
        <definition>typedef OperatorTraits&lt;Operator&gt; QuantLib::MixedScheme&lt; Operator &gt;::traits</definition>
        <argsstring></argsstring>
        <name>traits</name>
        <qualifiedname>QuantLib::MixedScheme::traits</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/mixedscheme.hpp" line="76" column="32" bodyfile="ql/methods/finitedifferences/mixedscheme.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_quant_lib_1_1_mixed_scheme_1afd7f852e4d8d5a47baa815ce1d4d89ea" prot="public" static="no">
        <type>traits::operator_type</type>
        <definition>typedef traits::operator_type QuantLib::MixedScheme&lt; Operator &gt;::operator_type</definition>
        <argsstring></argsstring>
        <name>operator_type</name>
        <qualifiedname>QuantLib::MixedScheme::operator_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/mixedscheme.hpp" line="77" column="48" bodyfile="ql/methods/finitedifferences/mixedscheme.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_quant_lib_1_1_mixed_scheme_1aa395b063f723b8572851306d8533fb51" prot="public" static="no">
        <type>traits::array_type</type>
        <definition>typedef traits::array_type QuantLib::MixedScheme&lt; Operator &gt;::array_type</definition>
        <argsstring></argsstring>
        <name>array_type</name>
        <qualifiedname>QuantLib::MixedScheme::array_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/mixedscheme.hpp" line="78" column="45" bodyfile="ql/methods/finitedifferences/mixedscheme.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_quant_lib_1_1_mixed_scheme_1ae87e03d5f1afce2317f40524db3e2507" prot="public" static="no">
        <type>traits::bc_set</type>
        <definition>typedef traits::bc_set QuantLib::MixedScheme&lt; Operator &gt;::bc_set</definition>
        <argsstring></argsstring>
        <name>bc_set</name>
        <qualifiedname>QuantLib::MixedScheme::bc_set</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/mixedscheme.hpp" line="79" column="41" bodyfile="ql/methods/finitedifferences/mixedscheme.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_quant_lib_1_1_mixed_scheme_1afbf0af164e387992fcaa0db85aaec542" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1_step_condition" kindref="compound">traits::condition_type</ref></type>
        <definition>typedef traits::condition_type QuantLib::MixedScheme&lt; Operator &gt;::condition_type</definition>
        <argsstring></argsstring>
        <name>condition_type</name>
        <qualifiedname>QuantLib::MixedScheme::condition_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/mixedscheme.hpp" line="80" column="49" bodyfile="ql/methods/finitedifferences/mixedscheme.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_mixed_scheme_1a5f810e4a5ff151828ed29505cf21d883" prot="protected" static="no" mutable="no">
        <type>operator_type</type>
        <definition>operator_type QuantLib::MixedScheme&lt; Operator &gt;::L_</definition>
        <argsstring></argsstring>
        <name>L_</name>
        <qualifiedname>QuantLib::MixedScheme::L_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/mixedscheme.hpp" line="95" column="23" bodyfile="ql/methods/finitedifferences/mixedscheme.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_mixed_scheme_1a9aa58d76a255c1ec21f707195ec43d32" prot="protected" static="no" mutable="no">
        <type>operator_type</type>
        <definition>operator_type QuantLib::MixedScheme&lt; Operator &gt;::I_</definition>
        <argsstring></argsstring>
        <name>I_</name>
        <qualifiedname>QuantLib::MixedScheme::I_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/mixedscheme.hpp" line="95" column="26" bodyfile="ql/methods/finitedifferences/mixedscheme.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_mixed_scheme_1a71c5d2ba8d1e04e9bf528fa043aa03d8" prot="protected" static="no" mutable="no">
        <type>operator_type</type>
        <definition>operator_type QuantLib::MixedScheme&lt; Operator &gt;::explicitPart_</definition>
        <argsstring></argsstring>
        <name>explicitPart_</name>
        <qualifiedname>QuantLib::MixedScheme::explicitPart_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/mixedscheme.hpp" line="95" column="29" bodyfile="ql/methods/finitedifferences/mixedscheme.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_mixed_scheme_1ae159fab2d306ed78f477e84e464173eb" prot="protected" static="no" mutable="no">
        <type>operator_type</type>
        <definition>operator_type QuantLib::MixedScheme&lt; Operator &gt;::implicitPart_</definition>
        <argsstring></argsstring>
        <name>implicitPart_</name>
        <qualifiedname>QuantLib::MixedScheme::implicitPart_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/mixedscheme.hpp" line="95" column="43" bodyfile="ql/methods/finitedifferences/mixedscheme.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_mixed_scheme_1a10229cd868fccab53b7d53877994ac1d" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>Time QuantLib::MixedScheme&lt; Operator &gt;::dt_</definition>
        <argsstring></argsstring>
        <name>dt_</name>
        <qualifiedname>QuantLib::MixedScheme::dt_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/mixedscheme.hpp" line="96" column="14" bodyfile="ql/methods/finitedifferences/mixedscheme.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_mixed_scheme_1a35f4375a9cccf1c4521611f84bab7424" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::MixedScheme&lt; Operator &gt;::theta_</definition>
        <argsstring></argsstring>
        <name>theta_</name>
        <qualifiedname>QuantLib::MixedScheme::theta_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/mixedscheme.hpp" line="97" column="14" bodyfile="ql/methods/finitedifferences/mixedscheme.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_mixed_scheme_1ad07e2c9ca7b76c9f26c0206e34b3a94f" prot="protected" static="no" mutable="no">
        <type>bc_set</type>
        <definition>bc_set QuantLib::MixedScheme&lt; Operator &gt;::bcs_</definition>
        <argsstring></argsstring>
        <name>bcs_</name>
        <qualifiedname>QuantLib::MixedScheme::bcs_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/mixedscheme.hpp" line="98" column="16" bodyfile="ql/methods/finitedifferences/mixedscheme.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_mixed_scheme_1ab20e48252dd17e67043c8c55b022ecb0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::MixedScheme&lt; Operator &gt;::MixedScheme</definition>
        <argsstring>(const operator_type &amp;L, Real theta, bc_set bcs)</argsstring>
        <name>MixedScheme</name>
        <qualifiedname>QuantLib::MixedScheme::MixedScheme</qualifiedname>
        <param>
          <type>const operator_type &amp;</type>
          <declname>L</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>theta</declname>
        </param>
        <param>
          <type>bc_set</type>
          <declname>bcs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/mixedscheme.hpp" line="82" column="9" bodyfile="ql/methods/finitedifferences/mixedscheme.hpp" bodystart="82" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_mixed_scheme_1a9017a4a3765ddda854e7875f7da6c8a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::MixedScheme&lt; Operator &gt;::step</definition>
        <argsstring>(array_type &amp;a, Time t)</argsstring>
        <name>step</name>
        <qualifiedname>QuantLib::MixedScheme::step</qualifiedname>
        <param>
          <type>array_type &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/mixedscheme.hpp" line="85" column="14" bodyfile="ql/methods/finitedifferences/mixedscheme.hpp" bodystart="105" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_mixed_scheme_1a635819fc8104a0698b508e672a809b17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::MixedScheme&lt; Operator &gt;::setStep</definition>
        <argsstring>(Time dt)</argsstring>
        <name>setStep</name>
        <qualifiedname>QuantLib::MixedScheme::setStep</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/mixedscheme.hpp" line="87" column="14" bodyfile="ql/methods/finitedifferences/mixedscheme.hpp" bodystart="87" bodyend="93"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Mixed (explicit/implicit) scheme for finite difference methods. </para>
    </briefdescription>
    <detaileddescription>
<para>In this implementation, the passed operator must be derived from either TimeConstantOperator or TimeDependentOperator. Also, it must implement at least the following interface:</para>
<para><programlisting><codeline><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>...<sp/>array_type;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>copy<sp/>constructor/assignment</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>(these<sp/>will<sp/>be<sp/>provided<sp/>by<sp/>the<sp/>compiler<sp/>if<sp/>none<sp/>is<sp/>defined)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">Operator(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Operator&amp;);</highlight></codeline>
<codeline><highlight class="normal">Operator&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Operator&amp;);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>inspectors</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>size();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>modifiers</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTime(<ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref><sp/>t);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>operator<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">array_type<sp/>applyTo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>array_type&amp;);</highlight></codeline>
<codeline><highlight class="normal">array_type<sp/>solveFor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>array_type&amp;);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Operator<sp/>identity(<ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>size);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>operator<sp/>algebra</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">Operator<sp/>operator*(<ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Operator&amp;);</highlight></codeline>
<codeline><highlight class="normal">Operator<sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Operator&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Operator&amp;);</highlight></codeline>
<codeline><highlight class="normal">Operator<sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Operator&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Operator&amp;);</highlight></codeline>
</programlisting></para>
<para><simplesect kind="warning"><para>The differential operator must be linear for this evolver to work.</para>
</simplesect>
<xrefsect id="todo_1_todo000057"><xreftitle>Todo</xreftitle><xrefdescription><para><itemizedlist>
<listitem><para>derive variable theta schemes</para>
</listitem><listitem><para>introduce multi time-level schemes.</para>
</listitem></itemizedlist>
</para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::CrankNicolson&lt; Operator &gt;</label>
        <link refid="class_quant_lib_1_1_crank_nicolson"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::ExplicitEuler&lt; Operator &gt;</label>
        <link refid="class_quant_lib_1_1_explicit_euler"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::ImplicitEuler&lt; Operator &gt;</label>
        <link refid="class_quant_lib_1_1_implicit_euler"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::MixedScheme&lt; Operator &gt;</label>
        <link refid="class_quant_lib_1_1_mixed_scheme"/>
      </node>
    </inheritancegraph>
    <location file="ql/methods/finitedifferences/mixedscheme.hpp" line="73" column="5" bodyfile="ql/methods/finitedifferences/mixedscheme.hpp" bodystart="73" bodyend="99"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_mixed_scheme_1aa395b063f723b8572851306d8533fb51" prot="public" virt="non-virtual"><scope>QuantLib::MixedScheme</scope><name>array_type</name></member>
      <member refid="class_quant_lib_1_1_mixed_scheme_1ae87e03d5f1afce2317f40524db3e2507" prot="public" virt="non-virtual"><scope>QuantLib::MixedScheme</scope><name>bc_set</name></member>
      <member refid="class_quant_lib_1_1_mixed_scheme_1ad07e2c9ca7b76c9f26c0206e34b3a94f" prot="protected" virt="non-virtual"><scope>QuantLib::MixedScheme</scope><name>bcs_</name></member>
      <member refid="class_quant_lib_1_1_mixed_scheme_1afbf0af164e387992fcaa0db85aaec542" prot="public" virt="non-virtual"><scope>QuantLib::MixedScheme</scope><name>condition_type</name></member>
      <member refid="class_quant_lib_1_1_mixed_scheme_1a10229cd868fccab53b7d53877994ac1d" prot="protected" virt="non-virtual"><scope>QuantLib::MixedScheme</scope><name>dt_</name></member>
      <member refid="class_quant_lib_1_1_mixed_scheme_1a71c5d2ba8d1e04e9bf528fa043aa03d8" prot="protected" virt="non-virtual"><scope>QuantLib::MixedScheme</scope><name>explicitPart_</name></member>
      <member refid="class_quant_lib_1_1_mixed_scheme_1a9aa58d76a255c1ec21f707195ec43d32" prot="protected" virt="non-virtual"><scope>QuantLib::MixedScheme</scope><name>I_</name></member>
      <member refid="class_quant_lib_1_1_mixed_scheme_1ae159fab2d306ed78f477e84e464173eb" prot="protected" virt="non-virtual"><scope>QuantLib::MixedScheme</scope><name>implicitPart_</name></member>
      <member refid="class_quant_lib_1_1_mixed_scheme_1a5f810e4a5ff151828ed29505cf21d883" prot="protected" virt="non-virtual"><scope>QuantLib::MixedScheme</scope><name>L_</name></member>
      <member refid="class_quant_lib_1_1_mixed_scheme_1ab20e48252dd17e67043c8c55b022ecb0" prot="public" virt="non-virtual"><scope>QuantLib::MixedScheme</scope><name>MixedScheme</name></member>
      <member refid="class_quant_lib_1_1_mixed_scheme_1afd7f852e4d8d5a47baa815ce1d4d89ea" prot="public" virt="non-virtual"><scope>QuantLib::MixedScheme</scope><name>operator_type</name></member>
      <member refid="class_quant_lib_1_1_mixed_scheme_1a635819fc8104a0698b508e672a809b17" prot="public" virt="non-virtual"><scope>QuantLib::MixedScheme</scope><name>setStep</name></member>
      <member refid="class_quant_lib_1_1_mixed_scheme_1a9017a4a3765ddda854e7875f7da6c8a7" prot="public" virt="non-virtual"><scope>QuantLib::MixedScheme</scope><name>step</name></member>
      <member refid="class_quant_lib_1_1_mixed_scheme_1a35f4375a9cccf1c4521611f84bab7424" prot="protected" virt="non-virtual"><scope>QuantLib::MixedScheme</scope><name>theta_</name></member>
      <member refid="class_quant_lib_1_1_mixed_scheme_1a3c9e909119f67f0bf365fdf1c3345cd6" prot="public" virt="non-virtual"><scope>QuantLib::MixedScheme</scope><name>traits</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

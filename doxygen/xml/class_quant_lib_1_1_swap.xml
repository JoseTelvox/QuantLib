<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_swap" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::Swap</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_instrument" prot="public" virt="non-virtual">QuantLib::Instrument</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_arithmetic_average_o_i_s" prot="public" virt="non-virtual">QuantLib::ArithmeticAverageOIS</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_asset_swap" prot="public" virt="non-virtual">QuantLib::AssetSwap</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_b_m_a_swap" prot="public" virt="non-virtual">QuantLib::BMASwap</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_c_p_i_swap" prot="public" virt="non-virtual">QuantLib::CPISwap</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_equity_total_return_swap" prot="public" virt="non-virtual">QuantLib::EquityTotalReturnSwap</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_fixed_vs_floating_swap" prot="public" virt="non-virtual">QuantLib::FixedVsFloatingSwap</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_float_float_swap" prot="public" virt="non-virtual">QuantLib::FloatFloatSwap</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_irregular_swap" prot="public" virt="non-virtual">QuantLib::IrregularSwap</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_nonstandard_swap" prot="public" virt="non-virtual">QuantLib::NonstandardSwap</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_year_on_year_inflation_swap" prot="public" virt="non-virtual">QuantLib::YearOnYearInflationSwap</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_zero_coupon_inflation_swap" prot="public" virt="non-virtual">QuantLib::ZeroCouponInflationSwap</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_zero_coupon_swap" prot="public" virt="non-virtual">QuantLib::ZeroCouponSwap</derivedcompoundref>
    <includes refid="swap_8hpp" local="no">swap.hpp</includes>
    <innerclass refid="class_quant_lib_1_1_swap_1_1arguments" prot="public">QuantLib::Swap::arguments</innerclass>
    <innerclass refid="class_quant_lib_1_1_swap_1_1engine" prot="public">QuantLib::Swap::engine</innerclass>
    <innerclass refid="class_quant_lib_1_1_swap_1_1results" prot="public">QuantLib::Swap::results</innerclass>
    <sectiondef kind="user-defined">
      <header>Instrument interface</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_swap_1a1ca08a7d6e5957950d40383eb4cf0b63" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a14f786c47ee979097c448d96b2defaab" kindref="member">Leg</ref> &gt;</type>
        <definition>std::vector&lt;Leg&gt; QuantLib::Swap::legs_</definition>
        <argsstring></argsstring>
        <name>legs_</name>
        <qualifiedname>QuantLib::Swap::legs_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/swap.hpp" line="133" column="21" bodyfile="ql/instruments/swap.hpp" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_swap_1a82468c93e5a364d73e164df46bd50445" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::Swap::payer_</definition>
        <argsstring></argsstring>
        <name>payer_</name>
        <qualifiedname>QuantLib::Swap::payer_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/swap.hpp" line="134" column="21" bodyfile="ql/instruments/swap.hpp" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_swap_1ac85f31b7bf3b97e6c03848c64bef33af" prot="protected" static="no" mutable="yes">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::Swap::legNPV_</definition>
        <argsstring></argsstring>
        <name>legNPV_</name>
        <qualifiedname>QuantLib::Swap::legNPV_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/swap.hpp" line="135" column="29" bodyfile="ql/instruments/swap.hpp" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_swap_1af40f759b518542c642d71cbc262cab84" prot="protected" static="no" mutable="yes">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::Swap::legBPS_</definition>
        <argsstring></argsstring>
        <name>legBPS_</name>
        <qualifiedname>QuantLib::Swap::legBPS_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/swap.hpp" line="136" column="29" bodyfile="ql/instruments/swap.hpp" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_swap_1aa235d3e00058faa863f579d9665301e4" prot="protected" static="no" mutable="yes">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a05e8e288a4bdedfe5b4e16d8cec14f1c" kindref="member">DiscountFactor</ref> &gt;</type>
        <definition>std::vector&lt;DiscountFactor&gt; QuantLib::Swap::startDiscounts_</definition>
        <argsstring></argsstring>
        <name>startDiscounts_</name>
        <qualifiedname>QuantLib::Swap::startDiscounts_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/swap.hpp" line="137" column="29" bodyfile="ql/instruments/swap.hpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_swap_1ac3b82c6fb8b5951424767b5e95e9a0b3" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a05e8e288a4bdedfe5b4e16d8cec14f1c" kindref="member">DiscountFactor</ref> &gt;</type>
        <definition>std::vector&lt;DiscountFactor&gt; QuantLib::Swap::endDiscounts_</definition>
        <argsstring></argsstring>
        <name>endDiscounts_</name>
        <qualifiedname>QuantLib::Swap::endDiscounts_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/swap.hpp" line="137" column="45" bodyfile="ql/instruments/swap.hpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_swap_1a390b5eebe9b8a8915d393465a93809ad" prot="protected" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1a05e8e288a4bdedfe5b4e16d8cec14f1c" kindref="member">DiscountFactor</ref></type>
        <definition>DiscountFactor QuantLib::Swap::npvDateDiscount_</definition>
        <argsstring></argsstring>
        <name>npvDateDiscount_</name>
        <qualifiedname>QuantLib::Swap::npvDateDiscount_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/swap.hpp" line="138" column="32" bodyfile="ql/instruments/swap.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swap_1aa8b6f838ad681344ecd604db48ea0b8e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QuantLib::Swap::isExpired</definition>
        <argsstring>() const override</argsstring>
        <name>isExpired</name>
        <qualifiedname>QuantLib::Swap::isExpired</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_instrument_1a121a2a929b179900744a58272d46aefe">isExpired</reimplements>
        <briefdescription>
<para>returns whether the instrument might have value greater than zero. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/swap.hpp" line="72" column="14" bodyfile="ql/instruments/swap.cpp" bodystart="68" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swap_1a9a021b307289cdb765e96a03b275785a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::Swap::setupArguments</definition>
        <argsstring>(PricingEngine::arguments *) const override</argsstring>
        <name>setupArguments</name>
        <qualifiedname>QuantLib::Swap::setupArguments</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_instrument_1af7344eebc48a1a361386e5c5a90a8fcc">setupArguments</reimplements>
        <reimplementedby refid="class_quant_lib_1_1_year_on_year_inflation_swap_1aac6f2505f484ede189aac4828320bd09">setupArguments</reimplementedby>
        <param>
          <type><ref refid="class_quant_lib_1_1_pricing_engine_1_1arguments" kindref="compound">PricingEngine::arguments</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>When a derived argument structure is defined for an instrument, this method should be overridden to fill it. This is mandatory in case a pricing engine is used. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/swap.hpp" line="73" column="14" bodyfile="ql/instruments/swap.cpp" bodystart="87" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swap_1a537a5ba44fe18cbed5cda31562896b67" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::Swap::fetchResults</definition>
        <argsstring>(const PricingEngine::results *) const override</argsstring>
        <name>fetchResults</name>
        <qualifiedname>QuantLib::Swap::fetchResults</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_instrument_1aebe809131db2941325d037c031bbf41b">fetchResults</reimplements>
        <reimplementedby refid="class_quant_lib_1_1_year_on_year_inflation_swap_1afa2ef9e3161aad05d1e360ba06fce044">fetchResults</reimplementedby>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_pricing_engine_1_1results" kindref="compound">PricingEngine::results</ref> *</type>
          <defname>r</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>When a derived result structure is defined for an instrument, this method should be overridden to read from it. This is mandatory in case a pricing engine is used. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/swap.hpp" line="74" column="14" bodyfile="ql/instruments/swap.cpp" bodystart="95" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swap_1aece293c8f03c150e794b525216f6bd18" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::Swap::setupExpired</definition>
        <argsstring>() const override</argsstring>
        <name>setupExpired</name>
        <qualifiedname>QuantLib::Swap::setupExpired</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_instrument_1a73d90597fcd3ff52a8aed674393ab574">setupExpired</reimplements>
        <reimplementedby refid="class_quant_lib_1_1_year_on_year_inflation_swap_1afe595e64761c2f8aa91b07b84c1e1dc5">setupExpired</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must leave the instrument in a consistent state when the expiration condition is met. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/swap.hpp" line="130" column="14" bodyfile="ql/instruments/swap.cpp" bodystart="78" bodyend="85"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Constructors</header>
      <memberdef kind="function" id="class_quant_lib_1_1_swap_1a88c4221d6c0156759c5e84c3188459c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Swap::Swap</definition>
        <argsstring>(const Leg &amp;firstLeg, const Leg &amp;secondLeg)</argsstring>
        <name>Swap</name>
        <qualifiedname>QuantLib::Swap::Swap</qualifiedname>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a14f786c47ee979097c448d96b2defaab" kindref="member">Leg</ref> &amp;</type>
          <declname>firstLeg</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a14f786c47ee979097c448d96b2defaab" kindref="member">Leg</ref> &amp;</type>
          <declname>secondLeg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The cash flows belonging to the first leg are paid; the ones belonging to the second leg are received. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/swap.hpp" line="60" column="9" bodyfile="ql/instruments/swap.cpp" bodystart="30" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swap_1a546a1d0746c86ad1fed70a0904b18024" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Swap::Swap</definition>
        <argsstring>(const std::vector&lt; Leg &gt; &amp;legs, const std::vector&lt; bool &gt; &amp;payer)</argsstring>
        <name>Swap</name>
        <qualifiedname>QuantLib::Swap::Swap</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a14f786c47ee979097c448d96b2defaab" kindref="member">Leg</ref> &gt; &amp;</type>
          <declname>legs</declname>
        </param>
        <param>
          <type>const std::vector&lt; bool &gt; &amp;</type>
          <declname>payer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Multi leg constructor. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/swap.hpp" line="63" column="9" bodyfile="ql/instruments/swap.cpp" bodystart="46" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swap_1a953a237540a310c121aebbf8b4f7621e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Swap::Swap</definition>
        <argsstring>(Size legs)</argsstring>
        <name>Swap</name>
        <qualifiedname>QuantLib::Swap::Swap</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>legs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This constructor can be used by derived classes that will build their legs themselves. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/swap.hpp" line="126" column="9" bodyfile="ql/instruments/swap.cpp" bodystart="62" bodyend="66"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Observable interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_swap_1a6e033a19eb0f2770eefb8b06912b3abe" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::Swap::deepUpdate</definition>
        <argsstring>() override</argsstring>
        <name>deepUpdate</name>
        <qualifiedname>QuantLib::Swap::deepUpdate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183">deepUpdate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method allows to explicitly update the instance itself and nested observers. If notifications are disabled a call to this method ensures an update of such nested observers. It should be implemented in derived classes whenever applicable </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/swap.hpp" line="68" column="14" bodyfile="ql/instruments/swap.cpp" bodystart="162" bodyend="169"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Additional interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_swap_1aed6ec56ad5e15f7de107e98fb1526b66" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::Swap::numberOfLegs</definition>
        <argsstring>() const</argsstring>
        <name>numberOfLegs</name>
        <qualifiedname>QuantLib::Swap::numberOfLegs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/swap.hpp" line="78" column="14" bodyfile="ql/instruments/swap.cpp" bodystart="142" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swap_1a153af8a79c61fda7e68e65fee4817e35" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a14f786c47ee979097c448d96b2defaab" kindref="member">Leg</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; Leg &gt; &amp; QuantLib::Swap::legs</definition>
        <argsstring>() const</argsstring>
        <name>legs</name>
        <qualifiedname>QuantLib::Swap::legs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/swap.hpp" line="79" column="27" bodyfile="ql/instruments/swap.cpp" bodystart="144" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swap_1ae4df409ff659d19c6c76347d0d92c47b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::Swap::startDate</definition>
        <argsstring>() const</argsstring>
        <name>startDate</name>
        <qualifiedname>QuantLib::Swap::startDate</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_zero_coupon_inflation_swap_1af564ab1cfa390ea0479086110204ae8a">startDate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_zero_coupon_swap_1a3c9ca07ad457e24e4e918402b9478893">startDate</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/swap.hpp" line="80" column="22" bodyfile="ql/instruments/swap.cpp" bodystart="146" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swap_1a0a9d27adbab145e513399a18852e4d4f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::Swap::maturityDate</definition>
        <argsstring>() const</argsstring>
        <name>maturityDate</name>
        <qualifiedname>QuantLib::Swap::maturityDate</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_zero_coupon_inflation_swap_1af912f6538fff06bf1222cb487dc5e19f">maturityDate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_zero_coupon_swap_1a6724f7b5fe2850acffa5d3d0976f27c0">maturityDate</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/swap.hpp" line="81" column="22" bodyfile="ql/instruments/swap.cpp" bodystart="154" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swap_1a79494447be4eebf5caf0f0940a9b204f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Swap::legBPS</definition>
        <argsstring>(Size j) const</argsstring>
        <name>legBPS</name>
        <qualifiedname>QuantLib::Swap::legBPS</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/swap.hpp" line="82" column="14" bodyfile="ql/instruments/swap.hpp" bodystart="82" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swap_1af1ef52511fbca1b23ffddf978f678d98" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Swap::legNPV</definition>
        <argsstring>(Size j) const</argsstring>
        <name>legNPV</name>
        <qualifiedname>QuantLib::Swap::legNPV</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/swap.hpp" line="88" column="14" bodyfile="ql/instruments/swap.hpp" bodystart="88" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swap_1a9a138527c286814c9dba09b3242bbda2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a05e8e288a4bdedfe5b4e16d8cec14f1c" kindref="member">DiscountFactor</ref></type>
        <definition>DiscountFactor QuantLib::Swap::startDiscounts</definition>
        <argsstring>(Size j) const</argsstring>
        <name>startDiscounts</name>
        <qualifiedname>QuantLib::Swap::startDiscounts</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/swap.hpp" line="94" column="24" bodyfile="ql/instruments/swap.hpp" bodystart="94" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swap_1a1c5ee95948349edd10e6f7ad842b2c4a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a05e8e288a4bdedfe5b4e16d8cec14f1c" kindref="member">DiscountFactor</ref></type>
        <definition>DiscountFactor QuantLib::Swap::endDiscounts</definition>
        <argsstring>(Size j) const</argsstring>
        <name>endDiscounts</name>
        <qualifiedname>QuantLib::Swap::endDiscounts</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/swap.hpp" line="100" column="24" bodyfile="ql/instruments/swap.hpp" bodystart="100" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swap_1ab698ee91db4089a0fef963f6857c1c28" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a05e8e288a4bdedfe5b4e16d8cec14f1c" kindref="member">DiscountFactor</ref></type>
        <definition>DiscountFactor QuantLib::Swap::npvDateDiscount</definition>
        <argsstring>() const</argsstring>
        <name>npvDateDiscount</name>
        <qualifiedname>QuantLib::Swap::npvDateDiscount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/swap.hpp" line="106" column="24" bodyfile="ql/instruments/swap.hpp" bodystart="106" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swap_1a6d4f202e19e6d9505ebc111f197244ae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespace_quant_lib_1a14f786c47ee979097c448d96b2defaab" kindref="member">Leg</ref> &amp;</type>
        <definition>const Leg &amp; QuantLib::Swap::leg</definition>
        <argsstring>(Size j) const</argsstring>
        <name>leg</name>
        <qualifiedname>QuantLib::Swap::leg</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/swap.hpp" line="111" column="19" bodyfile="ql/instruments/swap.hpp" bodystart="111" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swap_1a2530b88cf2c011a623c667838b8a9aa2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::Swap::payer</definition>
        <argsstring>(Size j) const</argsstring>
        <name>payer</name>
        <qualifiedname>QuantLib::Swap::payer</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/swap.hpp" line="115" column="14" bodyfile="ql/instruments/swap.hpp" bodystart="115" bodyend="118"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_quant_lib_1_1_swap_1ad0806daa5b111fcb11ce521b19124b4e" prot="public" static="no" strong="no">
        <type></type>
        <name>Type</name>
        <qualifiedname>QuantLib::Swap::Type</qualifiedname>
        <enumvalue id="class_quant_lib_1_1_swap_1ad0806daa5b111fcb11ce521b19124b4ea04e66442c860dac71042b03c64af4831" prot="public">
          <name>Receiver</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_swap_1ad0806daa5b111fcb11ce521b19124b4ea31009108a6e84c98136e1053dbb41824" prot="public">
          <name>Payer</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>In most cases, the swap has just two legs and can be defined as receiver or payer.</para>
<para>Its type is usually defined with respect to the leg paying a fixed rate; derived swap classes will document any exceptions to the rule. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/swap.hpp" line="50" column="9" bodyfile="ql/instruments/swap.hpp" bodystart="50" bodyend="50"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Interest rate swap. </para>
    </briefdescription>
    <detaileddescription>
<para>The cash flows belonging to the first leg are paid; the ones belonging to the second leg are received. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="6">
        <label>QuantLib::ArithmeticAverageOIS</label>
        <link refid="class_quant_lib_1_1_arithmetic_average_o_i_s"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::AssetSwap</label>
        <link refid="class_quant_lib_1_1_asset_swap"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::BMASwap</label>
        <link refid="class_quant_lib_1_1_b_m_a_swap"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QuantLib::CPISwap</label>
        <link refid="class_quant_lib_1_1_c_p_i_swap"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QuantLib::EquityTotalReturnSwap</label>
        <link refid="class_quant_lib_1_1_equity_total_return_swap"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>QuantLib::FixedVsFloatingSwap</label>
        <link refid="class_quant_lib_1_1_fixed_vs_floating_swap"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>QuantLib::FloatFloatSwap</label>
        <link refid="class_quant_lib_1_1_float_float_swap"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Instrument</label>
        <link refid="class_quant_lib_1_1_instrument"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>QuantLib::IrregularSwap</label>
        <link refid="class_quant_lib_1_1_irregular_swap"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>QuantLib::NonstandardSwap</label>
        <link refid="class_quant_lib_1_1_nonstandard_swap"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="12">
        <label>QuantLib::OvernightIndexedSwap</label>
        <link refid="class_quant_lib_1_1_overnight_indexed_swap"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::Swap</label>
        <link refid="class_quant_lib_1_1_swap"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>QuantLib::VanillaSwap</label>
        <link refid="class_quant_lib_1_1_vanilla_swap"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>QuantLib::YearOnYearInflationSwap</label>
        <link refid="class_quant_lib_1_1_year_on_year_inflation_swap"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>QuantLib::ZeroCouponInflationSwap</label>
        <link refid="class_quant_lib_1_1_zero_coupon_inflation_swap"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>QuantLib::ZeroCouponSwap</label>
        <link refid="class_quant_lib_1_1_zero_coupon_swap"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="2">
        <label>QuantLib::Instrument</label>
        <link refid="class_quant_lib_1_1_instrument"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>valuationDate_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="1">
        <label>QuantLib::Swap</label>
        <link refid="class_quant_lib_1_1_swap"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/instruments/swap.hpp" line="41" column="5" bodyfile="ql/instruments/swap.hpp" bodystart="41" bodyend="139"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_instrument_1a468edb294da268b097c91bf821084c07" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>additionalResults</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a57d2b34e8625ab3d9ffa50c0c7931099" prot="protected" virt="non-virtual"><scope>QuantLib::Swap</scope><name>additionalResults_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a02070ea7442d30625992c1711030d4b8" prot="protected" virt="non-virtual"><scope>QuantLib::Swap</scope><name>alwaysForward_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a17c9433135a259e4776baec66204a484" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>alwaysForwardNotifications</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a4c573c48f7eaead5042864ac0eb5b025" prot="protected" virt="virtual"><scope>QuantLib::Swap</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a58b4986a80efa18634483a92c121e26e" prot="protected" virt="non-virtual"><scope>QuantLib::Swap</scope><name>calculated_</name></member>
      <member refid="class_quant_lib_1_1_swap_1a6e033a19eb0f2770eefb8b06912b3abe" prot="public" virt="virtual"><scope>QuantLib::Swap</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_swap_1a1c5ee95948349edd10e6f7ad842b2c4a" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>endDiscounts</name></member>
      <member refid="class_quant_lib_1_1_swap_1ac3b82c6fb8b5951424767b5e95e9a0b3" prot="protected" virt="non-virtual"><scope>QuantLib::Swap</scope><name>endDiscounts_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1ac548cb61c864779db09bd0fac6ae7c81" prot="protected" virt="non-virtual"><scope>QuantLib::Swap</scope><name>engine_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a03502fb6c606b262c25acd94ff4c1e52" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>errorEstimate</name></member>
      <member refid="class_quant_lib_1_1_instrument_1abb8f4cfa7346fab7a2f3a8c8b4da30f3" prot="protected" virt="non-virtual"><scope>QuantLib::Swap</scope><name>errorEstimate_</name></member>
      <member refid="class_quant_lib_1_1_swap_1a537a5ba44fe18cbed5cda31562896b67" prot="public" virt="virtual"><scope>QuantLib::Swap</scope><name>fetchResults</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1afac6ee19c3107c453e1347dd8000e023" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>forwardFirstNotificationOnly</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7157f41e83f2c5d924f5c5bafda04d1d" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>freeze</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7bb721fe00c6854e602758aba629ab77" prot="protected" virt="non-virtual"><scope>QuantLib::Swap</scope><name>frozen_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a5e4c746cbf7999c83dc57f87e241f1cc" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>Instrument</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a0a7c5d42815a4e16ee2158e24dbfc748" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>isCalculated</name></member>
      <member refid="class_quant_lib_1_1_swap_1aa8b6f838ad681344ecd604db48ea0b8e" prot="public" virt="virtual"><scope>QuantLib::Swap</scope><name>isExpired</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a26f18f4ff7faaaebd8eae50e064b493e" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>LazyObject</name></member>
      <member refid="class_quant_lib_1_1_swap_1a6d4f202e19e6d9505ebc111f197244ae" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>leg</name></member>
      <member refid="class_quant_lib_1_1_swap_1a79494447be4eebf5caf0f0940a9b204f" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>legBPS</name></member>
      <member refid="class_quant_lib_1_1_swap_1af40f759b518542c642d71cbc262cab84" prot="protected" virt="non-virtual"><scope>QuantLib::Swap</scope><name>legBPS_</name></member>
      <member refid="class_quant_lib_1_1_swap_1af1ef52511fbca1b23ffddf978f678d98" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>legNPV</name></member>
      <member refid="class_quant_lib_1_1_swap_1ac85f31b7bf3b97e6c03848c64bef33af" prot="protected" virt="non-virtual"><scope>QuantLib::Swap</scope><name>legNPV_</name></member>
      <member refid="class_quant_lib_1_1_swap_1a153af8a79c61fda7e68e65fee4817e35" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>legs</name></member>
      <member refid="class_quant_lib_1_1_swap_1a1ca08a7d6e5957950d40383eb4cf0b63" prot="protected" virt="non-virtual"><scope>QuantLib::Swap</scope><name>legs_</name></member>
      <member refid="class_quant_lib_1_1_swap_1a0a9d27adbab145e513399a18852e4d4f" prot="public" virt="virtual"><scope>QuantLib::Swap</scope><name>maturityDate</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a5afdd9698267cd30ddd10cf01f3487b0" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>NPV</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a997663780100d30ae59b14ac0285322d" prot="protected" virt="non-virtual"><scope>QuantLib::Swap</scope><name>NPV_</name></member>
      <member refid="class_quant_lib_1_1_swap_1ab698ee91db4089a0fef963f6857c1c28" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>npvDateDiscount</name></member>
      <member refid="class_quant_lib_1_1_swap_1a390b5eebe9b8a8915d393465a93809ad" prot="protected" virt="non-virtual"><scope>QuantLib::Swap</scope><name>npvDateDiscount_</name></member>
      <member refid="class_quant_lib_1_1_swap_1aed6ec56ad5e15f7de107e98fb1526b66" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>numberOfLegs</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::Swap</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::Swap</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::Swap</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::Swap</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::Swap</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::QuantLib::Observer::"><scope>QuantLib::Swap</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_swap_1ad0806daa5b111fcb11ce521b19124b4ea31009108a6e84c98136e1053dbb41824" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>Payer</name></member>
      <member refid="class_quant_lib_1_1_swap_1a2530b88cf2c011a623c667838b8a9aa2" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>payer</name></member>
      <member refid="class_quant_lib_1_1_swap_1a82468c93e5a364d73e164df46bd50445" prot="protected" virt="non-virtual"><scope>QuantLib::Swap</scope><name>payer_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1aad23f546bbca156a49a95ca2bee124c4" prot="protected" virt="virtual"><scope>QuantLib::Swap</scope><name>performCalculations</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a70c9b24e50132408d8d9ce4f6674662a" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>recalculate</name></member>
      <member refid="class_quant_lib_1_1_swap_1ad0806daa5b111fcb11ce521b19124b4ea04e66442c860dac71042b03c64af4831" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>Receiver</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a266c15a12160a89f4f9707db85f9fa27" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>result</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a3444386491f179f64f4f0aac24997071" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>setPricingEngine</name></member>
      <member refid="class_quant_lib_1_1_swap_1a9a021b307289cdb765e96a03b275785a" prot="public" virt="virtual"><scope>QuantLib::Swap</scope><name>setupArguments</name></member>
      <member refid="class_quant_lib_1_1_swap_1aece293c8f03c150e794b525216f6bd18" prot="protected" virt="virtual"><scope>QuantLib::Swap</scope><name>setupExpired</name></member>
      <member refid="class_quant_lib_1_1_swap_1ae4df409ff659d19c6c76347d0d92c47b" prot="public" virt="virtual"><scope>QuantLib::Swap</scope><name>startDate</name></member>
      <member refid="class_quant_lib_1_1_swap_1a9a138527c286814c9dba09b3242bbda2" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>startDiscounts</name></member>
      <member refid="class_quant_lib_1_1_swap_1aa235d3e00058faa863f579d9665301e4" prot="protected" virt="non-virtual"><scope>QuantLib::Swap</scope><name>startDiscounts_</name></member>
      <member refid="class_quant_lib_1_1_swap_1a88c4221d6c0156759c5e84c3188459c8" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>Swap</name></member>
      <member refid="class_quant_lib_1_1_swap_1a546a1d0746c86ad1fed70a0904b18024" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>Swap</name></member>
      <member refid="class_quant_lib_1_1_swap_1a953a237540a310c121aebbf8b4f7621e" prot="protected" virt="non-virtual"><scope>QuantLib::Swap</scope><name>Swap</name></member>
      <member refid="class_quant_lib_1_1_swap_1ad0806daa5b111fcb11ce521b19124b4e" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>Type</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a2e0e4786666453024b9d4e0761f2770b" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>unfreeze</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1adee2bf49be5c4c78736be293321a856d" prot="public" virt="virtual"><scope>QuantLib::Swap</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a53a0fc1adc70b73387ad53009725835d" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>valuationDate</name></member>
      <member refid="class_quant_lib_1_1_instrument_1aa60b558fc82f022e13535360ac4a6fed" prot="protected" virt="non-virtual"><scope>QuantLib::Swap</scope><name>valuationDate_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a9d719c43bb627177a90d7d12324a2d6e" prot="public" virt="non-virtual"><scope>QuantLib::Swap</scope><name>~LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::Swap</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::Swap</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="group__debug_macros" kind="group">
    <compoundname>debugMacros</compoundname>
    <title>Debugging macros</title>
    <sectiondef kind="define">
      <memberdef kind="define" id="group__debug_macros_1ga69b168aeab2ef4ff9033469b8214a279" prot="public" static="no">
        <name>QL_TRACE_ENABLE</name>
        <briefdescription>
<para>enable tracing </para>
        </briefdescription>
        <detaileddescription>
<para>The statement <programlisting><codeline><highlight class="normal">QL_TRACE_ENABLE;</highlight></codeline>
</programlisting> can be used to enable tracing. Such statement might be ignored; refer to QL_TRACE for details. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/utilities/tracing.hpp" line="266" column="9" bodyfile="ql/utilities/tracing.hpp" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__debug_macros_1ga7d42ce8732ee6ca70a9c15a56f0049e1" prot="public" static="no">
        <name>QL_TRACE_DISABLE</name>
        <briefdescription>
<para>disable tracing </para>
        </briefdescription>
        <detaileddescription>
<para>The statement <programlisting><codeline><highlight class="normal">QL_TRACE_DISABLE;</highlight></codeline>
</programlisting> can be used to disable tracing. Such statement might be ignored; refer to QL_TRACE for details. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/utilities/tracing.hpp" line="267" column="9" bodyfile="ql/utilities/tracing.hpp" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__debug_macros_1ga0fc8fb98e72d1a8357ead633a5d53163" prot="public" static="no">
        <name>QL_TRACE_ON</name>
        <param><defname>out</defname></param>
        <briefdescription>
<para>set tracing stream </para>
        </briefdescription>
        <detaileddescription>
<para>The statement <programlisting><codeline><highlight class="normal">QL_TRACE_ON(stream);</highlight></codeline>
</programlisting> can be used to set the stream where tracing messages are output. Such statement might be ignored; refer to QL_TRACE for details. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/utilities/tracing.hpp" line="268" column="9" bodyfile="ql/utilities/tracing.hpp" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__debug_macros_1ga456b5371fdc64479d393a04b505df5d0" prot="public" static="no">
        <name>QL_TRACE</name>
        <param><defname>message</defname></param>
        <briefdescription>
<para>output tracing information </para>
        </briefdescription>
        <detaileddescription>
<para>The statement <programlisting><codeline><highlight class="normal">QL_TRACE(message);</highlight></codeline>
</programlisting> can be used to output a trace of the code being executed. If tracing was disabled during configuration, such statements are removed by the preprocessor for maximum performance; if it was enabled, whether and where the message is output depends on the current settings. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/utilities/tracing.hpp" line="269" column="9" bodyfile="ql/utilities/tracing.hpp" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__debug_macros_1ga903ea9f035842ee3560fd787c84887d7" prot="public" static="no">
        <name>QL_TRACE_ENTER_FUNCTION</name>
        <briefdescription>
<para>output tracing information </para>
        </briefdescription>
        <detaileddescription>
<para>The statement <programlisting><codeline><highlight class="normal">QL_TRACE_ENTER_FUNCTION;</highlight></codeline>
</programlisting> can be used at the beginning of a function to trace the fact that the program execution is entering such function. It should be paired with a corresponding QL_TRACE_EXIT_FUNCTION macro. Such statement might be ignored; refer to QL_TRACE for details. Also, function information might not be available depending on the compiler. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/utilities/tracing.hpp" line="270" column="9" bodyfile="ql/utilities/tracing.hpp" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__debug_macros_1ga33c013fea8c974f6781441deaa3ea53b" prot="public" static="no">
        <name>QL_TRACE_EXIT_FUNCTION</name>
        <briefdescription>
<para>output tracing information </para>
        </briefdescription>
        <detaileddescription>
<para>The statement <programlisting><codeline><highlight class="normal">QL_TRACE_EXIT_FUNCTION;</highlight></codeline>
</programlisting> can be used before returning from a function to trace the fact that the program execution is exiting such function. It should be paired with a corresponding QL_TRACE_ENTER_FUNCTION macro. Such statement might be ignored; refer to QL_TRACE for details. Also, function information might not be available depending on the compiler. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/utilities/tracing.hpp" line="271" column="9" bodyfile="ql/utilities/tracing.hpp" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__debug_macros_1ga4b80d6b6b9d0d17493ac81428934f1c0" prot="public" static="no">
        <name>QL_TRACE_LOCATION</name>
        <briefdescription>
<para>output tracing information </para>
        </briefdescription>
        <detaileddescription>
<para>The statement <programlisting><codeline><highlight class="normal">QL_TRACE_LOCATION;</highlight></codeline>
</programlisting> can be used to trace the current file and line. Such statement might be ignored; refer to QL_TRACE for details. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/utilities/tracing.hpp" line="272" column="9" bodyfile="ql/utilities/tracing.hpp" bodystart="272" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__debug_macros_1ga7d82587448e3f5531f79cfb215b905af" prot="public" static="no">
        <name>QL_TRACE_VARIABLE</name>
        <param><defname>variable</defname></param>
        <briefdescription>
<para>output tracing information </para>
        </briefdescription>
        <detaileddescription>
<para>The statement <programlisting><codeline><highlight class="normal">QL_TRACE_VARIABLE(variable);</highlight></codeline>
</programlisting> can be used to trace the current value of a variable. Such statement might be ignored; refer to QL_TRACE for details. Also, the variable type must allow sending it to an output stream. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/utilities/tracing.hpp" line="273" column="9" bodyfile="ql/utilities/tracing.hpp" bodystart="273" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>For debugging purposes, macros can be used to output information about the code being executed. Instrumenting code as in: <programlisting><codeline><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Foo<sp/>{</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bar(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__debug_macros_1ga903ea9f035842ee3560fd787c84887d7" kindref="member">QL_TRACE_ENTER_FUNCTION</ref>;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__debug_macros_1ga7d82587448e3f5531f79cfb215b905af" kindref="member">QL_TRACE_VARIABLE</ref>(i);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>42)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__debug_macros_1ga4b80d6b6b9d0d17493ac81428934f1c0" kindref="member">QL_TRACE_LOCATION</ref>;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__debug_macros_1ga456b5371fdc64479d393a04b505df5d0" kindref="member">QL_TRACE</ref>(</highlight><highlight class="stringliteral">&quot;Right<sp/>answer,<sp/>but<sp/>no<sp/>question&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__debug_macros_1ga4b80d6b6b9d0d17493ac81428934f1c0" kindref="member">QL_TRACE_LOCATION</ref>;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__debug_macros_1ga456b5371fdc64479d393a04b505df5d0" kindref="member">QL_TRACE</ref>(</highlight><highlight class="stringliteral">&quot;Wrong<sp/>answer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>*=<sp/>2;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__debug_macros_1ga7d82587448e3f5531f79cfb215b905af" kindref="member">QL_TRACE_VARIABLE</ref>(i);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__debug_macros_1ga33c013fea8c974f6781441deaa3ea53b" kindref="member">QL_TRACE_EXIT_FUNCTION</ref>;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> will output a trace like the following when the code is run: <programlisting><codeline><highlight class="normal">trace[3]:<sp/>Entering<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Foo::bar(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal">trace[3]:<sp/>i<sp/>=<sp/>21</highlight></codeline>
<codeline><highlight class="normal">trace[3]:<sp/>At<sp/>line<sp/>16<sp/>in<sp/>tracing_example.cpp</highlight></codeline>
<codeline><highlight class="normal">trace[3]:<sp/>Wrong<sp/>answer</highlight></codeline>
<codeline><highlight class="normal">trace[3]:<sp/>i<sp/>=<sp/>42</highlight></codeline>
<codeline><highlight class="normal">trace[3]:<sp/>Exiting<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Foo::bar(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
</programlisting> (the actual output will depend on the compiler and the file names). A word of warning must be added: adding so much tracing to your code might degrade its readability. </para>
    </detaileddescription>
  </compounddef>
</doxygen>

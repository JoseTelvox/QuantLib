<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_projected_constraint_1_1_impl" kind="class" language="C++" prot="private" final="yes">
    <compoundname>QuantLib::ProjectedConstraint::Impl</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_constraint_1_1_impl" prot="public" virt="non-virtual">QuantLib::Constraint::Impl</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_projected_constraint_1_1_impl_1a886d66646d70752b145efdc7db0e39ac" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_quant_lib_1_1_constraint" kindref="compound">Constraint</ref></type>
        <definition>const Constraint QuantLib::ProjectedConstraint::Impl::constraint_</definition>
        <argsstring></argsstring>
        <name>constraint_</name>
        <qualifiedname>QuantLib::ProjectedConstraint::Impl::constraint_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/projectedconstraint.hpp" line="56" column="30" bodyfile="ql/math/optimization/projectedconstraint.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_projected_constraint_1_1_impl_1ac548939a76ecb3e79817e56fc5a9fc1f" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_quant_lib_1_1_projection" kindref="compound">Projection</ref></type>
        <definition>const Projection QuantLib::ProjectedConstraint::Impl::projection_</definition>
        <argsstring></argsstring>
        <name>projection_</name>
        <qualifiedname>QuantLib::ProjectedConstraint::Impl::projection_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/projectedconstraint.hpp" line="57" column="30" bodyfile="ql/math/optimization/projectedconstraint.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_projected_constraint_1_1_impl_1a27385f3f14b70fe588488d9b084be756" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ProjectedConstraint::Impl::Impl</definition>
        <argsstring>(Constraint constraint, const Array &amp;parameterValues, const std::vector&lt; bool &gt; &amp;fixParameters)</argsstring>
        <name>Impl</name>
        <qualifiedname>QuantLib::ProjectedConstraint::Impl::Impl</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_constraint" kindref="compound">Constraint</ref></type>
          <declname>constraint</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>parameterValues</declname>
        </param>
        <param>
          <type>const std::vector&lt; bool &gt; &amp;</type>
          <declname>fixParameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/projectedconstraint.hpp" line="39" column="13" bodyfile="ql/math/optimization/projectedconstraint.hpp" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_projected_constraint_1_1_impl_1a12a216a4b186e28728138fd8b671bf90" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ProjectedConstraint::Impl::Impl</definition>
        <argsstring>(Constraint constraint, const Projection &amp;projection)</argsstring>
        <name>Impl</name>
        <qualifiedname>QuantLib::ProjectedConstraint::Impl::Impl</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_constraint" kindref="compound">Constraint</ref></type>
          <declname>constraint</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_projection" kindref="compound">Projection</ref> &amp;</type>
          <declname>projection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/projectedconstraint.hpp" line="43" column="13" bodyfile="ql/math/optimization/projectedconstraint.hpp" bodystart="43" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_projected_constraint_1_1_impl_1aa0ae31dba1cb2d0f1467fe63718cc12c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::ProjectedConstraint::Impl::test</definition>
        <argsstring>(const Array &amp;params) const override</argsstring>
        <name>test</name>
        <qualifiedname>QuantLib::ProjectedConstraint::Impl::test</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/projectedconstraint.hpp" line="45" column="18" bodyfile="ql/math/optimization/projectedconstraint.hpp" bodystart="45" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_projected_constraint_1_1_impl_1aabf4fc6216e7fb6ed6dcba30fd3eda22" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::ProjectedConstraint::Impl::upperBound</definition>
        <argsstring>(const Array &amp;params) const override</argsstring>
        <name>upperBound</name>
        <qualifiedname>QuantLib::ProjectedConstraint::Impl::upperBound</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/projectedconstraint.hpp" line="48" column="19" bodyfile="ql/math/optimization/projectedconstraint.hpp" bodystart="48" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_projected_constraint_1_1_impl_1a207986a20616a7cc656653b81f55fe7a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::ProjectedConstraint::Impl::lowerBound</definition>
        <argsstring>(const Array &amp;params) const override</argsstring>
        <name>lowerBound</name>
        <qualifiedname>QuantLib::ProjectedConstraint::Impl::lowerBound</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/projectedconstraint.hpp" line="51" column="19" bodyfile="ql/math/optimization/projectedconstraint.hpp" bodystart="51" bodyend="53"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::Constraint::Impl</label>
        <link refid="class_quant_lib_1_1_constraint_1_1_impl"/>
      </node>
      <node id="1">
        <label>QuantLib::ProjectedConstraint::Impl</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::Constraint::Impl</label>
        <link refid="class_quant_lib_1_1_constraint_1_1_impl"/>
      </node>
      <node id="1">
        <label>QuantLib::ProjectedConstraint::Impl</label>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/math/optimization/projectedconstraint.hpp" line="37" column="9" bodyfile="ql/math/optimization/projectedconstraint.hpp" bodystart="37" bodyend="58"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_projected_constraint_1_1_impl_1a886d66646d70752b145efdc7db0e39ac" prot="private" virt="non-virtual"><scope>QuantLib::ProjectedConstraint::Impl</scope><name>constraint_</name></member>
      <member refid="class_quant_lib_1_1_projected_constraint_1_1_impl_1a27385f3f14b70fe588488d9b084be756" prot="public" virt="non-virtual"><scope>QuantLib::ProjectedConstraint::Impl</scope><name>Impl</name></member>
      <member refid="class_quant_lib_1_1_projected_constraint_1_1_impl_1a12a216a4b186e28728138fd8b671bf90" prot="public" virt="non-virtual"><scope>QuantLib::ProjectedConstraint::Impl</scope><name>Impl</name></member>
      <member refid="class_quant_lib_1_1_projected_constraint_1_1_impl_1a207986a20616a7cc656653b81f55fe7a" prot="public" virt="non-virtual"><scope>QuantLib::ProjectedConstraint::Impl</scope><name>lowerBound</name></member>
      <member refid="class_quant_lib_1_1_projected_constraint_1_1_impl_1ac548939a76ecb3e79817e56fc5a9fc1f" prot="private" virt="non-virtual"><scope>QuantLib::ProjectedConstraint::Impl</scope><name>projection_</name></member>
      <member refid="class_quant_lib_1_1_projected_constraint_1_1_impl_1aa0ae31dba1cb2d0f1467fe63718cc12c" prot="public" virt="non-virtual"><scope>QuantLib::ProjectedConstraint::Impl</scope><name>test</name></member>
      <member refid="class_quant_lib_1_1_projected_constraint_1_1_impl_1aabf4fc6216e7fb6ed6dcba30fd3eda22" prot="public" virt="non-virtual"><scope>QuantLib::ProjectedConstraint::Impl</scope><name>upperBound</name></member>
      <member refid="class_quant_lib_1_1_constraint_1_1_impl_1aab9bd58b412a98a57a8384e905607216" prot="public" virt="virtual"><scope>QuantLib::ProjectedConstraint::Impl</scope><name>~Impl</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

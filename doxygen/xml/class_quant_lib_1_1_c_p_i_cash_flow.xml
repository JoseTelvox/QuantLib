<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_c_p_i_cash_flow" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::CPICashFlow</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_indexed_cash_flow" prot="public" virt="non-virtual">QuantLib::IndexedCashFlow</basecompoundref>
    <includes refid="cpicoupon_8hpp" local="no">cpicoupon.hpp</includes>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_c_p_i_cash_flow_1a99516fdd80a2c794bd74ab23532f8416" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CPICashFlow::baseFixing_</definition>
        <argsstring></argsstring>
        <name>baseFixing_</name>
        <qualifiedname>QuantLib::CPICashFlow::baseFixing_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/cpicoupon.hpp" line="195" column="14" bodyfile="ql/cashflows/cpicoupon.hpp" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_p_i_cash_flow_1aeddc444f38967f98e4d355109e4541a6" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::CPICashFlow::observationDate_</definition>
        <argsstring></argsstring>
        <name>observationDate_</name>
        <qualifiedname>QuantLib::CPICashFlow::observationDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/cpicoupon.hpp" line="196" column="14" bodyfile="ql/cashflows/cpicoupon.hpp" bodystart="196" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_p_i_cash_flow_1aa72961c379683c4846772b1343647450" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref></type>
        <definition>Period QuantLib::CPICashFlow::observationLag_</definition>
        <argsstring></argsstring>
        <name>observationLag_</name>
        <qualifiedname>QuantLib::CPICashFlow::observationLag_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/cpicoupon.hpp" line="197" column="16" bodyfile="ql/cashflows/cpicoupon.hpp" bodystart="197" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_p_i_cash_flow_1a30e99c70ddc496885f732062a6772748" prot="protected" static="no" mutable="no">
        <type><ref refid="struct_quant_lib_1_1_c_p_i_1adaf018681fd1d9478c984348c82c9013" kindref="member">CPI::InterpolationType</ref></type>
        <definition>CPI::InterpolationType QuantLib::CPICashFlow::interpolation_</definition>
        <argsstring></argsstring>
        <name>interpolation_</name>
        <qualifiedname>QuantLib::CPICashFlow::interpolation_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/cpicoupon.hpp" line="198" column="32" bodyfile="ql/cashflows/cpicoupon.hpp" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_p_i_cash_flow_1adfffa5ec99b28255f0ea4e3c5c28ba14" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
        <definition>Frequency QuantLib::CPICashFlow::frequency_</definition>
        <argsstring></argsstring>
        <name>frequency_</name>
        <qualifiedname>QuantLib::CPICashFlow::frequency_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/cpicoupon.hpp" line="199" column="19" bodyfile="ql/cashflows/cpicoupon.hpp" bodystart="199" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_cash_flow_1ae2969689ba4137dca00757285eed01ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::CPICashFlow::CPICashFlow</definition>
        <argsstring>(Real notional, const ext::shared_ptr&lt; ZeroInflationIndex &gt; &amp;index, const Date &amp;baseDate, Real baseFixing, const Date &amp;observationDate, const Period &amp;observationLag, CPI::InterpolationType interpolation, const Date &amp;paymentDate, bool growthOnly=false)</argsstring>
        <name>CPICashFlow</name>
        <qualifiedname>QuantLib::CPICashFlow::CPICashFlow</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>notional</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_zero_inflation_index" kindref="compound">ZeroInflationIndex</ref> &gt; &amp;</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>baseDate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>baseFixing</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>observationDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>observationLag</declname>
        </param>
        <param>
          <type><ref refid="struct_quant_lib_1_1_c_p_i_1adaf018681fd1d9478c984348c82c9013" kindref="member">CPI::InterpolationType</ref></type>
          <declname>interpolation</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>paymentDate</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>growthOnly</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/cpicoupon.hpp" line="166" column="9" bodyfile="ql/cashflows/cpicoupon.cpp" bodystart="139" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_cash_flow_1abf5b01f3efb4c3edc903a5e1eebed972" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CPICashFlow::baseFixing</definition>
        <argsstring>() const override</argsstring>
        <name>baseFixing</name>
        <qualifiedname>QuantLib::CPICashFlow::baseFixing</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_indexed_cash_flow_1a23aec750762a04270c5a1afff587313c">baseFixing</reimplements>
        <briefdescription>
<para>value used on base date </para>
        </briefdescription>
        <detaileddescription>
<para>This does not have to agree with index on that date. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/cpicoupon.hpp" line="178" column="14" bodyfile="ql/cashflows/cpicoupon.cpp" bodystart="168" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_cash_flow_1a61787081ce9b207f3a7965ec59fcc6b4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::CPICashFlow::baseDate</definition>
        <argsstring>() const override</argsstring>
        <name>baseDate</name>
        <qualifiedname>QuantLib::CPICashFlow::baseDate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_indexed_cash_flow_1ac82fecaaf732f0e5504e52176debb1f9">baseDate</reimplements>
        <briefdescription>
<para>you may not have a valid date </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/cpicoupon.hpp" line="180" column="14" bodyfile="ql/cashflows/cpicoupon.cpp" bodystart="159" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_cash_flow_1a1913a39ba877906d0b202d44f329b5ae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::CPICashFlow::observationDate</definition>
        <argsstring>() const</argsstring>
        <name>observationDate</name>
        <qualifiedname>QuantLib::CPICashFlow::observationDate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/cpicoupon.hpp" line="182" column="14" bodyfile="ql/cashflows/cpicoupon.hpp" bodystart="182" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_cash_flow_1a8aebe083ea09ebeb5dae0a9c603b14cf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref></type>
        <definition>Period QuantLib::CPICashFlow::observationLag</definition>
        <argsstring>() const</argsstring>
        <name>observationLag</name>
        <qualifiedname>QuantLib::CPICashFlow::observationLag</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/cpicoupon.hpp" line="183" column="16" bodyfile="ql/cashflows/cpicoupon.hpp" bodystart="183" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_cash_flow_1ae148f6f6e1bc95447057172ae1edbeb1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="struct_quant_lib_1_1_c_p_i_1adaf018681fd1d9478c984348c82c9013" kindref="member">CPI::InterpolationType</ref></type>
        <definition>virtual CPI::InterpolationType QuantLib::CPICashFlow::interpolation</definition>
        <argsstring>() const</argsstring>
        <name>interpolation</name>
        <qualifiedname>QuantLib::CPICashFlow::interpolation</qualifiedname>
        <briefdescription>
<para>do you want linear/constant/as-index interpolation of future data? </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/cpicoupon.hpp" line="185" column="40" bodyfile="ql/cashflows/cpicoupon.hpp" bodystart="185" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_cash_flow_1ab13882da22762dd447e7047f01b6c332" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
        <definition>virtual Frequency QuantLib::CPICashFlow::frequency</definition>
        <argsstring>() const</argsstring>
        <name>frequency</name>
        <qualifiedname>QuantLib::CPICashFlow::frequency</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/cpicoupon.hpp" line="188" column="27" bodyfile="ql/cashflows/cpicoupon.hpp" bodystart="188" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_cash_flow_1af0dcdf24deaed38a22085d3efc15b775" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_zero_inflation_index" kindref="compound">ZeroInflationIndex</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; ZeroInflationIndex &gt; QuantLib::CPICashFlow::cpiIndex</definition>
        <argsstring>() const</argsstring>
        <name>cpiIndex</name>
        <qualifiedname>QuantLib::CPICashFlow::cpiIndex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/cpicoupon.hpp" line="190" column="25" bodyfile="ql/cashflows/cpicoupon.hpp" bodystart="288" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_cash_flow_1adb463ff41d7c70ee7c457c3f497ea060" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CPICashFlow::indexFixing</definition>
        <argsstring>() const override</argsstring>
        <name>indexFixing</name>
        <qualifiedname>QuantLib::CPICashFlow::indexFixing</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_indexed_cash_flow_1abe47dfce66d72266875bd9326f6ed385">indexFixing</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/cpicoupon.hpp" line="192" column="14" bodyfile="ql/cashflows/cpicoupon.cpp" bodystart="175" bodyend="177"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Cash flow paying the performance of a <ref refid="struct_quant_lib_1_1_c_p_i" kindref="compound">CPI</ref> (zero inflation) index. </para>
    </briefdescription>
    <detaileddescription>
<para>It is NOT a coupon, i.e. no accruals. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::CPICashFlow</label>
        <link refid="class_quant_lib_1_1_c_p_i_cash_flow"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::CashFlow</label>
        <link refid="class_quant_lib_1_1_cash_flow"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Event</label>
        <link refid="class_quant_lib_1_1_event"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::IndexedCashFlow</label>
        <link refid="class_quant_lib_1_1_indexed_cash_flow"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="7">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::CPICashFlow</label>
        <link refid="class_quant_lib_1_1_c_p_i_cash_flow"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>observationDate_</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>observationLag_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::CashFlow</label>
        <link refid="class_quant_lib_1_1_cash_flow"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="4">
        <label>QuantLib::Event</label>
        <link refid="class_quant_lib_1_1_event"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::IndexedCashFlow</label>
        <link refid="class_quant_lib_1_1_indexed_cash_flow"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="7">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="9">
        <label>QuantLib::Period</label>
        <link refid="class_quant_lib_1_1_period"/>
      </node>
    </collaborationgraph>
    <location file="ql/cashflows/cpicoupon.hpp" line="164" column="5" bodyfile="ql/cashflows/cpicoupon.hpp" bodystart="164" bodyend="200"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1af4573744d8fb85d793f765ef20626f5e" prot="public" virt="virtual"><scope>QuantLib::CPICashFlow</scope><name>accept</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a02070ea7442d30625992c1711030d4b8" prot="protected" virt="non-virtual"><scope>QuantLib::CPICashFlow</scope><name>alwaysForward_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a17c9433135a259e4776baec66204a484" prot="public" virt="non-virtual"><scope>QuantLib::CPICashFlow</scope><name>alwaysForwardNotifications</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1ac5ae99e49a30c4468b6aba96768e4aa7" prot="public" virt="virtual"><scope>QuantLib::CPICashFlow</scope><name>amount</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1ac9f0fbf5c3784063909ed9919d7c46f7" prot="protected" virt="non-virtual"><scope>QuantLib::CPICashFlow</scope><name>amount_</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cash_flow_1a61787081ce9b207f3a7965ec59fcc6b4" prot="public" virt="virtual"><scope>QuantLib::CPICashFlow</scope><name>baseDate</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cash_flow_1abf5b01f3efb4c3edc903a5e1eebed972" prot="public" virt="virtual"><scope>QuantLib::CPICashFlow</scope><name>baseFixing</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cash_flow_1a99516fdd80a2c794bd74ab23532f8416" prot="protected" virt="non-virtual"><scope>QuantLib::CPICashFlow</scope><name>baseFixing_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a5244c7f83592375a0ea9048296435fd1" prot="protected" virt="virtual"><scope>QuantLib::CPICashFlow</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a58b4986a80efa18634483a92c121e26e" prot="protected" virt="non-virtual"><scope>QuantLib::CPICashFlow</scope><name>calculated_</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cash_flow_1ae2969689ba4137dca00757285eed01ab" prot="public" virt="non-virtual"><scope>QuantLib::CPICashFlow</scope><name>CPICashFlow</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cash_flow_1af0dcdf24deaed38a22085d3efc15b775" prot="public" virt="non-virtual"><scope>QuantLib::CPICashFlow</scope><name>cpiIndex</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1a41e79ceab52210f131ad9ea7672da9a4" prot="public" virt="virtual"><scope>QuantLib::CPICashFlow</scope><name>date</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::CPICashFlow</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_cash_flow_1a235e2205946f507de2d3b2cbfaf8cd89" prot="public" virt="virtual"><scope>QuantLib::CPICashFlow</scope><name>exCouponDate</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1a1fc1d31bccd62a14708904d24273417b" prot="public" virt="virtual"><scope>QuantLib::CPICashFlow</scope><name>fixingDate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1afac6ee19c3107c453e1347dd8000e023" prot="public" virt="non-virtual"><scope>QuantLib::CPICashFlow</scope><name>forwardFirstNotificationOnly</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7157f41e83f2c5d924f5c5bafda04d1d" prot="public" virt="non-virtual"><scope>QuantLib::CPICashFlow</scope><name>freeze</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cash_flow_1ab13882da22762dd447e7047f01b6c332" prot="public" virt="virtual"><scope>QuantLib::CPICashFlow</scope><name>frequency</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cash_flow_1adfffa5ec99b28255f0ea4e3c5c28ba14" prot="protected" virt="non-virtual"><scope>QuantLib::CPICashFlow</scope><name>frequency_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7bb721fe00c6854e602758aba629ab77" prot="protected" virt="non-virtual"><scope>QuantLib::CPICashFlow</scope><name>frozen_</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1a66c2de51e1432baa466c614bf299f72e" prot="public" virt="virtual"><scope>QuantLib::CPICashFlow</scope><name>growthOnly</name></member>
      <member refid="class_quant_lib_1_1_cash_flow_1a42691c396f43dde0b5ed37f4a014b0e8" prot="public" virt="virtual"><scope>QuantLib::CPICashFlow</scope><name>hasOccurred</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1a73e1de9b0e5a46e0a30f73dbc95effb7" prot="public" virt="virtual"><scope>QuantLib::CPICashFlow</scope><name>index</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1a8a9443cbe70325951952f5c73b8d85f7" prot="public" virt="non-virtual"><scope>QuantLib::CPICashFlow</scope><name>IndexedCashFlow</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cash_flow_1adb463ff41d7c70ee7c457c3f497ea060" prot="public" virt="virtual"><scope>QuantLib::CPICashFlow</scope><name>indexFixing</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cash_flow_1ae148f6f6e1bc95447057172ae1edbeb1" prot="public" virt="virtual"><scope>QuantLib::CPICashFlow</scope><name>interpolation</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cash_flow_1a30e99c70ddc496885f732062a6772748" prot="protected" virt="non-virtual"><scope>QuantLib::CPICashFlow</scope><name>interpolation_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a0a7c5d42815a4e16ee2158e24dbfc748" prot="public" virt="non-virtual"><scope>QuantLib::CPICashFlow</scope><name>isCalculated</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::CPICashFlow</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a26f18f4ff7faaaebd8eae50e064b493e" prot="public" virt="non-virtual"><scope>QuantLib::CPICashFlow</scope><name>LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::CPICashFlow</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1a5635a246bb3c3cd1084a28cc0adf8a4d" prot="public" virt="virtual"><scope>QuantLib::CPICashFlow</scope><name>notional</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::CPICashFlow</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Event::"><scope>QuantLib::CPICashFlow</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Event::"><scope>QuantLib::CPICashFlow</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cash_flow_1a1913a39ba877906d0b202d44f329b5ae" prot="public" virt="non-virtual"><scope>QuantLib::CPICashFlow</scope><name>observationDate</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cash_flow_1aeddc444f38967f98e4d355109e4541a6" prot="protected" virt="non-virtual"><scope>QuantLib::CPICashFlow</scope><name>observationDate_</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cash_flow_1a8aebe083ea09ebeb5dae0a9c603b14cf" prot="public" virt="non-virtual"><scope>QuantLib::CPICashFlow</scope><name>observationLag</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cash_flow_1aa72961c379683c4846772b1343647450" prot="protected" virt="non-virtual"><scope>QuantLib::CPICashFlow</scope><name>observationLag_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::CPICashFlow</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::CPICashFlow</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::CPICashFlow</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Event::"><scope>QuantLib::CPICashFlow</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::QuantLib::Observer::"><scope>QuantLib::CPICashFlow</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1ae06de86092a73f3f442f7df40a17cecd" prot="public" virt="virtual"><scope>QuantLib::CPICashFlow</scope><name>performCalculations</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a70c9b24e50132408d8d9ce4f6674662a" prot="public" virt="non-virtual"><scope>QuantLib::CPICashFlow</scope><name>recalculate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::CPICashFlow</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::CPICashFlow</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_cash_flow_1a103a14e1657bd2d7cb6574bf6dcf96d0" prot="public" virt="non-virtual"><scope>QuantLib::CPICashFlow</scope><name>tradingExCoupon</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a2e0e4786666453024b9d4e0761f2770b" prot="public" virt="non-virtual"><scope>QuantLib::CPICashFlow</scope><name>unfreeze</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::CPICashFlow</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::CPICashFlow</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1adee2bf49be5c4c78736be293321a856d" prot="public" virt="virtual"><scope>QuantLib::CPICashFlow</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_cash_flow_1a4ac3d8fa6eeb8c307345ada96b25cecf" prot="public" virt="non-virtual"><scope>QuantLib::CPICashFlow</scope><name>~CashFlow</name></member>
      <member refid="class_quant_lib_1_1_event_1a26cef5942731bfb52ed77e74abdcfe9f" prot="public" virt="non-virtual"><scope>QuantLib::CPICashFlow</scope><name>~Event</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a9d719c43bb627177a90d7d12324a2d6e" prot="public" virt="non-virtual"><scope>QuantLib::CPICashFlow</scope><name>~LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::CPICashFlow</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::CPICashFlow</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

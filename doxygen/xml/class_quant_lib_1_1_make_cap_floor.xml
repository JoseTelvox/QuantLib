<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_make_cap_floor" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::MakeCapFloor</compoundname>
    <includes refid="makecapfloor_8hpp" local="no">makecapfloor.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_make_cap_floor_1a6ba008993dece0c66c948937fdc3bb56" prot="private" static="no" mutable="no">
        <type>CapFloor::Type</type>
        <definition>CapFloor::Type QuantLib::MakeCapFloor::capFloorType_</definition>
        <argsstring></argsstring>
        <name>capFloorType_</name>
        <qualifiedname>QuantLib::MakeCapFloor::capFloorType_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/makecapfloor.hpp" line="67" column="24" bodyfile="ql/instruments/makecapfloor.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_cap_floor_1aeb08821e3bec40c15dbf3a2d14bfeac5" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::MakeCapFloor::strike_</definition>
        <argsstring></argsstring>
        <name>strike_</name>
        <qualifiedname>QuantLib::MakeCapFloor::strike_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/makecapfloor.hpp" line="68" column="14" bodyfile="ql/instruments/makecapfloor.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_cap_floor_1aabc50189aa2f901a243ded978e170767" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::MakeCapFloor::firstCapletExcluded_</definition>
        <argsstring></argsstring>
        <name>firstCapletExcluded_</name>
        <qualifiedname>QuantLib::MakeCapFloor::firstCapletExcluded_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/makecapfloor.hpp" line="69" column="14" bodyfile="ql/instruments/makecapfloor.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_cap_floor_1a27c0f1620a77085df026aaca638265dc" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::MakeCapFloor::asOptionlet_</definition>
        <argsstring></argsstring>
        <name>asOptionlet_</name>
        <qualifiedname>QuantLib::MakeCapFloor::asOptionlet_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/makecapfloor.hpp" line="69" column="35" bodyfile="ql/instruments/makecapfloor.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_cap_floor_1a4a5da4ebb0189af4d569b611cf8a7c53" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_make_vanilla_swap" kindref="compound">MakeVanillaSwap</ref></type>
        <definition>MakeVanillaSwap QuantLib::MakeCapFloor::makeVanillaSwap_</definition>
        <argsstring></argsstring>
        <name>makeVanillaSwap_</name>
        <qualifiedname>QuantLib::MakeCapFloor::makeVanillaSwap_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/makecapfloor.hpp" line="71" column="25" bodyfile="ql/instruments/makecapfloor.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_cap_floor_1a4c9079ff18831e9547749b90916253f0" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_pricing_engine" kindref="compound">PricingEngine</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;PricingEngine&gt; QuantLib::MakeCapFloor::engine_</definition>
        <argsstring></argsstring>
        <name>engine_</name>
        <qualifiedname>QuantLib::MakeCapFloor::engine_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/makecapfloor.hpp" line="73" column="25" bodyfile="ql/instruments/makecapfloor.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_make_cap_floor_1aaabdad20ec869ae62841367381990149" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::MakeCapFloor::MakeCapFloor</definition>
        <argsstring>(CapFloor::Type capFloorType, const Period &amp;capFloorTenor, const ext::shared_ptr&lt; IborIndex &gt; &amp;iborIndex, Rate strike=Null&lt; Rate &gt;(), const Period &amp;forwardStart=0 *Days)</argsstring>
        <name>MakeCapFloor</name>
        <qualifiedname>QuantLib::MakeCapFloor::MakeCapFloor</qualifiedname>
        <param>
          <type>CapFloor::Type</type>
          <declname>capFloorType</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>capFloorTenor</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_ibor_index" kindref="compound">IborIndex</ref> &gt; &amp;</type>
          <declname>iborIndex</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
          <defval><ref refid="class_quant_lib_1_1_null" kindref="compound">Null</ref>&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;()</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>forwardStart</declname>
          <defval>0 *Days</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/makecapfloor.hpp" line="39" column="9" bodyfile="ql/instruments/makecapfloor.cpp" bodystart="27" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_cap_floor_1a67f7d759cddca19ed3a0bb47e1f66cb5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::MakeCapFloor::operator CapFloor</definition>
        <argsstring>() const</argsstring>
        <name>operator CapFloor</name>
        <qualifiedname>QuantLib::MakeCapFloor::operator CapFloor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/makecapfloor.hpp" line="45" column="9" bodyfile="ql/instruments/makecapfloor.cpp" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_cap_floor_1a344cd1b12b0a8a4757e51b0621bb6dd9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::MakeCapFloor::operator ext::shared_ptr&lt; CapFloor &gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator ext::shared_ptr&lt; CapFloor &gt;</name>
        <qualifiedname>QuantLib::MakeCapFloor::shared_ptr&lt; CapFloor &gt;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/makecapfloor.hpp" line="46" column="9" bodyfile="ql/instruments/makecapfloor.cpp" bodystart="45" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_cap_floor_1a370d213b5538367fe7cf8ba6b5f134bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_cap_floor" kindref="compound">MakeCapFloor</ref> &amp;</type>
        <definition>MakeCapFloor &amp; QuantLib::MakeCapFloor::withNominal</definition>
        <argsstring>(Real n)</argsstring>
        <name>withNominal</name>
        <qualifiedname>QuantLib::MakeCapFloor::withNominal</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/makecapfloor.hpp" line="48" column="22" bodyfile="ql/instruments/makecapfloor.cpp" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_cap_floor_1a12e7678b583748fd4b7903a0e20441b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_cap_floor" kindref="compound">MakeCapFloor</ref> &amp;</type>
        <definition>MakeCapFloor &amp; QuantLib::MakeCapFloor::withEffectiveDate</definition>
        <argsstring>(const Date &amp;effectiveDate, bool firstCapletExcluded)</argsstring>
        <name>withEffectiveDate</name>
        <qualifiedname>QuantLib::MakeCapFloor::withEffectiveDate</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>effectiveDate</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>firstCapletExcluded</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/makecapfloor.hpp" line="49" column="22" bodyfile="ql/instruments/makecapfloor.cpp" bodystart="86" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_cap_floor_1ab8c667ab871aad1859ff4768babe374c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_cap_floor" kindref="compound">MakeCapFloor</ref> &amp;</type>
        <definition>MakeCapFloor &amp; QuantLib::MakeCapFloor::withTenor</definition>
        <argsstring>(const Period &amp;t)</argsstring>
        <name>withTenor</name>
        <qualifiedname>QuantLib::MakeCapFloor::withTenor</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/makecapfloor.hpp" line="51" column="22" bodyfile="ql/instruments/makecapfloor.cpp" bodystart="93" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_cap_floor_1a0f954fb73c7b0b06803e049fa24cb265" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_cap_floor" kindref="compound">MakeCapFloor</ref> &amp;</type>
        <definition>MakeCapFloor &amp; QuantLib::MakeCapFloor::withCalendar</definition>
        <argsstring>(const Calendar &amp;cal)</argsstring>
        <name>withCalendar</name>
        <qualifiedname>QuantLib::MakeCapFloor::withCalendar</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>cal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/makecapfloor.hpp" line="52" column="22" bodyfile="ql/instruments/makecapfloor.cpp" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_cap_floor_1a62c66889cff5e8acd20b639f5fddc9b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_cap_floor" kindref="compound">MakeCapFloor</ref> &amp;</type>
        <definition>MakeCapFloor &amp; QuantLib::MakeCapFloor::withConvention</definition>
        <argsstring>(BusinessDayConvention bdc)</argsstring>
        <name>withConvention</name>
        <qualifiedname>QuantLib::MakeCapFloor::withConvention</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
          <declname>bdc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/makecapfloor.hpp" line="53" column="22" bodyfile="ql/instruments/makecapfloor.cpp" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_cap_floor_1aba808ccdc699efed7d0b30159c885e9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_cap_floor" kindref="compound">MakeCapFloor</ref> &amp;</type>
        <definition>MakeCapFloor &amp; QuantLib::MakeCapFloor::withTerminationDateConvention</definition>
        <argsstring>(BusinessDayConvention bdc)</argsstring>
        <name>withTerminationDateConvention</name>
        <qualifiedname>QuantLib::MakeCapFloor::withTerminationDateConvention</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
          <declname>bdc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/makecapfloor.hpp" line="54" column="22" bodyfile="ql/instruments/makecapfloor.cpp" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_cap_floor_1a5eb0bbe27ffb2e46fdfc22f6374c2f3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_cap_floor" kindref="compound">MakeCapFloor</ref> &amp;</type>
        <definition>MakeCapFloor &amp; QuantLib::MakeCapFloor::withRule</definition>
        <argsstring>(DateGeneration::Rule r)</argsstring>
        <name>withRule</name>
        <qualifiedname>QuantLib::MakeCapFloor::withRule</qualifiedname>
        <param>
          <type><ref refid="struct_quant_lib_1_1_date_generation_1a3fee9b3c834b0d3be240d05886ac2f6e" kindref="member">DateGeneration::Rule</ref></type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/makecapfloor.hpp" line="55" column="22" bodyfile="ql/instruments/makecapfloor.cpp" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_cap_floor_1a29d8856bdbeb0961e5c1725df138c12a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_cap_floor" kindref="compound">MakeCapFloor</ref> &amp;</type>
        <definition>MakeCapFloor &amp; QuantLib::MakeCapFloor::withEndOfMonth</definition>
        <argsstring>(bool flag=true)</argsstring>
        <name>withEndOfMonth</name>
        <qualifiedname>QuantLib::MakeCapFloor::withEndOfMonth</qualifiedname>
        <param>
          <type>bool</type>
          <declname>flag</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/makecapfloor.hpp" line="56" column="22" bodyfile="ql/instruments/makecapfloor.cpp" bodystart="123" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_cap_floor_1ac72cc951122dbea0864c97b4d4ec8290" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_cap_floor" kindref="compound">MakeCapFloor</ref> &amp;</type>
        <definition>MakeCapFloor &amp; QuantLib::MakeCapFloor::withFirstDate</definition>
        <argsstring>(const Date &amp;d)</argsstring>
        <name>withFirstDate</name>
        <qualifiedname>QuantLib::MakeCapFloor::withFirstDate</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/makecapfloor.hpp" line="57" column="22" bodyfile="ql/instruments/makecapfloor.cpp" bodystart="129" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_cap_floor_1a6f6d9cff43be4c1b133aeb75d7cbfdb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_cap_floor" kindref="compound">MakeCapFloor</ref> &amp;</type>
        <definition>MakeCapFloor &amp; QuantLib::MakeCapFloor::withNextToLastDate</definition>
        <argsstring>(const Date &amp;d)</argsstring>
        <name>withNextToLastDate</name>
        <qualifiedname>QuantLib::MakeCapFloor::withNextToLastDate</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/makecapfloor.hpp" line="58" column="22" bodyfile="ql/instruments/makecapfloor.cpp" bodystart="134" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_cap_floor_1a4cdd4f215935aba49379d614e1c3dcab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_cap_floor" kindref="compound">MakeCapFloor</ref> &amp;</type>
        <definition>MakeCapFloor &amp; QuantLib::MakeCapFloor::withDayCount</definition>
        <argsstring>(const DayCounter &amp;dc)</argsstring>
        <name>withDayCount</name>
        <qualifiedname>QuantLib::MakeCapFloor::withDayCount</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/makecapfloor.hpp" line="59" column="22" bodyfile="ql/instruments/makecapfloor.cpp" bodystart="139" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_cap_floor_1a1700c4ccf8307f9680f492616a690533" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_cap_floor" kindref="compound">MakeCapFloor</ref> &amp;</type>
        <definition>MakeCapFloor &amp; QuantLib::MakeCapFloor::asOptionlet</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>asOptionlet</name>
        <qualifiedname>QuantLib::MakeCapFloor::asOptionlet</qualifiedname>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>only get last coupon </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/makecapfloor.hpp" line="62" column="22" bodyfile="ql/instruments/makecapfloor.cpp" bodystart="144" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_cap_floor_1ab1268ddb0e16e87743c49e52476e0e01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_cap_floor" kindref="compound">MakeCapFloor</ref> &amp;</type>
        <definition>MakeCapFloor &amp; QuantLib::MakeCapFloor::withPricingEngine</definition>
        <argsstring>(const ext::shared_ptr&lt; PricingEngine &gt; &amp;engine)</argsstring>
        <name>withPricingEngine</name>
        <qualifiedname>QuantLib::MakeCapFloor::withPricingEngine</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_pricing_engine" kindref="compound">PricingEngine</ref> &gt; &amp;</type>
          <declname>engine</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/makecapfloor.hpp" line="64" column="22" bodyfile="ql/instruments/makecapfloor.cpp" bodystart="149" bodyend="153"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>helper class </para>
    </briefdescription>
    <detaileddescription>
<para>This class provides a more comfortable way to instantiate standard market cap and floor. </para>
    </detaileddescription>
    <location file="ql/instruments/makecapfloor.hpp" line="37" column="5" bodyfile="ql/instruments/makecapfloor.hpp" bodystart="37" bodyend="74"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_make_cap_floor_1a1700c4ccf8307f9680f492616a690533" prot="public" virt="non-virtual"><scope>QuantLib::MakeCapFloor</scope><name>asOptionlet</name></member>
      <member refid="class_quant_lib_1_1_make_cap_floor_1a27c0f1620a77085df026aaca638265dc" prot="private" virt="non-virtual"><scope>QuantLib::MakeCapFloor</scope><name>asOptionlet_</name></member>
      <member refid="class_quant_lib_1_1_make_cap_floor_1a6ba008993dece0c66c948937fdc3bb56" prot="private" virt="non-virtual"><scope>QuantLib::MakeCapFloor</scope><name>capFloorType_</name></member>
      <member refid="class_quant_lib_1_1_make_cap_floor_1a4c9079ff18831e9547749b90916253f0" prot="private" virt="non-virtual"><scope>QuantLib::MakeCapFloor</scope><name>engine_</name></member>
      <member refid="class_quant_lib_1_1_make_cap_floor_1aabc50189aa2f901a243ded978e170767" prot="private" virt="non-virtual"><scope>QuantLib::MakeCapFloor</scope><name>firstCapletExcluded_</name></member>
      <member refid="class_quant_lib_1_1_make_cap_floor_1aaabdad20ec869ae62841367381990149" prot="public" virt="non-virtual"><scope>QuantLib::MakeCapFloor</scope><name>MakeCapFloor</name></member>
      <member refid="class_quant_lib_1_1_make_cap_floor_1a4a5da4ebb0189af4d569b611cf8a7c53" prot="private" virt="non-virtual"><scope>QuantLib::MakeCapFloor</scope><name>makeVanillaSwap_</name></member>
      <member refid="class_quant_lib_1_1_make_cap_floor_1a67f7d759cddca19ed3a0bb47e1f66cb5" prot="public" virt="non-virtual"><scope>QuantLib::MakeCapFloor</scope><name>operator CapFloor</name></member>
      <member refid="class_quant_lib_1_1_make_cap_floor_1a344cd1b12b0a8a4757e51b0621bb6dd9" prot="public" virt="non-virtual"><scope>QuantLib::MakeCapFloor</scope><name>operator ext::shared_ptr&lt; CapFloor &gt;</name></member>
      <member refid="class_quant_lib_1_1_make_cap_floor_1aeb08821e3bec40c15dbf3a2d14bfeac5" prot="private" virt="non-virtual"><scope>QuantLib::MakeCapFloor</scope><name>strike_</name></member>
      <member refid="class_quant_lib_1_1_make_cap_floor_1a0f954fb73c7b0b06803e049fa24cb265" prot="public" virt="non-virtual"><scope>QuantLib::MakeCapFloor</scope><name>withCalendar</name></member>
      <member refid="class_quant_lib_1_1_make_cap_floor_1a62c66889cff5e8acd20b639f5fddc9b9" prot="public" virt="non-virtual"><scope>QuantLib::MakeCapFloor</scope><name>withConvention</name></member>
      <member refid="class_quant_lib_1_1_make_cap_floor_1a4cdd4f215935aba49379d614e1c3dcab" prot="public" virt="non-virtual"><scope>QuantLib::MakeCapFloor</scope><name>withDayCount</name></member>
      <member refid="class_quant_lib_1_1_make_cap_floor_1a12e7678b583748fd4b7903a0e20441b5" prot="public" virt="non-virtual"><scope>QuantLib::MakeCapFloor</scope><name>withEffectiveDate</name></member>
      <member refid="class_quant_lib_1_1_make_cap_floor_1a29d8856bdbeb0961e5c1725df138c12a" prot="public" virt="non-virtual"><scope>QuantLib::MakeCapFloor</scope><name>withEndOfMonth</name></member>
      <member refid="class_quant_lib_1_1_make_cap_floor_1ac72cc951122dbea0864c97b4d4ec8290" prot="public" virt="non-virtual"><scope>QuantLib::MakeCapFloor</scope><name>withFirstDate</name></member>
      <member refid="class_quant_lib_1_1_make_cap_floor_1a6f6d9cff43be4c1b133aeb75d7cbfdb7" prot="public" virt="non-virtual"><scope>QuantLib::MakeCapFloor</scope><name>withNextToLastDate</name></member>
      <member refid="class_quant_lib_1_1_make_cap_floor_1a370d213b5538367fe7cf8ba6b5f134bf" prot="public" virt="non-virtual"><scope>QuantLib::MakeCapFloor</scope><name>withNominal</name></member>
      <member refid="class_quant_lib_1_1_make_cap_floor_1ab1268ddb0e16e87743c49e52476e0e01" prot="public" virt="non-virtual"><scope>QuantLib::MakeCapFloor</scope><name>withPricingEngine</name></member>
      <member refid="class_quant_lib_1_1_make_cap_floor_1a5eb0bbe27ffb2e46fdfc22f6374c2f3a" prot="public" virt="non-virtual"><scope>QuantLib::MakeCapFloor</scope><name>withRule</name></member>
      <member refid="class_quant_lib_1_1_make_cap_floor_1ab8c667ab871aad1859ff4768babe374c" prot="public" virt="non-virtual"><scope>QuantLib::MakeCapFloor</scope><name>withTenor</name></member>
      <member refid="class_quant_lib_1_1_make_cap_floor_1aba808ccdc699efed7d0b30159c885e9f" prot="public" virt="non-virtual"><scope>QuantLib::MakeCapFloor</scope><name>withTerminationDateConvention</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

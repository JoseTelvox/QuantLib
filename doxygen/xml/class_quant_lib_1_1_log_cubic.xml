<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_log_cubic" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::LogCubic</compoundname>
    <derivedcompoundref refid="class_quant_lib_1_1_default_log_cubic" prot="public" virt="non-virtual">QuantLib::DefaultLogCubic</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_kruger_log" prot="public" virt="non-virtual">QuantLib::KrugerLog</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_monotonic_log_cubic" prot="public" virt="non-virtual">QuantLib::MonotonicLogCubic</derivedcompoundref>
    <includes refid="loginterpolation_8hpp" local="no">loginterpolation.hpp</includes>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_log_cubic_1a44eecd64001276616a91af91b932cb1b" prot="public" static="yes" mutable="no">
        <type>const bool</type>
        <definition>const bool QuantLib::LogCubic::global</definition>
        <argsstring></argsstring>
        <name>global</name>
        <qualifiedname>QuantLib::LogCubic::global</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/loginterpolation.hpp" line="118" column="27" bodyfile="ql/math/interpolations/loginterpolation.hpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_log_cubic_1aedb3beac3c1ab2bffad090d1059d1c52" prot="public" static="yes" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>const Size QuantLib::LogCubic::requiredPoints</definition>
        <argsstring></argsstring>
        <name>requiredPoints</name>
        <qualifiedname>QuantLib::LogCubic::requiredPoints</qualifiedname>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/loginterpolation.hpp" line="119" column="27" bodyfile="ql/math/interpolations/loginterpolation.hpp" bodystart="119" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_log_cubic_1a7b012bd7099a353e1dc8be40e01e86f3" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_cubic_interpolation_1a6897ea07ce6993b4df934091a3723d28" kindref="member">CubicInterpolation::DerivativeApprox</ref></type>
        <definition>CubicInterpolation::DerivativeApprox QuantLib::LogCubic::da_</definition>
        <argsstring></argsstring>
        <name>da_</name>
        <qualifiedname>QuantLib::LogCubic::da_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/loginterpolation.hpp" line="121" column="46" bodyfile="ql/math/interpolations/loginterpolation.hpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_log_cubic_1a5fb53b1181b245908ecb1b76e2f90c44" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::LogCubic::monotonic_</definition>
        <argsstring></argsstring>
        <name>monotonic_</name>
        <qualifiedname>QuantLib::LogCubic::monotonic_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/loginterpolation.hpp" line="122" column="14" bodyfile="ql/math/interpolations/loginterpolation.hpp" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_log_cubic_1ab361d311adf5293b8391f84b978b8750" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_cubic_interpolation_1ae300e9cdeef2bc60889b474f01eae4c2" kindref="member">CubicInterpolation::BoundaryCondition</ref></type>
        <definition>CubicInterpolation::BoundaryCondition QuantLib::LogCubic::leftType_</definition>
        <argsstring></argsstring>
        <name>leftType_</name>
        <qualifiedname>QuantLib::LogCubic::leftType_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/loginterpolation.hpp" line="123" column="47" bodyfile="ql/math/interpolations/loginterpolation.hpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_log_cubic_1a3a6e8538ceaf0e31dd28401d8d41dcf0" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_cubic_interpolation_1ae300e9cdeef2bc60889b474f01eae4c2" kindref="member">CubicInterpolation::BoundaryCondition</ref></type>
        <definition>CubicInterpolation::BoundaryCondition QuantLib::LogCubic::rightType_</definition>
        <argsstring></argsstring>
        <name>rightType_</name>
        <qualifiedname>QuantLib::LogCubic::rightType_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/loginterpolation.hpp" line="123" column="57" bodyfile="ql/math/interpolations/loginterpolation.hpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_log_cubic_1a94a2e28e59998d9e93cd1f9d971f0753" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::LogCubic::leftValue_</definition>
        <argsstring></argsstring>
        <name>leftValue_</name>
        <qualifiedname>QuantLib::LogCubic::leftValue_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/loginterpolation.hpp" line="124" column="14" bodyfile="ql/math/interpolations/loginterpolation.hpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_log_cubic_1a1424a65ea3a6cdedc294dc8f27dd4781" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::LogCubic::rightValue_</definition>
        <argsstring></argsstring>
        <name>rightValue_</name>
        <qualifiedname>QuantLib::LogCubic::rightValue_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/loginterpolation.hpp" line="124" column="25" bodyfile="ql/math/interpolations/loginterpolation.hpp" bodystart="124" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_log_cubic_1a66707207cb3ca02451d100fa18d43ab0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::LogCubic::LogCubic</definition>
        <argsstring>(CubicInterpolation::DerivativeApprox da, bool monotonic=true, CubicInterpolation::BoundaryCondition leftCondition=CubicInterpolation::SecondDerivative, Real leftConditionValue=0.0, CubicInterpolation::BoundaryCondition rightCondition=CubicInterpolation::SecondDerivative, Real rightConditionValue=0.0)</argsstring>
        <name>LogCubic</name>
        <qualifiedname>QuantLib::LogCubic::LogCubic</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_cubic_interpolation_1a6897ea07ce6993b4df934091a3723d28" kindref="member">CubicInterpolation::DerivativeApprox</ref></type>
          <declname>da</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>monotonic</declname>
          <defval>true</defval>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_cubic_interpolation_1ae300e9cdeef2bc60889b474f01eae4c2" kindref="member">CubicInterpolation::BoundaryCondition</ref></type>
          <declname>leftCondition</declname>
          <defval><ref refid="class_quant_lib_1_1_cubic_interpolation_1ae300e9cdeef2bc60889b474f01eae4c2af4b281a5218c4674a7539bf071bfca0d" kindref="member">CubicInterpolation::SecondDerivative</ref></defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>leftConditionValue</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_cubic_interpolation_1ae300e9cdeef2bc60889b474f01eae4c2" kindref="member">CubicInterpolation::BoundaryCondition</ref></type>
          <declname>rightCondition</declname>
          <defval><ref refid="class_quant_lib_1_1_cubic_interpolation_1ae300e9cdeef2bc60889b474f01eae4c2af4b281a5218c4674a7539bf071bfca0d" kindref="member">CubicInterpolation::SecondDerivative</ref></defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>rightConditionValue</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/loginterpolation.hpp" line="99" column="9" bodyfile="ql/math/interpolations/loginterpolation.hpp" bodystart="99" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_log_cubic_1afa39778d2ccc12ae1cf939b5dacddcad" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I1</type>
          </param>
          <param>
            <type>class I2</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_quant_lib_1_1_interpolation" kindref="compound">Interpolation</ref></type>
        <definition>Interpolation QuantLib::LogCubic::interpolate</definition>
        <argsstring>(const I1 &amp;xBegin, const I1 &amp;xEnd, const I2 &amp;yBegin) const</argsstring>
        <name>interpolate</name>
        <qualifiedname>QuantLib::LogCubic::interpolate</qualifiedname>
        <param>
          <type>const I1 &amp;</type>
          <declname>xBegin</declname>
        </param>
        <param>
          <type>const I1 &amp;</type>
          <declname>xEnd</declname>
        </param>
        <param>
          <type>const I2 &amp;</type>
          <declname>yBegin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/loginterpolation.hpp" line="111" column="23" bodyfile="ql/math/interpolations/loginterpolation.hpp" bodystart="111" bodyend="117"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>log-cubic interpolation factory and traits </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::DefaultLogCubic</label>
        <link refid="class_quant_lib_1_1_default_log_cubic"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::KrugerLog</label>
        <link refid="class_quant_lib_1_1_kruger_log"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::LogCubic</label>
        <link refid="class_quant_lib_1_1_log_cubic"/>
      </node>
      <node id="4">
        <label>QuantLib::MonotonicLogCubic</label>
        <link refid="class_quant_lib_1_1_monotonic_log_cubic"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="ql/math/interpolations/loginterpolation.hpp" line="97" column="5" bodyfile="ql/math/interpolations/loginterpolation.hpp" bodystart="97" bodyend="125"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_log_cubic_1a7b012bd7099a353e1dc8be40e01e86f3" prot="private" virt="non-virtual"><scope>QuantLib::LogCubic</scope><name>da_</name></member>
      <member refid="class_quant_lib_1_1_log_cubic_1a44eecd64001276616a91af91b932cb1b" prot="public" virt="non-virtual"><scope>QuantLib::LogCubic</scope><name>global</name></member>
      <member refid="class_quant_lib_1_1_log_cubic_1afa39778d2ccc12ae1cf939b5dacddcad" prot="public" virt="non-virtual"><scope>QuantLib::LogCubic</scope><name>interpolate</name></member>
      <member refid="class_quant_lib_1_1_log_cubic_1ab361d311adf5293b8391f84b978b8750" prot="private" virt="non-virtual"><scope>QuantLib::LogCubic</scope><name>leftType_</name></member>
      <member refid="class_quant_lib_1_1_log_cubic_1a94a2e28e59998d9e93cd1f9d971f0753" prot="private" virt="non-virtual"><scope>QuantLib::LogCubic</scope><name>leftValue_</name></member>
      <member refid="class_quant_lib_1_1_log_cubic_1a66707207cb3ca02451d100fa18d43ab0" prot="public" virt="non-virtual"><scope>QuantLib::LogCubic</scope><name>LogCubic</name></member>
      <member refid="class_quant_lib_1_1_log_cubic_1a5fb53b1181b245908ecb1b76e2f90c44" prot="private" virt="non-virtual"><scope>QuantLib::LogCubic</scope><name>monotonic_</name></member>
      <member refid="class_quant_lib_1_1_log_cubic_1aedb3beac3c1ab2bffad090d1059d1c52" prot="public" virt="non-virtual"><scope>QuantLib::LogCubic</scope><name>requiredPoints</name></member>
      <member refid="class_quant_lib_1_1_log_cubic_1a3a6e8538ceaf0e31dd28401d8d41dcf0" prot="private" virt="non-virtual"><scope>QuantLib::LogCubic</scope><name>rightType_</name></member>
      <member refid="class_quant_lib_1_1_log_cubic_1a1424a65ea3a6cdedc294dc8f27dd4781" prot="private" virt="non-virtual"><scope>QuantLib::LogCubic</scope><name>rightValue_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

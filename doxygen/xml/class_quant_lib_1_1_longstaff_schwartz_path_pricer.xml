<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_longstaff_schwartz_path_pricer" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::LongstaffSchwartzPathPricer</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_path_pricer" prot="public" virt="non-virtual">QuantLib::PathPricer&lt; PathType &gt;</basecompoundref>
    <includes refid="longstaffschwartzpathpricer_8hpp" local="no">longstaffschwartzpathpricer.hpp</includes>
    <templateparamlist>
      <param>
        <type>class PathType</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_quant_lib_1_1_longstaff_schwartz_path_pricer_1ae4296cb88d3861c0bf977dd2d5082462" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1_early_exercise_traits" kindref="compound">EarlyExerciseTraits</ref>&lt; PathType &gt;::StateType</type>
        <definition>typedef EarlyExerciseTraits&lt;PathType&gt;::StateType QuantLib::LongstaffSchwartzPathPricer&lt; PathType &gt;::StateType</definition>
        <argsstring></argsstring>
        <name>StateType</name>
        <qualifiedname>QuantLib::LongstaffSchwartzPathPricer::StateType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/montecarlo/longstaffschwartzpathpricer.hpp" line="55" column="58" bodyfile="ql/methods/montecarlo/longstaffschwartzpathpricer.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_longstaff_schwartz_path_pricer_1a7b83d90ffc7128f83d24fe7cfa3e3401" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::LongstaffSchwartzPathPricer&lt; PathType &gt;::calibrationPhase_</definition>
        <argsstring></argsstring>
        <name>calibrationPhase_</name>
        <qualifiedname>QuantLib::LongstaffSchwartzPathPricer::calibrationPhase_</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/montecarlo/longstaffschwartzpathpricer.hpp" line="71" column="14" bodyfile="ql/methods/montecarlo/longstaffschwartzpathpricer.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_longstaff_schwartz_path_pricer_1a119a7a3c399427d571cad93b143b7c05" prot="protected" static="no" mutable="no">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_early_exercise_path_pricer" kindref="compound">EarlyExercisePathPricer</ref>&lt; PathType &gt; &gt;</type>
        <definition>const ext::shared_ptr&lt;EarlyExercisePathPricer&lt;PathType&gt; &gt; QuantLib::LongstaffSchwartzPathPricer&lt; PathType &gt;::pathPricer_</definition>
        <argsstring></argsstring>
        <name>pathPricer_</name>
        <qualifiedname>QuantLib::LongstaffSchwartzPathPricer::pathPricer_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/montecarlo/longstaffschwartzpathpricer.hpp" line="73" column="13" bodyfile="ql/methods/montecarlo/longstaffschwartzpathpricer.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_longstaff_schwartz_path_pricer_1a82fc0c200bb594f31f420a96b9031870" prot="protected" static="no" mutable="yes">
        <type><ref refid="class_quant_lib_1_1_incremental_statistics" kindref="compound">QuantLib::IncrementalStatistics</ref></type>
        <definition>QuantLib::IncrementalStatistics QuantLib::LongstaffSchwartzPathPricer&lt; PathType &gt;::exerciseProbability_</definition>
        <argsstring></argsstring>
        <name>exerciseProbability_</name>
        <qualifiedname>QuantLib::LongstaffSchwartzPathPricer::exerciseProbability_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/montecarlo/longstaffschwartzpathpricer.hpp" line="75" column="49" bodyfile="ql/methods/montecarlo/longstaffschwartzpathpricer.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_longstaff_schwartz_path_pricer_1a999e3d2809d143681f5121401aeeeb64" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref>[]&gt;</type>
        <definition>std::unique_ptr&lt;Array[]&gt; QuantLib::LongstaffSchwartzPathPricer&lt; PathType &gt;::coeff_</definition>
        <argsstring></argsstring>
        <name>coeff_</name>
        <qualifiedname>QuantLib::LongstaffSchwartzPathPricer::coeff_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/montecarlo/longstaffschwartzpathpricer.hpp" line="77" column="25" bodyfile="ql/methods/montecarlo/longstaffschwartzpathpricer.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_longstaff_schwartz_path_pricer_1aa19cdc964106b9f3a7e031fff795fb9a" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="namespace_quant_lib_1a05e8e288a4bdedfe5b4e16d8cec14f1c" kindref="member">DiscountFactor</ref>[]&gt;</type>
        <definition>std::unique_ptr&lt;DiscountFactor[]&gt; QuantLib::LongstaffSchwartzPathPricer&lt; PathType &gt;::dF_</definition>
        <argsstring></argsstring>
        <name>dF_</name>
        <qualifiedname>QuantLib::LongstaffSchwartzPathPricer::dF_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/montecarlo/longstaffschwartzpathpricer.hpp" line="78" column="25" bodyfile="ql/methods/montecarlo/longstaffschwartzpathpricer.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_longstaff_schwartz_path_pricer_1a6572b13749fe223127d2953ec05c17dd" prot="protected" static="no" mutable="yes">
        <type>std::vector&lt; PathType &gt;</type>
        <definition>std::vector&lt;PathType&gt; QuantLib::LongstaffSchwartzPathPricer&lt; PathType &gt;::paths_</definition>
        <argsstring></argsstring>
        <name>paths_</name>
        <qualifiedname>QuantLib::LongstaffSchwartzPathPricer::paths_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/montecarlo/longstaffschwartzpathpricer.hpp" line="80" column="29" bodyfile="ql/methods/montecarlo/longstaffschwartzpathpricer.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_longstaff_schwartz_path_pricer_1a859ba433cc6172f740f465fc16cc0edf" prot="protected" static="no" mutable="no">
        <type>const std::vector&lt; std::function&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>(StateType)&gt; &gt;</type>
        <definition>const std::vector&lt;std::function&lt;Real(StateType)&gt; &gt; QuantLib::LongstaffSchwartzPathPricer&lt; PathType &gt;::v_</definition>
        <argsstring></argsstring>
        <name>v_</name>
        <qualifiedname>QuantLib::LongstaffSchwartzPathPricer::v_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/montecarlo/longstaffschwartzpathpricer.hpp" line="81" column="29" bodyfile="ql/methods/montecarlo/longstaffschwartzpathpricer.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_longstaff_schwartz_path_pricer_1a7543822becfbf5ea1a9f9e9806c0698e" prot="protected" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>const Size QuantLib::LongstaffSchwartzPathPricer&lt; PathType &gt;::len_</definition>
        <argsstring></argsstring>
        <name>len_</name>
        <qualifiedname>QuantLib::LongstaffSchwartzPathPricer::len_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/montecarlo/longstaffschwartzpathpricer.hpp" line="83" column="20" bodyfile="ql/methods/montecarlo/longstaffschwartzpathpricer.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_longstaff_schwartz_path_pricer_1a2ba4135c55599feaa74acc4fdcc86bee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::LongstaffSchwartzPathPricer&lt; PathType &gt;::LongstaffSchwartzPathPricer</definition>
        <argsstring>(const TimeGrid &amp;times, ext::shared_ptr&lt; EarlyExercisePathPricer&lt; PathType &gt; &gt;, const ext::shared_ptr&lt; YieldTermStructure &gt; &amp;termStructure)</argsstring>
        <name>LongstaffSchwartzPathPricer</name>
        <qualifiedname>QuantLib::LongstaffSchwartzPathPricer::LongstaffSchwartzPathPricer</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_time_grid" kindref="compound">TimeGrid</ref> &amp;</type>
          <declname>times</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_early_exercise_path_pricer" kindref="compound">EarlyExercisePathPricer</ref>&lt; PathType &gt; &gt;</type>
          <defname>pathPricer</defname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>termStructure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/montecarlo/longstaffschwartzpathpricer.hpp" line="57" column="9" bodyfile="ql/methods/montecarlo/longstaffschwartzpathpricer.hpp" bodystart="87" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_longstaff_schwartz_path_pricer_1afc577569458f14ad285dc49d905f1380" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::LongstaffSchwartzPathPricer&lt; PathType &gt;::operator()</definition>
        <argsstring>(const PathType &amp;path) const override</argsstring>
        <name>operator()</name>
        <qualifiedname>QuantLib::LongstaffSchwartzPathPricer::operator()</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_path_pricer_1a6527a5418c9d0f75fb414b3e0c42ddf8">operator()</reimplements>
        <param>
          <type>const PathType &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/montecarlo/longstaffschwartzpathpricer.hpp" line="61" column="14" bodyfile="ql/methods/montecarlo/longstaffschwartzpathpricer.hpp" bodystart="103" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_longstaff_schwartz_path_pricer_1ad1360108d24005c05af1facdf30c4b19" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::LongstaffSchwartzPathPricer&lt; PathType &gt;::calibrate</definition>
        <argsstring>()</argsstring>
        <name>calibrate</name>
        <qualifiedname>QuantLib::LongstaffSchwartzPathPricer::calibrate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/montecarlo/longstaffschwartzpathpricer.hpp" line="62" column="22" bodyfile="ql/methods/montecarlo/longstaffschwartzpathpricer.hpp" bodystart="143" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_longstaff_schwartz_path_pricer_1aa7d9103b892fc94e0f148b7042a54c94" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::LongstaffSchwartzPathPricer&lt; PathType &gt;::exerciseProbability</definition>
        <argsstring>() const</argsstring>
        <name>exerciseProbability</name>
        <qualifiedname>QuantLib::LongstaffSchwartzPathPricer::exerciseProbability</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/montecarlo/longstaffschwartzpathpricer.hpp" line="64" column="14" bodyfile="ql/methods/montecarlo/longstaffschwartzpathpricer.hpp" bodystart="209" bodyend="211"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_longstaff_schwartz_path_pricer_1a3114e11b8511790940a6769bcd95a40a" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void QuantLib::LongstaffSchwartzPathPricer&lt; PathType &gt;::post_processing</definition>
        <argsstring>(const Size i, const std::vector&lt; StateType &gt; &amp;state, const std::vector&lt; Real &gt; &amp;price, const std::vector&lt; Real &gt; &amp;exercise)</argsstring>
        <name>post_processing</name>
        <qualifiedname>QuantLib::LongstaffSchwartzPathPricer::post_processing</qualifiedname>
        <param>
          <type>const <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>const std::vector&lt; StateType &gt; &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>price</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>exercise</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/montecarlo/longstaffschwartzpathpricer.hpp" line="67" column="22" bodyfile="ql/methods/montecarlo/longstaffschwartzpathpricer.hpp" bodystart="67" bodyend="70"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Longstaff-Schwarz path pricer for early exercise options. </para>
    </briefdescription>
    <detaileddescription>
<para>References:</para>
<para>Francis Longstaff, Eduardo Schwartz, 2001. Valuing American Options by Simulation: A Simple Least-Squares Approach, The Review of Financial Studies, Volume 14, No. 1, 113-147</para>
<para><xrefsect id="test_1_test000083"><xreftitle>Test</xreftitle><xrefdescription><para>the correctness of the returned value is tested by reproducing results available in web/literature </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::LongstaffSchwartzPathPricer&lt; PathType &gt;</label>
        <link refid="class_quant_lib_1_1_longstaff_schwartz_path_pricer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::PathPricer&lt; PathType, ValueType &gt;</label>
        <link refid="class_quant_lib_1_1_path_pricer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>QuantLib::IncrementalStatistics</label>
        <link refid="class_quant_lib_1_1_incremental_statistics"/>
      </node>
      <node id="1">
        <label>QuantLib::LongstaffSchwartzPathPricer&lt; PathType &gt;</label>
        <link refid="class_quant_lib_1_1_longstaff_schwartz_path_pricer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>exerciseProbability_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::PathPricer&lt; PathType, ValueType &gt;</label>
        <link refid="class_quant_lib_1_1_path_pricer"/>
      </node>
    </collaborationgraph>
    <location file="ql/methods/montecarlo/longstaffschwartzpathpricer.hpp" line="53" column="5" bodyfile="ql/methods/montecarlo/longstaffschwartzpathpricer.hpp" bodystart="53" bodyend="84"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_longstaff_schwartz_path_pricer_1ad1360108d24005c05af1facdf30c4b19" prot="public" virt="virtual"><scope>QuantLib::LongstaffSchwartzPathPricer</scope><name>calibrate</name></member>
      <member refid="class_quant_lib_1_1_longstaff_schwartz_path_pricer_1a7b83d90ffc7128f83d24fe7cfa3e3401" prot="protected" virt="non-virtual"><scope>QuantLib::LongstaffSchwartzPathPricer</scope><name>calibrationPhase_</name></member>
      <member refid="class_quant_lib_1_1_longstaff_schwartz_path_pricer_1a999e3d2809d143681f5121401aeeeb64" prot="protected" virt="non-virtual"><scope>QuantLib::LongstaffSchwartzPathPricer</scope><name>coeff_</name></member>
      <member refid="class_quant_lib_1_1_longstaff_schwartz_path_pricer_1aa19cdc964106b9f3a7e031fff795fb9a" prot="protected" virt="non-virtual"><scope>QuantLib::LongstaffSchwartzPathPricer</scope><name>dF_</name></member>
      <member refid="class_quant_lib_1_1_longstaff_schwartz_path_pricer_1aa7d9103b892fc94e0f148b7042a54c94" prot="public" virt="non-virtual"><scope>QuantLib::LongstaffSchwartzPathPricer</scope><name>exerciseProbability</name></member>
      <member refid="class_quant_lib_1_1_longstaff_schwartz_path_pricer_1a82fc0c200bb594f31f420a96b9031870" prot="protected" virt="non-virtual"><scope>QuantLib::LongstaffSchwartzPathPricer</scope><name>exerciseProbability_</name></member>
      <member refid="class_quant_lib_1_1_longstaff_schwartz_path_pricer_1a7543822becfbf5ea1a9f9e9806c0698e" prot="protected" virt="non-virtual"><scope>QuantLib::LongstaffSchwartzPathPricer</scope><name>len_</name></member>
      <member refid="class_quant_lib_1_1_longstaff_schwartz_path_pricer_1a2ba4135c55599feaa74acc4fdcc86bee" prot="public" virt="non-virtual"><scope>QuantLib::LongstaffSchwartzPathPricer</scope><name>LongstaffSchwartzPathPricer</name></member>
      <member refid="class_quant_lib_1_1_longstaff_schwartz_path_pricer_1afc577569458f14ad285dc49d905f1380" prot="public" virt="virtual"><scope>QuantLib::LongstaffSchwartzPathPricer</scope><name>operator()</name></member>
      <member refid="class_quant_lib_1_1_longstaff_schwartz_path_pricer_1a119a7a3c399427d571cad93b143b7c05" prot="protected" virt="non-virtual"><scope>QuantLib::LongstaffSchwartzPathPricer</scope><name>pathPricer_</name></member>
      <member refid="class_quant_lib_1_1_longstaff_schwartz_path_pricer_1a6572b13749fe223127d2953ec05c17dd" prot="protected" virt="non-virtual"><scope>QuantLib::LongstaffSchwartzPathPricer</scope><name>paths_</name></member>
      <member refid="class_quant_lib_1_1_longstaff_schwartz_path_pricer_1a3114e11b8511790940a6769bcd95a40a" prot="protected" virt="virtual"><scope>QuantLib::LongstaffSchwartzPathPricer</scope><name>post_processing</name></member>
      <member refid="class_quant_lib_1_1_path_pricer_1afa997df9860dc8a02a45baad373deebc" prot="public" virt="non-virtual"><scope>QuantLib::LongstaffSchwartzPathPricer</scope><name>result_type</name></member>
      <member refid="class_quant_lib_1_1_longstaff_schwartz_path_pricer_1ae4296cb88d3861c0bf977dd2d5082462" prot="public" virt="non-virtual"><scope>QuantLib::LongstaffSchwartzPathPricer</scope><name>StateType</name></member>
      <member refid="class_quant_lib_1_1_longstaff_schwartz_path_pricer_1a859ba433cc6172f740f465fc16cc0edf" prot="protected" virt="non-virtual"><scope>QuantLib::LongstaffSchwartzPathPricer</scope><name>v_</name></member>
      <member refid="class_quant_lib_1_1_path_pricer_1a44f00712e2b2be3dc71b07d8e31e6119" prot="public" virt="virtual"><scope>QuantLib::LongstaffSchwartzPathPricer</scope><name>~PathPricer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

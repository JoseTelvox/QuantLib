<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_nine_point_linear_op" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::NinePointLinearOp</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_fdm_linear_op" prot="public" virt="non-virtual">QuantLib::FdmLinearOp</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_second_order_mixed_derivative_op" prot="public" virt="non-virtual">QuantLib::SecondOrderMixedDerivativeOp</derivedcompoundref>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_nine_point_linear_op_1ab04d570213190731051854de7f4b3973" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::NinePointLinearOp::d0_</definition>
        <argsstring></argsstring>
        <name>d0_</name>
        <qualifiedname>QuantLib::NinePointLinearOp::d0_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" line="57" column="14" bodyfile="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_nine_point_linear_op_1a9a4f9c01482ac5ef97dc4e285226a92f" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::NinePointLinearOp::d1_</definition>
        <argsstring></argsstring>
        <name>d1_</name>
        <qualifiedname>QuantLib::NinePointLinearOp::d1_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" line="57" column="18" bodyfile="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_nine_point_linear_op_1ad5c15438ccf0fe8aca91efafb1162d81" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref>[]&gt;</type>
        <definition>std::unique_ptr&lt;Size[]&gt; QuantLib::NinePointLinearOp::i00_</definition>
        <argsstring></argsstring>
        <name>i00_</name>
        <qualifiedname>QuantLib::NinePointLinearOp::i00_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" line="58" column="25" bodyfile="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_nine_point_linear_op_1aaea138ce1f03d1d25702e7d057d5b2d8" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref>[]&gt;</type>
        <definition>std::unique_ptr&lt;Size[]&gt; QuantLib::NinePointLinearOp::i10_</definition>
        <argsstring></argsstring>
        <name>i10_</name>
        <qualifiedname>QuantLib::NinePointLinearOp::i10_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" line="58" column="30" bodyfile="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_nine_point_linear_op_1a7319ceafa11d07a706f89c9b51dc4c8b" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref>[]&gt;</type>
        <definition>std::unique_ptr&lt;Size[]&gt; QuantLib::NinePointLinearOp::i20_</definition>
        <argsstring></argsstring>
        <name>i20_</name>
        <qualifiedname>QuantLib::NinePointLinearOp::i20_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" line="58" column="35" bodyfile="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_nine_point_linear_op_1a85e182f868ae8826b548724194472cf0" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref>[]&gt;</type>
        <definition>std::unique_ptr&lt;Size[]&gt; QuantLib::NinePointLinearOp::i01_</definition>
        <argsstring></argsstring>
        <name>i01_</name>
        <qualifiedname>QuantLib::NinePointLinearOp::i01_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" line="59" column="25" bodyfile="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_nine_point_linear_op_1a915a5c208766b2a423a3d716266db9a7" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref>[]&gt;</type>
        <definition>std::unique_ptr&lt;Size[]&gt; QuantLib::NinePointLinearOp::i21_</definition>
        <argsstring></argsstring>
        <name>i21_</name>
        <qualifiedname>QuantLib::NinePointLinearOp::i21_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" line="59" column="30" bodyfile="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_nine_point_linear_op_1a137c45e1443823a43bfbe700caf8b11a" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref>[]&gt;</type>
        <definition>std::unique_ptr&lt;Size[]&gt; QuantLib::NinePointLinearOp::i02_</definition>
        <argsstring></argsstring>
        <name>i02_</name>
        <qualifiedname>QuantLib::NinePointLinearOp::i02_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" line="60" column="25" bodyfile="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_nine_point_linear_op_1ad307714a15cc2a34dffb460052f45c0a" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref>[]&gt;</type>
        <definition>std::unique_ptr&lt;Size[]&gt; QuantLib::NinePointLinearOp::i12_</definition>
        <argsstring></argsstring>
        <name>i12_</name>
        <qualifiedname>QuantLib::NinePointLinearOp::i12_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" line="60" column="30" bodyfile="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_nine_point_linear_op_1a25a28cd3c59ca2f8f621b01d9f7ff657" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref>[]&gt;</type>
        <definition>std::unique_ptr&lt;Size[]&gt; QuantLib::NinePointLinearOp::i22_</definition>
        <argsstring></argsstring>
        <name>i22_</name>
        <qualifiedname>QuantLib::NinePointLinearOp::i22_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" line="60" column="35" bodyfile="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_nine_point_linear_op_1a0033c2e119530066233d523bbeb9d5de" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>[]&gt;</type>
        <definition>std::unique_ptr&lt;Real[]&gt; QuantLib::NinePointLinearOp::a00_</definition>
        <argsstring></argsstring>
        <name>a00_</name>
        <qualifiedname>QuantLib::NinePointLinearOp::a00_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" line="61" column="25" bodyfile="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_nine_point_linear_op_1a072679b8de927f764b867a43d63a9b73" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>[]&gt;</type>
        <definition>std::unique_ptr&lt;Real[]&gt; QuantLib::NinePointLinearOp::a10_</definition>
        <argsstring></argsstring>
        <name>a10_</name>
        <qualifiedname>QuantLib::NinePointLinearOp::a10_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" line="61" column="30" bodyfile="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_nine_point_linear_op_1afb8f0c1d09a61f3c05a1aa2b18870c73" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>[]&gt;</type>
        <definition>std::unique_ptr&lt;Real[]&gt; QuantLib::NinePointLinearOp::a20_</definition>
        <argsstring></argsstring>
        <name>a20_</name>
        <qualifiedname>QuantLib::NinePointLinearOp::a20_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" line="61" column="35" bodyfile="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_nine_point_linear_op_1aeb9641951b11599e47e9edc9cf91d589" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>[]&gt;</type>
        <definition>std::unique_ptr&lt;Real[]&gt; QuantLib::NinePointLinearOp::a01_</definition>
        <argsstring></argsstring>
        <name>a01_</name>
        <qualifiedname>QuantLib::NinePointLinearOp::a01_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" line="62" column="25" bodyfile="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_nine_point_linear_op_1a630cc333ec66733ae745786f337663da" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>[]&gt;</type>
        <definition>std::unique_ptr&lt;Real[]&gt; QuantLib::NinePointLinearOp::a11_</definition>
        <argsstring></argsstring>
        <name>a11_</name>
        <qualifiedname>QuantLib::NinePointLinearOp::a11_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" line="62" column="30" bodyfile="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_nine_point_linear_op_1aa6285f7fe6cdd5a4a185538ab401963b" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>[]&gt;</type>
        <definition>std::unique_ptr&lt;Real[]&gt; QuantLib::NinePointLinearOp::a21_</definition>
        <argsstring></argsstring>
        <name>a21_</name>
        <qualifiedname>QuantLib::NinePointLinearOp::a21_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" line="62" column="35" bodyfile="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_nine_point_linear_op_1a4d5d37f9c6e61828efc1e4c50c386bf8" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>[]&gt;</type>
        <definition>std::unique_ptr&lt;Real[]&gt; QuantLib::NinePointLinearOp::a02_</definition>
        <argsstring></argsstring>
        <name>a02_</name>
        <qualifiedname>QuantLib::NinePointLinearOp::a02_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" line="63" column="25" bodyfile="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_nine_point_linear_op_1ada82c155ea8cb089c3a558ee0a2496ee" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>[]&gt;</type>
        <definition>std::unique_ptr&lt;Real[]&gt; QuantLib::NinePointLinearOp::a12_</definition>
        <argsstring></argsstring>
        <name>a12_</name>
        <qualifiedname>QuantLib::NinePointLinearOp::a12_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" line="63" column="30" bodyfile="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_nine_point_linear_op_1a4fd342df652bf074196cab3445f6831f" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>[]&gt;</type>
        <definition>std::unique_ptr&lt;Real[]&gt; QuantLib::NinePointLinearOp::a22_</definition>
        <argsstring></argsstring>
        <name>a22_</name>
        <qualifiedname>QuantLib::NinePointLinearOp::a22_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" line="63" column="35" bodyfile="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_nine_point_linear_op_1af8013e4a2a2d211e1ea16818a86a6a05" prot="protected" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_fdm_mesher" kindref="compound">FdmMesher</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;FdmMesher&gt; QuantLib::NinePointLinearOp::mesher_</definition>
        <argsstring></argsstring>
        <name>mesher_</name>
        <qualifiedname>QuantLib::NinePointLinearOp::mesher_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" line="65" column="25" bodyfile="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_nine_point_linear_op_1a61bb0125b35ca43029b8be15685ae81d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::NinePointLinearOp::NinePointLinearOp</definition>
        <argsstring>(Size d0, Size d1, const ext::shared_ptr&lt; FdmMesher &gt; &amp;mesher)</argsstring>
        <name>NinePointLinearOp</name>
        <qualifiedname>QuantLib::NinePointLinearOp::NinePointLinearOp</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>d0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>d1</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_fdm_mesher" kindref="compound">FdmMesher</ref> &gt; &amp;</type>
          <declname>mesher</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" line="39" column="9" bodyfile="ql/methods/finitedifferences/operators/ninepointlinearop.cpp" bodystart="28" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_nine_point_linear_op_1ac39ca6a8a7a087e2156f1f9c9b284b2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::NinePointLinearOp::NinePointLinearOp</definition>
        <argsstring>(const NinePointLinearOp &amp;m)</argsstring>
        <name>NinePointLinearOp</name>
        <qualifiedname>QuantLib::NinePointLinearOp::NinePointLinearOp</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_nine_point_linear_op" kindref="compound">NinePointLinearOp</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" line="41" column="9" bodyfile="ql/methods/finitedifferences/operators/ninepointlinearop.cpp" bodystart="70" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_nine_point_linear_op_1a98c75f154beaaa3c597369a33c5e5125" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::NinePointLinearOp::NinePointLinearOp</definition>
        <argsstring>(NinePointLinearOp &amp;&amp;m) noexcept</argsstring>
        <name>NinePointLinearOp</name>
        <qualifiedname>QuantLib::NinePointLinearOp::NinePointLinearOp</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_nine_point_linear_op" kindref="compound">NinePointLinearOp</ref> &amp;&amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" line="42" column="9" bodyfile="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_nine_point_linear_op_1ab11c56c2ca6430456767b4a83062cb42" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_nine_point_linear_op" kindref="compound">NinePointLinearOp</ref> &amp;</type>
        <definition>NinePointLinearOp &amp; QuantLib::NinePointLinearOp::operator=</definition>
        <argsstring>(const NinePointLinearOp &amp;m)</argsstring>
        <name>operator=</name>
        <qualifiedname>QuantLib::NinePointLinearOp::operator=</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_nine_point_linear_op" kindref="compound">NinePointLinearOp</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" line="43" column="27" bodyfile="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" bodystart="73" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_nine_point_linear_op_1a44d3a64fd57dc301b3a3e63c5bc25747" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_nine_point_linear_op" kindref="compound">NinePointLinearOp</ref> &amp;</type>
        <definition>NinePointLinearOp &amp; QuantLib::NinePointLinearOp::operator=</definition>
        <argsstring>(NinePointLinearOp &amp;&amp;m) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>QuantLib::NinePointLinearOp::operator=</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_nine_point_linear_op" kindref="compound">NinePointLinearOp</ref> &amp;&amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" line="44" column="27" bodyfile="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_nine_point_linear_op_1a4bc5d799cbfe75326d4f96d3bde13fd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::NinePointLinearOp::~NinePointLinearOp</definition>
        <argsstring>() override=default</argsstring>
        <name>~NinePointLinearOp</name>
        <qualifiedname>QuantLib::NinePointLinearOp::~NinePointLinearOp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" line="45" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_nine_point_linear_op_1aa26fc3c95da19792955a1f5f4bc6ff3e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::NinePointLinearOp::apply</definition>
        <argsstring>(const Array &amp;r) const override</argsstring>
        <name>apply</name>
        <qualifiedname>QuantLib::NinePointLinearOp::apply</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_1a9d59d8bb3597206db60f61c3f448c211">apply</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" line="47" column="15" bodyfile="ql/methods/finitedifferences/operators/ninepointlinearop.cpp" bodystart="110" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_nine_point_linear_op_1ac43876382ac33645d0c6c188eee1e146" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_nine_point_linear_op" kindref="compound">NinePointLinearOp</ref></type>
        <definition>NinePointLinearOp QuantLib::NinePointLinearOp::mult</definition>
        <argsstring>(const Array &amp;u) const</argsstring>
        <name>mult</name>
        <qualifiedname>QuantLib::NinePointLinearOp::mult</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" line="48" column="27" bodyfile="ql/methods/finitedifferences/operators/ninepointlinearop.cpp" bodystart="159" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_nine_point_linear_op_1a8bf281179dcff9a900612f230f56e919" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::NinePointLinearOp::swap</definition>
        <argsstring>(NinePointLinearOp &amp;m) noexcept</argsstring>
        <name>swap</name>
        <qualifiedname>QuantLib::NinePointLinearOp::swap</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_nine_point_linear_op" kindref="compound">NinePointLinearOp</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" line="50" column="14" bodyfile="ql/methods/finitedifferences/operators/ninepointlinearop.cpp" bodystart="177" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_nine_point_linear_op_1ac57c75b36c1a7db4fb8b8c0cfe539c19" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>SparseMatrix</type>
        <definition>SparseMatrix QuantLib::NinePointLinearOp::toMatrix</definition>
        <argsstring>() const override</argsstring>
        <name>toMatrix</name>
        <qualifiedname>QuantLib::NinePointLinearOp::toMatrix</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_1a32b6761dc11909646700747d33ef710c">toMatrix</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" line="52" column="22" bodyfile="ql/methods/finitedifferences/operators/ninepointlinearop.cpp" bodystart="139" bodyend="156"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_nine_point_linear_op_1abe34f170d3d710263e42513994611ba7" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::NinePointLinearOp::NinePointLinearOp</definition>
        <argsstring>()=default</argsstring>
        <name>NinePointLinearOp</name>
        <qualifiedname>QuantLib::NinePointLinearOp::NinePointLinearOp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" line="55" column="9"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::FdmLinearOp</label>
        <link refid="class_quant_lib_1_1_fdm_linear_op"/>
      </node>
      <node id="1">
        <label>QuantLib::NinePointLinearOp</label>
        <link refid="class_quant_lib_1_1_nine_point_linear_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::SecondOrderMixedDerivativeOp</label>
        <link refid="class_quant_lib_1_1_second_order_mixed_derivative_op"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::FdmLinearOp</label>
        <link refid="class_quant_lib_1_1_fdm_linear_op"/>
      </node>
      <node id="1">
        <label>QuantLib::NinePointLinearOp</label>
        <link refid="class_quant_lib_1_1_nine_point_linear_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" line="37" column="5" bodyfile="ql/methods/finitedifferences/operators/ninepointlinearop.hpp" bodystart="37" bodyend="66"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_nine_point_linear_op_1a0033c2e119530066233d523bbeb9d5de" prot="protected" virt="non-virtual"><scope>QuantLib::NinePointLinearOp</scope><name>a00_</name></member>
      <member refid="class_quant_lib_1_1_nine_point_linear_op_1aeb9641951b11599e47e9edc9cf91d589" prot="protected" virt="non-virtual"><scope>QuantLib::NinePointLinearOp</scope><name>a01_</name></member>
      <member refid="class_quant_lib_1_1_nine_point_linear_op_1a4d5d37f9c6e61828efc1e4c50c386bf8" prot="protected" virt="non-virtual"><scope>QuantLib::NinePointLinearOp</scope><name>a02_</name></member>
      <member refid="class_quant_lib_1_1_nine_point_linear_op_1a072679b8de927f764b867a43d63a9b73" prot="protected" virt="non-virtual"><scope>QuantLib::NinePointLinearOp</scope><name>a10_</name></member>
      <member refid="class_quant_lib_1_1_nine_point_linear_op_1a630cc333ec66733ae745786f337663da" prot="protected" virt="non-virtual"><scope>QuantLib::NinePointLinearOp</scope><name>a11_</name></member>
      <member refid="class_quant_lib_1_1_nine_point_linear_op_1ada82c155ea8cb089c3a558ee0a2496ee" prot="protected" virt="non-virtual"><scope>QuantLib::NinePointLinearOp</scope><name>a12_</name></member>
      <member refid="class_quant_lib_1_1_nine_point_linear_op_1afb8f0c1d09a61f3c05a1aa2b18870c73" prot="protected" virt="non-virtual"><scope>QuantLib::NinePointLinearOp</scope><name>a20_</name></member>
      <member refid="class_quant_lib_1_1_nine_point_linear_op_1aa6285f7fe6cdd5a4a185538ab401963b" prot="protected" virt="non-virtual"><scope>QuantLib::NinePointLinearOp</scope><name>a21_</name></member>
      <member refid="class_quant_lib_1_1_nine_point_linear_op_1a4fd342df652bf074196cab3445f6831f" prot="protected" virt="non-virtual"><scope>QuantLib::NinePointLinearOp</scope><name>a22_</name></member>
      <member refid="class_quant_lib_1_1_nine_point_linear_op_1aa26fc3c95da19792955a1f5f4bc6ff3e" prot="public" virt="virtual"><scope>QuantLib::NinePointLinearOp</scope><name>apply</name></member>
      <member refid="class_quant_lib_1_1_fdm_linear_op_1af55693593c0cf7e885c67fd848f76e49" prot="public" virt="non-virtual"><scope>QuantLib::NinePointLinearOp</scope><name>array_type</name></member>
      <member refid="class_quant_lib_1_1_nine_point_linear_op_1ab04d570213190731051854de7f4b3973" prot="protected" virt="non-virtual"><scope>QuantLib::NinePointLinearOp</scope><name>d0_</name></member>
      <member refid="class_quant_lib_1_1_nine_point_linear_op_1a9a4f9c01482ac5ef97dc4e285226a92f" prot="protected" virt="non-virtual"><scope>QuantLib::NinePointLinearOp</scope><name>d1_</name></member>
      <member refid="class_quant_lib_1_1_nine_point_linear_op_1ad5c15438ccf0fe8aca91efafb1162d81" prot="protected" virt="non-virtual"><scope>QuantLib::NinePointLinearOp</scope><name>i00_</name></member>
      <member refid="class_quant_lib_1_1_nine_point_linear_op_1a85e182f868ae8826b548724194472cf0" prot="protected" virt="non-virtual"><scope>QuantLib::NinePointLinearOp</scope><name>i01_</name></member>
      <member refid="class_quant_lib_1_1_nine_point_linear_op_1a137c45e1443823a43bfbe700caf8b11a" prot="protected" virt="non-virtual"><scope>QuantLib::NinePointLinearOp</scope><name>i02_</name></member>
      <member refid="class_quant_lib_1_1_nine_point_linear_op_1aaea138ce1f03d1d25702e7d057d5b2d8" prot="protected" virt="non-virtual"><scope>QuantLib::NinePointLinearOp</scope><name>i10_</name></member>
      <member refid="class_quant_lib_1_1_nine_point_linear_op_1ad307714a15cc2a34dffb460052f45c0a" prot="protected" virt="non-virtual"><scope>QuantLib::NinePointLinearOp</scope><name>i12_</name></member>
      <member refid="class_quant_lib_1_1_nine_point_linear_op_1a7319ceafa11d07a706f89c9b51dc4c8b" prot="protected" virt="non-virtual"><scope>QuantLib::NinePointLinearOp</scope><name>i20_</name></member>
      <member refid="class_quant_lib_1_1_nine_point_linear_op_1a915a5c208766b2a423a3d716266db9a7" prot="protected" virt="non-virtual"><scope>QuantLib::NinePointLinearOp</scope><name>i21_</name></member>
      <member refid="class_quant_lib_1_1_nine_point_linear_op_1a25a28cd3c59ca2f8f621b01d9f7ff657" prot="protected" virt="non-virtual"><scope>QuantLib::NinePointLinearOp</scope><name>i22_</name></member>
      <member refid="class_quant_lib_1_1_nine_point_linear_op_1af8013e4a2a2d211e1ea16818a86a6a05" prot="protected" virt="non-virtual"><scope>QuantLib::NinePointLinearOp</scope><name>mesher_</name></member>
      <member refid="class_quant_lib_1_1_nine_point_linear_op_1ac43876382ac33645d0c6c188eee1e146" prot="public" virt="non-virtual"><scope>QuantLib::NinePointLinearOp</scope><name>mult</name></member>
      <member refid="class_quant_lib_1_1_nine_point_linear_op_1a61bb0125b35ca43029b8be15685ae81d" prot="public" virt="non-virtual"><scope>QuantLib::NinePointLinearOp</scope><name>NinePointLinearOp</name></member>
      <member refid="class_quant_lib_1_1_nine_point_linear_op_1ac39ca6a8a7a087e2156f1f9c9b284b2a" prot="public" virt="non-virtual"><scope>QuantLib::NinePointLinearOp</scope><name>NinePointLinearOp</name></member>
      <member refid="class_quant_lib_1_1_nine_point_linear_op_1a98c75f154beaaa3c597369a33c5e5125" prot="public" virt="non-virtual"><scope>QuantLib::NinePointLinearOp</scope><name>NinePointLinearOp</name></member>
      <member refid="class_quant_lib_1_1_nine_point_linear_op_1abe34f170d3d710263e42513994611ba7" prot="protected" virt="non-virtual"><scope>QuantLib::NinePointLinearOp</scope><name>NinePointLinearOp</name></member>
      <member refid="class_quant_lib_1_1_nine_point_linear_op_1ab11c56c2ca6430456767b4a83062cb42" prot="public" virt="non-virtual"><scope>QuantLib::NinePointLinearOp</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_nine_point_linear_op_1a44d3a64fd57dc301b3a3e63c5bc25747" prot="public" virt="non-virtual"><scope>QuantLib::NinePointLinearOp</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_nine_point_linear_op_1a8bf281179dcff9a900612f230f56e919" prot="public" virt="non-virtual"><scope>QuantLib::NinePointLinearOp</scope><name>swap</name></member>
      <member refid="class_quant_lib_1_1_nine_point_linear_op_1ac57c75b36c1a7db4fb8b8c0cfe539c19" prot="public" virt="virtual"><scope>QuantLib::NinePointLinearOp</scope><name>toMatrix</name></member>
      <member refid="class_quant_lib_1_1_fdm_linear_op_1aa6f29eb6144a1848c73c21e392f023e4" prot="public" virt="virtual"><scope>QuantLib::NinePointLinearOp</scope><name>~FdmLinearOp</name></member>
      <member refid="class_quant_lib_1_1_nine_point_linear_op_1a4bc5d799cbfe75326d4f96d3bde13fd2" prot="public" virt="non-virtual"><scope>QuantLib::NinePointLinearOp</scope><name>~NinePointLinearOp</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_path_generator" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::PathGenerator</compoundname>
    <includes refid="pathgenerator_8hpp" local="no">pathgenerator.hpp</includes>
    <templateparamlist>
      <param>
        <type>class GSG</type>
      </param>
    </templateparamlist>
    <sectiondef kind="user-defined">
      <header>inspectors</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_path_generator_1aceae9cf6fdd96fc234a70b48d99c1d9b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::PathGenerator&lt; GSG &gt;::brownianBridge_</definition>
        <argsstring></argsstring>
        <name>brownianBridge_</name>
        <qualifiedname>QuantLib::PathGenerator::brownianBridge_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/montecarlo/pathgenerator.hpp" line="67" column="14" bodyfile="ql/methods/montecarlo/pathgenerator.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_path_generator_1a20238332dfe7ef63fe78c4b61d4cd3ee" prot="private" static="no" mutable="no">
        <type>GSG</type>
        <definition>GSG QuantLib::PathGenerator&lt; GSG &gt;::generator_</definition>
        <argsstring></argsstring>
        <name>generator_</name>
        <qualifiedname>QuantLib::PathGenerator::generator_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/montecarlo/pathgenerator.hpp" line="68" column="13" bodyfile="ql/methods/montecarlo/pathgenerator.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_path_generator_1a8f17b780e3642b13514298500e01dd6d" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::PathGenerator&lt; GSG &gt;::dimension_</definition>
        <argsstring></argsstring>
        <name>dimension_</name>
        <qualifiedname>QuantLib::PathGenerator::dimension_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/montecarlo/pathgenerator.hpp" line="69" column="14" bodyfile="ql/methods/montecarlo/pathgenerator.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_path_generator_1ae84b322fd6cf06e1a2f842e25cd6aa0f" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_time_grid" kindref="compound">TimeGrid</ref></type>
        <definition>TimeGrid QuantLib::PathGenerator&lt; GSG &gt;::timeGrid_</definition>
        <argsstring></argsstring>
        <name>timeGrid_</name>
        <qualifiedname>QuantLib::PathGenerator::timeGrid_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/montecarlo/pathgenerator.hpp" line="70" column="18" bodyfile="ql/methods/montecarlo/pathgenerator.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_path_generator_1ac2c7cdfc5d2af8e49b9d0ef9fc62690e" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_stochastic_process1_d" kindref="compound">StochasticProcess1D</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;StochasticProcess1D&gt; QuantLib::PathGenerator&lt; GSG &gt;::process_</definition>
        <argsstring></argsstring>
        <name>process_</name>
        <qualifiedname>QuantLib::PathGenerator::process_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/montecarlo/pathgenerator.hpp" line="71" column="25" bodyfile="ql/methods/montecarlo/pathgenerator.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_path_generator_1a1b8aa188ad38c9441e99d273811ed573" prot="private" static="no" mutable="yes">
        <type><ref refid="struct_quant_lib_1_1_sample" kindref="compound">sample_type</ref></type>
        <definition>sample_type QuantLib::PathGenerator&lt; GSG &gt;::next_</definition>
        <argsstring></argsstring>
        <name>next_</name>
        <qualifiedname>QuantLib::PathGenerator::next_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/montecarlo/pathgenerator.hpp" line="72" column="29" bodyfile="ql/methods/montecarlo/pathgenerator.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_path_generator_1aaf6b068e21a5f9851495620de98f4f39" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::PathGenerator&lt; GSG &gt;::temp_</definition>
        <argsstring></argsstring>
        <name>temp_</name>
        <qualifiedname>QuantLib::PathGenerator::temp_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/montecarlo/pathgenerator.hpp" line="73" column="29" bodyfile="ql/methods/montecarlo/pathgenerator.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_path_generator_1aa505c348c6c3dad25a6bfb4d614eefc4" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_brownian_bridge" kindref="compound">BrownianBridge</ref></type>
        <definition>BrownianBridge QuantLib::PathGenerator&lt; GSG &gt;::bb_</definition>
        <argsstring></argsstring>
        <name>bb_</name>
        <qualifiedname>QuantLib::PathGenerator::bb_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/montecarlo/pathgenerator.hpp" line="74" column="24" bodyfile="ql/methods/montecarlo/pathgenerator.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_path_generator_1af3d885be8cbff6b3a7d8af36d2705f1d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="struct_quant_lib_1_1_sample" kindref="compound">sample_type</ref> &amp;</type>
        <definition>const PathGenerator&lt; GSG &gt;::sample_type &amp; QuantLib::PathGenerator&lt; GSG &gt;::next</definition>
        <argsstring>() const</argsstring>
        <name>next</name>
        <qualifiedname>QuantLib::PathGenerator::next</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/montecarlo/pathgenerator.hpp" line="60" column="27" bodyfile="ql/methods/montecarlo/pathgenerator.hpp" bodystart="111" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_path_generator_1aa5a4f396d354d4d0da493bbfa86d32f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="struct_quant_lib_1_1_sample" kindref="compound">sample_type</ref> &amp;</type>
        <definition>const PathGenerator&lt; GSG &gt;::sample_type &amp; QuantLib::PathGenerator&lt; GSG &gt;::antithetic</definition>
        <argsstring>() const</argsstring>
        <name>antithetic</name>
        <qualifiedname>QuantLib::PathGenerator::antithetic</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/montecarlo/pathgenerator.hpp" line="61" column="27" bodyfile="ql/methods/montecarlo/pathgenerator.hpp" bodystart="117" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_path_generator_1a2a993e410fa230fd6ad9f9f643a6c896" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::PathGenerator&lt; GSG &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>QuantLib::PathGenerator::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/montecarlo/pathgenerator.hpp" line="62" column="14" bodyfile="ql/methods/montecarlo/pathgenerator.hpp" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_path_generator_1afd29d14052f71ad0843537f1553e4878" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_time_grid" kindref="compound">TimeGrid</ref> &amp;</type>
        <definition>const TimeGrid &amp; QuantLib::PathGenerator&lt; GSG &gt;::timeGrid</definition>
        <argsstring>() const</argsstring>
        <name>timeGrid</name>
        <qualifiedname>QuantLib::PathGenerator::timeGrid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/montecarlo/pathgenerator.hpp" line="63" column="24" bodyfile="ql/methods/montecarlo/pathgenerator.hpp" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_path_generator_1a45d2d93e99a55590f3bdbc1d6f44f568" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="struct_quant_lib_1_1_sample" kindref="compound">sample_type</ref> &amp;</type>
        <definition>const PathGenerator&lt; GSG &gt;::sample_type &amp; QuantLib::PathGenerator&lt; GSG &gt;::next</definition>
        <argsstring>(bool antithetic) const</argsstring>
        <name>next</name>
        <qualifiedname>QuantLib::PathGenerator::next</qualifiedname>
        <param>
          <type>bool</type>
          <declname>antithetic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/montecarlo/pathgenerator.hpp" line="66" column="27" bodyfile="ql/methods/montecarlo/pathgenerator.hpp" bodystart="123" bodyend="154"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_quant_lib_1_1_path_generator_1ae701df4c87681308b3cd186a418fc7b5" prot="public" static="no">
        <type><ref refid="struct_quant_lib_1_1_sample" kindref="compound">Sample</ref>&lt; <ref refid="class_quant_lib_1_1_path" kindref="compound">Path</ref> &gt;</type>
        <definition>typedef Sample&lt;Path&gt; QuantLib::PathGenerator&lt; GSG &gt;::sample_type</definition>
        <argsstring></argsstring>
        <name>sample_type</name>
        <qualifiedname>QuantLib::PathGenerator::sample_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/montecarlo/pathgenerator.hpp" line="47" column="24" bodyfile="ql/methods/montecarlo/pathgenerator.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_path_generator_1acab98f52d6978a330b4e8793436c116b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::PathGenerator&lt; GSG &gt;::PathGenerator</definition>
        <argsstring>(const ext::shared_ptr&lt; StochasticProcess &gt; &amp;, Time length, Size timeSteps, GSG generator, bool brownianBridge)</argsstring>
        <name>PathGenerator</name>
        <qualifiedname>QuantLib::PathGenerator::PathGenerator</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_stochastic_process" kindref="compound">StochasticProcess</ref> &gt; &amp;</type>
          <defname>process</defname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>timeSteps</declname>
        </param>
        <param>
          <type>GSG</type>
          <declname>generator</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>brownianBridge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/montecarlo/pathgenerator.hpp" line="49" column="9" bodyfile="ql/methods/montecarlo/pathgenerator.hpp" bodystart="81" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_path_generator_1a2951444d79eef2f63d11fe27012f9082" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::PathGenerator&lt; GSG &gt;::PathGenerator</definition>
        <argsstring>(const ext::shared_ptr&lt; StochasticProcess &gt; &amp;, TimeGrid timeGrid, GSG generator, bool brownianBridge)</argsstring>
        <name>PathGenerator</name>
        <qualifiedname>QuantLib::PathGenerator::PathGenerator</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_stochastic_process" kindref="compound">StochasticProcess</ref> &gt; &amp;</type>
          <defname>process</defname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_time_grid" kindref="compound">TimeGrid</ref></type>
          <declname>timeGrid</declname>
        </param>
        <param>
          <type>GSG</type>
          <declname>generator</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>brownianBridge</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/montecarlo/pathgenerator.hpp" line="54" column="9" bodyfile="ql/methods/montecarlo/pathgenerator.hpp" bodystart="96" bodyend="107"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Generates random paths using a sequence generator. </para>
    </briefdescription>
    <detaileddescription>
<para>Generates random paths with drift(S,t) and variance(S,t) using a gaussian sequence generator</para>
<para><xrefsect id="test_1_test000085"><xreftitle>Test</xreftitle><xrefdescription><para>the generated paths are checked against cached results </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <location file="ql/methods/montecarlo/pathgenerator.hpp" line="45" column="5" bodyfile="ql/methods/montecarlo/pathgenerator.hpp" bodystart="45" bodyend="75"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_path_generator_1aa5a4f396d354d4d0da493bbfa86d32f2" prot="public" virt="non-virtual"><scope>QuantLib::PathGenerator</scope><name>antithetic</name></member>
      <member refid="class_quant_lib_1_1_path_generator_1aa505c348c6c3dad25a6bfb4d614eefc4" prot="private" virt="non-virtual"><scope>QuantLib::PathGenerator</scope><name>bb_</name></member>
      <member refid="class_quant_lib_1_1_path_generator_1aceae9cf6fdd96fc234a70b48d99c1d9b" prot="private" virt="non-virtual"><scope>QuantLib::PathGenerator</scope><name>brownianBridge_</name></member>
      <member refid="class_quant_lib_1_1_path_generator_1a8f17b780e3642b13514298500e01dd6d" prot="private" virt="non-virtual"><scope>QuantLib::PathGenerator</scope><name>dimension_</name></member>
      <member refid="class_quant_lib_1_1_path_generator_1a20238332dfe7ef63fe78c4b61d4cd3ee" prot="private" virt="non-virtual"><scope>QuantLib::PathGenerator</scope><name>generator_</name></member>
      <member refid="class_quant_lib_1_1_path_generator_1af3d885be8cbff6b3a7d8af36d2705f1d" prot="public" virt="non-virtual"><scope>QuantLib::PathGenerator</scope><name>next</name></member>
      <member refid="class_quant_lib_1_1_path_generator_1a45d2d93e99a55590f3bdbc1d6f44f568" prot="private" virt="non-virtual"><scope>QuantLib::PathGenerator</scope><name>next</name></member>
      <member refid="class_quant_lib_1_1_path_generator_1a1b8aa188ad38c9441e99d273811ed573" prot="private" virt="non-virtual"><scope>QuantLib::PathGenerator</scope><name>next_</name></member>
      <member refid="class_quant_lib_1_1_path_generator_1acab98f52d6978a330b4e8793436c116b" prot="public" virt="non-virtual"><scope>QuantLib::PathGenerator</scope><name>PathGenerator</name></member>
      <member refid="class_quant_lib_1_1_path_generator_1a2951444d79eef2f63d11fe27012f9082" prot="public" virt="non-virtual"><scope>QuantLib::PathGenerator</scope><name>PathGenerator</name></member>
      <member refid="class_quant_lib_1_1_path_generator_1ac2c7cdfc5d2af8e49b9d0ef9fc62690e" prot="private" virt="non-virtual"><scope>QuantLib::PathGenerator</scope><name>process_</name></member>
      <member refid="class_quant_lib_1_1_path_generator_1ae701df4c87681308b3cd186a418fc7b5" prot="public" virt="non-virtual"><scope>QuantLib::PathGenerator</scope><name>sample_type</name></member>
      <member refid="class_quant_lib_1_1_path_generator_1a2a993e410fa230fd6ad9f9f643a6c896" prot="public" virt="non-virtual"><scope>QuantLib::PathGenerator</scope><name>size</name></member>
      <member refid="class_quant_lib_1_1_path_generator_1aaf6b068e21a5f9851495620de98f4f39" prot="private" virt="non-virtual"><scope>QuantLib::PathGenerator</scope><name>temp_</name></member>
      <member refid="class_quant_lib_1_1_path_generator_1afd29d14052f71ad0843537f1553e4878" prot="public" virt="non-virtual"><scope>QuantLib::PathGenerator</scope><name>timeGrid</name></member>
      <member refid="class_quant_lib_1_1_path_generator_1ae84b322fd6cf06e1a2f842e25cd6aa0f" prot="private" virt="non-virtual"><scope>QuantLib::PathGenerator</scope><name>timeGrid_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

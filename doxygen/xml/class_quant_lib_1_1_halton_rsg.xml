<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_halton_rsg" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::HaltonRsg</compoundname>
    <includes refid="haltonrsg_8hpp" local="no">haltonrsg.hpp</includes>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_quant_lib_1_1_halton_rsg_1a8732b8352b159b19186e0f4f3d7ada37" prot="public" static="no">
        <type><ref refid="struct_quant_lib_1_1_sample" kindref="compound">Sample</ref>&lt; std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &gt;</type>
        <definition>typedef Sample&lt;std::vector&lt;Real&gt; &gt; QuantLib::HaltonRsg::sample_type</definition>
        <argsstring></argsstring>
        <name>sample_type</name>
        <qualifiedname>QuantLib::HaltonRsg::sample_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/haltonrsg.hpp" line="45" column="24" bodyfile="ql/math/randomnumbers/haltonrsg.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_halton_rsg_1a1b90993be2c8d50eeedf91590605e624" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::HaltonRsg::dimensionality_</definition>
        <argsstring></argsstring>
        <name>dimensionality_</name>
        <qualifiedname>QuantLib::HaltonRsg::dimensionality_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/haltonrsg.hpp" line="56" column="14" bodyfile="ql/math/randomnumbers/haltonrsg.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_halton_rsg_1a5f9cc653f04045131e3be787c67f3855" prot="private" static="no" mutable="yes">
        <type>unsigned long</type>
        <definition>unsigned long QuantLib::HaltonRsg::sequenceCounter_</definition>
        <argsstring></argsstring>
        <name>sequenceCounter_</name>
        <qualifiedname>QuantLib::HaltonRsg::sequenceCounter_</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/haltonrsg.hpp" line="57" column="31" bodyfile="ql/math/randomnumbers/haltonrsg.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_halton_rsg_1a45ff9abb70ad5272149c2ec07d53ceb7" prot="private" static="no" mutable="yes">
        <type><ref refid="struct_quant_lib_1_1_sample" kindref="compound">sample_type</ref></type>
        <definition>sample_type QuantLib::HaltonRsg::sequence_</definition>
        <argsstring></argsstring>
        <name>sequence_</name>
        <qualifiedname>QuantLib::HaltonRsg::sequence_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/haltonrsg.hpp" line="58" column="29" bodyfile="ql/math/randomnumbers/haltonrsg.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_halton_rsg_1a7dff3cee587993479d53ad4df6a4fab0" prot="private" static="no" mutable="no">
        <type>std::vector&lt; unsigned long &gt;</type>
        <definition>std::vector&lt;unsigned long&gt; QuantLib::HaltonRsg::randomStart_</definition>
        <argsstring></argsstring>
        <name>randomStart_</name>
        <qualifiedname>QuantLib::HaltonRsg::randomStart_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/haltonrsg.hpp" line="59" column="21" bodyfile="ql/math/randomnumbers/haltonrsg.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_halton_rsg_1ae8c8f289c84e7d853a86fdd64cdbec37" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::HaltonRsg::randomShift_</definition>
        <argsstring></argsstring>
        <name>randomShift_</name>
        <qualifiedname>QuantLib::HaltonRsg::randomShift_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/haltonrsg.hpp" line="60" column="22" bodyfile="ql/math/randomnumbers/haltonrsg.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_halton_rsg_1a14c77c01b345a7f48c7f9ffcf0e35b88" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::HaltonRsg::HaltonRsg</definition>
        <argsstring>(Size dimensionality, unsigned long seed=0, bool randomStart=true, bool randomShift=false)</argsstring>
        <name>HaltonRsg</name>
        <qualifiedname>QuantLib::HaltonRsg::HaltonRsg</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>dimensionality</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>seed</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>randomStart</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>randomShift</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/haltonrsg.hpp" line="46" column="18" bodyfile="ql/math/randomnumbers/haltonrsg.cpp" bodystart="36" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_halton_rsg_1a4eaac98dfb4dcd2561ab546a53021182" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="struct_quant_lib_1_1_sample" kindref="compound">sample_type</ref> &amp;</type>
        <definition>const HaltonRsg::sample_type &amp; QuantLib::HaltonRsg::nextSequence</definition>
        <argsstring>() const</argsstring>
        <name>nextSequence</name>
        <qualifiedname>QuantLib::HaltonRsg::nextSequence</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/haltonrsg.hpp" line="50" column="27" bodyfile="ql/math/randomnumbers/haltonrsg.cpp" bodystart="56" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_halton_rsg_1abd7110e2ec3ccfe268717cac051b21fc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="struct_quant_lib_1_1_sample" kindref="compound">sample_type</ref> &amp;</type>
        <definition>const sample_type &amp; QuantLib::HaltonRsg::lastSequence</definition>
        <argsstring>() const</argsstring>
        <name>lastSequence</name>
        <qualifiedname>QuantLib::HaltonRsg::lastSequence</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/haltonrsg.hpp" line="51" column="27" bodyfile="ql/math/randomnumbers/haltonrsg.hpp" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_halton_rsg_1a959ca3df653a6ada4d5b18ead95390a9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::HaltonRsg::dimension</definition>
        <argsstring>() const</argsstring>
        <name>dimension</name>
        <qualifiedname>QuantLib::HaltonRsg::dimension</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/haltonrsg.hpp" line="54" column="14" bodyfile="ql/math/randomnumbers/haltonrsg.hpp" bodystart="54" bodyend="54"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Halton low-discrepancy sequence generator. </para>
    </briefdescription>
    <detaileddescription>
<para>Halton algorithm for low-discrepancy sequence. For more details see chapter 8, paragraph 2 of &quot;Monte Carlo Methods in
Finance&quot;, by Peter Jäckel</para>
<para><xrefsect id="test_1_test000058"><xreftitle>Test</xreftitle><xrefdescription><para><itemizedlist>
<listitem><para>the correctness of the returned values is tested by reproducing known good values.</para>
</listitem><listitem><para>the correctness of the returned values is tested by checking their discrepancy against known good values. </para>
</listitem></itemizedlist>
</para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <location file="ql/math/randomnumbers/haltonrsg.hpp" line="43" column="5" bodyfile="ql/math/randomnumbers/haltonrsg.hpp" bodystart="43" bodyend="61"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_halton_rsg_1a959ca3df653a6ada4d5b18ead95390a9" prot="public" virt="non-virtual"><scope>QuantLib::HaltonRsg</scope><name>dimension</name></member>
      <member refid="class_quant_lib_1_1_halton_rsg_1a1b90993be2c8d50eeedf91590605e624" prot="private" virt="non-virtual"><scope>QuantLib::HaltonRsg</scope><name>dimensionality_</name></member>
      <member refid="class_quant_lib_1_1_halton_rsg_1a14c77c01b345a7f48c7f9ffcf0e35b88" prot="public" virt="non-virtual"><scope>QuantLib::HaltonRsg</scope><name>HaltonRsg</name></member>
      <member refid="class_quant_lib_1_1_halton_rsg_1abd7110e2ec3ccfe268717cac051b21fc" prot="public" virt="non-virtual"><scope>QuantLib::HaltonRsg</scope><name>lastSequence</name></member>
      <member refid="class_quant_lib_1_1_halton_rsg_1a4eaac98dfb4dcd2561ab546a53021182" prot="public" virt="non-virtual"><scope>QuantLib::HaltonRsg</scope><name>nextSequence</name></member>
      <member refid="class_quant_lib_1_1_halton_rsg_1ae8c8f289c84e7d853a86fdd64cdbec37" prot="private" virt="non-virtual"><scope>QuantLib::HaltonRsg</scope><name>randomShift_</name></member>
      <member refid="class_quant_lib_1_1_halton_rsg_1a7dff3cee587993479d53ad4df6a4fab0" prot="private" virt="non-virtual"><scope>QuantLib::HaltonRsg</scope><name>randomStart_</name></member>
      <member refid="class_quant_lib_1_1_halton_rsg_1a8732b8352b159b19186e0f4f3d7ada37" prot="public" virt="non-virtual"><scope>QuantLib::HaltonRsg</scope><name>sample_type</name></member>
      <member refid="class_quant_lib_1_1_halton_rsg_1a45ff9abb70ad5272149c2ec07d53ceb7" prot="private" virt="non-virtual"><scope>QuantLib::HaltonRsg</scope><name>sequence_</name></member>
      <member refid="class_quant_lib_1_1_halton_rsg_1a5f9cc653f04045131e3be787c67f3855" prot="private" virt="non-virtual"><scope>QuantLib::HaltonRsg</scope><name>sequenceCounter_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

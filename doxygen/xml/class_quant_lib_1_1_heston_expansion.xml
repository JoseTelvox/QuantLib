<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_heston_expansion" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::HestonExpansion</compoundname>
    <derivedcompoundref refid="class_quant_lib_1_1_forde_heston_expansion" prot="public" virt="non-virtual">QuantLib::FordeHestonExpansion</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_l_p_p2_heston_expansion" prot="public" virt="non-virtual">QuantLib::LPP2HestonExpansion</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_l_p_p3_heston_expansion" prot="public" virt="non-virtual">QuantLib::LPP3HestonExpansion</derivedcompoundref>
    <includes refid="hestonexpansionengine_8hpp" local="no">hestonexpansionengine.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_heston_expansion_1a37ef175a773244522fabfae53e13a389" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual QuantLib::HestonExpansion::~HestonExpansion</definition>
        <argsstring>()=default</argsstring>
        <name>~HestonExpansion</name>
        <qualifiedname>QuantLib::HestonExpansion::~HestonExpansion</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/hestonexpansionengine.hpp" line="70" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_heston_expansion_1af52140078eff0fc81f70ec2b7d91687b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::HestonExpansion::impliedVolatility</definition>
        <argsstring>(Real strike, Real forward) const =0</argsstring>
        <name>impliedVolatility</name>
        <qualifiedname>QuantLib::HestonExpansion::impliedVolatility</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_forde_heston_expansion_1a329fcdc6e482868dfcf4a43bc0b26196">impliedVolatility</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_l_p_p2_heston_expansion_1aedafb92c5a138394b8cf48506f715ca7">impliedVolatility</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_l_p_p3_heston_expansion_1a4791031de0db778958b13ec69bf337ee">impliedVolatility</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>forward</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/hestonexpansionengine.hpp" line="71" column="22"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Interface to represent some Heston expansion formula. During calibration, it would typically be initialized once per implied volatility surface slice, then calls for each surface strike to impliedVolatility(strike, forward) would be performed. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::FordeHestonExpansion</label>
        <link refid="class_quant_lib_1_1_forde_heston_expansion"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::HestonExpansion</label>
        <link refid="class_quant_lib_1_1_heston_expansion"/>
      </node>
      <node id="3">
        <label>QuantLib::LPP2HestonExpansion</label>
        <link refid="class_quant_lib_1_1_l_p_p2_heston_expansion"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::LPP3HestonExpansion</label>
        <link refid="class_quant_lib_1_1_l_p_p3_heston_expansion"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="ql/pricingengines/vanilla/hestonexpansionengine.hpp" line="68" column="5" bodyfile="ql/pricingengines/vanilla/hestonexpansionengine.hpp" bodystart="68" bodyend="72"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_heston_expansion_1af52140078eff0fc81f70ec2b7d91687b" prot="public" virt="pure-virtual"><scope>QuantLib::HestonExpansion</scope><name>impliedVolatility</name></member>
      <member refid="class_quant_lib_1_1_heston_expansion_1a37ef175a773244522fabfae53e13a389" prot="public" virt="virtual"><scope>QuantLib::HestonExpansion</scope><name>~HestonExpansion</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

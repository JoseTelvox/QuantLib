<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_index" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::Index</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_observable" prot="public" virt="non-virtual">QuantLib::Observable</basecompoundref>
    <basecompoundref refid="class_quant_lib_1_1_observer" prot="public" virt="non-virtual">QuantLib::Observer</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_commodity_index" prot="public" virt="non-virtual">QuantLib::CommodityIndex</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_equity_index" prot="public" virt="non-virtual">QuantLib::EquityIndex</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_inflation_index" prot="public" virt="non-virtual">QuantLib::InflationIndex</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_interest_rate_index" prot="public" virt="non-virtual">QuantLib::InterestRateIndex</derivedcompoundref>
    <includes refid="index_8hpp" local="no">index.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Observer interface</header>
      <description><para>stores the historical fixing at the given date</para>
<para>the date passed as arguments must be the actual calendar date of the fixing; no settlement days must be used. </para>
</description>
      <memberdef kind="function" id="class_quant_lib_1_1_index_1a790ff8bc3caa48efbdb968f6fd23edf0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::Index::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <qualifiedname>QuantLib::Index::update</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_observer_1a07905c55dca858470fcf4a1aea0005aa">update</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must be implemented in derived classes. An instance of Observer does not call this method directly: instead, it will be called by the observables the instance registered with when they need to notify any changes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/index.hpp" line="87" column="14" bodyfile="ql/index.hpp" bodystart="136" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_index_1a99d2677cae4cd185b34a170ee36eca9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::Index::addFixing</definition>
        <argsstring>(const Date &amp;fixingDate, Real fixing, bool forceOverwrite=false)</argsstring>
        <name>addFixing</name>
        <qualifiedname>QuantLib::Index::addFixing</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_inflation_index_1abee8154093d859b0368607fcbbdb7e5e">addFixing</reimplementedby>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>fixingDate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>fixing</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forceOverwrite</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/index.hpp" line="89" column="22" bodyfile="ql/index.cpp" bodystart="24" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_index_1a91fce2b65887f04e2cbcae5d9ffcc15e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::Index::addFixings</definition>
        <argsstring>(const TimeSeries&lt; Real &gt; &amp;t, bool forceOverwrite=false)</argsstring>
        <name>addFixings</name>
        <qualifiedname>QuantLib::Index::addFixings</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_time_series" kindref="compound">TimeSeries</ref>&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forceOverwrite</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>stores historical fixings from a <ref refid="class_quant_lib_1_1_time_series" kindref="compound">TimeSeries</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>the dates in the <ref refid="class_quant_lib_1_1_time_series" kindref="compound">TimeSeries</ref> must be the actual calendar dates of the fixings; no settlement days must be used. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/index.hpp" line="94" column="14" bodyfile="ql/index.cpp" bodystart="31" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_index_1a46b3d6241bd06bd76a49123c5c0011cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DateIterator</type>
          </param>
          <param>
            <type>class ValueIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void QuantLib::Index::addFixings</definition>
        <argsstring>(DateIterator dBegin, DateIterator dEnd, ValueIterator vBegin, bool forceOverwrite=false)</argsstring>
        <name>addFixings</name>
        <qualifiedname>QuantLib::Index::addFixings</qualifiedname>
        <param>
          <type>DateIterator</type>
          <declname>dBegin</declname>
        </param>
        <param>
          <type>DateIterator</type>
          <declname>dEnd</declname>
        </param>
        <param>
          <type>ValueIterator</type>
          <declname>vBegin</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forceOverwrite</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>stores historical fixings at the given dates </para>
        </briefdescription>
        <detaileddescription>
<para>the dates passed as arguments must be the actual calendar dates of the fixings; no settlement days must be used. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/index.hpp" line="100" column="14" bodyfile="ql/index.hpp" bodystart="100" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_index_1a6ebd31a5c6890f2dc0b25fc7824c809c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::Index::clearFixings</definition>
        <argsstring>()</argsstring>
        <name>clearFixings</name>
        <qualifiedname>QuantLib::Index::clearFixings</qualifiedname>
        <briefdescription>
<para>clears all stored historical fixings </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/index.hpp" line="110" column="14" bodyfile="ql/index.cpp" bodystart="43" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_index_1aa9172bf19d428e1d212ef2e331ad8785" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_observable" kindref="compound">Observable</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; Observable &gt; QuantLib::Index::notifier</definition>
        <argsstring>() const</argsstring>
        <name>notifier</name>
        <qualifiedname>QuantLib::Index::notifier</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/index.hpp" line="113" column="25" bodyfile="ql/index.hpp" bodystart="113" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_index_1a816641008efe29b6b8c8270a524dc8b7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::Index::checkNativeFixingsAllowed</definition>
        <argsstring>()</argsstring>
        <name>checkNativeFixingsAllowed</name>
        <qualifiedname>QuantLib::Index::checkNativeFixingsAllowed</qualifiedname>
        <briefdescription>
<para>check if index allows for native fixings </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/index.hpp" line="121" column="14" bodyfile="ql/index.cpp" bodystart="50" bodyend="54"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_index_1a5e8202e51d4c2053f61cb47d3f76b42f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Index::~Index</definition>
        <argsstring>() override=default</argsstring>
        <name>~Index</name>
        <qualifiedname>QuantLib::Index::~Index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/index.hpp" line="47" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_index_1a1d71da32dc59a99b5e6bc9cbafa357fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string QuantLib::Index::name</definition>
        <argsstring>() const =0</argsstring>
        <name>name</name>
        <qualifiedname>QuantLib::Index::name</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_commodity_index_1a4d38c49f0af05f66ef80eda12c0128ad">name</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_equity_index_1a0fc1ecdcdc628dac364d2af8c45a8d0b">name</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_inflation_index_1a85bd99f2d2371874d1186ff5a9826dfd">name</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_interest_rate_index_1a5666a75ccc5d78a4691790eb6fc4a3c7">name</reimplementedby>
        <briefdescription>
<para>Returns the name of the index. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This method is used for output and comparison between indexes. It is <bold>not</bold> meant to be used for writing switch-on-type code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/index.hpp" line="53" column="29"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_index_1a698fe28c856980f06db27a49ebd0fb05" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref></type>
        <definition>virtual Calendar QuantLib::Index::fixingCalendar</definition>
        <argsstring>() const =0</argsstring>
        <name>fixingCalendar</name>
        <qualifiedname>QuantLib::Index::fixingCalendar</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_commodity_index_1a2e74ac50a8b9acef7bde0ae601d145b4">fixingCalendar</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_equity_index_1aeeb5871951d6bad8ea58bb848793c824">fixingCalendar</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_inflation_index_1a4e8ca760eca7688c36e3269f7f948ea7">fixingCalendar</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_interest_rate_index_1a7d1f0d9b3146e03d1c24d31349664f94">fixingCalendar</reimplementedby>
        <briefdescription>
<para>returns the calendar defining valid fixing dates </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/index.hpp" line="55" column="26"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_index_1a9c26de5ae6c178fff2d898660e777b2a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool QuantLib::Index::isValidFixingDate</definition>
        <argsstring>(const Date &amp;fixingDate) const =0</argsstring>
        <name>isValidFixingDate</name>
        <qualifiedname>QuantLib::Index::isValidFixingDate</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_b_m_a_index_1a42bf158b6e837d114beb3e48303a227c">isValidFixingDate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_commodity_index_1a3775f91c1e672c0291848cfb1c72b938">isValidFixingDate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_equity_index_1ae4f951551f0b0f97f0b1b9d5b012775e">isValidFixingDate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_inflation_index_1a0d7763430eafc11354c0455865953a79">isValidFixingDate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_interest_rate_index_1a3f9092374116cba7eaef47b7381fb3d0">isValidFixingDate</reimplementedby>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>fixingDate</declname>
        </param>
        <briefdescription>
<para>returns TRUE if the fixing date is a valid one </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/index.hpp" line="57" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_index_1a3ca2ef1910e74b22dd55c39013642a5c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::Index::hasHistoricalFixing</definition>
        <argsstring>(const Date &amp;fixingDate) const</argsstring>
        <name>hasHistoricalFixing</name>
        <qualifiedname>QuantLib::Index::hasHistoricalFixing</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>fixingDate</declname>
        </param>
        <briefdescription>
<para>returns whether a historical fixing was stored for the given date </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/index.hpp" line="59" column="14" bodyfile="ql/index.hpp" bodystart="125" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_index_1afe813b1909717dc0bcd1fa54105ee9d4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::Index::fixing</definition>
        <argsstring>(const Date &amp;fixingDate, bool forecastTodaysFixing=false) const =0</argsstring>
        <name>fixing</name>
        <qualifiedname>QuantLib::Index::fixing</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_commodity_index_1a4d97d47e7cd75562196d7b813671b00b">fixing</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_equity_index_1a44f96f0902b113bcfe3407414fe79adb">fixing</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_inflation_index_1adf5505d0cf89ba6d8fec944d41878ea5">fixing</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_interest_rate_index_1a6b43e49133a6de954b1e1f5bfae290ca">fixing</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_yo_y_inflation_index_1a768a58fd577da972ba08163d08b143d8">fixing</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_zero_inflation_index_1a3f8536c0f81d7f7a1dac9df3e9335c52">fixing</reimplementedby>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>fixingDate</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forecastTodaysFixing</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>returns the fixing at the given date </para>
        </briefdescription>
        <detaileddescription>
<para>the date passed as arguments must be the actual calendar date of the fixing; no settlement days must be used. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/index.hpp" line="64" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_index_1a56f55745a69269f98c5ccc9b7e94d90e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Index::pastFixing</definition>
        <argsstring>(const Date &amp;fixingDate) const</argsstring>
        <name>pastFixing</name>
        <qualifiedname>QuantLib::Index::pastFixing</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_inflation_index_1a09b3a0586a9f9190d18a178d91ea5dcb">pastFixing</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_swap_spread_index_1af34dc51b22d445c2323f967ec2eaa715">pastFixing</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_yo_y_inflation_index_1a3f0e7411aa1d8ad5d0daf9d11306ac7a">pastFixing</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_zero_inflation_index_1a3057f95c8765f5af0cde6af8a7ffa737">pastFixing</reimplementedby>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>fixingDate</declname>
        </param>
        <briefdescription>
<para>returns a past fixing at the given date </para>
        </briefdescription>
        <detaileddescription>
<para>the date passed as arguments must be the actual calendar date of the fixing; no settlement days must be used. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/index.hpp" line="69" column="22" bodyfile="ql/index.hpp" bodystart="131" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_index_1a373faa497820b43992d18ead1a8b87a8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_time_series" kindref="compound">TimeSeries</ref>&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
        <definition>const TimeSeries&lt; Real &gt; &amp; QuantLib::Index::timeSeries</definition>
        <argsstring>() const</argsstring>
        <name>timeSeries</name>
        <qualifiedname>QuantLib::Index::timeSeries</qualifiedname>
        <briefdescription>
<para>returns the fixing <ref refid="class_quant_lib_1_1_time_series" kindref="compound">TimeSeries</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/index.hpp" line="71" column="26" bodyfile="ql/index.hpp" bodystart="71" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_index_1aedde403ec6db8211816d7d1d0a883155" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool QuantLib::Index::allowsNativeFixings</definition>
        <argsstring>()</argsstring>
        <name>allowsNativeFixings</name>
        <qualifiedname>QuantLib::Index::allowsNativeFixings</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_swap_spread_index_1af31956102550225d2c803acfffb821a3">allowsNativeFixings</reimplementedby>
        <briefdescription>
<para>check if index allows for native fixings. </para>
        </briefdescription>
        <detaileddescription>
<para>If this returns false, calls to addFixing and similar methods will raise an exception. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/index.hpp" line="80" column="22" bodyfile="ql/index.hpp" bodystart="80" bodyend="80"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>purely virtual base class for indexes </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="warning"><para>this class performs no check that the provided/requested fixings are for dates in the past, i.e. for dates less than or equal to the evaluation date. It is up to the client code to take care of possible inconsistencies due to &quot;seeing in the
         future&quot; </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="17">
        <label>QuantLib::AUCPI</label>
        <link refid="class_quant_lib_1_1_a_u_c_p_i"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="111">
        <label>QuantLib::AUDLibor</label>
        <link refid="class_quant_lib_1_1_a_u_d_libor"/>
        <childnode refid="110" relation="public-inheritance">
        </childnode>
      </node>
      <node id="122">
        <label>QuantLib::Aonia</label>
        <link refid="class_quant_lib_1_1_aonia"/>
        <childnode refid="121" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27">
        <label>QuantLib::BMAIndex</label>
        <link refid="class_quant_lib_1_1_b_m_a_index"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="29">
        <label>QuantLib::Bbsw</label>
        <link refid="class_quant_lib_1_1_bbsw"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="30">
        <label>QuantLib::Bbsw1M</label>
        <link refid="class_quant_lib_1_1_bbsw1_m"/>
        <childnode refid="29" relation="public-inheritance">
        </childnode>
      </node>
      <node id="31">
        <label>QuantLib::Bbsw2M</label>
        <link refid="class_quant_lib_1_1_bbsw2_m"/>
        <childnode refid="29" relation="public-inheritance">
        </childnode>
      </node>
      <node id="32">
        <label>QuantLib::Bbsw3M</label>
        <link refid="class_quant_lib_1_1_bbsw3_m"/>
        <childnode refid="29" relation="public-inheritance">
        </childnode>
      </node>
      <node id="33">
        <label>QuantLib::Bbsw4M</label>
        <link refid="class_quant_lib_1_1_bbsw4_m"/>
        <childnode refid="29" relation="public-inheritance">
        </childnode>
      </node>
      <node id="34">
        <label>QuantLib::Bbsw5M</label>
        <link refid="class_quant_lib_1_1_bbsw5_m"/>
        <childnode refid="29" relation="public-inheritance">
        </childnode>
      </node>
      <node id="35">
        <label>QuantLib::Bbsw6M</label>
        <link refid="class_quant_lib_1_1_bbsw6_m"/>
        <childnode refid="29" relation="public-inheritance">
        </childnode>
      </node>
      <node id="36">
        <label>QuantLib::Bibor</label>
        <link refid="class_quant_lib_1_1_bibor"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="37">
        <label>QuantLib::Bibor1M</label>
        <link refid="class_quant_lib_1_1_bibor1_m"/>
        <childnode refid="36" relation="public-inheritance">
        </childnode>
      </node>
      <node id="38">
        <label>QuantLib::Bibor1Y</label>
        <link refid="class_quant_lib_1_1_bibor1_y"/>
        <childnode refid="36" relation="public-inheritance">
        </childnode>
      </node>
      <node id="39">
        <label>QuantLib::Bibor2M</label>
        <link refid="class_quant_lib_1_1_bibor2_m"/>
        <childnode refid="36" relation="public-inheritance">
        </childnode>
      </node>
      <node id="40">
        <label>QuantLib::Bibor3M</label>
        <link refid="class_quant_lib_1_1_bibor3_m"/>
        <childnode refid="36" relation="public-inheritance">
        </childnode>
      </node>
      <node id="41">
        <label>QuantLib::Bibor6M</label>
        <link refid="class_quant_lib_1_1_bibor6_m"/>
        <childnode refid="36" relation="public-inheritance">
        </childnode>
      </node>
      <node id="42">
        <label>QuantLib::Bibor9M</label>
        <link refid="class_quant_lib_1_1_bibor9_m"/>
        <childnode refid="36" relation="public-inheritance">
        </childnode>
      </node>
      <node id="43">
        <label>QuantLib::BiborSW</label>
        <link refid="class_quant_lib_1_1_bibor_s_w"/>
        <childnode refid="36" relation="public-inheritance">
        </childnode>
      </node>
      <node id="44">
        <label>QuantLib::Bkbm</label>
        <link refid="class_quant_lib_1_1_bkbm"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="45">
        <label>QuantLib::Bkbm1M</label>
        <link refid="class_quant_lib_1_1_bkbm1_m"/>
        <childnode refid="44" relation="public-inheritance">
        </childnode>
      </node>
      <node id="46">
        <label>QuantLib::Bkbm2M</label>
        <link refid="class_quant_lib_1_1_bkbm2_m"/>
        <childnode refid="44" relation="public-inheritance">
        </childnode>
      </node>
      <node id="47">
        <label>QuantLib::Bkbm3M</label>
        <link refid="class_quant_lib_1_1_bkbm3_m"/>
        <childnode refid="44" relation="public-inheritance">
        </childnode>
      </node>
      <node id="48">
        <label>QuantLib::Bkbm4M</label>
        <link refid="class_quant_lib_1_1_bkbm4_m"/>
        <childnode refid="44" relation="public-inheritance">
        </childnode>
      </node>
      <node id="49">
        <label>QuantLib::Bkbm5M</label>
        <link refid="class_quant_lib_1_1_bkbm5_m"/>
        <childnode refid="44" relation="public-inheritance">
        </childnode>
      </node>
      <node id="50">
        <label>QuantLib::Bkbm6M</label>
        <link refid="class_quant_lib_1_1_bkbm6_m"/>
        <childnode refid="44" relation="public-inheritance">
        </childnode>
      </node>
      <node id="112">
        <label>QuantLib::CADLibor</label>
        <link refid="class_quant_lib_1_1_c_a_d_libor"/>
        <childnode refid="110" relation="public-inheritance">
        </childnode>
      </node>
      <node id="55">
        <label>QuantLib::CADLiborON</label>
        <link refid="class_quant_lib_1_1_c_a_d_libor_o_n"/>
        <childnode refid="54" relation="public-inheritance">
        </childnode>
      </node>
      <node id="113">
        <label>QuantLib::CHFLibor</label>
        <link refid="class_quant_lib_1_1_c_h_f_libor"/>
        <childnode refid="110" relation="public-inheritance">
        </childnode>
      </node>
      <node id="51">
        <label>QuantLib::Cdor</label>
        <link refid="class_quant_lib_1_1_cdor"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="144">
        <label>QuantLib::ChfLiborSwapIsdaFix</label>
        <link refid="class_quant_lib_1_1_chf_libor_swap_isda_fix"/>
        <childnode refid="143" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::CommodityIndex</label>
        <link refid="class_quant_lib_1_1_commodity_index"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="123">
        <label>QuantLib::Corra</label>
        <link refid="class_quant_lib_1_1_corra"/>
        <childnode refid="121" relation="public-inheritance">
        </childnode>
      </node>
      <node id="114">
        <label>QuantLib::DKKLibor</label>
        <link refid="class_quant_lib_1_1_d_k_k_libor"/>
        <childnode refid="110" relation="public-inheritance">
        </childnode>
      </node>
      <node id="56">
        <label>QuantLib::DailyTenorCHFLibor</label>
        <link refid="class_quant_lib_1_1_daily_tenor_c_h_f_libor"/>
        <childnode refid="54" relation="public-inheritance">
        </childnode>
      </node>
      <node id="52">
        <label>QuantLib::DailyTenorEURLibor</label>
        <link refid="class_quant_lib_1_1_daily_tenor_e_u_r_libor"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="57">
        <label>QuantLib::DailyTenorGBPLibor</label>
        <link refid="class_quant_lib_1_1_daily_tenor_g_b_p_libor"/>
        <childnode refid="54" relation="public-inheritance">
        </childnode>
      </node>
      <node id="59">
        <label>QuantLib::DailyTenorJPYLibor</label>
        <link refid="class_quant_lib_1_1_daily_tenor_j_p_y_libor"/>
        <childnode refid="54" relation="public-inheritance">
        </childnode>
      </node>
      <node id="54">
        <label>QuantLib::DailyTenorLibor</label>
        <link refid="class_quant_lib_1_1_daily_tenor_libor"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="60">
        <label>QuantLib::DailyTenorUSDLibor</label>
        <link refid="class_quant_lib_1_1_daily_tenor_u_s_d_libor"/>
        <childnode refid="54" relation="public-inheritance">
        </childnode>
      </node>
      <node id="124">
        <label>QuantLib::Destr</label>
        <link refid="class_quant_lib_1_1_destr"/>
        <childnode refid="121" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>QuantLib::EUHICP</label>
        <link refid="class_quant_lib_1_1_e_u_h_i_c_p"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>QuantLib::EUHICPXT</label>
        <link refid="class_quant_lib_1_1_e_u_h_i_c_p_x_t"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="62">
        <label>QuantLib::EURLibor</label>
        <link refid="class_quant_lib_1_1_e_u_r_libor"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="63">
        <label>QuantLib::EURLibor10M</label>
        <link refid="class_quant_lib_1_1_e_u_r_libor10_m"/>
        <childnode refid="62" relation="public-inheritance">
        </childnode>
      </node>
      <node id="64">
        <label>QuantLib::EURLibor11M</label>
        <link refid="class_quant_lib_1_1_e_u_r_libor11_m"/>
        <childnode refid="62" relation="public-inheritance">
        </childnode>
      </node>
      <node id="65">
        <label>QuantLib::EURLibor1M</label>
        <link refid="class_quant_lib_1_1_e_u_r_libor1_m"/>
        <childnode refid="62" relation="public-inheritance">
        </childnode>
      </node>
      <node id="66">
        <label>QuantLib::EURLibor1Y</label>
        <link refid="class_quant_lib_1_1_e_u_r_libor1_y"/>
        <childnode refid="62" relation="public-inheritance">
        </childnode>
      </node>
      <node id="67">
        <label>QuantLib::EURLibor2M</label>
        <link refid="class_quant_lib_1_1_e_u_r_libor2_m"/>
        <childnode refid="62" relation="public-inheritance">
        </childnode>
      </node>
      <node id="68">
        <label>QuantLib::EURLibor2W</label>
        <link refid="class_quant_lib_1_1_e_u_r_libor2_w"/>
        <childnode refid="62" relation="public-inheritance">
        </childnode>
      </node>
      <node id="69">
        <label>QuantLib::EURLibor3M</label>
        <link refid="class_quant_lib_1_1_e_u_r_libor3_m"/>
        <childnode refid="62" relation="public-inheritance">
        </childnode>
      </node>
      <node id="70">
        <label>QuantLib::EURLibor4M</label>
        <link refid="class_quant_lib_1_1_e_u_r_libor4_m"/>
        <childnode refid="62" relation="public-inheritance">
        </childnode>
      </node>
      <node id="71">
        <label>QuantLib::EURLibor5M</label>
        <link refid="class_quant_lib_1_1_e_u_r_libor5_m"/>
        <childnode refid="62" relation="public-inheritance">
        </childnode>
      </node>
      <node id="72">
        <label>QuantLib::EURLibor6M</label>
        <link refid="class_quant_lib_1_1_e_u_r_libor6_m"/>
        <childnode refid="62" relation="public-inheritance">
        </childnode>
      </node>
      <node id="73">
        <label>QuantLib::EURLibor7M</label>
        <link refid="class_quant_lib_1_1_e_u_r_libor7_m"/>
        <childnode refid="62" relation="public-inheritance">
        </childnode>
      </node>
      <node id="74">
        <label>QuantLib::EURLibor8M</label>
        <link refid="class_quant_lib_1_1_e_u_r_libor8_m"/>
        <childnode refid="62" relation="public-inheritance">
        </childnode>
      </node>
      <node id="75">
        <label>QuantLib::EURLibor9M</label>
        <link refid="class_quant_lib_1_1_e_u_r_libor9_m"/>
        <childnode refid="62" relation="public-inheritance">
        </childnode>
      </node>
      <node id="53">
        <label>QuantLib::EURLiborON</label>
        <link refid="class_quant_lib_1_1_e_u_r_libor_o_n"/>
        <childnode refid="52" relation="public-inheritance">
        </childnode>
      </node>
      <node id="76">
        <label>QuantLib::EURLiborSW</label>
        <link refid="class_quant_lib_1_1_e_u_r_libor_s_w"/>
        <childnode refid="62" relation="public-inheritance">
        </childnode>
      </node>
      <node id="125">
        <label>QuantLib::Eonia</label>
        <link refid="class_quant_lib_1_1_eonia"/>
        <childnode refid="121" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::EquityIndex</label>
        <link refid="class_quant_lib_1_1_equity_index"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="126">
        <label>QuantLib::Estr</label>
        <link refid="class_quant_lib_1_1_estr"/>
        <childnode refid="121" relation="public-inheritance">
        </childnode>
      </node>
      <node id="145">
        <label>QuantLib::EurLiborSwapIfrFix</label>
        <link refid="class_quant_lib_1_1_eur_libor_swap_ifr_fix"/>
        <childnode refid="143" relation="public-inheritance">
        </childnode>
      </node>
      <node id="146">
        <label>QuantLib::EurLiborSwapIsdaFixA</label>
        <link refid="class_quant_lib_1_1_eur_libor_swap_isda_fix_a"/>
        <childnode refid="143" relation="public-inheritance">
        </childnode>
      </node>
      <node id="147">
        <label>QuantLib::EurLiborSwapIsdaFixB</label>
        <link refid="class_quant_lib_1_1_eur_libor_swap_isda_fix_b"/>
        <childnode refid="143" relation="public-inheritance">
        </childnode>
      </node>
      <node id="77">
        <label>QuantLib::Euribor</label>
        <link refid="class_quant_lib_1_1_euribor"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="78">
        <label>QuantLib::Euribor10M</label>
        <link refid="class_quant_lib_1_1_euribor10_m"/>
        <childnode refid="77" relation="public-inheritance">
        </childnode>
      </node>
      <node id="79">
        <label>QuantLib::Euribor11M</label>
        <link refid="class_quant_lib_1_1_euribor11_m"/>
        <childnode refid="77" relation="public-inheritance">
        </childnode>
      </node>
      <node id="80">
        <label>QuantLib::Euribor1M</label>
        <link refid="class_quant_lib_1_1_euribor1_m"/>
        <childnode refid="77" relation="public-inheritance">
        </childnode>
      </node>
      <node id="81">
        <label>QuantLib::Euribor1W</label>
        <link refid="class_quant_lib_1_1_euribor1_w"/>
        <childnode refid="77" relation="public-inheritance">
        </childnode>
      </node>
      <node id="82">
        <label>QuantLib::Euribor1Y</label>
        <link refid="class_quant_lib_1_1_euribor1_y"/>
        <childnode refid="77" relation="public-inheritance">
        </childnode>
      </node>
      <node id="83">
        <label>QuantLib::Euribor2M</label>
        <link refid="class_quant_lib_1_1_euribor2_m"/>
        <childnode refid="77" relation="public-inheritance">
        </childnode>
      </node>
      <node id="84">
        <label>QuantLib::Euribor2W</label>
        <link refid="class_quant_lib_1_1_euribor2_w"/>
        <childnode refid="77" relation="public-inheritance">
        </childnode>
      </node>
      <node id="93">
        <label>QuantLib::Euribor365</label>
        <link refid="class_quant_lib_1_1_euribor365"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="94">
        <label>QuantLib::Euribor365_10M</label>
        <link refid="class_quant_lib_1_1_euribor365__10_m"/>
        <childnode refid="93" relation="public-inheritance">
        </childnode>
      </node>
      <node id="95">
        <label>QuantLib::Euribor365_11M</label>
        <link refid="class_quant_lib_1_1_euribor365__11_m"/>
        <childnode refid="93" relation="public-inheritance">
        </childnode>
      </node>
      <node id="96">
        <label>QuantLib::Euribor365_1M</label>
        <link refid="class_quant_lib_1_1_euribor365__1_m"/>
        <childnode refid="93" relation="public-inheritance">
        </childnode>
      </node>
      <node id="97">
        <label>QuantLib::Euribor365_1Y</label>
        <link refid="class_quant_lib_1_1_euribor365__1_y"/>
        <childnode refid="93" relation="public-inheritance">
        </childnode>
      </node>
      <node id="98">
        <label>QuantLib::Euribor365_2M</label>
        <link refid="class_quant_lib_1_1_euribor365__2_m"/>
        <childnode refid="93" relation="public-inheritance">
        </childnode>
      </node>
      <node id="99">
        <label>QuantLib::Euribor365_2W</label>
        <link refid="class_quant_lib_1_1_euribor365__2_w"/>
        <childnode refid="93" relation="public-inheritance">
        </childnode>
      </node>
      <node id="100">
        <label>QuantLib::Euribor365_3M</label>
        <link refid="class_quant_lib_1_1_euribor365__3_m"/>
        <childnode refid="93" relation="public-inheritance">
        </childnode>
      </node>
      <node id="101">
        <label>QuantLib::Euribor365_3W</label>
        <link refid="class_quant_lib_1_1_euribor365__3_w"/>
        <childnode refid="93" relation="public-inheritance">
        </childnode>
      </node>
      <node id="102">
        <label>QuantLib::Euribor365_4M</label>
        <link refid="class_quant_lib_1_1_euribor365__4_m"/>
        <childnode refid="93" relation="public-inheritance">
        </childnode>
      </node>
      <node id="103">
        <label>QuantLib::Euribor365_5M</label>
        <link refid="class_quant_lib_1_1_euribor365__5_m"/>
        <childnode refid="93" relation="public-inheritance">
        </childnode>
      </node>
      <node id="104">
        <label>QuantLib::Euribor365_6M</label>
        <link refid="class_quant_lib_1_1_euribor365__6_m"/>
        <childnode refid="93" relation="public-inheritance">
        </childnode>
      </node>
      <node id="105">
        <label>QuantLib::Euribor365_7M</label>
        <link refid="class_quant_lib_1_1_euribor365__7_m"/>
        <childnode refid="93" relation="public-inheritance">
        </childnode>
      </node>
      <node id="106">
        <label>QuantLib::Euribor365_8M</label>
        <link refid="class_quant_lib_1_1_euribor365__8_m"/>
        <childnode refid="93" relation="public-inheritance">
        </childnode>
      </node>
      <node id="107">
        <label>QuantLib::Euribor365_9M</label>
        <link refid="class_quant_lib_1_1_euribor365__9_m"/>
        <childnode refid="93" relation="public-inheritance">
        </childnode>
      </node>
      <node id="108">
        <label>QuantLib::Euribor365_SW</label>
        <link refid="class_quant_lib_1_1_euribor365___s_w"/>
        <childnode refid="93" relation="public-inheritance">
        </childnode>
      </node>
      <node id="85">
        <label>QuantLib::Euribor3M</label>
        <link refid="class_quant_lib_1_1_euribor3_m"/>
        <childnode refid="77" relation="public-inheritance">
        </childnode>
      </node>
      <node id="86">
        <label>QuantLib::Euribor3W</label>
        <link refid="class_quant_lib_1_1_euribor3_w"/>
        <childnode refid="77" relation="public-inheritance">
        </childnode>
      </node>
      <node id="87">
        <label>QuantLib::Euribor4M</label>
        <link refid="class_quant_lib_1_1_euribor4_m"/>
        <childnode refid="77" relation="public-inheritance">
        </childnode>
      </node>
      <node id="88">
        <label>QuantLib::Euribor5M</label>
        <link refid="class_quant_lib_1_1_euribor5_m"/>
        <childnode refid="77" relation="public-inheritance">
        </childnode>
      </node>
      <node id="89">
        <label>QuantLib::Euribor6M</label>
        <link refid="class_quant_lib_1_1_euribor6_m"/>
        <childnode refid="77" relation="public-inheritance">
        </childnode>
      </node>
      <node id="90">
        <label>QuantLib::Euribor7M</label>
        <link refid="class_quant_lib_1_1_euribor7_m"/>
        <childnode refid="77" relation="public-inheritance">
        </childnode>
      </node>
      <node id="91">
        <label>QuantLib::Euribor8M</label>
        <link refid="class_quant_lib_1_1_euribor8_m"/>
        <childnode refid="77" relation="public-inheritance">
        </childnode>
      </node>
      <node id="92">
        <label>QuantLib::Euribor9M</label>
        <link refid="class_quant_lib_1_1_euribor9_m"/>
        <childnode refid="77" relation="public-inheritance">
        </childnode>
      </node>
      <node id="148">
        <label>QuantLib::EuriborSwapIfrFix</label>
        <link refid="class_quant_lib_1_1_euribor_swap_ifr_fix"/>
        <childnode refid="143" relation="public-inheritance">
        </childnode>
      </node>
      <node id="149">
        <label>QuantLib::EuriborSwapIsdaFixA</label>
        <link refid="class_quant_lib_1_1_euribor_swap_isda_fix_a"/>
        <childnode refid="143" relation="public-inheritance">
        </childnode>
      </node>
      <node id="150">
        <label>QuantLib::EuriborSwapIsdaFixB</label>
        <link refid="class_quant_lib_1_1_euribor_swap_isda_fix_b"/>
        <childnode refid="143" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>QuantLib::FRHICP</label>
        <link refid="class_quant_lib_1_1_f_r_h_i_c_p"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="127">
        <label>QuantLib::FedFunds</label>
        <link refid="class_quant_lib_1_1_fed_funds"/>
        <childnode refid="121" relation="public-inheritance">
        </childnode>
      </node>
      <node id="115">
        <label>QuantLib::GBPLibor</label>
        <link refid="class_quant_lib_1_1_g_b_p_libor"/>
        <childnode refid="110" relation="public-inheritance">
        </childnode>
      </node>
      <node id="58">
        <label>QuantLib::GBPLiborON</label>
        <link refid="class_quant_lib_1_1_g_b_p_libor_o_n"/>
        <childnode refid="57" relation="public-inheritance">
        </childnode>
      </node>
      <node id="151">
        <label>QuantLib::GbpLiborSwapIsdaFix</label>
        <link refid="class_quant_lib_1_1_gbp_libor_swap_isda_fix"/>
        <childnode refid="143" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>QuantLib::GenericCPI</label>
        <link refid="class_quant_lib_1_1_generic_c_p_i"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="28">
        <label>QuantLib::IborIndex</label>
        <link refid="class_quant_lib_1_1_ibor_index"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::Index</label>
        <link refid="class_quant_lib_1_1_index"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::InflationIndex</label>
        <link refid="class_quant_lib_1_1_inflation_index"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26">
        <label>QuantLib::InterestRateIndex</label>
        <link refid="class_quant_lib_1_1_interest_rate_index"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="116">
        <label>QuantLib::JPYLibor</label>
        <link refid="class_quant_lib_1_1_j_p_y_libor"/>
        <childnode refid="110" relation="public-inheritance">
        </childnode>
      </node>
      <node id="109">
        <label>QuantLib::Jibar</label>
        <link refid="class_quant_lib_1_1_jibar"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="152">
        <label>QuantLib::JpyLiborSwapIsdaFixAm</label>
        <link refid="class_quant_lib_1_1_jpy_libor_swap_isda_fix_am"/>
        <childnode refid="143" relation="public-inheritance">
        </childnode>
      </node>
      <node id="153">
        <label>QuantLib::JpyLiborSwapIsdaFixPm</label>
        <link refid="class_quant_lib_1_1_jpy_libor_swap_isda_fix_pm"/>
        <childnode refid="143" relation="public-inheritance">
        </childnode>
      </node>
      <node id="128">
        <label>QuantLib::Kofr</label>
        <link refid="class_quant_lib_1_1_kofr"/>
        <childnode refid="121" relation="public-inheritance">
        </childnode>
      </node>
      <node id="110">
        <label>QuantLib::Libor</label>
        <link refid="class_quant_lib_1_1_libor"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="120">
        <label>QuantLib::Mosprime</label>
        <link refid="class_quant_lib_1_1_mosprime"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="117">
        <label>QuantLib::NZDLibor</label>
        <link refid="class_quant_lib_1_1_n_z_d_libor"/>
        <childnode refid="110" relation="public-inheritance">
        </childnode>
      </node>
      <node id="129">
        <label>QuantLib::Nzocr</label>
        <link refid="class_quant_lib_1_1_nzocr"/>
        <childnode refid="121" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="3">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="121">
        <label>QuantLib::OvernightIndex</label>
        <link refid="class_quant_lib_1_1_overnight_index"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="154">
        <label>QuantLib::OvernightIndexedSwapIndex</label>
        <link refid="class_quant_lib_1_1_overnight_indexed_swap_index"/>
        <childnode refid="143" relation="public-inheritance">
        </childnode>
      </node>
      <node id="134">
        <label>QuantLib::Pribor</label>
        <link refid="class_quant_lib_1_1_pribor"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="135">
        <label>QuantLib::ProxyIbor</label>
        <link refid="class_quant_lib_1_1_proxy_ibor"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="136">
        <label>QuantLib::Robor</label>
        <link refid="class_quant_lib_1_1_robor"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="118">
        <label>QuantLib::SEKLibor</label>
        <link refid="class_quant_lib_1_1_s_e_k_libor"/>
        <childnode refid="110" relation="public-inheritance">
        </childnode>
      </node>
      <node id="137">
        <label>QuantLib::Shibor</label>
        <link refid="class_quant_lib_1_1_shibor"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="130">
        <label>QuantLib::Sofr</label>
        <link refid="class_quant_lib_1_1_sofr"/>
        <childnode refid="121" relation="public-inheritance">
        </childnode>
      </node>
      <node id="131">
        <label>QuantLib::Sonia</label>
        <link refid="class_quant_lib_1_1_sonia"/>
        <childnode refid="121" relation="public-inheritance">
        </childnode>
      </node>
      <node id="143">
        <label>QuantLib::SwapIndex</label>
        <link refid="class_quant_lib_1_1_swap_index"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="157">
        <label>QuantLib::SwapSpreadIndex</label>
        <link refid="class_quant_lib_1_1_swap_spread_index"/>
        <childnode refid="26" relation="public-inheritance">
        </childnode>
      </node>
      <node id="132">
        <label>QuantLib::Swestr</label>
        <link refid="class_quant_lib_1_1_swestr"/>
        <childnode refid="121" relation="public-inheritance">
        </childnode>
      </node>
      <node id="138">
        <label>QuantLib::THBFIX</label>
        <link refid="class_quant_lib_1_1_t_h_b_f_i_x"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="139">
        <label>QuantLib::TRLibor</label>
        <link refid="class_quant_lib_1_1_t_r_libor"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="140">
        <label>QuantLib::Tibor</label>
        <link refid="class_quant_lib_1_1_tibor"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="133">
        <label>QuantLib::Tona</label>
        <link refid="class_quant_lib_1_1_tona"/>
        <childnode refid="121" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>QuantLib::UKHICP</label>
        <link refid="class_quant_lib_1_1_u_k_h_i_c_p"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>QuantLib::UKRPI</label>
        <link refid="class_quant_lib_1_1_u_k_r_p_i"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="24">
        <label>QuantLib::USCPI</label>
        <link refid="class_quant_lib_1_1_u_s_c_p_i"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="119">
        <label>QuantLib::USDLibor</label>
        <link refid="class_quant_lib_1_1_u_s_d_libor"/>
        <childnode refid="110" relation="public-inheritance">
        </childnode>
      </node>
      <node id="61">
        <label>QuantLib::USDLiborON</label>
        <link refid="class_quant_lib_1_1_u_s_d_libor_o_n"/>
        <childnode refid="60" relation="public-inheritance">
        </childnode>
      </node>
      <node id="155">
        <label>QuantLib::UsdLiborSwapIsdaFixAm</label>
        <link refid="class_quant_lib_1_1_usd_libor_swap_isda_fix_am"/>
        <childnode refid="143" relation="public-inheritance">
        </childnode>
      </node>
      <node id="156">
        <label>QuantLib::UsdLiborSwapIsdaFixPm</label>
        <link refid="class_quant_lib_1_1_usd_libor_swap_isda_fix_pm"/>
        <childnode refid="143" relation="public-inheritance">
        </childnode>
      </node>
      <node id="141">
        <label>QuantLib::Wibor</label>
        <link refid="class_quant_lib_1_1_wibor"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::YYAUCPI</label>
        <link refid="class_quant_lib_1_1_y_y_a_u_c_p_i"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QuantLib::YYEUHICP</label>
        <link refid="class_quant_lib_1_1_y_y_e_u_h_i_c_p"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QuantLib::YYEUHICPXT</label>
        <link refid="class_quant_lib_1_1_y_y_e_u_h_i_c_p_x_t"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>QuantLib::YYFRHICP</label>
        <link refid="class_quant_lib_1_1_y_y_f_r_h_i_c_p"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>QuantLib::YYGenericCPI</label>
        <link refid="class_quant_lib_1_1_y_y_generic_c_p_i"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>QuantLib::YYUKRPI</label>
        <link refid="class_quant_lib_1_1_y_y_u_k_r_p_i"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>QuantLib::YYUSCPI</label>
        <link refid="class_quant_lib_1_1_y_y_u_s_c_p_i"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>QuantLib::YYZACPI</label>
        <link refid="class_quant_lib_1_1_y_y_z_a_c_p_i"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::YoYInflationIndex</label>
        <link refid="class_quant_lib_1_1_yo_y_inflation_index"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25">
        <label>QuantLib::ZACPI</label>
        <link refid="class_quant_lib_1_1_z_a_c_p_i"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>QuantLib::ZeroInflationIndex</label>
        <link refid="class_quant_lib_1_1_zero_inflation_index"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="142">
        <label>QuantLib::Zibor</label>
        <link refid="class_quant_lib_1_1_zibor"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::Index</label>
        <link refid="class_quant_lib_1_1_index"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="3">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </collaborationgraph>
    <location file="ql/index.hpp" line="45" column="5" bodyfile="ql/index.hpp" bodystart="45" bodyend="123"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_index_1a99d2677cae4cd185b34a170ee36eca9d" prot="public" virt="virtual"><scope>QuantLib::Index</scope><name>addFixing</name></member>
      <member refid="class_quant_lib_1_1_index_1a91fce2b65887f04e2cbcae5d9ffcc15e" prot="public" virt="non-virtual"><scope>QuantLib::Index</scope><name>addFixings</name></member>
      <member refid="class_quant_lib_1_1_index_1a46b3d6241bd06bd76a49123c5c0011cf" prot="public" virt="non-virtual"><scope>QuantLib::Index</scope><name>addFixings</name></member>
      <member refid="class_quant_lib_1_1_index_1aedde403ec6db8211816d7d1d0a883155" prot="public" virt="virtual"><scope>QuantLib::Index</scope><name>allowsNativeFixings</name></member>
      <member refid="class_quant_lib_1_1_index_1a816641008efe29b6b8c8270a524dc8b7" prot="private" virt="non-virtual"><scope>QuantLib::Index</scope><name>checkNativeFixingsAllowed</name></member>
      <member refid="class_quant_lib_1_1_index_1a6ebd31a5c6890f2dc0b25fc7824c809c" prot="public" virt="non-virtual"><scope>QuantLib::Index</scope><name>clearFixings</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::Index</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_index_1afe813b1909717dc0bcd1fa54105ee9d4" prot="public" virt="pure-virtual"><scope>QuantLib::Index</scope><name>fixing</name></member>
      <member refid="class_quant_lib_1_1_index_1a698fe28c856980f06db27a49ebd0fb05" prot="public" virt="pure-virtual"><scope>QuantLib::Index</scope><name>fixingCalendar</name></member>
      <member refid="class_quant_lib_1_1_index_1a3ca2ef1910e74b22dd55c39013642a5c" prot="public" virt="non-virtual"><scope>QuantLib::Index</scope><name>hasHistoricalFixing</name></member>
      <member refid="class_quant_lib_1_1_index_1a9c26de5ae6c178fff2d898660e777b2a" prot="public" virt="pure-virtual"><scope>QuantLib::Index</scope><name>isValidFixingDate</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::Index</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_index_1a1d71da32dc59a99b5e6bc9cbafa357fe" prot="public" virt="pure-virtual"><scope>QuantLib::Index</scope><name>name</name></member>
      <member refid="class_quant_lib_1_1_index_1aa9172bf19d428e1d212ef2e331ad8785" prot="protected" virt="non-virtual"><scope>QuantLib::Index</scope><name>notifier</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::Index</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::Index</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::Index</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::Index</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::Index</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::Index</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::Index</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::Index</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::Index</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_index_1a56f55745a69269f98c5ccc9b7e94d90e" prot="public" virt="virtual"><scope>QuantLib::Index</scope><name>pastFixing</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::Index</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::Index</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_index_1a373faa497820b43992d18ead1a8b87a8" prot="public" virt="non-virtual"><scope>QuantLib::Index</scope><name>timeSeries</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::Index</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::Index</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_index_1a790ff8bc3caa48efbdb968f6fd23edf0" prot="public" virt="virtual"><scope>QuantLib::Index</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_index_1a5e8202e51d4c2053f61cb47d3f76b42f" prot="public" virt="non-virtual"><scope>QuantLib::Index</scope><name>~Index</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::Index</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::Index</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

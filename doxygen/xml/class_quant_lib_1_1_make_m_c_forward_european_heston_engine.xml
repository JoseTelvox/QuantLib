<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_make_m_c_forward_european_heston_engine" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::MakeMCForwardEuropeanHestonEngine</compoundname>
    <templateparamlist>
      <param>
        <type>class RNG</type>
        <defval><ref refid="namespace_quant_lib_1a68b9aaf5f0c17983506b1a1db8575ab0" kindref="member">PseudoRandom</ref></defval>
      </param>
      <param>
        <type>class S</type>
        <defval><ref refid="namespace_quant_lib_1ae2e788da35d2b866040a03b96227ee6e" kindref="member">Statistics</ref></defval>
      </param>
      <param>
        <type>class P</type>
        <defval><ref refid="class_quant_lib_1_1_heston_process" kindref="compound">HestonProcess</ref></defval>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1a1444462e3b61680e20504528cdcc2a1c" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; P &gt;</type>
        <definition>ext::shared_ptr&lt;P&gt; QuantLib::MakeMCForwardEuropeanHestonEngine&lt; RNG, S, P &gt;::process_</definition>
        <argsstring></argsstring>
        <name>process_</name>
        <qualifiedname>QuantLib::MakeMCForwardEuropeanHestonEngine::process_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" line="104" column="25" bodyfile="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1a8631789d924fc11d4fbf83efaa5571b9" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::MakeMCForwardEuropeanHestonEngine&lt; RNG, S, P &gt;::antithetic_</definition>
        <argsstring></argsstring>
        <name>antithetic_</name>
        <qualifiedname>QuantLib::MakeMCForwardEuropeanHestonEngine::antithetic_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" line="105" column="14" bodyfile="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1add75b5bc705fcedab8335c8863279651" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::MakeMCForwardEuropeanHestonEngine&lt; RNG, S, P &gt;::controlVariate_</definition>
        <argsstring></argsstring>
        <name>controlVariate_</name>
        <qualifiedname>QuantLib::MakeMCForwardEuropeanHestonEngine::controlVariate_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" line="105" column="27" bodyfile="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1a83f76dc5a52e472a67fc784f0760669c" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCForwardEuropeanHestonEngine&lt; RNG, S, P &gt;::steps_</definition>
        <argsstring></argsstring>
        <name>steps_</name>
        <qualifiedname>QuantLib::MakeMCForwardEuropeanHestonEngine::steps_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" line="106" column="14" bodyfile="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1a4cb66881953d2cb1225c054449291eca" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCForwardEuropeanHestonEngine&lt; RNG, S, P &gt;::stepsPerYear_</definition>
        <argsstring></argsstring>
        <name>stepsPerYear_</name>
        <qualifiedname>QuantLib::MakeMCForwardEuropeanHestonEngine::stepsPerYear_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" line="106" column="21" bodyfile="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1a55d30e4461e576681e5b0f91592e7c51" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCForwardEuropeanHestonEngine&lt; RNG, S, P &gt;::samples_</definition>
        <argsstring></argsstring>
        <name>samples_</name>
        <qualifiedname>QuantLib::MakeMCForwardEuropeanHestonEngine::samples_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" line="106" column="35" bodyfile="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1a5fb1caf963d22148bd5d35ed20646a64" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCForwardEuropeanHestonEngine&lt; RNG, S, P &gt;::maxSamples_</definition>
        <argsstring></argsstring>
        <name>maxSamples_</name>
        <qualifiedname>QuantLib::MakeMCForwardEuropeanHestonEngine::maxSamples_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" line="106" column="44" bodyfile="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1ae14a9b426f1f9b2c2e17a7bd3eef3e73" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::MakeMCForwardEuropeanHestonEngine&lt; RNG, S, P &gt;::tolerance_</definition>
        <argsstring></argsstring>
        <name>tolerance_</name>
        <qualifiedname>QuantLib::MakeMCForwardEuropeanHestonEngine::tolerance_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" line="107" column="14" bodyfile="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1af8400bdd960a724d29c3dcb04bf4292c" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
        <definition>BigNatural QuantLib::MakeMCForwardEuropeanHestonEngine&lt; RNG, S, P &gt;::seed_</definition>
        <argsstring></argsstring>
        <name>seed_</name>
        <qualifiedname>QuantLib::MakeMCForwardEuropeanHestonEngine::seed_</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" line="108" column="20" bodyfile="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1a3894872b0fff767840e51c65f9abd1ee" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::MakeMCForwardEuropeanHestonEngine&lt; RNG, S, P &gt;::MakeMCForwardEuropeanHestonEngine</definition>
        <argsstring>(ext::shared_ptr&lt; P &gt; process)</argsstring>
        <name>MakeMCForwardEuropeanHestonEngine</name>
        <qualifiedname>QuantLib::MakeMCForwardEuropeanHestonEngine::MakeMCForwardEuropeanHestonEngine</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; P &gt;</type>
          <declname>process</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" line="91" column="18" bodyfile="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" bodystart="220" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1a6245098a6c4727244e816e0710a6e376" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_forward_european_heston_engine" kindref="compound">MakeMCForwardEuropeanHestonEngine</ref> &amp;</type>
        <definition>MakeMCForwardEuropeanHestonEngine&lt; RNG, S, P &gt; &amp; QuantLib::MakeMCForwardEuropeanHestonEngine&lt; RNG, S, P &gt;::withSteps</definition>
        <argsstring>(Size steps)</argsstring>
        <name>withSteps</name>
        <qualifiedname>QuantLib::MakeMCForwardEuropeanHestonEngine::withSteps</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" line="93" column="43" bodyfile="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" bodystart="227" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1abdf55df65a7ee87c3e52eda010793e8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_forward_european_heston_engine" kindref="compound">MakeMCForwardEuropeanHestonEngine</ref> &amp;</type>
        <definition>MakeMCForwardEuropeanHestonEngine&lt; RNG, S, P &gt; &amp; QuantLib::MakeMCForwardEuropeanHestonEngine&lt; RNG, S, P &gt;::withStepsPerYear</definition>
        <argsstring>(Size steps)</argsstring>
        <name>withStepsPerYear</name>
        <qualifiedname>QuantLib::MakeMCForwardEuropeanHestonEngine::withStepsPerYear</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" line="94" column="43" bodyfile="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" bodystart="234" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1abeca0d08a84cccb70b4c60c4c3524149" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_forward_european_heston_engine" kindref="compound">MakeMCForwardEuropeanHestonEngine</ref> &amp;</type>
        <definition>MakeMCForwardEuropeanHestonEngine&lt; RNG, S, P &gt; &amp; QuantLib::MakeMCForwardEuropeanHestonEngine&lt; RNG, S, P &gt;::withSamples</definition>
        <argsstring>(Size samples)</argsstring>
        <name>withSamples</name>
        <qualifiedname>QuantLib::MakeMCForwardEuropeanHestonEngine::withSamples</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" line="95" column="43" bodyfile="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" bodystart="241" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1af4f602820a875b898ac4580f309d5c10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_forward_european_heston_engine" kindref="compound">MakeMCForwardEuropeanHestonEngine</ref> &amp;</type>
        <definition>MakeMCForwardEuropeanHestonEngine&lt; RNG, S, P &gt; &amp; QuantLib::MakeMCForwardEuropeanHestonEngine&lt; RNG, S, P &gt;::withAbsoluteTolerance</definition>
        <argsstring>(Real tolerance)</argsstring>
        <name>withAbsoluteTolerance</name>
        <qualifiedname>QuantLib::MakeMCForwardEuropeanHestonEngine::withAbsoluteTolerance</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>tolerance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" line="96" column="43" bodyfile="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" bodystart="250" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1af7152591c61eb0e77ec27f5e6504d6b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_forward_european_heston_engine" kindref="compound">MakeMCForwardEuropeanHestonEngine</ref> &amp;</type>
        <definition>MakeMCForwardEuropeanHestonEngine&lt; RNG, S, P &gt; &amp; QuantLib::MakeMCForwardEuropeanHestonEngine&lt; RNG, S, P &gt;::withMaxSamples</definition>
        <argsstring>(Size samples)</argsstring>
        <name>withMaxSamples</name>
        <qualifiedname>QuantLib::MakeMCForwardEuropeanHestonEngine::withMaxSamples</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" line="97" column="43" bodyfile="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" bodystart="263" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1a0c86e5007c9dc4bde4defdd72e93cee5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_forward_european_heston_engine" kindref="compound">MakeMCForwardEuropeanHestonEngine</ref> &amp;</type>
        <definition>MakeMCForwardEuropeanHestonEngine&lt; RNG, S, P &gt; &amp; QuantLib::MakeMCForwardEuropeanHestonEngine&lt; RNG, S, P &gt;::withSeed</definition>
        <argsstring>(BigNatural seed)</argsstring>
        <name>withSeed</name>
        <qualifiedname>QuantLib::MakeMCForwardEuropeanHestonEngine::withSeed</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" line="98" column="43" bodyfile="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" bodystart="270" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1ade40f02ee89f1f6d20d2e206c8fc3e21" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_forward_european_heston_engine" kindref="compound">MakeMCForwardEuropeanHestonEngine</ref> &amp;</type>
        <definition>MakeMCForwardEuropeanHestonEngine&lt; RNG, S, P &gt; &amp; QuantLib::MakeMCForwardEuropeanHestonEngine&lt; RNG, S, P &gt;::withAntitheticVariate</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>withAntitheticVariate</name>
        <qualifiedname>QuantLib::MakeMCForwardEuropeanHestonEngine::withAntitheticVariate</qualifiedname>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" line="99" column="43" bodyfile="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" bodystart="277" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1a14ddade9570471faf6c4aa982fb482ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_forward_european_heston_engine" kindref="compound">MakeMCForwardEuropeanHestonEngine</ref> &amp;</type>
        <definition>MakeMCForwardEuropeanHestonEngine&lt; RNG, S, P &gt; &amp; QuantLib::MakeMCForwardEuropeanHestonEngine&lt; RNG, S, P &gt;::withControlVariate</definition>
        <argsstring>(bool b=false)</argsstring>
        <name>withControlVariate</name>
        <qualifiedname>QuantLib::MakeMCForwardEuropeanHestonEngine::withControlVariate</qualifiedname>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" line="100" column="43" bodyfile="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" bodystart="284" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1a8752b7520b0c02cd0e428c1482d72874" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::MakeMCForwardEuropeanHestonEngine&lt; RNG, S, P &gt;::operator ext::shared_ptr&lt; PricingEngine &gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator ext::shared_ptr&lt; PricingEngine &gt;</name>
        <qualifiedname>QuantLib::MakeMCForwardEuropeanHestonEngine::shared_ptr&lt; PricingEngine &gt;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" line="102" column="9" bodyfile="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" bodystart="290" bodyend="306"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" line="89" column="5" bodyfile="ql/pricingengines/forward/mcforwardeuropeanhestonengine.hpp" bodystart="89" bodyend="109"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1a8631789d924fc11d4fbf83efaa5571b9" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCForwardEuropeanHestonEngine</scope><name>antithetic_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1add75b5bc705fcedab8335c8863279651" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCForwardEuropeanHestonEngine</scope><name>controlVariate_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1a3894872b0fff767840e51c65f9abd1ee" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCForwardEuropeanHestonEngine</scope><name>MakeMCForwardEuropeanHestonEngine</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1a5fb1caf963d22148bd5d35ed20646a64" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCForwardEuropeanHestonEngine</scope><name>maxSamples_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1a8752b7520b0c02cd0e428c1482d72874" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCForwardEuropeanHestonEngine</scope><name>operator ext::shared_ptr&lt; PricingEngine &gt;</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1a1444462e3b61680e20504528cdcc2a1c" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCForwardEuropeanHestonEngine</scope><name>process_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1a55d30e4461e576681e5b0f91592e7c51" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCForwardEuropeanHestonEngine</scope><name>samples_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1af8400bdd960a724d29c3dcb04bf4292c" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCForwardEuropeanHestonEngine</scope><name>seed_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1a83f76dc5a52e472a67fc784f0760669c" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCForwardEuropeanHestonEngine</scope><name>steps_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1a4cb66881953d2cb1225c054449291eca" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCForwardEuropeanHestonEngine</scope><name>stepsPerYear_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1ae14a9b426f1f9b2c2e17a7bd3eef3e73" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCForwardEuropeanHestonEngine</scope><name>tolerance_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1af4f602820a875b898ac4580f309d5c10" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCForwardEuropeanHestonEngine</scope><name>withAbsoluteTolerance</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1ade40f02ee89f1f6d20d2e206c8fc3e21" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCForwardEuropeanHestonEngine</scope><name>withAntitheticVariate</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1a14ddade9570471faf6c4aa982fb482ef" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCForwardEuropeanHestonEngine</scope><name>withControlVariate</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1af7152591c61eb0e77ec27f5e6504d6b0" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCForwardEuropeanHestonEngine</scope><name>withMaxSamples</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1abeca0d08a84cccb70b4c60c4c3524149" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCForwardEuropeanHestonEngine</scope><name>withSamples</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1a0c86e5007c9dc4bde4defdd72e93cee5" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCForwardEuropeanHestonEngine</scope><name>withSeed</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1a6245098a6c4727244e816e0710a6e376" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCForwardEuropeanHestonEngine</scope><name>withSteps</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_forward_european_heston_engine_1abdf55df65a7ee87c3e52eda010793e8a" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCForwardEuropeanHestonEngine</scope><name>withStepsPerYear</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_firefly_algorithm_1_1_intensity" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::FireflyAlgorithm::Intensity</compoundname>
    <derivedcompoundref refid="class_quant_lib_1_1_exponential_intensity" prot="public" virt="non-virtual">QuantLib::ExponentialIntensity</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_inverse_law_square_intensity" prot="public" virt="non-virtual">QuantLib::InverseLawSquareIntensity</derivedcompoundref>
    <includes refid="fireflyalgorithm_8hpp" local="no">fireflyalgorithm.hpp</includes>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_quant_lib_1_1_firefly_algorithm_1_1_intensity_1a786d525daec6dabd068a066f0b5557ab" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class FireflyAlgorithm</definition>
        <argsstring></argsstring>
        <name>FireflyAlgorithm</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::Intensity::FireflyAlgorithm</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_firefly_algorithm" kindref="compound">FireflyAlgorithm</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="111" column="22" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_firefly_algorithm_1_1_intensity_1acc588f89235117e4f92f5e88943eedfc" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::FireflyAlgorithm::Intensity::Mfa_</definition>
        <argsstring></argsstring>
        <name>Mfa_</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::Intensity::Mfa_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="117" column="14" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_firefly_algorithm_1_1_intensity_1a57ee51173db6c920777b6ed24e440be8" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::FireflyAlgorithm::Intensity::N_</definition>
        <argsstring></argsstring>
        <name>N_</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::Intensity::N_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="117" column="19" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_firefly_algorithm_1_1_intensity_1a2c4199656978019b3089de331f0bb0a9" prot="protected" static="no" mutable="no">
        <type>const std::vector&lt; <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &gt; *</type>
        <definition>const std::vector&lt;Array&gt;* QuantLib::FireflyAlgorithm::Intensity::x_</definition>
        <argsstring></argsstring>
        <name>x_</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::Intensity::x_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="118" column="27" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_firefly_algorithm_1_1_intensity_1af45ef5ad75db91c45138404cd89dd317" prot="protected" static="no" mutable="no">
        <type>const std::vector&lt; std::pair&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>, <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &gt; &gt; *</type>
        <definition>const std::vector&lt;std::pair&lt;Real, Size&gt; &gt;* QuantLib::FireflyAlgorithm::Intensity::values_</definition>
        <argsstring></argsstring>
        <name>values_</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::Intensity::values_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="119" column="27" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_firefly_algorithm_1_1_intensity_1a4c4332560c5ff41c87bd995839a7f5a9" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &gt; *</type>
        <definition>std::vector&lt;Array&gt;* QuantLib::FireflyAlgorithm::Intensity::xI_</definition>
        <argsstring></argsstring>
        <name>xI_</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::Intensity::xI_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="120" column="21" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="120" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_firefly_algorithm_1_1_intensity_1aefeadc88da857e539e4215caabad0b68" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual QuantLib::FireflyAlgorithm::Intensity::~Intensity</definition>
        <argsstring>()=default</argsstring>
        <name>~Intensity</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::Intensity::~Intensity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="113" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_firefly_algorithm_1_1_intensity_1a82ebf622f71abf217e3b1912b313d020" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::FireflyAlgorithm::Intensity::findBrightest</definition>
        <argsstring>()</argsstring>
        <name>findBrightest</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::Intensity::findBrightest</qualifiedname>
        <briefdescription>
<para>find brightest firefly for each firefly </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="115" column="12" bodyfile="ql/experimental/math/fireflyalgorithm.cpp" bodystart="221" bodyend="244"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_firefly_algorithm_1_1_intensity_1adcce3203ca4943ffa93b65bfb5874e44" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::FireflyAlgorithm::Intensity::intensityImpl</definition>
        <argsstring>(Real valueX, Real valueY, Real distance)=0</argsstring>
        <name>intensityImpl</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::Intensity::intensityImpl</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_exponential_intensity_1a8835d6bc2b4df41f697063a8c8ec5e59">intensityImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_inverse_law_square_intensity_1a498fa96d88572d205a84d000dda5f168">intensityImpl</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>valueX</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>valueY</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>distance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="122" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_firefly_algorithm_1_1_intensity_1aff161fd812de53ea4f45d39fa6338f24" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::FireflyAlgorithm::Intensity::distance</definition>
        <argsstring>(const Array &amp;x, const Array &amp;y) const</argsstring>
        <name>distance</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::Intensity::distance</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="123" column="14" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="123" bodyend="130"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_firefly_algorithm_1_1_intensity_1af7123e581ca0833ca379eaf1ebcebaf6" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::FireflyAlgorithm::Intensity::init</definition>
        <argsstring>(FireflyAlgorithm *fa)</argsstring>
        <name>init</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::Intensity::init</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_firefly_algorithm" kindref="compound">FireflyAlgorithm</ref> *</type>
          <declname>fa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="133" column="14" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="133" bodyend="139"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Base intensity class. </para>
    </briefdescription>
    <detaileddescription>
<para>Derived classes need to implement only intensityImpl </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::ExponentialIntensity</label>
        <link refid="class_quant_lib_1_1_exponential_intensity"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::FireflyAlgorithm::Intensity</label>
        <link refid="class_quant_lib_1_1_firefly_algorithm_1_1_intensity"/>
      </node>
      <node id="3">
        <label>QuantLib::InverseLawSquareIntensity</label>
        <link refid="class_quant_lib_1_1_inverse_law_square_intensity"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="ql/experimental/math/fireflyalgorithm.hpp" line="110" column="5" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="110" bodyend="140"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1_1_intensity_1aff161fd812de53ea4f45d39fa6338f24" prot="protected" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm::Intensity</scope><name>distance</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1_1_intensity_1a82ebf622f71abf217e3b1912b313d020" prot="public" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm::Intensity</scope><name>findBrightest</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1_1_intensity_1a786d525daec6dabd068a066f0b5557ab" prot="private" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm::Intensity</scope><name>FireflyAlgorithm</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1_1_intensity_1af7123e581ca0833ca379eaf1ebcebaf6" prot="private" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm::Intensity</scope><name>init</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1_1_intensity_1adcce3203ca4943ffa93b65bfb5874e44" prot="protected" virt="pure-virtual"><scope>QuantLib::FireflyAlgorithm::Intensity</scope><name>intensityImpl</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1_1_intensity_1acc588f89235117e4f92f5e88943eedfc" prot="protected" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm::Intensity</scope><name>Mfa_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1_1_intensity_1a57ee51173db6c920777b6ed24e440be8" prot="protected" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm::Intensity</scope><name>N_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1_1_intensity_1af45ef5ad75db91c45138404cd89dd317" prot="protected" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm::Intensity</scope><name>values_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1_1_intensity_1a2c4199656978019b3089de331f0bb0a9" prot="protected" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm::Intensity</scope><name>x_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1_1_intensity_1a4c4332560c5ff41c87bd995839a7f5a9" prot="protected" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm::Intensity</scope><name>xI_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1_1_intensity_1aefeadc88da857e539e4215caabad0b68" prot="public" virt="virtual"><scope>QuantLib::FireflyAlgorithm::Intensity</scope><name>~Intensity</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="struct_quant_lib_1_1_affine_hazard_rate" kind="struct" language="C++" prot="public">
    <compoundname>QuantLib::AffineHazardRate</compoundname>
    <includes refid="interpolatedaffinehazardratecurve_8hpp" local="no">interpolatedaffinehazardratecurve.hpp</includes>
    <innerclass refid="struct_quant_lib_1_1_affine_hazard_rate_1_1curve" prot="public">QuantLib::AffineHazardRate::curve</innerclass>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_quant_lib_1_1_affine_hazard_rate_1a872e3c6ab6e18ef63f99e879415921ff" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1_bootstrap_helper" kindref="compound">BootstrapHelper</ref>&lt; <ref refid="class_quant_lib_1_1_default_probability_term_structure" kindref="compound">DefaultProbabilityTermStructure</ref> &gt;</type>
        <definition>typedef BootstrapHelper&lt;DefaultProbabilityTermStructure&gt; QuantLib::AffineHazardRate::helper</definition>
        <argsstring></argsstring>
        <name>helper</name>
        <qualifiedname>QuantLib::AffineHazardRate::helper</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/interpolatedaffinehazardratecurve.hpp" line="159" column="33" bodyfile="ql/experimental/credit/interpolatedaffinehazardratecurve.hpp" bodystart="159" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_quant_lib_1_1_affine_hazard_rate_1abdedb31d789ab5ece29484f2c61c81be" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>static Date QuantLib::AffineHazardRate::initialDate</definition>
        <argsstring>(const DefaultProbabilityTermStructure *c)</argsstring>
        <name>initialDate</name>
        <qualifiedname>QuantLib::AffineHazardRate::initialDate</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_default_probability_term_structure" kindref="compound">DefaultProbabilityTermStructure</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/interpolatedaffinehazardratecurve.hpp" line="162" column="21" bodyfile="ql/experimental/credit/interpolatedaffinehazardratecurve.hpp" bodystart="162" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1_affine_hazard_rate_1a64afdf1396674a94ccfe3897d1353839" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>static Real QuantLib::AffineHazardRate::initialValue</definition>
        <argsstring>(const DefaultProbabilityTermStructure *)</argsstring>
        <name>initialValue</name>
        <qualifiedname>QuantLib::AffineHazardRate::initialValue</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_default_probability_term_structure" kindref="compound">DefaultProbabilityTermStructure</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/interpolatedaffinehazardratecurve.hpp" line="166" column="21" bodyfile="ql/experimental/credit/interpolatedaffinehazardratecurve.hpp" bodystart="166" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1_affine_hazard_rate_1a919c464abca24cebbe296bfa74214ea5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class C</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>static Real QuantLib::AffineHazardRate::guess</definition>
        <argsstring>(Size i, const C *c, bool validData, Size)</argsstring>
        <name>guess</name>
        <qualifiedname>QuantLib::AffineHazardRate::guess</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>const C *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>validData</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/interpolatedaffinehazardratecurve.hpp" line="172" column="21" bodyfile="ql/experimental/credit/interpolatedaffinehazardratecurve.hpp" bodystart="172" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1_affine_hazard_rate_1a033a447766e11c882965309eea2034f3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class C</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>static Real QuantLib::AffineHazardRate::minValueAfter</definition>
        <argsstring>(Size i, const C *c, bool validData, Size)</argsstring>
        <name>minValueAfter</name>
        <qualifiedname>QuantLib::AffineHazardRate::minValueAfter</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>const C *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>validData</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>return QL_EPSILON;</para>
        </inbodydescription>
        <location file="ql/experimental/credit/interpolatedaffinehazardratecurve.hpp" line="196" column="21" bodyfile="ql/experimental/credit/interpolatedaffinehazardratecurve.hpp" bodystart="196" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1_affine_hazard_rate_1a4bbeae522092ef889d27c8daaae69586" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class C</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>static Real QuantLib::AffineHazardRate::maxValueAfter</definition>
        <argsstring>(Size i, const C *c, bool validData, Size)</argsstring>
        <name>maxValueAfter</name>
        <qualifiedname>QuantLib::AffineHazardRate::maxValueAfter</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>const C *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>validData</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/interpolatedaffinehazardratecurve.hpp" line="210" column="21" bodyfile="ql/experimental/credit/interpolatedaffinehazardratecurve.hpp" bodystart="210" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1_affine_hazard_rate_1a54de8feb299ebd978726984086320cc6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void QuantLib::AffineHazardRate::updateGuess</definition>
        <argsstring>(std::vector&lt; Real &gt; &amp;data, Real rate, Size i)</argsstring>
        <name>updateGuess</name>
        <qualifiedname>QuantLib::AffineHazardRate::updateGuess</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>rate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/interpolatedaffinehazardratecurve.hpp" line="225" column="21" bodyfile="ql/experimental/credit/interpolatedaffinehazardratecurve.hpp" bodystart="225" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1_affine_hazard_rate_1a2664cf2d0f0b82121d4d04e963099a7c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>static Size QuantLib::AffineHazardRate::maxIterations</definition>
        <argsstring>()</argsstring>
        <name>maxIterations</name>
        <qualifiedname>QuantLib::AffineHazardRate::maxIterations</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/interpolatedaffinehazardratecurve.hpp" line="233" column="21" bodyfile="ql/experimental/credit/interpolatedaffinehazardratecurve.hpp" bodystart="233" bodyend="233"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Piecewise (deterministic) plus affine (stochastic) terms composed hazard rate </para>
    </detaileddescription>
    <location file="ql/experimental/credit/interpolatedaffinehazardratecurve.hpp" line="152" column="5" bodyfile="ql/experimental/credit/interpolatedaffinehazardratecurve.hpp" bodystart="152" bodyend="234"/>
    <listofallmembers>
      <member refid="struct_quant_lib_1_1_affine_hazard_rate_1a919c464abca24cebbe296bfa74214ea5" prot="public" virt="non-virtual"><scope>QuantLib::AffineHazardRate</scope><name>guess</name></member>
      <member refid="struct_quant_lib_1_1_affine_hazard_rate_1a872e3c6ab6e18ef63f99e879415921ff" prot="public" virt="non-virtual"><scope>QuantLib::AffineHazardRate</scope><name>helper</name></member>
      <member refid="struct_quant_lib_1_1_affine_hazard_rate_1abdedb31d789ab5ece29484f2c61c81be" prot="public" virt="non-virtual"><scope>QuantLib::AffineHazardRate</scope><name>initialDate</name></member>
      <member refid="struct_quant_lib_1_1_affine_hazard_rate_1a64afdf1396674a94ccfe3897d1353839" prot="public" virt="non-virtual"><scope>QuantLib::AffineHazardRate</scope><name>initialValue</name></member>
      <member refid="struct_quant_lib_1_1_affine_hazard_rate_1a2664cf2d0f0b82121d4d04e963099a7c" prot="public" virt="non-virtual"><scope>QuantLib::AffineHazardRate</scope><name>maxIterations</name></member>
      <member refid="struct_quant_lib_1_1_affine_hazard_rate_1a4bbeae522092ef889d27c8daaae69586" prot="public" virt="non-virtual"><scope>QuantLib::AffineHazardRate</scope><name>maxValueAfter</name></member>
      <member refid="struct_quant_lib_1_1_affine_hazard_rate_1a033a447766e11c882965309eea2034f3" prot="public" virt="non-virtual"><scope>QuantLib::AffineHazardRate</scope><name>minValueAfter</name></member>
      <member refid="struct_quant_lib_1_1_affine_hazard_rate_1a54de8feb299ebd978726984086320cc6" prot="public" virt="non-virtual"><scope>QuantLib::AffineHazardRate</scope><name>updateGuess</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

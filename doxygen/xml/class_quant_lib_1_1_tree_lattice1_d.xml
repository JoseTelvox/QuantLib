<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_tree_lattice1_d" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::TreeLattice1D</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_tree_lattice" prot="public" virt="non-virtual">QuantLib::TreeLattice&lt; Impl &gt;</basecompoundref>
    <includes refid="lattice1d_8hpp" local="no">lattice1d.hpp</includes>
    <templateparamlist>
      <param>
        <type>class Impl</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_tree_lattice1_d_1a9b95281ce118c71a4a1f6fe50dd56f23" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::TreeLattice1D&lt; Impl &gt;::TreeLattice1D</definition>
        <argsstring>(const TimeGrid &amp;timeGrid, Size n)</argsstring>
        <name>TreeLattice1D</name>
        <qualifiedname>QuantLib::TreeLattice1D::TreeLattice1D</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_time_grid" kindref="compound">TimeGrid</ref> &amp;</type>
          <declname>timeGrid</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/lattice1d.hpp" line="41" column="9" bodyfile="ql/methods/lattices/lattice1d.hpp" bodystart="41" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_tree_lattice1_d_1ac9c82080e75c1c0049ef1cf53e050f0e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::TreeLattice1D&lt; Impl &gt;::grid</definition>
        <argsstring>(Time t) const override</argsstring>
        <name>grid</name>
        <qualifiedname>QuantLib::TreeLattice1D::grid</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_lattice_1ae3039e18f2760ade4924ca994ab799dd">grid</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/lattice1d.hpp" line="43" column="15" bodyfile="ql/methods/lattices/lattice1d.hpp" bodystart="43" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_tree_lattice1_d_1aa9e680b62acddd17690023916fc8af3c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::TreeLattice1D&lt; Impl &gt;::underlying</definition>
        <argsstring>(Size i, Size index) const</argsstring>
        <name>underlying</name>
        <qualifiedname>QuantLib::TreeLattice1D::underlying</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/lattice1d.hpp" line="50" column="14" bodyfile="ql/methods/lattices/lattice1d.hpp" bodystart="50" bodyend="52"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>One-dimensional tree-based lattice. </para>
    </briefdescription>
    <detaileddescription>
<para>Derived classes must implement the following interface: <programlisting><codeline><highlight class="normal"><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>underlying(<ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i,<sp/><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>index)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>QuantLib::CuriouslyRecurringTemplate&lt; Impl &gt;</label>
        <link refid="class_quant_lib_1_1_curiously_recurring_template"/>
      </node>
      <node id="3">
        <label>QuantLib::Lattice</label>
        <link refid="class_quant_lib_1_1_lattice"/>
      </node>
      <node id="1">
        <label>QuantLib::TreeLattice1D&lt; Impl &gt;</label>
        <link refid="class_quant_lib_1_1_tree_lattice1_d"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::TreeLattice&lt; Impl &gt;</label>
        <link refid="class_quant_lib_1_1_tree_lattice"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5">
        <label>QuantLib::CuriouslyRecurringTemplate&lt; Impl &gt;</label>
        <link refid="class_quant_lib_1_1_curiously_recurring_template"/>
      </node>
      <node id="3">
        <label>QuantLib::Lattice</label>
        <link refid="class_quant_lib_1_1_lattice"/>
        <childnode refid="4" relation="usage">
          <edgelabel>t_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::TimeGrid</label>
        <link refid="class_quant_lib_1_1_time_grid"/>
      </node>
      <node id="1">
        <label>QuantLib::TreeLattice1D&lt; Impl &gt;</label>
        <link refid="class_quant_lib_1_1_tree_lattice1_d"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::TreeLattice&lt; Impl &gt;</label>
        <link refid="class_quant_lib_1_1_tree_lattice"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/methods/lattices/lattice1d.hpp" line="39" column="5" bodyfile="ql/methods/lattices/lattice1d.hpp" bodystart="39" bodyend="53"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_tree_lattice_1a85438e107417fef54b34ffc0a61a9478" prot="protected" virt="non-virtual"><scope>QuantLib::TreeLattice1D</scope><name>computeStatePrices</name></member>
      <member refid="class_quant_lib_1_1_curiously_recurring_template_1ac51e69d7c3e616686e8777fcabebf954" prot="protected" virt="non-virtual"><scope>QuantLib::TreeLattice1D</scope><name>CuriouslyRecurringTemplate</name></member>
      <member refid="class_quant_lib_1_1_tree_lattice1_d_1ac9c82080e75c1c0049ef1cf53e050f0e" prot="public" virt="virtual"><scope>QuantLib::TreeLattice1D</scope><name>grid</name></member>
      <member refid="class_quant_lib_1_1_curiously_recurring_template_1a72c11590c74c9d0085fd43f17cdfe96e" prot="protected" virt="non-virtual"><scope>QuantLib::TreeLattice1D</scope><name>impl</name></member>
      <member refid="class_quant_lib_1_1_curiously_recurring_template_1a9efaa4c38bfca1e148ed265a809ed220" prot="protected" virt="non-virtual"><scope>QuantLib::TreeLattice1D</scope><name>impl</name></member>
      <member refid="class_quant_lib_1_1_tree_lattice_1a33d74ea97e97eb59a0e54e79a51c9a86" prot="public" virt="virtual"><scope>QuantLib::TreeLattice1D</scope><name>initialize</name></member>
      <member refid="class_quant_lib_1_1_lattice_1aff24a1110ca7dc6869aa7bdde456101f" prot="public" virt="non-virtual"><scope>QuantLib::TreeLattice1D</scope><name>Lattice</name></member>
      <member refid="class_quant_lib_1_1_tree_lattice_1a09aedab2e04fc74f4924b7a7eddb37d4" prot="public" virt="virtual"><scope>QuantLib::TreeLattice1D</scope><name>partialRollback</name></member>
      <member refid="class_quant_lib_1_1_tree_lattice_1a64f73976b6ca374d7db218bb17325265" prot="public" virt="virtual"><scope>QuantLib::TreeLattice1D</scope><name>presentValue</name></member>
      <member refid="class_quant_lib_1_1_tree_lattice_1ad4df1c2dd46c759fa2553fdb3d95ab0b" prot="public" virt="virtual"><scope>QuantLib::TreeLattice1D</scope><name>rollback</name></member>
      <member refid="class_quant_lib_1_1_tree_lattice_1aba703e7ad6dbc1d481e8d1b0cfce75fe" prot="public" virt="non-virtual"><scope>QuantLib::TreeLattice1D</scope><name>statePrices</name></member>
      <member refid="class_quant_lib_1_1_tree_lattice_1abcd8fa93a0c49f6f79a94077cc945e24" prot="protected" virt="non-virtual"><scope>QuantLib::TreeLattice1D</scope><name>statePrices_</name></member>
      <member refid="class_quant_lib_1_1_tree_lattice_1a8b35328c08042a7d515d56e596aca076" prot="public" virt="non-virtual"><scope>QuantLib::TreeLattice1D</scope><name>stepback</name></member>
      <member refid="class_quant_lib_1_1_lattice_1ad4983a465b76964a8f794ba1c6a6843d" prot="protected" virt="non-virtual"><scope>QuantLib::TreeLattice1D</scope><name>t_</name></member>
      <member refid="class_quant_lib_1_1_lattice_1a4c14b1590e92d0b198934bbce3c7666e" prot="public" virt="non-virtual"><scope>QuantLib::TreeLattice1D</scope><name>timeGrid</name></member>
      <member refid="class_quant_lib_1_1_tree_lattice_1ac5c0f8d4ca53ffb5e0e47a61c1ba64a5" prot="public" virt="non-virtual"><scope>QuantLib::TreeLattice1D</scope><name>TreeLattice</name></member>
      <member refid="class_quant_lib_1_1_tree_lattice1_d_1a9b95281ce118c71a4a1f6fe50dd56f23" prot="public" virt="non-virtual"><scope>QuantLib::TreeLattice1D</scope><name>TreeLattice1D</name></member>
      <member refid="class_quant_lib_1_1_tree_lattice1_d_1aa9e680b62acddd17690023916fc8af3c" prot="public" virt="non-virtual"><scope>QuantLib::TreeLattice1D</scope><name>underlying</name></member>
      <member refid="class_quant_lib_1_1_curiously_recurring_template_1ae22b4353d3c05a5aad5f5b8769392b05" prot="protected" virt="non-virtual"><scope>QuantLib::TreeLattice1D</scope><name>~CuriouslyRecurringTemplate</name></member>
      <member refid="class_quant_lib_1_1_lattice_1adad7ac14bff456a9cf05967e6df004d1" prot="public" virt="virtual"><scope>QuantLib::TreeLattice1D</scope><name>~Lattice</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

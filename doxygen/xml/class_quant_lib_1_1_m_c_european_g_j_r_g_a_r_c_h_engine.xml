<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_m_c_european_g_j_r_g_a_r_c_h_engine" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::MCEuropeanGJRGARCHEngine</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_m_c_vanilla_engine" prot="public" virt="non-virtual">QuantLib::MCVanillaEngine&lt; MultiVariate, PseudoRandom, Statistics &gt;</basecompoundref>
    <includes refid="mceuropeangjrgarchengine_8hpp" local="no">mceuropeangjrgarchengine.hpp</includes>
    <templateparamlist>
      <param>
        <type>class RNG</type>
        <defval><ref refid="namespace_quant_lib_1a68b9aaf5f0c17983506b1a1db8575ab0" kindref="member">PseudoRandom</ref></defval>
      </param>
      <param>
        <type>class S</type>
        <defval><ref refid="namespace_quant_lib_1ae2e788da35d2b866040a03b96227ee6e" kindref="member">Statistics</ref></defval>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_quant_lib_1_1_m_c_european_g_j_r_g_a_r_c_h_engine_1a13e5de1baf7eeb5d3f48a5b6b368b2f6" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1_m_c_vanilla_engine" kindref="compound">MCVanillaEngine</ref>&lt; <ref refid="struct_quant_lib_1_1_multi_variate" kindref="compound">MultiVariate</ref>, RNG, S &gt;::path_pricer_type</type>
        <definition>typedef MCVanillaEngine&lt;MultiVariate,RNG,S&gt;::path_pricer_type QuantLib::MCEuropeanGJRGARCHEngine&lt; RNG, S &gt;::path_pricer_type</definition>
        <argsstring></argsstring>
        <name>path_pricer_type</name>
        <qualifiedname>QuantLib::MCEuropeanGJRGARCHEngine::path_pricer_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mceuropeangjrgarchengine.hpp" line="44" column="13" bodyfile="ql/pricingengines/vanilla/mceuropeangjrgarchengine.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_m_c_european_g_j_r_g_a_r_c_h_engine_1adb350f5896709b29f4a9b5f7b259052c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::MCEuropeanGJRGARCHEngine&lt; RNG, S &gt;::MCEuropeanGJRGARCHEngine</definition>
        <argsstring>(const ext::shared_ptr&lt; GJRGARCHProcess &gt; &amp;, Size timeSteps, Size timeStepsPerYear, bool antitheticVariate, Size requiredSamples, Real requiredTolerance, Size maxSamples, BigNatural seed)</argsstring>
        <name>MCEuropeanGJRGARCHEngine</name>
        <qualifiedname>QuantLib::MCEuropeanGJRGARCHEngine::MCEuropeanGJRGARCHEngine</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_g_j_r_g_a_r_c_h_process" kindref="compound">GJRGARCHProcess</ref> &gt; &amp;</type>
          <defname>process</defname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>timeSteps</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>timeStepsPerYear</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>antitheticVariate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>requiredSamples</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>requiredTolerance</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>maxSamples</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mceuropeangjrgarchengine.hpp" line="45" column="9" bodyfile="ql/pricingengines/vanilla/mceuropeangjrgarchengine.hpp" bodystart="97" bodyend="105"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_m_c_european_g_j_r_g_a_r_c_h_engine_1a94e4530018c772232ebc2e73cb5bc824" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_path_pricer" kindref="compound">path_pricer_type</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; typename MCEuropeanGJRGARCHEngine&lt; RNG, S &gt;::path_pricer_type &gt; QuantLib::MCEuropeanGJRGARCHEngine&lt; RNG, S &gt;::pathPricer</definition>
        <argsstring>() const override</argsstring>
        <name>pathPricer</name>
        <qualifiedname>QuantLib::MCEuropeanGJRGARCHEngine::pathPricer</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_mc_simulation_1a0e142b20adbf77779877d3603f9fa9b5">pathPricer</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mceuropeangjrgarchengine.hpp" line="54" column="25" bodyfile="ql/pricingengines/vanilla/mceuropeangjrgarchengine.hpp" bodystart="111" bodyend="129"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Monte Carlo GJR-GARCH-model engine for European options. </para>
    </briefdescription>
    <detaileddescription>
<para><xrefsect id="test_1_test000159"><xreftitle>Test</xreftitle><xrefdescription><para>the correctness of the returned value is tested by reproducing results available in web/literature </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::MCEuropeanGJRGARCHEngine&lt; RNG, S &gt;</label>
        <link refid="class_quant_lib_1_1_m_c_european_g_j_r_g_a_r_c_h_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::MCVanillaEngine&lt; MultiVariate, PseudoRandom, Statistics &gt;</label>
        <link refid="class_quant_lib_1_1_m_c_vanilla_engine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::McSimulation&lt; MultiVariate, PseudoRandom, Statistics &gt;</label>
        <link refid="class_quant_lib_1_1_mc_simulation"/>
      </node>
      <node id="3">
        <label>VanillaOption::engine</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::MCEuropeanGJRGARCHEngine&lt; RNG, S &gt;</label>
        <link refid="class_quant_lib_1_1_m_c_european_g_j_r_g_a_r_c_h_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::MCVanillaEngine&lt; MultiVariate, PseudoRandom, Statistics &gt;</label>
        <link refid="class_quant_lib_1_1_m_c_vanilla_engine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::McSimulation&lt; MultiVariate, PseudoRandom, Statistics &gt;</label>
        <link refid="class_quant_lib_1_1_mc_simulation"/>
      </node>
      <node id="3">
        <label>VanillaOption::engine</label>
      </node>
    </collaborationgraph>
    <location file="ql/pricingengines/vanilla/mceuropeangjrgarchengine.hpp" line="40" column="5" bodyfile="ql/pricingengines/vanilla/mceuropeangjrgarchengine.hpp" bodystart="41" bodyend="55"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_mc_simulation_1a06f6de1952807cb9e689619d3f48450d" prot="protected" virt="non-virtual"><scope>QuantLib::MCEuropeanGJRGARCHEngine</scope><name>antitheticVariate_</name></member>
      <member refid="class_quant_lib_1_1_m_c_vanilla_engine_1aa83929498aa10e44950b6ca09284cbe0" prot="protected" virt="non-virtual"><scope>QuantLib::MCEuropeanGJRGARCHEngine</scope><name>brownianBridge_</name></member>
      <member refid="class_quant_lib_1_1_m_c_vanilla_engine_1a7082c558a7a337ea5a3365430b740db4" prot="public" virt="non-virtual"><scope>QuantLib::MCEuropeanGJRGARCHEngine</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1af5ccf2e30a050c14f9e30965855b4993" prot="public" virt="non-virtual" ambiguityscope="QuantLib::McSimulation&lt; MultiVariate, PseudoRandom, Statistics &gt;::"><scope>QuantLib::MCEuropeanGJRGARCHEngine</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a81f0b6c250bc8a1ba246faa3b7bbe70f" prot="protected" virt="virtual"><scope>QuantLib::MCEuropeanGJRGARCHEngine</scope><name>controlPathGenerator</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1ae3b7f6e12eaf228b5c65f70a721eb729" prot="protected" virt="virtual"><scope>QuantLib::MCEuropeanGJRGARCHEngine</scope><name>controlPathPricer</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1ad835a3988a983d55494f911f53b78408" prot="protected" virt="virtual"><scope>QuantLib::MCEuropeanGJRGARCHEngine</scope><name>controlPricingEngine</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a0c55429fb2a2d840cd8d358a5973cc40" prot="protected" virt="non-virtual"><scope>QuantLib::MCEuropeanGJRGARCHEngine</scope><name>controlVariate_</name></member>
      <member refid="class_quant_lib_1_1_m_c_vanilla_engine_1ac1df3f9481ce47a70dfb4bef1eb393ea" prot="protected" virt="virtual"><scope>QuantLib::MCEuropeanGJRGARCHEngine</scope><name>controlVariateValue</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1aa74e7e1891852e5c96da544b87af083c" prot="public" virt="non-virtual"><scope>QuantLib::MCEuropeanGJRGARCHEngine</scope><name>errorEstimate</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1ae21c92c6196d56c6a889389268ef2075" prot="protected" virt="non-virtual"><scope>QuantLib::MCEuropeanGJRGARCHEngine</scope><name>maxError</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a10d5e5d85cc108ab976899890055e061" prot="protected" virt="non-virtual"><scope>QuantLib::MCEuropeanGJRGARCHEngine</scope><name>maxError</name></member>
      <member refid="class_quant_lib_1_1_m_c_vanilla_engine_1a32b1d358361dec1b85c6a4085da5c73b" prot="protected" virt="non-virtual"><scope>QuantLib::MCEuropeanGJRGARCHEngine</scope><name>maxSamples_</name></member>
      <member refid="class_quant_lib_1_1_m_c_european_g_j_r_g_a_r_c_h_engine_1adb350f5896709b29f4a9b5f7b259052c" prot="public" virt="non-virtual"><scope>QuantLib::MCEuropeanGJRGARCHEngine</scope><name>MCEuropeanGJRGARCHEngine</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1afbdbf4a8ce56b1b6060c49ac91b1f55a" prot="protected" virt="non-virtual"><scope>QuantLib::MCEuropeanGJRGARCHEngine</scope><name>mcModel_</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a3242253b8262657e78739463a077c1d6" prot="protected" virt="non-virtual"><scope>QuantLib::MCEuropeanGJRGARCHEngine</scope><name>McSimulation</name></member>
      <member refid="class_quant_lib_1_1_m_c_vanilla_engine_1a0da73f7e7964a61da3adc30fd168f2db" prot="protected" virt="non-virtual"><scope>QuantLib::MCEuropeanGJRGARCHEngine</scope><name>MCVanillaEngine</name></member>
      <member refid="class_quant_lib_1_1_m_c_vanilla_engine_1a4828a21a4433d3e79e8c85155a1e9a44" prot="protected" virt="non-virtual"><scope>QuantLib::MCEuropeanGJRGARCHEngine</scope><name>path_generator_type</name></member>
      <member refid="class_quant_lib_1_1_m_c_european_g_j_r_g_a_r_c_h_engine_1a13e5de1baf7eeb5d3f48a5b6b368b2f6" prot="public" virt="non-virtual"><scope>QuantLib::MCEuropeanGJRGARCHEngine</scope><name>path_pricer_type</name></member>
      <member refid="class_quant_lib_1_1_m_c_vanilla_engine_1af619e062350d6b7f5f8b5e09e435c0ff" prot="protected" virt="virtual"><scope>QuantLib::MCEuropeanGJRGARCHEngine</scope><name>pathGenerator</name></member>
      <member refid="class_quant_lib_1_1_m_c_european_g_j_r_g_a_r_c_h_engine_1a94e4530018c772232ebc2e73cb5bc824" prot="protected" virt="virtual"><scope>QuantLib::MCEuropeanGJRGARCHEngine</scope><name>pathPricer</name></member>
      <member refid="class_quant_lib_1_1_m_c_vanilla_engine_1a48e45e6119f7fe81565ccd27a90e69bc" prot="protected" virt="non-virtual"><scope>QuantLib::MCEuropeanGJRGARCHEngine</scope><name>process_</name></member>
      <member refid="class_quant_lib_1_1_m_c_vanilla_engine_1a2fc6d9a617935d2802aee2a51af90d5d" prot="protected" virt="non-virtual"><scope>QuantLib::MCEuropeanGJRGARCHEngine</scope><name>requiredSamples_</name></member>
      <member refid="class_quant_lib_1_1_m_c_vanilla_engine_1a94996af57128d0ae8b0ff8cc90e09a68" prot="protected" virt="non-virtual"><scope>QuantLib::MCEuropeanGJRGARCHEngine</scope><name>requiredTolerance_</name></member>
      <member refid="class_quant_lib_1_1_m_c_vanilla_engine_1ae8467aceaa70b1a7bb31b1985e7bedc0" prot="protected" virt="non-virtual"><scope>QuantLib::MCEuropeanGJRGARCHEngine</scope><name>result_type</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1aada0200a7fb38c4bc94bbcb49464d35b" prot="public" virt="non-virtual"><scope>QuantLib::MCEuropeanGJRGARCHEngine</scope><name>sampleAccumulator</name></member>
      <member refid="class_quant_lib_1_1_m_c_vanilla_engine_1a9e2a9433f99d100189f4a364536e7f81" prot="protected" virt="non-virtual"><scope>QuantLib::MCEuropeanGJRGARCHEngine</scope><name>seed_</name></member>
      <member refid="class_quant_lib_1_1_m_c_vanilla_engine_1a7ef339c7e51c0fd49d672004cc62e61f" prot="protected" virt="non-virtual"><scope>QuantLib::MCEuropeanGJRGARCHEngine</scope><name>stats_type</name></member>
      <member refid="class_quant_lib_1_1_m_c_vanilla_engine_1a9860e354e46988f9fca156a8177ecf62" prot="protected" virt="virtual"><scope>QuantLib::MCEuropeanGJRGARCHEngine</scope><name>timeGrid</name></member>
      <member refid="class_quant_lib_1_1_m_c_vanilla_engine_1af1c36d911974082085bf4017ee24a8c0" prot="protected" virt="non-virtual"><scope>QuantLib::MCEuropeanGJRGARCHEngine</scope><name>timeSteps_</name></member>
      <member refid="class_quant_lib_1_1_m_c_vanilla_engine_1a8f49dec4cdb7429744822425438dcdc6" prot="protected" virt="non-virtual"><scope>QuantLib::MCEuropeanGJRGARCHEngine</scope><name>timeStepsPerYear_</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a1c903a9dd586755f55377b522d99ac16" prot="public" virt="non-virtual"><scope>QuantLib::MCEuropeanGJRGARCHEngine</scope><name>value</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a06e9db2fbd3d80e6358e8494f4b6b6ea" prot="public" virt="non-virtual"><scope>QuantLib::MCEuropeanGJRGARCHEngine</scope><name>valueWithSamples</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a11624b5e53889858d9189f85e27d653d" prot="public" virt="virtual"><scope>QuantLib::MCEuropeanGJRGARCHEngine</scope><name>~McSimulation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

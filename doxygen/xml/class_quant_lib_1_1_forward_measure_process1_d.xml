<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_forward_measure_process1_d" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::ForwardMeasureProcess1D</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_stochastic_process1_d" prot="public" virt="non-virtual">QuantLib::StochasticProcess1D</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_gsr_process" prot="public" virt="non-virtual">QuantLib::GsrProcess</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_hull_white_forward_process" prot="public" virt="non-virtual">QuantLib::HullWhiteForwardProcess</derivedcompoundref>
    <includes refid="forwardmeasureprocess_8hpp" local="no">forwardmeasureprocess.hpp</includes>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_measure_process1_d_1a05fc6ae81fca7bb07b2a735516c302a2" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>Time QuantLib::ForwardMeasureProcess1D::T_</definition>
        <argsstring></argsstring>
        <name>T_</name>
        <qualifiedname>QuantLib::ForwardMeasureProcess1D::T_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/forwardmeasureprocess.hpp" line="64" column="14" bodyfile="ql/processes/forwardmeasureprocess.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_forward_measure_process1_d_1a288020a065ed1e78edeabf5f1680ae56" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::ForwardMeasureProcess1D::setForwardMeasureTime</definition>
        <argsstring>(Time)</argsstring>
        <name>setForwardMeasureTime</name>
        <qualifiedname>QuantLib::ForwardMeasureProcess1D::setForwardMeasureTime</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_gsr_process_1a401cabe2a46aad8c304bc92708eca385">setForwardMeasureTime</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <defname>T</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/forwardmeasureprocess.hpp" line="57" column="22" bodyfile="ql/processes/forwardmeasureprocess.cpp" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_measure_process1_d_1a6d7f571f0a20a65ec90e47050912af5b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>Time QuantLib::ForwardMeasureProcess1D::getForwardMeasureTime</definition>
        <argsstring>() const</argsstring>
        <name>getForwardMeasureTime</name>
        <qualifiedname>QuantLib::ForwardMeasureProcess1D::getForwardMeasureTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/forwardmeasureprocess.hpp" line="58" column="14" bodyfile="ql/processes/forwardmeasureprocess.cpp" bodystart="50" bodyend="52"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_forward_measure_process1_d_1af979d0c5450a0f246b0a4f25de461eca" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ForwardMeasureProcess1D::ForwardMeasureProcess1D</definition>
        <argsstring>()=default</argsstring>
        <name>ForwardMeasureProcess1D</name>
        <qualifiedname>QuantLib::ForwardMeasureProcess1D::ForwardMeasureProcess1D</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/forwardmeasureprocess.hpp" line="60" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_measure_process1_d_1a94185a3644676074e138d2fdd37d6610" prot="protected" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ForwardMeasureProcess1D::ForwardMeasureProcess1D</definition>
        <argsstring>(Time T)</argsstring>
        <name>ForwardMeasureProcess1D</name>
        <qualifiedname>QuantLib::ForwardMeasureProcess1D::ForwardMeasureProcess1D</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>T</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/forwardmeasureprocess.hpp" line="61" column="18" bodyfile="ql/processes/forwardmeasureprocess.hpp" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_measure_process1_d_1a4ec0ebb27c1d1f1b008e853f4658587f" prot="protected" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ForwardMeasureProcess1D::ForwardMeasureProcess1D</definition>
        <argsstring>(const ext::shared_ptr&lt; discretization &gt; &amp;)</argsstring>
        <name>ForwardMeasureProcess1D</name>
        <qualifiedname>QuantLib::ForwardMeasureProcess1D::ForwardMeasureProcess1D</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_stochastic_process_1_1discretization" kindref="compound">discretization</ref> &gt; &amp;</type>
          <defname>disc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/forwardmeasureprocess.hpp" line="62" column="18" bodyfile="ql/processes/forwardmeasureprocess.cpp" bodystart="41" bodyend="43"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>forward-measure 1-D stochastic process </para>
    </briefdescription>
    <detaileddescription>
<para>1-D stochastic process whose dynamics are expressed in the forward measure. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::ForwardMeasureProcess1D</label>
        <link refid="class_quant_lib_1_1_forward_measure_process1_d"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::GsrProcess</label>
        <link refid="class_quant_lib_1_1_gsr_process"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::HullWhiteForwardProcess</label>
        <link refid="class_quant_lib_1_1_hull_white_forward_process"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="3">
        <label>QuantLib::StochasticProcess</label>
        <link refid="class_quant_lib_1_1_stochastic_process"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::StochasticProcess1D</label>
        <link refid="class_quant_lib_1_1_stochastic_process1_d"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::ForwardMeasureProcess1D</label>
        <link refid="class_quant_lib_1_1_forward_measure_process1_d"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="3">
        <label>QuantLib::StochasticProcess</label>
        <link refid="class_quant_lib_1_1_stochastic_process"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::StochasticProcess1D</label>
        <link refid="class_quant_lib_1_1_stochastic_process1_d"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/processes/forwardmeasureprocess.hpp" line="55" column="5" bodyfile="ql/processes/forwardmeasureprocess.hpp" bodystart="55" bodyend="65"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_stochastic_process1_d_1a303b2e3c9243b674ac1f145c304811b7" prot="public" virt="virtual"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>apply</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process1_d_1a66bde34ae0158d64169e39655fdfcfc0" prot="public" virt="pure-virtual"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>diffusion</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process1_d_1aff0e6c615f076baf4393abe860794583" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>discretization_</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process1_d_1ad27eced4c2abbe7d8da5951969158e2d" prot="public" virt="pure-virtual"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>drift</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process1_d_1a39605ea27c7ef3a7feafed4fafcc1f90" prot="public" virt="virtual"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>evolve</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process1_d_1a4543779731a4ce76e9dd85f3c81752e7" prot="public" virt="virtual"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>expectation</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a0346d38598fb9a5a1cd58024f05081aa" prot="public" virt="virtual"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>factors</name></member>
      <member refid="class_quant_lib_1_1_forward_measure_process1_d_1af979d0c5450a0f246b0a4f25de461eca" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>ForwardMeasureProcess1D</name></member>
      <member refid="class_quant_lib_1_1_forward_measure_process1_d_1a94185a3644676074e138d2fdd37d6610" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>ForwardMeasureProcess1D</name></member>
      <member refid="class_quant_lib_1_1_forward_measure_process1_d_1a4ec0ebb27c1d1f1b008e853f4658587f" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>ForwardMeasureProcess1D</name></member>
      <member refid="class_quant_lib_1_1_forward_measure_process1_d_1a6d7f571f0a20a65ec90e47050912af5b" prot="public" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>getForwardMeasureTime</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_forward_measure_process1_d_1a288020a065ed1e78edeabf5f1680ae56" prot="public" virt="virtual"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>setForwardMeasureTime</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process1_d_1a3290404acdbfcbbd6bbf8b035862e803" prot="public" virt="virtual"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>stdDeviation</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a2dd24b794a6b320bc60ba9e1a87bf48e" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>StochasticProcess</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a957ee9776d6048835106ea29ea44927f" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>StochasticProcess</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process1_d_1a8fd2dc83f956da3dd008242ee5a5c926" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>StochasticProcess1D</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process1_d_1a0971f058bea9a93d2ced17c685576686" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>StochasticProcess1D</name></member>
      <member refid="class_quant_lib_1_1_forward_measure_process1_d_1a05fc6ae81fca7bb07b2a735516c302a2" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>T_</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a39c5f08a3779665f9185a558d2b8418d" prot="public" virt="virtual"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>time</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a0f22628658fd2dc702c13c354ef3244e" prot="public" virt="virtual"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process1_d_1afec760c46c7f53d98cea9befd7087508" prot="public" virt="virtual"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>variance</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process1_d_1a4a0eee3b5c6592950bd6635177f76113" prot="public" virt="pure-virtual"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>x0</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a0e2b6a14e675db5abd0ab8965ff7b2c3" prot="public" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess1D</scope><name>~StochasticProcess</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_sampler_mirror_gaussian" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::SamplerMirrorGaussian</compoundname>
    <includes refid="hybridsimulatedannealingfunctors_8hpp" local="no">hybridsimulatedannealingfunctors.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_sampler_mirror_gaussian_1af9787d9a258bfa5c5e4f399d7ef830e5" prot="private" static="no" mutable="no">
        <type>std::mt19937</type>
        <definition>std::mt19937 QuantLib::SamplerMirrorGaussian::generator_</definition>
        <argsstring></argsstring>
        <name>generator_</name>
        <qualifiedname>QuantLib::SamplerMirrorGaussian::generator_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" line="144" column="22" bodyfile="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_sampler_mirror_gaussian_1a5fb95cfdc97745aa37dbcf36365900c4" prot="private" static="no" mutable="no">
        <type>std::normal_distribution&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::normal_distribution&lt;Real&gt; QuantLib::SamplerMirrorGaussian::distribution_</definition>
        <argsstring></argsstring>
        <name>distribution_</name>
        <qualifiedname>QuantLib::SamplerMirrorGaussian::distribution_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" line="145" column="34" bodyfile="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_sampler_mirror_gaussian_1a59645720dc9101db104bbd97536b41fc" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::SamplerMirrorGaussian::lower_</definition>
        <argsstring></argsstring>
        <name>lower_</name>
        <qualifiedname>QuantLib::SamplerMirrorGaussian::lower_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" line="146" column="15" bodyfile="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_sampler_mirror_gaussian_1a0014bcb1e7bcabd5648352df49a4522b" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::SamplerMirrorGaussian::upper_</definition>
        <argsstring></argsstring>
        <name>upper_</name>
        <qualifiedname>QuantLib::SamplerMirrorGaussian::upper_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" line="146" column="22" bodyfile="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_sampler_mirror_gaussian_1ad2e4cad7dd19bcfa036fa46e5a97060d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::SamplerMirrorGaussian::SamplerMirrorGaussian</definition>
        <argsstring>(Array lower, Array upper, unsigned long seed=SeedGenerator::instance().get())</argsstring>
        <name>SamplerMirrorGaussian</name>
        <qualifiedname>QuantLib::SamplerMirrorGaussian::SamplerMirrorGaussian</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
          <declname>lower</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
          <declname>upper</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>seed</declname>
          <defval><ref refid="class_quant_lib_1_1_singleton_1ac412b7766b32f56372a3e966c5f3f386" kindref="member">SeedGenerator::instance</ref>().get()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" line="123" column="7" bodyfile="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" bodystart="123" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_sampler_mirror_gaussian_1aae5b3de8505af599059f2e26533e2915" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::SamplerMirrorGaussian::operator()</definition>
        <argsstring>(Array &amp;newPoint, const Array &amp;currentPoint, const Array &amp;temp)</argsstring>
        <name>operator()</name>
        <qualifiedname>QuantLib::SamplerMirrorGaussian::operator()</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>newPoint</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>currentPoint</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>temp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" line="129" column="14" bodyfile="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" bodystart="129" bodyend="142"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Gaussian Mirror Sampler. </para>
    </briefdescription>
    <detaileddescription>
<para><ref refid="struct_quant_lib_1_1_sample" kindref="compound">Sample</ref> from normal distribution, but constrained to lie within .boundaries. If the value ends up beyond the boundary, the value is reflected back. </para>
    </detaileddescription>
    <location file="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" line="120" column="5" bodyfile="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" bodystart="121" bodyend="147"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_sampler_mirror_gaussian_1a5fb95cfdc97745aa37dbcf36365900c4" prot="private" virt="non-virtual"><scope>QuantLib::SamplerMirrorGaussian</scope><name>distribution_</name></member>
      <member refid="class_quant_lib_1_1_sampler_mirror_gaussian_1af9787d9a258bfa5c5e4f399d7ef830e5" prot="private" virt="non-virtual"><scope>QuantLib::SamplerMirrorGaussian</scope><name>generator_</name></member>
      <member refid="class_quant_lib_1_1_sampler_mirror_gaussian_1a59645720dc9101db104bbd97536b41fc" prot="private" virt="non-virtual"><scope>QuantLib::SamplerMirrorGaussian</scope><name>lower_</name></member>
      <member refid="class_quant_lib_1_1_sampler_mirror_gaussian_1aae5b3de8505af599059f2e26533e2915" prot="public" virt="non-virtual"><scope>QuantLib::SamplerMirrorGaussian</scope><name>operator()</name></member>
      <member refid="class_quant_lib_1_1_sampler_mirror_gaussian_1ad2e4cad7dd19bcfa036fa46e5a97060d" prot="public" virt="non-virtual"><scope>QuantLib::SamplerMirrorGaussian</scope><name>SamplerMirrorGaussian</name></member>
      <member refid="class_quant_lib_1_1_sampler_mirror_gaussian_1a0014bcb1e7bcabd5648352df49a4522b" prot="private" virt="non-virtual"><scope>QuantLib::SamplerMirrorGaussian</scope><name>upper_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

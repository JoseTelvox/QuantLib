<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_floating_rate_coupon_pricer" prot="public" virt="non-virtual">QuantLib::FloatingRateCouponPricer</basecompoundref>
    <includes refid="overnightindexedcouponpricer_8hpp" local="no">overnightindexedcouponpricer.hpp</includes>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1a27fe465c93a81025927489d8c1c19bbd" prot="protected" static="no" mutable="no">
        <type>const <ref refid="class_quant_lib_1_1_overnight_indexed_coupon" kindref="compound">OvernightIndexedCoupon</ref> *</type>
        <definition>const OvernightIndexedCoupon* QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer::coupon_</definition>
        <argsstring></argsstring>
        <name>coupon_</name>
        <qualifiedname>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer::coupon_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/overnightindexedcouponpricer.hpp" line="84" column="38" bodyfile="ql/cashflows/overnightindexedcouponpricer.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1a529ad9674741daaa6e1cda1f5230a863" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer::byApprox_</definition>
        <argsstring></argsstring>
        <name>byApprox_</name>
        <qualifiedname>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer::byApprox_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/overnightindexedcouponpricer.hpp" line="85" column="14" bodyfile="ql/cashflows/overnightindexedcouponpricer.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1aedfe2d369031b9ad4070856ff6a51080" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer::mrs_</definition>
        <argsstring></argsstring>
        <name>mrs_</name>
        <qualifiedname>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer::mrs_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/overnightindexedcouponpricer.hpp" line="86" column="14" bodyfile="ql/cashflows/overnightindexedcouponpricer.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1abd747902cb541ade231d3055d44bf331" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer::vol_</definition>
        <argsstring></argsstring>
        <name>vol_</name>
        <qualifiedname>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer::vol_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/overnightindexedcouponpricer.hpp" line="87" column="14" bodyfile="ql/cashflows/overnightindexedcouponpricer.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1adb79ae28ee4e0743b49f5878fe3053f3" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer::ArithmeticAveragedOvernightIndexedCouponPricer</definition>
        <argsstring>(Real meanReversion=0.03, Real volatility=0.00, bool byApprox=false)</argsstring>
        <name>ArithmeticAveragedOvernightIndexedCouponPricer</name>
        <qualifiedname>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer::ArithmeticAveragedOvernightIndexedCouponPricer</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>meanReversion</declname>
          <defval>0.03</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>volatility</declname>
          <defval>0.00</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>byApprox</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/overnightindexedcouponpricer.hpp" line="63" column="18" bodyfile="ql/cashflows/overnightindexedcouponpricer.hpp" bodystart="63" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1a7fa10c881eb24b1671e9ac09aa751b14" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer::ArithmeticAveragedOvernightIndexedCouponPricer</definition>
        <argsstring>(bool byApprox)</argsstring>
        <name>ArithmeticAveragedOvernightIndexedCouponPricer</name>
        <qualifiedname>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer::ArithmeticAveragedOvernightIndexedCouponPricer</qualifiedname>
        <param>
          <type>bool</type>
          <declname>byApprox</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/overnightindexedcouponpricer.hpp" line="69" column="18" bodyfile="ql/cashflows/overnightindexedcouponpricer.hpp" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1adc2aff614f07a65e70522f759c85458b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer::initialize</definition>
        <argsstring>(const FloatingRateCoupon &amp;coupon) override</argsstring>
        <name>initialize</name>
        <qualifiedname>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer::initialize</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_floating_rate_coupon_pricer_1a6fa43469232d5549a1a68bffcf851035">initialize</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_floating_rate_coupon" kindref="compound">FloatingRateCoupon</ref> &amp;</type>
          <declname>coupon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/overnightindexedcouponpricer.hpp" line="73" column="14" bodyfile="ql/cashflows/overnightindexedcouponpricer.cpp" bodystart="180" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1a2ccadafaf4cee80b71e9347b3cc6a46f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer::swapletRate</definition>
        <argsstring>() const override</argsstring>
        <name>swapletRate</name>
        <qualifiedname>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer::swapletRate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_floating_rate_coupon_pricer_1a99682076c5aa2992d6cab3acf092d1c6">swapletRate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/overnightindexedcouponpricer.hpp" line="74" column="14" bodyfile="ql/cashflows/overnightindexedcouponpricer.cpp" bodystart="185" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1a6c44f5aa5104c1741751a4ced044a702" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer::swapletPrice</definition>
        <argsstring>() const override</argsstring>
        <name>swapletPrice</name>
        <qualifiedname>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer::swapletPrice</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_floating_rate_coupon_pricer_1a30dad486d36c708d9cfe35e72a69d9fa">swapletPrice</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/overnightindexedcouponpricer.hpp" line="75" column="14" bodyfile="ql/cashflows/overnightindexedcouponpricer.hpp" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1abae10a24b03d2eeae0dd1a2648641ed5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer::capletPrice</definition>
        <argsstring>(Rate) const override</argsstring>
        <name>capletPrice</name>
        <qualifiedname>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer::capletPrice</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_floating_rate_coupon_pricer_1ad7c3af9e13ded8736c1bf0e5df0fdfe7">capletPrice</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/overnightindexedcouponpricer.hpp" line="76" column="14" bodyfile="ql/cashflows/overnightindexedcouponpricer.hpp" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1a8f70423845ca5dfde21561dd33b4d1ac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer::capletRate</definition>
        <argsstring>(Rate) const override</argsstring>
        <name>capletRate</name>
        <qualifiedname>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer::capletRate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_floating_rate_coupon_pricer_1aac66313cfaae17dc11ced8ac79aae0b1">capletRate</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/overnightindexedcouponpricer.hpp" line="77" column="14" bodyfile="ql/cashflows/overnightindexedcouponpricer.hpp" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1a95925b49ca30390ff42d84fcdb3878d5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer::floorletPrice</definition>
        <argsstring>(Rate) const override</argsstring>
        <name>floorletPrice</name>
        <qualifiedname>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer::floorletPrice</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_floating_rate_coupon_pricer_1a1698d77f971242c8907909e84613a00a">floorletPrice</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/overnightindexedcouponpricer.hpp" line="78" column="14" bodyfile="ql/cashflows/overnightindexedcouponpricer.hpp" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1ade4129436554116f2fa4c1f46503d029" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer::floorletRate</definition>
        <argsstring>(Rate) const override</argsstring>
        <name>floorletRate</name>
        <qualifiedname>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer::floorletRate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_floating_rate_coupon_pricer_1ac72336ef70f62c68f1af26c5868d461c">floorletRate</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/overnightindexedcouponpricer.hpp" line="79" column="14" bodyfile="ql/cashflows/overnightindexedcouponpricer.hpp" bodystart="79" bodyend="79"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1a060571c641aeb19e3633ba356f8484e7" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer::convAdj1</definition>
        <argsstring>(Time ts, Time te) const</argsstring>
        <name>convAdj1</name>
        <qualifiedname>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer::convAdj1</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>ts</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>te</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/overnightindexedcouponpricer.hpp" line="82" column="14" bodyfile="ql/cashflows/overnightindexedcouponpricer.cpp" bodystart="270" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1a7a97c851d99eb9353a30e9c3472976b5" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer::convAdj2</definition>
        <argsstring>(Time ts, Time te) const</argsstring>
        <name>convAdj2</name>
        <qualifiedname>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer::convAdj2</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>ts</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>te</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/overnightindexedcouponpricer.hpp" line="83" column="14" bodyfile="ql/cashflows/overnightindexedcouponpricer.cpp" bodystart="275" bodyend="279"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>pricer for arithmetically averaged overnight indexed coupons Reference: Katsumi Takada 2011, Valuation of Arithmetically <ref refid="struct_quant_lib_1_1_average" kindref="compound">Average</ref> of Fed Funds Rates and Construction of the US Dollar <ref refid="class_quant_lib_1_1_swap" kindref="compound">Swap</ref> Yield Curve </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</label>
        <link refid="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::FloatingRateCouponPricer</label>
        <link refid="class_quant_lib_1_1_floating_rate_coupon_pricer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="3">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</label>
        <link refid="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>coupon_</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::CashFlow</label>
        <link refid="class_quant_lib_1_1_cash_flow"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::Coupon</label>
        <link refid="class_quant_lib_1_1_coupon"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>accrualEndDate_</edgelabel>
          <edgelabel>accrualStartDate_</edgelabel>
          <edgelabel>exCouponDate_</edgelabel>
          <edgelabel>paymentDate_</edgelabel>
          <edgelabel>refPeriodEnd_</edgelabel>
          <edgelabel>refPeriodStart_</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="12">
        <label>QuantLib::DayCounter</label>
        <link refid="class_quant_lib_1_1_day_counter"/>
      </node>
      <node id="9">
        <label>QuantLib::Event</label>
        <link refid="class_quant_lib_1_1_event"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::FloatingRateCoupon</label>
        <link refid="class_quant_lib_1_1_floating_rate_coupon"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>dayCounter_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::FloatingRateCouponPricer</label>
        <link refid="class_quant_lib_1_1_floating_rate_coupon_pricer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="3">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="5">
        <label>QuantLib::OvernightIndexedCoupon</label>
        <link refid="class_quant_lib_1_1_overnight_indexed_coupon"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/cashflows/overnightindexedcouponpricer.hpp" line="61" column="5" bodyfile="ql/cashflows/overnightindexedcouponpricer.hpp" bodystart="61" bodyend="88"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1adb79ae28ee4e0743b49f5878fe3053f3" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</scope><name>ArithmeticAveragedOvernightIndexedCouponPricer</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1a7fa10c881eb24b1671e9ac09aa751b14" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</scope><name>ArithmeticAveragedOvernightIndexedCouponPricer</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1a529ad9674741daaa6e1cda1f5230a863" prot="protected" virt="non-virtual"><scope>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</scope><name>byApprox_</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1abae10a24b03d2eeae0dd1a2648641ed5" prot="public" virt="virtual"><scope>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</scope><name>capletPrice</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1a8f70423845ca5dfde21561dd33b4d1ac" prot="public" virt="virtual"><scope>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</scope><name>capletRate</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1a060571c641aeb19e3633ba356f8484e7" prot="protected" virt="non-virtual"><scope>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</scope><name>convAdj1</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1a7a97c851d99eb9353a30e9c3472976b5" prot="protected" virt="non-virtual"><scope>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</scope><name>convAdj2</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1a27fe465c93a81025927489d8c1c19bbd" prot="protected" virt="non-virtual"><scope>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</scope><name>coupon_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1a95925b49ca30390ff42d84fcdb3878d5" prot="public" virt="virtual"><scope>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</scope><name>floorletPrice</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1ade4129436554116f2fa4c1f46503d029" prot="public" virt="virtual"><scope>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</scope><name>floorletRate</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1adc2aff614f07a65e70522f759c85458b" prot="public" virt="virtual"><scope>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</scope><name>initialize</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1aedfe2d369031b9ad4070856ff6a51080" prot="protected" virt="non-virtual"><scope>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</scope><name>mrs_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::FloatingRateCouponPricer::"><scope>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::FloatingRateCouponPricer::"><scope>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::FloatingRateCouponPricer::"><scope>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::FloatingRateCouponPricer::QuantLib::Observable::"><scope>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1a6c44f5aa5104c1741751a4ced044a702" prot="public" virt="virtual"><scope>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</scope><name>swapletPrice</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1a2ccadafaf4cee80b71e9347b3cc6a46f" prot="public" virt="virtual"><scope>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</scope><name>swapletRate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_floating_rate_coupon_pricer_1a43d7327d65789c0feda11e80a589ad57" prot="public" virt="virtual"><scope>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1abd747902cb541ade231d3055d44bf331" prot="protected" virt="non-virtual"><scope>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</scope><name>vol_</name></member>
      <member refid="class_quant_lib_1_1_floating_rate_coupon_pricer_1af1a82cce3d2ea5e343e556ad4c40b5d5" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</scope><name>~FloatingRateCouponPricer</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_coterminal_swap_curve_state" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::CoterminalSwapCurveState</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_curve_state" prot="public" virt="non-virtual">QuantLib::CurveState</basecompoundref>
    <includes refid="coterminalswapcurvestate_8hpp" local="no">coterminalswapcurvestate.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Inspectors</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_coterminal_swap_curve_state_1ac6c98f8730effe7dc7a6c06b5004c085" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::CoterminalSwapCurveState::first_</definition>
        <argsstring></argsstring>
        <name>first_</name>
        <qualifiedname>QuantLib::CoterminalSwapCurveState::first_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp" line="75" column="14" bodyfile="ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_coterminal_swap_curve_state_1ac56df3a433f42fc0469d6e404d7de916" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a05e8e288a4bdedfe5b4e16d8cec14f1c" kindref="member">DiscountFactor</ref> &gt;</type>
        <definition>std::vector&lt;DiscountFactor&gt; QuantLib::CoterminalSwapCurveState::discRatios_</definition>
        <argsstring></argsstring>
        <name>discRatios_</name>
        <qualifiedname>QuantLib::CoterminalSwapCurveState::discRatios_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp" line="76" column="21" bodyfile="ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_coterminal_swap_curve_state_1a22170b4136bbf788efbe306fe41dc2ff" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>std::vector&lt;Rate&gt; QuantLib::CoterminalSwapCurveState::forwardRates_</definition>
        <argsstring></argsstring>
        <name>forwardRates_</name>
        <qualifiedname>QuantLib::CoterminalSwapCurveState::forwardRates_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp" line="77" column="29" bodyfile="ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_coterminal_swap_curve_state_1a6147567a984ad7cb145c8b5b96ca3b1f" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>std::vector&lt;Rate&gt; QuantLib::CoterminalSwapCurveState::cmSwapRates_</definition>
        <argsstring></argsstring>
        <name>cmSwapRates_</name>
        <qualifiedname>QuantLib::CoterminalSwapCurveState::cmSwapRates_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp" line="78" column="29" bodyfile="ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_coterminal_swap_curve_state_1a091d033da5ed02df27f0955cf3ef2509" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::CoterminalSwapCurveState::cmSwapAnnuities_</definition>
        <argsstring></argsstring>
        <name>cmSwapAnnuities_</name>
        <qualifiedname>QuantLib::CoterminalSwapCurveState::cmSwapAnnuities_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp" line="79" column="29" bodyfile="ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_coterminal_swap_curve_state_1a6497e4776f74e1a974447f8e24dc21f1" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>std::vector&lt;Rate&gt; QuantLib::CoterminalSwapCurveState::cotSwapRates_</definition>
        <argsstring></argsstring>
        <name>cotSwapRates_</name>
        <qualifiedname>QuantLib::CoterminalSwapCurveState::cotSwapRates_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp" line="80" column="21" bodyfile="ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_coterminal_swap_curve_state_1acfa6fd41b229630fa40907dc482f5bfe" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::CoterminalSwapCurveState::cotAnnuities_</definition>
        <argsstring></argsstring>
        <name>cotAnnuities_</name>
        <qualifiedname>QuantLib::CoterminalSwapCurveState::cotAnnuities_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp" line="81" column="21" bodyfile="ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_coterminal_swap_curve_state_1ab14a72b7969f9b3f65f634ee86e0086c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CoterminalSwapCurveState::discountRatio</definition>
        <argsstring>(Size i, Size j) const override</argsstring>
        <name>discountRatio</name>
        <qualifiedname>QuantLib::CoterminalSwapCurveState::discountRatio</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_curve_state_1ac12914c56919c1509af8022f4b2307be">discountRatio</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp" line="63" column="14" bodyfile="ql/models/marketmodels/curvestates/coterminalswapcurvestate.cpp" bodystart="68" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_coterminal_swap_curve_state_1aea7897fb4a62b461422d0d56ed55830c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::CoterminalSwapCurveState::forwardRate</definition>
        <argsstring>(Size i) const override</argsstring>
        <name>forwardRate</name>
        <qualifiedname>QuantLib::CoterminalSwapCurveState::forwardRate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_curve_state_1ae69c0d48a5db2c25dddc408a540d3df6">forwardRate</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp" line="64" column="14" bodyfile="ql/models/marketmodels/curvestates/coterminalswapcurvestate.cpp" bodystart="75" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_coterminal_swap_curve_state_1ad971880251f4b503e0dd70344156a4e4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::CoterminalSwapCurveState::coterminalSwapRate</definition>
        <argsstring>(Size i) const override</argsstring>
        <name>coterminalSwapRate</name>
        <qualifiedname>QuantLib::CoterminalSwapCurveState::coterminalSwapRate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_curve_state_1a1328035ffb613db8126195062ec242d7">coterminalSwapRate</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp" line="65" column="14" bodyfile="ql/models/marketmodels/curvestates/coterminalswapcurvestate.cpp" bodystart="91" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_coterminal_swap_curve_state_1a30e0e3591f1715c757721ff30fee4089" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::CoterminalSwapCurveState::coterminalSwapAnnuity</definition>
        <argsstring>(Size numeraire, Size i) const override</argsstring>
        <name>coterminalSwapAnnuity</name>
        <qualifiedname>QuantLib::CoterminalSwapCurveState::coterminalSwapAnnuity</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_curve_state_1a768307a631c23726235018a235e000ad">coterminalSwapAnnuity</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>numeraire</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp" line="66" column="14" bodyfile="ql/models/marketmodels/curvestates/coterminalswapcurvestate.cpp" bodystart="82" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_coterminal_swap_curve_state_1a23874c3af8c5e3666fe24cedf58485f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::CoterminalSwapCurveState::cmSwapRate</definition>
        <argsstring>(Size i, Size spanningForwards) const override</argsstring>
        <name>cmSwapRate</name>
        <qualifiedname>QuantLib::CoterminalSwapCurveState::cmSwapRate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_curve_state_1a0d6f6ae637ecc03a2ffd3a694b7caf74">cmSwapRate</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>spanningForwards</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp" line="67" column="14" bodyfile="ql/models/marketmodels/curvestates/coterminalswapcurvestate.cpp" bodystart="112" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_coterminal_swap_curve_state_1aee6eed3dcd2ed7dc0a01da192645259b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::CoterminalSwapCurveState::cmSwapAnnuity</definition>
        <argsstring>(Size numeraire, Size i, Size spanningForwards) const override</argsstring>
        <name>cmSwapAnnuity</name>
        <qualifiedname>QuantLib::CoterminalSwapCurveState::cmSwapAnnuity</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_curve_state_1a8332ae2889e53f622e53dae9d2a61f76">cmSwapAnnuity</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>numeraire</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>spanningForwards</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp" line="68" column="14" bodyfile="ql/models/marketmodels/curvestates/coterminalswapcurvestate.cpp" bodystart="97" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_coterminal_swap_curve_state_1a2b2b7331c05ddd5cfab5ef95a13dcc51" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; Rate &gt; &amp; QuantLib::CoterminalSwapCurveState::forwardRates</definition>
        <argsstring>() const override</argsstring>
        <name>forwardRates</name>
        <qualifiedname>QuantLib::CoterminalSwapCurveState::forwardRates</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_curve_state_1aa24db7535ae561a867e18e734e8c5d86">forwardRates</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp" line="69" column="27" bodyfile="ql/models/marketmodels/curvestates/coterminalswapcurvestate.cpp" bodystart="124" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_coterminal_swap_curve_state_1a36d120d75de6c23fde0330e5188c2d3c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; Rate &gt; &amp; QuantLib::CoterminalSwapCurveState::coterminalSwapRates</definition>
        <argsstring>() const override</argsstring>
        <name>coterminalSwapRates</name>
        <qualifiedname>QuantLib::CoterminalSwapCurveState::coterminalSwapRates</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_curve_state_1a2bd74a4f42e638155b79f19f8c3205a8">coterminalSwapRates</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp" line="70" column="27" bodyfile="ql/models/marketmodels/curvestates/coterminalswapcurvestate.cpp" bodystart="130" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_coterminal_swap_curve_state_1ac8f7b8e23e6629a96dedd6a41fff9a89" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; Rate &gt; &amp; QuantLib::CoterminalSwapCurveState::cmSwapRates</definition>
        <argsstring>(Size spanningForwards) const override</argsstring>
        <name>cmSwapRates</name>
        <qualifiedname>QuantLib::CoterminalSwapCurveState::cmSwapRates</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_curve_state_1ad376ed98be15e79234132bfbcb1cfbf4">cmSwapRates</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>spanningForwards</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp" line="71" column="27" bodyfile="ql/models/marketmodels/curvestates/coterminalswapcurvestate.cpp" bodystart="135" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_coterminal_swap_curve_state_1af03782b9f19effab0f2917553c4abd07" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::unique_ptr&lt; <ref refid="class_quant_lib_1_1_curve_state" kindref="compound">CurveState</ref> &gt;</type>
        <definition>std::unique_ptr&lt; CurveState &gt; QuantLib::CoterminalSwapCurveState::clone</definition>
        <argsstring>() const override</argsstring>
        <name>clone</name>
        <qualifiedname>QuantLib::CoterminalSwapCurveState::clone</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_curve_state_1a855fad6a30207c20f7dadc3273917041">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp" line="73" column="25" bodyfile="ql/models/marketmodels/curvestates/coterminalswapcurvestate.cpp" bodystart="144" bodyend="146"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Modifiers</header>
      <memberdef kind="function" id="class_quant_lib_1_1_coterminal_swap_curve_state_1a47691de5d3b4a225914d075e1c9b4593" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::CoterminalSwapCurveState::setOnCoterminalSwapRates</definition>
        <argsstring>(const std::vector&lt; Rate &gt; &amp;swapRates, Size firstValidIndex=0)</argsstring>
        <name>setOnCoterminalSwapRates</name>
        <qualifiedname>QuantLib::CoterminalSwapCurveState::setOnCoterminalSwapRates</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
          <declname>swapRates</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>firstValidIndex</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp" line="57" column="14" bodyfile="ql/models/marketmodels/curvestates/coterminalswapcurvestate.cpp" bodystart="37" bodyend="66"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_coterminal_swap_curve_state_1af3c9ef0a87350c72951de36039f2e650" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::CoterminalSwapCurveState::CoterminalSwapCurveState</definition>
        <argsstring>(const std::vector&lt; Time &gt; &amp;rateTimes)</argsstring>
        <name>CoterminalSwapCurveState</name>
        <qualifiedname>QuantLib::CoterminalSwapCurveState::CoterminalSwapCurveState</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt; &amp;</type>
          <declname>rateTimes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp" line="54" column="18" bodyfile="ql/models/marketmodels/curvestates/coterminalswapcurvestate.cpp" bodystart="26" bodyend="35"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Curve state for coterminal-swap market models </para>
    </briefdescription>
    <detaileddescription>
<para>This class stores the state of the yield curve associated to the fixed calendar times within the simulation. This is the workhorse discounting object associated to the rate times of the simulation. It&apos;s important to pass the rates via an object like this to the product rather than directly to make it easier to switch to other engines such as a coterminal swap rate engine. Many products will not need expired rates and others will only require the first rate. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::CoterminalSwapCurveState</label>
        <link refid="class_quant_lib_1_1_coterminal_swap_curve_state"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::CurveState</label>
        <link refid="class_quant_lib_1_1_curve_state"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::CoterminalSwapCurveState</label>
        <link refid="class_quant_lib_1_1_coterminal_swap_curve_state"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::CurveState</label>
        <link refid="class_quant_lib_1_1_curve_state"/>
      </node>
    </collaborationgraph>
    <location file="ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp" line="39" column="5" bodyfile="ql/models/marketmodels/curvestates/coterminalswapcurvestate.hpp" bodystart="39" bodyend="82"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_coterminal_swap_curve_state_1af03782b9f19effab0f2917553c4abd07" prot="public" virt="virtual"><scope>QuantLib::CoterminalSwapCurveState</scope><name>clone</name></member>
      <member refid="class_quant_lib_1_1_coterminal_swap_curve_state_1a091d033da5ed02df27f0955cf3ef2509" prot="private" virt="non-virtual"><scope>QuantLib::CoterminalSwapCurveState</scope><name>cmSwapAnnuities_</name></member>
      <member refid="class_quant_lib_1_1_coterminal_swap_curve_state_1aee6eed3dcd2ed7dc0a01da192645259b" prot="public" virt="virtual"><scope>QuantLib::CoterminalSwapCurveState</scope><name>cmSwapAnnuity</name></member>
      <member refid="class_quant_lib_1_1_coterminal_swap_curve_state_1a23874c3af8c5e3666fe24cedf58485f5" prot="public" virt="virtual"><scope>QuantLib::CoterminalSwapCurveState</scope><name>cmSwapRate</name></member>
      <member refid="class_quant_lib_1_1_coterminal_swap_curve_state_1ac8f7b8e23e6629a96dedd6a41fff9a89" prot="public" virt="virtual"><scope>QuantLib::CoterminalSwapCurveState</scope><name>cmSwapRates</name></member>
      <member refid="class_quant_lib_1_1_coterminal_swap_curve_state_1a6147567a984ad7cb145c8b5b96ca3b1f" prot="private" virt="non-virtual"><scope>QuantLib::CoterminalSwapCurveState</scope><name>cmSwapRates_</name></member>
      <member refid="class_quant_lib_1_1_coterminal_swap_curve_state_1acfa6fd41b229630fa40907dc482f5bfe" prot="private" virt="non-virtual"><scope>QuantLib::CoterminalSwapCurveState</scope><name>cotAnnuities_</name></member>
      <member refid="class_quant_lib_1_1_coterminal_swap_curve_state_1a30e0e3591f1715c757721ff30fee4089" prot="public" virt="virtual"><scope>QuantLib::CoterminalSwapCurveState</scope><name>coterminalSwapAnnuity</name></member>
      <member refid="class_quant_lib_1_1_coterminal_swap_curve_state_1af3c9ef0a87350c72951de36039f2e650" prot="public" virt="non-virtual"><scope>QuantLib::CoterminalSwapCurveState</scope><name>CoterminalSwapCurveState</name></member>
      <member refid="class_quant_lib_1_1_coterminal_swap_curve_state_1ad971880251f4b503e0dd70344156a4e4" prot="public" virt="virtual"><scope>QuantLib::CoterminalSwapCurveState</scope><name>coterminalSwapRate</name></member>
      <member refid="class_quant_lib_1_1_coterminal_swap_curve_state_1a36d120d75de6c23fde0330e5188c2d3c" prot="public" virt="virtual"><scope>QuantLib::CoterminalSwapCurveState</scope><name>coterminalSwapRates</name></member>
      <member refid="class_quant_lib_1_1_coterminal_swap_curve_state_1a6497e4776f74e1a974447f8e24dc21f1" prot="private" virt="non-virtual"><scope>QuantLib::CoterminalSwapCurveState</scope><name>cotSwapRates_</name></member>
      <member refid="class_quant_lib_1_1_curve_state_1a8facbb8e16721df5da1527b82eeeb37a" prot="public" virt="non-virtual"><scope>QuantLib::CoterminalSwapCurveState</scope><name>CurveState</name></member>
      <member refid="class_quant_lib_1_1_coterminal_swap_curve_state_1ab14a72b7969f9b3f65f634ee86e0086c" prot="public" virt="virtual"><scope>QuantLib::CoterminalSwapCurveState</scope><name>discountRatio</name></member>
      <member refid="class_quant_lib_1_1_coterminal_swap_curve_state_1ac56df3a433f42fc0469d6e404d7de916" prot="private" virt="non-virtual"><scope>QuantLib::CoterminalSwapCurveState</scope><name>discRatios_</name></member>
      <member refid="class_quant_lib_1_1_coterminal_swap_curve_state_1ac6c98f8730effe7dc7a6c06b5004c085" prot="private" virt="non-virtual"><scope>QuantLib::CoterminalSwapCurveState</scope><name>first_</name></member>
      <member refid="class_quant_lib_1_1_coterminal_swap_curve_state_1aea7897fb4a62b461422d0d56ed55830c" prot="public" virt="virtual"><scope>QuantLib::CoterminalSwapCurveState</scope><name>forwardRate</name></member>
      <member refid="class_quant_lib_1_1_coterminal_swap_curve_state_1a2b2b7331c05ddd5cfab5ef95a13dcc51" prot="public" virt="virtual"><scope>QuantLib::CoterminalSwapCurveState</scope><name>forwardRates</name></member>
      <member refid="class_quant_lib_1_1_coterminal_swap_curve_state_1a22170b4136bbf788efbe306fe41dc2ff" prot="private" virt="non-virtual"><scope>QuantLib::CoterminalSwapCurveState</scope><name>forwardRates_</name></member>
      <member refid="class_quant_lib_1_1_curve_state_1a2ae185fd2dc5b6c6c80504868217257f" prot="public" virt="non-virtual"><scope>QuantLib::CoterminalSwapCurveState</scope><name>numberOfRates</name></member>
      <member refid="class_quant_lib_1_1_curve_state_1a4ddf36ec2fb76abb16976b4c1020d244" prot="protected" virt="non-virtual"><scope>QuantLib::CoterminalSwapCurveState</scope><name>numberOfRates_</name></member>
      <member refid="class_quant_lib_1_1_curve_state_1ac009296ccde12d7fd42a16ef74b9aa80" prot="public" virt="non-virtual"><scope>QuantLib::CoterminalSwapCurveState</scope><name>rateTaus</name></member>
      <member refid="class_quant_lib_1_1_curve_state_1a62e6e71eed62341b413fb68e39aacf59" prot="protected" virt="non-virtual"><scope>QuantLib::CoterminalSwapCurveState</scope><name>rateTaus_</name></member>
      <member refid="class_quant_lib_1_1_curve_state_1a02cc60caaa84386bc1f336a29f7e673b" prot="public" virt="non-virtual"><scope>QuantLib::CoterminalSwapCurveState</scope><name>rateTimes</name></member>
      <member refid="class_quant_lib_1_1_curve_state_1a421bb417aabb44c33475efff3ffd4051" prot="protected" virt="non-virtual"><scope>QuantLib::CoterminalSwapCurveState</scope><name>rateTimes_</name></member>
      <member refid="class_quant_lib_1_1_coterminal_swap_curve_state_1a47691de5d3b4a225914d075e1c9b4593" prot="public" virt="non-virtual"><scope>QuantLib::CoterminalSwapCurveState</scope><name>setOnCoterminalSwapRates</name></member>
      <member refid="class_quant_lib_1_1_curve_state_1ae9425efe47dc562bbee24e9fb3aa2981" prot="public" virt="non-virtual"><scope>QuantLib::CoterminalSwapCurveState</scope><name>swapRate</name></member>
      <member refid="class_quant_lib_1_1_curve_state_1a953605cffddea3e26699056086704feb" prot="public" virt="virtual"><scope>QuantLib::CoterminalSwapCurveState</scope><name>~CurveState</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

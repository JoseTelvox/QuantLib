<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_forward_measure_process" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::ForwardMeasureProcess</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_stochastic_process" prot="public" virt="non-virtual">QuantLib::StochasticProcess</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_g2_forward_process" prot="public" virt="non-virtual">QuantLib::G2ForwardProcess</derivedcompoundref>
    <includes refid="forwardmeasureprocess_8hpp" local="no">forwardmeasureprocess.hpp</includes>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_measure_process_1a40c37ffb883ff1960461736efdd906ad" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>Time QuantLib::ForwardMeasureProcess::T_</definition>
        <argsstring></argsstring>
        <name>T_</name>
        <qualifiedname>QuantLib::ForwardMeasureProcess::T_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/forwardmeasureprocess.hpp" line="46" column="14" bodyfile="ql/processes/forwardmeasureprocess.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_forward_measure_process_1aaad19fdaf2566bc8beefbbf9c8d15cc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::ForwardMeasureProcess::setForwardMeasureTime</definition>
        <argsstring>(Time)</argsstring>
        <name>setForwardMeasureTime</name>
        <qualifiedname>QuantLib::ForwardMeasureProcess::setForwardMeasureTime</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <defname>T</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/forwardmeasureprocess.hpp" line="39" column="22" bodyfile="ql/processes/forwardmeasureprocess.cpp" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_measure_process_1ad2f38ef03c58551e2f7b6baf5bf7800f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>Time QuantLib::ForwardMeasureProcess::getForwardMeasureTime</definition>
        <argsstring>() const</argsstring>
        <name>getForwardMeasureTime</name>
        <qualifiedname>QuantLib::ForwardMeasureProcess::getForwardMeasureTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/forwardmeasureprocess.hpp" line="40" column="14" bodyfile="ql/processes/forwardmeasureprocess.cpp" bodystart="35" bodyend="37"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_forward_measure_process_1a78fd1e2657800720e05aa97bc9a804b5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ForwardMeasureProcess::ForwardMeasureProcess</definition>
        <argsstring>()=default</argsstring>
        <name>ForwardMeasureProcess</name>
        <qualifiedname>QuantLib::ForwardMeasureProcess::ForwardMeasureProcess</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/forwardmeasureprocess.hpp" line="42" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_measure_process_1a8dabaaa536fdc4a042a37180673ddb6e" prot="protected" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ForwardMeasureProcess::ForwardMeasureProcess</definition>
        <argsstring>(Time T)</argsstring>
        <name>ForwardMeasureProcess</name>
        <qualifiedname>QuantLib::ForwardMeasureProcess::ForwardMeasureProcess</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>T</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/forwardmeasureprocess.hpp" line="43" column="18" bodyfile="ql/processes/forwardmeasureprocess.hpp" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_measure_process_1a0ec76081957b7bb7f86d80fdbc6b948d" prot="protected" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ForwardMeasureProcess::ForwardMeasureProcess</definition>
        <argsstring>(const ext::shared_ptr&lt; discretization &gt; &amp;)</argsstring>
        <name>ForwardMeasureProcess</name>
        <qualifiedname>QuantLib::ForwardMeasureProcess::ForwardMeasureProcess</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_stochastic_process_1_1discretization" kindref="compound">discretization</ref> &gt; &amp;</type>
          <defname>disc</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/forwardmeasureprocess.hpp" line="44" column="18" bodyfile="ql/processes/forwardmeasureprocess.cpp" bodystart="26" bodyend="28"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>forward-measure stochastic process </para>
    </briefdescription>
    <detaileddescription>
<para>stochastic process whose dynamics are expressed in the forward measure. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::ForwardMeasureProcess</label>
        <link refid="class_quant_lib_1_1_forward_measure_process"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::G2ForwardProcess</label>
        <link refid="class_quant_lib_1_1_g2_forward_process"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="3">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>QuantLib::StochasticProcess</label>
        <link refid="class_quant_lib_1_1_stochastic_process"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::ForwardMeasureProcess</label>
        <link refid="class_quant_lib_1_1_forward_measure_process"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="3">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>QuantLib::StochasticProcess</label>
        <link refid="class_quant_lib_1_1_stochastic_process"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/processes/forwardmeasureprocess.hpp" line="37" column="5" bodyfile="ql/processes/forwardmeasureprocess.hpp" bodystart="37" bodyend="47"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_stochastic_process_1ae2e3d89d3595fcd73be5e6e7e195f3e7" prot="public" virt="virtual"><scope>QuantLib::ForwardMeasureProcess</scope><name>apply</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a3a92717719d8621148989905a132c5e1" prot="public" virt="virtual"><scope>QuantLib::ForwardMeasureProcess</scope><name>covariance</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::ForwardMeasureProcess</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a45df6a954a177df19d31de5a7f2bef35" prot="public" virt="pure-virtual"><scope>QuantLib::ForwardMeasureProcess</scope><name>diffusion</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a98cd541abbfd37f62d10d3ec2ed214be" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess</scope><name>discretization_</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a467056bfaa17a1ea3debd1dc21402bb8" prot="public" virt="pure-virtual"><scope>QuantLib::ForwardMeasureProcess</scope><name>drift</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a8d99a715b297d5b6543b1d303a6002c0" prot="public" virt="virtual"><scope>QuantLib::ForwardMeasureProcess</scope><name>evolve</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1af225d654ba08bc09bf2ecab7d787ca9b" prot="public" virt="virtual"><scope>QuantLib::ForwardMeasureProcess</scope><name>expectation</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a0346d38598fb9a5a1cd58024f05081aa" prot="public" virt="virtual"><scope>QuantLib::ForwardMeasureProcess</scope><name>factors</name></member>
      <member refid="class_quant_lib_1_1_forward_measure_process_1a78fd1e2657800720e05aa97bc9a804b5" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess</scope><name>ForwardMeasureProcess</name></member>
      <member refid="class_quant_lib_1_1_forward_measure_process_1a8dabaaa536fdc4a042a37180673ddb6e" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess</scope><name>ForwardMeasureProcess</name></member>
      <member refid="class_quant_lib_1_1_forward_measure_process_1a0ec76081957b7bb7f86d80fdbc6b948d" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess</scope><name>ForwardMeasureProcess</name></member>
      <member refid="class_quant_lib_1_1_forward_measure_process_1ad2f38ef03c58551e2f7b6baf5bf7800f" prot="public" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess</scope><name>getForwardMeasureTime</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a4277a74107d071252a2445d23c90b654" prot="public" virt="pure-virtual"><scope>QuantLib::ForwardMeasureProcess</scope><name>initialValues</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::ForwardMeasureProcess</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::ForwardMeasureProcess</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::ForwardMeasureProcess</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::ForwardMeasureProcess</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::ForwardMeasureProcess</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::ForwardMeasureProcess</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_forward_measure_process_1aaad19fdaf2566bc8beefbbf9c8d15cc4" prot="public" virt="virtual"><scope>QuantLib::ForwardMeasureProcess</scope><name>setForwardMeasureTime</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a92e9b468d781e9ceb566d6e546113540" prot="public" virt="pure-virtual"><scope>QuantLib::ForwardMeasureProcess</scope><name>size</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a47e9f5540b2ca9c32650dc81d051ca86" prot="public" virt="virtual"><scope>QuantLib::ForwardMeasureProcess</scope><name>stdDeviation</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a2dd24b794a6b320bc60ba9e1a87bf48e" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess</scope><name>StochasticProcess</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a957ee9776d6048835106ea29ea44927f" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess</scope><name>StochasticProcess</name></member>
      <member refid="class_quant_lib_1_1_forward_measure_process_1a40c37ffb883ff1960461736efdd906ad" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess</scope><name>T_</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a39c5f08a3779665f9185a558d2b8418d" prot="public" virt="virtual"><scope>QuantLib::ForwardMeasureProcess</scope><name>time</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a0f22628658fd2dc702c13c354ef3244e" prot="public" virt="virtual"><scope>QuantLib::ForwardMeasureProcess</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::ForwardMeasureProcess</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::ForwardMeasureProcess</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a0e2b6a14e675db5abd0ab8965ff7b2c3" prot="public" virt="non-virtual"><scope>QuantLib::ForwardMeasureProcess</scope><name>~StochasticProcess</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

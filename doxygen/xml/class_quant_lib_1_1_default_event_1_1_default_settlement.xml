<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_default_event_1_1_default_settlement" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::DefaultEvent::DefaultSettlement</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_event" prot="public" virt="non-virtual">QuantLib::Event</basecompoundref>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_quant_lib_1_1_default_event_1_1_default_settlement_1aa83df1fd5966eae29c74571e258a5aa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class DefaultEvent</definition>
        <argsstring></argsstring>
        <name>DefaultEvent</name>
        <qualifiedname>QuantLib::DefaultEvent::DefaultSettlement::DefaultEvent</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_default_event" kindref="compound">DefaultEvent</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultevent.hpp" line="53" column="26" bodyfile="ql/experimental/credit/defaultevent.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_default_event_1_1_default_settlement_1a3db6c62f4e3a3fd52210746e21a2b590" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::DefaultEvent::DefaultSettlement::settlementDate_</definition>
        <argsstring></argsstring>
        <name>settlementDate_</name>
        <qualifiedname>QuantLib::DefaultEvent::DefaultSettlement::settlementDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultevent.hpp" line="79" column="18" bodyfile="ql/experimental/credit/defaultevent.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_default_event_1_1_default_settlement_1adc7f16b425c9eb9b6d0cdb72788bd5fa" prot="private" static="no" mutable="no">
        <type>std::map&lt; <ref refid="namespace_quant_lib_1a197bfb2321381d9a5d8c94b56f6ef6cf" kindref="member">Seniority</ref>, <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::map&lt;Seniority, Real&gt; QuantLib::DefaultEvent::DefaultSettlement::recoveryRates_</definition>
        <argsstring></argsstring>
        <name>recoveryRates_</name>
        <qualifiedname>QuantLib::DefaultEvent::DefaultSettlement::recoveryRates_</qualifiedname>
        <briefdescription>
<para>Realized recovery rates. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultevent.hpp" line="81" column="22" bodyfile="ql/experimental/credit/defaultevent.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_default_event_1_1_default_settlement_1a3c3507e0409102d09449b7d663a858d2" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::DefaultEvent::DefaultSettlement::DefaultSettlement</definition>
        <argsstring>(const Date &amp;date, const std::map&lt; Seniority, Real &gt; &amp;recoveryRates)</argsstring>
        <name>DefaultSettlement</name>
        <qualifiedname>QuantLib::DefaultEvent::DefaultSettlement::DefaultSettlement</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>date</declname>
        </param>
        <param>
          <type>const std::map&lt; <ref refid="namespace_quant_lib_1a197bfb2321381d9a5d8c94b56f6ef6cf" kindref="member">Seniority</ref>, <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>recoveryRates</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="struct_quant_lib_1_1_default" kindref="compound">Default</ref> settlement events encode the settlement date and the recovery rates for the affected seniorities. Specific events might require different sets of recoveries to be present. The way these objects are constructed is a prerogative of the particular event class. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultevent.hpp" line="62" column="13" bodyfile="ql/experimental/credit/defaultevent.cpp" bodystart="54" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_default_event_1_1_default_settlement_1ac55a569ee4f9a80ff76fa44a6575922c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::DefaultEvent::DefaultSettlement::DefaultSettlement</definition>
        <argsstring>(const Date &amp;date=Date(), Seniority seniority=NoSeniority, Real recoveryRate=0.4)</argsstring>
        <name>DefaultSettlement</name>
        <qualifiedname>QuantLib::DefaultEvent::DefaultSettlement::DefaultSettlement</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>date</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a197bfb2321381d9a5d8c94b56f6ef6cf" kindref="member">Seniority</ref></type>
          <declname>seniority</declname>
          <defval>NoSeniority</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>recoveryRate</declname>
          <defval>0.4</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>When NoSeniority is passed all seniorities are assumed to have settled to the recovery passed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultevent.hpp" line="67" column="13" bodyfile="ql/experimental/credit/defaultevent.cpp" bodystart="63" bodyend="75"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_default_event_1_1_default_settlement_1a85fc6e9708b46aa35a02671d8ea4b488" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::DefaultEvent::DefaultSettlement::date</definition>
        <argsstring>() const override</argsstring>
        <name>date</name>
        <qualifiedname>QuantLib::DefaultEvent::DefaultSettlement::date</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_event_1a7a690f69956e5d1f7175d7d7f879b9af">date</reimplements>
        <briefdescription>
<para>returns the date at which the event occurs </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultevent.hpp" line="71" column="18" bodyfile="ql/experimental/credit/defaultevent.cpp" bodystart="42" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_default_event_1_1_default_settlement_1afa89893c91e89769fac392ff5d626703" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::DefaultEvent::DefaultSettlement::recoveryRate</definition>
        <argsstring>(Seniority sen) const</argsstring>
        <name>recoveryRate</name>
        <qualifiedname>QuantLib::DefaultEvent::DefaultSettlement::recoveryRate</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a197bfb2321381d9a5d8c94b56f6ef6cf" kindref="member">Seniority</ref></type>
          <declname>sen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the recovery rate of a default event which has already settled. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultevent.hpp" line="75" column="18" bodyfile="ql/experimental/credit/defaultevent.cpp" bodystart="77" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_default_event_1_1_default_settlement_1a97fc9cbc9ad23b625e8fd94683ddefa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::DefaultEvent::DefaultSettlement::accept</definition>
        <argsstring>(AcyclicVisitor &amp;) override</argsstring>
        <name>accept</name>
        <qualifiedname>QuantLib::DefaultEvent::DefaultSettlement::accept</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_event_1a572b6e63554be33515e60185aa8d1499">accept</reimplements>
        <param>
          <type><ref refid="class_quant_lib_1_1_acyclic_visitor" kindref="compound">AcyclicVisitor</ref> &amp;</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultevent.hpp" line="76" column="18" bodyfile="ql/experimental/credit/defaultevent.cpp" bodystart="46" bodyend="52"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::DefaultEvent::DefaultSettlement</label>
        <link refid="class_quant_lib_1_1_default_event_1_1_default_settlement"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Event</label>
        <link refid="class_quant_lib_1_1_event"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::DefaultEvent::DefaultSettlement</label>
        <link refid="class_quant_lib_1_1_default_event_1_1_default_settlement"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Event</label>
        <link refid="class_quant_lib_1_1_event"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/credit/defaultevent.hpp" line="51" column="9" bodyfile="ql/experimental/credit/defaultevent.hpp" bodystart="51" bodyend="82"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_default_event_1_1_default_settlement_1a97fc9cbc9ad23b625e8fd94683ddefa3" prot="public" virt="virtual"><scope>QuantLib::DefaultEvent::DefaultSettlement</scope><name>accept</name></member>
      <member refid="class_quant_lib_1_1_default_event_1_1_default_settlement_1a85fc6e9708b46aa35a02671d8ea4b488" prot="public" virt="virtual"><scope>QuantLib::DefaultEvent::DefaultSettlement</scope><name>date</name></member>
      <member refid="class_quant_lib_1_1_default_event_1_1_default_settlement_1aa83df1fd5966eae29c74571e258a5aa3" prot="public" virt="non-virtual"><scope>QuantLib::DefaultEvent::DefaultSettlement</scope><name>DefaultEvent</name></member>
      <member refid="class_quant_lib_1_1_default_event_1_1_default_settlement_1a3c3507e0409102d09449b7d663a858d2" prot="protected" virt="non-virtual"><scope>QuantLib::DefaultEvent::DefaultSettlement</scope><name>DefaultSettlement</name></member>
      <member refid="class_quant_lib_1_1_default_event_1_1_default_settlement_1ac55a569ee4f9a80ff76fa44a6575922c" prot="protected" virt="non-virtual"><scope>QuantLib::DefaultEvent::DefaultSettlement</scope><name>DefaultSettlement</name></member>
      <member refid="class_quant_lib_1_1_event_1af09e3d842159f4d17482ce634642bc07" prot="public" virt="virtual"><scope>QuantLib::DefaultEvent::DefaultSettlement</scope><name>hasOccurred</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::DefaultEvent::DefaultSettlement</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::DefaultEvent::DefaultSettlement</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Event::"><scope>QuantLib::DefaultEvent::DefaultSettlement</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Event::"><scope>QuantLib::DefaultEvent::DefaultSettlement</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual"><scope>QuantLib::DefaultEvent::DefaultSettlement</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Event::"><scope>QuantLib::DefaultEvent::DefaultSettlement</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_default_event_1_1_default_settlement_1afa89893c91e89769fac392ff5d626703" prot="public" virt="non-virtual"><scope>QuantLib::DefaultEvent::DefaultSettlement</scope><name>recoveryRate</name></member>
      <member refid="class_quant_lib_1_1_default_event_1_1_default_settlement_1adc7f16b425c9eb9b6d0cdb72788bd5fa" prot="private" virt="non-virtual"><scope>QuantLib::DefaultEvent::DefaultSettlement</scope><name>recoveryRates_</name></member>
      <member refid="class_quant_lib_1_1_default_event_1_1_default_settlement_1a3db6c62f4e3a3fd52210746e21a2b590" prot="private" virt="non-virtual"><scope>QuantLib::DefaultEvent::DefaultSettlement</scope><name>settlementDate_</name></member>
      <member refid="class_quant_lib_1_1_event_1a26cef5942731bfb52ed77e74abdcfe9f" prot="public" virt="non-virtual"><scope>QuantLib::DefaultEvent::DefaultSettlement</scope><name>~Event</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::DefaultEvent::DefaultSettlement</scope><name>~Observable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

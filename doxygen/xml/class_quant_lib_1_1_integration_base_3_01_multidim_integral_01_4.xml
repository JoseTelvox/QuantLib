<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_integration_base_3_01_multidim_integral_01_4" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::IntegrationBase&lt; MultidimIntegral &gt;</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_multidim_integral" prot="public" virt="non-virtual">QuantLib::MultidimIntegral</basecompoundref>
    <basecompoundref refid="class_quant_lib_1_1_l_m_integration" prot="public" virt="non-virtual">QuantLib::LMIntegration</basecompoundref>
    <basecompoundref refid="class_quant_lib_1_1_multidim_integral" prot="public" virt="non-virtual">QuantLib::MultidimIntegral</basecompoundref>
    <basecompoundref refid="class_quant_lib_1_1_l_m_integration" prot="public" virt="non-virtual">QuantLib::LMIntegration</basecompoundref>
    <templateparamlist>
    </templateparamlist>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_integration_base_3_01_multidim_integral_01_4_1aa7598a9aa9b68dced439d592db9661f5" prot="public" static="no" mutable="no">
        <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>const std::vector&lt;Real&gt; QuantLib::IntegrationBase&lt; MultidimIntegral &gt;::a_</definition>
        <argsstring></argsstring>
        <name>a_</name>
        <qualifiedname>QuantLib::IntegrationBase&lt; MultidimIntegral &gt;::a_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/latentmodel.hpp" line="145" column="27" bodyfile="ql/experimental/math/latentmodel.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_integration_base_3_01_multidim_integral_01_4_1a2fecad8c42a3b1e92c5928715360242d" prot="public" static="no" mutable="no">
        <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>const std::vector&lt;Real&gt; QuantLib::IntegrationBase&lt; MultidimIntegral &gt;::b_</definition>
        <argsstring></argsstring>
        <name>b_</name>
        <qualifiedname>QuantLib::IntegrationBase&lt; MultidimIntegral &gt;::b_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/latentmodel.hpp" line="145" column="30" bodyfile="ql/experimental/math/latentmodel.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_integration_base_3_01_multidim_integral_01_4_1a9c46b7d7649288736a1092e6bf2ac4a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::IntegrationBase&lt; MultidimIntegral &gt;::IntegrationBase</definition>
        <argsstring>(const std::vector&lt; ext::shared_ptr&lt; Integrator &gt; &gt; &amp;integrators, Real a, Real b)</argsstring>
        <name>IntegrationBase</name>
        <qualifiedname>QuantLib::IntegrationBase&lt; MultidimIntegral &gt;::IntegrationBase</qualifiedname>
        <param>
          <type>const std::vector&lt; ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_integrator" kindref="compound">Integrator</ref> &gt; &gt; &amp;</type>
          <declname>integrators</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/latentmodel.hpp" line="135" column="9" bodyfile="ql/experimental/math/latentmodel.hpp" bodystart="135" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_integration_base_3_01_multidim_integral_01_4_1a18d8579fe53ff3dde0207b5ae1390c7e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::IntegrationBase&lt; MultidimIntegral &gt;::integrate</definition>
        <argsstring>(const std::function&lt; Real(const std::vector&lt; Real &gt; &amp;arg)&gt; &amp;f) const override</argsstring>
        <name>integrate</name>
        <qualifiedname>QuantLib::IntegrationBase&lt; MultidimIntegral &gt;::integrate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_l_m_integration_1ace8e446b602837eb8ddb8a78f69acdc4">integrate</reimplements>
        <param>
          <type>const std::function&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>(const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;arg)&gt; &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/latentmodel.hpp" line="140" column="14" bodyfile="ql/experimental/math/latentmodel.hpp" bodystart="140" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_integration_base_3_01_multidim_integral_01_4_1a1cd81f42f18766765a302b7c8421318b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::IntegrationBase&lt; MultidimIntegral &gt;::~IntegrationBase</definition>
        <argsstring>() override=default</argsstring>
        <name>~IntegrationBase</name>
        <qualifiedname>QuantLib::IntegrationBase&lt; MultidimIntegral &gt;::~IntegrationBase</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/latentmodel.hpp" line="144" column="9"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_integration_base_1ab3b9c28b937175923f839771cd8b98fc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::IntegrationBase&lt; MultidimIntegral &gt;::IntegrationBase</definition>
        <argsstring>()=default</argsstring>
        <name>IntegrationBase</name>
        <qualifiedname>QuantLib::IntegrationBase&lt; MultidimIntegral &gt;::IntegrationBase</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/latentmodel.hpp" line="93" column="8"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::IntegrationBase&lt; MultidimIntegral &gt;</label>
        <link refid="class_quant_lib_1_1_integration_base_3_01_multidim_integral_01_4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::LMIntegration</label>
        <link refid="class_quant_lib_1_1_l_m_integration"/>
      </node>
      <node id="2">
        <label>QuantLib::MultidimIntegral</label>
        <link refid="class_quant_lib_1_1_multidim_integral"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::IntegrationBase&lt; MultidimIntegral &gt;</label>
        <link refid="class_quant_lib_1_1_integration_base_3_01_multidim_integral_01_4"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::LMIntegration</label>
        <link refid="class_quant_lib_1_1_l_m_integration"/>
      </node>
      <node id="2">
        <label>QuantLib::MultidimIntegral</label>
        <link refid="class_quant_lib_1_1_multidim_integral"/>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/math/latentmodel.hpp" line="132" column="14" bodyfile="ql/experimental/math/latentmodel.hpp" bodystart="133" bodyend="146"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_integration_base_3_01_multidim_integral_01_4_1aa7598a9aa9b68dced439d592db9661f5" prot="public" virt="non-virtual"><scope>QuantLib::IntegrationBase&lt; MultidimIntegral &gt;</scope><name>a_</name></member>
      <member refid="class_quant_lib_1_1_integration_base_3_01_multidim_integral_01_4_1a2fecad8c42a3b1e92c5928715360242d" prot="public" virt="non-virtual"><scope>QuantLib::IntegrationBase&lt; MultidimIntegral &gt;</scope><name>b_</name></member>
      <member refid="class_quant_lib_1_1_integration_base_3_01_multidim_integral_01_4_1a18d8579fe53ff3dde0207b5ae1390c7e" prot="public" virt="virtual"><scope>QuantLib::IntegrationBase&lt; MultidimIntegral &gt;</scope><name>integrate</name></member>
      <member refid="class_quant_lib_1_1_l_m_integration_1a08a5a3bbf3d9ef67f8de62c7a0d6ab6d" prot="public" virt="virtual"><scope>QuantLib::IntegrationBase&lt; MultidimIntegral &gt;</scope><name>integrateV</name></member>
      <member refid="class_quant_lib_1_1_integration_base_3_01_multidim_integral_01_4_1a9c46b7d7649288736a1092e6bf2ac4a3" prot="public" virt="non-virtual"><scope>QuantLib::IntegrationBase&lt; MultidimIntegral &gt;</scope><name>IntegrationBase</name></member>
      <member refid="class_quant_lib_1_1_integration_base_1ab3b9c28b937175923f839771cd8b98fc" prot="private" virt="non-virtual"><scope>QuantLib::IntegrationBase&lt; MultidimIntegral &gt;</scope><name>IntegrationBase</name></member>
      <member refid="class_quant_lib_1_1_multidim_integral_1a3ecf40ccffcf71b3cc6cb6c8be998ea6" prot="public" virt="non-virtual"><scope>QuantLib::IntegrationBase&lt; MultidimIntegral &gt;</scope><name>MultidimIntegral</name></member>
      <member refid="class_quant_lib_1_1_multidim_integral_1aebe7fdad01f1ee10730a3376abb898a5" prot="public" virt="non-virtual"><scope>QuantLib::IntegrationBase&lt; MultidimIntegral &gt;</scope><name>operator()</name></member>
      <member refid="class_quant_lib_1_1_integration_base_3_01_multidim_integral_01_4_1a1cd81f42f18766765a302b7c8421318b" prot="public" virt="non-virtual"><scope>QuantLib::IntegrationBase&lt; MultidimIntegral &gt;</scope><name>~IntegrationBase</name></member>
      <member refid="class_quant_lib_1_1_l_m_integration_1a25b3510314217f5eed47c6e8c98caadb" prot="public" virt="virtual"><scope>QuantLib::IntegrationBase&lt; MultidimIntegral &gt;</scope><name>~LMIntegration</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

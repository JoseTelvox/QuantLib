<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_piecewise_integral" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::PiecewiseIntegral</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_integrator" prot="public" virt="non-virtual">QuantLib::Integrator</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_piecewise_integral_1a8cdc9c866ac1e597ca7f0853ce487134" prot="private" static="no" mutable="no">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_integrator" kindref="compound">Integrator</ref> &gt;</type>
        <definition>const ext::shared_ptr&lt;Integrator&gt; QuantLib::PiecewiseIntegral::integrator_</definition>
        <argsstring></argsstring>
        <name>integrator_</name>
        <qualifiedname>QuantLib::PiecewiseIntegral::integrator_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/piecewiseintegral.hpp" line="50" column="27" bodyfile="ql/experimental/math/piecewiseintegral.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_piecewise_integral_1a8eb6d35188c239f471e112de09017644" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::PiecewiseIntegral::criticalPoints_</definition>
        <argsstring></argsstring>
        <name>criticalPoints_</name>
        <qualifiedname>QuantLib::PiecewiseIntegral::criticalPoints_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/piecewiseintegral.hpp" line="51" column="17" bodyfile="ql/experimental/math/piecewiseintegral.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_piecewise_integral_1a445413b34f8d3d90b98dbaee7f661c07" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::PiecewiseIntegral::eps_</definition>
        <argsstring></argsstring>
        <name>eps_</name>
        <qualifiedname>QuantLib::PiecewiseIntegral::eps_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/piecewiseintegral.hpp" line="52" column="16" bodyfile="ql/experimental/math/piecewiseintegral.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_piecewise_integral_1a302d1b5f5cf5cfd6a9270177c9cfbc11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::PiecewiseIntegral::PiecewiseIntegral</definition>
        <argsstring>(ext::shared_ptr&lt; Integrator &gt; integrator, std::vector&lt; Real &gt; criticalPoints, bool avoidCriticalPoints=true)</argsstring>
        <name>PiecewiseIntegral</name>
        <qualifiedname>QuantLib::PiecewiseIntegral::PiecewiseIntegral</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_integrator" kindref="compound">Integrator</ref> &gt;</type>
          <declname>integrator</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
          <declname>criticalPoints</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>avoidCriticalPoints</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/piecewiseintegral.hpp" line="40" column="5" bodyfile="ql/experimental/math/piecewiseintegral.cpp" bodystart="26" bodyend="38"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_piecewise_integral_1ae8f8faa05100be7ed9ab3127b4378847" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::PiecewiseIntegral::integrate</definition>
        <argsstring>(const std::function&lt; Real(Real)&gt; &amp;f, Real a, Real b) const override</argsstring>
        <name>integrate</name>
        <qualifiedname>QuantLib::PiecewiseIntegral::integrate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_integrator_1a6ec7c11d79c2d1553de8b8e5822c0402">integrate</reimplements>
        <param>
          <type>const std::function&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>(<ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>)&gt; &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/piecewiseintegral.hpp" line="45" column="10" bodyfile="ql/experimental/math/piecewiseintegral.hpp" bodystart="66" bodyend="101"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_piecewise_integral_1ae3cdb8d2893d97bb200bfed255c82b46" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::PiecewiseIntegral::integrate_h</definition>
        <argsstring>(const std::function&lt; Real(Real)&gt; &amp;f, Real a, Real b) const</argsstring>
        <name>integrate_h</name>
        <qualifiedname>QuantLib::PiecewiseIntegral::integrate_h</qualifiedname>
        <param>
          <type>const std::function&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>(<ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>)&gt; &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/piecewiseintegral.hpp" line="48" column="10" bodyfile="ql/experimental/math/piecewiseintegral.hpp" bodystart="57" bodyend="64"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::Integrator</label>
        <link refid="class_quant_lib_1_1_integrator"/>
      </node>
      <node id="1">
        <label>QuantLib::PiecewiseIntegral</label>
        <link refid="class_quant_lib_1_1_piecewise_integral"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::Integrator</label>
        <link refid="class_quant_lib_1_1_integrator"/>
      </node>
      <node id="1">
        <label>QuantLib::PiecewiseIntegral</label>
        <link refid="class_quant_lib_1_1_piecewise_integral"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/math/piecewiseintegral.hpp" line="38" column="1" bodyfile="ql/experimental/math/piecewiseintegral.hpp" bodystart="38" bodyend="53"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_integrator_1a780bcd96e38c5cbd5674abc2a82ed204" prot="public" virt="non-virtual"><scope>QuantLib::PiecewiseIntegral</scope><name>absoluteAccuracy</name></member>
      <member refid="class_quant_lib_1_1_integrator_1a457e00ab72b659e9e5455ab7ef695a21" prot="public" virt="non-virtual"><scope>QuantLib::PiecewiseIntegral</scope><name>absoluteError</name></member>
      <member refid="class_quant_lib_1_1_piecewise_integral_1a8eb6d35188c239f471e112de09017644" prot="private" virt="non-virtual"><scope>QuantLib::PiecewiseIntegral</scope><name>criticalPoints_</name></member>
      <member refid="class_quant_lib_1_1_piecewise_integral_1a445413b34f8d3d90b98dbaee7f661c07" prot="private" virt="non-virtual"><scope>QuantLib::PiecewiseIntegral</scope><name>eps_</name></member>
      <member refid="class_quant_lib_1_1_integrator_1a5ec592d87089c83ed43b13dc3b89e3d5" prot="protected" virt="non-virtual"><scope>QuantLib::PiecewiseIntegral</scope><name>increaseNumberOfEvaluations</name></member>
      <member refid="class_quant_lib_1_1_piecewise_integral_1ae8f8faa05100be7ed9ab3127b4378847" prot="protected" virt="virtual"><scope>QuantLib::PiecewiseIntegral</scope><name>integrate</name></member>
      <member refid="class_quant_lib_1_1_piecewise_integral_1ae3cdb8d2893d97bb200bfed255c82b46" prot="private" virt="non-virtual"><scope>QuantLib::PiecewiseIntegral</scope><name>integrate_h</name></member>
      <member refid="class_quant_lib_1_1_integrator_1a3f9e803134fa741989ca1864bf32b1be" prot="public" virt="virtual"><scope>QuantLib::PiecewiseIntegral</scope><name>integrationSuccess</name></member>
      <member refid="class_quant_lib_1_1_integrator_1af1b1a6639727b55ddf35989fef19376e" prot="public" virt="non-virtual"><scope>QuantLib::PiecewiseIntegral</scope><name>Integrator</name></member>
      <member refid="class_quant_lib_1_1_piecewise_integral_1a8cdc9c866ac1e597ca7f0853ce487134" prot="private" virt="non-virtual"><scope>QuantLib::PiecewiseIntegral</scope><name>integrator_</name></member>
      <member refid="class_quant_lib_1_1_integrator_1ae33afd264a1fd8c04da749f81fd0c5da" prot="public" virt="non-virtual"><scope>QuantLib::PiecewiseIntegral</scope><name>maxEvaluations</name></member>
      <member refid="class_quant_lib_1_1_integrator_1a90cc40e34213c30b55e96243ed3ed484" prot="public" virt="non-virtual"><scope>QuantLib::PiecewiseIntegral</scope><name>numberOfEvaluations</name></member>
      <member refid="class_quant_lib_1_1_integrator_1a6ced5a1acd0d08e620198f476b4717b9" prot="public" virt="non-virtual"><scope>QuantLib::PiecewiseIntegral</scope><name>operator()</name></member>
      <member refid="class_quant_lib_1_1_piecewise_integral_1a302d1b5f5cf5cfd6a9270177c9cfbc11" prot="public" virt="non-virtual"><scope>QuantLib::PiecewiseIntegral</scope><name>PiecewiseIntegral</name></member>
      <member refid="class_quant_lib_1_1_integrator_1a73631092f9449fe296b6ac5a35a33364" prot="public" virt="non-virtual"><scope>QuantLib::PiecewiseIntegral</scope><name>setAbsoluteAccuracy</name></member>
      <member refid="class_quant_lib_1_1_integrator_1a4aa6a7c87024c497457607db03d80bf8" prot="protected" virt="non-virtual"><scope>QuantLib::PiecewiseIntegral</scope><name>setAbsoluteError</name></member>
      <member refid="class_quant_lib_1_1_integrator_1aeec56c0f0fbfe04a7c15e4766d224d44" prot="public" virt="non-virtual"><scope>QuantLib::PiecewiseIntegral</scope><name>setMaxEvaluations</name></member>
      <member refid="class_quant_lib_1_1_integrator_1a53c93a2ae74e97752d1c8bd176c5cb7f" prot="protected" virt="non-virtual"><scope>QuantLib::PiecewiseIntegral</scope><name>setNumberOfEvaluations</name></member>
      <member refid="class_quant_lib_1_1_integrator_1a56e54bf50cc21384d1f96234d5a3332a" prot="public" virt="virtual"><scope>QuantLib::PiecewiseIntegral</scope><name>~Integrator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

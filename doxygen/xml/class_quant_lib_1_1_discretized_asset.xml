<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_discretized_asset" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::DiscretizedAsset</compoundname>
    <derivedcompoundref refid="class_quant_lib_1_1_discretized_barrier_option" prot="public" virt="non-virtual">QuantLib::DiscretizedBarrierOption</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_discretized_callable_fixed_rate_bond" prot="public" virt="non-virtual">QuantLib::DiscretizedCallableFixedRateBond</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_discretized_cap_floor" prot="public" virt="non-virtual">QuantLib::DiscretizedCapFloor</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_discretized_convertible" prot="public" virt="non-virtual">QuantLib::DiscretizedConvertible</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_discretized_derman_kani_barrier_option" prot="public" virt="non-virtual">QuantLib::DiscretizedDermanKaniBarrierOption</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_discretized_derman_kani_double_barrier_option" prot="public" virt="non-virtual">QuantLib::DiscretizedDermanKaniDoubleBarrierOption</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_discretized_discount_bond" prot="public" virt="non-virtual">QuantLib::DiscretizedDiscountBond</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_discretized_double_barrier_option" prot="public" virt="non-virtual">QuantLib::DiscretizedDoubleBarrierOption</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_discretized_option" prot="public" virt="non-virtual">QuantLib::DiscretizedOption</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_discretized_swap" prot="public" virt="non-virtual">QuantLib::DiscretizedSwap</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_discretized_vanilla_option" prot="public" virt="non-virtual">QuantLib::DiscretizedVanillaOption</derivedcompoundref>
    <includes refid="discretizedasset_8hpp" local="no">discretizedasset.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Low-level interface</header>
      <description><para>These methods (that developers should override when deriving from <ref refid="class_quant_lib_1_1_discretized_asset" kindref="compound">DiscretizedAsset</ref>) are to be used by numerical methods and not directly by users, with the exception of <ref refid="class_quant_lib_1_1_discretized_asset_1a35b681c10038f1f62bad25e9b4915c4b" kindref="member">adjustValues()</ref>, <ref refid="class_quant_lib_1_1_discretized_asset_1af9d63f3511be393f92de7770fe2b058f" kindref="member">preAdjustValues()</ref> and <ref refid="class_quant_lib_1_1_discretized_asset_1a0c3c8bdd418e754442145a8346bc0bce" kindref="member">postAdjustValues()</ref> that can be used together with partialRollback(). </para>
</description>
      <memberdef kind="enum" id="class_quant_lib_1_1_discretized_asset_1ae818ed5af32e6c027454bcc19a4abb4f" prot="protected" static="no" strong="yes">
        <type></type>
        <name>CouponAdjustment</name>
        <qualifiedname>QuantLib::DiscretizedAsset::CouponAdjustment</qualifiedname>
        <enumvalue id="class_quant_lib_1_1_discretized_asset_1ae818ed5af32e6c027454bcc19a4abb4fa6bf9e70a1f928aba143ef1eebe2720b5" prot="protected">
          <name>pre</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_discretized_asset_1ae818ed5af32e6c027454bcc19a4abb4fa42b90196b487c54069097a68fe98ab6f" prot="protected">
          <name>post</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Indicates if a coupon should be adjusted in <ref refid="class_quant_lib_1_1_discretized_asset_1af9d63f3511be393f92de7770fe2b058f" kindref="member">preAdjustValues()</ref> or <ref refid="class_quant_lib_1_1_discretized_asset_1a0c3c8bdd418e754442145a8346bc0bce" kindref="member">postAdjustValues()</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/discretizedasset.hpp" line="128" column="9" bodyfile="ql/discretizedasset.hpp" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_discretized_asset_1af428f43eab9a20010a9fb2b6e721a748" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>Time QuantLib::DiscretizedAsset::time_</definition>
        <argsstring></argsstring>
        <name>time_</name>
        <qualifiedname>QuantLib::DiscretizedAsset::time_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/discretizedasset.hpp" line="138" column="14" bodyfile="ql/discretizedasset.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_discretized_asset_1ab95e661a7352085a074d3661a52ea7fc" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>Time QuantLib::DiscretizedAsset::latestPreAdjustment_</definition>
        <argsstring></argsstring>
        <name>latestPreAdjustment_</name>
        <qualifiedname>QuantLib::DiscretizedAsset::latestPreAdjustment_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/discretizedasset.hpp" line="139" column="14" bodyfile="ql/discretizedasset.hpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_discretized_asset_1ae0c6a088f8cc58ebed984450f39f1ad8" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>Time QuantLib::DiscretizedAsset::latestPostAdjustment_</definition>
        <argsstring></argsstring>
        <name>latestPostAdjustment_</name>
        <qualifiedname>QuantLib::DiscretizedAsset::latestPostAdjustment_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/discretizedasset.hpp" line="139" column="35" bodyfile="ql/discretizedasset.hpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_discretized_asset_1a63c3ec17cc95b8469ce9609a48d43221" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::DiscretizedAsset::values_</definition>
        <argsstring></argsstring>
        <name>values_</name>
        <qualifiedname>QuantLib::DiscretizedAsset::values_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/discretizedasset.hpp" line="140" column="15" bodyfile="ql/discretizedasset.hpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_discretized_asset_1a22a2211d418a4a6693e72006ce7681c7" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_lattice" kindref="compound">Lattice</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;Lattice&gt; QuantLib::DiscretizedAsset::method_</definition>
        <argsstring></argsstring>
        <name>method_</name>
        <qualifiedname>QuantLib::DiscretizedAsset::method_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/discretizedasset.hpp" line="142" column="25" bodyfile="ql/discretizedasset.hpp" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_asset_1a564cea41e833b0f86e4bbbfca26274bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void QuantLib::DiscretizedAsset::reset</definition>
        <argsstring>(Size size)=0</argsstring>
        <name>reset</name>
        <qualifiedname>QuantLib::DiscretizedAsset::reset</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_discretized_barrier_option_1a0f494f990e041f1f91df1b815e297bae">reset</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_discretized_callable_fixed_rate_bond_1a9a81851996e76408ce5c2a90a4524cbf">reset</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_discretized_cap_floor_1a75ef787e3de25c845688c92df570165a">reset</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_discretized_convertible_1abfc864f5b65b05585147d311f463853a">reset</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_discretized_derman_kani_barrier_option_1af322d5b89eefc2bbc7b03e083bf9818e">reset</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_discretized_derman_kani_double_barrier_option_1aba4c37a6136825e5ea45df205811e213">reset</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_discretized_discount_bond_1a0ccee6b495fee361d9ea5c8e9b603939">reset</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_discretized_double_barrier_option_1aaf050ba222e8cde0b1890a2949480c8f">reset</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_discretized_option_1ae5c07005ba73043492e1c9443d84c14e">reset</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_discretized_swap_1abfc18269ecd5341a0b97ac6152cfe731">reset</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_discretized_swaption_1af6c2a45a15e44b2a7fed1d473d39e911">reset</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_discretized_vanilla_option_1a49c461a33c0b7ab354a4489c0c23bbac">reset</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method should initialize the asset values to an <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> of the given size and with values depending on the particular asset. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/discretizedasset.hpp" line="89" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_asset_1af9d63f3511be393f92de7770fe2b058f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::DiscretizedAsset::preAdjustValues</definition>
        <argsstring>()</argsstring>
        <name>preAdjustValues</name>
        <qualifiedname>QuantLib::DiscretizedAsset::preAdjustValues</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method will be invoked after rollback and before any other asset (i.e., an option on this one) has any chance to look at the values. For instance, payments happening at times already spanned by the rollback will be added here.</para>
<para>This method is not virtual; derived classes must override the protected <ref refid="class_quant_lib_1_1_discretized_asset_1ae760c4f8673c95ebeda43f7bef83e12a" kindref="member">preAdjustValuesImpl()</ref> method instead. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/discretizedasset.hpp" line="99" column="14" bodyfile="ql/discretizedasset.hpp" bodystart="201" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_asset_1a0c3c8bdd418e754442145a8346bc0bce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::DiscretizedAsset::postAdjustValues</definition>
        <argsstring>()</argsstring>
        <name>postAdjustValues</name>
        <qualifiedname>QuantLib::DiscretizedAsset::postAdjustValues</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method will be invoked after rollback and after any other asset had their chance to look at the values. For instance, payments happening at the present time (and therefore not included in an option to be exercised at this time) will be added here.</para>
<para>This method is not virtual; derived classes must override the protected <ref refid="class_quant_lib_1_1_discretized_asset_1a977eeb69773ccb7e8dc16fc7d61f678c" kindref="member">postAdjustValuesImpl()</ref> method instead. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/discretizedasset.hpp" line="110" column="14" bodyfile="ql/discretizedasset.hpp" bodystart="208" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_asset_1a35b681c10038f1f62bad25e9b4915c4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::DiscretizedAsset::adjustValues</definition>
        <argsstring>()</argsstring>
        <name>adjustValues</name>
        <qualifiedname>QuantLib::DiscretizedAsset::adjustValues</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method performs both pre- and post-adjustment </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/discretizedasset.hpp" line="113" column="14" bodyfile="ql/discretizedasset.hpp" bodystart="113" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_asset_1a387fb8413f6892687f001d0091fcc2ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;</type>
        <definition>virtual std::vector&lt; Time &gt; QuantLib::DiscretizedAsset::mandatoryTimes</definition>
        <argsstring>() const =0</argsstring>
        <name>mandatoryTimes</name>
        <qualifiedname>QuantLib::DiscretizedAsset::mandatoryTimes</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_discretized_barrier_option_1a2c0a887dae456be0e4ea6b3dff24022b">mandatoryTimes</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_discretized_callable_fixed_rate_bond_1adccc8c66b989caabe5442c1561e65f67">mandatoryTimes</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_discretized_cap_floor_1ae9357770db318f02f4b460d40b88be64">mandatoryTimes</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_discretized_convertible_1a751d8d61835969adff6af1d9299839d8">mandatoryTimes</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_discretized_derman_kani_barrier_option_1a42147b8f016713d6e68ec03f32ab4d41">mandatoryTimes</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_discretized_derman_kani_double_barrier_option_1a87764f85747aa561a0618fd9504bff63">mandatoryTimes</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_discretized_discount_bond_1ab44a8224498f9f63b387379974e648fc">mandatoryTimes</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_discretized_double_barrier_option_1abd4d28d84da5aa1323fb4de127d1057f">mandatoryTimes</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_discretized_option_1a9eca7fbea61dd9099ea7ff9c99111bf0">mandatoryTimes</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_discretized_swap_1a30a64b439d767f26109be3abf7088d38">mandatoryTimes</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_discretized_vanilla_option_1a48d17e6c65b931b03650bd2a117f69b5">mandatoryTimes</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the times at which the numerical method should stop while rolling back the asset. Typical examples include payment times, exercise times and such.</para>
<para><simplesect kind="note"><para>The returned values are not guaranteed to be sorted. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/discretizedasset.hpp" line="124" column="29"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_asset_1a36eb67653a2ca130274fbcdbf89deb59" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::DiscretizedAsset::isOnTime</definition>
        <argsstring>(Time t) const</argsstring>
        <name>isOnTime</name>
        <qualifiedname>QuantLib::DiscretizedAsset::isOnTime</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method checks whether the asset was rolled at the given time. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/discretizedasset.hpp" line="132" column="14" bodyfile="ql/discretizedasset.hpp" bodystart="215" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_asset_1ae760c4f8673c95ebeda43f7bef83e12a" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void QuantLib::DiscretizedAsset::preAdjustValuesImpl</definition>
        <argsstring>()</argsstring>
        <name>preAdjustValuesImpl</name>
        <qualifiedname>QuantLib::DiscretizedAsset::preAdjustValuesImpl</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_discretized_callable_fixed_rate_bond_1a28cc1f806fce3fa5dea8bfa8a708507e">preAdjustValuesImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_discretized_cap_floor_1ae64c0d75f7cb51c3543f9a600243fc54">preAdjustValuesImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_discretized_swap_1a632d496bdd229c5982e7ee1596bd6793">preAdjustValuesImpl</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method performs the actual pre-adjustment </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/discretizedasset.hpp" line="134" column="22" bodyfile="ql/discretizedasset.hpp" bodystart="134" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_asset_1a977eeb69773ccb7e8dc16fc7d61f678c" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void QuantLib::DiscretizedAsset::postAdjustValuesImpl</definition>
        <argsstring>()</argsstring>
        <name>postAdjustValuesImpl</name>
        <qualifiedname>QuantLib::DiscretizedAsset::postAdjustValuesImpl</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_discretized_barrier_option_1a778d8ab5e22b503a2f74bd892bfd274e">postAdjustValuesImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_discretized_callable_fixed_rate_bond_1aedbd7f5b3ccb31c5f30afc1b2c24e623">postAdjustValuesImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_discretized_cap_floor_1a800b666aa2a5c21e12356fed6b63a975">postAdjustValuesImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_discretized_convertible_1aa63def87267cdcfe2c3bb0b5d3584550">postAdjustValuesImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_discretized_derman_kani_barrier_option_1ad3a16ca97eb3b69ecb922a201ac6e893">postAdjustValuesImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_discretized_derman_kani_double_barrier_option_1a9f1f8756c06d492dceac03ec76e12c47">postAdjustValuesImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_discretized_double_barrier_option_1a2aa06b8ac8519d119e18c690cc024206">postAdjustValuesImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_discretized_option_1a029f5811e35280143586dd0bbcbefd02">postAdjustValuesImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_discretized_swap_1a9b93c8721344c4f4029ddffba24fca59">postAdjustValuesImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_discretized_vanilla_option_1a0b8b2c41aeb7d87c2a690fcbd96e35ba">postAdjustValuesImpl</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method performs the actual post-adjustment </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/discretizedasset.hpp" line="136" column="22" bodyfile="ql/discretizedasset.hpp" bodystart="136" bodyend="136"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>inspectors</header>
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_asset_1a215f21f5e591f45567474858b12840aa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>Time QuantLib::DiscretizedAsset::time</definition>
        <argsstring>() const</argsstring>
        <name>time</name>
        <qualifiedname>QuantLib::DiscretizedAsset::time</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/discretizedasset.hpp" line="45" column="14" bodyfile="ql/discretizedasset.hpp" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_asset_1aad101d37f5bdf5fe80b36fac3f5516db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &amp;</type>
        <definition>Time &amp; QuantLib::DiscretizedAsset::time</definition>
        <argsstring>()</argsstring>
        <name>time</name>
        <qualifiedname>QuantLib::DiscretizedAsset::time</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/discretizedasset.hpp" line="46" column="14" bodyfile="ql/discretizedasset.hpp" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_asset_1a8289a365e5debed63c090767e0cb6c9e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
        <definition>const Array &amp; QuantLib::DiscretizedAsset::values</definition>
        <argsstring>() const</argsstring>
        <name>values</name>
        <qualifiedname>QuantLib::DiscretizedAsset::values</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/discretizedasset.hpp" line="48" column="21" bodyfile="ql/discretizedasset.hpp" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_asset_1a3728ab16b4936ae0a2d833256c55aec3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
        <definition>Array &amp; QuantLib::DiscretizedAsset::values</definition>
        <argsstring>()</argsstring>
        <name>values</name>
        <qualifiedname>QuantLib::DiscretizedAsset::values</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/discretizedasset.hpp" line="49" column="15" bodyfile="ql/discretizedasset.hpp" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_asset_1ad935364d3ec309c5e37eb788452bdae8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_lattice" kindref="compound">Lattice</ref> &gt; &amp;</type>
        <definition>const ext::shared_ptr&lt; Lattice &gt; &amp; QuantLib::DiscretizedAsset::method</definition>
        <argsstring>() const</argsstring>
        <name>method</name>
        <qualifiedname>QuantLib::DiscretizedAsset::method</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/discretizedasset.hpp" line="51" column="31" bodyfile="ql/discretizedasset.hpp" bodystart="51" bodyend="53"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>High-level interface</header>
      <description><para>Users of discretized assets should use these methods in order to initialize, evolve and take the present value of the assets. They call the corresponding methods in the <ref refid="class_quant_lib_1_1_lattice" kindref="compound">Lattice</ref> interface, to which we refer for documentation. </para>
</description>
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_asset_1a38a567d1a1efc9f3de789af08ccfd439" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::DiscretizedAsset::initialize</definition>
        <argsstring>(const ext::shared_ptr&lt; Lattice &gt; &amp;, Time t)</argsstring>
        <name>initialize</name>
        <qualifiedname>QuantLib::DiscretizedAsset::initialize</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_lattice" kindref="compound">Lattice</ref> &gt; &amp;</type>
          <defname>method</defname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/discretizedasset.hpp" line="66" column="14" bodyfile="ql/discretizedasset.hpp" bodystart="182" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_asset_1af0bfa673817053bb4f1446d4f32fe82b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::DiscretizedAsset::rollback</definition>
        <argsstring>(Time to)</argsstring>
        <name>rollback</name>
        <qualifiedname>QuantLib::DiscretizedAsset::rollback</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/discretizedasset.hpp" line="68" column="14" bodyfile="ql/discretizedasset.hpp" bodystart="189" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_asset_1ad04b429958ccf31ac1fd6979a10c96de" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::DiscretizedAsset::partialRollback</definition>
        <argsstring>(Time to)</argsstring>
        <name>partialRollback</name>
        <qualifiedname>QuantLib::DiscretizedAsset::partialRollback</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/discretizedasset.hpp" line="69" column="14" bodyfile="ql/discretizedasset.hpp" bodystart="193" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_asset_1a283876e01a0655203c2a330aa3a341ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::DiscretizedAsset::presentValue</definition>
        <argsstring>()</argsstring>
        <name>presentValue</name>
        <qualifiedname>QuantLib::DiscretizedAsset::presentValue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/discretizedasset.hpp" line="70" column="14" bodyfile="ql/discretizedasset.hpp" bodystart="197" bodyend="199"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_asset_1ad305192b76a41f7eedfa7d849c80fb14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::DiscretizedAsset::DiscretizedAsset</definition>
        <argsstring>()</argsstring>
        <name>DiscretizedAsset</name>
        <qualifiedname>QuantLib::DiscretizedAsset::DiscretizedAsset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/discretizedasset.hpp" line="38" column="9" bodyfile="ql/discretizedasset.hpp" bodystart="38" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_asset_1a60cd28fb1233a4dd19e25b9a75d8f7be" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual QuantLib::DiscretizedAsset::~DiscretizedAsset</definition>
        <argsstring>()=default</argsstring>
        <name>~DiscretizedAsset</name>
        <qualifiedname>QuantLib::DiscretizedAsset::~DiscretizedAsset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/discretizedasset.hpp" line="41" column="17"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Discretized asset class used by numerical methods. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::DiscretizedAsset</label>
        <link refid="class_quant_lib_1_1_discretized_asset"/>
      </node>
      <node id="2">
        <label>QuantLib::DiscretizedBarrierOption</label>
        <link refid="class_quant_lib_1_1_discretized_barrier_option"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::DiscretizedCallableFixedRateBond</label>
        <link refid="class_quant_lib_1_1_discretized_callable_fixed_rate_bond"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::DiscretizedCapFloor</label>
        <link refid="class_quant_lib_1_1_discretized_cap_floor"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::DiscretizedConvertible</label>
        <link refid="class_quant_lib_1_1_discretized_convertible"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::DiscretizedDermanKaniBarrierOption</label>
        <link refid="class_quant_lib_1_1_discretized_derman_kani_barrier_option"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::DiscretizedDermanKaniDoubleBarrierOption</label>
        <link refid="class_quant_lib_1_1_discretized_derman_kani_double_barrier_option"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::DiscretizedDiscountBond</label>
        <link refid="class_quant_lib_1_1_discretized_discount_bond"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QuantLib::DiscretizedDoubleBarrierOption</label>
        <link refid="class_quant_lib_1_1_discretized_double_barrier_option"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QuantLib::DiscretizedOption</label>
        <link refid="class_quant_lib_1_1_discretized_option"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>QuantLib::DiscretizedSwap</label>
        <link refid="class_quant_lib_1_1_discretized_swap"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>QuantLib::DiscretizedSwaption</label>
        <link refid="class_quant_lib_1_1_discretized_swaption"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>QuantLib::DiscretizedVanillaOption</label>
        <link refid="class_quant_lib_1_1_discretized_vanilla_option"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::Array</label>
        <link refid="class_quant_lib_1_1_array"/>
      </node>
      <node id="1">
        <label>QuantLib::DiscretizedAsset</label>
        <link refid="class_quant_lib_1_1_discretized_asset"/>
        <childnode refid="2" relation="usage">
          <edgelabel>values_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/discretizedasset.hpp" line="36" column="5" bodyfile="ql/discretizedasset.hpp" bodystart="36" bodyend="143"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_discretized_asset_1a35b681c10038f1f62bad25e9b4915c4b" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedAsset</scope><name>adjustValues</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1ae818ed5af32e6c027454bcc19a4abb4f" prot="protected" virt="non-virtual"><scope>QuantLib::DiscretizedAsset</scope><name>CouponAdjustment</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1ad305192b76a41f7eedfa7d849c80fb14" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedAsset</scope><name>DiscretizedAsset</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1a38a567d1a1efc9f3de789af08ccfd439" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedAsset</scope><name>initialize</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1a36eb67653a2ca130274fbcdbf89deb59" prot="protected" virt="non-virtual"><scope>QuantLib::DiscretizedAsset</scope><name>isOnTime</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1ae0c6a088f8cc58ebed984450f39f1ad8" prot="protected" virt="non-virtual"><scope>QuantLib::DiscretizedAsset</scope><name>latestPostAdjustment_</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1ab95e661a7352085a074d3661a52ea7fc" prot="protected" virt="non-virtual"><scope>QuantLib::DiscretizedAsset</scope><name>latestPreAdjustment_</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1a387fb8413f6892687f001d0091fcc2ce" prot="public" virt="pure-virtual"><scope>QuantLib::DiscretizedAsset</scope><name>mandatoryTimes</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1ad935364d3ec309c5e37eb788452bdae8" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedAsset</scope><name>method</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1a22a2211d418a4a6693e72006ce7681c7" prot="private" virt="non-virtual"><scope>QuantLib::DiscretizedAsset</scope><name>method_</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1ad04b429958ccf31ac1fd6979a10c96de" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedAsset</scope><name>partialRollback</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1a0c3c8bdd418e754442145a8346bc0bce" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedAsset</scope><name>postAdjustValues</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1a977eeb69773ccb7e8dc16fc7d61f678c" prot="protected" virt="virtual"><scope>QuantLib::DiscretizedAsset</scope><name>postAdjustValuesImpl</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1af9d63f3511be393f92de7770fe2b058f" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedAsset</scope><name>preAdjustValues</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1ae760c4f8673c95ebeda43f7bef83e12a" prot="protected" virt="virtual"><scope>QuantLib::DiscretizedAsset</scope><name>preAdjustValuesImpl</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1a283876e01a0655203c2a330aa3a341ba" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedAsset</scope><name>presentValue</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1a564cea41e833b0f86e4bbbfca26274bc" prot="public" virt="pure-virtual"><scope>QuantLib::DiscretizedAsset</scope><name>reset</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1af0bfa673817053bb4f1446d4f32fe82b" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedAsset</scope><name>rollback</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1a215f21f5e591f45567474858b12840aa" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedAsset</scope><name>time</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1aad101d37f5bdf5fe80b36fac3f5516db" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedAsset</scope><name>time</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1af428f43eab9a20010a9fb2b6e721a748" prot="protected" virt="non-virtual"><scope>QuantLib::DiscretizedAsset</scope><name>time_</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1a8289a365e5debed63c090767e0cb6c9e" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedAsset</scope><name>values</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1a3728ab16b4936ae0a2d833256c55aec3" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedAsset</scope><name>values</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1a63c3ec17cc95b8469ce9609a48d43221" prot="protected" virt="non-virtual"><scope>QuantLib::DiscretizedAsset</scope><name>values_</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1a60cd28fb1233a4dd19e25b9a75d8f7be" prot="public" virt="virtual"><scope>QuantLib::DiscretizedAsset</scope><name>~DiscretizedAsset</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

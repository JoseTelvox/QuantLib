<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="struct_quant_lib_1_1_i_m_m" kind="struct" language="C++" prot="public">
    <compoundname>QuantLib::IMM</compoundname>
    <includes refid="imm_8hpp" local="no">imm.hpp</includes>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="struct_quant_lib_1_1_i_m_m_1af33eff95074d013e39814ed911b31902" prot="public" static="no" strong="no">
        <type></type>
        <name>Month</name>
        <qualifiedname>QuantLib::IMM::Month</qualifiedname>
        <enumvalue id="struct_quant_lib_1_1_i_m_m_1af33eff95074d013e39814ed911b31902a1c989e66a2501f600a06d16b1c30150c" prot="public">
          <name>F</name>
          <initializer>=  1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_quant_lib_1_1_i_m_m_1af33eff95074d013e39814ed911b31902a80e036eb1611da1c0ebbf6dc9434b2ed" prot="public">
          <name>G</name>
          <initializer>=  2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_quant_lib_1_1_i_m_m_1af33eff95074d013e39814ed911b31902a4b67ad347aabe795b704578f62578a01" prot="public">
          <name>H</name>
          <initializer>=  3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_quant_lib_1_1_i_m_m_1af33eff95074d013e39814ed911b31902abecc31ebffff43e58b826a0f3997fed8" prot="public">
          <name>J</name>
          <initializer>=  4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_quant_lib_1_1_i_m_m_1af33eff95074d013e39814ed911b31902af65353b61a21f3e35b45e113124f5ee1" prot="public">
          <name>K</name>
          <initializer>=  5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_quant_lib_1_1_i_m_m_1af33eff95074d013e39814ed911b31902a57cdba5bd01b2c5fad762ba7e6cce419" prot="public">
          <name>M</name>
          <initializer>=  6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_quant_lib_1_1_i_m_m_1af33eff95074d013e39814ed911b31902a8b664594674532da97969f44b91b1c57" prot="public">
          <name>N</name>
          <initializer>=  7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_quant_lib_1_1_i_m_m_1af33eff95074d013e39814ed911b31902a60c39034713b2cb0d723ea6e7423bae3" prot="public">
          <name>Q</name>
          <initializer>=  8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_quant_lib_1_1_i_m_m_1af33eff95074d013e39814ed911b31902ada3eb15dd79924eb84fd66c8756fbccd" prot="public">
          <name>U</name>
          <initializer>=  9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_quant_lib_1_1_i_m_m_1af33eff95074d013e39814ed911b31902a58e4e94a5075e54f2633b6a3b0cb7965" prot="public">
          <name>V</name>
          <initializer>= 10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_quant_lib_1_1_i_m_m_1af33eff95074d013e39814ed911b31902a4add5ff5f670fe7d01e371800e1c8635" prot="public">
          <name>X</name>
          <initializer>= 11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_quant_lib_1_1_i_m_m_1af33eff95074d013e39814ed911b31902a84a01ff6f861d96cdc635a0836e308ff" prot="public">
          <name>Z</name>
          <initializer>= 12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/imm.hpp" line="36" column="9" bodyfile="ql/time/imm.hpp" bodystart="36" bodyend="39"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_quant_lib_1_1_i_m_m_1a23211a07615b9fbe2b0cec474e3a65a1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::IMM::isIMMdate</definition>
        <argsstring>(const Date &amp;d, bool mainCycle=true)</argsstring>
        <name>isIMMdate</name>
        <qualifiedname>QuantLib::IMM::isIMMdate</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>mainCycle</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>returns whether or not the given date is an <ref refid="struct_quant_lib_1_1_i_m_m" kindref="compound">IMM</ref> date </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/imm.hpp" line="42" column="21" bodyfile="ql/time/imm.cpp" bodystart="34" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1_i_m_m_1ac653f2614c7d2be337166ece911f003d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::IMM::isIMMcode</definition>
        <argsstring>(const std::string &amp;in, bool mainCycle=true)</argsstring>
        <name>isIMMcode</name>
        <qualifiedname>QuantLib::IMM::isIMMcode</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>mainCycle</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>returns whether or not the given string is an <ref refid="struct_quant_lib_1_1_i_m_m" kindref="compound">IMM</ref> code </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/imm.hpp" line="46" column="21" bodyfile="ql/time/imm.cpp" bodystart="55" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1_i_m_m_1a672a7abe089e0d6c56d325130214f76f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string QuantLib::IMM::code</definition>
        <argsstring>(const Date &amp;immDate)</argsstring>
        <name>code</name>
        <qualifiedname>QuantLib::IMM::code</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>immDate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the <ref refid="struct_quant_lib_1_1_i_m_m" kindref="compound">IMM</ref> code for the given date (e.g. H3 for March 20th, 2013).</para>
<para><simplesect kind="warning"><para>It raises an exception if the input date is not an <ref refid="struct_quant_lib_1_1_i_m_m" kindref="compound">IMM</ref> date </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/imm.hpp" line="55" column="28" bodyfile="ql/time/imm.cpp" bodystart="70" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1_i_m_m_1ac8979a79bcd40c0924975cb7b2235151" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::IMM::date</definition>
        <argsstring>(const std::string &amp;immCode, const Date &amp;referenceDate=Date())</argsstring>
        <name>date</name>
        <qualifiedname>QuantLib::IMM::date</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>immCode</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>referenceDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the <ref refid="struct_quant_lib_1_1_i_m_m" kindref="compound">IMM</ref> date for the given <ref refid="struct_quant_lib_1_1_i_m_m" kindref="compound">IMM</ref> code (e.g. March 20th, 2013 for H3).</para>
<para><simplesect kind="warning"><para>It raises an exception if the input string is not an <ref refid="struct_quant_lib_1_1_i_m_m" kindref="compound">IMM</ref> code </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/imm.hpp" line="63" column="21" bodyfile="ql/time/imm.cpp" bodystart="125" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1_i_m_m_1a7e27c63818f01a5bdfa675fd0ae5612f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::IMM::nextDate</definition>
        <argsstring>(const Date &amp;d=Date(), bool mainCycle=true)</argsstring>
        <name>nextDate</name>
        <qualifiedname>QuantLib::IMM::nextDate</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>mainCycle</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>next <ref refid="struct_quant_lib_1_1_i_m_m" kindref="compound">IMM</ref> date following the given date </para>
        </briefdescription>
        <detaileddescription>
<para>returns the 1st delivery date for next contract listed in the International <ref refid="class_quant_lib_1_1_money" kindref="compound">Money</ref> Market section of the Chicago Mercantile Exchange. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/imm.hpp" line="71" column="21" bodyfile="ql/time/imm.cpp" bodystart="164" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1_i_m_m_1a1fd8cd145c0e70d382f42ebbc735a7b7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::IMM::nextDate</definition>
        <argsstring>(const std::string &amp;immCode, bool mainCycle=true, const Date &amp;referenceDate=Date())</argsstring>
        <name>nextDate</name>
        <qualifiedname>QuantLib::IMM::nextDate</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>immCode</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>mainCycle</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>referenceDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <briefdescription>
<para>next <ref refid="struct_quant_lib_1_1_i_m_m" kindref="compound">IMM</ref> date following the given <ref refid="struct_quant_lib_1_1_i_m_m" kindref="compound">IMM</ref> code </para>
        </briefdescription>
        <detaileddescription>
<para>returns the 1st delivery date for next contract listed in the International <ref refid="class_quant_lib_1_1_money" kindref="compound">Money</ref> Market section of the Chicago Mercantile Exchange. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/imm.hpp" line="79" column="21" bodyfile="ql/time/imm.cpp" bodystart="189" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1_i_m_m_1adf385fd26515fd9c33f7280d705967bf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string QuantLib::IMM::nextCode</definition>
        <argsstring>(const Date &amp;d=Date(), bool mainCycle=true)</argsstring>
        <name>nextCode</name>
        <qualifiedname>QuantLib::IMM::nextCode</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>mainCycle</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>next <ref refid="struct_quant_lib_1_1_i_m_m" kindref="compound">IMM</ref> code following the given date </para>
        </briefdescription>
        <detaileddescription>
<para>returns the <ref refid="struct_quant_lib_1_1_i_m_m" kindref="compound">IMM</ref> code for next contract listed in the International <ref refid="class_quant_lib_1_1_money" kindref="compound">Money</ref> Market section of the Chicago Mercantile Exchange. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/imm.hpp" line="88" column="28" bodyfile="ql/time/imm.cpp" bodystart="196" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1_i_m_m_1a981816e40ece7903e1c9e17e484d0098" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string QuantLib::IMM::nextCode</definition>
        <argsstring>(const std::string &amp;immCode, bool mainCycle=true, const Date &amp;referenceDate=Date())</argsstring>
        <name>nextCode</name>
        <qualifiedname>QuantLib::IMM::nextCode</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>immCode</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>mainCycle</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>referenceDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <briefdescription>
<para>next <ref refid="struct_quant_lib_1_1_i_m_m" kindref="compound">IMM</ref> code following the given code </para>
        </briefdescription>
        <detaileddescription>
<para>returns the <ref refid="struct_quant_lib_1_1_i_m_m" kindref="compound">IMM</ref> code for next contract listed in the International <ref refid="class_quant_lib_1_1_money" kindref="compound">Money</ref> Market section of the Chicago Mercantile Exchange. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/imm.hpp" line="96" column="28" bodyfile="ql/time/imm.cpp" bodystart="202" bodyend="207"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Main cycle of the International Money Market (a.k.a. IMM) months. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/time/imm.hpp" line="35" column="5" bodyfile="ql/time/imm.hpp" bodystart="35" bodyend="99"/>
    <listofallmembers>
      <member refid="struct_quant_lib_1_1_i_m_m_1a672a7abe089e0d6c56d325130214f76f" prot="public" virt="non-virtual"><scope>QuantLib::IMM</scope><name>code</name></member>
      <member refid="struct_quant_lib_1_1_i_m_m_1ac8979a79bcd40c0924975cb7b2235151" prot="public" virt="non-virtual"><scope>QuantLib::IMM</scope><name>date</name></member>
      <member refid="struct_quant_lib_1_1_i_m_m_1af33eff95074d013e39814ed911b31902a1c989e66a2501f600a06d16b1c30150c" prot="public" virt="non-virtual"><scope>QuantLib::IMM</scope><name>F</name></member>
      <member refid="struct_quant_lib_1_1_i_m_m_1af33eff95074d013e39814ed911b31902a80e036eb1611da1c0ebbf6dc9434b2ed" prot="public" virt="non-virtual"><scope>QuantLib::IMM</scope><name>G</name></member>
      <member refid="struct_quant_lib_1_1_i_m_m_1af33eff95074d013e39814ed911b31902a4b67ad347aabe795b704578f62578a01" prot="public" virt="non-virtual"><scope>QuantLib::IMM</scope><name>H</name></member>
      <member refid="struct_quant_lib_1_1_i_m_m_1ac653f2614c7d2be337166ece911f003d" prot="public" virt="non-virtual"><scope>QuantLib::IMM</scope><name>isIMMcode</name></member>
      <member refid="struct_quant_lib_1_1_i_m_m_1a23211a07615b9fbe2b0cec474e3a65a1" prot="public" virt="non-virtual"><scope>QuantLib::IMM</scope><name>isIMMdate</name></member>
      <member refid="struct_quant_lib_1_1_i_m_m_1af33eff95074d013e39814ed911b31902abecc31ebffff43e58b826a0f3997fed8" prot="public" virt="non-virtual"><scope>QuantLib::IMM</scope><name>J</name></member>
      <member refid="struct_quant_lib_1_1_i_m_m_1af33eff95074d013e39814ed911b31902af65353b61a21f3e35b45e113124f5ee1" prot="public" virt="non-virtual"><scope>QuantLib::IMM</scope><name>K</name></member>
      <member refid="struct_quant_lib_1_1_i_m_m_1af33eff95074d013e39814ed911b31902a57cdba5bd01b2c5fad762ba7e6cce419" prot="public" virt="non-virtual"><scope>QuantLib::IMM</scope><name>M</name></member>
      <member refid="struct_quant_lib_1_1_i_m_m_1af33eff95074d013e39814ed911b31902" prot="public" virt="non-virtual"><scope>QuantLib::IMM</scope><name>Month</name></member>
      <member refid="struct_quant_lib_1_1_i_m_m_1af33eff95074d013e39814ed911b31902a8b664594674532da97969f44b91b1c57" prot="public" virt="non-virtual"><scope>QuantLib::IMM</scope><name>N</name></member>
      <member refid="struct_quant_lib_1_1_i_m_m_1adf385fd26515fd9c33f7280d705967bf" prot="public" virt="non-virtual"><scope>QuantLib::IMM</scope><name>nextCode</name></member>
      <member refid="struct_quant_lib_1_1_i_m_m_1a981816e40ece7903e1c9e17e484d0098" prot="public" virt="non-virtual"><scope>QuantLib::IMM</scope><name>nextCode</name></member>
      <member refid="struct_quant_lib_1_1_i_m_m_1a7e27c63818f01a5bdfa675fd0ae5612f" prot="public" virt="non-virtual"><scope>QuantLib::IMM</scope><name>nextDate</name></member>
      <member refid="struct_quant_lib_1_1_i_m_m_1a1fd8cd145c0e70d382f42ebbc735a7b7" prot="public" virt="non-virtual"><scope>QuantLib::IMM</scope><name>nextDate</name></member>
      <member refid="struct_quant_lib_1_1_i_m_m_1af33eff95074d013e39814ed911b31902a60c39034713b2cb0d723ea6e7423bae3" prot="public" virt="non-virtual"><scope>QuantLib::IMM</scope><name>Q</name></member>
      <member refid="struct_quant_lib_1_1_i_m_m_1af33eff95074d013e39814ed911b31902ada3eb15dd79924eb84fd66c8756fbccd" prot="public" virt="non-virtual"><scope>QuantLib::IMM</scope><name>U</name></member>
      <member refid="struct_quant_lib_1_1_i_m_m_1af33eff95074d013e39814ed911b31902a58e4e94a5075e54f2633b6a3b0cb7965" prot="public" virt="non-virtual"><scope>QuantLib::IMM</scope><name>V</name></member>
      <member refid="struct_quant_lib_1_1_i_m_m_1af33eff95074d013e39814ed911b31902a4add5ff5f670fe7d01e371800e1c8635" prot="public" virt="non-virtual"><scope>QuantLib::IMM</scope><name>X</name></member>
      <member refid="struct_quant_lib_1_1_i_m_m_1af33eff95074d013e39814ed911b31902a84a01ff6f861d96cdc635a0836e308ff" prot="public" virt="non-virtual"><scope>QuantLib::IMM</scope><name>Z</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="fdmlinearoplayout_8hpp" kind="file" language="C++">
    <compoundname>fdmlinearoplayout.hpp</compoundname>
    <includes refid="fdmlinearopiterator_8hpp" local="no">ql/methods/finitedifferences/operators/fdmlinearopiterator.hpp</includes>
    <includes local="no">functional</includes>
    <includedby refid="dynprogvppintrinsicvalueengine_8cpp" local="no">ql/experimental/finitedifferences/dynprogvppintrinsicvalueengine.cpp</includedby>
    <includedby refid="fdextoujumpvanillaengine_8cpp" local="no">ql/experimental/finitedifferences/fdextoujumpvanillaengine.cpp</includedby>
    <includedby refid="fdklugeextouspreadengine_8cpp" local="no">ql/experimental/finitedifferences/fdklugeextouspreadengine.cpp</includedby>
    <includedby refid="fdmdupire1dop_8hpp" local="no">ql/experimental/finitedifferences/fdmdupire1dop.hpp</includedby>
    <includedby refid="fdmextendedornsteinuhlenbeckop_8cpp" local="no">ql/experimental/finitedifferences/fdmextendedornsteinuhlenbeckop.cpp</includedby>
    <includedby refid="fdmextoujumpop_8cpp" local="no">ql/experimental/finitedifferences/fdmextoujumpop.cpp</includedby>
    <includedby refid="fdmklugeextouop_8cpp" local="no">ql/experimental/finitedifferences/fdmklugeextouop.cpp</includedby>
    <includedby refid="fdmvppstartlimitstepcondition_8cpp" local="no">ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.cpp</includedby>
    <includedby refid="fdmvppstepcondition_8cpp" local="no">ql/experimental/finitedifferences/fdmvppstepcondition.cpp</includedby>
    <includedby refid="fdornsteinuhlenbeckvanillaengine_8cpp" local="no">ql/experimental/finitedifferences/fdornsteinuhlenbeckvanillaengine.cpp</includedby>
    <includedby refid="fdsimpleextoujumpswingengine_8cpp" local="no">ql/experimental/finitedifferences/fdsimpleextoujumpswingengine.cpp</includedby>
    <includedby refid="fdsimpleextoustorageengine_8cpp" local="no">ql/experimental/finitedifferences/fdsimpleextoustorageengine.cpp</includedby>
    <includedby refid="fdsimpleklugeextouvppengine_8cpp" local="no">ql/experimental/finitedifferences/fdsimpleklugeextouvppengine.cpp</includedby>
    <includedby refid="laplaceinterpolation_8cpp" local="no">ql/experimental/math/laplaceinterpolation.cpp</includedby>
    <includedby refid="zabr_8cpp" local="no">ql/experimental/volatility/zabr.cpp</includedby>
    <includedby refid="fdmmeshercomposite_8cpp" local="no">ql/methods/finitedifferences/meshers/fdmmeshercomposite.cpp</includedby>
    <includedby refid="uniformgridmesher_8cpp" local="no">ql/methods/finitedifferences/meshers/uniformgridmesher.cpp</includedby>
    <includedby refid="methods_2finitedifferences_2operators_2all_8hpp" local="no">ql/methods/finitedifferences/operators/all.hpp</includedby>
    <includedby refid="fdm2dblackscholesop_8cpp" local="no">ql/methods/finitedifferences/operators/fdm2dblackscholesop.cpp</includedby>
    <includedby refid="fdmbatesop_8cpp" local="no">ql/methods/finitedifferences/operators/fdmbatesop.cpp</includedby>
    <includedby refid="fdmblackscholesfwdop_8cpp" local="no">ql/methods/finitedifferences/operators/fdmblackscholesfwdop.cpp</includedby>
    <includedby refid="fdmblackscholesop_8cpp" local="no">ql/methods/finitedifferences/operators/fdmblackscholesop.cpp</includedby>
    <includedby refid="fdmcevop_8cpp" local="no">ql/methods/finitedifferences/operators/fdmcevop.cpp</includedby>
    <includedby refid="fdmcirop_8cpp" local="no">ql/methods/finitedifferences/operators/fdmcirop.cpp</includedby>
    <includedby refid="fdmg2op_8cpp" local="no">ql/methods/finitedifferences/operators/fdmg2op.cpp</includedby>
    <includedby refid="fdmhestonfwdop_8cpp" local="no">ql/methods/finitedifferences/operators/fdmhestonfwdop.cpp</includedby>
    <includedby refid="fdmhestonhullwhiteop_8cpp" local="no">ql/methods/finitedifferences/operators/fdmhestonhullwhiteop.cpp</includedby>
    <includedby refid="fdmhestonop_8cpp" local="no">ql/methods/finitedifferences/operators/fdmhestonop.cpp</includedby>
    <includedby refid="fdmhullwhiteop_8cpp" local="no">ql/methods/finitedifferences/operators/fdmhullwhiteop.cpp</includedby>
    <includedby refid="fdmlinearoplayout_8cpp" local="no">ql/methods/finitedifferences/operators/fdmlinearoplayout.cpp</includedby>
    <includedby refid="fdmlocalvolfwdop_8cpp" local="no">ql/methods/finitedifferences/operators/fdmlocalvolfwdop.cpp</includedby>
    <includedby refid="fdmornsteinuhlenbeckop_8cpp" local="no">ql/methods/finitedifferences/operators/fdmornsteinuhlenbeckop.cpp</includedby>
    <includedby refid="fdmsabrop_8cpp" local="no">ql/methods/finitedifferences/operators/fdmsabrop.cpp</includedby>
    <includedby refid="fdmsquarerootfwdop_8cpp" local="no">ql/methods/finitedifferences/operators/fdmsquarerootfwdop.cpp</includedby>
    <includedby refid="fdmwienerop_8cpp" local="no">ql/methods/finitedifferences/operators/fdmwienerop.cpp</includedby>
    <includedby refid="firstderivativeop_8cpp" local="no">ql/methods/finitedifferences/operators/firstderivativeop.cpp</includedby>
    <includedby refid="ninepointlinearop_8cpp" local="no">ql/methods/finitedifferences/operators/ninepointlinearop.cpp</includedby>
    <includedby refid="nthorderderivativeop_8cpp" local="no">ql/methods/finitedifferences/operators/nthorderderivativeop.cpp</includedby>
    <includedby refid="secondderivativeop_8cpp" local="no">ql/methods/finitedifferences/operators/secondderivativeop.cpp</includedby>
    <includedby refid="secondordermixedderivativeop_8cpp" local="no">ql/methods/finitedifferences/operators/secondordermixedderivativeop.cpp</includedby>
    <includedby refid="triplebandlinearop_8cpp" local="no">ql/methods/finitedifferences/operators/triplebandlinearop.cpp</includedby>
    <includedby refid="fdm1dimsolver_8cpp" local="no">ql/methods/finitedifferences/solvers/fdm1dimsolver.cpp</includedby>
    <includedby refid="fdm2dimsolver_8cpp" local="no">ql/methods/finitedifferences/solvers/fdm2dimsolver.cpp</includedby>
    <includedby refid="fdm3dimsolver_8cpp" local="no">ql/methods/finitedifferences/solvers/fdm3dimsolver.cpp</includedby>
    <includedby refid="fdmndimsolver_8hpp" local="no">ql/methods/finitedifferences/solvers/fdmndimsolver.hpp</includedby>
    <includedby refid="fdmamericanstepcondition_8cpp" local="no">ql/methods/finitedifferences/stepconditions/fdmamericanstepcondition.cpp</includedby>
    <includedby refid="fdmarithmeticaveragecondition_8cpp" local="no">ql/methods/finitedifferences/stepconditions/fdmarithmeticaveragecondition.cpp</includedby>
    <includedby refid="fdmbermudanstepcondition_8cpp" local="no">ql/methods/finitedifferences/stepconditions/fdmbermudanstepcondition.cpp</includedby>
    <includedby refid="fdmsimplestoragecondition_8cpp" local="no">ql/methods/finitedifferences/stepconditions/fdmsimplestoragecondition.cpp</includedby>
    <includedby refid="fdmsimpleswingcondition_8cpp" local="no">ql/methods/finitedifferences/stepconditions/fdmsimpleswingcondition.cpp</includedby>
    <includedby refid="fdmdirichletboundary_8cpp" local="no">ql/methods/finitedifferences/utilities/fdmdirichletboundary.cpp</includedby>
    <includedby refid="fdmdividendhandler_8cpp" local="no">ql/methods/finitedifferences/utilities/fdmdividendhandler.cpp</includedby>
    <includedby refid="fdmhestongreensfct_8cpp" local="no">ql/methods/finitedifferences/utilities/fdmhestongreensfct.cpp</includedby>
    <includedby refid="fdmindicesonboundary_8cpp" local="no">ql/methods/finitedifferences/utilities/fdmindicesonboundary.cpp</includedby>
    <includedby refid="fdminnervaluecalculator_8cpp" local="no">ql/methods/finitedifferences/utilities/fdminnervaluecalculator.cpp</includedby>
    <includedby refid="fdmmesherintegral_8cpp" local="no">ql/methods/finitedifferences/utilities/fdmmesherintegral.cpp</includedby>
    <includedby refid="hestonslvfdmmodel_8cpp" local="no">ql/models/equity/hestonslvfdmmodel.cpp</includedby>
    <includedby refid="fdblackscholesasianengine_8cpp" local="no">ql/pricingengines/asian/fdblackscholesasianengine.cpp</includedby>
    <includedby refid="fdblackscholesbarrierengine_8cpp" local="no">ql/pricingengines/barrier/fdblackscholesbarrierengine.cpp</includedby>
    <includedby refid="fdblackscholesrebateengine_8cpp" local="no">ql/pricingengines/barrier/fdblackscholesrebateengine.cpp</includedby>
    <includedby refid="fdhestonbarrierengine_8cpp" local="no">ql/pricingengines/barrier/fdhestonbarrierengine.cpp</includedby>
    <includedby refid="fdhestondoublebarrierengine_8cpp" local="no">ql/pricingengines/barrier/fdhestondoublebarrierengine.cpp</includedby>
    <includedby refid="fdhestonrebateengine_8cpp" local="no">ql/pricingengines/barrier/fdhestonrebateengine.cpp</includedby>
    <includedby refid="fd2dblackscholesvanillaengine_8cpp" local="no">ql/pricingengines/basket/fd2dblackscholesvanillaengine.cpp</includedby>
    <includedby refid="fdg2swaptionengine_8cpp" local="no">ql/pricingengines/swaption/fdg2swaptionengine.cpp</includedby>
    <includedby refid="fdhullwhiteswaptionengine_8cpp" local="no">ql/pricingengines/swaption/fdhullwhiteswaptionengine.cpp</includedby>
    <includedby refid="fdblackscholesvanillaengine_8cpp" local="no">ql/pricingengines/vanilla/fdblackscholesvanillaengine.cpp</includedby>
    <includedby refid="fdcevvanillaengine_8cpp" local="no">ql/pricingengines/vanilla/fdcevvanillaengine.cpp</includedby>
    <includedby refid="fdcirvanillaengine_8cpp" local="no">ql/pricingengines/vanilla/fdcirvanillaengine.cpp</includedby>
    <includedby refid="fdhestonhullwhitevanillaengine_8cpp" local="no">ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.cpp</includedby>
    <includedby refid="fdhestonvanillaengine_8cpp" local="no">ql/pricingengines/vanilla/fdhestonvanillaengine.cpp</includedby>
    <includedby refid="fdsimplebsswingengine_8cpp" local="no">ql/pricingengines/vanilla/fdsimplebsswingengine.cpp</includedby>
    <includedby refid="andreasenhugevolatilityinterpl_8cpp" local="no">ql/termstructures/volatility/equityfx/andreasenhugevolatilityinterpl.cpp</includedby>
    <incdepgraph>
      <node id="7">
        <label>ql/config.ansi.hpp</label>
        <link refid="config_8ansi_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>ql/mathconstants.hpp</label>
        <link refid="mathconstants_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ql/methods/finitedifferences/operators/fdmlinearopiterator.hpp</label>
        <link refid="fdmlinearopiterator_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>ql/methods/finitedifferences/operators/fdmlinearoplayout.hpp</label>
        <link refid="fdmlinearoplayout_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ql/qldefines.hpp</label>
        <link refid="qldefines_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ql/types.hpp</label>
        <link refid="types_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ql/userconfig.hpp</label>
        <link refid="userconfig_8hpp_source"/>
      </node>
      <node id="5">
        <label>boost/config.hpp</label>
      </node>
      <node id="6">
        <label>boost/version.hpp</label>
      </node>
      <node id="10">
        <label>cmath</label>
      </node>
      <node id="12">
        <label>cstddef</label>
      </node>
      <node id="16">
        <label>functional</label>
      </node>
      <node id="11">
        <label>limits</label>
      </node>
      <node id="13">
        <label>numeric</label>
      </node>
      <node id="14">
        <label>utility</label>
      </node>
      <node id="15">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5">
        <label>ql/experimental/all.hpp</label>
        <link refid="experimental_2all_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ql/experimental/finitedifferences/all.hpp</label>
        <link refid="experimental_2finitedifferences_2all_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ql/experimental/finitedifferences/dynprogvppintrinsicvalueengine.cpp</label>
        <link refid="dynprogvppintrinsicvalueengine_8cpp"/>
      </node>
      <node id="3">
        <label>ql/experimental/finitedifferences/fdmdupire1dop.hpp</label>
        <link refid="fdmdupire1dop_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>ql/experimental/finitedifferences/fdmextendedornsteinuhlenbeckop.cpp</label>
        <link refid="fdmextendedornsteinuhlenbeckop_8cpp"/>
      </node>
      <node id="27">
        <label>ql/experimental/finitedifferences/fdmklugeextousolver.hpp</label>
        <link refid="fdmklugeextousolver_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.cpp</label>
        <link refid="fdmvppstartlimitstepcondition_8cpp"/>
      </node>
      <node id="9">
        <label>ql/experimental/finitedifferences/fdmvppstepcondition.cpp</label>
        <link refid="fdmvppstepcondition_8cpp"/>
      </node>
      <node id="10">
        <label>ql/experimental/finitedifferences/fdsimpleextoujumpswingengine.cpp</label>
        <link refid="fdsimpleextoujumpswingengine_8cpp"/>
      </node>
      <node id="11">
        <label>ql/experimental/finitedifferences/fdsimpleextoustorageengine.cpp</label>
        <link refid="fdsimpleextoustorageengine_8cpp"/>
      </node>
      <node id="14">
        <label>ql/methods/all.hpp</label>
        <link refid="methods_2all_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>ql/methods/finitedifferences/all.hpp</label>
        <link refid="methods_2finitedifferences_2all_8hpp_source"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>ql/methods/finitedifferences/operators/all.hpp</label>
        <link refid="methods_2finitedifferences_2operators_2all_8hpp_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>ql/methods/finitedifferences/operators/fdm2dblackscholesop.cpp</label>
        <link refid="fdm2dblackscholesop_8cpp"/>
      </node>
      <node id="16">
        <label>ql/methods/finitedifferences/operators/fdmbatesop.cpp</label>
        <link refid="fdmbatesop_8cpp"/>
      </node>
      <node id="17">
        <label>ql/methods/finitedifferences/operators/fdmcevop.cpp</label>
        <link refid="fdmcevop_8cpp"/>
      </node>
      <node id="18">
        <label>ql/methods/finitedifferences/operators/fdmg2op.cpp</label>
        <link refid="fdmg2op_8cpp"/>
      </node>
      <node id="19">
        <label>ql/methods/finitedifferences/operators/fdmhestonfwdop.cpp</label>
        <link refid="fdmhestonfwdop_8cpp"/>
      </node>
      <node id="20">
        <label>ql/methods/finitedifferences/operators/fdmhullwhiteop.cpp</label>
        <link refid="fdmhullwhiteop_8cpp"/>
      </node>
      <node id="1">
        <label>ql/methods/finitedifferences/operators/fdmlinearoplayout.hpp</label>
        <link refid="fdmlinearoplayout_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>ql/methods/finitedifferences/operators/fdmornsteinuhlenbeckop.cpp</label>
        <link refid="fdmornsteinuhlenbeckop_8cpp"/>
      </node>
      <node id="22">
        <label>ql/methods/finitedifferences/operators/fdmsabrop.cpp</label>
        <link refid="fdmsabrop_8cpp"/>
      </node>
      <node id="23">
        <label>ql/methods/finitedifferences/operators/fdmsquarerootfwdop.cpp</label>
        <link refid="fdmsquarerootfwdop_8cpp"/>
      </node>
      <node id="24">
        <label>ql/methods/finitedifferences/operators/fdmwienerop.cpp</label>
        <link refid="fdmwienerop_8cpp"/>
      </node>
      <node id="25">
        <label>ql/methods/finitedifferences/operators/nthorderderivativeop.cpp</label>
        <link refid="nthorderderivativeop_8cpp"/>
      </node>
      <node id="28">
        <label>ql/methods/finitedifferences/solvers/all.hpp</label>
        <link refid="methods_2finitedifferences_2solvers_2all_8hpp_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>ql/methods/finitedifferences/solvers/fdmndimsolver.hpp</label>
        <link refid="fdmndimsolver_8hpp"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>ql/methods/finitedifferences/stepconditions/fdmarithmeticaveragecondition.cpp</label>
        <link refid="fdmarithmeticaveragecondition_8cpp"/>
      </node>
      <node id="30">
        <label>ql/methods/finitedifferences/utilities/fdminnervaluecalculator.cpp</label>
        <link refid="fdminnervaluecalculator_8cpp"/>
      </node>
      <node id="31">
        <label>ql/pricingengines/vanilla/fdsimplebsswingengine.cpp</label>
        <link refid="fdsimplebsswingengine_8cpp"/>
      </node>
      <node id="6">
        <label>ql/quantlib.hpp</label>
        <link refid="quantlib_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_quant_lib_1_1_fdm_linear_op_layout" prot="public">QuantLib::FdmLinearOpLayout</innerclass>
    <innernamespace refid="namespace_quant_lib">QuantLib</innernamespace>
    <briefdescription>
<para>memory layout of a fdm linear operator </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>mode:<sp/>c++;<sp/>tab-width:<sp/>4;<sp/>indent-tabs-mode:<sp/>nil;<sp/>c-basic-offset:<sp/>4<sp/>-*-<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>Copyright<sp/>(C)<sp/>2008<sp/>Andreas<sp/>Gaida</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>Copyright<sp/>(C)<sp/>2008<sp/>Ralph<sp/>Schreyer</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>Copyright<sp/>(C)<sp/>2008<sp/>Klaus<sp/>Spanderen</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>QuantLib,<sp/>a<sp/>free-software/open-source<sp/>library</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>for<sp/>financial<sp/>quantitative<sp/>analysts<sp/>and<sp/>developers<sp/>-<sp/>http://quantlib.org/</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>QuantLib<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/>it</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>QuantLib<sp/>license.<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>copy<sp/>of<sp/>the<sp/>license<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>please<sp/>email</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>&lt;quantlib-dev@lists.sf.net&gt;.<sp/>The<sp/>license<sp/>is<sp/>also<sp/>available<sp/>online<sp/>at</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>&lt;http://quantlib.org/license.shtml&gt;.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"></highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/>but<sp/>WITHOUT</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>license<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="20"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>quantlib_linear_op_layout_hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>quantlib_linear_op_layout_hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="fdmlinearopiterator_8hpp" kindref="compound">ql/methods/finitedifferences/operators/fdmlinearopiterator.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_quant_lib" kindref="compound">QuantLib</ref><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="class_quant_lib_1_1_fdm_linear_op_layout" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">FdmLinearOpLayout<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>FdmLinearOpLayout(std::vector&lt;Size&gt;<sp/>dim)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>dim_(std::move(dim)),<sp/>spacing_(dim_.size())<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spacing_[0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::partial_sum(dim_.begin(),<sp/>dim_.end()-1,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spacing_.begin()+1,<sp/>std::multiplies&lt;&gt;());</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_<sp/>=<sp/>spacing_.back()*dim_.back();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_quant_lib_1_1_fdm_linear_op_iterator" kindref="compound">FdmLinearOpIterator</ref><sp/>begin()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_quant_lib_1_1_fdm_linear_op_iterator" kindref="compound">FdmLinearOpIterator</ref>(dim_);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_quant_lib_1_1_fdm_linear_op_iterator" kindref="compound">FdmLinearOpIterator</ref><sp/>end()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_quant_lib_1_1_fdm_linear_op_iterator" kindref="compound">FdmLinearOpIterator</ref>(size_);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Size&gt;&amp;<sp/>dim()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dim_;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Size&gt;&amp;<sp/>spacing()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>spacing_;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>size()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size_;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>index(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Size&gt;&amp;<sp/>coordinates)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::inner_product(coordinates.begin(),</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coordinates.end(),</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spacing_.begin(),<sp/><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref>(0));</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>neighbourhood(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_quant_lib_1_1_fdm_linear_op_iterator" kindref="compound">FdmLinearOpIterator</ref>&amp;<sp/>iterator,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i,<sp/><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref><sp/>offset)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>neighbourhood(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_quant_lib_1_1_fdm_linear_op_iterator" kindref="compound">FdmLinearOpIterator</ref>&amp;<sp/>iterator,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i1,<sp/><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref><sp/>offset1,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i2,<sp/><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref><sp/>offset2)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>smart<sp/>but<sp/>sometimes<sp/>too<sp/>slow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_quant_lib_1_1_fdm_linear_op_iterator" kindref="compound">FdmLinearOpIterator</ref><sp/>iter_neighbourhood(</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_quant_lib_1_1_fdm_linear_op_iterator" kindref="compound">FdmLinearOpIterator</ref>&amp;<sp/>iterator,<sp/><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>i,<sp/><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref><sp/>offset)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>size_;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;Size&gt;<sp/>dim_,<sp/>spacing_;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="ql/methods/finitedifferences/operators/fdmlinearoplayout.hpp"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_inflation_coupon_pricer" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::InflationCouponPricer</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_observer" prot="public" virt="virtual">QuantLib::Observer</basecompoundref>
    <basecompoundref refid="class_quant_lib_1_1_observable" prot="public" virt="virtual">QuantLib::Observable</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_c_p_i_coupon_pricer" prot="public" virt="non-virtual">QuantLib::CPICouponPricer</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_yo_y_inflation_coupon_pricer" prot="public" virt="non-virtual">QuantLib::YoYInflationCouponPricer</derivedcompoundref>
    <includes refid="inflationcouponpricer_8hpp" local="no">inflationcouponpricer.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Observer interface</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_inflation_coupon_pricer_1ad6a075b8093389d24d190bd6fc34414e" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::InflationCouponPricer::paymentDate_</definition>
        <argsstring></argsstring>
        <name>paymentDate_</name>
        <qualifiedname>QuantLib::InflationCouponPricer::paymentDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/inflationcouponpricer.hpp" line="76" column="12" bodyfile="ql/cashflows/inflationcouponpricer.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_coupon_pricer_1ab43f3f67d8ed153cd7fbe8c7aff26596" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::InflationCouponPricer::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <qualifiedname>QuantLib::InflationCouponPricer::update</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_observer_1a07905c55dca858470fcf4a1aea0005aa">update</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must be implemented in derived classes. An instance of Observer does not call this method directly: instead, it will be called by the observables the instance registered with when they need to notify any changes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/inflationcouponpricer.hpp" line="73" column="12" bodyfile="ql/cashflows/inflationcouponpricer.hpp" bodystart="73" bodyend="73"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_coupon_pricer_1a4d5612d1460f0d2d366684376dfbc37f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::InflationCouponPricer::swapletPrice</definition>
        <argsstring>() const =0</argsstring>
        <name>swapletPrice</name>
        <qualifiedname>QuantLib::InflationCouponPricer::swapletPrice</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_c_p_i_coupon_pricer_1a454875835f93bf42d8ad8f20db088a59">swapletPrice</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_yo_y_inflation_coupon_pricer_1ae9ebfd42dc14b3ccf80a86b3d36c14b9">swapletPrice</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/inflationcouponpricer.hpp" line="62" column="20"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_coupon_pricer_1a6b12e01e1138b1377822636664d6196c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>virtual Rate QuantLib::InflationCouponPricer::swapletRate</definition>
        <argsstring>() const =0</argsstring>
        <name>swapletRate</name>
        <qualifiedname>QuantLib::InflationCouponPricer::swapletRate</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_c_p_i_coupon_pricer_1a4eb11dc6e2536ec260293d85c4118aaa">swapletRate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_yo_y_inflation_coupon_pricer_1a5834c87ff4638272a5d2660fa0f9a67a">swapletRate</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/inflationcouponpricer.hpp" line="63" column="20"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_coupon_pricer_1ab0da8f505db2f6b08b1e41c5b6aa55f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::InflationCouponPricer::capletPrice</definition>
        <argsstring>(Rate effectiveCap) const =0</argsstring>
        <name>capletPrice</name>
        <qualifiedname>QuantLib::InflationCouponPricer::capletPrice</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_c_p_i_coupon_pricer_1a8f96df8a79bdea87c480bae4d0a52a01">capletPrice</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_yo_y_inflation_coupon_pricer_1af2d412e5ca34b2991dd0666a2f6e6bd3">capletPrice</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>effectiveCap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/inflationcouponpricer.hpp" line="64" column="20"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_coupon_pricer_1a84b05cce2f2a8a6b82833e6d6d3bfed7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>virtual Rate QuantLib::InflationCouponPricer::capletRate</definition>
        <argsstring>(Rate effectiveCap) const =0</argsstring>
        <name>capletRate</name>
        <qualifiedname>QuantLib::InflationCouponPricer::capletRate</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_c_p_i_coupon_pricer_1ae4377137d1f3237915af165b56710f4e">capletRate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_yo_y_inflation_coupon_pricer_1a50f66128b9efd39ca1fba481fef3e26b">capletRate</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>effectiveCap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/inflationcouponpricer.hpp" line="65" column="20"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_coupon_pricer_1a5db70c162478c5a988ae76c64a3c147f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::InflationCouponPricer::floorletPrice</definition>
        <argsstring>(Rate effectiveFloor) const =0</argsstring>
        <name>floorletPrice</name>
        <qualifiedname>QuantLib::InflationCouponPricer::floorletPrice</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_c_p_i_coupon_pricer_1acc8ed40b0ac01f63196a5335542e6000">floorletPrice</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_yo_y_inflation_coupon_pricer_1a1f3cde629504e0f9ba40eb6394325b2c">floorletPrice</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>effectiveFloor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/inflationcouponpricer.hpp" line="66" column="20"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_coupon_pricer_1a435c64d6ac9ba87c74da68f90b35f2b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>virtual Rate QuantLib::InflationCouponPricer::floorletRate</definition>
        <argsstring>(Rate effectiveFloor) const =0</argsstring>
        <name>floorletRate</name>
        <qualifiedname>QuantLib::InflationCouponPricer::floorletRate</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_c_p_i_coupon_pricer_1af23dbd38082fb244bd445e6cee9a0d47">floorletRate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_yo_y_inflation_coupon_pricer_1af3c22f7fb501bd9f045b7e2c595956f4">floorletRate</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>effectiveFloor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/inflationcouponpricer.hpp" line="67" column="20"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_coupon_pricer_1aec53ad18e3758d3a26452696cd517036" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void QuantLib::InflationCouponPricer::initialize</definition>
        <argsstring>(const InflationCoupon &amp;)=0</argsstring>
        <name>initialize</name>
        <qualifiedname>QuantLib::InflationCouponPricer::initialize</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_c_p_i_coupon_pricer_1a0f09ad43b40e406f409d6ebe8c5639ab">initialize</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_yo_y_inflation_coupon_pricer_1a4dd8513038113e7f5d9a05a3d08b30d4">initialize</reimplementedby>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_inflation_coupon" kindref="compound">InflationCoupon</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/inflationcouponpricer.hpp" line="68" column="20"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_coupon_pricer_1a402759d5d97ceb15ba0574d69d130f93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QL_DEPRECATED_DISABLE_WARNING</type>
        <definition>QL_DEPRECATED_DISABLE_WARNING QuantLib::InflationCouponPricer::InflationCouponPricer</definition>
        <argsstring>()=default</argsstring>
        <name>InflationCouponPricer</name>
        <qualifiedname>QuantLib::InflationCouponPricer::InflationCouponPricer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/inflationcouponpricer.hpp" line="57" column="7"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_inflation_coupon_pricer_1afba8764f59e94081445765ab14f86ee3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::InflationCouponPricer::~InflationCouponPricer</definition>
        <argsstring>() override=default</argsstring>
        <name>~InflationCouponPricer</name>
        <qualifiedname>QuantLib::InflationCouponPricer::~InflationCouponPricer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/inflationcouponpricer.hpp" line="58" column="7"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Base inflation-coupon pricer. </para>
    </briefdescription>
    <detaileddescription>
<para>The main reason we can&apos;t use <ref refid="class_quant_lib_1_1_floating_rate_coupon_pricer" kindref="compound">FloatingRateCouponPricer</ref> as the base is that it takes a <ref refid="class_quant_lib_1_1_floating_rate_coupon" kindref="compound">FloatingRateCoupon</ref> which takes an <ref refid="class_quant_lib_1_1_interest_rate_index" kindref="compound">InterestRateIndex</ref> and we need an inflation index (these are lagged).</para>
<para>The basic inflation-specific thing that the pricer has to do is deal with different lags in the index and the option e.g. the option could look 3 months back and the index 2.</para>
<para>We add the requirement that pricers do inverseCap/Floor-lets. These are cap/floor-lets as usually defined, i.e. pay out if underlying is above/below a strike. The non-inverse (usual) versions are from a coupon point of view (a capped coupon has a maximum at the strike).</para>
<para>We add the inverse prices so that conventional caps can be priced simply. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="6">
        <label>QuantLib::BachelierYoYInflationCouponPricer</label>
        <link refid="class_quant_lib_1_1_bachelier_yo_y_inflation_coupon_pricer"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::BlackYoYInflationCouponPricer</label>
        <link refid="class_quant_lib_1_1_black_yo_y_inflation_coupon_pricer"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::CPICouponPricer</label>
        <link refid="class_quant_lib_1_1_c_p_i_coupon_pricer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::InflationCouponPricer</label>
        <link refid="class_quant_lib_1_1_inflation_coupon_pricer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="2">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="8">
        <label>QuantLib::UnitDisplacedBlackYoYInflationCouponPricer</label>
        <link refid="class_quant_lib_1_1_unit_displaced_black_yo_y_inflation_coupon_pricer"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::YoYInflationCouponPricer</label>
        <link refid="class_quant_lib_1_1_yo_y_inflation_coupon_pricer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="1">
        <label>QuantLib::InflationCouponPricer</label>
        <link refid="class_quant_lib_1_1_inflation_coupon_pricer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>paymentDate_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="2">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </collaborationgraph>
    <location file="ql/cashflows/inflationcouponpricer.hpp" line="53" column="5" bodyfile="ql/cashflows/inflationcouponpricer.hpp" bodystart="54" bodyend="77"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_inflation_coupon_pricer_1ab0da8f505db2f6b08b1e41c5b6aa55f5" prot="public" virt="pure-virtual"><scope>QuantLib::InflationCouponPricer</scope><name>capletPrice</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_pricer_1a84b05cce2f2a8a6b82833e6d6d3bfed7" prot="public" virt="pure-virtual"><scope>QuantLib::InflationCouponPricer</scope><name>capletRate</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::InflationCouponPricer</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_pricer_1a5db70c162478c5a988ae76c64a3c147f" prot="public" virt="pure-virtual"><scope>QuantLib::InflationCouponPricer</scope><name>floorletPrice</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_pricer_1a435c64d6ac9ba87c74da68f90b35f2b6" prot="public" virt="pure-virtual"><scope>QuantLib::InflationCouponPricer</scope><name>floorletRate</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_pricer_1a402759d5d97ceb15ba0574d69d130f93" prot="public" virt="non-virtual"><scope>QuantLib::InflationCouponPricer</scope><name>InflationCouponPricer</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_pricer_1aec53ad18e3758d3a26452696cd517036" prot="public" virt="pure-virtual"><scope>QuantLib::InflationCouponPricer</scope><name>initialize</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::InflationCouponPricer</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::InflationCouponPricer</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::InflationCouponPricer</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::InflationCouponPricer</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::InflationCouponPricer</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::InflationCouponPricer</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::InflationCouponPricer</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::InflationCouponPricer</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::InflationCouponPricer</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::InflationCouponPricer</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_pricer_1ad6a075b8093389d24d190bd6fc34414e" prot="protected" virt="non-virtual"><scope>QuantLib::InflationCouponPricer</scope><name>paymentDate_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::InflationCouponPricer</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::InflationCouponPricer</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_pricer_1a4d5612d1460f0d2d366684376dfbc37f" prot="public" virt="pure-virtual"><scope>QuantLib::InflationCouponPricer</scope><name>swapletPrice</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_pricer_1a6b12e01e1138b1377822636664d6196c" prot="public" virt="pure-virtual"><scope>QuantLib::InflationCouponPricer</scope><name>swapletRate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::InflationCouponPricer</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::InflationCouponPricer</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_pricer_1ab43f3f67d8ed153cd7fbe8c7aff26596" prot="public" virt="virtual"><scope>QuantLib::InflationCouponPricer</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_pricer_1afba8764f59e94081445765ab14f86ee3" prot="public" virt="non-virtual"><scope>QuantLib::InflationCouponPricer</scope><name>~InflationCouponPricer</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::InflationCouponPricer</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::InflationCouponPricer</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

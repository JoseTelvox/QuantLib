<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_frobenius_cost_function" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::FrobeniusCostFunction</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_cost_function" prot="public" virt="non-virtual">QuantLib::CostFunction</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_frobenius_cost_function_1aa162b6258450d2fb2855c1d89ded8d62" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::FrobeniusCostFunction::target_</definition>
        <argsstring></argsstring>
        <name>target_</name>
        <qualifiedname>QuantLib::FrobeniusCostFunction::target_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/tapcorrelations.hpp" line="99" column="16" bodyfile="ql/math/matrixutilities/tapcorrelations.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_frobenius_cost_function_1afefb0cc8b999b42814b25988639ed2d2" prot="private" static="no" mutable="no">
        <type>std::function&lt; <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref>(const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;, <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref>, <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref>)&gt;</type>
        <definition>std::function&lt;Matrix(const Array&amp;, Size, Size)&gt; QuantLib::FrobeniusCostFunction::f_</definition>
        <argsstring></argsstring>
        <name>f_</name>
        <qualifiedname>QuantLib::FrobeniusCostFunction::f_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/tapcorrelations.hpp" line="100" column="23" bodyfile="ql/math/matrixutilities/tapcorrelations.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_frobenius_cost_function_1a047f7ba6b25dd2247b97b666c2294eb2" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::FrobeniusCostFunction::matrixSize_</definition>
        <argsstring></argsstring>
        <name>matrixSize_</name>
        <qualifiedname>QuantLib::FrobeniusCostFunction::matrixSize_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/tapcorrelations.hpp" line="101" column="14" bodyfile="ql/math/matrixutilities/tapcorrelations.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_frobenius_cost_function_1a36421bc9641a4875c69bd1d87463a0a7" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::FrobeniusCostFunction::rank_</definition>
        <argsstring></argsstring>
        <name>rank_</name>
        <qualifiedname>QuantLib::FrobeniusCostFunction::rank_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/tapcorrelations.hpp" line="102" column="14" bodyfile="ql/math/matrixutilities/tapcorrelations.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_frobenius_cost_function_1a6f44152521d9d6973c1d91ea44e0e7c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FrobeniusCostFunction::FrobeniusCostFunction</definition>
        <argsstring>(Matrix target, std::function&lt; Matrix(const Array &amp;, Size, Size)&gt; f, Size matrixSize, Size rank)</argsstring>
        <name>FrobeniusCostFunction</name>
        <qualifiedname>QuantLib::FrobeniusCostFunction::FrobeniusCostFunction</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
          <declname>target</declname>
        </param>
        <param>
          <type>std::function&lt; <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref>(const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;, <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref>, <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref>)&gt;</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>matrixSize</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>rank</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/tapcorrelations.hpp" line="90" column="9" bodyfile="ql/math/matrixutilities/tapcorrelations.hpp" bodystart="90" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_frobenius_cost_function_1a7cb47cf2c965c590008263ce0f8d8190" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::FrobeniusCostFunction::value</definition>
        <argsstring>(const Array &amp;x) const override</argsstring>
        <name>value</name>
        <qualifiedname>QuantLib::FrobeniusCostFunction::value</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_cost_function_1a2255742e3e05477d773cdf3705411661">value</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>method to overload to compute the cost function value in x </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/tapcorrelations.hpp" line="95" column="14" bodyfile="ql/math/matrixutilities/tapcorrelations.cpp" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_frobenius_cost_function_1a1d60641faf02e17493da9d62ed16f040" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FrobeniusCostFunction::values</definition>
        <argsstring>(const Array &amp;x) const override</argsstring>
        <name>values</name>
        <qualifiedname>QuantLib::FrobeniusCostFunction::values</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_cost_function_1ab43da17891b724c8352c01c2478d04db">values</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>method to overload to compute the cost function values in x </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/tapcorrelations.hpp" line="96" column="15" bodyfile="ql/math/matrixutilities/tapcorrelations.cpp" bodystart="131" bodyend="144"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::CostFunction</label>
        <link refid="class_quant_lib_1_1_cost_function"/>
      </node>
      <node id="1">
        <label>QuantLib::FrobeniusCostFunction</label>
        <link refid="class_quant_lib_1_1_frobenius_cost_function"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::CostFunction</label>
        <link refid="class_quant_lib_1_1_cost_function"/>
      </node>
      <node id="1">
        <label>QuantLib::FrobeniusCostFunction</label>
        <link refid="class_quant_lib_1_1_frobenius_cost_function"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/math/matrixutilities/tapcorrelations.hpp" line="88" column="5" bodyfile="ql/math/matrixutilities/tapcorrelations.hpp" bodystart="88" bodyend="103"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_frobenius_cost_function_1afefb0cc8b999b42814b25988639ed2d2" prot="private" virt="non-virtual"><scope>QuantLib::FrobeniusCostFunction</scope><name>f_</name></member>
      <member refid="class_quant_lib_1_1_cost_function_1a0dc9070b6d79cf91aef8ba48e2808263" prot="public" virt="virtual"><scope>QuantLib::FrobeniusCostFunction</scope><name>finiteDifferenceEpsilon</name></member>
      <member refid="class_quant_lib_1_1_frobenius_cost_function_1a6f44152521d9d6973c1d91ea44e0e7c5" prot="public" virt="non-virtual"><scope>QuantLib::FrobeniusCostFunction</scope><name>FrobeniusCostFunction</name></member>
      <member refid="class_quant_lib_1_1_cost_function_1aad44fa61459514a8e55208d50716698b" prot="public" virt="virtual"><scope>QuantLib::FrobeniusCostFunction</scope><name>gradient</name></member>
      <member refid="class_quant_lib_1_1_cost_function_1a5bf2d8163ed5dea7ec811377e2835eca" prot="public" virt="virtual"><scope>QuantLib::FrobeniusCostFunction</scope><name>jacobian</name></member>
      <member refid="class_quant_lib_1_1_frobenius_cost_function_1a047f7ba6b25dd2247b97b666c2294eb2" prot="private" virt="non-virtual"><scope>QuantLib::FrobeniusCostFunction</scope><name>matrixSize_</name></member>
      <member refid="class_quant_lib_1_1_frobenius_cost_function_1a36421bc9641a4875c69bd1d87463a0a7" prot="private" virt="non-virtual"><scope>QuantLib::FrobeniusCostFunction</scope><name>rank_</name></member>
      <member refid="class_quant_lib_1_1_frobenius_cost_function_1aa162b6258450d2fb2855c1d89ded8d62" prot="private" virt="non-virtual"><scope>QuantLib::FrobeniusCostFunction</scope><name>target_</name></member>
      <member refid="class_quant_lib_1_1_frobenius_cost_function_1a7cb47cf2c965c590008263ce0f8d8190" prot="public" virt="virtual"><scope>QuantLib::FrobeniusCostFunction</scope><name>value</name></member>
      <member refid="class_quant_lib_1_1_cost_function_1ae0c8902d6ce2e535237ae4370956d161" prot="public" virt="virtual"><scope>QuantLib::FrobeniusCostFunction</scope><name>valueAndGradient</name></member>
      <member refid="class_quant_lib_1_1_frobenius_cost_function_1a1d60641faf02e17493da9d62ed16f040" prot="public" virt="virtual"><scope>QuantLib::FrobeniusCostFunction</scope><name>values</name></member>
      <member refid="class_quant_lib_1_1_cost_function_1a1aa00768b27a3446404b3029660c2e68" prot="public" virt="virtual"><scope>QuantLib::FrobeniusCostFunction</scope><name>valuesAndJacobian</name></member>
      <member refid="class_quant_lib_1_1_cost_function_1a04929e863b85bc26f50ad9052ba7ee73" prot="public" virt="virtual"><scope>QuantLib::FrobeniusCostFunction</scope><name>~CostFunction</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

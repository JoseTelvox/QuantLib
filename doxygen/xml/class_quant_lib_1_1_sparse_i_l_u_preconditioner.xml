<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_sparse_i_l_u_preconditioner" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::SparseILUPreconditioner</compoundname>
    <includes refid="sparseilupreconditioner_8hpp" local="no">sparseilupreconditioner.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_sparse_i_l_u_preconditioner_1a167b16a1d952efc749d8e87bf234b1e7" prot="private" static="no" mutable="no">
        <type>SparseMatrix</type>
        <definition>SparseMatrix QuantLib::SparseILUPreconditioner::L_</definition>
        <argsstring></argsstring>
        <name>L_</name>
        <qualifiedname>QuantLib::SparseILUPreconditioner::L_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/sparseilupreconditioner.hpp" line="46" column="22" bodyfile="ql/math/matrixutilities/sparseilupreconditioner.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_sparse_i_l_u_preconditioner_1a01ab354166846ad1876151bd5f322bf2" prot="private" static="no" mutable="no">
        <type>SparseMatrix</type>
        <definition>SparseMatrix QuantLib::SparseILUPreconditioner::U_</definition>
        <argsstring></argsstring>
        <name>U_</name>
        <qualifiedname>QuantLib::SparseILUPreconditioner::U_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/sparseilupreconditioner.hpp" line="46" column="25" bodyfile="ql/math/matrixutilities/sparseilupreconditioner.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_sparse_i_l_u_preconditioner_1aa6622ce2abc08cd5a0baf01091d7b8f3" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &gt;</type>
        <definition>std::vector&lt;Size&gt; QuantLib::SparseILUPreconditioner::lBands_</definition>
        <argsstring></argsstring>
        <name>lBands_</name>
        <qualifiedname>QuantLib::SparseILUPreconditioner::lBands_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/sparseilupreconditioner.hpp" line="47" column="21" bodyfile="ql/math/matrixutilities/sparseilupreconditioner.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_sparse_i_l_u_preconditioner_1acee298b1b3e3b468a0a2567ea428839a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &gt;</type>
        <definition>std::vector&lt;Size&gt; QuantLib::SparseILUPreconditioner::uBands_</definition>
        <argsstring></argsstring>
        <name>uBands_</name>
        <qualifiedname>QuantLib::SparseILUPreconditioner::uBands_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/sparseilupreconditioner.hpp" line="47" column="29" bodyfile="ql/math/matrixutilities/sparseilupreconditioner.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_sparse_i_l_u_preconditioner_1aa669858e0dc50be3f9a4d63ae238d8fe" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::SparseILUPreconditioner::SparseILUPreconditioner</definition>
        <argsstring>(const SparseMatrix &amp;A, Integer lfil=1)</argsstring>
        <name>SparseILUPreconditioner</name>
        <qualifiedname>QuantLib::SparseILUPreconditioner::SparseILUPreconditioner</qualifiedname>
        <param>
          <type>const SparseMatrix &amp;</type>
          <declname>A</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
          <declname>lfil</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/sparseilupreconditioner.hpp" line="38" column="18" bodyfile="ql/math/matrixutilities/sparseilupreconditioner.cpp" bodystart="29" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_sparse_i_l_u_preconditioner_1ab723031aa9ef5300379113b63baf830c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const SparseMatrix &amp;</type>
        <definition>const SparseMatrix &amp; QuantLib::SparseILUPreconditioner::L</definition>
        <argsstring>() const</argsstring>
        <name>L</name>
        <qualifiedname>QuantLib::SparseILUPreconditioner::L</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/sparseilupreconditioner.hpp" line="40" column="28" bodyfile="ql/math/matrixutilities/sparseilupreconditioner.cpp" bodystart="148" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_sparse_i_l_u_preconditioner_1a04235c437ed53e8e60630dec1f5c1229" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const SparseMatrix &amp;</type>
        <definition>const SparseMatrix &amp; QuantLib::SparseILUPreconditioner::U</definition>
        <argsstring>() const</argsstring>
        <name>U</name>
        <qualifiedname>QuantLib::SparseILUPreconditioner::U</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/sparseilupreconditioner.hpp" line="41" column="28" bodyfile="ql/math/matrixutilities/sparseilupreconditioner.cpp" bodystart="152" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_sparse_i_l_u_preconditioner_1aea0b4f95f009c0b228fb26e0508c395b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::SparseILUPreconditioner::apply</definition>
        <argsstring>(const Array &amp;b) const</argsstring>
        <name>apply</name>
        <qualifiedname>QuantLib::SparseILUPreconditioner::apply</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/sparseilupreconditioner.hpp" line="43" column="15" bodyfile="ql/math/matrixutilities/sparseilupreconditioner.cpp" bodystart="156" bodyend="158"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_sparse_i_l_u_preconditioner_1a8e36f2abe0f9626413bb7b403e6a925f" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::SparseILUPreconditioner::forwardSolve</definition>
        <argsstring>(const Array &amp;b) const</argsstring>
        <name>forwardSolve</name>
        <qualifiedname>QuantLib::SparseILUPreconditioner::forwardSolve</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/sparseilupreconditioner.hpp" line="49" column="15" bodyfile="ql/math/matrixutilities/sparseilupreconditioner.cpp" bodystart="160" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_sparse_i_l_u_preconditioner_1afb4e3f89cfa85989de9ea19bfef2a3e1" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::SparseILUPreconditioner::backwardSolve</definition>
        <argsstring>(const Array &amp;y) const</argsstring>
        <name>backwardSolve</name>
        <qualifiedname>QuantLib::SparseILUPreconditioner::backwardSolve</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/sparseilupreconditioner.hpp" line="50" column="15" bodyfile="ql/math/matrixutilities/sparseilupreconditioner.cpp" bodystart="176" bodyend="187"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>References: Saad, Yousef. 1996, Iterative methods for sparse linear systems, <ulink url="http://www-users.cs.umn.edu/~saad/books.html">http://www-users.cs.umn.edu/~saad/books.html</ulink> </para>
    </detaileddescription>
    <location file="ql/math/matrixutilities/sparseilupreconditioner.hpp" line="36" column="5" bodyfile="ql/math/matrixutilities/sparseilupreconditioner.hpp" bodystart="36" bodyend="51"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_sparse_i_l_u_preconditioner_1aea0b4f95f009c0b228fb26e0508c395b" prot="public" virt="non-virtual"><scope>QuantLib::SparseILUPreconditioner</scope><name>apply</name></member>
      <member refid="class_quant_lib_1_1_sparse_i_l_u_preconditioner_1afb4e3f89cfa85989de9ea19bfef2a3e1" prot="private" virt="non-virtual"><scope>QuantLib::SparseILUPreconditioner</scope><name>backwardSolve</name></member>
      <member refid="class_quant_lib_1_1_sparse_i_l_u_preconditioner_1a8e36f2abe0f9626413bb7b403e6a925f" prot="private" virt="non-virtual"><scope>QuantLib::SparseILUPreconditioner</scope><name>forwardSolve</name></member>
      <member refid="class_quant_lib_1_1_sparse_i_l_u_preconditioner_1ab723031aa9ef5300379113b63baf830c" prot="public" virt="non-virtual"><scope>QuantLib::SparseILUPreconditioner</scope><name>L</name></member>
      <member refid="class_quant_lib_1_1_sparse_i_l_u_preconditioner_1a167b16a1d952efc749d8e87bf234b1e7" prot="private" virt="non-virtual"><scope>QuantLib::SparseILUPreconditioner</scope><name>L_</name></member>
      <member refid="class_quant_lib_1_1_sparse_i_l_u_preconditioner_1aa6622ce2abc08cd5a0baf01091d7b8f3" prot="private" virt="non-virtual"><scope>QuantLib::SparseILUPreconditioner</scope><name>lBands_</name></member>
      <member refid="class_quant_lib_1_1_sparse_i_l_u_preconditioner_1aa669858e0dc50be3f9a4d63ae238d8fe" prot="public" virt="non-virtual"><scope>QuantLib::SparseILUPreconditioner</scope><name>SparseILUPreconditioner</name></member>
      <member refid="class_quant_lib_1_1_sparse_i_l_u_preconditioner_1a04235c437ed53e8e60630dec1f5c1229" prot="public" virt="non-virtual"><scope>QuantLib::SparseILUPreconditioner</scope><name>U</name></member>
      <member refid="class_quant_lib_1_1_sparse_i_l_u_preconditioner_1a01ab354166846ad1876151bd5f322bf2" prot="private" virt="non-virtual"><scope>QuantLib::SparseILUPreconditioner</scope><name>U_</name></member>
      <member refid="class_quant_lib_1_1_sparse_i_l_u_preconditioner_1acee298b1b3e3b468a0a2567ea428839a" prot="private" virt="non-virtual"><scope>QuantLib::SparseILUPreconditioner</scope><name>uBands_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_unit_of_measure_conversion_manager" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::UnitOfMeasureConversionManager</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_singleton" prot="public" virt="non-virtual">QuantLib::Singleton&lt; UnitOfMeasureConversionManager &gt;</basecompoundref>
    <includes refid="unitofmeasureconversionmanager_8hpp" local="no">unitofmeasureconversionmanager.hpp</includes>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_quant_lib_1_1_unit_of_measure_conversion_manager_1a60b603fb83417749c97671430b872ae9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Singleton&lt; UnitOfMeasureConversionManager &gt;</definition>
        <argsstring></argsstring>
        <name>Singleton&lt; UnitOfMeasureConversionManager &gt;</name>
        <qualifiedname>QuantLib::UnitOfMeasureConversionManager::Singleton&lt; UnitOfMeasureConversionManager &gt;</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_singleton" kindref="compound">Singleton</ref>&lt; <ref refid="class_quant_lib_1_1_unit_of_measure_conversion_manager" kindref="compound">UnitOfMeasureConversionManager</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/unitofmeasureconversionmanager.hpp" line="1" column="0" bodyfile="ql/experimental/commodities/unitofmeasureconversionmanager.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_unit_of_measure_conversion_manager_1a82350d11c3bf54c15eb73196f32e4cd7" prot="private" static="no" mutable="no">
        <type>std::list&lt; <ref refid="class_quant_lib_1_1_unit_of_measure_conversion" kindref="compound">UnitOfMeasureConversion</ref> &gt;</type>
        <definition>std::list&lt;UnitOfMeasureConversion&gt; QuantLib::UnitOfMeasureConversionManager::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <qualifiedname>QuantLib::UnitOfMeasureConversionManager::data_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/unitofmeasureconversionmanager.hpp" line="51" column="19" bodyfile="ql/experimental/commodities/unitofmeasureconversionmanager.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_unit_of_measure_conversion_manager_1a9987a1c75cc84b745fbd63067e513160" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_unit_of_measure_conversion" kindref="compound">UnitOfMeasureConversion</ref></type>
        <definition>UnitOfMeasureConversion QuantLib::UnitOfMeasureConversionManager::lookup</definition>
        <argsstring>(const CommodityType &amp;commodityType, const UnitOfMeasure &amp;, const UnitOfMeasure &amp;, UnitOfMeasureConversion::Type type=UnitOfMeasureConversion::Derived) const</argsstring>
        <name>lookup</name>
        <qualifiedname>QuantLib::UnitOfMeasureConversionManager::lookup</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_commodity_type" kindref="compound">CommodityType</ref> &amp;</type>
          <declname>commodityType</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_unit_of_measure" kindref="compound">UnitOfMeasure</ref> &amp;</type>
          <defname>source</defname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_unit_of_measure" kindref="compound">UnitOfMeasure</ref> &amp;</type>
          <defname>target</defname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_unit_of_measure_conversion_1a5c911acd096256df6a600c7d38d59e4a" kindref="member">UnitOfMeasureConversion::Type</ref></type>
          <declname>type</declname>
          <defval><ref refid="class_quant_lib_1_1_unit_of_measure_conversion_1a5c911acd096256df6a600c7d38d59e4aabab4ace6f137a2838bbcc5940f400112" kindref="member">UnitOfMeasureConversion::Derived</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/unitofmeasureconversionmanager.hpp" line="41" column="33" bodyfile="ql/experimental/commodities/unitofmeasureconversionmanager.cpp" bodystart="73" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_unit_of_measure_conversion_manager_1ae6b5d3959b337e5d18dc5f07b183c0d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::UnitOfMeasureConversionManager::add</definition>
        <argsstring>(const UnitOfMeasureConversion &amp;)</argsstring>
        <name>add</name>
        <qualifiedname>QuantLib::UnitOfMeasureConversionManager::add</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_unit_of_measure_conversion" kindref="compound">UnitOfMeasureConversion</ref> &amp;</type>
          <defname>c</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/unitofmeasureconversionmanager.hpp" line="47" column="14" bodyfile="ql/experimental/commodities/unitofmeasureconversionmanager.cpp" bodystart="61" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_unit_of_measure_conversion_manager_1af140057c07c0d4d835fa735f6eae4da2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::UnitOfMeasureConversionManager::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>QuantLib::UnitOfMeasureConversionManager::clear</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/unitofmeasureconversionmanager.hpp" line="48" column="14" bodyfile="ql/experimental/commodities/unitofmeasureconversionmanager.cpp" bodystart="101" bodyend="104"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_unit_of_measure_conversion_manager_1a6bda01c5f2a3f2455312ca4d960208b9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::UnitOfMeasureConversionManager::UnitOfMeasureConversionManager</definition>
        <argsstring>()</argsstring>
        <name>UnitOfMeasureConversionManager</name>
        <qualifiedname>QuantLib::UnitOfMeasureConversionManager::UnitOfMeasureConversionManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/unitofmeasureconversionmanager.hpp" line="52" column="9" bodyfile="ql/experimental/commodities/unitofmeasureconversionmanager.cpp" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_unit_of_measure_conversion_manager_1a13d8bee019d24b8928b2abd6746f6e89" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::UnitOfMeasureConversionManager::addKnownConversionFactors</definition>
        <argsstring>()</argsstring>
        <name>addKnownConversionFactors</name>
        <qualifiedname>QuantLib::UnitOfMeasureConversionManager::addKnownConversionFactors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/unitofmeasureconversionmanager.hpp" line="53" column="14" bodyfile="ql/experimental/commodities/unitofmeasureconversionmanager.cpp" bodystart="106" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_unit_of_measure_conversion_manager_1a30502637c29ceab70609f586c271cfe9" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_unit_of_measure_conversion" kindref="compound">UnitOfMeasureConversion</ref></type>
        <definition>UnitOfMeasureConversion QuantLib::UnitOfMeasureConversionManager::directLookup</definition>
        <argsstring>(const CommodityType &amp;commodityType, const UnitOfMeasure &amp;source, const UnitOfMeasure &amp;target) const</argsstring>
        <name>directLookup</name>
        <qualifiedname>QuantLib::UnitOfMeasureConversionManager::directLookup</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_commodity_type" kindref="compound">CommodityType</ref> &amp;</type>
          <declname>commodityType</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_unit_of_measure" kindref="compound">UnitOfMeasure</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_unit_of_measure" kindref="compound">UnitOfMeasure</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/unitofmeasureconversionmanager.hpp" line="54" column="33" bodyfile="ql/experimental/commodities/unitofmeasureconversionmanager.cpp" bodystart="137" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_unit_of_measure_conversion_manager_1a44827b9cefa344d09a327a886916d67e" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_unit_of_measure_conversion" kindref="compound">UnitOfMeasureConversion</ref></type>
        <definition>UnitOfMeasureConversion QuantLib::UnitOfMeasureConversionManager::smartLookup</definition>
        <argsstring>(const CommodityType &amp;commodityType, const UnitOfMeasure &amp;source, const UnitOfMeasure &amp;target, std::list&lt; std::string &gt; forbidden=std::list&lt; std::string &gt;()) const</argsstring>
        <name>smartLookup</name>
        <qualifiedname>QuantLib::UnitOfMeasureConversionManager::smartLookup</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_commodity_type" kindref="compound">CommodityType</ref> &amp;</type>
          <declname>commodityType</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_unit_of_measure" kindref="compound">UnitOfMeasure</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_unit_of_measure" kindref="compound">UnitOfMeasure</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>std::list&lt; std::string &gt;</type>
          <declname>forbidden</declname>
          <defval>std::list&lt; std::string &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/unitofmeasureconversionmanager.hpp" line="57" column="33" bodyfile="ql/experimental/commodities/unitofmeasureconversionmanager.cpp" bodystart="165" bodyend="206"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>repository of conversion factors between units of measure </para>
    </briefdescription>
    <detaileddescription>
<para><xrefsect id="test_1_test000009"><xreftitle>Test</xreftitle><xrefdescription><para>lookup of direct unit of measure conversion is tested. </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::Singleton&lt; UnitOfMeasureConversionManager &gt;</label>
        <link refid="class_quant_lib_1_1_singleton"/>
      </node>
      <node id="1">
        <label>QuantLib::UnitOfMeasureConversionManager</label>
        <link refid="class_quant_lib_1_1_unit_of_measure_conversion_manager"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::Singleton&lt; UnitOfMeasureConversionManager &gt;</label>
        <link refid="class_quant_lib_1_1_singleton"/>
      </node>
      <node id="1">
        <label>QuantLib::UnitOfMeasureConversionManager</label>
        <link refid="class_quant_lib_1_1_unit_of_measure_conversion_manager"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/commodities/unitofmeasureconversionmanager.hpp" line="36" column="5" bodyfile="ql/experimental/commodities/unitofmeasureconversionmanager.hpp" bodystart="37" bodyend="62"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_unit_of_measure_conversion_manager_1ae6b5d3959b337e5d18dc5f07b183c0d6" prot="public" virt="non-virtual"><scope>QuantLib::UnitOfMeasureConversionManager</scope><name>add</name></member>
      <member refid="class_quant_lib_1_1_unit_of_measure_conversion_manager_1a13d8bee019d24b8928b2abd6746f6e89" prot="private" virt="non-virtual"><scope>QuantLib::UnitOfMeasureConversionManager</scope><name>addKnownConversionFactors</name></member>
      <member refid="class_quant_lib_1_1_unit_of_measure_conversion_manager_1af140057c07c0d4d835fa735f6eae4da2" prot="public" virt="non-virtual"><scope>QuantLib::UnitOfMeasureConversionManager</scope><name>clear</name></member>
      <member refid="class_quant_lib_1_1_unit_of_measure_conversion_manager_1a82350d11c3bf54c15eb73196f32e4cd7" prot="private" virt="non-virtual"><scope>QuantLib::UnitOfMeasureConversionManager</scope><name>data_</name></member>
      <member refid="class_quant_lib_1_1_unit_of_measure_conversion_manager_1a30502637c29ceab70609f586c271cfe9" prot="private" virt="non-virtual"><scope>QuantLib::UnitOfMeasureConversionManager</scope><name>directLookup</name></member>
      <member refid="class_quant_lib_1_1_singleton_1ac412b7766b32f56372a3e966c5f3f386" prot="public" virt="non-virtual"><scope>QuantLib::UnitOfMeasureConversionManager</scope><name>instance</name></member>
      <member refid="class_quant_lib_1_1_unit_of_measure_conversion_manager_1a9987a1c75cc84b745fbd63067e513160" prot="public" virt="non-virtual"><scope>QuantLib::UnitOfMeasureConversionManager</scope><name>lookup</name></member>
      <member refid="class_quant_lib_1_1_singleton_1a9d8c762b553192d479d7ff7edb20624d" prot="public" virt="non-virtual"><scope>QuantLib::UnitOfMeasureConversionManager</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_singleton_1a87afbf4a53f4a13d2b64135656dc23ba" prot="public" virt="non-virtual"><scope>QuantLib::UnitOfMeasureConversionManager</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_singleton_1aec6ad8083eb125b47049a296aa078da3" prot="public" virt="non-virtual"><scope>QuantLib::UnitOfMeasureConversionManager</scope><name>Singleton</name></member>
      <member refid="class_quant_lib_1_1_singleton_1adba174550e55859f5a7cf6fc060c3b24" prot="public" virt="non-virtual"><scope>QuantLib::UnitOfMeasureConversionManager</scope><name>Singleton</name></member>
      <member refid="class_quant_lib_1_1_singleton_1a711b37092c979a43c38a4ac40dadd4d3" prot="protected" virt="non-virtual"><scope>QuantLib::UnitOfMeasureConversionManager</scope><name>Singleton</name></member>
      <member refid="class_quant_lib_1_1_unit_of_measure_conversion_manager_1a60b603fb83417749c97671430b872ae9" prot="private" virt="non-virtual"><scope>QuantLib::UnitOfMeasureConversionManager</scope><name>Singleton&lt; UnitOfMeasureConversionManager &gt;</name></member>
      <member refid="class_quant_lib_1_1_unit_of_measure_conversion_manager_1a44827b9cefa344d09a327a886916d67e" prot="private" virt="non-virtual"><scope>QuantLib::UnitOfMeasureConversionManager</scope><name>smartLookup</name></member>
      <member refid="class_quant_lib_1_1_unit_of_measure_conversion_manager_1a6bda01c5f2a3f2455312ca4d960208b9" prot="private" virt="non-virtual"><scope>QuantLib::UnitOfMeasureConversionManager</scope><name>UnitOfMeasureConversionManager</name></member>
      <member refid="class_quant_lib_1_1_singleton_1ac8b95ca8ebb2759f6dda65e3c787bc99" prot="public" virt="non-virtual"><scope>QuantLib::UnitOfMeasureConversionManager</scope><name>~Singleton</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_quanto_double_barrier_option" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::QuantoDoubleBarrierOption</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_double_barrier_option" prot="public" virt="non-virtual">QuantLib::DoubleBarrierOption</basecompoundref>
    <includes refid="quantodoublebarrieroption_8hpp" local="no">quantodoublebarrieroption.hpp</includes>
    <sectiondef kind="user-defined">
      <header>greeks</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_quanto_double_barrier_option_1a05b9823d604d2f35a8ea51610f531f97" prot="private" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::QuantoDoubleBarrierOption::qvega_</definition>
        <argsstring></argsstring>
        <name>qvega_</name>
        <qualifiedname>QuantLib::QuantoDoubleBarrierOption::qvega_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/barrieroption/quantodoublebarrieroption.hpp" line="57" column="22" bodyfile="ql/experimental/barrieroption/quantodoublebarrieroption.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_quanto_double_barrier_option_1ab83b88d3528440fadc6591a17b7402ca" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::QuantoDoubleBarrierOption::qrho_</definition>
        <argsstring></argsstring>
        <name>qrho_</name>
        <qualifiedname>QuantLib::QuantoDoubleBarrierOption::qrho_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/barrieroption/quantodoublebarrieroption.hpp" line="57" column="29" bodyfile="ql/experimental/barrieroption/quantodoublebarrieroption.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_quanto_double_barrier_option_1a80d074713e9f555c0479159860f9479b" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::QuantoDoubleBarrierOption::qlambda_</definition>
        <argsstring></argsstring>
        <name>qlambda_</name>
        <qualifiedname>QuantLib::QuantoDoubleBarrierOption::qlambda_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/barrieroption/quantodoublebarrieroption.hpp" line="57" column="35" bodyfile="ql/experimental/barrieroption/quantodoublebarrieroption.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_quanto_double_barrier_option_1aaeab60b3d58e543128f3d56b2f6995fc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::QuantoDoubleBarrierOption::qvega</definition>
        <argsstring>() const</argsstring>
        <name>qvega</name>
        <qualifiedname>QuantLib::QuantoDoubleBarrierOption::qvega</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/barrieroption/quantodoublebarrieroption.hpp" line="48" column="14" bodyfile="ql/experimental/barrieroption/quantodoublebarrieroption.cpp" bodystart="33" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_quanto_double_barrier_option_1a96625783725feb65be8836ddd7a48c14" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::QuantoDoubleBarrierOption::qrho</definition>
        <argsstring>() const</argsstring>
        <name>qrho</name>
        <qualifiedname>QuantLib::QuantoDoubleBarrierOption::qrho</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/barrieroption/quantodoublebarrieroption.hpp" line="49" column="14" bodyfile="ql/experimental/barrieroption/quantodoublebarrieroption.cpp" bodystart="40" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_quanto_double_barrier_option_1ab8b5d232780006725c5a371eef4c95a1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::QuantoDoubleBarrierOption::qlambda</definition>
        <argsstring>() const</argsstring>
        <name>qlambda</name>
        <qualifiedname>QuantLib::QuantoDoubleBarrierOption::qlambda</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/barrieroption/quantodoublebarrieroption.hpp" line="50" column="14" bodyfile="ql/experimental/barrieroption/quantodoublebarrieroption.cpp" bodystart="47" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_quanto_double_barrier_option_1af0ee7f5d67ee2c47a621386b0bb52492" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::QuantoDoubleBarrierOption::fetchResults</definition>
        <argsstring>(const PricingEngine::results *) const override</argsstring>
        <name>fetchResults</name>
        <qualifiedname>QuantLib::QuantoDoubleBarrierOption::fetchResults</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_one_asset_option_1a7c9dadd5ebc375b371ca4e12c11d8c55">fetchResults</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_pricing_engine_1_1results" kindref="compound">PricingEngine::results</ref> *</type>
          <defname>r</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>When a derived result structure is defined for an instrument, this method should be overridden to read from it. This is mandatory in case a pricing engine is used. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/barrieroption/quantodoublebarrieroption.hpp" line="52" column="14" bodyfile="ql/experimental/barrieroption/quantodoublebarrieroption.cpp" bodystart="59" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_quanto_double_barrier_option_1add216cb6ed7122e0bbe9d3b47987fca5" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::QuantoDoubleBarrierOption::setupExpired</definition>
        <argsstring>() const override</argsstring>
        <name>setupExpired</name>
        <qualifiedname>QuantLib::QuantoDoubleBarrierOption::setupExpired</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_one_asset_option_1ac550518bed1cbfd3d7a5f3a64d830099">setupExpired</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must leave the instrument in a consistent state when the expiration condition is met. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/barrieroption/quantodoublebarrieroption.hpp" line="55" column="14" bodyfile="ql/experimental/barrieroption/quantodoublebarrieroption.cpp" bodystart="54" bodyend="57"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_quant_lib_1_1_quanto_double_barrier_option_1a1b9d0983f4cc7aa5daab6d4f86fa03c0" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1_double_barrier_option_1_1arguments" kindref="compound">DoubleBarrierOption::arguments</ref></type>
        <definition>typedef DoubleBarrierOption::arguments QuantLib::QuantoDoubleBarrierOption::arguments</definition>
        <argsstring></argsstring>
        <name>arguments</name>
        <qualifiedname>QuantLib::QuantoDoubleBarrierOption::arguments</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/barrieroption/quantodoublebarrieroption.hpp" line="36" column="48" bodyfile="ql/experimental/barrieroption/quantodoublebarrieroption.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_quant_lib_1_1_quanto_double_barrier_option_1af3f4d06f5926e567b459bec1e6368c9e" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1_quanto_option_results" kindref="compound">QuantoOptionResults</ref>&lt; <ref refid="class_quant_lib_1_1_instrument_1_1results" kindref="compound">DoubleBarrierOption::results</ref> &gt;</type>
        <definition>typedef QuantoOptionResults&lt;DoubleBarrierOption::results&gt; QuantLib::QuantoDoubleBarrierOption::results</definition>
        <argsstring></argsstring>
        <name>results</name>
        <qualifiedname>QuantLib::QuantoDoubleBarrierOption::results</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/barrieroption/quantodoublebarrieroption.hpp" line="37" column="37" bodyfile="ql/experimental/barrieroption/quantodoublebarrieroption.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_quanto_double_barrier_option_1a9944e16ef64082dd0857d0516738eccd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::QuantoDoubleBarrierOption::QuantoDoubleBarrierOption</definition>
        <argsstring>(DoubleBarrier::Type barrierType, Real barrier_lo, Real barrier_hi, Real rebate, const ext::shared_ptr&lt; StrikedTypePayoff &gt; &amp;payoff, const ext::shared_ptr&lt; Exercise &gt; &amp;exercise)</argsstring>
        <name>QuantoDoubleBarrierOption</name>
        <qualifiedname>QuantLib::QuantoDoubleBarrierOption::QuantoDoubleBarrierOption</qualifiedname>
        <param>
          <type><ref refid="struct_quant_lib_1_1_double_barrier_1ac1221f8400cd673297abbf49b58cdf5b" kindref="member">DoubleBarrier::Type</ref></type>
          <declname>barrierType</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>barrier_lo</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>barrier_hi</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>rebate</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_striked_type_payoff" kindref="compound">StrikedTypePayoff</ref> &gt; &amp;</type>
          <declname>payoff</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_exercise" kindref="compound">Exercise</ref> &gt; &amp;</type>
          <declname>exercise</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/barrieroption/quantodoublebarrieroption.hpp" line="38" column="9" bodyfile="ql/experimental/barrieroption/quantodoublebarrieroption.cpp" bodystart="24" bodyend="31"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Quanto version of a double barrier option. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::DoubleBarrierOption</label>
        <link refid="class_quant_lib_1_1_double_barrier_option"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Instrument</label>
        <link refid="class_quant_lib_1_1_instrument"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="8">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="3">
        <label>QuantLib::OneAssetOption</label>
        <link refid="class_quant_lib_1_1_one_asset_option"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Option</label>
        <link refid="class_quant_lib_1_1_option"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::QuantoDoubleBarrierOption</label>
        <link refid="class_quant_lib_1_1_quanto_double_barrier_option"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="2">
        <label>QuantLib::DoubleBarrierOption</label>
        <link refid="class_quant_lib_1_1_double_barrier_option"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Instrument</label>
        <link refid="class_quant_lib_1_1_instrument"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>valuationDate_</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="8">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="3">
        <label>QuantLib::OneAssetOption</label>
        <link refid="class_quant_lib_1_1_one_asset_option"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Option</label>
        <link refid="class_quant_lib_1_1_option"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::QuantoDoubleBarrierOption</label>
        <link refid="class_quant_lib_1_1_quanto_double_barrier_option"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/barrieroption/quantodoublebarrieroption.hpp" line="34" column="5" bodyfile="ql/experimental/barrieroption/quantodoublebarrieroption.hpp" bodystart="34" bodyend="58"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_instrument_1a468edb294da268b097c91bf821084c07" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>additionalResults</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a57d2b34e8625ab3d9ffa50c0c7931099" prot="protected" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>additionalResults_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a02070ea7442d30625992c1711030d4b8" prot="protected" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>alwaysForward_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a17c9433135a259e4776baec66204a484" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>alwaysForwardNotifications</name></member>
      <member refid="class_quant_lib_1_1_quanto_double_barrier_option_1a1b9d0983f4cc7aa5daab6d4f86fa03c0" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>arguments</name></member>
      <member refid="class_quant_lib_1_1_double_barrier_option_1a067f7d11ab23dbfa9412d9836e817f78" prot="protected" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>barrier_hi_</name></member>
      <member refid="class_quant_lib_1_1_double_barrier_option_1a3e2c53c7f0a61f9ae073d841210c2da0" prot="protected" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>barrier_lo_</name></member>
      <member refid="class_quant_lib_1_1_double_barrier_option_1a05a39de5ea0cddc39f78a4b676556dba" prot="protected" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>barrierType_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a4c573c48f7eaead5042864ac0eb5b025" prot="protected" virt="virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a58b4986a80efa18634483a92c121e26e" prot="protected" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>calculated_</name></member>
      <member refid="class_quant_lib_1_1_option_1abaee7fc605354c444867545492cd5845a4f872c1ba3286c1af60485c2f4a4d3c1" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>Call</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_one_asset_option_1ade9880b1f51bd7b94ea4d176e1cb259f" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>delta</name></member>
      <member refid="class_quant_lib_1_1_one_asset_option_1a0f2486ef271b5cfda29f59d6b21726d5" prot="protected" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>delta_</name></member>
      <member refid="class_quant_lib_1_1_one_asset_option_1ab01837864824837e07151b9d7b218e60" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>deltaForward</name></member>
      <member refid="class_quant_lib_1_1_one_asset_option_1a46ff6fe39afba281f273310751de4523" prot="protected" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>deltaForward_</name></member>
      <member refid="class_quant_lib_1_1_one_asset_option_1aa08f7265cbca4f4e026e4c80a545af64" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>dividendRho</name></member>
      <member refid="class_quant_lib_1_1_one_asset_option_1acec199353113b55df04b0b1758988f47" prot="protected" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>dividendRho_</name></member>
      <member refid="class_quant_lib_1_1_double_barrier_option_1a7acf2679d4f96d01d9fc489f08c78c2b" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>DoubleBarrierOption</name></member>
      <member refid="class_quant_lib_1_1_one_asset_option_1ac4b96563e0650f3f486402eca600707c" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>elasticity</name></member>
      <member refid="class_quant_lib_1_1_one_asset_option_1a62eee9c1e86fa3606446f7cb6f5b89fe" prot="protected" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>elasticity_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1ac548cb61c864779db09bd0fac6ae7c81" prot="protected" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>engine_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a03502fb6c606b262c25acd94ff4c1e52" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>errorEstimate</name></member>
      <member refid="class_quant_lib_1_1_instrument_1abb8f4cfa7346fab7a2f3a8c8b4da30f3" prot="protected" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>errorEstimate_</name></member>
      <member refid="class_quant_lib_1_1_option_1a983bd3fd1eb1437bbdef1f3fa2adf899" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>exercise</name></member>
      <member refid="class_quant_lib_1_1_option_1a3e8fca2ab5ba46c45b99badeeacd7e7a" prot="protected" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>exercise_</name></member>
      <member refid="class_quant_lib_1_1_quanto_double_barrier_option_1af0ee7f5d67ee2c47a621386b0bb52492" prot="public" virt="virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>fetchResults</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1afac6ee19c3107c453e1347dd8000e023" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>forwardFirstNotificationOnly</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7157f41e83f2c5d924f5c5bafda04d1d" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>freeze</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7bb721fe00c6854e602758aba629ab77" prot="protected" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>frozen_</name></member>
      <member refid="class_quant_lib_1_1_one_asset_option_1a0e6f1fae2659124479c772cc76fd93bb" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>gamma</name></member>
      <member refid="class_quant_lib_1_1_one_asset_option_1acd566d7bddc02fc9b822a27072ccad90" prot="protected" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>gamma_</name></member>
      <member refid="class_quant_lib_1_1_double_barrier_option_1aca98ba47978cf3f5b00952fa18627f4e" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>impliedVolatility</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a5e4c746cbf7999c83dc57f87e241f1cc" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>Instrument</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a0a7c5d42815a4e16ee2158e24dbfc748" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>isCalculated</name></member>
      <member refid="class_quant_lib_1_1_one_asset_option_1a504f249f48aad9a3053d6b40ae1d9e6d" prot="public" virt="virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>isExpired</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_one_asset_option_1ad5e7faea3a7aada73da20453f5bd67a9" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>itmCashProbability</name></member>
      <member refid="class_quant_lib_1_1_one_asset_option_1ac7be4123d83cf536d9dc812a138d87d1" prot="protected" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>itmCashProbability_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a26f18f4ff7faaaebd8eae50e064b493e" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a5afdd9698267cd30ddd10cf01f3487b0" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>NPV</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a997663780100d30ae59b14ac0285322d" prot="protected" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>NPV_</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_one_asset_option_1a48dbb5aa57ecc6dd55a3fd579f2a0163" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>OneAssetOption</name></member>
      <member refid="class_quant_lib_1_1_option_1a03bf400e04666eadc73907b0c716739e" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>operator&lt;&lt;</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::QuantLib::Observer::"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_option_1a53a00c225649c5da693898cb8b4b364b" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>Option</name></member>
      <member refid="class_quant_lib_1_1_option_1a85744e7ba21d0df6987f618893ea76ce" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>payoff</name></member>
      <member refid="class_quant_lib_1_1_option_1ada24896615e540bebf2b9623c3537def" prot="protected" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>payoff_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1aad23f546bbca156a49a95ca2bee124c4" prot="protected" virt="virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>performCalculations</name></member>
      <member refid="class_quant_lib_1_1_option_1abaee7fc605354c444867545492cd5845aa96ffa37e51c7bbea13951f106dbd3c0" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>Put</name></member>
      <member refid="class_quant_lib_1_1_quanto_double_barrier_option_1ab8b5d232780006725c5a371eef4c95a1" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>qlambda</name></member>
      <member refid="class_quant_lib_1_1_quanto_double_barrier_option_1a80d074713e9f555c0479159860f9479b" prot="private" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>qlambda_</name></member>
      <member refid="class_quant_lib_1_1_quanto_double_barrier_option_1a96625783725feb65be8836ddd7a48c14" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>qrho</name></member>
      <member refid="class_quant_lib_1_1_quanto_double_barrier_option_1ab83b88d3528440fadc6591a17b7402ca" prot="private" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>qrho_</name></member>
      <member refid="class_quant_lib_1_1_quanto_double_barrier_option_1a9944e16ef64082dd0857d0516738eccd" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>QuantoDoubleBarrierOption</name></member>
      <member refid="class_quant_lib_1_1_quanto_double_barrier_option_1aaeab60b3d58e543128f3d56b2f6995fc" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>qvega</name></member>
      <member refid="class_quant_lib_1_1_quanto_double_barrier_option_1a05b9823d604d2f35a8ea51610f531f97" prot="private" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>qvega_</name></member>
      <member refid="class_quant_lib_1_1_double_barrier_option_1a546cff1d7f691f6ffca1bfb14d603eda" prot="protected" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>rebate_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a70c9b24e50132408d8d9ce4f6674662a" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>recalculate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a266c15a12160a89f4f9707db85f9fa27" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>result</name></member>
      <member refid="class_quant_lib_1_1_quanto_double_barrier_option_1af3f4d06f5926e567b459bec1e6368c9e" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>results</name></member>
      <member refid="class_quant_lib_1_1_one_asset_option_1a8cf492dbdd0ca337ee07f4dad8a45b59" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>rho</name></member>
      <member refid="class_quant_lib_1_1_one_asset_option_1a7a8b8781122df61dc8d29352d3337621" prot="protected" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>rho_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a3444386491f179f64f4f0aac24997071" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>setPricingEngine</name></member>
      <member refid="class_quant_lib_1_1_double_barrier_option_1a8dbeccbd0e88fefe74aa7dacb1222bd3" prot="public" virt="virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>setupArguments</name></member>
      <member refid="class_quant_lib_1_1_quanto_double_barrier_option_1add216cb6ed7122e0bbe9d3b47987fca5" prot="private" virt="virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>setupExpired</name></member>
      <member refid="class_quant_lib_1_1_one_asset_option_1aeb6d5f004784c578a95e8a12a0d44e0d" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>strikeSensitivity</name></member>
      <member refid="class_quant_lib_1_1_one_asset_option_1a60b4335a10c0e0e080eee3685faee269" prot="protected" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>strikeSensitivity_</name></member>
      <member refid="class_quant_lib_1_1_one_asset_option_1a572436642dd053662198cd1ce7705d15" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>theta</name></member>
      <member refid="class_quant_lib_1_1_one_asset_option_1a06d44ade435f5aeced2117952abfda11" prot="protected" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>theta_</name></member>
      <member refid="class_quant_lib_1_1_one_asset_option_1a4dc87d12fff8ba2783a17e062d2195e1" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>thetaPerDay</name></member>
      <member refid="class_quant_lib_1_1_one_asset_option_1a2eaaa309e0848702e8c8328334edacdd" prot="protected" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>thetaPerDay_</name></member>
      <member refid="class_quant_lib_1_1_option_1abaee7fc605354c444867545492cd5845" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>Type</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a2e0e4786666453024b9d4e0761f2770b" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>unfreeze</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1adee2bf49be5c4c78736be293321a856d" prot="public" virt="virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a53a0fc1adc70b73387ad53009725835d" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>valuationDate</name></member>
      <member refid="class_quant_lib_1_1_instrument_1aa60b558fc82f022e13535360ac4a6fed" prot="protected" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>valuationDate_</name></member>
      <member refid="class_quant_lib_1_1_one_asset_option_1a52b2075516ffa4961681a1d4e800a730" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>vega</name></member>
      <member refid="class_quant_lib_1_1_one_asset_option_1aaa99d88f04727d63bca4cb23e164b6e1" prot="protected" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>vega_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a9d719c43bb627177a90d7d12324a2d6e" prot="public" virt="non-virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>~LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::QuantoDoubleBarrierOption</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

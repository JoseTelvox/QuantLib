<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_fdm_bates_op" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::FdmBatesOp</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_fdm_linear_op_composite" prot="public" virt="non-virtual">QuantLib::FdmLinearOpComposite</basecompoundref>
    <innerclass refid="class_quant_lib_1_1_fdm_bates_op_1_1_integro_integrand" prot="private">QuantLib::FdmBatesOp::IntegroIntegrand</innerclass>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_bates_op_1af998b6f6c93afc66f988bbc99c5fd213" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FdmBatesOp::x_</definition>
        <argsstring></argsstring>
        <name>x_</name>
        <qualifiedname>QuantLib::FdmBatesOp::x_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmbatesop.hpp" line="73" column="15" bodyfile="ql/methods/finitedifferences/operators/fdmbatesop.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_bates_op_1a87e62da307d4d50863e9643fbb0f8dac" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FdmBatesOp::weights_</definition>
        <argsstring></argsstring>
        <name>weights_</name>
        <qualifiedname>QuantLib::FdmBatesOp::weights_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmbatesop.hpp" line="73" column="18" bodyfile="ql/methods/finitedifferences/operators/fdmbatesop.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_bates_op_1ab71507b5a0b92280525a63687bed813a" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::FdmBatesOp::lambda_</definition>
        <argsstring></argsstring>
        <name>lambda_</name>
        <qualifiedname>QuantLib::FdmBatesOp::lambda_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmbatesop.hpp" line="75" column="20" bodyfile="ql/methods/finitedifferences/operators/fdmbatesop.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_bates_op_1ac04d850bc26f599f7a0f6d26ea07fc96" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::FdmBatesOp::delta_</definition>
        <argsstring></argsstring>
        <name>delta_</name>
        <qualifiedname>QuantLib::FdmBatesOp::delta_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmbatesop.hpp" line="75" column="28" bodyfile="ql/methods/finitedifferences/operators/fdmbatesop.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_bates_op_1ae95abe8c18f58733b99ead5efc1d5c8b" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::FdmBatesOp::nu_</definition>
        <argsstring></argsstring>
        <name>nu_</name>
        <qualifiedname>QuantLib::FdmBatesOp::nu_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmbatesop.hpp" line="75" column="35" bodyfile="ql/methods/finitedifferences/operators/fdmbatesop.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_bates_op_1a5507a38ae8d98a0020ca1844715a0913" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::FdmBatesOp::m_</definition>
        <argsstring></argsstring>
        <name>m_</name>
        <qualifiedname>QuantLib::FdmBatesOp::m_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmbatesop.hpp" line="75" column="39" bodyfile="ql/methods/finitedifferences/operators/fdmbatesop.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_bates_op_1a2717d92af34a5d0ebfc1ecb209ec4aae" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_gauss_hermite_integration" kindref="compound">GaussHermiteIntegration</ref></type>
        <definition>GaussHermiteIntegration QuantLib::FdmBatesOp::gaussHermiteIntegration_</definition>
        <argsstring></argsstring>
        <name>gaussHermiteIntegration_</name>
        <qualifiedname>QuantLib::FdmBatesOp::gaussHermiteIntegration_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmbatesop.hpp" line="76" column="33" bodyfile="ql/methods/finitedifferences/operators/fdmbatesop.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_bates_op_1a96851f47862d405b14455a2ec3c43802" prot="private" static="no" mutable="no">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_fdm_mesher" kindref="compound">FdmMesher</ref> &gt;</type>
        <definition>const ext::shared_ptr&lt;FdmMesher&gt; QuantLib::FdmBatesOp::mesher_</definition>
        <argsstring></argsstring>
        <name>mesher_</name>
        <qualifiedname>QuantLib::FdmBatesOp::mesher_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmbatesop.hpp" line="78" column="31" bodyfile="ql/methods/finitedifferences/operators/fdmbatesop.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_bates_op_1a12094b99f338e1de4177533e1b1b0513" prot="private" static="no" mutable="no">
        <type>const FdmBoundaryConditionSet</type>
        <definition>const FdmBoundaryConditionSet QuantLib::FdmBatesOp::bcSet_</definition>
        <argsstring></argsstring>
        <name>bcSet_</name>
        <qualifiedname>QuantLib::FdmBatesOp::bcSet_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmbatesop.hpp" line="79" column="39" bodyfile="ql/methods/finitedifferences/operators/fdmbatesop.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_bates_op_1a0a16f4110fa0a022b0288a4bc5b2ff4e" prot="private" static="no" mutable="no">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_fdm_heston_op" kindref="compound">FdmHestonOp</ref> &gt;</type>
        <definition>const ext::shared_ptr&lt;FdmHestonOp&gt; QuantLib::FdmBatesOp::hestonOp_</definition>
        <argsstring></argsstring>
        <name>hestonOp_</name>
        <qualifiedname>QuantLib::FdmBatesOp::hestonOp_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmbatesop.hpp" line="80" column="31" bodyfile="ql/methods/finitedifferences/operators/fdmbatesop.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_bates_op_1aff1a7d9951b4084af83d560490d32b47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FdmBatesOp::FdmBatesOp</definition>
        <argsstring>(const ext::shared_ptr&lt; FdmMesher &gt; &amp;mesher, const ext::shared_ptr&lt; BatesProcess &gt; &amp;batesProcess, FdmBoundaryConditionSet bcSet, Size integroIntegrationOrder, const ext::shared_ptr&lt; FdmQuantoHelper &gt; &amp;quantoHelper=ext::shared_ptr&lt; FdmQuantoHelper &gt;())</argsstring>
        <name>FdmBatesOp</name>
        <qualifiedname>QuantLib::FdmBatesOp::FdmBatesOp</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_fdm_mesher" kindref="compound">FdmMesher</ref> &gt; &amp;</type>
          <declname>mesher</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_bates_process" kindref="compound">BatesProcess</ref> &gt; &amp;</type>
          <declname>batesProcess</declname>
        </param>
        <param>
          <type>FdmBoundaryConditionSet</type>
          <declname>bcSet</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>integroIntegrationOrder</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_fdm_quanto_helper" kindref="compound">FdmQuantoHelper</ref> &gt; &amp;</type>
          <declname>quantoHelper</declname>
          <defval>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_fdm_quanto_helper" kindref="compound">FdmQuantoHelper</ref> &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmbatesop.hpp" line="38" column="9" bodyfile="ql/methods/finitedifferences/operators/fdmbatesop.cpp" bodystart="37" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_bates_op_1a32686b6c53e9aec28a9283264f71d75b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::FdmBatesOp::size</definition>
        <argsstring>() const override</argsstring>
        <name>size</name>
        <qualifiedname>QuantLib::FdmBatesOp::size</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1aea89ff84d04c901c37823de66b392018">size</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmbatesop.hpp" line="45" column="14" bodyfile="ql/methods/finitedifferences/operators/fdmbatesop.hpp" bodystart="84" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_bates_op_1a577028e3886403d3182f7baf755287d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::FdmBatesOp::setTime</definition>
        <argsstring>(Time t1, Time t2) override</argsstring>
        <name>setTime</name>
        <qualifiedname>QuantLib::FdmBatesOp::setTime</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1ab635911759d6a1bde11c501d15515872">setTime</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t1</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t2</declname>
        </param>
        <briefdescription>
<para><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> <formula id="385">$t1 &lt;= t2$</formula> is required. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmbatesop.hpp" line="46" column="14" bodyfile="ql/methods/finitedifferences/operators/fdmbatesop.hpp" bodystart="88" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_bates_op_1a1db22001f23ec24701097ea11231218e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FdmBatesOp::apply</definition>
        <argsstring>(const Array &amp;r) const override</argsstring>
        <name>apply</name>
        <qualifiedname>QuantLib::FdmBatesOp::apply</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_1a9d59d8bb3597206db60f61c3f448c211">apply</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmbatesop.hpp" line="48" column="15" bodyfile="ql/methods/finitedifferences/operators/fdmbatesop.hpp" bodystart="92" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_bates_op_1a3a24fba5ef60630dd20b2ea81354bbe3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FdmBatesOp::apply_mixed</definition>
        <argsstring>(const Array &amp;r) const override</argsstring>
        <name>apply_mixed</name>
        <qualifiedname>QuantLib::FdmBatesOp::apply_mixed</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1a162fe1437fb3060475f7824d73b72ff7">apply_mixed</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmbatesop.hpp" line="49" column="15" bodyfile="ql/methods/finitedifferences/operators/fdmbatesop.hpp" bodystart="96" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_bates_op_1a2f71d75f5361a9145a46146ce2b198fb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FdmBatesOp::apply_direction</definition>
        <argsstring>(Size direction, const Array &amp;r) const override</argsstring>
        <name>apply_direction</name>
        <qualifiedname>QuantLib::FdmBatesOp::apply_direction</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1aa9f8c9bcd1596637b3eaaa74c64ad83c">apply_direction</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmbatesop.hpp" line="51" column="15" bodyfile="ql/methods/finitedifferences/operators/fdmbatesop.hpp" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_bates_op_1a0b916eb742d70b851bc745ddea1d215d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FdmBatesOp::solve_splitting</definition>
        <argsstring>(Size direction, const Array &amp;r, Real s) const override</argsstring>
        <name>solve_splitting</name>
        <qualifiedname>QuantLib::FdmBatesOp::solve_splitting</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1a1ea6ebafd3a36a95a6acb6e1c189e21f">solve_splitting</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmbatesop.hpp" line="52" column="15" bodyfile="ql/methods/finitedifferences/operators/fdmbatesop.hpp" bodystart="105" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_bates_op_1aeb2c41cbd539dfcb78ac4351819a12c1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FdmBatesOp::preconditioner</definition>
        <argsstring>(const Array &amp;r, Real s) const override</argsstring>
        <name>preconditioner</name>
        <qualifiedname>QuantLib::FdmBatesOp::preconditioner</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1a3122983a62d53799ffd1c03922660e6c">preconditioner</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmbatesop.hpp" line="53" column="15" bodyfile="ql/methods/finitedifferences/operators/fdmbatesop.hpp" bodystart="111" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_bates_op_1a2dde01a4488fa4cae5babb08ff8328f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; SparseMatrix &gt;</type>
        <definition>std::vector&lt; SparseMatrix &gt; QuantLib::FdmBatesOp::toMatrixDecomp</definition>
        <argsstring>() const override</argsstring>
        <name>toMatrixDecomp</name>
        <qualifiedname>QuantLib::FdmBatesOp::toMatrixDecomp</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1aae06b697cc0d041a8cbdd9b259ec34b9">toMatrixDecomp</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmbatesop.hpp" line="55" column="21" bodyfile="ql/methods/finitedifferences/operators/fdmbatesop.cpp" bodystart="122" bodyend="124"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_bates_op_1a0459a367d4c2a5957d05419f3d2ebabc" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FdmBatesOp::integro</definition>
        <argsstring>(const Array &amp;r) const</argsstring>
        <name>integro</name>
        <qualifiedname>QuantLib::FdmBatesOp::integro</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmbatesop.hpp" line="71" column="15" bodyfile="ql/methods/finitedifferences/operators/fdmbatesop.cpp" bodystart="89" bodyend="120"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::FdmBatesOp</label>
        <link refid="class_quant_lib_1_1_fdm_bates_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::FdmLinearOp</label>
        <link refid="class_quant_lib_1_1_fdm_linear_op"/>
      </node>
      <node id="2">
        <label>QuantLib::FdmLinearOpComposite</label>
        <link refid="class_quant_lib_1_1_fdm_linear_op_composite"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::FdmBatesOp</label>
        <link refid="class_quant_lib_1_1_fdm_bates_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::FdmLinearOp</label>
        <link refid="class_quant_lib_1_1_fdm_linear_op"/>
      </node>
      <node id="2">
        <label>QuantLib::FdmLinearOpComposite</label>
        <link refid="class_quant_lib_1_1_fdm_linear_op_composite"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/methods/finitedifferences/operators/fdmbatesop.hpp" line="36" column="5" bodyfile="ql/methods/finitedifferences/operators/fdmbatesop.hpp" bodystart="36" bodyend="81"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_fdm_bates_op_1a1db22001f23ec24701097ea11231218e" prot="public" virt="virtual"><scope>QuantLib::FdmBatesOp</scope><name>apply</name></member>
      <member refid="class_quant_lib_1_1_fdm_bates_op_1a2f71d75f5361a9145a46146ce2b198fb" prot="public" virt="virtual"><scope>QuantLib::FdmBatesOp</scope><name>apply_direction</name></member>
      <member refid="class_quant_lib_1_1_fdm_bates_op_1a3a24fba5ef60630dd20b2ea81354bbe3" prot="public" virt="virtual"><scope>QuantLib::FdmBatesOp</scope><name>apply_mixed</name></member>
      <member refid="class_quant_lib_1_1_fdm_linear_op_1af55693593c0cf7e885c67fd848f76e49" prot="public" virt="non-virtual"><scope>QuantLib::FdmBatesOp</scope><name>array_type</name></member>
      <member refid="class_quant_lib_1_1_fdm_bates_op_1a12094b99f338e1de4177533e1b1b0513" prot="private" virt="non-virtual"><scope>QuantLib::FdmBatesOp</scope><name>bcSet_</name></member>
      <member refid="class_quant_lib_1_1_fdm_bates_op_1ac04d850bc26f599f7a0f6d26ea07fc96" prot="private" virt="non-virtual"><scope>QuantLib::FdmBatesOp</scope><name>delta_</name></member>
      <member refid="class_quant_lib_1_1_fdm_bates_op_1aff1a7d9951b4084af83d560490d32b47" prot="public" virt="non-virtual"><scope>QuantLib::FdmBatesOp</scope><name>FdmBatesOp</name></member>
      <member refid="class_quant_lib_1_1_fdm_bates_op_1a2717d92af34a5d0ebfc1ecb209ec4aae" prot="private" virt="non-virtual"><scope>QuantLib::FdmBatesOp</scope><name>gaussHermiteIntegration_</name></member>
      <member refid="class_quant_lib_1_1_fdm_bates_op_1a0a16f4110fa0a022b0288a4bc5b2ff4e" prot="private" virt="non-virtual"><scope>QuantLib::FdmBatesOp</scope><name>hestonOp_</name></member>
      <member refid="class_quant_lib_1_1_fdm_bates_op_1a0459a367d4c2a5957d05419f3d2ebabc" prot="private" virt="non-virtual"><scope>QuantLib::FdmBatesOp</scope><name>integro</name></member>
      <member refid="class_quant_lib_1_1_fdm_bates_op_1ab71507b5a0b92280525a63687bed813a" prot="private" virt="non-virtual"><scope>QuantLib::FdmBatesOp</scope><name>lambda_</name></member>
      <member refid="class_quant_lib_1_1_fdm_bates_op_1a5507a38ae8d98a0020ca1844715a0913" prot="private" virt="non-virtual"><scope>QuantLib::FdmBatesOp</scope><name>m_</name></member>
      <member refid="class_quant_lib_1_1_fdm_bates_op_1a96851f47862d405b14455a2ec3c43802" prot="private" virt="non-virtual"><scope>QuantLib::FdmBatesOp</scope><name>mesher_</name></member>
      <member refid="class_quant_lib_1_1_fdm_bates_op_1ae95abe8c18f58733b99ead5efc1d5c8b" prot="private" virt="non-virtual"><scope>QuantLib::FdmBatesOp</scope><name>nu_</name></member>
      <member refid="class_quant_lib_1_1_fdm_bates_op_1aeb2c41cbd539dfcb78ac4351819a12c1" prot="public" virt="virtual"><scope>QuantLib::FdmBatesOp</scope><name>preconditioner</name></member>
      <member refid="class_quant_lib_1_1_fdm_bates_op_1a577028e3886403d3182f7baf755287d4" prot="public" virt="virtual"><scope>QuantLib::FdmBatesOp</scope><name>setTime</name></member>
      <member refid="class_quant_lib_1_1_fdm_bates_op_1a32686b6c53e9aec28a9283264f71d75b" prot="public" virt="virtual"><scope>QuantLib::FdmBatesOp</scope><name>size</name></member>
      <member refid="class_quant_lib_1_1_fdm_bates_op_1a0b916eb742d70b851bc745ddea1d215d" prot="public" virt="virtual"><scope>QuantLib::FdmBatesOp</scope><name>solve_splitting</name></member>
      <member refid="class_quant_lib_1_1_fdm_linear_op_composite_1abca0364ae63b5b0e714fcd3ac9e8a73b" prot="public" virt="virtual"><scope>QuantLib::FdmBatesOp</scope><name>toMatrix</name></member>
      <member refid="class_quant_lib_1_1_fdm_bates_op_1a2dde01a4488fa4cae5babb08ff8328f1" prot="public" virt="virtual"><scope>QuantLib::FdmBatesOp</scope><name>toMatrixDecomp</name></member>
      <member refid="class_quant_lib_1_1_fdm_bates_op_1a87e62da307d4d50863e9643fbb0f8dac" prot="private" virt="non-virtual"><scope>QuantLib::FdmBatesOp</scope><name>weights_</name></member>
      <member refid="class_quant_lib_1_1_fdm_bates_op_1af998b6f6c93afc66f988bbc99c5fd213" prot="private" virt="non-virtual"><scope>QuantLib::FdmBatesOp</scope><name>x_</name></member>
      <member refid="class_quant_lib_1_1_fdm_linear_op_1aa6f29eb6144a1848c73c21e392f023e4" prot="public" virt="virtual"><scope>QuantLib::FdmBatesOp</scope><name>~FdmLinearOp</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

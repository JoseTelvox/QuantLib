<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_cumulative_binomial_distribution" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::CumulativeBinomialDistribution</compoundname>
    <includes refid="binomialdistribution_8hpp" local="no">binomialdistribution.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_cumulative_binomial_distribution_1a8c70f4be053ea85c6361f1ebc44c1a48" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
        <definition>BigNatural QuantLib::CumulativeBinomialDistribution::n_</definition>
        <argsstring></argsstring>
        <name>n_</name>
        <qualifiedname>QuantLib::CumulativeBinomialDistribution::n_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/distributions/binomialdistribution.hpp" line="78" column="20" bodyfile="ql/math/distributions/binomialdistribution.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_cumulative_binomial_distribution_1a2cc5e267379724d4cf50f201e2cfde00" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CumulativeBinomialDistribution::p_</definition>
        <argsstring></argsstring>
        <name>p_</name>
        <qualifiedname>QuantLib::CumulativeBinomialDistribution::p_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/distributions/binomialdistribution.hpp" line="79" column="14" bodyfile="ql/math/distributions/binomialdistribution.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_cumulative_binomial_distribution_1aff40873c36be019beae4a31a4831d026" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::CumulativeBinomialDistribution::CumulativeBinomialDistribution</definition>
        <argsstring>(Real p, BigNatural n)</argsstring>
        <name>CumulativeBinomialDistribution</name>
        <qualifiedname>QuantLib::CumulativeBinomialDistribution::CumulativeBinomialDistribution</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/distributions/binomialdistribution.hpp" line="69" column="9" bodyfile="ql/math/distributions/binomialdistribution.hpp" bodystart="104" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_cumulative_binomial_distribution_1a1c648bbf439dc7b7a34331fbcb2d16e7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CumulativeBinomialDistribution::operator()</definition>
        <argsstring>(BigNatural k) const</argsstring>
        <name>operator()</name>
        <qualifiedname>QuantLib::CumulativeBinomialDistribution::operator()</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/distributions/binomialdistribution.hpp" line="71" column="14" bodyfile="ql/math/distributions/binomialdistribution.hpp" bodystart="71" bodyend="76"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Cumulative binomial distribution function. </para>
    </briefdescription>
    <detaileddescription>
<para>Given an integer k it provides the cumulative probability of observing kk&lt;=k: formula here ... </para>
    </detaileddescription>
    <location file="ql/math/distributions/binomialdistribution.hpp" line="67" column="5" bodyfile="ql/math/distributions/binomialdistribution.hpp" bodystart="67" bodyend="80"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_cumulative_binomial_distribution_1aff40873c36be019beae4a31a4831d026" prot="public" virt="non-virtual"><scope>QuantLib::CumulativeBinomialDistribution</scope><name>CumulativeBinomialDistribution</name></member>
      <member refid="class_quant_lib_1_1_cumulative_binomial_distribution_1a8c70f4be053ea85c6361f1ebc44c1a48" prot="private" virt="non-virtual"><scope>QuantLib::CumulativeBinomialDistribution</scope><name>n_</name></member>
      <member refid="class_quant_lib_1_1_cumulative_binomial_distribution_1a1c648bbf439dc7b7a34331fbcb2d16e7" prot="public" virt="non-virtual"><scope>QuantLib::CumulativeBinomialDistribution</scope><name>operator()</name></member>
      <member refid="class_quant_lib_1_1_cumulative_binomial_distribution_1a2cc5e267379724d4cf50f201e2cfde00" prot="private" virt="non-virtual"><scope>QuantLib::CumulativeBinomialDistribution</scope><name>p_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

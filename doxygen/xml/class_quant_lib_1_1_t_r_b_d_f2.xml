<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_t_r_b_d_f2" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::TRBDF2</compoundname>
    <includes refid="trbdf2_8hpp" local="no">trbdf2.hpp</includes>
    <templateparamlist>
      <param>
        <type>class Operator</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_quant_lib_1_1_t_r_b_d_f2_1a8ec765604518a56e925d52eb09a8d3f3" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1_operator_traits" kindref="compound">OperatorTraits</ref>&lt; Operator &gt;</type>
        <definition>typedef OperatorTraits&lt;Operator&gt; QuantLib::TRBDF2&lt; Operator &gt;::traits</definition>
        <argsstring></argsstring>
        <name>traits</name>
        <qualifiedname>QuantLib::TRBDF2::traits</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/trbdf2.hpp" line="76" column="32" bodyfile="ql/methods/finitedifferences/trbdf2.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_quant_lib_1_1_t_r_b_d_f2_1af4336ba9371ea3c29dddbdb8fe5fc5c7" prot="public" static="no">
        <type>traits::operator_type</type>
        <definition>typedef traits::operator_type QuantLib::TRBDF2&lt; Operator &gt;::operator_type</definition>
        <argsstring></argsstring>
        <name>operator_type</name>
        <qualifiedname>QuantLib::TRBDF2::operator_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/trbdf2.hpp" line="77" column="48" bodyfile="ql/methods/finitedifferences/trbdf2.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_quant_lib_1_1_t_r_b_d_f2_1aff0f410539b20a69b0abb3f633be7b9c" prot="public" static="no">
        <type>traits::array_type</type>
        <definition>typedef traits::array_type QuantLib::TRBDF2&lt; Operator &gt;::array_type</definition>
        <argsstring></argsstring>
        <name>array_type</name>
        <qualifiedname>QuantLib::TRBDF2::array_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/trbdf2.hpp" line="78" column="45" bodyfile="ql/methods/finitedifferences/trbdf2.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_quant_lib_1_1_t_r_b_d_f2_1ab1dc7bbe7228f6f30dfc07a45552d6eb" prot="public" static="no">
        <type>traits::bc_set</type>
        <definition>typedef traits::bc_set QuantLib::TRBDF2&lt; Operator &gt;::bc_set</definition>
        <argsstring></argsstring>
        <name>bc_set</name>
        <qualifiedname>QuantLib::TRBDF2::bc_set</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/trbdf2.hpp" line="79" column="41" bodyfile="ql/methods/finitedifferences/trbdf2.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_quant_lib_1_1_t_r_b_d_f2_1a769653c4500c9cfcf6cb3d0ea2cb45ea" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1_step_condition" kindref="compound">traits::condition_type</ref></type>
        <definition>typedef traits::condition_type QuantLib::TRBDF2&lt; Operator &gt;::condition_type</definition>
        <argsstring></argsstring>
        <name>condition_type</name>
        <qualifiedname>QuantLib::TRBDF2::condition_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/trbdf2.hpp" line="80" column="49" bodyfile="ql/methods/finitedifferences/trbdf2.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_t_r_b_d_f2_1a6296a98bceabd20cb1b65af7cc212ae7" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::TRBDF2&lt; Operator &gt;::alpha_</definition>
        <argsstring></argsstring>
        <name>alpha_</name>
        <qualifiedname>QuantLib::TRBDF2::alpha_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/trbdf2.hpp" line="98" column="14" bodyfile="ql/methods/finitedifferences/trbdf2.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_t_r_b_d_f2_1a064cc316454bd20e4b35ec81b64b6d03" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_fdm_linear_op" kindref="compound">operator_type</ref></type>
        <definition>operator_type QuantLib::TRBDF2&lt; Operator &gt;::L_</definition>
        <argsstring></argsstring>
        <name>L_</name>
        <qualifiedname>QuantLib::TRBDF2::L_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/trbdf2.hpp" line="99" column="23" bodyfile="ql/methods/finitedifferences/trbdf2.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_t_r_b_d_f2_1afa8e62bf7b7af6811deb2397c88ecde4" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_fdm_linear_op" kindref="compound">operator_type</ref></type>
        <definition>operator_type QuantLib::TRBDF2&lt; Operator &gt;::I_</definition>
        <argsstring></argsstring>
        <name>I_</name>
        <qualifiedname>QuantLib::TRBDF2::I_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/trbdf2.hpp" line="99" column="26" bodyfile="ql/methods/finitedifferences/trbdf2.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_t_r_b_d_f2_1a61d8718adfa81a47da621a9a3f8339ee" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_fdm_linear_op" kindref="compound">operator_type</ref></type>
        <definition>operator_type QuantLib::TRBDF2&lt; Operator &gt;::explicitTrapezoidalPart_</definition>
        <argsstring></argsstring>
        <name>explicitTrapezoidalPart_</name>
        <qualifiedname>QuantLib::TRBDF2::explicitTrapezoidalPart_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/trbdf2.hpp" line="99" column="29" bodyfile="ql/methods/finitedifferences/trbdf2.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_t_r_b_d_f2_1a2cfc8f1c1fe34b4c4ebd91ec7b0cedc7" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_fdm_linear_op" kindref="compound">operator_type</ref></type>
        <definition>operator_type QuantLib::TRBDF2&lt; Operator &gt;::explicitBDF2PartFull_</definition>
        <argsstring></argsstring>
        <name>explicitBDF2PartFull_</name>
        <qualifiedname>QuantLib::TRBDF2::explicitBDF2PartFull_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/trbdf2.hpp" line="100" column="13" bodyfile="ql/methods/finitedifferences/trbdf2.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_t_r_b_d_f2_1ad6d1aa38ba488b15aaa15065d6360ae4" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_fdm_linear_op" kindref="compound">operator_type</ref></type>
        <definition>operator_type QuantLib::TRBDF2&lt; Operator &gt;::explicitBDF2PartMid_</definition>
        <argsstring></argsstring>
        <name>explicitBDF2PartMid_</name>
        <qualifiedname>QuantLib::TRBDF2::explicitBDF2PartMid_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/trbdf2.hpp" line="100" column="34" bodyfile="ql/methods/finitedifferences/trbdf2.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_t_r_b_d_f2_1af30989ef9bf121a36cf52fb45c913b62" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_fdm_linear_op" kindref="compound">operator_type</ref></type>
        <definition>operator_type QuantLib::TRBDF2&lt; Operator &gt;::implicitPart_</definition>
        <argsstring></argsstring>
        <name>implicitPart_</name>
        <qualifiedname>QuantLib::TRBDF2::implicitPart_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/trbdf2.hpp" line="100" column="55" bodyfile="ql/methods/finitedifferences/trbdf2.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_t_r_b_d_f2_1a213b70a4fedd3b9ae8e495e4aa5e76c2" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>Time QuantLib::TRBDF2&lt; Operator &gt;::dt_</definition>
        <argsstring></argsstring>
        <name>dt_</name>
        <qualifiedname>QuantLib::TRBDF2::dt_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/trbdf2.hpp" line="101" column="14" bodyfile="ql/methods/finitedifferences/trbdf2.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_t_r_b_d_f2_1a0893500682ee305ead0d878f686ea703" prot="private" static="no" mutable="no">
        <type>bc_set</type>
        <definition>bc_set QuantLib::TRBDF2&lt; Operator &gt;::bcs_</definition>
        <argsstring></argsstring>
        <name>bcs_</name>
        <qualifiedname>QuantLib::TRBDF2::bcs_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/trbdf2.hpp" line="102" column="16" bodyfile="ql/methods/finitedifferences/trbdf2.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_t_r_b_d_f2_1a1e6a3b28372bf8089d02d3c6dfe22ff2" prot="private" static="no" mutable="no">
        <type>array_type</type>
        <definition>array_type QuantLib::TRBDF2&lt; Operator &gt;::aInit_</definition>
        <argsstring></argsstring>
        <name>aInit_</name>
        <qualifiedname>QuantLib::TRBDF2::aInit_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/trbdf2.hpp" line="103" column="20" bodyfile="ql/methods/finitedifferences/trbdf2.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_t_r_b_d_f2_1ac56d418017b3d3455e7df56fdf0cde84" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::TRBDF2&lt; Operator &gt;::TRBDF2</definition>
        <argsstring>(const operator_type &amp;L, const bc_set &amp;bcs)</argsstring>
        <name>TRBDF2</name>
        <qualifiedname>QuantLib::TRBDF2::TRBDF2</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_fdm_linear_op" kindref="compound">operator_type</ref> &amp;</type>
          <declname>L</declname>
        </param>
        <param>
          <type>const bc_set &amp;</type>
          <declname>bcs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/trbdf2.hpp" line="82" column="9" bodyfile="ql/methods/finitedifferences/trbdf2.hpp" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_t_r_b_d_f2_1aadc11c7b8bbfb07621d9924baac0276d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::TRBDF2&lt; Operator &gt;::step</definition>
        <argsstring>(array_type &amp;a, Time t)</argsstring>
        <name>step</name>
        <qualifiedname>QuantLib::TRBDF2::step</qualifiedname>
        <param>
          <type>array_type &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/trbdf2.hpp" line="86" column="14" bodyfile="ql/methods/finitedifferences/trbdf2.hpp" bodystart="110" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_t_r_b_d_f2_1aa3a6e5e2f59ab908455262ad7ebac0a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::TRBDF2&lt; Operator &gt;::setStep</definition>
        <argsstring>(Time dt)</argsstring>
        <name>setStep</name>
        <qualifiedname>QuantLib::TRBDF2::setStep</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/trbdf2.hpp" line="88" column="14" bodyfile="ql/methods/finitedifferences/trbdf2.hpp" bodystart="88" bodyend="96"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>TR-BDF2 scheme for finite difference methods. </para>
    </briefdescription>
    <detaileddescription>
<para>See <ulink url="http://ssrn.com/abstract=1648878">http://ssrn.com/abstract=1648878</ulink> for details.</para>
<para>In this implementation, the passed operator must be derived from either TimeConstantOperator or TimeDependentOperator. Also, it must implement at least the following interface:</para>
<para><programlisting><codeline><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>...<sp/>array_type;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>copy<sp/>constructor/assignment</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>(these<sp/>will<sp/>be<sp/>provided<sp/>by<sp/>the<sp/>compiler<sp/>if<sp/>none<sp/>is<sp/>defined)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">Operator(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Operator&amp;);</highlight></codeline>
<codeline><highlight class="normal">Operator&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Operator&amp;);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>inspectors</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>size();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>modifiers</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setTime(<ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref><sp/>t);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>operator<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">array_type<sp/>applyTo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>array_type&amp;);</highlight></codeline>
<codeline><highlight class="normal">array_type<sp/>solveFor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>array_type&amp;);</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>Operator<sp/>identity(<ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref><sp/>size);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>operator<sp/>algebra</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">Operator<sp/>operator*(<ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Operator&amp;);</highlight></codeline>
<codeline><highlight class="normal">Operator<sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Operator&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Operator&amp;);</highlight></codeline>
<codeline><highlight class="normal">Operator<sp/>operator+(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Operator&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Operator&amp;);</highlight></codeline>
</programlisting></para>
<para><simplesect kind="warning"><para>The differential operator must be linear for this evolver to work. </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="ql/methods/finitedifferences/trbdf2.hpp" line="73" column="5" bodyfile="ql/methods/finitedifferences/trbdf2.hpp" bodystart="73" bodyend="104"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_t_r_b_d_f2_1a1e6a3b28372bf8089d02d3c6dfe22ff2" prot="private" virt="non-virtual"><scope>QuantLib::TRBDF2</scope><name>aInit_</name></member>
      <member refid="class_quant_lib_1_1_t_r_b_d_f2_1a6296a98bceabd20cb1b65af7cc212ae7" prot="private" virt="non-virtual"><scope>QuantLib::TRBDF2</scope><name>alpha_</name></member>
      <member refid="class_quant_lib_1_1_t_r_b_d_f2_1aff0f410539b20a69b0abb3f633be7b9c" prot="public" virt="non-virtual"><scope>QuantLib::TRBDF2</scope><name>array_type</name></member>
      <member refid="class_quant_lib_1_1_t_r_b_d_f2_1ab1dc7bbe7228f6f30dfc07a45552d6eb" prot="public" virt="non-virtual"><scope>QuantLib::TRBDF2</scope><name>bc_set</name></member>
      <member refid="class_quant_lib_1_1_t_r_b_d_f2_1a0893500682ee305ead0d878f686ea703" prot="private" virt="non-virtual"><scope>QuantLib::TRBDF2</scope><name>bcs_</name></member>
      <member refid="class_quant_lib_1_1_t_r_b_d_f2_1a769653c4500c9cfcf6cb3d0ea2cb45ea" prot="public" virt="non-virtual"><scope>QuantLib::TRBDF2</scope><name>condition_type</name></member>
      <member refid="class_quant_lib_1_1_t_r_b_d_f2_1a213b70a4fedd3b9ae8e495e4aa5e76c2" prot="private" virt="non-virtual"><scope>QuantLib::TRBDF2</scope><name>dt_</name></member>
      <member refid="class_quant_lib_1_1_t_r_b_d_f2_1a2cfc8f1c1fe34b4c4ebd91ec7b0cedc7" prot="private" virt="non-virtual"><scope>QuantLib::TRBDF2</scope><name>explicitBDF2PartFull_</name></member>
      <member refid="class_quant_lib_1_1_t_r_b_d_f2_1ad6d1aa38ba488b15aaa15065d6360ae4" prot="private" virt="non-virtual"><scope>QuantLib::TRBDF2</scope><name>explicitBDF2PartMid_</name></member>
      <member refid="class_quant_lib_1_1_t_r_b_d_f2_1a61d8718adfa81a47da621a9a3f8339ee" prot="private" virt="non-virtual"><scope>QuantLib::TRBDF2</scope><name>explicitTrapezoidalPart_</name></member>
      <member refid="class_quant_lib_1_1_t_r_b_d_f2_1afa8e62bf7b7af6811deb2397c88ecde4" prot="private" virt="non-virtual"><scope>QuantLib::TRBDF2</scope><name>I_</name></member>
      <member refid="class_quant_lib_1_1_t_r_b_d_f2_1af30989ef9bf121a36cf52fb45c913b62" prot="private" virt="non-virtual"><scope>QuantLib::TRBDF2</scope><name>implicitPart_</name></member>
      <member refid="class_quant_lib_1_1_t_r_b_d_f2_1a064cc316454bd20e4b35ec81b64b6d03" prot="private" virt="non-virtual"><scope>QuantLib::TRBDF2</scope><name>L_</name></member>
      <member refid="class_quant_lib_1_1_t_r_b_d_f2_1af4336ba9371ea3c29dddbdb8fe5fc5c7" prot="public" virt="non-virtual"><scope>QuantLib::TRBDF2</scope><name>operator_type</name></member>
      <member refid="class_quant_lib_1_1_t_r_b_d_f2_1aa3a6e5e2f59ab908455262ad7ebac0a5" prot="public" virt="non-virtual"><scope>QuantLib::TRBDF2</scope><name>setStep</name></member>
      <member refid="class_quant_lib_1_1_t_r_b_d_f2_1aadc11c7b8bbfb07621d9924baac0276d" prot="public" virt="non-virtual"><scope>QuantLib::TRBDF2</scope><name>step</name></member>
      <member refid="class_quant_lib_1_1_t_r_b_d_f2_1a8ec765604518a56e925d52eb09a8d3f3" prot="public" virt="non-virtual"><scope>QuantLib::TRBDF2</scope><name>traits</name></member>
      <member refid="class_quant_lib_1_1_t_r_b_d_f2_1ac56d418017b3d3455e7df56fdf0cde84" prot="public" virt="non-virtual"><scope>QuantLib::TRBDF2</scope><name>TRBDF2</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_floating_rate_coupon_pricer" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::FloatingRateCouponPricer</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_observer" prot="public" virt="virtual">QuantLib::Observer</basecompoundref>
    <basecompoundref refid="class_quant_lib_1_1_observable" prot="public" virt="virtual">QuantLib::Observable</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer" prot="public" virt="non-virtual">QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_cms_coupon_pricer" prot="public" virt="non-virtual">QuantLib::CmsCouponPricer</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_cms_spread_coupon_pricer" prot="public" virt="non-virtual">QuantLib::CmsSpreadCouponPricer</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_compounding_overnight_indexed_coupon_pricer" prot="public" virt="non-virtual">QuantLib::CompoundingOvernightIndexedCouponPricer</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_ibor_coupon_pricer" prot="public" virt="non-virtual">QuantLib::IborCouponPricer</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_multiple_resets_pricer" prot="public" virt="non-virtual">QuantLib::MultipleResetsPricer</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_range_accrual_pricer" prot="public" virt="non-virtual">QuantLib::RangeAccrualPricer</derivedcompoundref>
    <includes refid="couponpricer_8hpp" local="no">couponpricer.hpp</includes>
    <sectiondef kind="user-defined">
      <header>required interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_floating_rate_coupon_pricer_1a30dad486d36c708d9cfe35e72a69d9fa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::FloatingRateCouponPricer::swapletPrice</definition>
        <argsstring>() const =0</argsstring>
        <name>swapletPrice</name>
        <qualifiedname>QuantLib::FloatingRateCouponPricer::swapletPrice</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_analytic_hagan_pricer_1ae82c6402d7ed287309ed5590085dad37">swapletPrice</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1a6c44f5aa5104c1741751a4ced044a702">swapletPrice</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_black_ibor_coupon_pricer_1afd2af6dbf36c7e433c1fefbcb48df192">swapletPrice</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_compounding_overnight_indexed_coupon_pricer_1af25992d73a5d610091ba0d6f7ff5302d">swapletPrice</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_hagan_pricer_1a23c1dcf84cbc7cd88b76215d8ca1e83e">swapletPrice</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_linear_tsr_pricer_1a5ea6ef00528063f0ffbec88c6649c934">swapletPrice</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_lognormal_cms_spread_pricer_1a830ac5849e62a01ecc3e06a017023d8e">swapletPrice</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_multiple_resets_pricer_1ab4009570b84bcb04fd8aeca669e38794">swapletPrice</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_numeric_hagan_pricer_1a96e21890a4fcf0bd63bbd36282c4ed67">swapletPrice</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1a59275da90082a9b4134a59e7f69f4c62">swapletPrice</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/couponpricer.hpp" line="51" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_floating_rate_coupon_pricer_1a99682076c5aa2992d6cab3acf092d1c6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>virtual Rate QuantLib::FloatingRateCouponPricer::swapletRate</definition>
        <argsstring>() const =0</argsstring>
        <name>swapletRate</name>
        <qualifiedname>QuantLib::FloatingRateCouponPricer::swapletRate</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1a2ccadafaf4cee80b71e9347b3cc6a46f">swapletRate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_averaging_multiple_resets_pricer_1aebadfab2369f3ece73152cc0609f4e7a">swapletRate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_black_ibor_coupon_pricer_1a8b04723eb919737c85615d459ebc1b1f">swapletRate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_compounding_multiple_resets_pricer_1af422e4d64a102433a24357018ec049e6">swapletRate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_compounding_overnight_indexed_coupon_pricer_1a440694290774cc52131da007ef81f0a8">swapletRate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_hagan_pricer_1a936eae5b3db4b98524ec31ccfdd7d18a">swapletRate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_linear_tsr_pricer_1a78d7f6a2b11ab51b7ed69f8a7578bc3a">swapletRate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_lognormal_cms_spread_pricer_1ae3c7abc5ffa02ab54961a0f6d6b362c5">swapletRate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_range_accrual_pricer_1ac0af2ca5b2cc152b7b0b9cf2bf09c08b">swapletRate</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/couponpricer.hpp" line="52" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_floating_rate_coupon_pricer_1ad7c3af9e13ded8736c1bf0e5df0fdfe7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::FloatingRateCouponPricer::capletPrice</definition>
        <argsstring>(Rate effectiveCap) const =0</argsstring>
        <name>capletPrice</name>
        <qualifiedname>QuantLib::FloatingRateCouponPricer::capletPrice</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1abae10a24b03d2eeae0dd1a2648641ed5">capletPrice</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_black_ibor_coupon_pricer_1a4bbf8d6aabb66285ae51c86d34341512">capletPrice</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_compounding_overnight_indexed_coupon_pricer_1af9846c0a01229a0ffaa5f9de61ae5593">capletPrice</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_hagan_pricer_1ab979dea0c4f774e5f180c898ebd25d27">capletPrice</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_linear_tsr_pricer_1a8eef702f90f74a405d4595be015832c9">capletPrice</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_lognormal_cms_spread_pricer_1af3763bf0e9495b4d5e96e88a4a0bfc54">capletPrice</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_multiple_resets_pricer_1a7aa68d167c4fec106b6cd7cd715b0073">capletPrice</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_range_accrual_pricer_1ad302610069c32fcba2f781a219f1331b">capletPrice</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>effectiveCap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/couponpricer.hpp" line="53" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_floating_rate_coupon_pricer_1aac66313cfaae17dc11ced8ac79aae0b1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>virtual Rate QuantLib::FloatingRateCouponPricer::capletRate</definition>
        <argsstring>(Rate effectiveCap) const =0</argsstring>
        <name>capletRate</name>
        <qualifiedname>QuantLib::FloatingRateCouponPricer::capletRate</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1a8f70423845ca5dfde21561dd33b4d1ac">capletRate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_black_ibor_coupon_pricer_1a9a00c1d3cebb0cf91363e03bd592b244">capletRate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_compounding_overnight_indexed_coupon_pricer_1a9e7b46fc5cc43107c56c4a82f183332f">capletRate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_hagan_pricer_1a288318fbfbe1d64a374d27e84569154e">capletRate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_linear_tsr_pricer_1ae6ff3d2ee9ef4bf9b3f06843fbd77b98">capletRate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_lognormal_cms_spread_pricer_1ae6bb1c195e384866277ce085d5f3de4a">capletRate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_multiple_resets_pricer_1a4ace509b884b997a0a87bad57ab549e1">capletRate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_range_accrual_pricer_1a256a524cb59c7be62f1c2482592c744d">capletRate</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>effectiveCap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/couponpricer.hpp" line="54" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_floating_rate_coupon_pricer_1a1698d77f971242c8907909e84613a00a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::FloatingRateCouponPricer::floorletPrice</definition>
        <argsstring>(Rate effectiveFloor) const =0</argsstring>
        <name>floorletPrice</name>
        <qualifiedname>QuantLib::FloatingRateCouponPricer::floorletPrice</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1a95925b49ca30390ff42d84fcdb3878d5">floorletPrice</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_black_ibor_coupon_pricer_1a0dc31ec1e68cb58bf1c241451f70ccd2">floorletPrice</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_compounding_overnight_indexed_coupon_pricer_1a1efc6873ca0234f052ee99a22a830c7c">floorletPrice</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_hagan_pricer_1a5d039bcea481f2244f05d81a151ee8fa">floorletPrice</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_linear_tsr_pricer_1a637409b9c3f78d1e008fc75983392fd2">floorletPrice</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_lognormal_cms_spread_pricer_1a31ff060447628dd93124fb2fd7d40812">floorletPrice</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_multiple_resets_pricer_1a99712f5a036ddd59e33610e7ab795ce6">floorletPrice</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_range_accrual_pricer_1a6c06465ac0f7c5768550dd9d8a48e99d">floorletPrice</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>effectiveFloor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/couponpricer.hpp" line="55" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_floating_rate_coupon_pricer_1ac72336ef70f62c68f1af26c5868d461c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>virtual Rate QuantLib::FloatingRateCouponPricer::floorletRate</definition>
        <argsstring>(Rate effectiveFloor) const =0</argsstring>
        <name>floorletRate</name>
        <qualifiedname>QuantLib::FloatingRateCouponPricer::floorletRate</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1ade4129436554116f2fa4c1f46503d029">floorletRate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_black_ibor_coupon_pricer_1ae45f9bf7907fec3449147011464270f4">floorletRate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_compounding_overnight_indexed_coupon_pricer_1a1b10de2672f2c1a518f904bba7b46252">floorletRate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_hagan_pricer_1ae82ed430056a41ff6eb5452c1a506572">floorletRate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_linear_tsr_pricer_1abf4062ffe0810ec0858c189e5e2aadf2">floorletRate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_lognormal_cms_spread_pricer_1a184efb1855250dc0aae4243bc293fd05">floorletRate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_multiple_resets_pricer_1a3dafa7000744c8ccdcb031bd7c6c0c70">floorletRate</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_range_accrual_pricer_1a2bbaf881fb74ba2ad1cb85d3192bda6e">floorletRate</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>effectiveFloor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/couponpricer.hpp" line="56" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_floating_rate_coupon_pricer_1a6fa43469232d5549a1a68bffcf851035" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void QuantLib::FloatingRateCouponPricer::initialize</definition>
        <argsstring>(const FloatingRateCoupon &amp;coupon)=0</argsstring>
        <name>initialize</name>
        <qualifiedname>QuantLib::FloatingRateCouponPricer::initialize</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer_1adc2aff614f07a65e70522f759c85458b">initialize</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_black_ibor_coupon_pricer_1ab97c64a0c88040b5b336655ea442cf26">initialize</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_compounding_overnight_indexed_coupon_pricer_1a41dc53b7bb5cd1766d7c52e28497e613">initialize</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_hagan_pricer_1a738b144efbbd7933b5a2b7b0d9e8be69">initialize</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_ibor_coupon_pricer_1a6bc184b85d08e64f1871eff3f940bceb">initialize</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_linear_tsr_pricer_1a8bbb6364d654c5ff70d12e907484bab2">initialize</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_lognormal_cms_spread_pricer_1adb05b822360ed08112332eb713378110">initialize</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_multiple_resets_pricer_1a1b3cc1cdbeb86cb8923eb6d47dac648c">initialize</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_range_accrual_pricer_1af39239891dcf2da8a011755bc4d43e80">initialize</reimplementedby>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_floating_rate_coupon" kindref="compound">FloatingRateCoupon</ref> &amp;</type>
          <declname>coupon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/couponpricer.hpp" line="57" column="22"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Observer interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_floating_rate_coupon_pricer_1a43d7327d65789c0feda11e80a589ad57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::FloatingRateCouponPricer::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <qualifiedname>QuantLib::FloatingRateCouponPricer::update</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_observer_1a07905c55dca858470fcf4a1aea0005aa">update</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must be implemented in derived classes. An instance of Observer does not call this method directly: instead, it will be called by the observables the instance registered with when they need to notify any changes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/couponpricer.hpp" line="61" column="14" bodyfile="ql/cashflows/couponpricer.hpp" bodystart="61" bodyend="61"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_floating_rate_coupon_pricer_1af1a82cce3d2ea5e343e556ad4c40b5d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FloatingRateCouponPricer::~FloatingRateCouponPricer</definition>
        <argsstring>() override=default</argsstring>
        <name>~FloatingRateCouponPricer</name>
        <qualifiedname>QuantLib::FloatingRateCouponPricer::~FloatingRateCouponPricer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/couponpricer.hpp" line="48" column="9"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>generic pricer for floating-rate coupons </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="7">
        <label>QuantLib::AnalyticHaganPricer</label>
        <link refid="class_quant_lib_1_1_analytic_hagan_pricer"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::ArithmeticAveragedOvernightIndexedCouponPricer</label>
        <link refid="class_quant_lib_1_1_arithmetic_averaged_overnight_indexed_coupon_pricer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>QuantLib::AveragingMultipleResetsPricer</label>
        <link refid="class_quant_lib_1_1_averaging_multiple_resets_pricer"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>QuantLib::BlackIborCouponPricer</label>
        <link refid="class_quant_lib_1_1_black_ibor_coupon_pricer"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>QuantLib::BlackIborQuantoCouponPricer</label>
        <link refid="class_quant_lib_1_1_black_ibor_quanto_coupon_pricer"/>
        <childnode refid="14" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::CmsCouponPricer</label>
        <link refid="class_quant_lib_1_1_cms_coupon_pricer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QuantLib::CmsSpreadCouponPricer</label>
        <link refid="class_quant_lib_1_1_cms_spread_coupon_pricer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>QuantLib::CompoundingMultipleResetsPricer</label>
        <link refid="class_quant_lib_1_1_compounding_multiple_resets_pricer"/>
        <childnode refid="16" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>QuantLib::CompoundingOvernightIndexedCouponPricer</label>
        <link refid="class_quant_lib_1_1_compounding_overnight_indexed_coupon_pricer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::FloatingRateCouponPricer</label>
        <link refid="class_quant_lib_1_1_floating_rate_coupon_pricer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::HaganPricer</label>
        <link refid="class_quant_lib_1_1_hagan_pricer"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>QuantLib::IborCouponPricer</label>
        <link refid="class_quant_lib_1_1_ibor_coupon_pricer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QuantLib::LinearTsrPricer</label>
        <link refid="class_quant_lib_1_1_linear_tsr_pricer"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>QuantLib::LognormalCmsSpreadPricer</label>
        <link refid="class_quant_lib_1_1_lognormal_cms_spread_pricer"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>QuantLib::MultipleResetsPricer</label>
        <link refid="class_quant_lib_1_1_multiple_resets_pricer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::NumericHaganPricer</label>
        <link refid="class_quant_lib_1_1_numeric_hagan_pricer"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="2">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="19">
        <label>QuantLib::RangeAccrualPricer</label>
        <link refid="class_quant_lib_1_1_range_accrual_pricer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>QuantLib::RangeAccrualPricerByBgm</label>
        <link refid="class_quant_lib_1_1_range_accrual_pricer_by_bgm"/>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::FloatingRateCouponPricer</label>
        <link refid="class_quant_lib_1_1_floating_rate_coupon_pricer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="2">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </collaborationgraph>
    <location file="ql/cashflows/couponpricer.hpp" line="45" column="5" bodyfile="ql/cashflows/couponpricer.hpp" bodystart="46" bodyend="63"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_floating_rate_coupon_pricer_1ad7c3af9e13ded8736c1bf0e5df0fdfe7" prot="public" virt="pure-virtual"><scope>QuantLib::FloatingRateCouponPricer</scope><name>capletPrice</name></member>
      <member refid="class_quant_lib_1_1_floating_rate_coupon_pricer_1aac66313cfaae17dc11ced8ac79aae0b1" prot="public" virt="pure-virtual"><scope>QuantLib::FloatingRateCouponPricer</scope><name>capletRate</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::FloatingRateCouponPricer</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_floating_rate_coupon_pricer_1a1698d77f971242c8907909e84613a00a" prot="public" virt="pure-virtual"><scope>QuantLib::FloatingRateCouponPricer</scope><name>floorletPrice</name></member>
      <member refid="class_quant_lib_1_1_floating_rate_coupon_pricer_1ac72336ef70f62c68f1af26c5868d461c" prot="public" virt="pure-virtual"><scope>QuantLib::FloatingRateCouponPricer</scope><name>floorletRate</name></member>
      <member refid="class_quant_lib_1_1_floating_rate_coupon_pricer_1a6fa43469232d5549a1a68bffcf851035" prot="public" virt="pure-virtual"><scope>QuantLib::FloatingRateCouponPricer</scope><name>initialize</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::FloatingRateCouponPricer</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::FloatingRateCouponPricer</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::FloatingRateCouponPricer</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::FloatingRateCouponPricer</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::FloatingRateCouponPricer</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::FloatingRateCouponPricer</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::FloatingRateCouponPricer</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::FloatingRateCouponPricer</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::FloatingRateCouponPricer</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::FloatingRateCouponPricer</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::FloatingRateCouponPricer</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::FloatingRateCouponPricer</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_floating_rate_coupon_pricer_1a30dad486d36c708d9cfe35e72a69d9fa" prot="public" virt="pure-virtual"><scope>QuantLib::FloatingRateCouponPricer</scope><name>swapletPrice</name></member>
      <member refid="class_quant_lib_1_1_floating_rate_coupon_pricer_1a99682076c5aa2992d6cab3acf092d1c6" prot="public" virt="pure-virtual"><scope>QuantLib::FloatingRateCouponPricer</scope><name>swapletRate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::FloatingRateCouponPricer</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::FloatingRateCouponPricer</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_floating_rate_coupon_pricer_1a43d7327d65789c0feda11e80a589ad57" prot="public" virt="virtual"><scope>QuantLib::FloatingRateCouponPricer</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_floating_rate_coupon_pricer_1af1a82cce3d2ea5e343e556ad4c40b5d5" prot="public" virt="non-virtual"><scope>QuantLib::FloatingRateCouponPricer</scope><name>~FloatingRateCouponPricer</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::FloatingRateCouponPricer</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::FloatingRateCouponPricer</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

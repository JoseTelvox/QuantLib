<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_non_linear_least_square" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::NonLinearLeastSquare</compoundname>
    <includes refid="leastsquare_8hpp" local="no">leastsquare.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_non_linear_least_square_1a5b0314d2df58dec8198cb29e9df91873" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::NonLinearLeastSquare::results_</definition>
        <argsstring></argsstring>
        <name>results_</name>
        <qualifiedname>QuantLib::NonLinearLeastSquare::results_</qualifiedname>
        <briefdescription>
<para>solution vector </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/leastsquare.hpp" line="135" column="15" bodyfile="ql/math/optimization/leastsquare.hpp" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_non_linear_least_square_1ae09b7f76fa20730243732bf6226e222d" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::NonLinearLeastSquare::initialValue_</definition>
        <argsstring></argsstring>
        <name>initialValue_</name>
        <qualifiedname>QuantLib::NonLinearLeastSquare::initialValue_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/leastsquare.hpp" line="135" column="24" bodyfile="ql/math/optimization/leastsquare.hpp" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_non_linear_least_square_1ac5932215e96fc59f757949e488461eb6" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::NonLinearLeastSquare::resnorm_</definition>
        <argsstring></argsstring>
        <name>resnorm_</name>
        <qualifiedname>QuantLib::NonLinearLeastSquare::resnorm_</qualifiedname>
        <briefdescription>
<para>least square residual norm </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/leastsquare.hpp" line="137" column="14" bodyfile="ql/math/optimization/leastsquare.hpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_non_linear_least_square_1a1f800fe7fa2d600917343d9509a655b4" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
        <definition>Integer QuantLib::NonLinearLeastSquare::exitFlag_</definition>
        <argsstring></argsstring>
        <name>exitFlag_</name>
        <qualifiedname>QuantLib::NonLinearLeastSquare::exitFlag_</qualifiedname>
        <briefdescription>
<para>Exit flag of the optimization process. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/leastsquare.hpp" line="139" column="17" bodyfile="ql/math/optimization/leastsquare.hpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_non_linear_least_square_1a674fee44d03fb37ee2391def1102f5f3" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::NonLinearLeastSquare::accuracy_</definition>
        <argsstring></argsstring>
        <name>accuracy_</name>
        <qualifiedname>QuantLib::NonLinearLeastSquare::accuracy_</qualifiedname>
        <briefdescription>
<para>required accuracy of the solver </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/leastsquare.hpp" line="141" column="14" bodyfile="ql/math/optimization/leastsquare.hpp" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_non_linear_least_square_1a4e0b847c240f9e0e3647e3803182097f" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::NonLinearLeastSquare::bestAccuracy_</definition>
        <argsstring></argsstring>
        <name>bestAccuracy_</name>
        <qualifiedname>QuantLib::NonLinearLeastSquare::bestAccuracy_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/leastsquare.hpp" line="141" column="24" bodyfile="ql/math/optimization/leastsquare.hpp" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_non_linear_least_square_1acd1cc2a9d32d0ca58d3cf61e3b88ddf2" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::NonLinearLeastSquare::maxIterations_</definition>
        <argsstring></argsstring>
        <name>maxIterations_</name>
        <qualifiedname>QuantLib::NonLinearLeastSquare::maxIterations_</qualifiedname>
        <briefdescription>
<para>maximum and real number of iterations </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/leastsquare.hpp" line="143" column="14" bodyfile="ql/math/optimization/leastsquare.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_non_linear_least_square_1ad9166b36fa4e0057410bb44f5b10ccd2" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::NonLinearLeastSquare::nbIterations_</definition>
        <argsstring></argsstring>
        <name>nbIterations_</name>
        <qualifiedname>QuantLib::NonLinearLeastSquare::nbIterations_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/leastsquare.hpp" line="143" column="29" bodyfile="ql/math/optimization/leastsquare.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_non_linear_least_square_1a7d89e8e56caec5a5533303ae271c5313" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_optimization_method" kindref="compound">OptimizationMethod</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;OptimizationMethod&gt; QuantLib::NonLinearLeastSquare::om_</definition>
        <argsstring></argsstring>
        <name>om_</name>
        <qualifiedname>QuantLib::NonLinearLeastSquare::om_</qualifiedname>
        <briefdescription>
<para>Optimization method. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/leastsquare.hpp" line="145" column="25" bodyfile="ql/math/optimization/leastsquare.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_non_linear_least_square_1a43ba3d5d940e2258ef6a8bb25a2e0bdb" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_constraint" kindref="compound">Constraint</ref> &amp;</type>
        <definition>Constraint&amp; QuantLib::NonLinearLeastSquare::c_</definition>
        <argsstring></argsstring>
        <name>c_</name>
        <qualifiedname>QuantLib::NonLinearLeastSquare::c_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/leastsquare.hpp" line="147" column="20" bodyfile="ql/math/optimization/leastsquare.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_non_linear_least_square_1a989163a674b3794357f22d17d449d992" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::NonLinearLeastSquare::NonLinearLeastSquare</definition>
        <argsstring>(Constraint &amp;c, Real accuracy=1e-4, Size maxiter=100)</argsstring>
        <name>NonLinearLeastSquare</name>
        <qualifiedname>QuantLib::NonLinearLeastSquare::NonLinearLeastSquare</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_constraint" kindref="compound">Constraint</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>accuracy</declname>
          <defval>1e-4</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>maxiter</declname>
          <defval>100</defval>
        </param>
        <briefdescription>
<para><ref refid="struct_quant_lib_1_1_default" kindref="compound">Default</ref> constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/leastsquare.hpp" line="100" column="9" bodyfile="ql/math/optimization/leastsquare.cpp" bodystart="79" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_non_linear_least_square_1a5b6231508c3eb21b0e7407da8a05d2b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::NonLinearLeastSquare::NonLinearLeastSquare</definition>
        <argsstring>(Constraint &amp;c, Real accuracy, Size maxiter, ext::shared_ptr&lt; OptimizationMethod &gt; om)</argsstring>
        <name>NonLinearLeastSquare</name>
        <qualifiedname>QuantLib::NonLinearLeastSquare::NonLinearLeastSquare</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_constraint" kindref="compound">Constraint</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>accuracy</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>maxiter</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_optimization_method" kindref="compound">OptimizationMethod</ref> &gt;</type>
          <declname>om</declname>
        </param>
        <briefdescription>
<para><ref refid="struct_quant_lib_1_1_default" kindref="compound">Default</ref> constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/leastsquare.hpp" line="104" column="9" bodyfile="ql/math/optimization/leastsquare.cpp" bodystart="87" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_non_linear_least_square_1a445a60cfc2bb26a1b5299c63dba9c1c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::NonLinearLeastSquare::~NonLinearLeastSquare</definition>
        <argsstring>()=default</argsstring>
        <name>~NonLinearLeastSquare</name>
        <qualifiedname>QuantLib::NonLinearLeastSquare::~NonLinearLeastSquare</qualifiedname>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/leastsquare.hpp" line="109" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_non_linear_least_square_1a5c7ffa6921477739ce368886b88822da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
        <definition>Array &amp; QuantLib::NonLinearLeastSquare::perform</definition>
        <argsstring>(LeastSquareProblem &amp;lsProblem)</argsstring>
        <name>perform</name>
        <qualifiedname>QuantLib::NonLinearLeastSquare::perform</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_least_square_problem" kindref="compound">LeastSquareProblem</ref> &amp;</type>
          <declname>lsProblem</declname>
        </param>
        <briefdescription>
<para>Solve least square problem using numerix solver. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/leastsquare.hpp" line="112" column="15" bodyfile="ql/math/optimization/leastsquare.cpp" bodystart="93" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_non_linear_least_square_1aa91382ab8febe477d49ee7a453e371a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::NonLinearLeastSquare::setInitialValue</definition>
        <argsstring>(const Array &amp;initialValue)</argsstring>
        <name>setInitialValue</name>
        <qualifiedname>QuantLib::NonLinearLeastSquare::setInitialValue</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>initialValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/leastsquare.hpp" line="114" column="14" bodyfile="ql/math/optimization/leastsquare.hpp" bodystart="114" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_non_linear_least_square_1ad2622844d1b341814a13f193f4211322" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
        <definition>Array &amp; QuantLib::NonLinearLeastSquare::results</definition>
        <argsstring>()</argsstring>
        <name>results</name>
        <qualifiedname>QuantLib::NonLinearLeastSquare::results</qualifiedname>
        <briefdescription>
<para>return the results </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/leastsquare.hpp" line="119" column="15" bodyfile="ql/math/optimization/leastsquare.hpp" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_non_linear_least_square_1acd5b7656d024a0579e0c5458f6226af5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::NonLinearLeastSquare::residualNorm</definition>
        <argsstring>() const</argsstring>
        <name>residualNorm</name>
        <qualifiedname>QuantLib::NonLinearLeastSquare::residualNorm</qualifiedname>
        <briefdescription>
<para>return the least square residual norm </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/leastsquare.hpp" line="122" column="14" bodyfile="ql/math/optimization/leastsquare.hpp" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_non_linear_least_square_1a806ffdd3b7ee736227b3a439c144b519" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::NonLinearLeastSquare::lastValue</definition>
        <argsstring>() const</argsstring>
        <name>lastValue</name>
        <qualifiedname>QuantLib::NonLinearLeastSquare::lastValue</qualifiedname>
        <briefdescription>
<para>return last function value </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/leastsquare.hpp" line="125" column="14" bodyfile="ql/math/optimization/leastsquare.hpp" bodystart="125" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_non_linear_least_square_1a6ee69f96d4bf0bfdb08d77064da7e3e9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
        <definition>Integer QuantLib::NonLinearLeastSquare::exitFlag</definition>
        <argsstring>() const</argsstring>
        <name>exitFlag</name>
        <qualifiedname>QuantLib::NonLinearLeastSquare::exitFlag</qualifiedname>
        <briefdescription>
<para>return exit flag </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/leastsquare.hpp" line="128" column="17" bodyfile="ql/math/optimization/leastsquare.hpp" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_non_linear_least_square_1a3bb6c55bf31197ff80cde30246a34e00" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
        <definition>Integer QuantLib::NonLinearLeastSquare::iterationsNumber</definition>
        <argsstring>() const</argsstring>
        <name>iterationsNumber</name>
        <qualifiedname>QuantLib::NonLinearLeastSquare::iterationsNumber</qualifiedname>
        <briefdescription>
<para>return the performed number of iterations </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/leastsquare.hpp" line="131" column="17" bodyfile="ql/math/optimization/leastsquare.hpp" bodystart="131" bodyend="131"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Non-linear least-square method. </para>
    </briefdescription>
    <detaileddescription>
<para>Using a given optimization algorithm (default is conjugate gradient),</para>
<para><formula id="312">\[ min \{ r(x) : x in R^n \} \]</formula></para>
<para>where <formula id="313">$ r(x) = |f(x)|^2 $</formula> is the Euclidean norm of  <formula id="314">$f(x) $</formula> for some vector-valued function <formula id="82">$ f $</formula> from <formula id="315">$ R^n $</formula> to <formula id="316">$ R^m $</formula>, <formula id="317">\[ f = (f_1, ..., f_m) \]</formula> with <formula id="318">$ f_i(x) = b_i - \phi(x,t_i) $</formula> where <formula id="8">$ b $</formula> is the vector of target data and <formula id="319">$ phi $</formula> is a scalar function.</para>
<para>Assuming the differentiability of <formula id="82">$ f $</formula>, the gradient of <formula id="26">$ r $</formula> is defined by <formula id="320">\[ grad r(x) = f&apos;(x)^t.f(x) \]</formula> </para>
    </detaileddescription>
    <location file="ql/math/optimization/leastsquare.hpp" line="97" column="5" bodyfile="ql/math/optimization/leastsquare.hpp" bodystart="97" bodyend="149"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_non_linear_least_square_1a674fee44d03fb37ee2391def1102f5f3" prot="private" virt="non-virtual"><scope>QuantLib::NonLinearLeastSquare</scope><name>accuracy_</name></member>
      <member refid="class_quant_lib_1_1_non_linear_least_square_1a4e0b847c240f9e0e3647e3803182097f" prot="private" virt="non-virtual"><scope>QuantLib::NonLinearLeastSquare</scope><name>bestAccuracy_</name></member>
      <member refid="class_quant_lib_1_1_non_linear_least_square_1a43ba3d5d940e2258ef6a8bb25a2e0bdb" prot="private" virt="non-virtual"><scope>QuantLib::NonLinearLeastSquare</scope><name>c_</name></member>
      <member refid="class_quant_lib_1_1_non_linear_least_square_1a6ee69f96d4bf0bfdb08d77064da7e3e9" prot="public" virt="non-virtual"><scope>QuantLib::NonLinearLeastSquare</scope><name>exitFlag</name></member>
      <member refid="class_quant_lib_1_1_non_linear_least_square_1a1f800fe7fa2d600917343d9509a655b4" prot="private" virt="non-virtual"><scope>QuantLib::NonLinearLeastSquare</scope><name>exitFlag_</name></member>
      <member refid="class_quant_lib_1_1_non_linear_least_square_1ae09b7f76fa20730243732bf6226e222d" prot="private" virt="non-virtual"><scope>QuantLib::NonLinearLeastSquare</scope><name>initialValue_</name></member>
      <member refid="class_quant_lib_1_1_non_linear_least_square_1a3bb6c55bf31197ff80cde30246a34e00" prot="public" virt="non-virtual"><scope>QuantLib::NonLinearLeastSquare</scope><name>iterationsNumber</name></member>
      <member refid="class_quant_lib_1_1_non_linear_least_square_1a806ffdd3b7ee736227b3a439c144b519" prot="public" virt="non-virtual"><scope>QuantLib::NonLinearLeastSquare</scope><name>lastValue</name></member>
      <member refid="class_quant_lib_1_1_non_linear_least_square_1acd1cc2a9d32d0ca58d3cf61e3b88ddf2" prot="private" virt="non-virtual"><scope>QuantLib::NonLinearLeastSquare</scope><name>maxIterations_</name></member>
      <member refid="class_quant_lib_1_1_non_linear_least_square_1ad9166b36fa4e0057410bb44f5b10ccd2" prot="private" virt="non-virtual"><scope>QuantLib::NonLinearLeastSquare</scope><name>nbIterations_</name></member>
      <member refid="class_quant_lib_1_1_non_linear_least_square_1a989163a674b3794357f22d17d449d992" prot="public" virt="non-virtual"><scope>QuantLib::NonLinearLeastSquare</scope><name>NonLinearLeastSquare</name></member>
      <member refid="class_quant_lib_1_1_non_linear_least_square_1a5b6231508c3eb21b0e7407da8a05d2b1" prot="public" virt="non-virtual"><scope>QuantLib::NonLinearLeastSquare</scope><name>NonLinearLeastSquare</name></member>
      <member refid="class_quant_lib_1_1_non_linear_least_square_1a7d89e8e56caec5a5533303ae271c5313" prot="private" virt="non-virtual"><scope>QuantLib::NonLinearLeastSquare</scope><name>om_</name></member>
      <member refid="class_quant_lib_1_1_non_linear_least_square_1a5c7ffa6921477739ce368886b88822da" prot="public" virt="non-virtual"><scope>QuantLib::NonLinearLeastSquare</scope><name>perform</name></member>
      <member refid="class_quant_lib_1_1_non_linear_least_square_1acd5b7656d024a0579e0c5458f6226af5" prot="public" virt="non-virtual"><scope>QuantLib::NonLinearLeastSquare</scope><name>residualNorm</name></member>
      <member refid="class_quant_lib_1_1_non_linear_least_square_1ac5932215e96fc59f757949e488461eb6" prot="private" virt="non-virtual"><scope>QuantLib::NonLinearLeastSquare</scope><name>resnorm_</name></member>
      <member refid="class_quant_lib_1_1_non_linear_least_square_1ad2622844d1b341814a13f193f4211322" prot="public" virt="non-virtual"><scope>QuantLib::NonLinearLeastSquare</scope><name>results</name></member>
      <member refid="class_quant_lib_1_1_non_linear_least_square_1a5b0314d2df58dec8198cb29e9df91873" prot="private" virt="non-virtual"><scope>QuantLib::NonLinearLeastSquare</scope><name>results_</name></member>
      <member refid="class_quant_lib_1_1_non_linear_least_square_1aa91382ab8febe477d49ee7a453e371a0" prot="public" virt="non-virtual"><scope>QuantLib::NonLinearLeastSquare</scope><name>setInitialValue</name></member>
      <member refid="class_quant_lib_1_1_non_linear_least_square_1a445a60cfc2bb26a1b5299c63dba9c1c9" prot="public" virt="non-virtual"><scope>QuantLib::NonLinearLeastSquare</scope><name>~NonLinearLeastSquare</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

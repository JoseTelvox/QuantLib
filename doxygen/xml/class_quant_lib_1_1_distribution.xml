<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_distribution" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::Distribution</compoundname>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_quant_lib_1_1_distribution_1ac65f732ba6631c41050f3a0ceacd6ab1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class ManipulateDistribution</definition>
        <argsstring></argsstring>
        <name>ManipulateDistribution</name>
        <qualifiedname>QuantLib::Distribution::ManipulateDistribution</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_manipulate_distribution" kindref="compound">ManipulateDistribution</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="39" column="22" bodyfile="ql/experimental/credit/distribution.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_distribution_1a76e66beb4329a26d6fa57e59e939ed6e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int QuantLib::Distribution::size_</definition>
        <argsstring></argsstring>
        <name>size_</name>
        <qualifiedname>QuantLib::Distribution::size_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="110" column="13" bodyfile="ql/experimental/credit/distribution.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_distribution_1a5e71c54e6fd065fdbc9786c768946b63" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Distribution::xmin_</definition>
        <argsstring></argsstring>
        <name>xmin_</name>
        <qualifiedname>QuantLib::Distribution::xmin_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="111" column="14" bodyfile="ql/experimental/credit/distribution.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_distribution_1ac5c4dee64b2915997eb4704bf03542af" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Distribution::xmax_</definition>
        <argsstring></argsstring>
        <name>xmax_</name>
        <qualifiedname>QuantLib::Distribution::xmax_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="111" column="20" bodyfile="ql/experimental/credit/distribution.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_distribution_1a66caa5e37a5312219749d9051030d5d2" prot="private" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; QuantLib::Distribution::count_</definition>
        <argsstring></argsstring>
        <name>count_</name>
        <qualifiedname>QuantLib::Distribution::count_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="112" column="21" bodyfile="ql/experimental/credit/distribution.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_distribution_1aa3602f7e05eac394ff4d7b81089900cc" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::Distribution::x_</definition>
        <argsstring></argsstring>
        <name>x_</name>
        <qualifiedname>QuantLib::Distribution::x_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="115" column="21" bodyfile="ql/experimental/credit/distribution.hpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_distribution_1ade4279f2055a5b8d639023db38aa38ce" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::Distribution::dx_</definition>
        <argsstring></argsstring>
        <name>dx_</name>
        <qualifiedname>QuantLib::Distribution::dx_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="115" column="24" bodyfile="ql/experimental/credit/distribution.hpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_distribution_1ac6ebf3068b6b431cdaa9db93ec77465e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::Distribution::density_</definition>
        <argsstring></argsstring>
        <name>density_</name>
        <qualifiedname>QuantLib::Distribution::density_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="120" column="21" bodyfile="ql/experimental/credit/distribution.hpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_distribution_1accb426a5d52a9b8355eebc00073084b8" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::Distribution::cumulativeDensity_</definition>
        <argsstring></argsstring>
        <name>cumulativeDensity_</name>
        <qualifiedname>QuantLib::Distribution::cumulativeDensity_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="120" column="30" bodyfile="ql/experimental/credit/distribution.hpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_distribution_1a3cf86bdb34a25cc27e9f1803fb96b631" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::Distribution::excessProbability_</definition>
        <argsstring></argsstring>
        <name>excessProbability_</name>
        <qualifiedname>QuantLib::Distribution::excessProbability_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="121" column="21" bodyfile="ql/experimental/credit/distribution.hpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_distribution_1a1fd03abc7ca1347bf6681812d1b9e58b" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::Distribution::cumulativeExcessProbability_</definition>
        <argsstring></argsstring>
        <name>cumulativeExcessProbability_</name>
        <qualifiedname>QuantLib::Distribution::cumulativeExcessProbability_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="121" column="40" bodyfile="ql/experimental/credit/distribution.hpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_distribution_1a8b953ab2622cb8b99b6781398c3f09c1" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::Distribution::average_</definition>
        <argsstring></argsstring>
        <name>average_</name>
        <qualifiedname>QuantLib::Distribution::average_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="123" column="21" bodyfile="ql/experimental/credit/distribution.hpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_distribution_1acd752df3db149d17f1a398ba65626aad" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int QuantLib::Distribution::overFlow_</definition>
        <argsstring></argsstring>
        <name>overFlow_</name>
        <qualifiedname>QuantLib::Distribution::overFlow_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="125" column="13" bodyfile="ql/experimental/credit/distribution.hpp" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_distribution_1a0eee4fbbaf517cd8a747fe67a51098e0" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int QuantLib::Distribution::underFlow_</definition>
        <argsstring></argsstring>
        <name>underFlow_</name>
        <qualifiedname>QuantLib::Distribution::underFlow_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="125" column="23" bodyfile="ql/experimental/credit/distribution.hpp" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_distribution_1a22e39334907ef0ec4ba48208904e60d2" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::Distribution::isNormalized_</definition>
        <argsstring></argsstring>
        <name>isNormalized_</name>
        <qualifiedname>QuantLib::Distribution::isNormalized_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="126" column="14" bodyfile="ql/experimental/credit/distribution.hpp" bodystart="126" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_distribution_1ab25e899799349c471e7316cae31e3259" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Distribution::Distribution</definition>
        <argsstring>(int nBuckets, Real xmin, Real xmax)</argsstring>
        <name>Distribution</name>
        <qualifiedname>QuantLib::Distribution::Distribution</qualifiedname>
        <param>
          <type>int</type>
          <declname>nBuckets</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>xmin</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>xmax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="40" column="9" bodyfile="ql/experimental/credit/distribution.cpp" bodystart="33" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_distribution_1a41eb2d0d642ca1e99b8d10a5a42a8e6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Distribution::Distribution</definition>
        <argsstring>()=default</argsstring>
        <name>Distribution</name>
        <qualifiedname>QuantLib::Distribution::Distribution</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="41" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_distribution_1a86c81db46f789b35ac8e644ca327df9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::Distribution::add</definition>
        <argsstring>(Real value)</argsstring>
        <name>add</name>
        <qualifiedname>QuantLib::Distribution::add</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="44" column="14" bodyfile="ql/experimental/credit/distribution.cpp" bodystart="78" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_distribution_1aaf50d0b1fc9857422aa30444f56e5c06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::Distribution::addDensity</definition>
        <argsstring>(int bucket, Real value)</argsstring>
        <name>addDensity</name>
        <qualifiedname>QuantLib::Distribution::addDensity</qualifiedname>
        <param>
          <type>int</type>
          <declname>bucket</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="45" column="14" bodyfile="ql/experimental/credit/distribution.cpp" bodystart="95" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_distribution_1a0f9aa273d3722eebbba720463c3951e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::Distribution::addAverage</definition>
        <argsstring>(int bucket, Real value)</argsstring>
        <name>addAverage</name>
        <qualifiedname>QuantLib::Distribution::addAverage</qualifiedname>
        <param>
          <type>int</type>
          <declname>bucket</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="46" column="14" bodyfile="ql/experimental/credit/distribution.cpp" bodystart="103" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_distribution_1aaa27e2da82240cef5bf501f64997ef9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::Distribution::normalize</definition>
        <argsstring>()</argsstring>
        <name>normalize</name>
        <qualifiedname>QuantLib::Distribution::normalize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="47" column="14" bodyfile="ql/experimental/credit/distribution.cpp" bodystart="111" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_distribution_1ac093e8d0de746d84348213cd9620d360" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::Distribution::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>QuantLib::Distribution::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="49" column="14" bodyfile="ql/experimental/credit/distribution.hpp" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_distribution_1a3fa2499b985c5f325be2936d3d1c04ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Distribution::x</definition>
        <argsstring>(Size k)</argsstring>
        <name>x</name>
        <qualifiedname>QuantLib::Distribution::x</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="50" column="14" bodyfile="ql/experimental/credit/distribution.hpp" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_distribution_1a24f3447ebc0e6282b70f02cc39fe3dd0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
        <definition>std::vector&lt; Real &gt; &amp; QuantLib::Distribution::x</definition>
        <argsstring>()</argsstring>
        <name>x</name>
        <qualifiedname>QuantLib::Distribution::x</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="51" column="21" bodyfile="ql/experimental/credit/distribution.hpp" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_distribution_1abe38d29f013dbd30c846dddf9a7ee417" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Distribution::dx</definition>
        <argsstring>(Size k)</argsstring>
        <name>dx</name>
        <qualifiedname>QuantLib::Distribution::dx</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="52" column="14" bodyfile="ql/experimental/credit/distribution.hpp" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_distribution_1a9a0512c6745231490a2476476fecbd89" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
        <definition>std::vector&lt; Real &gt; &amp; QuantLib::Distribution::dx</definition>
        <argsstring>()</argsstring>
        <name>dx</name>
        <qualifiedname>QuantLib::Distribution::dx</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="53" column="21" bodyfile="ql/experimental/credit/distribution.hpp" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_distribution_1aabc48f183302ea53c50e78e2dbcee145" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Distribution::dx</definition>
        <argsstring>(Real x)</argsstring>
        <name>dx</name>
        <qualifiedname>QuantLib::Distribution::dx</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="54" column="14" bodyfile="ql/experimental/credit/distribution.cpp" bodystart="71" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_distribution_1ace1fc3a4a767d044b791541375d368e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Distribution::density</definition>
        <argsstring>(Size k)</argsstring>
        <name>density</name>
        <qualifiedname>QuantLib::Distribution::density</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="56" column="14" bodyfile="ql/experimental/credit/distribution.hpp" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_distribution_1a12823724c4944f5a206835c804984a2b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Distribution::cumulative</definition>
        <argsstring>(Size k)</argsstring>
        <name>cumulative</name>
        <qualifiedname>QuantLib::Distribution::cumulative</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="60" column="14" bodyfile="ql/experimental/credit/distribution.hpp" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_distribution_1ae6e0099e60d1d0b9c026406a9a801ea4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Distribution::excess</definition>
        <argsstring>(Size k)</argsstring>
        <name>excess</name>
        <qualifiedname>QuantLib::Distribution::excess</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="64" column="14" bodyfile="ql/experimental/credit/distribution.hpp" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_distribution_1a754868294f25664655ece03843c22462" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Distribution::cumulativeExcess</definition>
        <argsstring>(Size k)</argsstring>
        <name>cumulativeExcess</name>
        <qualifiedname>QuantLib::Distribution::cumulativeExcess</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="68" column="14" bodyfile="ql/experimental/credit/distribution.hpp" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_distribution_1a3a48cd78f720c32919b993829f011d5c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Distribution::average</definition>
        <argsstring>(Size k)</argsstring>
        <name>average</name>
        <qualifiedname>QuantLib::Distribution::average</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="72" column="14" bodyfile="ql/experimental/credit/distribution.hpp" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_distribution_1abfcd80df9b972c9817c916029625e66b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Distribution::confidenceLevel</definition>
        <argsstring>(Real quantil)</argsstring>
        <name>confidenceLevel</name>
        <qualifiedname>QuantLib::Distribution::confidenceLevel</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>quantil</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="74" column="14" bodyfile="ql/experimental/credit/distribution.cpp" bodystart="151" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_distribution_1a07fc27e52917c6ecada8a104c9805d05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Distribution::cumulativeDensity</definition>
        <argsstring>(Real x)</argsstring>
        <name>cumulativeDensity</name>
        <qualifiedname>QuantLib::Distribution::cumulativeDensity</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="75" column="14" bodyfile="ql/experimental/credit/distribution.cpp" bodystart="220" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_distribution_1acf333a4769f586f80eb9168da1120850" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Distribution::cumulativeExcessProbability</definition>
        <argsstring>(Real a, Real b)</argsstring>
        <name>cumulativeExcessProbability</name>
        <qualifiedname>QuantLib::Distribution::cumulativeExcessProbability</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="76" column="14" bodyfile="ql/experimental/credit/distribution.cpp" bodystart="204" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_distribution_1aeb5dc0bfa2b4c8693d544c02843d3dbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Distribution::expectedValue</definition>
        <argsstring>()</argsstring>
        <name>expectedValue</name>
        <qualifiedname>QuantLib::Distribution::expectedValue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="77" column="14" bodyfile="ql/experimental/credit/distribution.cpp" bodystart="162" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_distribution_1a9712ae2efc4c5ad6e42595c6893c60e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Distribution::trancheExpectedValue</definition>
        <argsstring>(Real a, Real d)</argsstring>
        <name>trancheExpectedValue</name>
        <qualifiedname>QuantLib::Distribution::trancheExpectedValue</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="78" column="14" bodyfile="ql/experimental/credit/distribution.cpp" bodystart="174" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_distribution_1a690b51d62f42d4171563e4d7b3b7e474" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class F</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Distribution::expectedValue</definition>
        <argsstring>(F &amp;f)</argsstring>
        <name>expectedValue</name>
        <qualifiedname>QuantLib::Distribution::expectedValue</qualifiedname>
        <param>
          <type>F &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="81" column="14" bodyfile="ql/experimental/credit/distribution.hpp" bodystart="81" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_distribution_1a9af8e9ccde3970cc3dc95c0871d1335b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::Distribution::tranche</definition>
        <argsstring>(Real attachmentPoint, Real detachmentPoint)</argsstring>
        <name>tranche</name>
        <qualifiedname>QuantLib::Distribution::tranche</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>attachmentPoint</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>detachmentPoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Transform the loss distribution into the tranche loss distribution for losses L_T = min(L,D) - min(L,A). The effects are: 1) shift the distribution to the left by A, then 2) cut off at D-A, Pr(L_T &gt; D-A) = 0 3) ensure Pr(L_T &gt;= 0) = 1, i.e. a density spike at L_T = 0 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="99" column="14" bodyfile="ql/experimental/credit/distribution.cpp" bodystart="236" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_distribution_1a405817f6c421b439117686ff2b37165d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int QuantLib::Distribution::locate</definition>
        <argsstring>(Real x)</argsstring>
        <name>locate</name>
        <qualifiedname>QuantLib::Distribution::locate</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="104" column="13" bodyfile="ql/experimental/credit/distribution.cpp" bodystart="55" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_distribution_1a339bfc89a6e00c5ee9905686b1c79d42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Distribution::expectedShortfall</definition>
        <argsstring>(Real percValue)</argsstring>
        <name>expectedShortfall</name>
        <qualifiedname>QuantLib::Distribution::expectedShortfall</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>percValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/distribution.hpp" line="108" column="14" bodyfile="ql/experimental/credit/distribution.cpp" bodystart="328" bodyend="342"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/experimental/credit/distribution.hpp" line="37" column="5" bodyfile="ql/experimental/credit/distribution.hpp" bodystart="37" bodyend="127"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_distribution_1a86c81db46f789b35ac8e644ca327df9c" prot="public" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>add</name></member>
      <member refid="class_quant_lib_1_1_distribution_1a0f9aa273d3722eebbba720463c3951e5" prot="public" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>addAverage</name></member>
      <member refid="class_quant_lib_1_1_distribution_1aaf50d0b1fc9857422aa30444f56e5c06" prot="public" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>addDensity</name></member>
      <member refid="class_quant_lib_1_1_distribution_1a3a48cd78f720c32919b993829f011d5c" prot="public" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>average</name></member>
      <member refid="class_quant_lib_1_1_distribution_1a8b953ab2622cb8b99b6781398c3f09c1" prot="private" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>average_</name></member>
      <member refid="class_quant_lib_1_1_distribution_1abfcd80df9b972c9817c916029625e66b" prot="public" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>confidenceLevel</name></member>
      <member refid="class_quant_lib_1_1_distribution_1a66caa5e37a5312219749d9051030d5d2" prot="private" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>count_</name></member>
      <member refid="class_quant_lib_1_1_distribution_1a12823724c4944f5a206835c804984a2b" prot="public" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>cumulative</name></member>
      <member refid="class_quant_lib_1_1_distribution_1a07fc27e52917c6ecada8a104c9805d05" prot="public" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>cumulativeDensity</name></member>
      <member refid="class_quant_lib_1_1_distribution_1accb426a5d52a9b8355eebc00073084b8" prot="private" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>cumulativeDensity_</name></member>
      <member refid="class_quant_lib_1_1_distribution_1a754868294f25664655ece03843c22462" prot="public" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>cumulativeExcess</name></member>
      <member refid="class_quant_lib_1_1_distribution_1acf333a4769f586f80eb9168da1120850" prot="public" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>cumulativeExcessProbability</name></member>
      <member refid="class_quant_lib_1_1_distribution_1a1fd03abc7ca1347bf6681812d1b9e58b" prot="private" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>cumulativeExcessProbability_</name></member>
      <member refid="class_quant_lib_1_1_distribution_1ace1fc3a4a767d044b791541375d368e5" prot="public" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>density</name></member>
      <member refid="class_quant_lib_1_1_distribution_1ac6ebf3068b6b431cdaa9db93ec77465e" prot="private" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>density_</name></member>
      <member refid="class_quant_lib_1_1_distribution_1ab25e899799349c471e7316cae31e3259" prot="public" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>Distribution</name></member>
      <member refid="class_quant_lib_1_1_distribution_1a41eb2d0d642ca1e99b8d10a5a42a8e6d" prot="public" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>Distribution</name></member>
      <member refid="class_quant_lib_1_1_distribution_1abe38d29f013dbd30c846dddf9a7ee417" prot="public" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>dx</name></member>
      <member refid="class_quant_lib_1_1_distribution_1a9a0512c6745231490a2476476fecbd89" prot="public" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>dx</name></member>
      <member refid="class_quant_lib_1_1_distribution_1aabc48f183302ea53c50e78e2dbcee145" prot="public" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>dx</name></member>
      <member refid="class_quant_lib_1_1_distribution_1ade4279f2055a5b8d639023db38aa38ce" prot="private" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>dx_</name></member>
      <member refid="class_quant_lib_1_1_distribution_1ae6e0099e60d1d0b9c026406a9a801ea4" prot="public" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>excess</name></member>
      <member refid="class_quant_lib_1_1_distribution_1a3cf86bdb34a25cc27e9f1803fb96b631" prot="private" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>excessProbability_</name></member>
      <member refid="class_quant_lib_1_1_distribution_1a339bfc89a6e00c5ee9905686b1c79d42" prot="public" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>expectedShortfall</name></member>
      <member refid="class_quant_lib_1_1_distribution_1aeb5dc0bfa2b4c8693d544c02843d3dbb" prot="public" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>expectedValue</name></member>
      <member refid="class_quant_lib_1_1_distribution_1a690b51d62f42d4171563e4d7b3b7e474" prot="public" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>expectedValue</name></member>
      <member refid="class_quant_lib_1_1_distribution_1a22e39334907ef0ec4ba48208904e60d2" prot="private" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>isNormalized_</name></member>
      <member refid="class_quant_lib_1_1_distribution_1a405817f6c421b439117686ff2b37165d" prot="public" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>locate</name></member>
      <member refid="class_quant_lib_1_1_distribution_1ac65f732ba6631c41050f3a0ceacd6ab1" prot="public" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>ManipulateDistribution</name></member>
      <member refid="class_quant_lib_1_1_distribution_1aaa27e2da82240cef5bf501f64997ef9f" prot="public" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>normalize</name></member>
      <member refid="class_quant_lib_1_1_distribution_1acd752df3db149d17f1a398ba65626aad" prot="private" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>overFlow_</name></member>
      <member refid="class_quant_lib_1_1_distribution_1ac093e8d0de746d84348213cd9620d360" prot="public" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>size</name></member>
      <member refid="class_quant_lib_1_1_distribution_1a76e66beb4329a26d6fa57e59e939ed6e" prot="private" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>size_</name></member>
      <member refid="class_quant_lib_1_1_distribution_1a9af8e9ccde3970cc3dc95c0871d1335b" prot="public" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>tranche</name></member>
      <member refid="class_quant_lib_1_1_distribution_1a9712ae2efc4c5ad6e42595c6893c60e7" prot="public" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>trancheExpectedValue</name></member>
      <member refid="class_quant_lib_1_1_distribution_1a0eee4fbbaf517cd8a747fe67a51098e0" prot="private" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>underFlow_</name></member>
      <member refid="class_quant_lib_1_1_distribution_1a3fa2499b985c5f325be2936d3d1c04ba" prot="public" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>x</name></member>
      <member refid="class_quant_lib_1_1_distribution_1a24f3447ebc0e6282b70f02cc39fe3dd0" prot="public" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>x</name></member>
      <member refid="class_quant_lib_1_1_distribution_1aa3602f7e05eac394ff4d7b81089900cc" prot="private" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>x_</name></member>
      <member refid="class_quant_lib_1_1_distribution_1ac5c4dee64b2915997eb4704bf03542af" prot="private" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>xmax_</name></member>
      <member refid="class_quant_lib_1_1_distribution_1a5e71c54e6fd065fdbc9786c768946b63" prot="private" virt="non-virtual"><scope>QuantLib::Distribution</scope><name>xmin_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

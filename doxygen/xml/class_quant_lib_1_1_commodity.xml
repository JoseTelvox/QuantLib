<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_commodity" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::Commodity</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_instrument" prot="public" virt="non-virtual">QuantLib::Instrument</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_energy_commodity" prot="public" virt="non-virtual">QuantLib::EnergyCommodity</derivedcompoundref>
    <includes refid="commodity_8hpp" local="no">commodity.hpp</includes>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_commodity_1a6776dccda53b8a986832d4e791a49fc3" prot="protected" static="no" mutable="no">
        <type>ext::shared_ptr&lt; SecondaryCosts &gt;</type>
        <definition>ext::shared_ptr&lt;SecondaryCosts&gt; QuantLib::Commodity::secondaryCosts_</definition>
        <argsstring></argsstring>
        <name>secondaryCosts_</name>
        <qualifiedname>QuantLib::Commodity::secondaryCosts_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/commodity.hpp" line="73" column="25" bodyfile="ql/experimental/commodities/commodity.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_commodity_1ac4a5896e9c3cf206547e1b35aa121e4f" prot="protected" static="no" mutable="yes">
        <type>PricingErrors</type>
        <definition>PricingErrors QuantLib::Commodity::pricingErrors_</definition>
        <argsstring></argsstring>
        <name>pricingErrors_</name>
        <qualifiedname>QuantLib::Commodity::pricingErrors_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/commodity.hpp" line="74" column="31" bodyfile="ql/experimental/commodities/commodity.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_commodity_1a14b8c3757abcfaf131f4953dd022808f" prot="protected" static="no" mutable="yes">
        <type>SecondaryCostAmounts</type>
        <definition>SecondaryCostAmounts QuantLib::Commodity::secondaryCostAmounts_</definition>
        <argsstring></argsstring>
        <name>secondaryCostAmounts_</name>
        <qualifiedname>QuantLib::Commodity::secondaryCostAmounts_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/commodity.hpp" line="75" column="38" bodyfile="ql/experimental/commodities/commodity.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_commodity_1ab866d23669370af863783f7eb5d8eb7d" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Commodity::Commodity</definition>
        <argsstring>(ext::shared_ptr&lt; SecondaryCosts &gt; secondaryCosts)</argsstring>
        <name>Commodity</name>
        <qualifiedname>QuantLib::Commodity::Commodity</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; SecondaryCosts &gt;</type>
          <declname>secondaryCosts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/commodity.hpp" line="65" column="18" bodyfile="ql/experimental/commodities/commodity.cpp" bodystart="26" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_commodity_1a38e8cb6652647dbc14ed9f08087e603c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const ext::shared_ptr&lt; SecondaryCosts &gt; &amp;</type>
        <definition>const ext::shared_ptr&lt; SecondaryCosts &gt; &amp; QuantLib::Commodity::secondaryCosts</definition>
        <argsstring>() const</argsstring>
        <name>secondaryCosts</name>
        <qualifiedname>QuantLib::Commodity::secondaryCosts</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/commodity.hpp" line="66" column="31"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_commodity_1a91058b9c9e81263a7b6b5e5c121f32c0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const SecondaryCostAmounts &amp;</type>
        <definition>const SecondaryCostAmounts &amp; QuantLib::Commodity::secondaryCostAmounts</definition>
        <argsstring>() const</argsstring>
        <name>secondaryCostAmounts</name>
        <qualifiedname>QuantLib::Commodity::secondaryCostAmounts</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/commodity.hpp" line="67" column="36" bodyfile="ql/experimental/commodities/commodity.cpp" bodystart="29" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_commodity_1ac2d1b6ab357cee1ff9a149c806a2c600" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const PricingErrors &amp;</type>
        <definition>const PricingErrors &amp; QuantLib::Commodity::pricingErrors</definition>
        <argsstring>() const</argsstring>
        <name>pricingErrors</name>
        <qualifiedname>QuantLib::Commodity::pricingErrors</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/commodity.hpp" line="68" column="29" bodyfile="ql/experimental/commodities/commodity.cpp" bodystart="33" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_commodity_1a351ab27f3e0ee5dc4062c3ddc8f5c8d2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::Commodity::addPricingError</definition>
        <argsstring>(PricingError::Level errorLevel, const std::string &amp;error, const std::string &amp;detail=&quot;&quot;) const</argsstring>
        <name>addPricingError</name>
        <qualifiedname>QuantLib::Commodity::addPricingError</qualifiedname>
        <param>
          <type>PricingError::Level</type>
          <declname>errorLevel</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>error</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>detail</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/commodity.hpp" line="69" column="14" bodyfile="ql/experimental/commodities/commodity.cpp" bodystart="37" bodyend="41"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para><ref refid="class_quant_lib_1_1_commodity" kindref="compound">Commodity</ref> base class. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::Commodity</label>
        <link refid="class_quant_lib_1_1_commodity"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QuantLib::EnergyBasisSwap</label>
        <link refid="class_quant_lib_1_1_energy_basis_swap"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::EnergyCommodity</label>
        <link refid="class_quant_lib_1_1_energy_commodity"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::EnergyFuture</label>
        <link refid="class_quant_lib_1_1_energy_future"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::EnergySwap</label>
        <link refid="class_quant_lib_1_1_energy_swap"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QuantLib::EnergyVanillaSwap</label>
        <link refid="class_quant_lib_1_1_energy_vanilla_swap"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Instrument</label>
        <link refid="class_quant_lib_1_1_instrument"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::Commodity</label>
        <link refid="class_quant_lib_1_1_commodity"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="2">
        <label>QuantLib::Instrument</label>
        <link refid="class_quant_lib_1_1_instrument"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>valuationDate_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/commodities/commodity.hpp" line="63" column="5" bodyfile="ql/experimental/commodities/commodity.hpp" bodystart="63" bodyend="76"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_instrument_1a468edb294da268b097c91bf821084c07" prot="public" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>additionalResults</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a57d2b34e8625ab3d9ffa50c0c7931099" prot="protected" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>additionalResults_</name></member>
      <member refid="class_quant_lib_1_1_commodity_1a351ab27f3e0ee5dc4062c3ddc8f5c8d2" prot="public" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>addPricingError</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a02070ea7442d30625992c1711030d4b8" prot="protected" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>alwaysForward_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a17c9433135a259e4776baec66204a484" prot="public" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>alwaysForwardNotifications</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a4c573c48f7eaead5042864ac0eb5b025" prot="protected" virt="virtual"><scope>QuantLib::Commodity</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a58b4986a80efa18634483a92c121e26e" prot="protected" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>calculated_</name></member>
      <member refid="class_quant_lib_1_1_commodity_1ab866d23669370af863783f7eb5d8eb7d" prot="public" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>Commodity</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::Commodity</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_instrument_1ac548cb61c864779db09bd0fac6ae7c81" prot="protected" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>engine_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a03502fb6c606b262c25acd94ff4c1e52" prot="public" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>errorEstimate</name></member>
      <member refid="class_quant_lib_1_1_instrument_1abb8f4cfa7346fab7a2f3a8c8b4da30f3" prot="protected" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>errorEstimate_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1aebe809131db2941325d037c031bbf41b" prot="public" virt="virtual"><scope>QuantLib::Commodity</scope><name>fetchResults</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1afac6ee19c3107c453e1347dd8000e023" prot="public" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>forwardFirstNotificationOnly</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7157f41e83f2c5d924f5c5bafda04d1d" prot="public" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>freeze</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7bb721fe00c6854e602758aba629ab77" prot="protected" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>frozen_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a5e4c746cbf7999c83dc57f87e241f1cc" prot="public" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>Instrument</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a0a7c5d42815a4e16ee2158e24dbfc748" prot="public" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>isCalculated</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a121a2a929b179900744a58272d46aefe" prot="public" virt="pure-virtual"><scope>QuantLib::Commodity</scope><name>isExpired</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a26f18f4ff7faaaebd8eae50e064b493e" prot="public" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a5afdd9698267cd30ddd10cf01f3487b0" prot="public" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>NPV</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a997663780100d30ae59b14ac0285322d" prot="protected" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>NPV_</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::Commodity</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::Commodity</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::Commodity</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::Commodity</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::Commodity</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::QuantLib::Observer::"><scope>QuantLib::Commodity</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_instrument_1aad23f546bbca156a49a95ca2bee124c4" prot="protected" virt="virtual"><scope>QuantLib::Commodity</scope><name>performCalculations</name></member>
      <member refid="class_quant_lib_1_1_commodity_1ac2d1b6ab357cee1ff9a149c806a2c600" prot="public" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>pricingErrors</name></member>
      <member refid="class_quant_lib_1_1_commodity_1ac4a5896e9c3cf206547e1b35aa121e4f" prot="protected" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>pricingErrors_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a70c9b24e50132408d8d9ce4f6674662a" prot="public" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>recalculate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a266c15a12160a89f4f9707db85f9fa27" prot="public" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>result</name></member>
      <member refid="class_quant_lib_1_1_commodity_1a91058b9c9e81263a7b6b5e5c121f32c0" prot="public" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>secondaryCostAmounts</name></member>
      <member refid="class_quant_lib_1_1_commodity_1a14b8c3757abcfaf131f4953dd022808f" prot="protected" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>secondaryCostAmounts_</name></member>
      <member refid="class_quant_lib_1_1_commodity_1a38e8cb6652647dbc14ed9f08087e603c" prot="public" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>secondaryCosts</name></member>
      <member refid="class_quant_lib_1_1_commodity_1a6776dccda53b8a986832d4e791a49fc3" prot="protected" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>secondaryCosts_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a3444386491f179f64f4f0aac24997071" prot="public" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>setPricingEngine</name></member>
      <member refid="class_quant_lib_1_1_instrument_1af7344eebc48a1a361386e5c5a90a8fcc" prot="public" virt="virtual"><scope>QuantLib::Commodity</scope><name>setupArguments</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a73d90597fcd3ff52a8aed674393ab574" prot="protected" virt="virtual"><scope>QuantLib::Commodity</scope><name>setupExpired</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a2e0e4786666453024b9d4e0761f2770b" prot="public" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>unfreeze</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1adee2bf49be5c4c78736be293321a856d" prot="public" virt="virtual"><scope>QuantLib::Commodity</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a53a0fc1adc70b73387ad53009725835d" prot="public" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>valuationDate</name></member>
      <member refid="class_quant_lib_1_1_instrument_1aa60b558fc82f022e13535360ac4a6fed" prot="protected" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>valuationDate_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a9d719c43bb627177a90d7d12324a2d6e" prot="public" virt="non-virtual"><scope>QuantLib::Commodity</scope><name>~LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::Commodity</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::Commodity</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

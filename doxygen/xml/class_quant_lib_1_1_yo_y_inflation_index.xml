<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_yo_y_inflation_index" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::YoYInflationIndex</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_inflation_index" prot="public" virt="non-virtual">QuantLib::InflationIndex</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_y_y_a_u_c_p_i" prot="public" virt="non-virtual">QuantLib::YYAUCPI</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_y_y_e_u_h_i_c_p" prot="public" virt="non-virtual">QuantLib::YYEUHICP</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_y_y_e_u_h_i_c_p_x_t" prot="public" virt="non-virtual">QuantLib::YYEUHICPXT</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_y_y_f_r_h_i_c_p" prot="public" virt="non-virtual">QuantLib::YYFRHICP</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_y_y_generic_c_p_i" prot="public" virt="non-virtual">QuantLib::YYGenericCPI</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_y_y_u_k_r_p_i" prot="public" virt="non-virtual">QuantLib::YYUKRPI</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_y_y_u_s_c_p_i" prot="public" virt="non-virtual">QuantLib::YYUSCPI</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_y_y_z_a_c_p_i" prot="public" virt="non-virtual">QuantLib::YYZACPI</derivedcompoundref>
    <includes refid="inflationindex_8hpp" local="no">inflationindex.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Other methods</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_yo_y_inflation_index_1a21290cfaf4dafb4fba251241b34c69d3" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::YoYInflationIndex::interpolated_</definition>
        <argsstring></argsstring>
        <name>interpolated_</name>
        <qualifiedname>QuantLib::YoYInflationIndex::interpolated_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="262" column="14" bodyfile="ql/indexes/inflationindex.hpp" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_yo_y_inflation_index_1a3cb09f1021610dcb25cd1fabe758dcf0" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::YoYInflationIndex::ratio_</definition>
        <argsstring></argsstring>
        <name>ratio_</name>
        <qualifiedname>QuantLib::YoYInflationIndex::ratio_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="266" column="14" bodyfile="ql/indexes/inflationindex.hpp" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_yo_y_inflation_index_1ac50cd36c82b408af936728e978622b96" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_zero_inflation_index" kindref="compound">ZeroInflationIndex</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;ZeroInflationIndex&gt; QuantLib::YoYInflationIndex::underlyingIndex_</definition>
        <argsstring></argsstring>
        <name>underlyingIndex_</name>
        <qualifiedname>QuantLib::YoYInflationIndex::underlyingIndex_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="267" column="25" bodyfile="ql/indexes/inflationindex.hpp" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_yo_y_inflation_index_1a67ae5fcfbf19fbdcb735dc55e4e62028" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yo_y_inflation_term_structure" kindref="compound">YoYInflationTermStructure</ref> &gt;</type>
        <definition>Handle&lt;YoYInflationTermStructure&gt; QuantLib::YoYInflationIndex::yoyInflation_</definition>
        <argsstring></argsstring>
        <name>yoyInflation_</name>
        <qualifiedname>QuantLib::YoYInflationIndex::yoyInflation_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="268" column="16" bodyfile="ql/indexes/inflationindex.hpp" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_index_1a939f0560681c246bdd17c96cd9a302ae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::YoYInflationIndex::lastFixingDate</definition>
        <argsstring>() const</argsstring>
        <name>lastFixingDate</name>
        <qualifiedname>QuantLib::YoYInflationIndex::lastFixingDate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="251" column="14" bodyfile="ql/indexes/inflationindex.cpp" bodystart="295" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_index_1aa11faf307c19e4446805bb95e4236614" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::YoYInflationIndex::interpolated</definition>
        <argsstring>() const</argsstring>
        <name>interpolated</name>
        <qualifiedname>QuantLib::YoYInflationIndex::interpolated</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="252" column="14" bodyfile="ql/indexes/inflationindex.hpp" bodystart="328" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_index_1af91dcef2c13bb6d39e621d32e861032a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::YoYInflationIndex::ratio</definition>
        <argsstring>() const</argsstring>
        <name>ratio</name>
        <qualifiedname>QuantLib::YoYInflationIndex::ratio</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="253" column="14" bodyfile="ql/indexes/inflationindex.hpp" bodystart="332" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_index_1a544d3c409aa558e2ac96df591f8a874c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_zero_inflation_index" kindref="compound">ZeroInflationIndex</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; ZeroInflationIndex &gt; QuantLib::YoYInflationIndex::underlyingIndex</definition>
        <argsstring>() const</argsstring>
        <name>underlyingIndex</name>
        <qualifiedname>QuantLib::YoYInflationIndex::underlyingIndex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="254" column="25" bodyfile="ql/indexes/inflationindex.hpp" bodystart="336" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_index_1afb6807748ab05758cac6343d1724a9cd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yo_y_inflation_term_structure" kindref="compound">YoYInflationTermStructure</ref> &gt;</type>
        <definition>Handle&lt; YoYInflationTermStructure &gt; QuantLib::YoYInflationIndex::yoyInflationTermStructure</definition>
        <argsstring>() const</argsstring>
        <name>yoyInflationTermStructure</name>
        <qualifiedname>QuantLib::YoYInflationIndex::yoyInflationTermStructure</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="255" column="16" bodyfile="ql/indexes/inflationindex.hpp" bodystart="341" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_index_1a51107b02f4a5e77ff8fed524ba948f2d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_yo_y_inflation_index" kindref="compound">YoYInflationIndex</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; YoYInflationIndex &gt; QuantLib::YoYInflationIndex::clone</definition>
        <argsstring>(const Handle&lt; YoYInflationTermStructure &gt; &amp;h) const</argsstring>
        <name>clone</name>
        <qualifiedname>QuantLib::YoYInflationIndex::clone</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yo_y_inflation_term_structure" kindref="compound">YoYInflationTermStructure</ref> &gt; &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="257" column="25" bodyfile="ql/indexes/inflationindex.cpp" bodystart="387" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_index_1a897b58a3a4f8ef4de74900ca3c56d533" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::YoYInflationIndex::needsForecast</definition>
        <argsstring>(const Date &amp;fixingDate) const</argsstring>
        <name>needsForecast</name>
        <qualifiedname>QuantLib::YoYInflationIndex::needsForecast</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>fixingDate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="258" column="14" bodyfile="ql/indexes/inflationindex.cpp" bodystart="306" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_index_1a34dcf38a29de15c08d7c0b44a7b36bfd" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Real QuantLib::YoYInflationIndex::forecastFixing</definition>
        <argsstring>(const Date &amp;fixingDate) const</argsstring>
        <name>forecastFixing</name>
        <qualifiedname>QuantLib::YoYInflationIndex::forecastFixing</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>fixingDate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="265" column="14" bodyfile="ql/indexes/inflationindex.cpp" bodystart="373" bodyend="385"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Constructors</header>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_index_1a941477be9c05c752a79c4d5b2fe56d0d" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::YoYInflationIndex::YoYInflationIndex</definition>
        <argsstring>(const ext::shared_ptr&lt; ZeroInflationIndex &gt; &amp;underlyingIndex, Handle&lt; YoYInflationTermStructure &gt; ts={})</argsstring>
        <name>YoYInflationIndex</name>
        <qualifiedname>QuantLib::YoYInflationIndex::YoYInflationIndex</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_zero_inflation_index" kindref="compound">ZeroInflationIndex</ref> &gt; &amp;</type>
          <declname>underlyingIndex</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yo_y_inflation_term_structure" kindref="compound">YoYInflationTermStructure</ref> &gt;</type>
          <declname>ts</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Constructor for year-on-year indices defined as a ratio. </para>
        </briefdescription>
        <detaileddescription>
<para>An index build with this constructor won&apos;t store past fixings of its own; they will be calculated as a ratio from the past fixings stored in the underlying index. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="198" column="18" bodyfile="ql/indexes/inflationindex.cpp" bodystart="243" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_index_1a04c0163c588e63075d123eb59e2fecd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::YoYInflationIndex::YoYInflationIndex</definition>
        <argsstring>(const ext::shared_ptr&lt; ZeroInflationIndex &gt; &amp;underlyingIndex, bool interpolated, Handle&lt; YoYInflationTermStructure &gt; ts={})</argsstring>
        <name>YoYInflationIndex</name>
        <qualifiedname>QuantLib::YoYInflationIndex::YoYInflationIndex</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_zero_inflation_index" kindref="compound">ZeroInflationIndex</ref> &gt; &amp;</type>
          <declname>underlyingIndex</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>interpolated</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yo_y_inflation_term_structure" kindref="compound">YoYInflationTermStructure</ref> &gt;</type>
          <declname>ts</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000099"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use the similar overload without the interpolated parameter. Deprecated in version 1.38. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="206" column="9" bodyfile="ql/indexes/inflationindex.cpp" bodystart="254" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_index_1a4980ef5901f4eea6e3fbec20cd8ccd7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::YoYInflationIndex::YoYInflationIndex</definition>
        <argsstring>(const std::string &amp;familyName, const Region &amp;region, bool revised, Frequency frequency, const Period &amp;availabilityLag, const Currency &amp;currency, Handle&lt; YoYInflationTermStructure &gt; ts={})</argsstring>
        <name>YoYInflationIndex</name>
        <qualifiedname>QuantLib::YoYInflationIndex::YoYInflationIndex</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>familyName</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_region" kindref="compound">Region</ref> &amp;</type>
          <declname>region</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>revised</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
          <declname>frequency</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>availabilityLag</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_currency" kindref="compound">Currency</ref> &amp;</type>
          <declname>currency</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yo_y_inflation_term_structure" kindref="compound">YoYInflationTermStructure</ref> &gt;</type>
          <declname>ts</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Constructor for quoted year-on-year indices. </para>
        </briefdescription>
        <detaileddescription>
<para>An index built with this constructor needs its past fixings (i.e., the past year-on-year values) to be stored via the <computeroutput>addFixing</computeroutput> or <computeroutput>addFixings</computeroutput> method. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="216" column="9" bodyfile="ql/indexes/inflationindex.cpp" bodystart="261" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_index_1aba293911febd5cae380ac820bb8c796d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::YoYInflationIndex::YoYInflationIndex</definition>
        <argsstring>(const std::string &amp;familyName, const Region &amp;region, bool revised, bool interpolated, Frequency frequency, const Period &amp;availabilityLag, const Currency &amp;currency, Handle&lt; YoYInflationTermStructure &gt; ts={})</argsstring>
        <name>YoYInflationIndex</name>
        <qualifiedname>QuantLib::YoYInflationIndex::YoYInflationIndex</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>familyName</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_region" kindref="compound">Region</ref> &amp;</type>
          <declname>region</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>revised</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>interpolated</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
          <declname>frequency</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>availabilityLag</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_currency" kindref="compound">Currency</ref> &amp;</type>
          <declname>currency</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yo_y_inflation_term_structure" kindref="compound">YoYInflationTermStructure</ref> &gt;</type>
          <declname>ts</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000100"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use the similar overload without the interpolated parameter. Deprecated in version 1.38. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="229" column="9" bodyfile="ql/indexes/inflationindex.cpp" bodystart="273" bodyend="283"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Index interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_index_1a768a58fd577da972ba08163d08b143d8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::YoYInflationIndex::fixing</definition>
        <argsstring>(const Date &amp;fixingDate, bool forecastTodaysFixing=false) const override</argsstring>
        <name>fixing</name>
        <qualifiedname>QuantLib::YoYInflationIndex::fixing</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_inflation_index_1adf5505d0cf89ba6d8fec944d41878ea5">fixing</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>fixingDate</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>forecastTodaysFixing</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>the forecastTodaysFixing parameter (required by the <ref refid="class_quant_lib_1_1_index" kindref="compound">Index</ref> interface) is currently ignored. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="245" column="14" bodyfile="ql/indexes/inflationindex.cpp" bodystart="286" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_index_1a3f0e7411aa1d8ad5d0daf9d11306ac7a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::YoYInflationIndex::pastFixing</definition>
        <argsstring>(const Date &amp;fixingDate) const override</argsstring>
        <name>pastFixing</name>
        <qualifiedname>QuantLib::YoYInflationIndex::pastFixing</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_inflation_index_1a09b3a0586a9f9190d18a178d91ea5dcb">pastFixing</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>fixingDate</declname>
        </param>
        <briefdescription>
<para>returns a past fixing at the given date </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/inflationindex.hpp" line="246" column="14" bodyfile="ql/indexes/inflationindex.cpp" bodystart="337" bodyend="371"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Base class for year-on-year inflation indices. </para>
    </briefdescription>
    <detaileddescription>
<para>These may be quoted indices published on, say, Bloomberg, or can be defined as the ratio of an index at different time points. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>QuantLib::Index</label>
        <link refid="class_quant_lib_1_1_index"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::InflationIndex</label>
        <link refid="class_quant_lib_1_1_inflation_index"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="6">
        <label>QuantLib::YYAUCPI</label>
        <link refid="class_quant_lib_1_1_y_y_a_u_c_p_i"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::YYEUHICP</label>
        <link refid="class_quant_lib_1_1_y_y_e_u_h_i_c_p"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::YYEUHICPXT</label>
        <link refid="class_quant_lib_1_1_y_y_e_u_h_i_c_p_x_t"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QuantLib::YYFRHICP</label>
        <link refid="class_quant_lib_1_1_y_y_f_r_h_i_c_p"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QuantLib::YYGenericCPI</label>
        <link refid="class_quant_lib_1_1_y_y_generic_c_p_i"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>QuantLib::YYUKRPI</label>
        <link refid="class_quant_lib_1_1_y_y_u_k_r_p_i"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>QuantLib::YYUSCPI</label>
        <link refid="class_quant_lib_1_1_y_y_u_s_c_p_i"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>QuantLib::YYZACPI</label>
        <link refid="class_quant_lib_1_1_y_y_z_a_c_p_i"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::YoYInflationIndex</label>
        <link refid="class_quant_lib_1_1_yo_y_inflation_index"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9">
        <label>QuantLib::Currency</label>
        <link refid="class_quant_lib_1_1_currency"/>
      </node>
      <node id="6">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="3">
        <label>QuantLib::Index</label>
        <link refid="class_quant_lib_1_1_index"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::InflationIndex</label>
        <link refid="class_quant_lib_1_1_inflation_index"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>referenceDate_</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>region_</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>availabilityLag_</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>currency_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="8">
        <label>QuantLib::Period</label>
        <link refid="class_quant_lib_1_1_period"/>
      </node>
      <node id="7">
        <label>QuantLib::Region</label>
        <link refid="class_quant_lib_1_1_region"/>
      </node>
      <node id="1">
        <label>QuantLib::YoYInflationIndex</label>
        <link refid="class_quant_lib_1_1_yo_y_inflation_index"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/indexes/inflationindex.hpp" line="189" column="5" bodyfile="ql/indexes/inflationindex.hpp" bodystart="189" bodyend="269"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_inflation_index_1abee8154093d859b0368607fcbbdb7e5e" prot="public" virt="virtual"><scope>QuantLib::YoYInflationIndex</scope><name>addFixing</name></member>
      <member refid="class_quant_lib_1_1_index_1a91fce2b65887f04e2cbcae5d9ffcc15e" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>addFixings</name></member>
      <member refid="class_quant_lib_1_1_index_1a46b3d6241bd06bd76a49123c5c0011cf" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>addFixings</name></member>
      <member refid="class_quant_lib_1_1_index_1aedde403ec6db8211816d7d1d0a883155" prot="public" virt="virtual"><scope>QuantLib::YoYInflationIndex</scope><name>allowsNativeFixings</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1a1404972bc87b13c7a47f908463480662" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>availabilityLag</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1a4d3981071a8d47462964b278cca87423" prot="protected" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>availabilityLag_</name></member>
      <member refid="class_quant_lib_1_1_index_1a6ebd31a5c6890f2dc0b25fc7824c809c" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>clearFixings</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_index_1a51107b02f4a5e77ff8fed524ba948f2d" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>clone</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1a1bb3a5c5be9e129af132ad0387b941b9" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>currency</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1adfc9057afc5cf1f21b202874d8a57a97" prot="protected" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>currency_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::YoYInflationIndex</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1a32a23527e3464521d859e7797c0a606a" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>familyName</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1a60ed625ab3df6d23b3eff86776da9470" prot="protected" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>familyName_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_index_1a768a58fd577da972ba08163d08b143d8" prot="public" virt="virtual"><scope>QuantLib::YoYInflationIndex</scope><name>fixing</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1a4e8ca760eca7688c36e3269f7f948ea7" prot="public" virt="virtual"><scope>QuantLib::YoYInflationIndex</scope><name>fixingCalendar</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_index_1a34dcf38a29de15c08d7c0b44a7b36bfd" prot="private" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>forecastFixing</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1a8669a23706c52bb326120a6a11083d4c" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>frequency</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1a09809507840cfcbccfdcdf5eee0f084a" prot="protected" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>frequency_</name></member>
      <member refid="class_quant_lib_1_1_index_1a3ca2ef1910e74b22dd55c39013642a5c" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>hasHistoricalFixing</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1ae2e21a8cb72f6138d11e9fba41ad3219" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>InflationIndex</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_index_1aa11faf307c19e4446805bb95e4236614" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>interpolated</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_index_1a21290cfaf4dafb4fba251241b34c69d3" prot="protected" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>interpolated_</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1a0d7763430eafc11354c0455865953a79" prot="public" virt="virtual"><scope>QuantLib::YoYInflationIndex</scope><name>isValidFixingDate</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::YoYInflationIndex</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_index_1a939f0560681c246bdd17c96cd9a302ae" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>lastFixingDate</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1a85bd99f2d2371874d1186ff5a9826dfd" prot="public" virt="virtual"><scope>QuantLib::YoYInflationIndex</scope><name>name</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_index_1a897b58a3a4f8ef4de74900ca3c56d533" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>needsForecast</name></member>
      <member refid="class_quant_lib_1_1_index_1aa9172bf19d428e1d212ef2e331ad8785" prot="protected" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>notifier</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::YoYInflationIndex</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::YoYInflationIndex</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::YoYInflationIndex</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::YoYInflationIndex</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::YoYInflationIndex</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_index_1a3f0e7411aa1d8ad5d0daf9d11306ac7a" prot="public" virt="virtual"><scope>QuantLib::YoYInflationIndex</scope><name>pastFixing</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_index_1af91dcef2c13bb6d39e621d32e861032a" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>ratio</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_index_1a3cb09f1021610dcb25cd1fabe758dcf0" prot="private" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>ratio_</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1abb5bebc90f4cf2e75fd15ac402e503b6" prot="protected" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>referenceDate_</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1abe9256a3ff78e865be8d2dc384bd31af" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>region</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1a40b911726fe5587919986adce24c11e8" prot="protected" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>region_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1a348c72285b3a757cc1386b8bb0f515b6" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>revised</name></member>
      <member refid="class_quant_lib_1_1_inflation_index_1a631849758c2cacca98aa124499c2c6d7" prot="protected" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>revised_</name></member>
      <member refid="class_quant_lib_1_1_index_1a373faa497820b43992d18ead1a8b87a8" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>timeSeries</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_index_1a544d3c409aa558e2ac96df591f8a874c" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>underlyingIndex</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_index_1ac50cd36c82b408af936728e978622b96" prot="private" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>underlyingIndex_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_index_1a790ff8bc3caa48efbdb968f6fd23edf0" prot="public" virt="virtual"><scope>QuantLib::YoYInflationIndex</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_index_1a67ae5fcfbf19fbdcb735dc55e4e62028" prot="private" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>yoyInflation_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_index_1a941477be9c05c752a79c4d5b2fe56d0d" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>YoYInflationIndex</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_index_1a04c0163c588e63075d123eb59e2fecd8" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>YoYInflationIndex</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_index_1a4980ef5901f4eea6e3fbec20cd8ccd7e" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>YoYInflationIndex</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_index_1aba293911febd5cae380ac820bb8c796d" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>YoYInflationIndex</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_index_1afb6807748ab05758cac6343d1724a9cd" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>yoyInflationTermStructure</name></member>
      <member refid="class_quant_lib_1_1_index_1a5e8202e51d4c2053f61cb47d3f76b42f" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationIndex</scope><name>~Index</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::YoYInflationIndex</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::YoYInflationIndex</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

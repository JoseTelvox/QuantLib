<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_futures_conv_adjustment_quote" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::FuturesConvAdjustmentQuote</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_quote" prot="public" virt="non-virtual">QuantLib::Quote</basecompoundref>
    <basecompoundref refid="class_quant_lib_1_1_observer" prot="public" virt="non-virtual">QuantLib::Observer</basecompoundref>
    <includes refid="futuresconvadjustmentquote_8hpp" local="no">futuresconvadjustmentquote.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Inspectors</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_futures_conv_adjustment_quote_1a3ef5f66a17e9d7dd00597b0c68ca52d4" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref></type>
        <definition>DayCounter QuantLib::FuturesConvAdjustmentQuote::dc_</definition>
        <argsstring></argsstring>
        <name>dc_</name>
        <qualifiedname>QuantLib::FuturesConvAdjustmentQuote::dc_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quotes/futuresconvadjustmentquote.hpp" line="64" column="20" bodyfile="ql/quotes/futuresconvadjustmentquote.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_futures_conv_adjustment_quote_1af0878b324b49d76789a863722f5215b4" prot="protected" static="no" mutable="no">
        <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>const Date QuantLib::FuturesConvAdjustmentQuote::futuresDate_</definition>
        <argsstring></argsstring>
        <name>futuresDate_</name>
        <qualifiedname>QuantLib::FuturesConvAdjustmentQuote::futuresDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quotes/futuresconvadjustmentquote.hpp" line="65" column="20" bodyfile="ql/quotes/futuresconvadjustmentquote.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_futures_conv_adjustment_quote_1a5a7eddd3751370239a6e111069f81266" prot="protected" static="no" mutable="no">
        <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>const Date QuantLib::FuturesConvAdjustmentQuote::indexMaturityDate_</definition>
        <argsstring></argsstring>
        <name>indexMaturityDate_</name>
        <qualifiedname>QuantLib::FuturesConvAdjustmentQuote::indexMaturityDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quotes/futuresconvadjustmentquote.hpp" line="65" column="33" bodyfile="ql/quotes/futuresconvadjustmentquote.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_futures_conv_adjustment_quote_1a082c824b40df506a3fd1fe462977cad7" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
        <definition>Handle&lt;Quote&gt; QuantLib::FuturesConvAdjustmentQuote::futuresQuote_</definition>
        <argsstring></argsstring>
        <name>futuresQuote_</name>
        <qualifiedname>QuantLib::FuturesConvAdjustmentQuote::futuresQuote_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quotes/futuresconvadjustmentquote.hpp" line="66" column="16" bodyfile="ql/quotes/futuresconvadjustmentquote.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_futures_conv_adjustment_quote_1a0b6992b7437e4af8699e8478bbd4b237" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
        <definition>Handle&lt;Quote&gt; QuantLib::FuturesConvAdjustmentQuote::volatility_</definition>
        <argsstring></argsstring>
        <name>volatility_</name>
        <qualifiedname>QuantLib::FuturesConvAdjustmentQuote::volatility_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quotes/futuresconvadjustmentquote.hpp" line="67" column="16" bodyfile="ql/quotes/futuresconvadjustmentquote.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_futures_conv_adjustment_quote_1abde6e977d866e9f0aac98901f0e24381" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
        <definition>Handle&lt;Quote&gt; QuantLib::FuturesConvAdjustmentQuote::meanReversion_</definition>
        <argsstring></argsstring>
        <name>meanReversion_</name>
        <qualifiedname>QuantLib::FuturesConvAdjustmentQuote::meanReversion_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quotes/futuresconvadjustmentquote.hpp" line="68" column="16" bodyfile="ql/quotes/futuresconvadjustmentquote.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_futures_conv_adjustment_quote_1ade1e87d988cab53c71c586a73cd20371" prot="protected" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::FuturesConvAdjustmentQuote::rate_</definition>
        <argsstring></argsstring>
        <name>rate_</name>
        <qualifiedname>QuantLib::FuturesConvAdjustmentQuote::rate_</qualifiedname>
        <initializer>= <ref refid="class_quant_lib_1_1_null" kindref="compound">Null</ref>&lt;<ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quotes/futuresconvadjustmentquote.hpp" line="69" column="22" bodyfile="ql/quotes/futuresconvadjustmentquote.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_futures_conv_adjustment_quote_1a9b83fc77d03f68f5957677521d51c889" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::FuturesConvAdjustmentQuote::futuresValue</definition>
        <argsstring>() const</argsstring>
        <name>futuresValue</name>
        <qualifiedname>QuantLib::FuturesConvAdjustmentQuote::futuresValue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quotes/futuresconvadjustmentquote.hpp" line="58" column="14" bodyfile="ql/quotes/futuresconvadjustmentquote.hpp" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_futures_conv_adjustment_quote_1acb30e890b50b5a4096ed11bcc45285b2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::FuturesConvAdjustmentQuote::volatility</definition>
        <argsstring>() const</argsstring>
        <name>volatility</name>
        <qualifiedname>QuantLib::FuturesConvAdjustmentQuote::volatility</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quotes/futuresconvadjustmentquote.hpp" line="59" column="14" bodyfile="ql/quotes/futuresconvadjustmentquote.hpp" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_futures_conv_adjustment_quote_1a2d58f170b2d9361b327b53b330a9303b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::FuturesConvAdjustmentQuote::meanReversion</definition>
        <argsstring>() const</argsstring>
        <name>meanReversion</name>
        <qualifiedname>QuantLib::FuturesConvAdjustmentQuote::meanReversion</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quotes/futuresconvadjustmentquote.hpp" line="60" column="14" bodyfile="ql/quotes/futuresconvadjustmentquote.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_futures_conv_adjustment_quote_1a0ae5b092b15b3c444ba2be3afad0a604" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::FuturesConvAdjustmentQuote::immDate</definition>
        <argsstring>() const</argsstring>
        <name>immDate</name>
        <qualifiedname>QuantLib::FuturesConvAdjustmentQuote::immDate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quotes/futuresconvadjustmentquote.hpp" line="61" column="14" bodyfile="ql/quotes/futuresconvadjustmentquote.hpp" bodystart="61" bodyend="61"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Quote interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_futures_conv_adjustment_quote_1a5a0c5227a3aae491af7b9639741f2313" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::FuturesConvAdjustmentQuote::value</definition>
        <argsstring>() const override</argsstring>
        <name>value</name>
        <qualifiedname>QuantLib::FuturesConvAdjustmentQuote::value</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_quote_1a25f93d1c25434ae28f20f9416b497ccb">value</reimplements>
        <briefdescription>
<para>returns the current value </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quotes/futuresconvadjustmentquote.hpp" line="52" column="14" bodyfile="ql/quotes/futuresconvadjustmentquote.cpp" bodystart="57" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_futures_conv_adjustment_quote_1a3f39d11e2f9a43c258664081b40a10d4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QuantLib::FuturesConvAdjustmentQuote::isValid</definition>
        <argsstring>() const override</argsstring>
        <name>isValid</name>
        <qualifiedname>QuantLib::FuturesConvAdjustmentQuote::isValid</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_quote_1a9a340a974b8403b9385867b62bb8ae2d">isValid</reimplements>
        <briefdescription>
<para>returns true if the <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> holds a valid value </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quotes/futuresconvadjustmentquote.hpp" line="53" column="14" bodyfile="ql/quotes/futuresconvadjustmentquote.cpp" bodystart="72" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_futures_conv_adjustment_quote_1aff4256964bc8ee2039aead225205edd4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::FuturesConvAdjustmentQuote::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <qualifiedname>QuantLib::FuturesConvAdjustmentQuote::update</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_observer_1a07905c55dca858470fcf4a1aea0005aa">update</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must be implemented in derived classes. An instance of Observer does not call this method directly: instead, it will be called by the observables the instance registered with when they need to notify any changes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quotes/futuresconvadjustmentquote.hpp" line="55" column="14" bodyfile="ql/quotes/futuresconvadjustmentquote.hpp" bodystart="74" bodyend="77"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_futures_conv_adjustment_quote_1a7340c58e2a323b518f4348408dd6b134" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FuturesConvAdjustmentQuote::FuturesConvAdjustmentQuote</definition>
        <argsstring>(const ext::shared_ptr&lt; IborIndex &gt; &amp;index, const Date &amp;futuresDate, Handle&lt; Quote &gt; futuresQuote, Handle&lt; Quote &gt; volatility, Handle&lt; Quote &gt; meanReversion)</argsstring>
        <name>FuturesConvAdjustmentQuote</name>
        <qualifiedname>QuantLib::FuturesConvAdjustmentQuote::FuturesConvAdjustmentQuote</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_ibor_index" kindref="compound">IborIndex</ref> &gt; &amp;</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>futuresDate</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
          <declname>futuresQuote</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
          <declname>volatility</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
          <declname>meanReversion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quotes/futuresconvadjustmentquote.hpp" line="40" column="9" bodyfile="ql/quotes/futuresconvadjustmentquote.cpp" bodystart="27" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_futures_conv_adjustment_quote_1adaf4b29d609d46a847fa3dbb6dc9a0dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FuturesConvAdjustmentQuote::FuturesConvAdjustmentQuote</definition>
        <argsstring>(const ext::shared_ptr&lt; IborIndex &gt; &amp;index, const std::string &amp;immCode, Handle&lt; Quote &gt; futuresQuote, Handle&lt; Quote &gt; volatility, Handle&lt; Quote &gt; meanReversion)</argsstring>
        <name>FuturesConvAdjustmentQuote</name>
        <qualifiedname>QuantLib::FuturesConvAdjustmentQuote::FuturesConvAdjustmentQuote</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_ibor_index" kindref="compound">IborIndex</ref> &gt; &amp;</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>immCode</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
          <declname>futuresQuote</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
          <declname>volatility</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
          <declname>meanReversion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/quotes/futuresconvadjustmentquote.hpp" line="45" column="9" bodyfile="ql/quotes/futuresconvadjustmentquote.cpp" bodystart="42" bodyend="55"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>quote for the futures-convexity adjustment of an index </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::FuturesConvAdjustmentQuote</label>
        <link refid="class_quant_lib_1_1_futures_conv_adjustment_quote"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>QuantLib::Quote</label>
        <link refid="class_quant_lib_1_1_quote"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="5">
        <label>QuantLib::DayCounter</label>
        <link refid="class_quant_lib_1_1_day_counter"/>
      </node>
      <node id="1">
        <label>QuantLib::FuturesConvAdjustmentQuote</label>
        <link refid="class_quant_lib_1_1_futures_conv_adjustment_quote"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>dc_</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>futuresDate_</edgelabel>
          <edgelabel>indexMaturityDate_</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>futuresQuote_</edgelabel>
          <edgelabel>meanReversion_</edgelabel>
          <edgelabel>volatility_</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::Handle&lt; QuantLib::Quote &gt;</label>
        <link refid="class_quant_lib_1_1_handle"/>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>QuantLib::Quote</label>
        <link refid="class_quant_lib_1_1_quote"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/quotes/futuresconvadjustmentquote.hpp" line="37" column="5" bodyfile="ql/quotes/futuresconvadjustmentquote.hpp" bodystart="38" bodyend="70"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_futures_conv_adjustment_quote_1a3ef5f66a17e9d7dd00597b0c68ca52d4" prot="protected" virt="non-virtual"><scope>QuantLib::FuturesConvAdjustmentQuote</scope><name>dc_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::FuturesConvAdjustmentQuote</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_futures_conv_adjustment_quote_1a7340c58e2a323b518f4348408dd6b134" prot="public" virt="non-virtual"><scope>QuantLib::FuturesConvAdjustmentQuote</scope><name>FuturesConvAdjustmentQuote</name></member>
      <member refid="class_quant_lib_1_1_futures_conv_adjustment_quote_1adaf4b29d609d46a847fa3dbb6dc9a0dc" prot="public" virt="non-virtual"><scope>QuantLib::FuturesConvAdjustmentQuote</scope><name>FuturesConvAdjustmentQuote</name></member>
      <member refid="class_quant_lib_1_1_futures_conv_adjustment_quote_1af0878b324b49d76789a863722f5215b4" prot="protected" virt="non-virtual"><scope>QuantLib::FuturesConvAdjustmentQuote</scope><name>futuresDate_</name></member>
      <member refid="class_quant_lib_1_1_futures_conv_adjustment_quote_1a082c824b40df506a3fd1fe462977cad7" prot="protected" virt="non-virtual"><scope>QuantLib::FuturesConvAdjustmentQuote</scope><name>futuresQuote_</name></member>
      <member refid="class_quant_lib_1_1_futures_conv_adjustment_quote_1a9b83fc77d03f68f5957677521d51c889" prot="public" virt="non-virtual"><scope>QuantLib::FuturesConvAdjustmentQuote</scope><name>futuresValue</name></member>
      <member refid="class_quant_lib_1_1_futures_conv_adjustment_quote_1a0ae5b092b15b3c444ba2be3afad0a604" prot="public" virt="non-virtual"><scope>QuantLib::FuturesConvAdjustmentQuote</scope><name>immDate</name></member>
      <member refid="class_quant_lib_1_1_futures_conv_adjustment_quote_1a5a7eddd3751370239a6e111069f81266" prot="protected" virt="non-virtual"><scope>QuantLib::FuturesConvAdjustmentQuote</scope><name>indexMaturityDate_</name></member>
      <member refid="class_quant_lib_1_1_futures_conv_adjustment_quote_1a3f39d11e2f9a43c258664081b40a10d4" prot="public" virt="virtual"><scope>QuantLib::FuturesConvAdjustmentQuote</scope><name>isValid</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::FuturesConvAdjustmentQuote</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_futures_conv_adjustment_quote_1a2d58f170b2d9361b327b53b330a9303b" prot="public" virt="non-virtual"><scope>QuantLib::FuturesConvAdjustmentQuote</scope><name>meanReversion</name></member>
      <member refid="class_quant_lib_1_1_futures_conv_adjustment_quote_1abde6e977d866e9f0aac98901f0e24381" prot="protected" virt="non-virtual"><scope>QuantLib::FuturesConvAdjustmentQuote</scope><name>meanReversion_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::FuturesConvAdjustmentQuote</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::FuturesConvAdjustmentQuote</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Quote::"><scope>QuantLib::FuturesConvAdjustmentQuote</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Quote::"><scope>QuantLib::FuturesConvAdjustmentQuote</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::FuturesConvAdjustmentQuote</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::FuturesConvAdjustmentQuote</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::FuturesConvAdjustmentQuote</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Quote::"><scope>QuantLib::FuturesConvAdjustmentQuote</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Quote::"><scope>QuantLib::FuturesConvAdjustmentQuote</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_futures_conv_adjustment_quote_1ade1e87d988cab53c71c586a73cd20371" prot="protected" virt="non-virtual"><scope>QuantLib::FuturesConvAdjustmentQuote</scope><name>rate_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::FuturesConvAdjustmentQuote</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::FuturesConvAdjustmentQuote</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::FuturesConvAdjustmentQuote</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::FuturesConvAdjustmentQuote</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_futures_conv_adjustment_quote_1aff4256964bc8ee2039aead225205edd4" prot="public" virt="virtual"><scope>QuantLib::FuturesConvAdjustmentQuote</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_futures_conv_adjustment_quote_1a5a0c5227a3aae491af7b9639741f2313" prot="public" virt="virtual"><scope>QuantLib::FuturesConvAdjustmentQuote</scope><name>value</name></member>
      <member refid="class_quant_lib_1_1_futures_conv_adjustment_quote_1acb30e890b50b5a4096ed11bcc45285b2" prot="public" virt="non-virtual"><scope>QuantLib::FuturesConvAdjustmentQuote</scope><name>volatility</name></member>
      <member refid="class_quant_lib_1_1_futures_conv_adjustment_quote_1a0b6992b7437e4af8699e8478bbd4b237" prot="protected" virt="non-virtual"><scope>QuantLib::FuturesConvAdjustmentQuote</scope><name>volatility_</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::FuturesConvAdjustmentQuote</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::FuturesConvAdjustmentQuote</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_quote_1a0433957cb1683b2ca329ef56bd741143" prot="public" virt="non-virtual"><scope>QuantLib::FuturesConvAdjustmentQuote</scope><name>~Quote</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

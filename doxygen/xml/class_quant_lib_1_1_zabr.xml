<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_zabr" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::Zabr</compoundname>
    <includes refid="zabrinterpolation_8hpp" local="no">zabrinterpolation.hpp</includes>
    <templateparamlist>
      <param>
        <type>class Evaluation</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_zabr_1a3817d02751a280ab8be115a010b6d70f" prot="public" static="yes" mutable="no">
        <type>const bool</type>
        <definition>const bool QuantLib::Zabr&lt; Evaluation &gt;::global</definition>
        <argsstring></argsstring>
        <name>global</name>
        <qualifiedname>QuantLib::Zabr::global</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabrinterpolation.hpp" line="202" column="23" bodyfile="ql/experimental/volatility/zabrinterpolation.hpp" bodystart="202" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_zabr_1a283814673ce8f4ef9d107543dd986bf7" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>Time QuantLib::Zabr&lt; Evaluation &gt;::t_</definition>
        <argsstring></argsstring>
        <name>t_</name>
        <qualifiedname>QuantLib::Zabr::t_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabrinterpolation.hpp" line="205" column="10" bodyfile="ql/experimental/volatility/zabrinterpolation.hpp" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_zabr_1ae3ccaf44e6f09c0012c9bcc1fc85d900" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Zabr&lt; Evaluation &gt;::forward_</definition>
        <argsstring></argsstring>
        <name>forward_</name>
        <qualifiedname>QuantLib::Zabr::forward_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabrinterpolation.hpp" line="206" column="10" bodyfile="ql/experimental/volatility/zabrinterpolation.hpp" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_zabr_1a91ce92e8f3e9ce6e171294867fd6c466" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Zabr&lt; Evaluation &gt;::alpha_</definition>
        <argsstring></argsstring>
        <name>alpha_</name>
        <qualifiedname>QuantLib::Zabr::alpha_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabrinterpolation.hpp" line="207" column="10" bodyfile="ql/experimental/volatility/zabrinterpolation.hpp" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_zabr_1a1caa21699a2561e288c583ddbda0d74b" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Zabr&lt; Evaluation &gt;::beta_</definition>
        <argsstring></argsstring>
        <name>beta_</name>
        <qualifiedname>QuantLib::Zabr::beta_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabrinterpolation.hpp" line="207" column="17" bodyfile="ql/experimental/volatility/zabrinterpolation.hpp" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_zabr_1a42326d49cbe9fe42da537505218fe69e" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Zabr&lt; Evaluation &gt;::nu_</definition>
        <argsstring></argsstring>
        <name>nu_</name>
        <qualifiedname>QuantLib::Zabr::nu_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabrinterpolation.hpp" line="207" column="23" bodyfile="ql/experimental/volatility/zabrinterpolation.hpp" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_zabr_1ad7693c2781493d0ddf3ad2de02af1d3f" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Zabr&lt; Evaluation &gt;::rho_</definition>
        <argsstring></argsstring>
        <name>rho_</name>
        <qualifiedname>QuantLib::Zabr::rho_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabrinterpolation.hpp" line="207" column="27" bodyfile="ql/experimental/volatility/zabrinterpolation.hpp" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_zabr_1afef14577291e1b40330911859c9ee795" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Zabr&lt; Evaluation &gt;::gamma_</definition>
        <argsstring></argsstring>
        <name>gamma_</name>
        <qualifiedname>QuantLib::Zabr::gamma_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabrinterpolation.hpp" line="207" column="32" bodyfile="ql/experimental/volatility/zabrinterpolation.hpp" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_zabr_1aa91d377f5541d9c9dd3ce6092f432fbc" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::Zabr&lt; Evaluation &gt;::alphaIsFixed_</definition>
        <argsstring></argsstring>
        <name>alphaIsFixed_</name>
        <qualifiedname>QuantLib::Zabr::alphaIsFixed_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabrinterpolation.hpp" line="208" column="10" bodyfile="ql/experimental/volatility/zabrinterpolation.hpp" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_zabr_1a89805881069189214ecb4f485a98c587" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::Zabr&lt; Evaluation &gt;::betaIsFixed_</definition>
        <argsstring></argsstring>
        <name>betaIsFixed_</name>
        <qualifiedname>QuantLib::Zabr::betaIsFixed_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabrinterpolation.hpp" line="208" column="24" bodyfile="ql/experimental/volatility/zabrinterpolation.hpp" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_zabr_1aa358624c931cbb160f2476df6562315a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::Zabr&lt; Evaluation &gt;::nuIsFixed_</definition>
        <argsstring></argsstring>
        <name>nuIsFixed_</name>
        <qualifiedname>QuantLib::Zabr::nuIsFixed_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabrinterpolation.hpp" line="208" column="37" bodyfile="ql/experimental/volatility/zabrinterpolation.hpp" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_zabr_1ae59e24b8acb4b04ff4c9ef8af505496b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::Zabr&lt; Evaluation &gt;::rhoIsFixed_</definition>
        <argsstring></argsstring>
        <name>rhoIsFixed_</name>
        <qualifiedname>QuantLib::Zabr::rhoIsFixed_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabrinterpolation.hpp" line="208" column="48" bodyfile="ql/experimental/volatility/zabrinterpolation.hpp" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_zabr_1a9ccd58c8a9696d5c1fb58ccc4fc8e424" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::Zabr&lt; Evaluation &gt;::gammaIsFixed_</definition>
        <argsstring></argsstring>
        <name>gammaIsFixed_</name>
        <qualifiedname>QuantLib::Zabr::gammaIsFixed_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabrinterpolation.hpp" line="208" column="60" bodyfile="ql/experimental/volatility/zabrinterpolation.hpp" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_zabr_1af0a9c7d4238efb4b2c3170c2162f25de" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::Zabr&lt; Evaluation &gt;::vegaWeighted_</definition>
        <argsstring></argsstring>
        <name>vegaWeighted_</name>
        <qualifiedname>QuantLib::Zabr::vegaWeighted_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabrinterpolation.hpp" line="209" column="10" bodyfile="ql/experimental/volatility/zabrinterpolation.hpp" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_zabr_1af6012774b5e00c531e869561e223d99c" prot="private" static="no" mutable="no">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_end_criteria" kindref="compound">EndCriteria</ref> &gt;</type>
        <definition>const ext::shared_ptr&lt;EndCriteria&gt; QuantLib::Zabr&lt; Evaluation &gt;::endCriteria_</definition>
        <argsstring></argsstring>
        <name>endCriteria_</name>
        <qualifiedname>QuantLib::Zabr::endCriteria_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabrinterpolation.hpp" line="210" column="27" bodyfile="ql/experimental/volatility/zabrinterpolation.hpp" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_zabr_1a3379156291382c663c3f068c91ff20ca" prot="private" static="no" mutable="no">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_optimization_method" kindref="compound">OptimizationMethod</ref> &gt;</type>
        <definition>const ext::shared_ptr&lt;OptimizationMethod&gt; QuantLib::Zabr&lt; Evaluation &gt;::optMethod_</definition>
        <argsstring></argsstring>
        <name>optMethod_</name>
        <qualifiedname>QuantLib::Zabr::optMethod_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabrinterpolation.hpp" line="211" column="27" bodyfile="ql/experimental/volatility/zabrinterpolation.hpp" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_zabr_1afed8d3e130b7b8635b4ab3e2407608e2" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::Zabr&lt; Evaluation &gt;::errorAccept_</definition>
        <argsstring></argsstring>
        <name>errorAccept_</name>
        <qualifiedname>QuantLib::Zabr::errorAccept_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabrinterpolation.hpp" line="212" column="16" bodyfile="ql/experimental/volatility/zabrinterpolation.hpp" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_zabr_1a0f2692446228bcd7b16c6bd703dd0fff" prot="private" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool QuantLib::Zabr&lt; Evaluation &gt;::useMaxError_</definition>
        <argsstring></argsstring>
        <name>useMaxError_</name>
        <qualifiedname>QuantLib::Zabr::useMaxError_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabrinterpolation.hpp" line="213" column="16" bodyfile="ql/experimental/volatility/zabrinterpolation.hpp" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_zabr_1ad3107d9ce96e628559c88fc0d32b1a3c" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>const Size QuantLib::Zabr&lt; Evaluation &gt;::maxGuesses_</definition>
        <argsstring></argsstring>
        <name>maxGuesses_</name>
        <qualifiedname>QuantLib::Zabr::maxGuesses_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabrinterpolation.hpp" line="214" column="16" bodyfile="ql/experimental/volatility/zabrinterpolation.hpp" bodystart="214" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_zabr_1a2147c48332f5543e547385916ce4439f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Zabr&lt; Evaluation &gt;::Zabr</definition>
        <argsstring>(Time t, Real forward, Real alpha, Real beta, Real nu, Real rho, Real gamma, bool alphaIsFixed, bool betaIsFixed, bool nuIsFixed, bool rhoIsFixed, bool gammaIsFixed, bool vegaWeighted=false, ext::shared_ptr&lt; EndCriteria &gt; endCriteria=ext::shared_ptr&lt; EndCriteria &gt;(), ext::shared_ptr&lt; OptimizationMethod &gt; optMethod=ext::shared_ptr&lt; OptimizationMethod &gt;(), const Real errorAccept=0.0020, const bool useMaxError=false, const Size maxGuesses=50)</argsstring>
        <name>Zabr</name>
        <qualifiedname>QuantLib::Zabr::Zabr</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>forward</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>alpha</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>beta</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>nu</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>rho</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>gamma</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>alphaIsFixed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>betaIsFixed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>nuIsFixed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>rhoIsFixed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>gammaIsFixed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>vegaWeighted</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_end_criteria" kindref="compound">EndCriteria</ref> &gt;</type>
          <declname>endCriteria</declname>
          <defval>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_end_criteria" kindref="compound">EndCriteria</ref> &gt;()</defval>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_optimization_method" kindref="compound">OptimizationMethod</ref> &gt;</type>
          <declname>optMethod</declname>
          <defval>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_optimization_method" kindref="compound">OptimizationMethod</ref> &gt;()</defval>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>errorAccept</declname>
          <defval>0.0020</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>useMaxError</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>maxGuesses</declname>
          <defval>50</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabrinterpolation.hpp" line="170" column="5" bodyfile="ql/experimental/volatility/zabrinterpolation.hpp" bodystart="170" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_zabr_1ae9c1ed176a4b494783d6647c714f7225" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I1</type>
          </param>
          <param>
            <type>class I2</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_quant_lib_1_1_interpolation" kindref="compound">Interpolation</ref></type>
        <definition>Interpolation QuantLib::Zabr&lt; Evaluation &gt;::interpolate</definition>
        <argsstring>(const I1 &amp;xBegin, const I1 &amp;xEnd, const I2 &amp;yBegin) const</argsstring>
        <name>interpolate</name>
        <qualifiedname>QuantLib::Zabr::interpolate</qualifiedname>
        <param>
          <type>const I1 &amp;</type>
          <declname>xBegin</declname>
        </param>
        <param>
          <type>const I1 &amp;</type>
          <declname>xEnd</declname>
        </param>
        <param>
          <type>const I2 &amp;</type>
          <declname>yBegin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/zabrinterpolation.hpp" line="194" column="19" bodyfile="ql/experimental/volatility/zabrinterpolation.hpp" bodystart="194" bodyend="201"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>no arbtrage sabr interpolation factory and traits </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/experimental/volatility/zabrinterpolation.hpp" line="168" column="11" bodyfile="ql/experimental/volatility/zabrinterpolation.hpp" bodystart="168" bodyend="215"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_zabr_1a91ce92e8f3e9ce6e171294867fd6c466" prot="private" virt="non-virtual"><scope>QuantLib::Zabr</scope><name>alpha_</name></member>
      <member refid="class_quant_lib_1_1_zabr_1aa91d377f5541d9c9dd3ce6092f432fbc" prot="private" virt="non-virtual"><scope>QuantLib::Zabr</scope><name>alphaIsFixed_</name></member>
      <member refid="class_quant_lib_1_1_zabr_1a1caa21699a2561e288c583ddbda0d74b" prot="private" virt="non-virtual"><scope>QuantLib::Zabr</scope><name>beta_</name></member>
      <member refid="class_quant_lib_1_1_zabr_1a89805881069189214ecb4f485a98c587" prot="private" virt="non-virtual"><scope>QuantLib::Zabr</scope><name>betaIsFixed_</name></member>
      <member refid="class_quant_lib_1_1_zabr_1af6012774b5e00c531e869561e223d99c" prot="private" virt="non-virtual"><scope>QuantLib::Zabr</scope><name>endCriteria_</name></member>
      <member refid="class_quant_lib_1_1_zabr_1afed8d3e130b7b8635b4ab3e2407608e2" prot="private" virt="non-virtual"><scope>QuantLib::Zabr</scope><name>errorAccept_</name></member>
      <member refid="class_quant_lib_1_1_zabr_1ae3ccaf44e6f09c0012c9bcc1fc85d900" prot="private" virt="non-virtual"><scope>QuantLib::Zabr</scope><name>forward_</name></member>
      <member refid="class_quant_lib_1_1_zabr_1afef14577291e1b40330911859c9ee795" prot="private" virt="non-virtual"><scope>QuantLib::Zabr</scope><name>gamma_</name></member>
      <member refid="class_quant_lib_1_1_zabr_1a9ccd58c8a9696d5c1fb58ccc4fc8e424" prot="private" virt="non-virtual"><scope>QuantLib::Zabr</scope><name>gammaIsFixed_</name></member>
      <member refid="class_quant_lib_1_1_zabr_1a3817d02751a280ab8be115a010b6d70f" prot="public" virt="non-virtual"><scope>QuantLib::Zabr</scope><name>global</name></member>
      <member refid="class_quant_lib_1_1_zabr_1ae9c1ed176a4b494783d6647c714f7225" prot="public" virt="non-virtual"><scope>QuantLib::Zabr</scope><name>interpolate</name></member>
      <member refid="class_quant_lib_1_1_zabr_1ad3107d9ce96e628559c88fc0d32b1a3c" prot="private" virt="non-virtual"><scope>QuantLib::Zabr</scope><name>maxGuesses_</name></member>
      <member refid="class_quant_lib_1_1_zabr_1a42326d49cbe9fe42da537505218fe69e" prot="private" virt="non-virtual"><scope>QuantLib::Zabr</scope><name>nu_</name></member>
      <member refid="class_quant_lib_1_1_zabr_1aa358624c931cbb160f2476df6562315a" prot="private" virt="non-virtual"><scope>QuantLib::Zabr</scope><name>nuIsFixed_</name></member>
      <member refid="class_quant_lib_1_1_zabr_1a3379156291382c663c3f068c91ff20ca" prot="private" virt="non-virtual"><scope>QuantLib::Zabr</scope><name>optMethod_</name></member>
      <member refid="class_quant_lib_1_1_zabr_1ad7693c2781493d0ddf3ad2de02af1d3f" prot="private" virt="non-virtual"><scope>QuantLib::Zabr</scope><name>rho_</name></member>
      <member refid="class_quant_lib_1_1_zabr_1ae59e24b8acb4b04ff4c9ef8af505496b" prot="private" virt="non-virtual"><scope>QuantLib::Zabr</scope><name>rhoIsFixed_</name></member>
      <member refid="class_quant_lib_1_1_zabr_1a283814673ce8f4ef9d107543dd986bf7" prot="private" virt="non-virtual"><scope>QuantLib::Zabr</scope><name>t_</name></member>
      <member refid="class_quant_lib_1_1_zabr_1a0f2692446228bcd7b16c6bd703dd0fff" prot="private" virt="non-virtual"><scope>QuantLib::Zabr</scope><name>useMaxError_</name></member>
      <member refid="class_quant_lib_1_1_zabr_1af0a9c7d4238efb4b2c3170c2162f25de" prot="private" virt="non-virtual"><scope>QuantLib::Zabr</scope><name>vegaWeighted_</name></member>
      <member refid="class_quant_lib_1_1_zabr_1a2147c48332f5543e547385916ce4439f" prot="public" virt="non-virtual"><scope>QuantLib::Zabr</scope><name>Zabr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

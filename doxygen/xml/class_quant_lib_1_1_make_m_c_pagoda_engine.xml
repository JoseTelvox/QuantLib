<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_make_m_c_pagoda_engine" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::MakeMCPagodaEngine</compoundname>
    <includes refid="mcpagodaengine_8hpp" local="no">mcpagodaengine.hpp</includes>
    <templateparamlist>
      <param>
        <type>class RNG</type>
        <defval><ref refid="namespace_quant_lib_1a68b9aaf5f0c17983506b1a1db8575ab0" kindref="member">PseudoRandom</ref></defval>
      </param>
      <param>
        <type>class S</type>
        <defval><ref refid="namespace_quant_lib_1ae2e788da35d2b866040a03b96227ee6e" kindref="member">Statistics</ref></defval>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_pagoda_engine_1ab28bb0ca8a5bada8e2e202f6c1dc1531" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_stochastic_process_array" kindref="compound">StochasticProcessArray</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;StochasticProcessArray&gt; QuantLib::MakeMCPagodaEngine&lt; RNG, S &gt;::process_</definition>
        <argsstring></argsstring>
        <name>process_</name>
        <qualifiedname>QuantLib::MakeMCPagodaEngine::process_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/mcpagodaengine.hpp" line="107" column="25" bodyfile="ql/experimental/exoticoptions/mcpagodaengine.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_pagoda_engine_1a739a288ef810a2258f3406ccd9d943c8" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::MakeMCPagodaEngine&lt; RNG, S &gt;::brownianBridge_</definition>
        <argsstring></argsstring>
        <name>brownianBridge_</name>
        <qualifiedname>QuantLib::MakeMCPagodaEngine::brownianBridge_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/mcpagodaengine.hpp" line="108" column="14" bodyfile="ql/experimental/exoticoptions/mcpagodaengine.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_pagoda_engine_1a95dbf2db3d3afd1838d867ae2e0fb7c4" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::MakeMCPagodaEngine&lt; RNG, S &gt;::antithetic_</definition>
        <argsstring></argsstring>
        <name>antithetic_</name>
        <qualifiedname>QuantLib::MakeMCPagodaEngine::antithetic_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/mcpagodaengine.hpp" line="108" column="31" bodyfile="ql/experimental/exoticoptions/mcpagodaengine.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_pagoda_engine_1a0551cbe2840581efa1cac4f1bfaee8b2" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCPagodaEngine&lt; RNG, S &gt;::samples_</definition>
        <argsstring></argsstring>
        <name>samples_</name>
        <qualifiedname>QuantLib::MakeMCPagodaEngine::samples_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/mcpagodaengine.hpp" line="109" column="14" bodyfile="ql/experimental/exoticoptions/mcpagodaengine.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_pagoda_engine_1a32a752db7ead82d76ce589531e6a1159" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCPagodaEngine&lt; RNG, S &gt;::maxSamples_</definition>
        <argsstring></argsstring>
        <name>maxSamples_</name>
        <qualifiedname>QuantLib::MakeMCPagodaEngine::maxSamples_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/mcpagodaengine.hpp" line="109" column="23" bodyfile="ql/experimental/exoticoptions/mcpagodaengine.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_pagoda_engine_1ab939693f84b105c1dd863feff5ef6b34" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::MakeMCPagodaEngine&lt; RNG, S &gt;::tolerance_</definition>
        <argsstring></argsstring>
        <name>tolerance_</name>
        <qualifiedname>QuantLib::MakeMCPagodaEngine::tolerance_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/mcpagodaengine.hpp" line="110" column="14" bodyfile="ql/experimental/exoticoptions/mcpagodaengine.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_pagoda_engine_1a69111a9aa9e3d15ca598902dd77eef10" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
        <definition>BigNatural QuantLib::MakeMCPagodaEngine&lt; RNG, S &gt;::seed_</definition>
        <argsstring></argsstring>
        <name>seed_</name>
        <qualifiedname>QuantLib::MakeMCPagodaEngine::seed_</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/mcpagodaengine.hpp" line="111" column="20" bodyfile="ql/experimental/exoticoptions/mcpagodaengine.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_pagoda_engine_1a14ae8a2d815452f5f14104affa938adc" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::MakeMCPagodaEngine&lt; RNG, S &gt;::MakeMCPagodaEngine</definition>
        <argsstring>(ext::shared_ptr&lt; StochasticProcessArray &gt;)</argsstring>
        <name>MakeMCPagodaEngine</name>
        <qualifiedname>QuantLib::MakeMCPagodaEngine::MakeMCPagodaEngine</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_stochastic_process_array" kindref="compound">StochasticProcessArray</ref> &gt;</type>
          <defname>process</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/mcpagodaengine.hpp" line="96" column="18" bodyfile="ql/experimental/exoticoptions/mcpagodaengine.hpp" bodystart="179" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_pagoda_engine_1ad589939909867371a62df60f16714599" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_pagoda_engine" kindref="compound">MakeMCPagodaEngine</ref> &amp;</type>
        <definition>MakeMCPagodaEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCPagodaEngine&lt; RNG, S &gt;::withBrownianBridge</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>withBrownianBridge</name>
        <qualifiedname>QuantLib::MakeMCPagodaEngine::withBrownianBridge</qualifiedname>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/mcpagodaengine.hpp" line="98" column="28" bodyfile="ql/experimental/exoticoptions/mcpagodaengine.hpp" bodystart="186" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_pagoda_engine_1a5924f19e003689326f1cb9ecc28766c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_pagoda_engine" kindref="compound">MakeMCPagodaEngine</ref> &amp;</type>
        <definition>MakeMCPagodaEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCPagodaEngine&lt; RNG, S &gt;::withAntitheticVariate</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>withAntitheticVariate</name>
        <qualifiedname>QuantLib::MakeMCPagodaEngine::withAntitheticVariate</qualifiedname>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/mcpagodaengine.hpp" line="99" column="28" bodyfile="ql/experimental/exoticoptions/mcpagodaengine.hpp" bodystart="193" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_pagoda_engine_1a3971cb778b9d4abba6d5e4dbf3eb5bc4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_pagoda_engine" kindref="compound">MakeMCPagodaEngine</ref> &amp;</type>
        <definition>MakeMCPagodaEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCPagodaEngine&lt; RNG, S &gt;::withSamples</definition>
        <argsstring>(Size samples)</argsstring>
        <name>withSamples</name>
        <qualifiedname>QuantLib::MakeMCPagodaEngine::withSamples</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/mcpagodaengine.hpp" line="100" column="28" bodyfile="ql/experimental/exoticoptions/mcpagodaengine.hpp" bodystart="200" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_pagoda_engine_1ae70b0acf9bb9ee8dcfffdfec9f9b1dab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_pagoda_engine" kindref="compound">MakeMCPagodaEngine</ref> &amp;</type>
        <definition>MakeMCPagodaEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCPagodaEngine&lt; RNG, S &gt;::withAbsoluteTolerance</definition>
        <argsstring>(Real tolerance)</argsstring>
        <name>withAbsoluteTolerance</name>
        <qualifiedname>QuantLib::MakeMCPagodaEngine::withAbsoluteTolerance</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>tolerance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/mcpagodaengine.hpp" line="101" column="28" bodyfile="ql/experimental/exoticoptions/mcpagodaengine.hpp" bodystart="209" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_pagoda_engine_1aa747f1e94cf1e301e6ecb78d97086878" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_pagoda_engine" kindref="compound">MakeMCPagodaEngine</ref> &amp;</type>
        <definition>MakeMCPagodaEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCPagodaEngine&lt; RNG, S &gt;::withMaxSamples</definition>
        <argsstring>(Size samples)</argsstring>
        <name>withMaxSamples</name>
        <qualifiedname>QuantLib::MakeMCPagodaEngine::withMaxSamples</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/mcpagodaengine.hpp" line="102" column="28" bodyfile="ql/experimental/exoticoptions/mcpagodaengine.hpp" bodystart="221" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_pagoda_engine_1a56f82c7590d9acb5a3cbffc45b2c97b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_pagoda_engine" kindref="compound">MakeMCPagodaEngine</ref> &amp;</type>
        <definition>MakeMCPagodaEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCPagodaEngine&lt; RNG, S &gt;::withSeed</definition>
        <argsstring>(BigNatural seed)</argsstring>
        <name>withSeed</name>
        <qualifiedname>QuantLib::MakeMCPagodaEngine::withSeed</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/mcpagodaengine.hpp" line="103" column="28" bodyfile="ql/experimental/exoticoptions/mcpagodaengine.hpp" bodystart="228" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_pagoda_engine_1af6163baa5a717441f67bd9aa698e8399" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::MakeMCPagodaEngine&lt; RNG, S &gt;::operator ext::shared_ptr&lt; PricingEngine &gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator ext::shared_ptr&lt; PricingEngine &gt;</name>
        <qualifiedname>QuantLib::MakeMCPagodaEngine::shared_ptr&lt; PricingEngine &gt;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/mcpagodaengine.hpp" line="105" column="9" bodyfile="ql/experimental/exoticoptions/mcpagodaengine.hpp" bodystart="236" bodyend="244"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Monte Carlo pagoda-option engine factory. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/experimental/exoticoptions/mcpagodaengine.hpp" line="94" column="5" bodyfile="ql/experimental/exoticoptions/mcpagodaengine.hpp" bodystart="94" bodyend="112"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_make_m_c_pagoda_engine_1a95dbf2db3d3afd1838d867ae2e0fb7c4" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCPagodaEngine</scope><name>antithetic_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_pagoda_engine_1a739a288ef810a2258f3406ccd9d943c8" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCPagodaEngine</scope><name>brownianBridge_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_pagoda_engine_1a14ae8a2d815452f5f14104affa938adc" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCPagodaEngine</scope><name>MakeMCPagodaEngine</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_pagoda_engine_1a32a752db7ead82d76ce589531e6a1159" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCPagodaEngine</scope><name>maxSamples_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_pagoda_engine_1af6163baa5a717441f67bd9aa698e8399" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCPagodaEngine</scope><name>operator ext::shared_ptr&lt; PricingEngine &gt;</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_pagoda_engine_1ab28bb0ca8a5bada8e2e202f6c1dc1531" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCPagodaEngine</scope><name>process_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_pagoda_engine_1a0551cbe2840581efa1cac4f1bfaee8b2" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCPagodaEngine</scope><name>samples_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_pagoda_engine_1a69111a9aa9e3d15ca598902dd77eef10" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCPagodaEngine</scope><name>seed_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_pagoda_engine_1ab939693f84b105c1dd863feff5ef6b34" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCPagodaEngine</scope><name>tolerance_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_pagoda_engine_1ae70b0acf9bb9ee8dcfffdfec9f9b1dab" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCPagodaEngine</scope><name>withAbsoluteTolerance</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_pagoda_engine_1a5924f19e003689326f1cb9ecc28766c7" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCPagodaEngine</scope><name>withAntitheticVariate</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_pagoda_engine_1ad589939909867371a62df60f16714599" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCPagodaEngine</scope><name>withBrownianBridge</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_pagoda_engine_1aa747f1e94cf1e301e6ecb78d97086878" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCPagodaEngine</scope><name>withMaxSamples</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_pagoda_engine_1a3971cb778b9d4abba6d5e4dbf3eb5bc4" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCPagodaEngine</scope><name>withSamples</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_pagoda_engine_1a56f82c7590d9acb5a3cbffc45b2c97b3" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCPagodaEngine</scope><name>withSeed</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_covariance_decomposition" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::CovarianceDecomposition</compoundname>
    <includes refid="getcovariance_8hpp" local="no">getcovariance.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_covariance_decomposition_1a6d93eb77cffec01b4813cb1540968e64" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::CovarianceDecomposition::variances_</definition>
        <argsstring></argsstring>
        <name>variances_</name>
        <qualifiedname>QuantLib::CovarianceDecomposition::variances_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/getcovariance.hpp" line="108" column="15" bodyfile="ql/math/matrixutilities/getcovariance.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_covariance_decomposition_1ae4f0cc5732cf99ec1622969accc0c270" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::CovarianceDecomposition::stdDevs_</definition>
        <argsstring></argsstring>
        <name>stdDevs_</name>
        <qualifiedname>QuantLib::CovarianceDecomposition::stdDevs_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/getcovariance.hpp" line="108" column="26" bodyfile="ql/math/matrixutilities/getcovariance.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_covariance_decomposition_1ad5523f7f349d5705b8cbe27b738f5c26" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::CovarianceDecomposition::correlationMatrix_</definition>
        <argsstring></argsstring>
        <name>correlationMatrix_</name>
        <qualifiedname>QuantLib::CovarianceDecomposition::correlationMatrix_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/getcovariance.hpp" line="109" column="16" bodyfile="ql/math/matrixutilities/getcovariance.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_covariance_decomposition_1ab50cf43fa93ab70cb98b774b2120e14b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::CovarianceDecomposition::CovarianceDecomposition</definition>
        <argsstring>(const Matrix &amp;covarianceMatrix, Real tolerance=1.0e-12)</argsstring>
        <name>CovarianceDecomposition</name>
        <qualifiedname>QuantLib::CovarianceDecomposition::CovarianceDecomposition</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>covarianceMatrix</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>tolerance</declname>
          <defval>1.0e-12</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>covarianceMatrix must be symmetric </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/getcovariance.hpp" line="98" column="9" bodyfile="ql/math/matrixutilities/getcovariance.cpp" bodystart="24" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_covariance_decomposition_1adc4ca5b7b8fffc6da8a6db4b47b05c56" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
        <definition>const Array &amp; QuantLib::CovarianceDecomposition::variances</definition>
        <argsstring>() const</argsstring>
        <name>variances</name>
        <qualifiedname>QuantLib::CovarianceDecomposition::variances</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the variances <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/getcovariance.hpp" line="102" column="21" bodyfile="ql/math/matrixutilities/getcovariance.hpp" bodystart="102" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_covariance_decomposition_1a0fd4804c91267f71e5c9f8ed43f00e47" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
        <definition>const Array &amp; QuantLib::CovarianceDecomposition::standardDeviations</definition>
        <argsstring>() const</argsstring>
        <name>standardDeviations</name>
        <qualifiedname>QuantLib::CovarianceDecomposition::standardDeviations</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the standard deviations <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/getcovariance.hpp" line="104" column="21" bodyfile="ql/math/matrixutilities/getcovariance.hpp" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_covariance_decomposition_1a3a57933802e1763c1bddafa94e8d8726" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
        <definition>const Matrix &amp; QuantLib::CovarianceDecomposition::correlationMatrix</definition>
        <argsstring>() const</argsstring>
        <name>correlationMatrix</name>
        <qualifiedname>QuantLib::CovarianceDecomposition::correlationMatrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the correlation matrix </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/getcovariance.hpp" line="106" column="22" bodyfile="ql/math/matrixutilities/getcovariance.hpp" bodystart="106" bodyend="106"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Covariance decomposition into correlation and variances. </para>
    </briefdescription>
    <detaileddescription>
<para>Extracts the correlation matrix and the vector of variances out of the input covariance matrix.</para>
<para>Note that only the lower symmetric part of the covariance matrix is used.</para>
<para><simplesect kind="pre"><para>The covariance matrix must be symmetric.</para>
</simplesect>
<xrefsect id="test_1_test000050"><xreftitle>Test</xreftitle><xrefdescription><para>cross checked with getCovariance </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <location file="ql/math/matrixutilities/getcovariance.hpp" line="95" column="5" bodyfile="ql/math/matrixutilities/getcovariance.hpp" bodystart="95" bodyend="110"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_covariance_decomposition_1a3a57933802e1763c1bddafa94e8d8726" prot="public" virt="non-virtual"><scope>QuantLib::CovarianceDecomposition</scope><name>correlationMatrix</name></member>
      <member refid="class_quant_lib_1_1_covariance_decomposition_1ad5523f7f349d5705b8cbe27b738f5c26" prot="private" virt="non-virtual"><scope>QuantLib::CovarianceDecomposition</scope><name>correlationMatrix_</name></member>
      <member refid="class_quant_lib_1_1_covariance_decomposition_1ab50cf43fa93ab70cb98b774b2120e14b" prot="public" virt="non-virtual"><scope>QuantLib::CovarianceDecomposition</scope><name>CovarianceDecomposition</name></member>
      <member refid="class_quant_lib_1_1_covariance_decomposition_1a0fd4804c91267f71e5c9f8ed43f00e47" prot="public" virt="non-virtual"><scope>QuantLib::CovarianceDecomposition</scope><name>standardDeviations</name></member>
      <member refid="class_quant_lib_1_1_covariance_decomposition_1ae4f0cc5732cf99ec1622969accc0c270" prot="private" virt="non-virtual"><scope>QuantLib::CovarianceDecomposition</scope><name>stdDevs_</name></member>
      <member refid="class_quant_lib_1_1_covariance_decomposition_1adc4ca5b7b8fffc6da8a6db4b47b05c56" prot="public" virt="non-virtual"><scope>QuantLib::CovarianceDecomposition</scope><name>variances</name></member>
      <member refid="class_quant_lib_1_1_covariance_decomposition_1a6d93eb77cffec01b4813cb1540968e64" prot="private" virt="non-virtual"><scope>QuantLib::CovarianceDecomposition</scope><name>variances_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

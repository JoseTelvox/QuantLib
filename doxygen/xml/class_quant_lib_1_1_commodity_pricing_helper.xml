<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_commodity_pricing_helper" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::CommodityPricingHelper</compoundname>
    <includes refid="commoditypricinghelpers_8hpp" local="no">commoditypricinghelpers.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_commodity_pricing_helper_1ac4dbf0cdeaf96e0f2b8e378cae9b9968" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::CommodityPricingHelper::CommodityPricingHelper</definition>
        <argsstring>()</argsstring>
        <name>CommodityPricingHelper</name>
        <qualifiedname>QuantLib::CommodityPricingHelper::CommodityPricingHelper</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/commoditypricinghelpers.hpp" line="38" column="9"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_quant_lib_1_1_commodity_pricing_helper_1a58233d3595ca558dd24ebc2a94d79d22" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CommodityPricingHelper::calculateFxConversionFactor</definition>
        <argsstring>(const Currency &amp;fromCurrency, const Currency &amp;toCurrency, const Date &amp;evaluationDate)</argsstring>
        <name>calculateFxConversionFactor</name>
        <qualifiedname>QuantLib::CommodityPricingHelper::calculateFxConversionFactor</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_currency" kindref="compound">Currency</ref> &amp;</type>
          <declname>fromCurrency</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_currency" kindref="compound">Currency</ref> &amp;</type>
          <declname>toCurrency</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>evaluationDate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/commoditypricinghelpers.hpp" line="40" column="21" bodyfile="ql/experimental/commodities/commoditypricinghelpers.hpp" bodystart="79" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_commodity_pricing_helper_1a776e2736d88466a923228bf1dc0d8ae9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CommodityPricingHelper::calculateUomConversionFactor</definition>
        <argsstring>(const CommodityType &amp;commodityType, const UnitOfMeasure &amp;fromUnitOfMeasure, const UnitOfMeasure &amp;toUnitOfMeasure)</argsstring>
        <name>calculateUomConversionFactor</name>
        <qualifiedname>QuantLib::CommodityPricingHelper::calculateUomConversionFactor</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_commodity_type" kindref="compound">CommodityType</ref> &amp;</type>
          <declname>commodityType</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_unit_of_measure" kindref="compound">UnitOfMeasure</ref> &amp;</type>
          <declname>fromUnitOfMeasure</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_unit_of_measure" kindref="compound">UnitOfMeasure</ref> &amp;</type>
          <declname>toUnitOfMeasure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/commoditypricinghelpers.hpp" line="44" column="21" bodyfile="ql/experimental/commodities/commoditypricinghelpers.hpp" bodystart="65" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_commodity_pricing_helper_1a1f889a9968bfd2ae570c11524c8855fe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CommodityPricingHelper::calculateUnitCost</definition>
        <argsstring>(const CommodityType &amp;commodityType, const CommodityUnitCost &amp;unitCost, const Currency &amp;baseCurrency, const UnitOfMeasure &amp;baseUnitOfMeasure, const Date &amp;evaluationDate)</argsstring>
        <name>calculateUnitCost</name>
        <qualifiedname>QuantLib::CommodityPricingHelper::calculateUnitCost</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_commodity_type" kindref="compound">CommodityType</ref> &amp;</type>
          <declname>commodityType</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_commodity_unit_cost" kindref="compound">CommodityUnitCost</ref> &amp;</type>
          <declname>unitCost</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_currency" kindref="compound">Currency</ref> &amp;</type>
          <declname>baseCurrency</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_unit_of_measure" kindref="compound">UnitOfMeasure</ref> &amp;</type>
          <declname>baseUnitOfMeasure</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>evaluationDate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/commoditypricinghelpers.hpp" line="49" column="21" bodyfile="ql/experimental/commodities/commoditypricinghelpers.hpp" bodystart="96" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_commodity_pricing_helper_1a0aa9c6efd700add78267cbedb5c9c026" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::CommodityPricingHelper::createPricingPeriods</definition>
        <argsstring>(Date startDate, Date endDate, const Quantity &amp;quantity, EnergyCommodity::DeliverySchedule deliverySchedule, EnergyCommodity::QuantityPeriodicity qtyPeriodicity, const PaymentTerm &amp;paymentTerm, PricingPeriods &amp;pricingPeriods)</argsstring>
        <name>createPricingPeriods</name>
        <qualifiedname>QuantLib::CommodityPricingHelper::createPricingPeriods</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
          <declname>startDate</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
          <declname>endDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_quantity" kindref="compound">Quantity</ref> &amp;</type>
          <declname>quantity</declname>
        </param>
        <param>
          <type>EnergyCommodity::DeliverySchedule</type>
          <declname>deliverySchedule</declname>
        </param>
        <param>
          <type>EnergyCommodity::QuantityPeriodicity</type>
          <declname>qtyPeriodicity</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_payment_term" kindref="compound">PaymentTerm</ref> &amp;</type>
          <declname>paymentTerm</declname>
        </param>
        <param>
          <type>PricingPeriods &amp;</type>
          <declname>pricingPeriods</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/commoditypricinghelpers.hpp" line="55" column="21" bodyfile="ql/experimental/commodities/commoditypricinghelpers.cpp" bodystart="24" bodyend="63"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>commodity index helper </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/experimental/commodities/commoditypricinghelpers.hpp" line="36" column="5" bodyfile="ql/experimental/commodities/commoditypricinghelpers.hpp" bodystart="36" bodyend="62"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_commodity_pricing_helper_1a58233d3595ca558dd24ebc2a94d79d22" prot="public" virt="non-virtual"><scope>QuantLib::CommodityPricingHelper</scope><name>calculateFxConversionFactor</name></member>
      <member refid="class_quant_lib_1_1_commodity_pricing_helper_1a1f889a9968bfd2ae570c11524c8855fe" prot="public" virt="non-virtual"><scope>QuantLib::CommodityPricingHelper</scope><name>calculateUnitCost</name></member>
      <member refid="class_quant_lib_1_1_commodity_pricing_helper_1a776e2736d88466a923228bf1dc0d8ae9" prot="public" virt="non-virtual"><scope>QuantLib::CommodityPricingHelper</scope><name>calculateUomConversionFactor</name></member>
      <member refid="class_quant_lib_1_1_commodity_pricing_helper_1ac4dbf0cdeaf96e0f2b8e378cae9b9968" prot="public" virt="non-virtual"><scope>QuantLib::CommodityPricingHelper</scope><name>CommodityPricingHelper</name></member>
      <member refid="class_quant_lib_1_1_commodity_pricing_helper_1a0aa9c6efd700add78267cbedb5c9c026" prot="public" virt="non-virtual"><scope>QuantLib::CommodityPricingHelper</scope><name>createPricingPeriods</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

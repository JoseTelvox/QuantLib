<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_single_factor_bsm_basket_engine" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::SingleFactorBsmBasketEngine</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_basket_option_1_1engine" prot="public" virt="non-virtual">QuantLib::BasketOption::engine</basecompoundref>
    <includes refid="singlefactorbsmbasketengine_8hpp" local="no">singlefactorbsmbasketengine.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_single_factor_bsm_basket_engine_1a562870259da72eb0d7f208e2b74eb60f" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::SingleFactorBsmBasketEngine::xTol_</definition>
        <argsstring></argsstring>
        <name>xTol_</name>
        <qualifiedname>QuantLib::SingleFactorBsmBasketEngine::xTol_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/singlefactorbsmbasketengine.hpp" line="51" column="20" bodyfile="ql/pricingengines/basket/singlefactorbsmbasketengine.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_single_factor_bsm_basket_engine_1aa01f97fa5106a5c338f5629c6820b067" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>const Size QuantLib::SingleFactorBsmBasketEngine::n_</definition>
        <argsstring></argsstring>
        <name>n_</name>
        <qualifiedname>QuantLib::SingleFactorBsmBasketEngine::n_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/singlefactorbsmbasketengine.hpp" line="52" column="20" bodyfile="ql/pricingengines/basket/singlefactorbsmbasketengine.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_single_factor_bsm_basket_engine_1abd7a180ee5069f4ddc6d7057409b847b" prot="private" static="no" mutable="no">
        <type>const std::vector&lt; ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_generalized_black_scholes_process" kindref="compound">GeneralizedBlackScholesProcess</ref> &gt; &gt;</type>
        <definition>const std::vector&lt;ext::shared_ptr&lt;GeneralizedBlackScholesProcess&gt; &gt; QuantLib::SingleFactorBsmBasketEngine::processes_</definition>
        <argsstring></argsstring>
        <name>processes_</name>
        <qualifiedname>QuantLib::SingleFactorBsmBasketEngine::processes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/singlefactorbsmbasketengine.hpp" line="53" column="27" bodyfile="ql/pricingengines/basket/singlefactorbsmbasketengine.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_single_factor_bsm_basket_engine_1a70c1b5eeb3fd1542ced5d72414f71fe6" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::SingleFactorBsmBasketEngine::SingleFactorBsmBasketEngine</definition>
        <argsstring>(std::vector&lt; ext::shared_ptr&lt; GeneralizedBlackScholesProcess &gt; &gt; p, Real xTol=1e4 *QL_EPSILON)</argsstring>
        <name>SingleFactorBsmBasketEngine</name>
        <qualifiedname>QuantLib::SingleFactorBsmBasketEngine::SingleFactorBsmBasketEngine</qualifiedname>
        <param>
          <type>std::vector&lt; ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_generalized_black_scholes_process" kindref="compound">GeneralizedBlackScholesProcess</ref> &gt; &gt;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>xTol</declname>
          <defval>1e4 *<ref refid="group__limit_macros_1ga4f2e6bcf6b19224bce1a5a6234286c17" kindref="member">QL_EPSILON</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/singlefactorbsmbasketengine.hpp" line="44" column="18" bodyfile="ql/pricingengines/basket/singlefactorbsmbasketengine.cpp" bodystart="124" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_single_factor_bsm_basket_engine_1ad32d10d9d2c71d1c1c6a34459d8451bb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::SingleFactorBsmBasketEngine::calculate</definition>
        <argsstring>() const override</argsstring>
        <name>calculate</name>
        <qualifiedname>QuantLib::SingleFactorBsmBasketEngine::calculate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_pricing_engine_1ad2be11cff80d9792f0cc8231711fcb06">calculate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/singlefactorbsmbasketengine.hpp" line="48" column="14" bodyfile="ql/pricingengines/basket/singlefactorbsmbasketengine.cpp" bodystart="134" bodyend="188"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Pricing engine for baskets where all underlyings are driven by one stochastic factor. </para>
    </briefdescription>
    <detaileddescription>
<para>Jaehyuk Choi, Sum of all Black-Scholes-Merton Models: An efficient Pricing Method for <ref refid="namespace_quant_lib_1ad61d2e1a3f01154233de0d5fbb85177c" kindref="member">Spread</ref>, <ref refid="class_quant_lib_1_1_basket" kindref="compound">Basket</ref> and Asian Options, <ulink url="https://arxiv.org/pdf/1805.03172">https://arxiv.org/pdf/1805.03172</ulink> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::BasketOption::engine</label>
        <link refid="class_quant_lib_1_1_basket_option_1_1engine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::GenericEngine&lt; BasketOption::arguments, BasketOption::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_engine"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="4">
        <label>QuantLib::PricingEngine</label>
        <link refid="class_quant_lib_1_1_pricing_engine"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::SingleFactorBsmBasketEngine</label>
        <link refid="class_quant_lib_1_1_single_factor_bsm_basket_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::BasketOption::engine</label>
        <link refid="class_quant_lib_1_1_basket_option_1_1engine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::GenericEngine&lt; BasketOption::arguments, BasketOption::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_engine"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="4">
        <label>QuantLib::PricingEngine</label>
        <link refid="class_quant_lib_1_1_pricing_engine"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::SingleFactorBsmBasketEngine</label>
        <link refid="class_quant_lib_1_1_single_factor_bsm_basket_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/pricingengines/basket/singlefactorbsmbasketengine.hpp" line="42" column="5" bodyfile="ql/pricingengines/basket/singlefactorbsmbasketengine.hpp" bodystart="42" bodyend="54"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_generic_engine_1ad2371cdbafa1989afb0e4733b1212c0d" prot="protected" virt="non-virtual"><scope>QuantLib::SingleFactorBsmBasketEngine</scope><name>arguments_</name></member>
      <member refid="class_quant_lib_1_1_single_factor_bsm_basket_engine_1ad32d10d9d2c71d1c1c6a34459d8451bb" prot="public" virt="virtual"><scope>QuantLib::SingleFactorBsmBasketEngine</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::SingleFactorBsmBasketEngine</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1ad9c6e8dc65ca072d5e6e17640d74db3e" prot="public" virt="virtual"><scope>QuantLib::SingleFactorBsmBasketEngine</scope><name>getArguments</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1aea8272ef6e5e0ea1cffadfed0454fa88" prot="public" virt="virtual"><scope>QuantLib::SingleFactorBsmBasketEngine</scope><name>getResults</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::SingleFactorBsmBasketEngine</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_single_factor_bsm_basket_engine_1aa01f97fa5106a5c338f5629c6820b067" prot="private" virt="non-virtual"><scope>QuantLib::SingleFactorBsmBasketEngine</scope><name>n_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::SingleFactorBsmBasketEngine</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::SingleFactorBsmBasketEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::SingleFactorBsmBasketEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::SingleFactorBsmBasketEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::SingleFactorBsmBasketEngine</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::SingleFactorBsmBasketEngine</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::SingleFactorBsmBasketEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::SingleFactorBsmBasketEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::SingleFactorBsmBasketEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_single_factor_bsm_basket_engine_1abd7a180ee5069f4ddc6d7057409b847b" prot="private" virt="non-virtual"><scope>QuantLib::SingleFactorBsmBasketEngine</scope><name>processes_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::SingleFactorBsmBasketEngine</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::SingleFactorBsmBasketEngine</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1a81c5390ba1e713e57ca87d5f841d37f2" prot="public" virt="virtual"><scope>QuantLib::SingleFactorBsmBasketEngine</scope><name>reset</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1a41281f2ea4990dbce90be1f9f2e231f6" prot="protected" virt="non-virtual"><scope>QuantLib::SingleFactorBsmBasketEngine</scope><name>results_</name></member>
      <member refid="class_quant_lib_1_1_single_factor_bsm_basket_engine_1a70c1b5eeb3fd1542ced5d72414f71fe6" prot="public" virt="non-virtual"><scope>QuantLib::SingleFactorBsmBasketEngine</scope><name>SingleFactorBsmBasketEngine</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::SingleFactorBsmBasketEngine</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::SingleFactorBsmBasketEngine</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1aaf5ef54d9e1abf8b1b50b48804edf3dc" prot="public" virt="virtual"><scope>QuantLib::SingleFactorBsmBasketEngine</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_single_factor_bsm_basket_engine_1a562870259da72eb0d7f208e2b74eb60f" prot="private" virt="non-virtual"><scope>QuantLib::SingleFactorBsmBasketEngine</scope><name>xTol_</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::SingleFactorBsmBasketEngine</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::SingleFactorBsmBasketEngine</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_pricing_engine_1a66b279a54578cd7e60d402e5147eb526" prot="public" virt="non-virtual"><scope>QuantLib::SingleFactorBsmBasketEngine</scope><name>~PricingEngine</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

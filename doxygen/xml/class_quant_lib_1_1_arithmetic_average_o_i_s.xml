<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_arithmetic_average_o_i_s" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::ArithmeticAverageOIS</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_swap" prot="public" virt="non-virtual">QuantLib::Swap</basecompoundref>
    <includes refid="arithmeticaverageois_8hpp" local="no">arithmeticaverageois.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Results</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_arithmetic_average_o_i_s_1aabe1ec55347b63d0b9f8017bf0b7936a" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_swap_1ad0806daa5b111fcb11ce521b19124b4e" kindref="member">Type</ref></type>
        <definition>Type QuantLib::ArithmeticAverageOIS::type_</definition>
        <argsstring></argsstring>
        <name>type_</name>
        <qualifiedname>QuantLib::ArithmeticAverageOIS::type_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/averageois/arithmeticaverageois.hpp" line="97" column="14" bodyfile="ql/experimental/averageois/arithmeticaverageois.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_arithmetic_average_o_i_s_1ab42d47f3757c1ab751788f62a6c7cde8" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::ArithmeticAverageOIS::nominals_</definition>
        <argsstring></argsstring>
        <name>nominals_</name>
        <qualifiedname>QuantLib::ArithmeticAverageOIS::nominals_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/averageois/arithmeticaverageois.hpp" line="98" column="21" bodyfile="ql/experimental/averageois/arithmeticaverageois.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_arithmetic_average_o_i_s_1a6adb338c4cc025c7ad35f9ef3d5deac4" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
        <definition>Frequency QuantLib::ArithmeticAverageOIS::fixedLegPaymentFrequency_</definition>
        <argsstring></argsstring>
        <name>fixedLegPaymentFrequency_</name>
        <qualifiedname>QuantLib::ArithmeticAverageOIS::fixedLegPaymentFrequency_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/averageois/arithmeticaverageois.hpp" line="100" column="19" bodyfile="ql/experimental/averageois/arithmeticaverageois.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_arithmetic_average_o_i_s_1a11967dade90d59625c3daf56a1aa3c61" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
        <definition>Frequency QuantLib::ArithmeticAverageOIS::overnightLegPaymentFrequency_</definition>
        <argsstring></argsstring>
        <name>overnightLegPaymentFrequency_</name>
        <qualifiedname>QuantLib::ArithmeticAverageOIS::overnightLegPaymentFrequency_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/averageois/arithmeticaverageois.hpp" line="101" column="19" bodyfile="ql/experimental/averageois/arithmeticaverageois.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_arithmetic_average_o_i_s_1ac5a36bff15758d7f7647f57c20c7e1f1" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::ArithmeticAverageOIS::fixedRate_</definition>
        <argsstring></argsstring>
        <name>fixedRate_</name>
        <qualifiedname>QuantLib::ArithmeticAverageOIS::fixedRate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/averageois/arithmeticaverageois.hpp" line="104" column="14" bodyfile="ql/experimental/averageois/arithmeticaverageois.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_arithmetic_average_o_i_s_1a1c99eb602add8a01f35dcd90c9b955bf" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref></type>
        <definition>DayCounter QuantLib::ArithmeticAverageOIS::fixedDC_</definition>
        <argsstring></argsstring>
        <name>fixedDC_</name>
        <qualifiedname>QuantLib::ArithmeticAverageOIS::fixedDC_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/averageois/arithmeticaverageois.hpp" line="105" column="20" bodyfile="ql/experimental/averageois/arithmeticaverageois.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_arithmetic_average_o_i_s_1a2f17f03225836b360a4547ec60d0fec8" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_overnight_index" kindref="compound">OvernightIndex</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;OvernightIndex&gt; QuantLib::ArithmeticAverageOIS::overnightIndex_</definition>
        <argsstring></argsstring>
        <name>overnightIndex_</name>
        <qualifiedname>QuantLib::ArithmeticAverageOIS::overnightIndex_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/averageois/arithmeticaverageois.hpp" line="107" column="25" bodyfile="ql/experimental/averageois/arithmeticaverageois.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_arithmetic_average_o_i_s_1ac24a70ca125afa15d41aac927f7c9218" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1ad61d2e1a3f01154233de0d5fbb85177c" kindref="member">Spread</ref></type>
        <definition>Spread QuantLib::ArithmeticAverageOIS::spread_</definition>
        <argsstring></argsstring>
        <name>spread_</name>
        <qualifiedname>QuantLib::ArithmeticAverageOIS::spread_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/averageois/arithmeticaverageois.hpp" line="108" column="16" bodyfile="ql/experimental/averageois/arithmeticaverageois.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_arithmetic_average_o_i_s_1aff79a0abb2210e2bbd3613e07fdb89d2" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::ArithmeticAverageOIS::byApprox_</definition>
        <argsstring></argsstring>
        <name>byApprox_</name>
        <qualifiedname>QuantLib::ArithmeticAverageOIS::byApprox_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/averageois/arithmeticaverageois.hpp" line="110" column="14" bodyfile="ql/experimental/averageois/arithmeticaverageois.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_arithmetic_average_o_i_s_1a98980b7f2960b235e5fc7df0e0189ac9" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ArithmeticAverageOIS::mrs_</definition>
        <argsstring></argsstring>
        <name>mrs_</name>
        <qualifiedname>QuantLib::ArithmeticAverageOIS::mrs_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/averageois/arithmeticaverageois.hpp" line="111" column="14" bodyfile="ql/experimental/averageois/arithmeticaverageois.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_arithmetic_average_o_i_s_1a17f7e992acd3c5d05e153b1a05df3033" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ArithmeticAverageOIS::vol_</definition>
        <argsstring></argsstring>
        <name>vol_</name>
        <qualifiedname>QuantLib::ArithmeticAverageOIS::vol_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/averageois/arithmeticaverageois.hpp" line="112" column="14" bodyfile="ql/experimental/averageois/arithmeticaverageois.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_arithmetic_average_o_i_s_1aa97cb7b20d64356888c47d8e0d475306" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ArithmeticAverageOIS::fixedLegBPS</definition>
        <argsstring>() const</argsstring>
        <name>fixedLegBPS</name>
        <qualifiedname>QuantLib::ArithmeticAverageOIS::fixedLegBPS</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/averageois/arithmeticaverageois.hpp" line="87" column="14" bodyfile="ql/experimental/averageois/arithmeticaverageois.cpp" bodystart="124" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_arithmetic_average_o_i_s_1a54e72596cfca327fa87b9c37fbd4e2ae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ArithmeticAverageOIS::fixedLegNPV</definition>
        <argsstring>() const</argsstring>
        <name>fixedLegNPV</name>
        <qualifiedname>QuantLib::ArithmeticAverageOIS::fixedLegNPV</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/averageois/arithmeticaverageois.hpp" line="88" column="14" bodyfile="ql/experimental/averageois/arithmeticaverageois.cpp" bodystart="136" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_arithmetic_average_o_i_s_1a0c8fb9391117d68fedf9040ed64dcf47" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ArithmeticAverageOIS::fairRate</definition>
        <argsstring>() const</argsstring>
        <name>fairRate</name>
        <qualifiedname>QuantLib::ArithmeticAverageOIS::fairRate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/averageois/arithmeticaverageois.hpp" line="89" column="14" bodyfile="ql/experimental/averageois/arithmeticaverageois.cpp" bodystart="112" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_arithmetic_average_o_i_s_1a8319fc67dfd1cf3c68f6c15a04cfc580" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ArithmeticAverageOIS::overnightLegBPS</definition>
        <argsstring>() const</argsstring>
        <name>overnightLegBPS</name>
        <qualifiedname>QuantLib::ArithmeticAverageOIS::overnightLegBPS</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/averageois/arithmeticaverageois.hpp" line="91" column="14" bodyfile="ql/experimental/averageois/arithmeticaverageois.cpp" bodystart="130" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_arithmetic_average_o_i_s_1abf213e405cb8445b1406db316d10e89b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ArithmeticAverageOIS::overnightLegNPV</definition>
        <argsstring>() const</argsstring>
        <name>overnightLegNPV</name>
        <qualifiedname>QuantLib::ArithmeticAverageOIS::overnightLegNPV</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/averageois/arithmeticaverageois.hpp" line="92" column="14" bodyfile="ql/experimental/averageois/arithmeticaverageois.cpp" bodystart="142" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_arithmetic_average_o_i_s_1ac8741e04e3843005d3f3a30504e08f9f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1ad61d2e1a3f01154233de0d5fbb85177c" kindref="member">Spread</ref></type>
        <definition>Spread QuantLib::ArithmeticAverageOIS::fairSpread</definition>
        <argsstring>() const</argsstring>
        <name>fairSpread</name>
        <qualifiedname>QuantLib::ArithmeticAverageOIS::fairSpread</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/averageois/arithmeticaverageois.hpp" line="93" column="16" bodyfile="ql/experimental/averageois/arithmeticaverageois.cpp" bodystart="118" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_arithmetic_average_o_i_s_1afa1a675bc25f62b423ea64cb1ec33c04" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::ArithmeticAverageOIS::initialize</definition>
        <argsstring>(Schedule fixedLegSchedule, Schedule overnightLegSchedule)</argsstring>
        <name>initialize</name>
        <qualifiedname>QuantLib::ArithmeticAverageOIS::initialize</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_schedule" kindref="compound">Schedule</ref></type>
          <declname>fixedLegSchedule</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_schedule" kindref="compound">Schedule</ref></type>
          <declname>overnightLegSchedule</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/averageois/arithmeticaverageois.hpp" line="96" column="14" bodyfile="ql/experimental/averageois/arithmeticaverageois.cpp" bodystart="72" bodyend="110"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Inspectors</header>
      <memberdef kind="function" id="class_quant_lib_1_1_arithmetic_average_o_i_s_1a96faf33f488006e74d1d74a1f4025ffe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_swap_1ad0806daa5b111fcb11ce521b19124b4e" kindref="member">Type</ref></type>
        <definition>Type QuantLib::ArithmeticAverageOIS::type</definition>
        <argsstring>() const</argsstring>
        <name>type</name>
        <qualifiedname>QuantLib::ArithmeticAverageOIS::type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/averageois/arithmeticaverageois.hpp" line="64" column="14" bodyfile="ql/experimental/averageois/arithmeticaverageois.hpp" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_arithmetic_average_o_i_s_1ae97d855109a5d7ea79679e790baf2074" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ArithmeticAverageOIS::nominal</definition>
        <argsstring>() const</argsstring>
        <name>nominal</name>
        <qualifiedname>QuantLib::ArithmeticAverageOIS::nominal</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/averageois/arithmeticaverageois.hpp" line="65" column="14" bodyfile="ql/experimental/averageois/arithmeticaverageois.hpp" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_arithmetic_average_o_i_s_1afc20b0178a6d4c97de867e1455fcf286" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt; Real &gt; QuantLib::ArithmeticAverageOIS::nominals</definition>
        <argsstring>() const</argsstring>
        <name>nominals</name>
        <qualifiedname>QuantLib::ArithmeticAverageOIS::nominals</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/averageois/arithmeticaverageois.hpp" line="69" column="21" bodyfile="ql/experimental/averageois/arithmeticaverageois.hpp" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_arithmetic_average_o_i_s_1ab2eb15b490f0c64ce4cd2482544f6319" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
        <definition>Frequency QuantLib::ArithmeticAverageOIS::fixedLegPaymentFrequency</definition>
        <argsstring>()</argsstring>
        <name>fixedLegPaymentFrequency</name>
        <qualifiedname>QuantLib::ArithmeticAverageOIS::fixedLegPaymentFrequency</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/averageois/arithmeticaverageois.hpp" line="72" column="19" bodyfile="ql/experimental/averageois/arithmeticaverageois.hpp" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_arithmetic_average_o_i_s_1a41373a9ad7d2f020165ce0267d8ed9a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
        <definition>Frequency QuantLib::ArithmeticAverageOIS::overnightLegPaymentFrequency</definition>
        <argsstring>()</argsstring>
        <name>overnightLegPaymentFrequency</name>
        <qualifiedname>QuantLib::ArithmeticAverageOIS::overnightLegPaymentFrequency</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/averageois/arithmeticaverageois.hpp" line="73" column="19" bodyfile="ql/experimental/averageois/arithmeticaverageois.hpp" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_arithmetic_average_o_i_s_1a2d9cb0cbecb9536a0e3d695de81883cd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::ArithmeticAverageOIS::fixedRate</definition>
        <argsstring>() const</argsstring>
        <name>fixedRate</name>
        <qualifiedname>QuantLib::ArithmeticAverageOIS::fixedRate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/averageois/arithmeticaverageois.hpp" line="75" column="14" bodyfile="ql/experimental/averageois/arithmeticaverageois.hpp" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_arithmetic_average_o_i_s_1a2dcd92e88b381c36ebc5ba2c6b758965" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
        <definition>const DayCounter &amp; QuantLib::ArithmeticAverageOIS::fixedDayCount</definition>
        <argsstring>()</argsstring>
        <name>fixedDayCount</name>
        <qualifiedname>QuantLib::ArithmeticAverageOIS::fixedDayCount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/averageois/arithmeticaverageois.hpp" line="76" column="26" bodyfile="ql/experimental/averageois/arithmeticaverageois.hpp" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_arithmetic_average_o_i_s_1ae906439279aee53cc0cb35257912b35a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_overnight_index" kindref="compound">OvernightIndex</ref> &gt; &amp;</type>
        <definition>const ext::shared_ptr&lt; OvernightIndex &gt; &amp; QuantLib::ArithmeticAverageOIS::overnightIndex</definition>
        <argsstring>()</argsstring>
        <name>overnightIndex</name>
        <qualifiedname>QuantLib::ArithmeticAverageOIS::overnightIndex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/averageois/arithmeticaverageois.hpp" line="78" column="31" bodyfile="ql/experimental/averageois/arithmeticaverageois.hpp" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_arithmetic_average_o_i_s_1a256d5198d062e02a6ec9073a848969b7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1ad61d2e1a3f01154233de0d5fbb85177c" kindref="member">Spread</ref></type>
        <definition>Spread QuantLib::ArithmeticAverageOIS::spread</definition>
        <argsstring>() const</argsstring>
        <name>spread</name>
        <qualifiedname>QuantLib::ArithmeticAverageOIS::spread</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/averageois/arithmeticaverageois.hpp" line="79" column="16" bodyfile="ql/experimental/averageois/arithmeticaverageois.hpp" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_arithmetic_average_o_i_s_1a8abcbe9c70483d408941eae86e67c79c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespace_quant_lib_1a14f786c47ee979097c448d96b2defaab" kindref="member">Leg</ref> &amp;</type>
        <definition>const Leg &amp; QuantLib::ArithmeticAverageOIS::fixedLeg</definition>
        <argsstring>() const</argsstring>
        <name>fixedLeg</name>
        <qualifiedname>QuantLib::ArithmeticAverageOIS::fixedLeg</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/averageois/arithmeticaverageois.hpp" line="81" column="19" bodyfile="ql/experimental/averageois/arithmeticaverageois.hpp" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_arithmetic_average_o_i_s_1a64ab741476dc617f108bc484c0a0c3f1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespace_quant_lib_1a14f786c47ee979097c448d96b2defaab" kindref="member">Leg</ref> &amp;</type>
        <definition>const Leg &amp; QuantLib::ArithmeticAverageOIS::overnightLeg</definition>
        <argsstring>() const</argsstring>
        <name>overnightLeg</name>
        <qualifiedname>QuantLib::ArithmeticAverageOIS::overnightLeg</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/averageois/arithmeticaverageois.hpp" line="82" column="19" bodyfile="ql/experimental/averageois/arithmeticaverageois.hpp" bodystart="82" bodyend="82"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_arithmetic_average_o_i_s_1ade2b9f496bb03186f9742c8a8c15785c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QL_DEPRECATED_DISABLE_WARNING QuantLib::ArithmeticAverageOIS::ArithmeticAverageOIS</definition>
        <argsstring>(Type type, Real nominal, Schedule fixedLegSchedule, Rate fixedRate, DayCounter fixedDC, ext::shared_ptr&lt; OvernightIndex &gt; overnightIndex, Schedule overnightLegSchedule, Spread spread=0.0, Real meanReversionSpeed=0.03, Real volatility=0.00, bool byApprox=false)</argsstring>
        <name>ArithmeticAverageOIS</name>
        <qualifiedname>QuantLib::ArithmeticAverageOIS::ArithmeticAverageOIS</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_swap_1ad0806daa5b111fcb11ce521b19124b4e" kindref="member">Type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>nominal</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_schedule" kindref="compound">Schedule</ref></type>
          <declname>fixedLegSchedule</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>fixedRate</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref></type>
          <declname>fixedDC</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_overnight_index" kindref="compound">OvernightIndex</ref> &gt;</type>
          <declname>overnightIndex</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_schedule" kindref="compound">Schedule</ref></type>
          <declname>overnightLegSchedule</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ad61d2e1a3f01154233de0d5fbb85177c" kindref="member">Spread</ref></type>
          <declname>spread</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>meanReversionSpeed</declname>
          <defval>0.03</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>volatility</declname>
          <defval>0.00</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>byApprox</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/averageois/arithmeticaverageois.hpp" line="40" column="9" bodyfile="ql/experimental/averageois/arithmeticaverageois.cpp" bodystart="30" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_arithmetic_average_o_i_s_1ac387b7cb8d31df7c35bde0fa4a0a46c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ArithmeticAverageOIS::ArithmeticAverageOIS</definition>
        <argsstring>(Type type, std::vector&lt; Real &gt; nominals, Schedule fixedLegSchedule, Rate fixedRate, DayCounter fixedDC, ext::shared_ptr&lt; OvernightIndex &gt; overnightIndex, Schedule overnightLegSchedule, Spread spread=0.0, Real meanReversionSpeed=0.03, Real volatility=0.00, bool byApprox=false)</argsstring>
        <name>ArithmeticAverageOIS</name>
        <qualifiedname>QuantLib::ArithmeticAverageOIS::ArithmeticAverageOIS</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_swap_1ad0806daa5b111fcb11ce521b19124b4e" kindref="member">Type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
          <declname>nominals</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_schedule" kindref="compound">Schedule</ref></type>
          <declname>fixedLegSchedule</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>fixedRate</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref></type>
          <declname>fixedDC</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_overnight_index" kindref="compound">OvernightIndex</ref> &gt;</type>
          <declname>overnightIndex</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_schedule" kindref="compound">Schedule</ref></type>
          <declname>overnightLegSchedule</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ad61d2e1a3f01154233de0d5fbb85177c" kindref="member">Spread</ref></type>
          <declname>spread</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>meanReversionSpeed</declname>
          <defval>0.03</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>volatility</declname>
          <defval>0.00</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>byApprox</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/averageois/arithmeticaverageois.hpp" line="51" column="9" bodyfile="ql/experimental/averageois/arithmeticaverageois.cpp" bodystart="51" bodyend="70"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000011"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use <ref refid="class_quant_lib_1_1_overnight_indexed_swap" kindref="compound">OvernightIndexedSwap</ref> instead. Deprecated in version 1.36. </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::ArithmeticAverageOIS</label>
        <link refid="class_quant_lib_1_1_arithmetic_average_o_i_s"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Instrument</label>
        <link refid="class_quant_lib_1_1_instrument"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>QuantLib::Swap</label>
        <link refid="class_quant_lib_1_1_swap"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::ArithmeticAverageOIS</label>
        <link refid="class_quant_lib_1_1_arithmetic_average_o_i_s"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="3">
        <label>QuantLib::Instrument</label>
        <link refid="class_quant_lib_1_1_instrument"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>valuationDate_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>QuantLib::Swap</label>
        <link refid="class_quant_lib_1_1_swap"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/averageois/arithmeticaverageois.hpp" line="38" column="5" bodyfile="ql/experimental/averageois/arithmeticaverageois.hpp" bodystart="38" bodyend="113"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_instrument_1a468edb294da268b097c91bf821084c07" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>additionalResults</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a57d2b34e8625ab3d9ffa50c0c7931099" prot="protected" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>additionalResults_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a02070ea7442d30625992c1711030d4b8" prot="protected" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>alwaysForward_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a17c9433135a259e4776baec66204a484" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>alwaysForwardNotifications</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_average_o_i_s_1ade2b9f496bb03186f9742c8a8c15785c" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>ArithmeticAverageOIS</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_average_o_i_s_1ac387b7cb8d31df7c35bde0fa4a0a46c3" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>ArithmeticAverageOIS</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_average_o_i_s_1aff79a0abb2210e2bbd3613e07fdb89d2" prot="private" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>byApprox_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a4c573c48f7eaead5042864ac0eb5b025" prot="protected" virt="virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a58b4986a80efa18634483a92c121e26e" prot="protected" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>calculated_</name></member>
      <member refid="class_quant_lib_1_1_swap_1a6e033a19eb0f2770eefb8b06912b3abe" prot="public" virt="virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_swap_1a1c5ee95948349edd10e6f7ad842b2c4a" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>endDiscounts</name></member>
      <member refid="class_quant_lib_1_1_swap_1ac3b82c6fb8b5951424767b5e95e9a0b3" prot="protected" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>endDiscounts_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1ac548cb61c864779db09bd0fac6ae7c81" prot="protected" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>engine_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a03502fb6c606b262c25acd94ff4c1e52" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>errorEstimate</name></member>
      <member refid="class_quant_lib_1_1_instrument_1abb8f4cfa7346fab7a2f3a8c8b4da30f3" prot="protected" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>errorEstimate_</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_average_o_i_s_1a0c8fb9391117d68fedf9040ed64dcf47" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>fairRate</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_average_o_i_s_1ac8741e04e3843005d3f3a30504e08f9f" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>fairSpread</name></member>
      <member refid="class_quant_lib_1_1_swap_1a537a5ba44fe18cbed5cda31562896b67" prot="public" virt="virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>fetchResults</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_average_o_i_s_1a2dcd92e88b381c36ebc5ba2c6b758965" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>fixedDayCount</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_average_o_i_s_1a1c99eb602add8a01f35dcd90c9b955bf" prot="private" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>fixedDC_</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_average_o_i_s_1a8abcbe9c70483d408941eae86e67c79c" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>fixedLeg</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_average_o_i_s_1aa97cb7b20d64356888c47d8e0d475306" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>fixedLegBPS</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_average_o_i_s_1a54e72596cfca327fa87b9c37fbd4e2ae" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>fixedLegNPV</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_average_o_i_s_1ab2eb15b490f0c64ce4cd2482544f6319" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>fixedLegPaymentFrequency</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_average_o_i_s_1a6adb338c4cc025c7ad35f9ef3d5deac4" prot="private" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>fixedLegPaymentFrequency_</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_average_o_i_s_1a2d9cb0cbecb9536a0e3d695de81883cd" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>fixedRate</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_average_o_i_s_1ac5a36bff15758d7f7647f57c20c7e1f1" prot="private" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>fixedRate_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1afac6ee19c3107c453e1347dd8000e023" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>forwardFirstNotificationOnly</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7157f41e83f2c5d924f5c5bafda04d1d" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>freeze</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7bb721fe00c6854e602758aba629ab77" prot="protected" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>frozen_</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_average_o_i_s_1afa1a675bc25f62b423ea64cb1ec33c04" prot="private" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>initialize</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a5e4c746cbf7999c83dc57f87e241f1cc" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>Instrument</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a0a7c5d42815a4e16ee2158e24dbfc748" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>isCalculated</name></member>
      <member refid="class_quant_lib_1_1_swap_1aa8b6f838ad681344ecd604db48ea0b8e" prot="public" virt="virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>isExpired</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a26f18f4ff7faaaebd8eae50e064b493e" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>LazyObject</name></member>
      <member refid="class_quant_lib_1_1_swap_1a6d4f202e19e6d9505ebc111f197244ae" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>leg</name></member>
      <member refid="class_quant_lib_1_1_swap_1a79494447be4eebf5caf0f0940a9b204f" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>legBPS</name></member>
      <member refid="class_quant_lib_1_1_swap_1af40f759b518542c642d71cbc262cab84" prot="protected" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>legBPS_</name></member>
      <member refid="class_quant_lib_1_1_swap_1af1ef52511fbca1b23ffddf978f678d98" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>legNPV</name></member>
      <member refid="class_quant_lib_1_1_swap_1ac85f31b7bf3b97e6c03848c64bef33af" prot="protected" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>legNPV_</name></member>
      <member refid="class_quant_lib_1_1_swap_1a153af8a79c61fda7e68e65fee4817e35" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>legs</name></member>
      <member refid="class_quant_lib_1_1_swap_1a1ca08a7d6e5957950d40383eb4cf0b63" prot="protected" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>legs_</name></member>
      <member refid="class_quant_lib_1_1_swap_1a0a9d27adbab145e513399a18852e4d4f" prot="public" virt="virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>maturityDate</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_average_o_i_s_1a98980b7f2960b235e5fc7df0e0189ac9" prot="private" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>mrs_</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_average_o_i_s_1ae97d855109a5d7ea79679e790baf2074" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>nominal</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_average_o_i_s_1afc20b0178a6d4c97de867e1455fcf286" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>nominals</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_average_o_i_s_1ab42d47f3757c1ab751788f62a6c7cde8" prot="private" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>nominals_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a5afdd9698267cd30ddd10cf01f3487b0" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>NPV</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a997663780100d30ae59b14ac0285322d" prot="protected" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>NPV_</name></member>
      <member refid="class_quant_lib_1_1_swap_1ab698ee91db4089a0fef963f6857c1c28" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>npvDateDiscount</name></member>
      <member refid="class_quant_lib_1_1_swap_1a390b5eebe9b8a8915d393465a93809ad" prot="protected" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>npvDateDiscount_</name></member>
      <member refid="class_quant_lib_1_1_swap_1aed6ec56ad5e15f7de107e98fb1526b66" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>numberOfLegs</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::ArithmeticAverageOIS</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::ArithmeticAverageOIS</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::ArithmeticAverageOIS</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::ArithmeticAverageOIS</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::ArithmeticAverageOIS</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::QuantLib::Observer::"><scope>QuantLib::ArithmeticAverageOIS</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_average_o_i_s_1ae906439279aee53cc0cb35257912b35a" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>overnightIndex</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_average_o_i_s_1a2f17f03225836b360a4547ec60d0fec8" prot="private" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>overnightIndex_</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_average_o_i_s_1a64ab741476dc617f108bc484c0a0c3f1" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>overnightLeg</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_average_o_i_s_1a8319fc67dfd1cf3c68f6c15a04cfc580" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>overnightLegBPS</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_average_o_i_s_1abf213e405cb8445b1406db316d10e89b" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>overnightLegNPV</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_average_o_i_s_1a41373a9ad7d2f020165ce0267d8ed9a4" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>overnightLegPaymentFrequency</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_average_o_i_s_1a11967dade90d59625c3daf56a1aa3c61" prot="private" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>overnightLegPaymentFrequency_</name></member>
      <member refid="class_quant_lib_1_1_swap_1ad0806daa5b111fcb11ce521b19124b4ea31009108a6e84c98136e1053dbb41824" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>Payer</name></member>
      <member refid="class_quant_lib_1_1_swap_1a2530b88cf2c011a623c667838b8a9aa2" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>payer</name></member>
      <member refid="class_quant_lib_1_1_swap_1a82468c93e5a364d73e164df46bd50445" prot="protected" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>payer_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1aad23f546bbca156a49a95ca2bee124c4" prot="protected" virt="virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>performCalculations</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a70c9b24e50132408d8d9ce4f6674662a" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>recalculate</name></member>
      <member refid="class_quant_lib_1_1_swap_1ad0806daa5b111fcb11ce521b19124b4ea04e66442c860dac71042b03c64af4831" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>Receiver</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a266c15a12160a89f4f9707db85f9fa27" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>result</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a3444386491f179f64f4f0aac24997071" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>setPricingEngine</name></member>
      <member refid="class_quant_lib_1_1_swap_1a9a021b307289cdb765e96a03b275785a" prot="public" virt="virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>setupArguments</name></member>
      <member refid="class_quant_lib_1_1_swap_1aece293c8f03c150e794b525216f6bd18" prot="protected" virt="virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>setupExpired</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_average_o_i_s_1a256d5198d062e02a6ec9073a848969b7" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>spread</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_average_o_i_s_1ac24a70ca125afa15d41aac927f7c9218" prot="private" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>spread_</name></member>
      <member refid="class_quant_lib_1_1_swap_1ae4df409ff659d19c6c76347d0d92c47b" prot="public" virt="virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>startDate</name></member>
      <member refid="class_quant_lib_1_1_swap_1a9a138527c286814c9dba09b3242bbda2" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>startDiscounts</name></member>
      <member refid="class_quant_lib_1_1_swap_1aa235d3e00058faa863f579d9665301e4" prot="protected" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>startDiscounts_</name></member>
      <member refid="class_quant_lib_1_1_swap_1a88c4221d6c0156759c5e84c3188459c8" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>Swap</name></member>
      <member refid="class_quant_lib_1_1_swap_1a546a1d0746c86ad1fed70a0904b18024" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>Swap</name></member>
      <member refid="class_quant_lib_1_1_swap_1a953a237540a310c121aebbf8b4f7621e" prot="protected" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>Swap</name></member>
      <member refid="class_quant_lib_1_1_swap_1ad0806daa5b111fcb11ce521b19124b4e" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>Type</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_average_o_i_s_1a96faf33f488006e74d1d74a1f4025ffe" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>type</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_average_o_i_s_1aabe1ec55347b63d0b9f8017bf0b7936a" prot="private" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>type_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a2e0e4786666453024b9d4e0761f2770b" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>unfreeze</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1adee2bf49be5c4c78736be293321a856d" prot="public" virt="virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a53a0fc1adc70b73387ad53009725835d" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>valuationDate</name></member>
      <member refid="class_quant_lib_1_1_instrument_1aa60b558fc82f022e13535360ac4a6fed" prot="protected" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>valuationDate_</name></member>
      <member refid="class_quant_lib_1_1_arithmetic_average_o_i_s_1a17f7e992acd3c5d05e153b1a05df3033" prot="private" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>vol_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a9d719c43bb627177a90d7d12324a2d6e" prot="public" virt="non-virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>~LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::ArithmeticAverageOIS</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_range_accrual_pricer_by_bgm" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::RangeAccrualPricerByBgm</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_range_accrual_pricer" prot="public" virt="non-virtual">QuantLib::RangeAccrualPricer</basecompoundref>
    <sectiondef kind="user-defined">
      <header>Observer interface</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1a56cdbe2f7c3510d346144d0b1c95bb4d" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::RangeAccrualPricerByBgm::correlation_</definition>
        <argsstring></argsstring>
        <name>correlation_</name>
        <qualifiedname>QuantLib::RangeAccrualPricerByBgm::correlation_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="186" column="14" bodyfile="ql/cashflows/rangeaccrual.hpp" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1ae668f25289e96c45aa6993a7bbe0036d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::RangeAccrualPricerByBgm::withSmile_</definition>
        <argsstring></argsstring>
        <name>withSmile_</name>
        <qualifiedname>QuantLib::RangeAccrualPricerByBgm::withSmile_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="187" column="14" bodyfile="ql/cashflows/rangeaccrual.hpp" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1a84e9d481237e38f5f9483b199945c58a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::RangeAccrualPricerByBgm::byCallSpread_</definition>
        <argsstring></argsstring>
        <name>byCallSpread_</name>
        <qualifiedname>QuantLib::RangeAccrualPricerByBgm::byCallSpread_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="188" column="14" bodyfile="ql/cashflows/rangeaccrual.hpp" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1ae10a2a53fb48c958d19ec09e586e3a8a" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_smile_section" kindref="compound">SmileSection</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;SmileSection&gt; QuantLib::RangeAccrualPricerByBgm::smilesOnExpiry_</definition>
        <argsstring></argsstring>
        <name>smilesOnExpiry_</name>
        <qualifiedname>QuantLib::RangeAccrualPricerByBgm::smilesOnExpiry_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="190" column="25" bodyfile="ql/cashflows/rangeaccrual.hpp" bodystart="190" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1acd41411346bf929a4f29bb0d15f0c40d" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_smile_section" kindref="compound">SmileSection</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;SmileSection&gt; QuantLib::RangeAccrualPricerByBgm::smilesOnPayment_</definition>
        <argsstring></argsstring>
        <name>smilesOnPayment_</name>
        <qualifiedname>QuantLib::RangeAccrualPricerByBgm::smilesOnPayment_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="191" column="25" bodyfile="ql/cashflows/rangeaccrual.hpp" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1acdad23bef98f7dd81206dd5397df6741" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::RangeAccrualPricerByBgm::eps_</definition>
        <argsstring></argsstring>
        <name>eps_</name>
        <qualifiedname>QuantLib::RangeAccrualPricerByBgm::eps_</qualifiedname>
        <initializer>= 1.0e-8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="192" column="14" bodyfile="ql/cashflows/rangeaccrual.hpp" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1a59275da90082a9b4134a59e7f69f4c62" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::RangeAccrualPricerByBgm::swapletPrice</definition>
        <argsstring>() const override</argsstring>
        <name>swapletPrice</name>
        <qualifiedname>QuantLib::RangeAccrualPricerByBgm::swapletPrice</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_floating_rate_coupon_pricer_1a30dad486d36c708d9cfe35e72a69d9fa">swapletPrice</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="131" column="13" bodyfile="ql/cashflows/rangeaccrual.cpp" bodystart="180" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1a6d7756e83656970dace3c3fcfa795563" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::RangeAccrualPricerByBgm::drift</definition>
        <argsstring>(Real U, Real lambdaS, Real lambdaT, Real correlation) const</argsstring>
        <name>drift</name>
        <qualifiedname>QuantLib::RangeAccrualPricerByBgm::drift</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>U</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>lambdaS</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>lambdaT</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>correlation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="136" column="14" bodyfile="ql/cashflows/rangeaccrual.cpp" bodystart="230" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1a80ea301db6eac807fd5d574459376e2b" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::RangeAccrualPricerByBgm::derDriftDerLambdaS</definition>
        <argsstring>(Real U, Real lambdaS, Real lambdaT, Real correlation) const</argsstring>
        <name>derDriftDerLambdaS</name>
        <qualifiedname>QuantLib::RangeAccrualPricerByBgm::derDriftDerLambdaS</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>U</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>lambdaS</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>lambdaT</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>correlation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="137" column="14" bodyfile="ql/cashflows/rangeaccrual.cpp" bodystart="266" bodyend="285"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1aedbff2272e43561a5141a0fe15a78eb3" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::RangeAccrualPricerByBgm::derDriftDerLambdaT</definition>
        <argsstring>(Real U, Real lambdaS, Real lambdaT, Real correlation) const</argsstring>
        <name>derDriftDerLambdaT</name>
        <qualifiedname>QuantLib::RangeAccrualPricerByBgm::derDriftDerLambdaT</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>U</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>lambdaS</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>lambdaT</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>correlation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="139" column="14" bodyfile="ql/cashflows/rangeaccrual.cpp" bodystart="297" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1abfa139362cf5b44d9a00ef2e9f3c44db" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::RangeAccrualPricerByBgm::lambda</definition>
        <argsstring>(Real U, Real lambdaS, Real lambdaT) const</argsstring>
        <name>lambda</name>
        <qualifiedname>QuantLib::RangeAccrualPricerByBgm::lambda</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>U</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>lambdaS</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>lambdaT</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="142" column="14" bodyfile="ql/cashflows/rangeaccrual.cpp" bodystart="251" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1ad904c71caf9a4e41a0fdab1adb521dc7" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::RangeAccrualPricerByBgm::derLambdaDerLambdaS</definition>
        <argsstring>(Real U) const</argsstring>
        <name>derLambdaDerLambdaS</name>
        <qualifiedname>QuantLib::RangeAccrualPricerByBgm::derLambdaDerLambdaS</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>U</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="143" column="14" bodyfile="ql/cashflows/rangeaccrual.cpp" bodystart="287" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1aedb0cb42ac7f5af0ef3709b76db34a4b" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::RangeAccrualPricerByBgm::derLambdaDerLambdaT</definition>
        <argsstring>(Real U) const</argsstring>
        <name>derLambdaDerLambdaT</name>
        <qualifiedname>QuantLib::RangeAccrualPricerByBgm::derLambdaDerLambdaT</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>U</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="144" column="14" bodyfile="ql/cashflows/rangeaccrual.cpp" bodystart="318" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1a127450eb1ce38696180fae46bb7d612f" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt; Real &gt; QuantLib::RangeAccrualPricerByBgm::driftsOverPeriod</definition>
        <argsstring>(Real U, Real lambdaS, Real lambdaT, Real correlation) const</argsstring>
        <name>driftsOverPeriod</name>
        <qualifiedname>QuantLib::RangeAccrualPricerByBgm::driftsOverPeriod</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>U</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>lambdaS</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>lambdaT</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>correlation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="146" column="21" bodyfile="ql/cashflows/rangeaccrual.cpp" bodystart="192" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1a4a60ba6d21eed9ffe48af08e26ea5924" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt; Real &gt; QuantLib::RangeAccrualPricerByBgm::lambdasOverPeriod</definition>
        <argsstring>(Real U, Real lambdaS, Real lambdaT) const</argsstring>
        <name>lambdasOverPeriod</name>
        <qualifiedname>QuantLib::RangeAccrualPricerByBgm::lambdasOverPeriod</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>U</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>lambdaS</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>lambdaT</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="148" column="21" bodyfile="ql/cashflows/rangeaccrual.cpp" bodystart="214" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1aee89a0189b57ce016a41bfa34ec56a78" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::RangeAccrualPricerByBgm::digitalRangePrice</definition>
        <argsstring>(Real lowerTrigger, Real upperTrigger, Real initialValue, Real expiry, Real deflator) const</argsstring>
        <name>digitalRangePrice</name>
        <qualifiedname>QuantLib::RangeAccrualPricerByBgm::digitalRangePrice</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>lowerTrigger</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>upperTrigger</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>initialValue</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>expiry</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>deflator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="151" column="14" bodyfile="ql/cashflows/rangeaccrual.cpp" bodystart="328" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1a47bdca5b968dd5119023680ec4ffb941" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::RangeAccrualPricerByBgm::digitalPrice</definition>
        <argsstring>(Real strike, Real initialValue, Real expiry, Real deflator) const</argsstring>
        <name>digitalPrice</name>
        <qualifiedname>QuantLib::RangeAccrualPricerByBgm::digitalPrice</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>initialValue</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>expiry</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>deflator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="157" column="14" bodyfile="ql/cashflows/rangeaccrual.cpp" bodystart="342" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1a6294751aa68d06fd500aa6851ac97543" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::RangeAccrualPricerByBgm::digitalPriceWithoutSmile</definition>
        <argsstring>(Real strike, Real initialValue, Real expiry, Real deflator) const</argsstring>
        <name>digitalPriceWithoutSmile</name>
        <qualifiedname>QuantLib::RangeAccrualPricerByBgm::digitalPriceWithoutSmile</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>initialValue</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>expiry</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>deflator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="162" column="14" bodyfile="ql/cashflows/rangeaccrual.cpp" bodystart="356" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1a5e5019dcec7306f2b587175480ca6f42" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::RangeAccrualPricerByBgm::digitalPriceWithSmile</definition>
        <argsstring>(Real strike, Real initialValue, Real expiry, Real deflator) const</argsstring>
        <name>digitalPriceWithSmile</name>
        <qualifiedname>QuantLib::RangeAccrualPricerByBgm::digitalPriceWithSmile</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>initialValue</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>expiry</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>deflator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="167" column="14" bodyfile="ql/cashflows/rangeaccrual.cpp" bodystart="389" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1a2057379d98e2e0bfe96102aab1b29085" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::RangeAccrualPricerByBgm::callSpreadPrice</definition>
        <argsstring>(Real previousInitialValue, Real nextInitialValue, Real previousStrike, Real nextStrike, Real deflator, Real previousVariance, Real nextVariance) const</argsstring>
        <name>callSpreadPrice</name>
        <qualifiedname>QuantLib::RangeAccrualPricerByBgm::callSpreadPrice</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>previousInitialValue</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>nextInitialValue</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>previousStrike</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>nextStrike</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>deflator</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>previousVariance</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>nextVariance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="172" column="14" bodyfile="ql/cashflows/rangeaccrual.cpp" bodystart="501" bodyend="523"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1a4f9bdd31a69d269c17372c2e7a3310c2" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::RangeAccrualPricerByBgm::smileCorrection</definition>
        <argsstring>(Real strike, Real initialValue, Real expiry, Real deflator) const</argsstring>
        <name>smileCorrection</name>
        <qualifiedname>QuantLib::RangeAccrualPricerByBgm::smileCorrection</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>initialValue</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>expiry</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>deflator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="180" column="14" bodyfile="ql/cashflows/rangeaccrual.cpp" bodystart="445" bodyend="499"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1a59dd9540aea1ac8f4d8b7dc260777375" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::RangeAccrualPricerByBgm::RangeAccrualPricerByBgm</definition>
        <argsstring>(Real correlation, ext::shared_ptr&lt; SmileSection &gt; smilesOnExpiry, ext::shared_ptr&lt; SmileSection &gt; smilesOnPayment, bool withSmile, bool byCallSpread)</argsstring>
        <name>RangeAccrualPricerByBgm</name>
        <qualifiedname>QuantLib::RangeAccrualPricerByBgm::RangeAccrualPricerByBgm</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>correlation</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_smile_section" kindref="compound">SmileSection</ref> &gt;</type>
          <declname>smilesOnExpiry</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_smile_section" kindref="compound">SmileSection</ref> &gt;</type>
          <declname>smilesOnPayment</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>withSmile</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>byCallSpread</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="124" column="8" bodyfile="ql/cashflows/rangeaccrual.cpp" bodystart="173" bodyend="179"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>QuantLib::FloatingRateCouponPricer</label>
        <link refid="class_quant_lib_1_1_floating_rate_coupon_pricer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>QuantLib::RangeAccrualPricer</label>
        <link refid="class_quant_lib_1_1_range_accrual_pricer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::RangeAccrualPricerByBgm</label>
        <link refid="class_quant_lib_1_1_range_accrual_pricer_by_bgm"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9">
        <label>QuantLib::CashFlow</label>
        <link refid="class_quant_lib_1_1_cash_flow"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::Coupon</label>
        <link refid="class_quant_lib_1_1_coupon"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>accrualEndDate_</edgelabel>
          <edgelabel>accrualStartDate_</edgelabel>
          <edgelabel>exCouponDate_</edgelabel>
          <edgelabel>paymentDate_</edgelabel>
          <edgelabel>refPeriodEnd_</edgelabel>
          <edgelabel>refPeriodStart_</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="13">
        <label>QuantLib::DayCounter</label>
        <link refid="class_quant_lib_1_1_day_counter"/>
      </node>
      <node id="10">
        <label>QuantLib::Event</label>
        <link refid="class_quant_lib_1_1_event"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::FloatingRateCoupon</label>
        <link refid="class_quant_lib_1_1_floating_rate_coupon"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="13" relation="usage">
          <edgelabel>dayCounter_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::FloatingRateCouponPricer</label>
        <link refid="class_quant_lib_1_1_floating_rate_coupon_pricer"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="6">
        <label>QuantLib::RangeAccrualFloatersCoupon</label>
        <link refid="class_quant_lib_1_1_range_accrual_floaters_coupon"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::RangeAccrualPricer</label>
        <link refid="class_quant_lib_1_1_range_accrual_pricer"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>coupon_</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::RangeAccrualPricerByBgm</label>
        <link refid="class_quant_lib_1_1_range_accrual_pricer_by_bgm"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/cashflows/rangeaccrual.hpp" line="121" column="5" bodyfile="ql/cashflows/rangeaccrual.hpp" bodystart="121" bodyend="193"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_1a1dee98bb69432b9b0417f6f31e1f0b4f" prot="protected" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>accrualFactor_</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1a84e9d481237e38f5f9483b199945c58a" prot="private" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>byCallSpread_</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1a2057379d98e2e0bfe96102aab1b29085" prot="protected" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>callSpreadPrice</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_1ad302610069c32fcba2f781a219f1331b" prot="public" virt="virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>capletPrice</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_1a256a524cb59c7be62f1c2482592c744d" prot="public" virt="virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>capletRate</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1a56cdbe2f7c3510d346144d0b1c95bb4d" prot="private" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>correlation_</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_1ab8d563089b4e63ce577ff50d2f8bedc0" prot="protected" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>coupon_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1a80ea301db6eac807fd5d574459376e2b" prot="protected" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>derDriftDerLambdaS</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1aedbff2272e43561a5141a0fe15a78eb3" prot="protected" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>derDriftDerLambdaT</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1ad904c71caf9a4e41a0fdab1adb521dc7" prot="protected" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>derLambdaDerLambdaS</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1aedb0cb42ac7f5af0ef3709b76db34a4b" prot="protected" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>derLambdaDerLambdaT</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1a47bdca5b968dd5119023680ec4ffb941" prot="protected" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>digitalPrice</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1a6294751aa68d06fd500aa6851ac97543" prot="protected" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>digitalPriceWithoutSmile</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1a5e5019dcec7306f2b587175480ca6f42" prot="protected" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>digitalPriceWithSmile</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1aee89a0189b57ce016a41bfa34ec56a78" prot="protected" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>digitalRangePrice</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_1a773d6b3ca1c45816a7d6098a3b40af37" prot="protected" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>discount_</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1a6d7756e83656970dace3c3fcfa795563" prot="protected" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>drift</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1a127450eb1ce38696180fae46bb7d612f" prot="protected" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>driftsOverPeriod</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_1a939232704e47fc5e5276f4f07ef8c83a" prot="protected" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>endTime_</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1acdad23bef98f7dd81206dd5397df6741" prot="private" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>eps_</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_1a6c06465ac0f7c5768550dd9d8a48e99d" prot="public" virt="virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>floorletPrice</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_1a2bbaf881fb74ba2ad1cb85d3192bda6e" prot="public" virt="virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>floorletRate</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_1a96ba4a17f74871d54ab2d825a78cdc92" prot="protected" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>gearing_</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_1af39239891dcf2da8a011755bc4d43e80" prot="public" virt="virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>initialize</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_1ab76cfbee77357562d26e279ded909981" prot="protected" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>initialValues_</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1abfa139362cf5b44d9a00ef2e9f3c44db" prot="protected" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>lambda</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1a4a60ba6d21eed9ffe48af08e26ea5924" prot="protected" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>lambdasOverPeriod</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_1a5fdd6f19c0569baa7516be4b772c2ddc" prot="protected" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>lowerTrigger_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::FloatingRateCouponPricer::"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::FloatingRateCouponPricer::"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_1a02840098c1c01d00a52099fc123b0ad6" prot="protected" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>observationsNo_</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_1acd70881b1b131c0a812605ffb6be10eb" prot="protected" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>observationTimeLags_</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_1aa6a81891df3800b7a79a20ec8f8427a0" prot="protected" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>observationTimes_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::FloatingRateCouponPricer::"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::FloatingRateCouponPricer::QuantLib::Observable::"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1a59dd9540aea1ac8f4d8b7dc260777375" prot="public" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>RangeAccrualPricerByBgm</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1a4f9bdd31a69d269c17372c2e7a3310c2" prot="protected" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>smileCorrection</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1ae10a2a53fb48c958d19ec09e586e3a8a" prot="private" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>smilesOnExpiry_</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1acd41411346bf929a4f29bb0d15f0c40d" prot="private" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>smilesOnPayment_</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_1a87b57e071e0bb94cc151eb8ce4be7481" prot="protected" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>spread_</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_1ac4a1c142339a76ea4c70edc50ed587f8" prot="protected" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>spreadLegValue_</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_1a5a9f3757d09c24acc9889b3e9c1b9623" prot="protected" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>startTime_</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1a59275da90082a9b4134a59e7f69f4c62" prot="public" virt="virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>swapletPrice</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_1ac0af2ca5b2cc152b7b0b9cf2bf09c08b" prot="public" virt="virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>swapletRate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_floating_rate_coupon_pricer_1a43d7327d65789c0feda11e80a589ad57" prot="public" virt="virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_1ac6d7c0e9864b8e0e7959ac5ace4afa9f" prot="protected" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>upperTrigger_</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_pricer_by_bgm_1ae668f25289e96c45aa6993a7bbe0036d" prot="private" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>withSmile_</name></member>
      <member refid="class_quant_lib_1_1_floating_rate_coupon_pricer_1af1a82cce3d2ea5e343e556ad4c40b5d5" prot="public" virt="non-virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>~FloatingRateCouponPricer</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::RangeAccrualPricerByBgm</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

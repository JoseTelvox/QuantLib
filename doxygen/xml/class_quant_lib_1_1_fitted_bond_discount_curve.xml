<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_fitted_bond_discount_curve" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::FittedBondDiscountCurve</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_yield_term_structure" prot="public" virt="non-virtual">QuantLib::YieldTermStructure</basecompoundref>
    <basecompoundref refid="class_quant_lib_1_1_lazy_object" prot="public" virt="non-virtual">QuantLib::LazyObject</basecompoundref>
    <includes refid="fittedbonddiscountcurve_8hpp" local="no">fittedbonddiscountcurve.hpp</includes>
    <innerclass refid="class_quant_lib_1_1_fitted_bond_discount_curve_1_1_fitting_method" prot="public">QuantLib::FittedBondDiscountCurve::FittingMethod</innerclass>
    <sectiondef kind="user-defined">
      <header>Observer interface</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_fitted_bond_discount_curve_1a46b397c2ef05368c166dfb493b76f319" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::FittedBondDiscountCurve::accuracy_</definition>
        <argsstring></argsstring>
        <name>accuracy_</name>
        <qualifiedname>QuantLib::FittedBondDiscountCurve::accuracy_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/fittedbonddiscountcurve.hpp" line="153" column="14" bodyfile="ql/termstructures/yield/fittedbonddiscountcurve.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fitted_bond_discount_curve_1a7e340b5662801b0e626f5416a30a935b" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::FittedBondDiscountCurve::maxEvaluations_</definition>
        <argsstring></argsstring>
        <name>maxEvaluations_</name>
        <qualifiedname>QuantLib::FittedBondDiscountCurve::maxEvaluations_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/fittedbonddiscountcurve.hpp" line="155" column="14" bodyfile="ql/termstructures/yield/fittedbonddiscountcurve.hpp" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fitted_bond_discount_curve_1a295df44aa09ded2ef3203878c36b094f" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::FittedBondDiscountCurve::simplexLambda_</definition>
        <argsstring></argsstring>
        <name>simplexLambda_</name>
        <qualifiedname>QuantLib::FittedBondDiscountCurve::simplexLambda_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/fittedbonddiscountcurve.hpp" line="157" column="14" bodyfile="ql/termstructures/yield/fittedbonddiscountcurve.hpp" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fitted_bond_discount_curve_1af764f6d043a81e79c0d5d4b63172528d" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::FittedBondDiscountCurve::maxStationaryStateIterations_</definition>
        <argsstring></argsstring>
        <name>maxStationaryStateIterations_</name>
        <qualifiedname>QuantLib::FittedBondDiscountCurve::maxStationaryStateIterations_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/fittedbonddiscountcurve.hpp" line="159" column="14" bodyfile="ql/termstructures/yield/fittedbonddiscountcurve.hpp" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fitted_bond_discount_curve_1ae5ce43bb0d46965e009f90dbaa5316bb" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FittedBondDiscountCurve::guessSolution_</definition>
        <argsstring></argsstring>
        <name>guessSolution_</name>
        <qualifiedname>QuantLib::FittedBondDiscountCurve::guessSolution_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/fittedbonddiscountcurve.hpp" line="161" column="15" bodyfile="ql/termstructures/yield/fittedbonddiscountcurve.hpp" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fitted_bond_discount_curve_1a5cd3bfe879a5136095d62a49232fabe3" prot="private" static="no" mutable="yes">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::FittedBondDiscountCurve::maxDate_</definition>
        <argsstring></argsstring>
        <name>maxDate_</name>
        <qualifiedname>QuantLib::FittedBondDiscountCurve::maxDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/fittedbonddiscountcurve.hpp" line="162" column="22" bodyfile="ql/termstructures/yield/fittedbonddiscountcurve.hpp" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fitted_bond_discount_curve_1a002d334f2c48b7a6208ca3fcd03dfa46" prot="private" static="no" mutable="no">
        <type>std::vector&lt; ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_bond_helper" kindref="compound">BondHelper</ref> &gt; &gt;</type>
        <definition>std::vector&lt;ext::shared_ptr&lt;BondHelper&gt; &gt; QuantLib::FittedBondDiscountCurve::bondHelpers_</definition>
        <argsstring></argsstring>
        <name>bondHelpers_</name>
        <qualifiedname>QuantLib::FittedBondDiscountCurve::bondHelpers_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/fittedbonddiscountcurve.hpp" line="163" column="21" bodyfile="ql/termstructures/yield/fittedbonddiscountcurve.hpp" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fitted_bond_discount_curve_1a77ca6c3f1008ef82adee043a0ce3659f" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_clone" kindref="compound">Clone</ref>&lt; <ref refid="class_quant_lib_1_1_fitted_bond_discount_curve_1_1_fitting_method" kindref="compound">FittingMethod</ref> &gt;</type>
        <definition>Clone&lt;FittingMethod&gt; QuantLib::FittedBondDiscountCurve::fittingMethod_</definition>
        <argsstring></argsstring>
        <name>fittingMethod_</name>
        <qualifiedname>QuantLib::FittedBondDiscountCurve::fittingMethod_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/fittedbonddiscountcurve.hpp" line="164" column="15" bodyfile="ql/termstructures/yield/fittedbonddiscountcurve.hpp" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fitted_bond_discount_curve_1a62042ed80b66107621f7effcece513d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::FittedBondDiscountCurve::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <qualifiedname>QuantLib::FittedBondDiscountCurve::update</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_observer_1a07905c55dca858470fcf4a1aea0005aa">update</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must be implemented in derived classes. An instance of Observer does not call this method directly: instead, it will be called by the observables the instance registered with when they need to notify any changes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/fittedbonddiscountcurve.hpp" line="145" column="14" bodyfile="ql/termstructures/yield/fittedbonddiscountcurve.hpp" bodystart="303" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fitted_bond_discount_curve_1a2699fc138fa115b76dbf2bff3db1aabd" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::FittedBondDiscountCurve::setup</definition>
        <argsstring>()</argsstring>
        <name>setup</name>
        <qualifiedname>QuantLib::FittedBondDiscountCurve::setup</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/fittedbonddiscountcurve.hpp" line="149" column="14" bodyfile="ql/termstructures/yield/fittedbonddiscountcurve.hpp" bodystart="308" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fitted_bond_discount_curve_1a00b864a8675cb5535d4cf2f3536f430e" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::FittedBondDiscountCurve::performCalculations</definition>
        <argsstring>() const override</argsstring>
        <name>performCalculations</name>
        <qualifiedname>QuantLib::FittedBondDiscountCurve::performCalculations</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_lazy_object_1aafa5583a3743d9f93fa40da5b62e1ff8">performCalculations</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must implement any calculations which must be (re)done in order to calculate the desired results. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/fittedbonddiscountcurve.hpp" line="150" column="14" bodyfile="ql/termstructures/yield/fittedbonddiscountcurve.cpp" bodystart="125" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fitted_bond_discount_curve_1a2fd6d03e4bdada58ffebf52c5758d99f" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a05e8e288a4bdedfe5b4e16d8cec14f1c" kindref="member">DiscountFactor</ref></type>
        <definition>DiscountFactor QuantLib::FittedBondDiscountCurve::discountImpl</definition>
        <argsstring>(Time) const override</argsstring>
        <name>discountImpl</name>
        <qualifiedname>QuantLib::FittedBondDiscountCurve::discountImpl</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_yield_term_structure_1a5c8dd504b1ed73f96c61dce6d8bfed81">discountImpl</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        </param>
        <briefdescription>
<para>discount factor calculation </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/fittedbonddiscountcurve.hpp" line="151" column="24" bodyfile="ql/termstructures/yield/fittedbonddiscountcurve.hpp" bodystart="313" bodyend="316"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Constructors</header>
      <memberdef kind="function" id="class_quant_lib_1_1_fitted_bond_discount_curve_1ae7ed127f3bf9100ea7329518725c7e41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FittedBondDiscountCurve::FittedBondDiscountCurve</definition>
        <argsstring>(Natural settlementDays, const Calendar &amp;calendar, std::vector&lt; ext::shared_ptr&lt; BondHelper &gt; &gt; bonds, const DayCounter &amp;dayCounter, const FittingMethod &amp;fittingMethod, Real accuracy=1.0e-10, Size maxEvaluations=10000, Array guess=Array(), Real simplexLambda=1.0, Size maxStationaryStateIterations=100)</argsstring>
        <name>FittedBondDiscountCurve</name>
        <qualifiedname>QuantLib::FittedBondDiscountCurve::FittedBondDiscountCurve</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>settlementDays</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>calendar</declname>
        </param>
        <param>
          <type>std::vector&lt; ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_bond_helper" kindref="compound">BondHelper</ref> &gt; &gt;</type>
          <declname>bonds</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_fitted_bond_discount_curve_1_1_fitting_method" kindref="compound">FittingMethod</ref> &amp;</type>
          <declname>fittingMethod</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>accuracy</declname>
          <defval>1.0e-10</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>maxEvaluations</declname>
          <defval>10000</defval>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
          <declname>guess</declname>
          <defval><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref>()</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>simplexLambda</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>maxStationaryStateIterations</declname>
          <defval>100</defval>
        </param>
        <briefdescription>
<para>reference date based on current evaluation date </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/fittedbonddiscountcurve.hpp" line="89" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fitted_bond_discount_curve_1aba733408e4f1cfe2d630d44e9673174b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FittedBondDiscountCurve::FittedBondDiscountCurve</definition>
        <argsstring>(const Date &amp;referenceDate, std::vector&lt; ext::shared_ptr&lt; BondHelper &gt; &gt; bonds, const DayCounter &amp;dayCounter, const FittingMethod &amp;fittingMethod, Real accuracy=1.0e-10, Size maxEvaluations=10000, Array guess=Array(), Real simplexLambda=1.0, Size maxStationaryStateIterations=100)</argsstring>
        <name>FittedBondDiscountCurve</name>
        <qualifiedname>QuantLib::FittedBondDiscountCurve::FittedBondDiscountCurve</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>referenceDate</declname>
        </param>
        <param>
          <type>std::vector&lt; ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_bond_helper" kindref="compound">BondHelper</ref> &gt; &gt;</type>
          <declname>bonds</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_fitted_bond_discount_curve_1_1_fitting_method" kindref="compound">FittingMethod</ref> &amp;</type>
          <declname>fittingMethod</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>accuracy</declname>
          <defval>1.0e-10</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>maxEvaluations</declname>
          <defval>10000</defval>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
          <declname>guess</declname>
          <defval><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref>()</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>simplexLambda</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>maxStationaryStateIterations</declname>
          <defval>100</defval>
        </param>
        <briefdescription>
<para>curve reference date fixed for life of curve </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/fittedbonddiscountcurve.hpp" line="101" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fitted_bond_discount_curve_1a0c5d582b9ba39f38c7d6dc58a6329d37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FittedBondDiscountCurve::FittedBondDiscountCurve</definition>
        <argsstring>(Natural settlementDays, const Calendar &amp;calendar, const FittingMethod &amp;fittingMethod, Array parameters, Date maxDate, const DayCounter &amp;dayCounter)</argsstring>
        <name>FittedBondDiscountCurve</name>
        <qualifiedname>QuantLib::FittedBondDiscountCurve::FittedBondDiscountCurve</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>settlementDays</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>calendar</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_fitted_bond_discount_curve_1_1_fitting_method" kindref="compound">FittingMethod</ref> &amp;</type>
          <declname>fittingMethod</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
          <declname>parameters</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
          <declname>maxDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
        </param>
        <briefdescription>
<para>don&apos;t fit, use precalculated parameters </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/fittedbonddiscountcurve.hpp" line="112" column="9" bodyfile="ql/termstructures/yield/fittedbonddiscountcurve.cpp" bodystart="88" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fitted_bond_discount_curve_1abccc83f213c9eeba7d20dd8fc1189be0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FittedBondDiscountCurve::FittedBondDiscountCurve</definition>
        <argsstring>(const Date &amp;referenceDate, const FittingMethod &amp;fittingMethod, Array parameters, Date maxDate, const DayCounter &amp;dayCounter)</argsstring>
        <name>FittedBondDiscountCurve</name>
        <qualifiedname>QuantLib::FittedBondDiscountCurve::FittedBondDiscountCurve</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>referenceDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_fitted_bond_discount_curve_1_1_fitting_method" kindref="compound">FittingMethod</ref> &amp;</type>
          <declname>fittingMethod</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
          <declname>parameters</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
          <declname>maxDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
        </param>
        <briefdescription>
<para>don&apos;t fit, use precalculated parameters </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/fittedbonddiscountcurve.hpp" line="120" column="9" bodyfile="ql/termstructures/yield/fittedbonddiscountcurve.cpp" bodystart="103" bodyend="115"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Inspectors</header>
      <memberdef kind="function" id="class_quant_lib_1_1_fitted_bond_discount_curve_1a799417c9428ecd3204630711fb0c2ae0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::FittedBondDiscountCurve::numberOfBonds</definition>
        <argsstring>() const</argsstring>
        <name>numberOfBonds</name>
        <qualifiedname>QuantLib::FittedBondDiscountCurve::numberOfBonds</qualifiedname>
        <briefdescription>
<para>total number of bonds used to fit the yield curve </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/fittedbonddiscountcurve.hpp" line="130" column="14" bodyfile="ql/termstructures/yield/fittedbonddiscountcurve.hpp" bodystart="288" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fitted_bond_discount_curve_1a6a5a6afbdcdaa77ab7058190c7673cbc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::FittedBondDiscountCurve::maxDate</definition>
        <argsstring>() const override</argsstring>
        <name>maxDate</name>
        <qualifiedname>QuantLib::FittedBondDiscountCurve::maxDate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_term_structure_1ae9af756bbddc15962711f77f514f08fa">maxDate</reimplements>
        <briefdescription>
<para>the latest date for which the curve can return values </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/fittedbonddiscountcurve.hpp" line="132" column="14" bodyfile="ql/termstructures/yield/fittedbonddiscountcurve.hpp" bodystart="292" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fitted_bond_discount_curve_1a605d585971b757e2865909844c030ab0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_fitted_bond_discount_curve_1_1_fitting_method" kindref="compound">FittingMethod</ref> &amp;</type>
        <definition>const FittedBondDiscountCurve::FittingMethod &amp; QuantLib::FittedBondDiscountCurve::fitResults</definition>
        <argsstring>() const</argsstring>
        <name>fitResults</name>
        <qualifiedname>QuantLib::FittedBondDiscountCurve::fitResults</qualifiedname>
        <briefdescription>
<para>class holding the results of the fit </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/fittedbonddiscountcurve.hpp" line="134" column="29" bodyfile="ql/termstructures/yield/fittedbonddiscountcurve.hpp" bodystart="298" bodyend="301"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Other utilities</header>
      <memberdef kind="function" id="class_quant_lib_1_1_fitted_bond_discount_curve_1a2916150025a234304def87ceeb8aae72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::FittedBondDiscountCurve::resetGuess</definition>
        <argsstring>(const Array &amp;guess)</argsstring>
        <name>resetGuess</name>
        <qualifiedname>QuantLib::FittedBondDiscountCurve::resetGuess</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>guess</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This allows to try out multiple guesses and avoid local minima </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/fittedbonddiscountcurve.hpp" line="140" column="14" bodyfile="ql/termstructures/yield/fittedbonddiscountcurve.cpp" bodystart="118" bodyend="122"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para><ref refid="struct_quant_lib_1_1_discount" kindref="compound">Discount</ref> curve fitted to a set of fixed-coupon bonds. </para>
    </briefdescription>
    <detaileddescription>
<para>This class fits a discount function <formula id="505">$ d(t) $</formula> over a set of bonds, using a user defined fitting method. The discount function is fit in such a way so that all cashflows of all input bonds, when discounted using <formula id="505">$ d(t) $</formula>, will reproduce the set of input bond prices in an optimized sense. Minimized price errors are weighted by the inverse of their respective bond duration.</para>
<para>The <ref refid="class_quant_lib_1_1_fitted_bond_discount_curve" kindref="compound">FittedBondDiscountCurve</ref> class acts as a generic wrapper, while its inner class <ref refid="class_quant_lib_1_1_fitted_bond_discount_curve_1_1_fitting_method" kindref="compound">FittingMethod</ref> provides the implementation details. Developers thus need only derive new fitting methods from the latter.</para>
<para><simplesect kind="warning"><para>The method can be slow if there are many bonds to fit. Speed also depends on the particular choice of fitting method chosen and its convergence properties under optimization. See also todo list for BondDiscountCurveFittingMethod.</para>
</simplesect>
<xrefsect id="todo_1_todo000072"><xreftitle>Todo</xreftitle><xrefdescription><para>refactor the bond helper class so that it is pure virtual and returns a generic bond or its cash flows. Derived classes would include helpers for fixed-rate and zero-coupon bonds. In this way, both bonds and bills can be used to fit a discount curve using the exact same machinery. At present, only fixed-coupon bonds are supported. An even better way to move forward might be to get rate helpers to return cashflows, in which case this class could be used to fit any set of cash flows, not just bonds.</para>
</xrefdescription></xrefsect></para>
<para><xrefsect id="todo_1_todo000073"><xreftitle>Todo</xreftitle><xrefdescription><para>add more fitting diagnostics: smoothness, standard deviation, student-t test, etc. Generic smoothness method may be useful for smoothing splines fitting. See Fisher, M., D. Nychka and D. Zervos: &quot;Fitting the term
      structure of interest rates with smoothing splines.&quot; Board of Governors of the Federal Reserve System, Federal Resere Board Working Paper, 95-1.</para>
</xrefdescription></xrefsect></para>
<para><xrefsect id="todo_1_todo000074"><xreftitle>Todo</xreftitle><xrefdescription><para>add extrapolation routines</para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <inheritancegraph>
      <node id="6">
        <label>QuantLib::Extrapolator</label>
        <link refid="class_quant_lib_1_1_extrapolator"/>
      </node>
      <node id="1">
        <label>QuantLib::FittedBondDiscountCurve</label>
        <link refid="class_quant_lib_1_1_fitted_bond_discount_curve"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="3">
        <label>QuantLib::TermStructure</label>
        <link refid="class_quant_lib_1_1_term_structure"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::YieldTermStructure</label>
        <link refid="class_quant_lib_1_1_yield_term_structure"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7">
        <label>QuantLib::Calendar</label>
        <link refid="class_quant_lib_1_1_calendar"/>
      </node>
      <node id="6">
        <label>QuantLib::Extrapolator</label>
        <link refid="class_quant_lib_1_1_extrapolator"/>
      </node>
      <node id="1">
        <label>QuantLib::FittedBondDiscountCurve</label>
        <link refid="class_quant_lib_1_1_fitted_bond_discount_curve"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="3">
        <label>QuantLib::TermStructure</label>
        <link refid="class_quant_lib_1_1_term_structure"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>calendar_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::YieldTermStructure</label>
        <link refid="class_quant_lib_1_1_yield_term_structure"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/termstructures/yield/fittedbonddiscountcurve.hpp" line="81" column="5" bodyfile="ql/termstructures/yield/fittedbonddiscountcurve.hpp" bodystart="82" bodyend="165"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1a46b397c2ef05368c166dfb493b76f319" prot="private" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>accuracy_</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1ab3936a9b5b5c163d3e511437c16c1d9e" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>allowsExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a02070ea7442d30625992c1711030d4b8" prot="protected" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>alwaysForward_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a17c9433135a259e4776baec66204a484" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>alwaysForwardNotifications</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1a002d334f2c48b7a6208ca3fcd03dfa46" prot="private" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>bondHelpers_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a5244c7f83592375a0ea9048296435fd1" prot="protected" virt="virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a58b4986a80efa18634483a92c121e26e" prot="protected" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>calculated_</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac4ea5cbce495c9a47a44eeaedf7a9d45" prot="public" virt="virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>calendar</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a0a09e3fa8cdfbc9aa9685da0c35ccb90" prot="protected" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>calendar_</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1aa7297742ffbeeb0c7611f90a0f7d15bf" prot="protected" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>checkRange</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a4d246bcb13b7518a75088bf7cf01ea75" prot="protected" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>checkRange</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac03e725e4e0685b209caa626b00924ca" prot="public" virt="virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>dayCounter</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1a6af69387d5cae0fe84d6a0c858406218" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>disableExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_yield_term_structure_1ae7ebb1a52720c8275b40752e505834b8" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>discount</name></member>
      <member refid="class_quant_lib_1_1_yield_term_structure_1a0f98239d6aa04b7bb905da1f36e93f05" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>discount</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1a2fd6d03e4bdada58ffebf52c5758d99f" prot="private" virt="virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>discountImpl</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1a5f7b5650a44d6c63095bc739470c8bfb" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>enableExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1af1c3adaccdfaf07d3d07edaa234444f7" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>Extrapolator</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1a605d585971b757e2865909844c030ab0" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>fitResults</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1ae7ed127f3bf9100ea7329518725c7e41" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>FittedBondDiscountCurve</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1aba733408e4f1cfe2d630d44e9673174b" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>FittedBondDiscountCurve</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1a0c5d582b9ba39f38c7d6dc58a6329d37" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>FittedBondDiscountCurve</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1abccc83f213c9eeba7d20dd8fc1189be0" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>FittedBondDiscountCurve</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1a77ca6c3f1008ef82adee043a0ce3659f" prot="private" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>fittingMethod_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1afac6ee19c3107c453e1347dd8000e023" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>forwardFirstNotificationOnly</name></member>
      <member refid="class_quant_lib_1_1_yield_term_structure_1a1e1ae6ff3486bb692f6a27a00c88deb0" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>forwardRate</name></member>
      <member refid="class_quant_lib_1_1_yield_term_structure_1a54d4939c63eae4aa5c96cdc50a6384b5" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>forwardRate</name></member>
      <member refid="class_quant_lib_1_1_yield_term_structure_1a5d109bba7336c36026652266be7abd0c" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>forwardRate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7157f41e83f2c5d924f5c5bafda04d1d" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>freeze</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7bb721fe00c6854e602758aba629ab77" prot="protected" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>frozen_</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1ae5ce43bb0d46965e009f90dbaa5316bb" prot="private" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>guessSolution_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a0a7c5d42815a4e16ee2158e24dbfc748" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>isCalculated</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_yield_term_structure_1a1121c8d1e731832496182bda33ba8d45" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>jumpDates</name></member>
      <member refid="class_quant_lib_1_1_yield_term_structure_1ae34149edb2c2f604b0f1469b2268e517" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>jumpTimes</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a26f18f4ff7faaaebd8eae50e064b493e" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>LazyObject</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1a6a5a6afbdcdaa77ab7058190c7673cbc" prot="public" virt="virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>maxDate</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1a5cd3bfe879a5136095d62a49232fabe3" prot="private" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>maxDate_</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1a7e340b5662801b0e626f5416a30a935b" prot="private" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>maxEvaluations_</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1af764f6d043a81e79c0d5d4b63172528d" prot="private" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>maxStationaryStateIterations_</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a2f820c32e198e1046d97ca3dd9a807c5" prot="public" virt="virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>maxTime</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a8319e5c2c37b09a825d61210c9cb8e2a" prot="protected" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>moving_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1a799417c9428ecd3204630711fb0c2ae0" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>numberOfBonds</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::"><scope>QuantLib::FittedBondDiscountCurve</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::"><scope>QuantLib::FittedBondDiscountCurve</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::"><scope>QuantLib::FittedBondDiscountCurve</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::FittedBondDiscountCurve</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::QuantLib::Observable::"><scope>QuantLib::FittedBondDiscountCurve</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::FittedBondDiscountCurve</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1a00b864a8675cb5535d4cf2f3536f430e" prot="private" virt="virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>performCalculations</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a70c9b24e50132408d8d9ce4f6674662a" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>recalculate</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1accbf3d4af41db0333d456eb5616c4e1e" prot="public" virt="virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>referenceDate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1a2916150025a234304def87ceeb8aae72" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>resetGuess</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1abeb79eefda70a9414f206ca9e70ced0f" prot="public" virt="virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>settlementDays</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1a2699fc138fa115b76dbf2bff3db1aabd" prot="private" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>setup</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1a295df44aa09ded2ef3203878c36b094f" prot="private" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>simplexLambda_</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac8365997e6d41134b4e0998fe6b4e949" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>TermStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a95764a49e0368b653eadbe619d9ef334" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>TermStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1aab73d2acafdc8fbdf9336e7084bd88a1" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>TermStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac8da61eb0f06ae07a35e8e4bbe7146b0" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>timeFromReference</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a2e0e4786666453024b9d4e0761f2770b" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>unfreeze</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_fitted_bond_discount_curve_1a62042ed80b66107621f7effcece513d9" prot="public" virt="virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a2fcf1c78e57786ad5c123f52dbf619e8" prot="protected" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>updated_</name></member>
      <member refid="class_quant_lib_1_1_yield_term_structure_1a2f77f6a92f1e48450c801debadd6c5d1" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>YieldTermStructure</name></member>
      <member refid="class_quant_lib_1_1_yield_term_structure_1a1512e59ec18b51681936cd84c1381b28" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>YieldTermStructure</name></member>
      <member refid="class_quant_lib_1_1_yield_term_structure_1a1c4ed273e8b8b8631139fc784edb399c" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>YieldTermStructure</name></member>
      <member refid="class_quant_lib_1_1_yield_term_structure_1a2c3ff5cd67f7a14b9d917fbe6491c096" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>zeroRate</name></member>
      <member refid="class_quant_lib_1_1_yield_term_structure_1a081055025072ce474e54ba29a250c786" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>zeroRate</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1af0ca0156436ffbce159183198eb27e2e" prot="public" virt="virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>~Extrapolator</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a9d719c43bb627177a90d7d12324a2d6e" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>~LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ad202ddcc14fc4a6c16686d6164d7b36c" prot="public" virt="non-virtual"><scope>QuantLib::FittedBondDiscountCurve</scope><name>~TermStructure</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

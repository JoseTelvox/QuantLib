<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="struct_quant_lib_1_1_unit_of_measure_conversion_1_1_data" kind="struct" language="C++" prot="protected">
    <compoundname>QuantLib::UnitOfMeasureConversion::Data</compoundname>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_quant_lib_1_1_unit_of_measure_conversion_1_1_data_1ae32a74c019f7847580cae3f772ae4776" prot="public" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_commodity_type" kindref="compound">CommodityType</ref></type>
        <definition>CommodityType QuantLib::UnitOfMeasureConversion::Data::commodityType</definition>
        <argsstring></argsstring>
        <name>commodityType</name>
        <qualifiedname>QuantLib::UnitOfMeasureConversion::Data::commodityType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/unitofmeasureconversion.hpp" line="86" column="27" bodyfile="ql/experimental/commodities/unitofmeasureconversion.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_quant_lib_1_1_unit_of_measure_conversion_1_1_data_1a897d7b3ec28b42da4ab27d0d7f5fa63f" prot="public" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_unit_of_measure" kindref="compound">UnitOfMeasure</ref></type>
        <definition>UnitOfMeasure QuantLib::UnitOfMeasureConversion::Data::source</definition>
        <argsstring></argsstring>
        <name>source</name>
        <qualifiedname>QuantLib::UnitOfMeasureConversion::Data::source</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/unitofmeasureconversion.hpp" line="87" column="27" bodyfile="ql/experimental/commodities/unitofmeasureconversion.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_quant_lib_1_1_unit_of_measure_conversion_1_1_data_1a645b311af3f7b799a32e75d0ccbba7f1" prot="public" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_unit_of_measure" kindref="compound">UnitOfMeasure</ref></type>
        <definition>UnitOfMeasure QuantLib::UnitOfMeasureConversion::Data::target</definition>
        <argsstring></argsstring>
        <name>target</name>
        <qualifiedname>QuantLib::UnitOfMeasureConversion::Data::target</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/unitofmeasureconversion.hpp" line="87" column="34" bodyfile="ql/experimental/commodities/unitofmeasureconversion.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_quant_lib_1_1_unit_of_measure_conversion_1_1_data_1abcebfa4337a06e8506956346575103d7" prot="public" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::UnitOfMeasureConversion::Data::conversionFactor</definition>
        <argsstring></argsstring>
        <name>conversionFactor</name>
        <qualifiedname>QuantLib::UnitOfMeasureConversion::Data::conversionFactor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/unitofmeasureconversion.hpp" line="88" column="18" bodyfile="ql/experimental/commodities/unitofmeasureconversion.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_quant_lib_1_1_unit_of_measure_conversion_1_1_data_1a86bcbe2894b0213bc9fa582bcb2200e1" prot="public" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_unit_of_measure_conversion_1a5c911acd096256df6a600c7d38d59e4a" kindref="member">Type</ref></type>
        <definition>Type QuantLib::UnitOfMeasureConversion::Data::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <qualifiedname>QuantLib::UnitOfMeasureConversion::Data::type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/unitofmeasureconversion.hpp" line="89" column="18" bodyfile="ql/experimental/commodities/unitofmeasureconversion.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_quant_lib_1_1_unit_of_measure_conversion_1_1_data_1a6b3239cc6b8e1530aa440de1e1a5840e" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string QuantLib::UnitOfMeasureConversion::Data::code</definition>
        <argsstring></argsstring>
        <name>code</name>
        <qualifiedname>QuantLib::UnitOfMeasureConversion::Data::code</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/unitofmeasureconversion.hpp" line="90" column="25" bodyfile="ql/experimental/commodities/unitofmeasureconversion.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_quant_lib_1_1_unit_of_measure_conversion_1_1_data_1adf16ee8d7d0feceb3dd22890f9297ab1" prot="public" static="no" mutable="no">
        <type>std::pair&lt; ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_unit_of_measure_conversion" kindref="compound">UnitOfMeasureConversion</ref> &gt;, ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_unit_of_measure_conversion" kindref="compound">UnitOfMeasureConversion</ref> &gt; &gt;</type>
        <definition>std::pair&lt;ext::shared_ptr&lt;UnitOfMeasureConversion&gt;, ext::shared_ptr&lt;UnitOfMeasureConversion&gt; &gt; QuantLib::UnitOfMeasureConversion::Data::conversionFactorChain</definition>
        <argsstring></argsstring>
        <name>conversionFactorChain</name>
        <qualifiedname>QuantLib::UnitOfMeasureConversion::Data::conversionFactorChain</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/unitofmeasureconversion.hpp" line="93" column="13" bodyfile="ql/experimental/commodities/unitofmeasureconversion.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_quant_lib_1_1_unit_of_measure_conversion_1_1_data_1a04399ade16f9a01751b4818dd35a999d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::UnitOfMeasureConversion::Data::Data</definition>
        <argsstring>(const CommodityType &amp;commodityType, const UnitOfMeasure &amp;source, const UnitOfMeasure &amp;target, Real conversionFactor, Type type)</argsstring>
        <name>Data</name>
        <qualifiedname>QuantLib::UnitOfMeasureConversion::Data::Data</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_commodity_type" kindref="compound">CommodityType</ref> &amp;</type>
          <declname>commodityType</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_unit_of_measure" kindref="compound">UnitOfMeasure</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_unit_of_measure" kindref="compound">UnitOfMeasure</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>conversionFactor</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_unit_of_measure_conversion_1a5c911acd096256df6a600c7d38d59e4a" kindref="member">Type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/unitofmeasureconversion.hpp" line="95" column="13" bodyfile="ql/experimental/commodities/unitofmeasureconversion.cpp" bodystart="45" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1_unit_of_measure_conversion_1_1_data_1acca8cf9aeb2cd1df5d531c437e74ec44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::UnitOfMeasureConversion::Data::Data</definition>
        <argsstring>(const UnitOfMeasureConversion &amp;r1, const UnitOfMeasureConversion &amp;r2)</argsstring>
        <name>Data</name>
        <qualifiedname>QuantLib::UnitOfMeasureConversion::Data::Data</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_unit_of_measure_conversion" kindref="compound">UnitOfMeasureConversion</ref> &amp;</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_unit_of_measure_conversion" kindref="compound">UnitOfMeasureConversion</ref> &amp;</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/unitofmeasureconversion.hpp" line="101" column="13" bodyfile="ql/experimental/commodities/unitofmeasureconversion.cpp" bodystart="54" bodyend="59"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::CommodityType</label>
        <link refid="class_quant_lib_1_1_commodity_type"/>
      </node>
      <node id="3">
        <label>QuantLib::UnitOfMeasure</label>
        <link refid="class_quant_lib_1_1_unit_of_measure"/>
      </node>
      <node id="1">
        <label>QuantLib::UnitOfMeasureConversion::Data</label>
        <link refid="struct_quant_lib_1_1_unit_of_measure_conversion_1_1_data"/>
        <childnode refid="2" relation="usage">
          <edgelabel>commodityType</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>source</edgelabel>
          <edgelabel>target</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/commodities/unitofmeasureconversion.hpp" line="85" column="9" bodyfile="ql/experimental/commodities/unitofmeasureconversion.hpp" bodystart="85" bodyend="103"/>
    <listofallmembers>
      <member refid="struct_quant_lib_1_1_unit_of_measure_conversion_1_1_data_1a6b3239cc6b8e1530aa440de1e1a5840e" prot="public" virt="non-virtual"><scope>QuantLib::UnitOfMeasureConversion::Data</scope><name>code</name></member>
      <member refid="struct_quant_lib_1_1_unit_of_measure_conversion_1_1_data_1ae32a74c019f7847580cae3f772ae4776" prot="public" virt="non-virtual"><scope>QuantLib::UnitOfMeasureConversion::Data</scope><name>commodityType</name></member>
      <member refid="struct_quant_lib_1_1_unit_of_measure_conversion_1_1_data_1abcebfa4337a06e8506956346575103d7" prot="public" virt="non-virtual"><scope>QuantLib::UnitOfMeasureConversion::Data</scope><name>conversionFactor</name></member>
      <member refid="struct_quant_lib_1_1_unit_of_measure_conversion_1_1_data_1adf16ee8d7d0feceb3dd22890f9297ab1" prot="public" virt="non-virtual"><scope>QuantLib::UnitOfMeasureConversion::Data</scope><name>conversionFactorChain</name></member>
      <member refid="struct_quant_lib_1_1_unit_of_measure_conversion_1_1_data_1a04399ade16f9a01751b4818dd35a999d" prot="public" virt="non-virtual"><scope>QuantLib::UnitOfMeasureConversion::Data</scope><name>Data</name></member>
      <member refid="struct_quant_lib_1_1_unit_of_measure_conversion_1_1_data_1acca8cf9aeb2cd1df5d531c437e74ec44" prot="public" virt="non-virtual"><scope>QuantLib::UnitOfMeasureConversion::Data</scope><name>Data</name></member>
      <member refid="struct_quant_lib_1_1_unit_of_measure_conversion_1_1_data_1a897d7b3ec28b42da4ab27d0d7f5fa63f" prot="public" virt="non-virtual"><scope>QuantLib::UnitOfMeasureConversion::Data</scope><name>source</name></member>
      <member refid="struct_quant_lib_1_1_unit_of_measure_conversion_1_1_data_1a645b311af3f7b799a32e75d0ccbba7f1" prot="public" virt="non-virtual"><scope>QuantLib::UnitOfMeasureConversion::Data</scope><name>target</name></member>
      <member refid="struct_quant_lib_1_1_unit_of_measure_conversion_1_1_data_1a86bcbe2894b0213bc9fa582bcb2200e1" prot="public" virt="non-virtual"><scope>QuantLib::UnitOfMeasureConversion::Data</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

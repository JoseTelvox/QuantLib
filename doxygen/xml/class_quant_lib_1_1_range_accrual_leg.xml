<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_range_accrual_leg" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::RangeAccrualLeg</compoundname>
    <includes refid="rangeaccrual_8hpp" local="no">rangeaccrual.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_range_accrual_leg_1a08bb120685671f0a7102c7dfba914dff" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_schedule" kindref="compound">Schedule</ref></type>
        <definition>Schedule QuantLib::RangeAccrualLeg::schedule_</definition>
        <argsstring></argsstring>
        <name>schedule_</name>
        <qualifiedname>QuantLib::RangeAccrualLeg::schedule_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="218" column="18" bodyfile="ql/cashflows/rangeaccrual.hpp" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_range_accrual_leg_1ac2f84762be15da3827a7e47c62452375" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_ibor_index" kindref="compound">IborIndex</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;IborIndex&gt; QuantLib::RangeAccrualLeg::index_</definition>
        <argsstring></argsstring>
        <name>index_</name>
        <qualifiedname>QuantLib::RangeAccrualLeg::index_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="219" column="25" bodyfile="ql/cashflows/rangeaccrual.hpp" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_range_accrual_leg_1a8f7a97f257c7b50abaf025a22bbef382" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::RangeAccrualLeg::notionals_</definition>
        <argsstring></argsstring>
        <name>notionals_</name>
        <qualifiedname>QuantLib::RangeAccrualLeg::notionals_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="220" column="21" bodyfile="ql/cashflows/rangeaccrual.hpp" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_range_accrual_leg_1ade2e8e894fce81c0fbabacf86f4be61d" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref></type>
        <definition>DayCounter QuantLib::RangeAccrualLeg::paymentDayCounter_</definition>
        <argsstring></argsstring>
        <name>paymentDayCounter_</name>
        <qualifiedname>QuantLib::RangeAccrualLeg::paymentDayCounter_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="221" column="20" bodyfile="ql/cashflows/rangeaccrual.hpp" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_range_accrual_leg_1acc57fd3ae40ca89a1568f22e7e3b96dd" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
        <definition>BusinessDayConvention QuantLib::RangeAccrualLeg::paymentAdjustment_</definition>
        <argsstring></argsstring>
        <name>paymentAdjustment_</name>
        <qualifiedname>QuantLib::RangeAccrualLeg::paymentAdjustment_</qualifiedname>
        <initializer>= <ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881ad881bac893a17d75191f0041eefda956" kindref="member">Following</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="222" column="31" bodyfile="ql/cashflows/rangeaccrual.hpp" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_range_accrual_leg_1aa3e8558d498bc779f78c87e682a1bb84" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref> &gt;</type>
        <definition>std::vector&lt;Natural&gt; QuantLib::RangeAccrualLeg::fixingDays_</definition>
        <argsstring></argsstring>
        <name>fixingDays_</name>
        <qualifiedname>QuantLib::RangeAccrualLeg::fixingDays_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="223" column="21" bodyfile="ql/cashflows/rangeaccrual.hpp" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_range_accrual_leg_1a5edd823394185163fc86362de6480306" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::RangeAccrualLeg::gearings_</definition>
        <argsstring></argsstring>
        <name>gearings_</name>
        <qualifiedname>QuantLib::RangeAccrualLeg::gearings_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="224" column="21" bodyfile="ql/cashflows/rangeaccrual.hpp" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_range_accrual_leg_1aafe143b9f13ce69629fdefb88cc8ecc1" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1ad61d2e1a3f01154233de0d5fbb85177c" kindref="member">Spread</ref> &gt;</type>
        <definition>std::vector&lt;Spread&gt; QuantLib::RangeAccrualLeg::spreads_</definition>
        <argsstring></argsstring>
        <name>spreads_</name>
        <qualifiedname>QuantLib::RangeAccrualLeg::spreads_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="225" column="21" bodyfile="ql/cashflows/rangeaccrual.hpp" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_range_accrual_leg_1a205a8950b6c5fa61ed1eb44942e246a3" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>std::vector&lt;Rate&gt; QuantLib::RangeAccrualLeg::lowerTriggers_</definition>
        <argsstring></argsstring>
        <name>lowerTriggers_</name>
        <qualifiedname>QuantLib::RangeAccrualLeg::lowerTriggers_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="226" column="21" bodyfile="ql/cashflows/rangeaccrual.hpp" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_range_accrual_leg_1a5c9f21d40777aec3735d37643164d725" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>std::vector&lt;Rate&gt; QuantLib::RangeAccrualLeg::upperTriggers_</definition>
        <argsstring></argsstring>
        <name>upperTriggers_</name>
        <qualifiedname>QuantLib::RangeAccrualLeg::upperTriggers_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="226" column="36" bodyfile="ql/cashflows/rangeaccrual.hpp" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_range_accrual_leg_1a0116051f23baeeb86809d21c373a1767" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref></type>
        <definition>Period QuantLib::RangeAccrualLeg::observationTenor_</definition>
        <argsstring></argsstring>
        <name>observationTenor_</name>
        <qualifiedname>QuantLib::RangeAccrualLeg::observationTenor_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="227" column="16" bodyfile="ql/cashflows/rangeaccrual.hpp" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_range_accrual_leg_1a439a911544598126c6046e573dafddc0" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
        <definition>BusinessDayConvention QuantLib::RangeAccrualLeg::observationConvention_</definition>
        <argsstring></argsstring>
        <name>observationConvention_</name>
        <qualifiedname>QuantLib::RangeAccrualLeg::observationConvention_</qualifiedname>
        <initializer>= <ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881aaa730fc5548402fd95e95f1c57f9a535" kindref="member">ModifiedFollowing</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="228" column="31" bodyfile="ql/cashflows/rangeaccrual.hpp" bodystart="228" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_range_accrual_leg_1a913a8558b9a55b5a107c566880e74539" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::RangeAccrualLeg::RangeAccrualLeg</definition>
        <argsstring>(Schedule schedule, ext::shared_ptr&lt; IborIndex &gt; index)</argsstring>
        <name>RangeAccrualLeg</name>
        <qualifiedname>QuantLib::RangeAccrualLeg::RangeAccrualLeg</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_schedule" kindref="compound">Schedule</ref></type>
          <declname>schedule</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_ibor_index" kindref="compound">IborIndex</ref> &gt;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="199" column="9" bodyfile="ql/cashflows/rangeaccrual.cpp" bodystart="526" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_range_accrual_leg_1ab83a669c940792c06b8489bf9310a67e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_range_accrual_leg" kindref="compound">RangeAccrualLeg</ref> &amp;</type>
        <definition>RangeAccrualLeg &amp; QuantLib::RangeAccrualLeg::withNotionals</definition>
        <argsstring>(Real notional)</argsstring>
        <name>withNotionals</name>
        <qualifiedname>QuantLib::RangeAccrualLeg::withNotionals</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>notional</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="200" column="25" bodyfile="ql/cashflows/rangeaccrual.cpp" bodystart="529" bodyend="532"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_range_accrual_leg_1a3e59c3b2e69d87c03020c90aaaf56e6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_range_accrual_leg" kindref="compound">RangeAccrualLeg</ref> &amp;</type>
        <definition>RangeAccrualLeg &amp; QuantLib::RangeAccrualLeg::withNotionals</definition>
        <argsstring>(const std::vector&lt; Real &gt; &amp;notionals)</argsstring>
        <name>withNotionals</name>
        <qualifiedname>QuantLib::RangeAccrualLeg::withNotionals</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>notionals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="201" column="25" bodyfile="ql/cashflows/rangeaccrual.cpp" bodystart="534" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_range_accrual_leg_1ad7728fa82ada11cea87b95a793770507" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_range_accrual_leg" kindref="compound">RangeAccrualLeg</ref> &amp;</type>
        <definition>RangeAccrualLeg &amp; QuantLib::RangeAccrualLeg::withPaymentDayCounter</definition>
        <argsstring>(const DayCounter &amp;)</argsstring>
        <name>withPaymentDayCounter</name>
        <qualifiedname>QuantLib::RangeAccrualLeg::withPaymentDayCounter</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <defname>dayCounter</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="202" column="25" bodyfile="ql/cashflows/rangeaccrual.cpp" bodystart="540" bodyend="544"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_range_accrual_leg_1a832e20ec79a7c8d5fb608a4eb54143dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_range_accrual_leg" kindref="compound">RangeAccrualLeg</ref> &amp;</type>
        <definition>RangeAccrualLeg &amp; QuantLib::RangeAccrualLeg::withPaymentAdjustment</definition>
        <argsstring>(BusinessDayConvention)</argsstring>
        <name>withPaymentAdjustment</name>
        <qualifiedname>QuantLib::RangeAccrualLeg::withPaymentAdjustment</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
          <defname>convention</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="203" column="25" bodyfile="ql/cashflows/rangeaccrual.cpp" bodystart="546" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_range_accrual_leg_1a73652cf33ada76f857689a4ff48f8c35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_range_accrual_leg" kindref="compound">RangeAccrualLeg</ref> &amp;</type>
        <definition>RangeAccrualLeg &amp; QuantLib::RangeAccrualLeg::withFixingDays</definition>
        <argsstring>(Natural fixingDays)</argsstring>
        <name>withFixingDays</name>
        <qualifiedname>QuantLib::RangeAccrualLeg::withFixingDays</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>fixingDays</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="204" column="25" bodyfile="ql/cashflows/rangeaccrual.cpp" bodystart="552" bodyend="555"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_range_accrual_leg_1a4bb3f5bf81a8ccac27478f55c23c39ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_range_accrual_leg" kindref="compound">RangeAccrualLeg</ref> &amp;</type>
        <definition>RangeAccrualLeg &amp; QuantLib::RangeAccrualLeg::withFixingDays</definition>
        <argsstring>(const std::vector&lt; Natural &gt; &amp;fixingDays)</argsstring>
        <name>withFixingDays</name>
        <qualifiedname>QuantLib::RangeAccrualLeg::withFixingDays</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref> &gt; &amp;</type>
          <declname>fixingDays</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="205" column="25" bodyfile="ql/cashflows/rangeaccrual.cpp" bodystart="557" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_range_accrual_leg_1a8bfd610a7aaa4a6498c3d6f032019ec1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_range_accrual_leg" kindref="compound">RangeAccrualLeg</ref> &amp;</type>
        <definition>RangeAccrualLeg &amp; QuantLib::RangeAccrualLeg::withGearings</definition>
        <argsstring>(Real gearing)</argsstring>
        <name>withGearings</name>
        <qualifiedname>QuantLib::RangeAccrualLeg::withGearings</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>gearing</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="206" column="25" bodyfile="ql/cashflows/rangeaccrual.cpp" bodystart="563" bodyend="566"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_range_accrual_leg_1a47559618401011b6269a77363a178626" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_range_accrual_leg" kindref="compound">RangeAccrualLeg</ref> &amp;</type>
        <definition>RangeAccrualLeg &amp; QuantLib::RangeAccrualLeg::withGearings</definition>
        <argsstring>(const std::vector&lt; Real &gt; &amp;gearings)</argsstring>
        <name>withGearings</name>
        <qualifiedname>QuantLib::RangeAccrualLeg::withGearings</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>gearings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="207" column="25" bodyfile="ql/cashflows/rangeaccrual.cpp" bodystart="568" bodyend="572"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_range_accrual_leg_1a6f39630a72fc7772ae1e698431436832" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_range_accrual_leg" kindref="compound">RangeAccrualLeg</ref> &amp;</type>
        <definition>RangeAccrualLeg &amp; QuantLib::RangeAccrualLeg::withSpreads</definition>
        <argsstring>(Spread spread)</argsstring>
        <name>withSpreads</name>
        <qualifiedname>QuantLib::RangeAccrualLeg::withSpreads</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1ad61d2e1a3f01154233de0d5fbb85177c" kindref="member">Spread</ref></type>
          <declname>spread</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="208" column="25" bodyfile="ql/cashflows/rangeaccrual.cpp" bodystart="574" bodyend="577"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_range_accrual_leg_1a1375577e33ac93a8ce64fb00ca7b7b35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_range_accrual_leg" kindref="compound">RangeAccrualLeg</ref> &amp;</type>
        <definition>RangeAccrualLeg &amp; QuantLib::RangeAccrualLeg::withSpreads</definition>
        <argsstring>(const std::vector&lt; Spread &gt; &amp;spreads)</argsstring>
        <name>withSpreads</name>
        <qualifiedname>QuantLib::RangeAccrualLeg::withSpreads</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1ad61d2e1a3f01154233de0d5fbb85177c" kindref="member">Spread</ref> &gt; &amp;</type>
          <declname>spreads</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="209" column="25" bodyfile="ql/cashflows/rangeaccrual.cpp" bodystart="579" bodyend="583"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_range_accrual_leg_1adcf7a4303f4692b24d1ce9b1003b7fcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_range_accrual_leg" kindref="compound">RangeAccrualLeg</ref> &amp;</type>
        <definition>RangeAccrualLeg &amp; QuantLib::RangeAccrualLeg::withLowerTriggers</definition>
        <argsstring>(Rate trigger)</argsstring>
        <name>withLowerTriggers</name>
        <qualifiedname>QuantLib::RangeAccrualLeg::withLowerTriggers</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>trigger</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="210" column="25" bodyfile="ql/cashflows/rangeaccrual.cpp" bodystart="585" bodyend="588"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_range_accrual_leg_1a1257ad73e3bd3fd7bc8dfc1c7c319180" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_range_accrual_leg" kindref="compound">RangeAccrualLeg</ref> &amp;</type>
        <definition>RangeAccrualLeg &amp; QuantLib::RangeAccrualLeg::withLowerTriggers</definition>
        <argsstring>(const std::vector&lt; Rate &gt; &amp;triggers)</argsstring>
        <name>withLowerTriggers</name>
        <qualifiedname>QuantLib::RangeAccrualLeg::withLowerTriggers</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
          <declname>triggers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="211" column="25" bodyfile="ql/cashflows/rangeaccrual.cpp" bodystart="590" bodyend="594"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_range_accrual_leg_1afa66c80b1c945fb35c2693f58d2e28d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_range_accrual_leg" kindref="compound">RangeAccrualLeg</ref> &amp;</type>
        <definition>RangeAccrualLeg &amp; QuantLib::RangeAccrualLeg::withUpperTriggers</definition>
        <argsstring>(Rate trigger)</argsstring>
        <name>withUpperTriggers</name>
        <qualifiedname>QuantLib::RangeAccrualLeg::withUpperTriggers</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>trigger</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="212" column="25" bodyfile="ql/cashflows/rangeaccrual.cpp" bodystart="596" bodyend="599"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_range_accrual_leg_1a97bd0c9563be57bcc9bcc59440153f1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_range_accrual_leg" kindref="compound">RangeAccrualLeg</ref> &amp;</type>
        <definition>RangeAccrualLeg &amp; QuantLib::RangeAccrualLeg::withUpperTriggers</definition>
        <argsstring>(const std::vector&lt; Rate &gt; &amp;triggers)</argsstring>
        <name>withUpperTriggers</name>
        <qualifiedname>QuantLib::RangeAccrualLeg::withUpperTriggers</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
          <declname>triggers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="213" column="25" bodyfile="ql/cashflows/rangeaccrual.cpp" bodystart="601" bodyend="605"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_range_accrual_leg_1a4488d56cf77a6317626d399ff5b7ff22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_range_accrual_leg" kindref="compound">RangeAccrualLeg</ref> &amp;</type>
        <definition>RangeAccrualLeg &amp; QuantLib::RangeAccrualLeg::withObservationTenor</definition>
        <argsstring>(const Period &amp;)</argsstring>
        <name>withObservationTenor</name>
        <qualifiedname>QuantLib::RangeAccrualLeg::withObservationTenor</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <defname>tenor</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="214" column="25" bodyfile="ql/cashflows/rangeaccrual.cpp" bodystart="607" bodyend="611"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_range_accrual_leg_1a66b0a844a0b4c06e19c212ad156c0062" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_range_accrual_leg" kindref="compound">RangeAccrualLeg</ref> &amp;</type>
        <definition>RangeAccrualLeg &amp; QuantLib::RangeAccrualLeg::withObservationConvention</definition>
        <argsstring>(BusinessDayConvention)</argsstring>
        <name>withObservationConvention</name>
        <qualifiedname>QuantLib::RangeAccrualLeg::withObservationConvention</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
          <defname>convention</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="215" column="25" bodyfile="ql/cashflows/rangeaccrual.cpp" bodystart="613" bodyend="617"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_range_accrual_leg_1ae3c349ad0e75a2020390dff8b6946860" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::RangeAccrualLeg::operator Leg</definition>
        <argsstring>() const</argsstring>
        <name>operator Leg</name>
        <qualifiedname>QuantLib::RangeAccrualLeg::operator Leg</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/rangeaccrual.hpp" line="216" column="9" bodyfile="ql/cashflows/rangeaccrual.cpp" bodystart="619" bodyend="696"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>helper class building a sequence of range-accrual floating-rate coupons </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/cashflows/rangeaccrual.hpp" line="197" column="5" bodyfile="ql/cashflows/rangeaccrual.hpp" bodystart="197" bodyend="229"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_range_accrual_leg_1aa3e8558d498bc779f78c87e682a1bb84" prot="private" virt="non-virtual"><scope>QuantLib::RangeAccrualLeg</scope><name>fixingDays_</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_leg_1a5edd823394185163fc86362de6480306" prot="private" virt="non-virtual"><scope>QuantLib::RangeAccrualLeg</scope><name>gearings_</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_leg_1ac2f84762be15da3827a7e47c62452375" prot="private" virt="non-virtual"><scope>QuantLib::RangeAccrualLeg</scope><name>index_</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_leg_1a205a8950b6c5fa61ed1eb44942e246a3" prot="private" virt="non-virtual"><scope>QuantLib::RangeAccrualLeg</scope><name>lowerTriggers_</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_leg_1a8f7a97f257c7b50abaf025a22bbef382" prot="private" virt="non-virtual"><scope>QuantLib::RangeAccrualLeg</scope><name>notionals_</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_leg_1a439a911544598126c6046e573dafddc0" prot="private" virt="non-virtual"><scope>QuantLib::RangeAccrualLeg</scope><name>observationConvention_</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_leg_1a0116051f23baeeb86809d21c373a1767" prot="private" virt="non-virtual"><scope>QuantLib::RangeAccrualLeg</scope><name>observationTenor_</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_leg_1ae3c349ad0e75a2020390dff8b6946860" prot="public" virt="non-virtual"><scope>QuantLib::RangeAccrualLeg</scope><name>operator Leg</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_leg_1acc57fd3ae40ca89a1568f22e7e3b96dd" prot="private" virt="non-virtual"><scope>QuantLib::RangeAccrualLeg</scope><name>paymentAdjustment_</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_leg_1ade2e8e894fce81c0fbabacf86f4be61d" prot="private" virt="non-virtual"><scope>QuantLib::RangeAccrualLeg</scope><name>paymentDayCounter_</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_leg_1a913a8558b9a55b5a107c566880e74539" prot="public" virt="non-virtual"><scope>QuantLib::RangeAccrualLeg</scope><name>RangeAccrualLeg</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_leg_1a08bb120685671f0a7102c7dfba914dff" prot="private" virt="non-virtual"><scope>QuantLib::RangeAccrualLeg</scope><name>schedule_</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_leg_1aafe143b9f13ce69629fdefb88cc8ecc1" prot="private" virt="non-virtual"><scope>QuantLib::RangeAccrualLeg</scope><name>spreads_</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_leg_1a5c9f21d40777aec3735d37643164d725" prot="private" virt="non-virtual"><scope>QuantLib::RangeAccrualLeg</scope><name>upperTriggers_</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_leg_1a73652cf33ada76f857689a4ff48f8c35" prot="public" virt="non-virtual"><scope>QuantLib::RangeAccrualLeg</scope><name>withFixingDays</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_leg_1a4bb3f5bf81a8ccac27478f55c23c39ef" prot="public" virt="non-virtual"><scope>QuantLib::RangeAccrualLeg</scope><name>withFixingDays</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_leg_1a8bfd610a7aaa4a6498c3d6f032019ec1" prot="public" virt="non-virtual"><scope>QuantLib::RangeAccrualLeg</scope><name>withGearings</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_leg_1a47559618401011b6269a77363a178626" prot="public" virt="non-virtual"><scope>QuantLib::RangeAccrualLeg</scope><name>withGearings</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_leg_1adcf7a4303f4692b24d1ce9b1003b7fcf" prot="public" virt="non-virtual"><scope>QuantLib::RangeAccrualLeg</scope><name>withLowerTriggers</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_leg_1a1257ad73e3bd3fd7bc8dfc1c7c319180" prot="public" virt="non-virtual"><scope>QuantLib::RangeAccrualLeg</scope><name>withLowerTriggers</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_leg_1ab83a669c940792c06b8489bf9310a67e" prot="public" virt="non-virtual"><scope>QuantLib::RangeAccrualLeg</scope><name>withNotionals</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_leg_1a3e59c3b2e69d87c03020c90aaaf56e6b" prot="public" virt="non-virtual"><scope>QuantLib::RangeAccrualLeg</scope><name>withNotionals</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_leg_1a66b0a844a0b4c06e19c212ad156c0062" prot="public" virt="non-virtual"><scope>QuantLib::RangeAccrualLeg</scope><name>withObservationConvention</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_leg_1a4488d56cf77a6317626d399ff5b7ff22" prot="public" virt="non-virtual"><scope>QuantLib::RangeAccrualLeg</scope><name>withObservationTenor</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_leg_1a832e20ec79a7c8d5fb608a4eb54143dc" prot="public" virt="non-virtual"><scope>QuantLib::RangeAccrualLeg</scope><name>withPaymentAdjustment</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_leg_1ad7728fa82ada11cea87b95a793770507" prot="public" virt="non-virtual"><scope>QuantLib::RangeAccrualLeg</scope><name>withPaymentDayCounter</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_leg_1a6f39630a72fc7772ae1e698431436832" prot="public" virt="non-virtual"><scope>QuantLib::RangeAccrualLeg</scope><name>withSpreads</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_leg_1a1375577e33ac93a8ce64fb00ca7b7b35" prot="public" virt="non-virtual"><scope>QuantLib::RangeAccrualLeg</scope><name>withSpreads</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_leg_1afa66c80b1c945fb35c2693f58d2e28d5" prot="public" virt="non-virtual"><scope>QuantLib::RangeAccrualLeg</scope><name>withUpperTriggers</name></member>
      <member refid="class_quant_lib_1_1_range_accrual_leg_1a97bd0c9563be57bcc9bcc59440153f1b" prot="public" virt="non-virtual"><scope>QuantLib::RangeAccrualLeg</scope><name>withUpperTriggers</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_date_interval" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::DateInterval</compoundname>
    <derivedcompoundref refid="class_quant_lib_1_1_pricing_period" prot="public" virt="non-virtual">QuantLib::PricingPeriod</derivedcompoundref>
    <includes refid="dateinterval_8hpp" local="no">dateinterval.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_date_interval_1ad00bcea9ea566924c9b77ee583d557ad" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::DateInterval::startDate_</definition>
        <argsstring></argsstring>
        <name>startDate_</name>
        <qualifiedname>QuantLib::DateInterval::startDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/dateinterval.hpp" line="39" column="14" bodyfile="ql/experimental/commodities/dateinterval.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_date_interval_1ad1b56fbda5294ba530482f5e66e790ca" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::DateInterval::endDate_</definition>
        <argsstring></argsstring>
        <name>endDate_</name>
        <qualifiedname>QuantLib::DateInterval::endDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/dateinterval.hpp" line="40" column="14" bodyfile="ql/experimental/commodities/dateinterval.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_quant_lib_1_1_date_interval_1a5cd5758fd8e8eb4a3b68953813be1828" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const DateInterval &amp;di)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>QuantLib::DateInterval::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date_interval" kindref="compound">DateInterval</ref> &amp;</type>
          <declname>di</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/dateinterval.hpp" line="36" column="16" bodyfile="ql/experimental/commodities/dateinterval.cpp" bodystart="24" bodyend="28"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_date_interval_1a43d7b8efe70352b9e9c77985f603fbf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::DateInterval::DateInterval</definition>
        <argsstring>()=default</argsstring>
        <name>DateInterval</name>
        <qualifiedname>QuantLib::DateInterval::DateInterval</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/dateinterval.hpp" line="42" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_date_interval_1a938160c0b3b9dc9654018886eacb48e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::DateInterval::DateInterval</definition>
        <argsstring>(const Date &amp;startDate, const Date &amp;endDate)</argsstring>
        <name>DateInterval</name>
        <qualifiedname>QuantLib::DateInterval::DateInterval</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>startDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>endDate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/dateinterval.hpp" line="43" column="9" bodyfile="ql/experimental/commodities/dateinterval.hpp" bodystart="43" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_date_interval_1ae2b7213dbd05f689b2d4208e129554a2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
        <definition>const Date &amp; QuantLib::DateInterval::startDate</definition>
        <argsstring>() const</argsstring>
        <name>startDate</name>
        <qualifiedname>QuantLib::DateInterval::startDate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/dateinterval.hpp" line="48" column="20" bodyfile="ql/experimental/commodities/dateinterval.hpp" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_date_interval_1ab91c58f2102d37057956f06bfa75fd34" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
        <definition>const Date &amp; QuantLib::DateInterval::endDate</definition>
        <argsstring>() const</argsstring>
        <name>endDate</name>
        <qualifiedname>QuantLib::DateInterval::endDate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/dateinterval.hpp" line="49" column="20" bodyfile="ql/experimental/commodities/dateinterval.hpp" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_date_interval_1aaf898835fc3f1a6233bc3e7f664b44b8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::DateInterval::isDateBetween</definition>
        <argsstring>(Date date, bool includeFirst=true, bool includeLast=true) const</argsstring>
        <name>isDateBetween</name>
        <qualifiedname>QuantLib::DateInterval::isDateBetween</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
          <declname>date</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>includeFirst</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>includeLast</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/dateinterval.hpp" line="51" column="14" bodyfile="ql/experimental/commodities/dateinterval.hpp" bodystart="51" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_date_interval_1acd3b3a454b2742ebf90c1aa378a13b57" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_date_interval" kindref="compound">DateInterval</ref></type>
        <definition>DateInterval QuantLib::DateInterval::intersection</definition>
        <argsstring>(const DateInterval &amp;di) const</argsstring>
        <name>intersection</name>
        <qualifiedname>QuantLib::DateInterval::intersection</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date_interval" kindref="compound">DateInterval</ref> &amp;</type>
          <declname>di</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/dateinterval.hpp" line="65" column="22" bodyfile="ql/experimental/commodities/dateinterval.hpp" bodystart="65" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_date_interval_1a7836f97c12f5d732aba2b57c2e8edf36" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::DateInterval::operator==</definition>
        <argsstring>(const DateInterval &amp;rhs) const</argsstring>
        <name>operator==</name>
        <qualifiedname>QuantLib::DateInterval::operator==</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date_interval" kindref="compound">DateInterval</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/dateinterval.hpp" line="72" column="14" bodyfile="ql/experimental/commodities/dateinterval.hpp" bodystart="72" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_date_interval_1a7e8325132569abe33e077f63d7faf320" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::DateInterval::operator!=</definition>
        <argsstring>(const DateInterval &amp;rhs) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>QuantLib::DateInterval::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date_interval" kindref="compound">DateInterval</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/dateinterval.hpp" line="76" column="14" bodyfile="ql/experimental/commodities/dateinterval.hpp" bodystart="76" bodyend="78"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> interval described by a number of a given time unit. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::DateInterval</label>
        <link refid="class_quant_lib_1_1_date_interval"/>
      </node>
      <node id="2">
        <label>QuantLib::PricingPeriod</label>
        <link refid="class_quant_lib_1_1_pricing_period"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="ql/experimental/commodities/dateinterval.hpp" line="35" column="5" bodyfile="ql/experimental/commodities/dateinterval.hpp" bodystart="35" bodyend="79"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_date_interval_1a43d7b8efe70352b9e9c77985f603fbf9" prot="public" virt="non-virtual"><scope>QuantLib::DateInterval</scope><name>DateInterval</name></member>
      <member refid="class_quant_lib_1_1_date_interval_1a938160c0b3b9dc9654018886eacb48e9" prot="public" virt="non-virtual"><scope>QuantLib::DateInterval</scope><name>DateInterval</name></member>
      <member refid="class_quant_lib_1_1_date_interval_1ab91c58f2102d37057956f06bfa75fd34" prot="public" virt="non-virtual"><scope>QuantLib::DateInterval</scope><name>endDate</name></member>
      <member refid="class_quant_lib_1_1_date_interval_1ad1b56fbda5294ba530482f5e66e790ca" prot="private" virt="non-virtual"><scope>QuantLib::DateInterval</scope><name>endDate_</name></member>
      <member refid="class_quant_lib_1_1_date_interval_1acd3b3a454b2742ebf90c1aa378a13b57" prot="public" virt="non-virtual"><scope>QuantLib::DateInterval</scope><name>intersection</name></member>
      <member refid="class_quant_lib_1_1_date_interval_1aaf898835fc3f1a6233bc3e7f664b44b8" prot="public" virt="non-virtual"><scope>QuantLib::DateInterval</scope><name>isDateBetween</name></member>
      <member refid="class_quant_lib_1_1_date_interval_1a7e8325132569abe33e077f63d7faf320" prot="public" virt="non-virtual"><scope>QuantLib::DateInterval</scope><name>operator!=</name></member>
      <member refid="class_quant_lib_1_1_date_interval_1a5cd5758fd8e8eb4a3b68953813be1828" prot="private" virt="non-virtual"><scope>QuantLib::DateInterval</scope><name>operator&lt;&lt;</name></member>
      <member refid="class_quant_lib_1_1_date_interval_1a7836f97c12f5d732aba2b57c2e8edf36" prot="public" virt="non-virtual"><scope>QuantLib::DateInterval</scope><name>operator==</name></member>
      <member refid="class_quant_lib_1_1_date_interval_1ae2b7213dbd05f689b2d4208e129554a2" prot="public" virt="non-virtual"><scope>QuantLib::DateInterval</scope><name>startDate</name></member>
      <member refid="class_quant_lib_1_1_date_interval_1ad00bcea9ea566924c9b77ee583d557ad" prot="private" virt="non-virtual"><scope>QuantLib::DateInterval</scope><name>startDate_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

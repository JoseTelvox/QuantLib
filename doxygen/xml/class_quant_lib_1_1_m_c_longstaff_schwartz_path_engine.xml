<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::MCLongstaffSchwartzPathEngine</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_generic_engine" prot="public" virt="non-virtual">QuantLib::GenericEngine&lt; ArgumentsType, ResultsType &gt;</basecompoundref>
    <basecompoundref refid="class_quant_lib_1_1_mc_simulation" prot="public" virt="non-virtual">QuantLib::McSimulation&lt; MC, RNG, Statistics &gt;</basecompoundref>
    <includes refid="mclongstaffschwartzpathengine_8hpp" local="no">mclongstaffschwartzpathengine.hpp</includes>
    <templateparamlist>
      <param>
        <type>class <ref refid="class_quant_lib_1_1_generic_engine" kindref="compound">GenericEngine</ref></type>
      </param>
      <param>
        <type>template&lt; class &gt; class</type>
        <declname>MC</declname>
        <defname>MC</defname>
      </param>
      <param>
        <type>class RNG</type>
      </param>
      <param>
        <type>class S</type>
        <defval><ref refid="namespace_quant_lib_1ae2e788da35d2b866040a03b96227ee6e" kindref="member">Statistics</ref></defval>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1af4a862ca5688d91540c5ea81e90069c4" prot="public" static="no">
        <type>MC&lt; RNG &gt;::path_type</type>
        <definition>typedef MC&lt;RNG&gt;::path_type QuantLib::MCLongstaffSchwartzPathEngine&lt; GenericEngine, MC, RNG, S &gt;::path_type</definition>
        <argsstring></argsstring>
        <name>path_type</name>
        <qualifiedname>QuantLib::MCLongstaffSchwartzPathEngine::path_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" line="44" column="41" bodyfile="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a57adc412af24db24fe0801c414033a12" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1_mc_simulation" kindref="compound">McSimulation</ref>&lt; MC, RNG, S &gt;::stats_type</type>
        <definition>typedef McSimulation&lt;MC,RNG,S&gt;::stats_type QuantLib::MCLongstaffSchwartzPathEngine&lt; GenericEngine, MC, RNG, S &gt;::stats_type</definition>
        <argsstring></argsstring>
        <name>stats_type</name>
        <qualifiedname>QuantLib::MCLongstaffSchwartzPathEngine::stats_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" line="46" column="13" bodyfile="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a81b83574f2252408fe7c4fe0f88e1259" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1_mc_simulation" kindref="compound">McSimulation</ref>&lt; MC, RNG, S &gt;::path_pricer_type</type>
        <definition>typedef McSimulation&lt;MC,RNG,S&gt;::path_pricer_type QuantLib::MCLongstaffSchwartzPathEngine&lt; GenericEngine, MC, RNG, S &gt;::path_pricer_type</definition>
        <argsstring></argsstring>
        <name>path_pricer_type</name>
        <qualifiedname>QuantLib::MCLongstaffSchwartzPathEngine::path_pricer_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" line="48" column="13" bodyfile="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1add32f89cc7286e81f3c5a0eea6a09f17" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1_mc_simulation" kindref="compound">McSimulation</ref>&lt; MC, RNG, S &gt;::path_generator_type</type>
        <definition>typedef McSimulation&lt;MC,RNG,S&gt;::path_generator_type QuantLib::MCLongstaffSchwartzPathEngine&lt; GenericEngine, MC, RNG, S &gt;::path_generator_type</definition>
        <argsstring></argsstring>
        <name>path_generator_type</name>
        <qualifiedname>QuantLib::MCLongstaffSchwartzPathEngine::path_generator_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" line="50" column="13" bodyfile="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1ad9eea674435102fac844e7f4c115addd" prot="protected" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_stochastic_process" kindref="compound">StochasticProcess</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;StochasticProcess&gt; QuantLib::MCLongstaffSchwartzPathEngine&lt; GenericEngine, MC, RNG, S &gt;::process_</definition>
        <argsstring></argsstring>
        <name>process_</name>
        <qualifiedname>QuantLib::MCLongstaffSchwartzPathEngine::process_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" line="74" column="25" bodyfile="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1aaa89d4250ca7021059b045f952574ac6" prot="protected" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>const Size QuantLib::MCLongstaffSchwartzPathEngine&lt; GenericEngine, MC, RNG, S &gt;::timeSteps_</definition>
        <argsstring></argsstring>
        <name>timeSteps_</name>
        <qualifiedname>QuantLib::MCLongstaffSchwartzPathEngine::timeSteps_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" line="75" column="20" bodyfile="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a1557d73806890fa7e6ed96d87b2c00df" prot="protected" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>const Size QuantLib::MCLongstaffSchwartzPathEngine&lt; GenericEngine, MC, RNG, S &gt;::timeStepsPerYear_</definition>
        <argsstring></argsstring>
        <name>timeStepsPerYear_</name>
        <qualifiedname>QuantLib::MCLongstaffSchwartzPathEngine::timeStepsPerYear_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" line="76" column="20" bodyfile="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1af0e383af04682df8a7f62018d4368f73" prot="protected" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool QuantLib::MCLongstaffSchwartzPathEngine&lt; GenericEngine, MC, RNG, S &gt;::brownianBridge_</definition>
        <argsstring></argsstring>
        <name>brownianBridge_</name>
        <qualifiedname>QuantLib::MCLongstaffSchwartzPathEngine::brownianBridge_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" line="77" column="20" bodyfile="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a806a78253454f233e6e768e83b59ae77" prot="protected" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>const Size QuantLib::MCLongstaffSchwartzPathEngine&lt; GenericEngine, MC, RNG, S &gt;::requiredSamples_</definition>
        <argsstring></argsstring>
        <name>requiredSamples_</name>
        <qualifiedname>QuantLib::MCLongstaffSchwartzPathEngine::requiredSamples_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" line="78" column="20" bodyfile="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a7cc92dde6602ec2d42fcd19b31aaeb68" prot="protected" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::MCLongstaffSchwartzPathEngine&lt; GenericEngine, MC, RNG, S &gt;::requiredTolerance_</definition>
        <argsstring></argsstring>
        <name>requiredTolerance_</name>
        <qualifiedname>QuantLib::MCLongstaffSchwartzPathEngine::requiredTolerance_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" line="79" column="20" bodyfile="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a78e4dc2feb2f86cde49f563dd7655dd0" prot="protected" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>const Size QuantLib::MCLongstaffSchwartzPathEngine&lt; GenericEngine, MC, RNG, S &gt;::maxSamples_</definition>
        <argsstring></argsstring>
        <name>maxSamples_</name>
        <qualifiedname>QuantLib::MCLongstaffSchwartzPathEngine::maxSamples_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" line="80" column="20" bodyfile="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a5c6ff31537f0bab9d1ad46abe90e0bef" prot="protected" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>const Size QuantLib::MCLongstaffSchwartzPathEngine&lt; GenericEngine, MC, RNG, S &gt;::seed_</definition>
        <argsstring></argsstring>
        <name>seed_</name>
        <qualifiedname>QuantLib::MCLongstaffSchwartzPathEngine::seed_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" line="81" column="20" bodyfile="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a138687964c5f2d7988819a7e5f9f96bb" prot="protected" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>const Size QuantLib::MCLongstaffSchwartzPathEngine&lt; GenericEngine, MC, RNG, S &gt;::nCalibrationSamples_</definition>
        <argsstring></argsstring>
        <name>nCalibrationSamples_</name>
        <qualifiedname>QuantLib::MCLongstaffSchwartzPathEngine::nCalibrationSamples_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" line="82" column="20" bodyfile="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a8d5bfbbbaa6a035a01c27ad3b6e40ad9" prot="protected" static="no" mutable="yes">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_longstaff_schwartz_multi_path_pricer" kindref="compound">LongstaffSchwartzMultiPathPricer</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;LongstaffSchwartzMultiPathPricer&gt; QuantLib::MCLongstaffSchwartzPathEngine&lt; GenericEngine, MC, RNG, S &gt;::pathPricer_</definition>
        <argsstring></argsstring>
        <name>pathPricer_</name>
        <qualifiedname>QuantLib::MCLongstaffSchwartzPathEngine::pathPricer_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" line="84" column="33" bodyfile="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a95848b22b0802535415096425ea349b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::MCLongstaffSchwartzPathEngine&lt; GenericEngine, MC, RNG, S &gt;::MCLongstaffSchwartzPathEngine</definition>
        <argsstring>(ext::shared_ptr&lt; StochasticProcess &gt; process, Size timeSteps, Size timeStepsPerYear, bool brownianBridge, bool antitheticVariate, bool controlVariate, Size requiredSamples, Real requiredTolerance, Size maxSamples, BigNatural seed, Size nCalibrationSamples=Null&lt; Size &gt;())</argsstring>
        <name>MCLongstaffSchwartzPathEngine</name>
        <qualifiedname>QuantLib::MCLongstaffSchwartzPathEngine::MCLongstaffSchwartzPathEngine</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_stochastic_process" kindref="compound">StochasticProcess</ref> &gt;</type>
          <declname>process</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>timeSteps</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>timeStepsPerYear</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>brownianBridge</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>antitheticVariate</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>controlVariate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>requiredSamples</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>requiredTolerance</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>maxSamples</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
          <declname>seed</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>nCalibrationSamples</declname>
          <defval><ref refid="class_quant_lib_1_1_null" kindref="compound">Null</ref>&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" line="52" column="9" bodyfile="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" bodystart="88" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a241a9ad80d6410e192ef2a38c757de20" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::MCLongstaffSchwartzPathEngine&lt; GenericEngine, MC, RNG, S &gt;::calculate</definition>
        <argsstring>() const</argsstring>
        <name>calculate</name>
        <qualifiedname>QuantLib::MCLongstaffSchwartzPathEngine::calculate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_pricing_engine_1ad2be11cff80d9792f0cc8231711fcb06">calculate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" line="64" column="14" bodyfile="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" bodystart="135" bodyend="154"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a5db2f20bb1293e89c1533edf624cdf75" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_longstaff_schwartz_multi_path_pricer" kindref="compound">LongstaffSchwartzMultiPathPricer</ref> &gt;</type>
        <definition>virtual ext::shared_ptr&lt; LongstaffSchwartzMultiPathPricer &gt; QuantLib::MCLongstaffSchwartzPathEngine&lt; GenericEngine, MC, RNG, S &gt;::lsmPathPricer</definition>
        <argsstring>() const =0</argsstring>
        <name>lsmPathPricer</name>
        <qualifiedname>QuantLib::MCLongstaffSchwartzPathEngine::lsmPathPricer</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_m_c_american_path_engine_1a29d0dd8e8c24adabf8f4b5578ad7d67d">lsmPathPricer</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" line="68" column="53"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a4cffc89abb9b573a1b7645c4f855702c" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_time_grid" kindref="compound">TimeGrid</ref></type>
        <definition>TimeGrid QuantLib::MCLongstaffSchwartzPathEngine&lt; GenericEngine, MC, RNG, S &gt;::timeGrid</definition>
        <argsstring>() const</argsstring>
        <name>timeGrid</name>
        <qualifiedname>QuantLib::MCLongstaffSchwartzPathEngine::timeGrid</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_mc_simulation_1a5b5c524a5e54a4f91ce6a6d6537e7ee3">timeGrid</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" line="70" column="18" bodyfile="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" bodystart="159" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a3224e3d0f4f5ea7bc84589418a84762b" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_path_pricer" kindref="compound">path_pricer_type</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; typename MCLongstaffSchwartzPathEngine&lt; GenericEngine, MC, RNG, S &gt;::path_pricer_type &gt; QuantLib::MCLongstaffSchwartzPathEngine&lt; GenericEngine, MC, RNG, S &gt;::pathPricer</definition>
        <argsstring>() const</argsstring>
        <name>pathPricer</name>
        <qualifiedname>QuantLib::MCLongstaffSchwartzPathEngine::pathPricer</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_mc_simulation_1a0e142b20adbf77779877d3603f9fa9b5">pathPricer</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" line="71" column="25" bodyfile="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" bodystart="125" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a7a1cedc37d7c9e22ffb11d2b18f599d8" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_multi_path_generator" kindref="compound">path_generator_type</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; typename MCLongstaffSchwartzPathEngine&lt; GenericEngine, MC, RNG, S &gt;::path_generator_type &gt; QuantLib::MCLongstaffSchwartzPathEngine&lt; GenericEngine, MC, RNG, S &gt;::pathGenerator</definition>
        <argsstring>() const</argsstring>
        <name>pathGenerator</name>
        <qualifiedname>QuantLib::MCLongstaffSchwartzPathEngine::pathGenerator</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_mc_simulation_1a9618deed5bf4bdba261c1d68bebc3a6f">pathGenerator</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" line="72" column="25" bodyfile="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" bodystart="180" bodyend="190"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Longstaff-Schwarz Monte Carlo engine for early exercise options. </para>
    </briefdescription>
    <detaileddescription>
<para>References:</para>
<para>Francis Longstaff, Eduardo Schwartz, 2001. Valuing American Options by Simulation: A Simple Least-Squares Approach, The Review of Financial Studies, Volume 14, No. 1, 113-147</para>
<para><xrefsect id="test_1_test000012"><xreftitle>Test</xreftitle><xrefdescription><para>the correctness of the returned value is tested by reproducing results available in web/literature </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::GenericEngine&lt; ArgumentsType, ResultsType &gt;</label>
        <link refid="class_quant_lib_1_1_generic_engine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::MCLongstaffSchwartzPathEngine&lt; GenericEngine, MC, RNG, S &gt;</label>
        <link refid="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::McSimulation&lt; MC, RNG, Statistics &gt;</label>
        <link refid="class_quant_lib_1_1_mc_simulation"/>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="3">
        <label>QuantLib::PricingEngine</label>
        <link refid="class_quant_lib_1_1_pricing_engine"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::GenericEngine&lt; ArgumentsType, ResultsType &gt;</label>
        <link refid="class_quant_lib_1_1_generic_engine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::MCLongstaffSchwartzPathEngine&lt; GenericEngine, MC, RNG, S &gt;</label>
        <link refid="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::McSimulation&lt; MC, RNG, Statistics &gt;</label>
        <link refid="class_quant_lib_1_1_mc_simulation"/>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="3">
        <label>QuantLib::PricingEngine</label>
        <link refid="class_quant_lib_1_1_pricing_engine"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" line="41" column="5" bodyfile="ql/experimental/mcbasket/mclongstaffschwartzpathengine.hpp" bodystart="42" bodyend="85"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_mc_simulation_1a06f6de1952807cb9e689619d3f48450d" prot="protected" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>antitheticVariate_</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1ad2371cdbafa1989afb0e4733b1212c0d" prot="protected" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>arguments_</name></member>
      <member refid="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1af0e383af04682df8a7f62018d4368f73" prot="protected" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>brownianBridge_</name></member>
      <member refid="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a241a9ad80d6410e192ef2a38c757de20" prot="public" virt="virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1af5ccf2e30a050c14f9e30965855b4993" prot="public" virt="non-virtual" ambiguityscope="QuantLib::McSimulation&lt; MC, RNG, Statistics &gt;::"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a81f0b6c250bc8a1ba246faa3b7bbe70f" prot="protected" virt="virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>controlPathGenerator</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1ae3b7f6e12eaf228b5c65f70a721eb729" prot="protected" virt="virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>controlPathPricer</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1ad835a3988a983d55494f911f53b78408" prot="protected" virt="virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>controlPricingEngine</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a0c55429fb2a2d840cd8d358a5973cc40" prot="protected" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>controlVariate_</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a503ac4db5fa01aa75596c6b42d9d5832" prot="protected" virt="virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>controlVariateValue</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1aa74e7e1891852e5c96da544b87af083c" prot="public" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>errorEstimate</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1ad9c6e8dc65ca072d5e6e17640d74db3e" prot="public" virt="virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>getArguments</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1aea8272ef6e5e0ea1cffadfed0454fa88" prot="public" virt="virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>getResults</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a5db2f20bb1293e89c1533edf624cdf75" prot="protected" virt="pure-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>lsmPathPricer</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1ae21c92c6196d56c6a889389268ef2075" prot="protected" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>maxError</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a10d5e5d85cc108ab976899890055e061" prot="protected" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>maxError</name></member>
      <member refid="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a78e4dc2feb2f86cde49f563dd7655dd0" prot="protected" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>maxSamples_</name></member>
      <member refid="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a95848b22b0802535415096425ea349b2" prot="public" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>MCLongstaffSchwartzPathEngine</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1afbdbf4a8ce56b1b6060c49ac91b1f55a" prot="protected" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>mcModel_</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a3242253b8262657e78739463a077c1d6" prot="protected" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>McSimulation</name></member>
      <member refid="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a138687964c5f2d7988819a7e5f9f96bb" prot="protected" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>nCalibrationSamples_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1add32f89cc7286e81f3c5a0eea6a09f17" prot="public" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>path_generator_type</name></member>
      <member refid="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a81b83574f2252408fe7c4fe0f88e1259" prot="public" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>path_pricer_type</name></member>
      <member refid="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1af4a862ca5688d91540c5ea81e90069c4" prot="public" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>path_type</name></member>
      <member refid="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a7a1cedc37d7c9e22ffb11d2b18f599d8" prot="protected" virt="virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>pathGenerator</name></member>
      <member refid="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a3224e3d0f4f5ea7bc84589418a84762b" prot="protected" virt="virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>pathPricer</name></member>
      <member refid="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a8d5bfbbbaa6a035a01c27ad3b6e40ad9" prot="protected" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>pathPricer_</name></member>
      <member refid="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1ad9eea674435102fac844e7f4c115addd" prot="protected" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>process_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a806a78253454f233e6e768e83b59ae77" prot="protected" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>requiredSamples_</name></member>
      <member refid="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a7cc92dde6602ec2d42fcd19b31aaeb68" prot="protected" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>requiredTolerance_</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1a81c5390ba1e713e57ca87d5f841d37f2" prot="public" virt="virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>reset</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a5c793e8d12a221aec4c60f022d34eb81" prot="public" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>result_type</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1a41281f2ea4990dbce90be1f9f2e231f6" prot="protected" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>results_</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1aada0200a7fb38c4bc94bbcb49464d35b" prot="public" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>sampleAccumulator</name></member>
      <member refid="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a5c6ff31537f0bab9d1ad46abe90e0bef" prot="protected" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>seed_</name></member>
      <member refid="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a57adc412af24db24fe0801c414033a12" prot="public" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>stats_type</name></member>
      <member refid="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a4cffc89abb9b573a1b7645c4f855702c" prot="protected" virt="virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>timeGrid</name></member>
      <member refid="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1aaa89d4250ca7021059b045f952574ac6" prot="protected" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>timeSteps_</name></member>
      <member refid="class_quant_lib_1_1_m_c_longstaff_schwartz_path_engine_1a1557d73806890fa7e6ed96d87b2c00df" prot="protected" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>timeStepsPerYear_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1aaf5ef54d9e1abf8b1b50b48804edf3dc" prot="public" virt="virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a1c903a9dd586755f55377b522d99ac16" prot="public" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>value</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a06e9db2fbd3d80e6358e8494f4b6b6ea" prot="public" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>valueWithSamples</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a11624b5e53889858d9189f85e27d653d" prot="public" virt="virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>~McSimulation</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_pricing_engine_1a66b279a54578cd7e60d402e5147eb526" prot="public" virt="non-virtual"><scope>QuantLib::MCLongstaffSchwartzPathEngine</scope><name>~PricingEngine</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

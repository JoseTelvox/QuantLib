<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_basis_incomplete_ordered" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::BasisIncompleteOrdered</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_basis_incomplete_ordered_1a941842baa4eb8038d76e45da576f333a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &gt;</type>
        <definition>std::vector&lt;Array&gt; QuantLib::BasisIncompleteOrdered::currentBasis_</definition>
        <argsstring></argsstring>
        <name>currentBasis_</name>
        <qualifiedname>QuantLib::BasisIncompleteOrdered::currentBasis_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/basisincompleteordered.hpp" line="38" column="21" bodyfile="ql/math/matrixutilities/basisincompleteordered.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_basis_incomplete_ordered_1aa1c8b2a865461c4c9e4b2c468d381724" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::BasisIncompleteOrdered::euclideanDimension_</definition>
        <argsstring></argsstring>
        <name>euclideanDimension_</name>
        <qualifiedname>QuantLib::BasisIncompleteOrdered::euclideanDimension_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/basisincompleteordered.hpp" line="39" column="14" bodyfile="ql/math/matrixutilities/basisincompleteordered.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_basis_incomplete_ordered_1a7dfa5c22656e29f0d993103c3ca0cd83" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::BasisIncompleteOrdered::newVector_</definition>
        <argsstring></argsstring>
        <name>newVector_</name>
        <qualifiedname>QuantLib::BasisIncompleteOrdered::newVector_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/basisincompleteordered.hpp" line="40" column="15" bodyfile="ql/math/matrixutilities/basisincompleteordered.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_basis_incomplete_ordered_1a6abe832e03682f77bd418a0ec50b8491" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::BasisIncompleteOrdered::BasisIncompleteOrdered</definition>
        <argsstring>(Size euclideanDimension)</argsstring>
        <name>BasisIncompleteOrdered</name>
        <qualifiedname>QuantLib::BasisIncompleteOrdered::BasisIncompleteOrdered</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>euclideanDimension</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/basisincompleteordered.hpp" line="31" column="9" bodyfile="ql/math/matrixutilities/basisincompleteordered.cpp" bodystart="25" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_basis_incomplete_ordered_1a1250888f675cea2378a59e31b5a9b6c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::BasisIncompleteOrdered::addVector</definition>
        <argsstring>(const Array &amp;newVector)</argsstring>
        <name>addVector</name>
        <qualifiedname>QuantLib::BasisIncompleteOrdered::addVector</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>newVector</declname>
        </param>
        <briefdescription>
<para>return value indicates if the vector was linearly independent </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/basisincompleteordered.hpp" line="33" column="14" bodyfile="ql/math/matrixutilities/basisincompleteordered.cpp" bodystart="28" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_basis_incomplete_ordered_1ad588b97d260eb380e0a493122eb1b05c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::BasisIncompleteOrdered::basisSize</definition>
        <argsstring>() const</argsstring>
        <name>basisSize</name>
        <qualifiedname>QuantLib::BasisIncompleteOrdered::basisSize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/basisincompleteordered.hpp" line="34" column="14" bodyfile="ql/math/matrixutilities/basisincompleteordered.cpp" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_basis_incomplete_ordered_1a2fcaeb5c35cc969531228a37c722779a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::BasisIncompleteOrdered::euclideanDimension</definition>
        <argsstring>() const</argsstring>
        <name>euclideanDimension</name>
        <qualifiedname>QuantLib::BasisIncompleteOrdered::euclideanDimension</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/basisincompleteordered.hpp" line="35" column="14" bodyfile="ql/math/matrixutilities/basisincompleteordered.cpp" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_basis_incomplete_ordered_1a3aa7e568c6244bcd245c0b305a1ca9c0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::BasisIncompleteOrdered::getBasisAsRowsInMatrix</definition>
        <argsstring>() const</argsstring>
        <name>getBasisAsRowsInMatrix</name>
        <qualifiedname>QuantLib::BasisIncompleteOrdered::getBasisAsRowsInMatrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/basisincompleteordered.hpp" line="36" column="16" bodyfile="ql/math/matrixutilities/basisincompleteordered.cpp" bodystart="71" bodyend="78"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/math/matrixutilities/basisincompleteordered.hpp" line="29" column="5" bodyfile="ql/math/matrixutilities/basisincompleteordered.hpp" bodystart="29" bodyend="41"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_basis_incomplete_ordered_1a1250888f675cea2378a59e31b5a9b6c1" prot="public" virt="non-virtual"><scope>QuantLib::BasisIncompleteOrdered</scope><name>addVector</name></member>
      <member refid="class_quant_lib_1_1_basis_incomplete_ordered_1a6abe832e03682f77bd418a0ec50b8491" prot="public" virt="non-virtual"><scope>QuantLib::BasisIncompleteOrdered</scope><name>BasisIncompleteOrdered</name></member>
      <member refid="class_quant_lib_1_1_basis_incomplete_ordered_1ad588b97d260eb380e0a493122eb1b05c" prot="public" virt="non-virtual"><scope>QuantLib::BasisIncompleteOrdered</scope><name>basisSize</name></member>
      <member refid="class_quant_lib_1_1_basis_incomplete_ordered_1a941842baa4eb8038d76e45da576f333a" prot="private" virt="non-virtual"><scope>QuantLib::BasisIncompleteOrdered</scope><name>currentBasis_</name></member>
      <member refid="class_quant_lib_1_1_basis_incomplete_ordered_1a2fcaeb5c35cc969531228a37c722779a" prot="public" virt="non-virtual"><scope>QuantLib::BasisIncompleteOrdered</scope><name>euclideanDimension</name></member>
      <member refid="class_quant_lib_1_1_basis_incomplete_ordered_1aa1c8b2a865461c4c9e4b2c468d381724" prot="private" virt="non-virtual"><scope>QuantLib::BasisIncompleteOrdered</scope><name>euclideanDimension_</name></member>
      <member refid="class_quant_lib_1_1_basis_incomplete_ordered_1a3aa7e568c6244bcd245c0b305a1ca9c0" prot="public" virt="non-virtual"><scope>QuantLib::BasisIncompleteOrdered</scope><name>getBasisAsRowsInMatrix</name></member>
      <member refid="class_quant_lib_1_1_basis_incomplete_ordered_1a7dfa5c22656e29f0d993103c3ca0cd83" prot="private" virt="non-virtual"><scope>QuantLib::BasisIncompleteOrdered</scope><name>newVector_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface" prot="public" virt="non-virtual">QuantLib::YoYCapFloorTermPriceSurface</basecompoundref>
    <innerclass refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1_1_objective_function" prot="protected">QuantLib::InterpolatedYoYCapFloorTermPriceSurface::ObjectiveFunction</innerclass>
    <templateparamlist>
      <param>
        <type>class Interpolator2D</type>
      </param>
      <param>
        <type>class Interpolator1D</type>
      </param>
    </templateparamlist>
    <sectiondef kind="user-defined">
      <header>LazyObject interface</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1a9d8ed1f4e6c12a9e8d13cbfb20522d24" prot="protected" static="no" mutable="yes">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>std::vector&lt;Rate&gt; QuantLib::InterpolatedYoYCapFloorTermPriceSurface&lt; Interpolator2D, Interpolator1D &gt;::cStrikesB_</definition>
        <argsstring></argsstring>
        <name>cStrikesB_</name>
        <qualifiedname>QuantLib::InterpolatedYoYCapFloorTermPriceSurface::cStrikesB_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="263" column="29" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1abeeab6118953266a6adb92d7f7207ae5" prot="protected" static="no" mutable="yes">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>std::vector&lt;Rate&gt; QuantLib::InterpolatedYoYCapFloorTermPriceSurface&lt; Interpolator2D, Interpolator1D &gt;::fStrikesB_</definition>
        <argsstring></argsstring>
        <name>fStrikesB_</name>
        <qualifiedname>QuantLib::InterpolatedYoYCapFloorTermPriceSurface::fStrikesB_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="264" column="29" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="264" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1a8154be9d49bc00b8e48b0bac6e57e428" prot="protected" static="no" mutable="yes">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::InterpolatedYoYCapFloorTermPriceSurface&lt; Interpolator2D, Interpolator1D &gt;::cPriceB_</definition>
        <argsstring></argsstring>
        <name>cPriceB_</name>
        <qualifiedname>QuantLib::InterpolatedYoYCapFloorTermPriceSurface::cPriceB_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="265" column="24" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="265" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1aa46d471ea380986a0767547cbfa96c90" prot="protected" static="no" mutable="yes">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::InterpolatedYoYCapFloorTermPriceSurface&lt; Interpolator2D, Interpolator1D &gt;::fPriceB_</definition>
        <argsstring></argsstring>
        <name>fPriceB_</name>
        <qualifiedname>QuantLib::InterpolatedYoYCapFloorTermPriceSurface::fPriceB_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="266" column="24" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1a187f839346bf2102ae35668816c6ff2f" prot="protected" static="no" mutable="yes">
        <type><ref refid="class_quant_lib_1_1_interpolation2_d" kindref="compound">Interpolation2D</ref></type>
        <definition>Interpolation2D QuantLib::InterpolatedYoYCapFloorTermPriceSurface&lt; Interpolator2D, Interpolator1D &gt;::capPrice_</definition>
        <argsstring></argsstring>
        <name>capPrice_</name>
        <qualifiedname>QuantLib::InterpolatedYoYCapFloorTermPriceSurface::capPrice_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="267" column="33" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1a187dc7d4ff72fbb4bf97189a9a7e1fc6" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_interpolation2_d" kindref="compound">Interpolation2D</ref></type>
        <definition>Interpolation2D QuantLib::InterpolatedYoYCapFloorTermPriceSurface&lt; Interpolator2D, Interpolator1D &gt;::floorPrice_</definition>
        <argsstring></argsstring>
        <name>floorPrice_</name>
        <qualifiedname>QuantLib::InterpolatedYoYCapFloorTermPriceSurface::floorPrice_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="267" column="43" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="267" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1a9e47053e494cee7720812e7db2933c32" prot="protected" static="no" mutable="yes">
        <type><ref refid="class_quant_lib_1_1_interpolation2_d" kindref="compound">Interpolation2D</ref></type>
        <definition>Interpolation2D QuantLib::InterpolatedYoYCapFloorTermPriceSurface&lt; Interpolator2D, Interpolator1D &gt;::floorPrice2_</definition>
        <argsstring></argsstring>
        <name>floorPrice2_</name>
        <qualifiedname>QuantLib::InterpolatedYoYCapFloorTermPriceSurface::floorPrice2_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="268" column="33" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1aafbd6da3be5d41b63c385ffdb4b4680d" prot="protected" static="no" mutable="yes">
        <type>Interpolator2D</type>
        <definition>Interpolator2D QuantLib::InterpolatedYoYCapFloorTermPriceSurface&lt; Interpolator2D, Interpolator1D &gt;::interpolator2d_</definition>
        <argsstring></argsstring>
        <name>interpolator2d_</name>
        <qualifiedname>QuantLib::InterpolatedYoYCapFloorTermPriceSurface::interpolator2d_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="269" column="32" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="269" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1ab3bd59b56e4f3da093c9c345653d888a" prot="protected" static="no" mutable="yes">
        <type><ref refid="class_quant_lib_1_1_interpolation" kindref="compound">Interpolation</ref></type>
        <definition>Interpolation QuantLib::InterpolatedYoYCapFloorTermPriceSurface&lt; Interpolator2D, Interpolator1D &gt;::atmYoYSwapRateCurve_</definition>
        <argsstring></argsstring>
        <name>atmYoYSwapRateCurve_</name>
        <qualifiedname>QuantLib::InterpolatedYoYCapFloorTermPriceSurface::atmYoYSwapRateCurve_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="270" column="31" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1a065a865c55d01343ce6d8ce05f725c99" prot="protected" static="no" mutable="yes">
        <type>Interpolator1D</type>
        <definition>Interpolator1D QuantLib::InterpolatedYoYCapFloorTermPriceSurface&lt; Interpolator2D, Interpolator1D &gt;::interpolator1d_</definition>
        <argsstring></argsstring>
        <name>interpolator1d_</name>
        <qualifiedname>QuantLib::InterpolatedYoYCapFloorTermPriceSurface::interpolator1d_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="271" column="32" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1a5927904e5e2745ee70e7a8027df8a11b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::InterpolatedYoYCapFloorTermPriceSurface&lt; I2D, I1D &gt;::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <qualifiedname>QuantLib::InterpolatedYoYCapFloorTermPriceSurface::update</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_observer_1a07905c55dca858470fcf4a1aea0005aa">update</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must be implemented in derived classes. An instance of Observer does not call this method directly: instead, it will be called by the observables the instance registered with when they need to notify any changes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="243" column="14" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="347" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1ae4182a81d33f73f9b1f3c44609e99ade" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::InterpolatedYoYCapFloorTermPriceSurface&lt; I2D, I1D &gt;::performCalculations</definition>
        <argsstring>() const</argsstring>
        <name>performCalculations</name>
        <qualifiedname>QuantLib::InterpolatedYoYCapFloorTermPriceSurface::performCalculations</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="244" column="14" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="354" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1aecc9166fec0f1482b1ed58bd40718060" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::InterpolatedYoYCapFloorTermPriceSurface&lt; I2D, I1D &gt;::intersect</definition>
        <argsstring>() const</argsstring>
        <name>intersect</name>
        <qualifiedname>QuantLib::InterpolatedYoYCapFloorTermPriceSurface::intersect</qualifiedname>
        <briefdescription>
<para>intersection of cap and floor price surfaces at given strikes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="249" column="14" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="410" bodyend="582"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1a407472911479fc8a715973144cb870cd" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::InterpolatedYoYCapFloorTermPriceSurface&lt; I2D, I1D &gt;::calculateYoYTermStructure</definition>
        <argsstring>() const</argsstring>
        <name>calculateYoYTermStructure</name>
        <qualifiedname>QuantLib::InterpolatedYoYCapFloorTermPriceSurface::calculateYoYTermStructure</qualifiedname>
        <briefdescription>
<para>mess of making it, i.e. create instruments from quotes and bootstrap </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="260" column="14" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="587" bodyend="634"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>YoYCapFloorTermPriceSurface interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1aee5f4e6c8d7b8e8a776e00292dbb3953" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::pair&lt; std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;, std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &gt;</type>
        <definition>std::pair&lt; std::vector&lt; Time &gt;, std::vector&lt; Rate &gt; &gt; QuantLib::InterpolatedYoYCapFloorTermPriceSurface&lt; Interpolator2D, Interpolator1D &gt;::atmYoYSwapTimeRates</definition>
        <argsstring>() const override</argsstring>
        <name>atmYoYSwapTimeRates</name>
        <qualifiedname>QuantLib::InterpolatedYoYCapFloorTermPriceSurface::atmYoYSwapTimeRates</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1aef310f4ec69b1364c68501333ea1c6ee">atmYoYSwapTimeRates</reimplements>
        <briefdescription>
<para>atm yoy swaps from put-call parity on cap/floor data </para>
        </briefdescription>
        <detaileddescription>
<para>uses interpolation (on surface price data), yearly maturities. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="217" column="19" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="217" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1ae20d2a1bd7e443f806852ec02c598091" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::pair&lt; std::vector&lt; <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &gt;, std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &gt;</type>
        <definition>std::pair&lt; std::vector&lt; Date &gt;, std::vector&lt; Rate &gt; &gt; QuantLib::InterpolatedYoYCapFloorTermPriceSurface&lt; Interpolator2D, Interpolator1D &gt;::atmYoYSwapDateRates</definition>
        <argsstring>() const override</argsstring>
        <name>atmYoYSwapDateRates</name>
        <qualifiedname>QuantLib::InterpolatedYoYCapFloorTermPriceSurface::atmYoYSwapDateRates</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ab78adaace10117aea3aeab530de83ad1">atmYoYSwapDateRates</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="220" column="19" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="220" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1aff7ce46d135d3cb48ed9a7bd0239ac26" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_yo_y_inflation_term_structure" kindref="compound">YoYInflationTermStructure</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; YoYInflationTermStructure &gt; QuantLib::InterpolatedYoYCapFloorTermPriceSurface&lt; Interpolator2D, Interpolator1D &gt;::YoYTS</definition>
        <argsstring>() const override</argsstring>
        <name>YoYTS</name>
        <qualifiedname>QuantLib::InterpolatedYoYCapFloorTermPriceSurface::YoYTS</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1aa06be0ebdaaaed36b7cf1e2297800cda">YoYTS</reimplements>
        <briefdescription>
<para>derived from yoy swap rates </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="223" column="25" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="223" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1a17d4abd943a6fd5c768f4742907bd27d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::InterpolatedYoYCapFloorTermPriceSurface&lt; I2D, I1D &gt;::price</definition>
        <argsstring>(const Date &amp;d, Rate k) const override</argsstring>
        <name>price</name>
        <qualifiedname>QuantLib::InterpolatedYoYCapFloorTermPriceSurface::price</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a687ac3182f92bb03ba047b898efa072f">price</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="224" column="14" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="377" bodyend="380"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1a3edef885afa6d40291e3a48606880926" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Rate QuantLib::InterpolatedYoYCapFloorTermPriceSurface&lt; I2D, I1D &gt;::floorPrice</definition>
        <argsstring>(const Date &amp;d, Rate k) const override</argsstring>
        <name>floorPrice</name>
        <qualifiedname>QuantLib::InterpolatedYoYCapFloorTermPriceSurface::floorPrice</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ab736f3f43b63251307b2f26d4b86e878">floorPrice</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="225" column="14" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="393" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1a6207c7f642215c684484b331a5021e79" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Rate QuantLib::InterpolatedYoYCapFloorTermPriceSurface&lt; I2D, I1D &gt;::capPrice</definition>
        <argsstring>(const Date &amp;d, Rate k) const override</argsstring>
        <name>capPrice</name>
        <qualifiedname>QuantLib::InterpolatedYoYCapFloorTermPriceSurface::capPrice</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a98f5274bc79bb3821fd689c66e869e11">capPrice</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="226" column="14" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="385" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1adc8f62fb7e797c81cc84e0dc534bf30e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::InterpolatedYoYCapFloorTermPriceSurface&lt; Interpolator2D, Interpolator1D &gt;::atmYoYSwapRate</definition>
        <argsstring>(const Date &amp;d, bool extrapolate=true) const override</argsstring>
        <name>atmYoYSwapRate</name>
        <qualifiedname>QuantLib::InterpolatedYoYCapFloorTermPriceSurface::atmYoYSwapRate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a8fe922da0599715ad2f359931074c06b">atmYoYSwapRate</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="227" column="14" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="227" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1ad5700e36bc90a2fbe970bacf9982af10" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::InterpolatedYoYCapFloorTermPriceSurface&lt; Interpolator2D, Interpolator1D &gt;::atmYoYRate</definition>
        <argsstring>(const Date &amp;d, const Period &amp;obsLag=Period(-1, Days), bool extrapolate=true) const override</argsstring>
        <name>atmYoYRate</name>
        <qualifiedname>QuantLib::InterpolatedYoYCapFloorTermPriceSurface::atmYoYRate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a4c9750ec74d53ffc4aef9ed035f50725">atmYoYRate</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>obsLag</declname>
          <defval><ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref>(-1, Days)</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="230" column="14" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="230" bodyend="238"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1ac8c9d32ae54028eb7a7db818cf201840" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::InterpolatedYoYCapFloorTermPriceSurface&lt; Interpolator2D, Interpolator1D &gt;::InterpolatedYoYCapFloorTermPriceSurface</definition>
        <argsstring>(Natural fixingDays, const Period &amp;yyLag, const ext::shared_ptr&lt; YoYInflationIndex &gt; &amp;yii, CPI::InterpolationType interpolation, const Handle&lt; YieldTermStructure &gt; &amp;nominal, const DayCounter &amp;dc, const Calendar &amp;cal, const BusinessDayConvention &amp;bdc, const std::vector&lt; Rate &gt; &amp;cStrikes, const std::vector&lt; Rate &gt; &amp;fStrikes, const std::vector&lt; Period &gt; &amp;cfMaturities, const Matrix &amp;cPrice, const Matrix &amp;fPrice, const Interpolator2D &amp;interpolator2d=Interpolator2D(), const Interpolator1D &amp;interpolator1d=Interpolator1D())</argsstring>
        <name>InterpolatedYoYCapFloorTermPriceSurface</name>
        <qualifiedname>QuantLib::InterpolatedYoYCapFloorTermPriceSurface::InterpolatedYoYCapFloorTermPriceSurface</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>fixingDays</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>yyLag</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_yo_y_inflation_index" kindref="compound">YoYInflationIndex</ref> &gt; &amp;</type>
          <declname>yii</declname>
        </param>
        <param>
          <type><ref refid="struct_quant_lib_1_1_c_p_i_1adaf018681fd1d9478c984348c82c9013" kindref="member">CPI::InterpolationType</ref></type>
          <declname>interpolation</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>nominal</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>cal</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref> &amp;</type>
          <declname>bdc</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
          <declname>cStrikes</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
          <declname>fStrikes</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &gt; &amp;</type>
          <declname>cfMaturities</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>cPrice</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>fPrice</declname>
        </param>
        <param>
          <type>const Interpolator2D &amp;</type>
          <declname>interpolator2d</declname>
          <defval>Interpolator2D()</defval>
        </param>
        <param>
          <type>const Interpolator1D &amp;</type>
          <declname>interpolator1d</declname>
          <defval>Interpolator1D()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="170" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1a9b73e054e6a5038ea609057fdb886897" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::InterpolatedYoYCapFloorTermPriceSurface&lt; Interpolator2D, Interpolator1D &gt;::InterpolatedYoYCapFloorTermPriceSurface</definition>
        <argsstring>(Natural fixingDays, const Period &amp;yyLag, const ext::shared_ptr&lt; YoYInflationIndex &gt; &amp;yii, Rate baseRate, const Handle&lt; YieldTermStructure &gt; &amp;nominal, const DayCounter &amp;dc, const Calendar &amp;cal, const BusinessDayConvention &amp;bdc, const std::vector&lt; Rate &gt; &amp;cStrikes, const std::vector&lt; Rate &gt; &amp;fStrikes, const std::vector&lt; Period &gt; &amp;cfMaturities, const Matrix &amp;cPrice, const Matrix &amp;fPrice, const Interpolator2D &amp;interpolator2d=Interpolator2D(), const Interpolator1D &amp;interpolator1d=Interpolator1D())</argsstring>
        <name>InterpolatedYoYCapFloorTermPriceSurface</name>
        <qualifiedname>QuantLib::InterpolatedYoYCapFloorTermPriceSurface::InterpolatedYoYCapFloorTermPriceSurface</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>fixingDays</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>yyLag</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_yo_y_inflation_index" kindref="compound">YoYInflationIndex</ref> &gt; &amp;</type>
          <declname>yii</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>baseRate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>nominal</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>cal</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref> &amp;</type>
          <declname>bdc</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
          <declname>cStrikes</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
          <declname>fStrikes</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &gt; &amp;</type>
          <declname>cfMaturities</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>cPrice</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>fPrice</declname>
        </param>
        <param>
          <type>const Interpolator2D &amp;</type>
          <declname>interpolator2d</declname>
          <defval>Interpolator2D()</defval>
        </param>
        <param>
          <type>const Interpolator1D &amp;</type>
          <declname>interpolator1d</declname>
          <defval>Interpolator1D()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000026"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use the overload that passes an interpolation type instead. Deprecated in version 1.36. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="191" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1aa7b9e0d59581edd9ab1c1f5b48edee00" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::InterpolatedYoYCapFloorTermPriceSurface&lt; Interpolator2D, Interpolator1D &gt;::maxDate</definition>
        <argsstring>() const override</argsstring>
        <name>maxDate</name>
        <qualifiedname>QuantLib::InterpolatedYoYCapFloorTermPriceSurface::maxDate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_term_structure_1ae9af756bbddc15962711f77f514f08fa">maxDate</reimplements>
        <briefdescription>
<para>inflation term structure interface </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="210" column="14" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="210" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1a8787bed109978b1656b65d8b83c8f90a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::InterpolatedYoYCapFloorTermPriceSurface&lt; Interpolator2D, Interpolator1D &gt;::baseDate</definition>
        <argsstring>() const override</argsstring>
        <name>baseDate</name>
        <qualifiedname>QuantLib::InterpolatedYoYCapFloorTermPriceSurface::baseDate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a3e4ceb2947769d48236df2fe888e2c6c">baseDate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="211" column="14" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="211" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1adacf63b172e73313fd7fd70d8ad5ec5b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
        <definition>Natural QuantLib::InterpolatedYoYCapFloorTermPriceSurface&lt; Interpolator2D, Interpolator1D &gt;::fixingDays</definition>
        <argsstring>() const override</argsstring>
        <name>fixingDays</name>
        <qualifiedname>QuantLib::InterpolatedYoYCapFloorTermPriceSurface::fixingDays</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a03290b15ca837c886a5bc9223d1712cd">fixingDays</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="213" column="17" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="213" bodyend="213"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="6">
        <label>QuantLib::Extrapolator</label>
        <link refid="class_quant_lib_1_1_extrapolator"/>
      </node>
      <node id="1">
        <label>QuantLib::InterpolatedYoYCapFloorTermPriceSurface&lt; Interpolator2D, Interpolator1D &gt;</label>
        <link refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="3">
        <label>QuantLib::TermStructure</label>
        <link refid="class_quant_lib_1_1_term_structure"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::YoYCapFloorTermPriceSurface</label>
        <link refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7">
        <label>QuantLib::Calendar</label>
        <link refid="class_quant_lib_1_1_calendar"/>
      </node>
      <node id="6">
        <label>QuantLib::Extrapolator</label>
        <link refid="class_quant_lib_1_1_extrapolator"/>
      </node>
      <node id="9">
        <label>QuantLib::Handle&lt; QuantLib::YieldTermStructure &gt;</label>
        <link refid="class_quant_lib_1_1_handle"/>
      </node>
      <node id="1">
        <label>QuantLib::InterpolatedYoYCapFloorTermPriceSurface&lt; Interpolator2D, Interpolator1D &gt;</label>
        <link refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>cPriceB_</edgelabel>
          <edgelabel>fPriceB_</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>capPrice_</edgelabel>
          <edgelabel>floorPrice2_</edgelabel>
          <edgelabel>floorPrice_</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>atmYoYSwapRateCurve_</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>QuantLib::Interpolation</label>
        <link refid="class_quant_lib_1_1_interpolation"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>QuantLib::Interpolation2D</label>
        <link refid="class_quant_lib_1_1_interpolation2_d"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QuantLib::Matrix</label>
        <link refid="class_quant_lib_1_1_matrix"/>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="8">
        <label>QuantLib::Period</label>
        <link refid="class_quant_lib_1_1_period"/>
      </node>
      <node id="3">
        <label>QuantLib::TermStructure</label>
        <link refid="class_quant_lib_1_1_term_structure"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>calendar_</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::YoYCapFloorTermPriceSurface</label>
        <link refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>observationLag_</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>nominalTS_</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>cPrice_</edgelabel>
          <edgelabel>fPrice_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="167" column="5" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="168" bodyend="272"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_extrapolator_1ab3936a9b5b5c163d3e511437c16c1d9e" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>allowsExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1ad5700e36bc90a2fbe970bacf9982af10" prot="public" virt="virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>atmYoYRate</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a09d2bd893f43f9a59468de77c8e4bdbd" prot="public" virt="virtual" ambiguityscope="QuantLib::YoYCapFloorTermPriceSurface::"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>atmYoYRate</name></member>
      <member refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1ae20d2a1bd7e443f806852ec02c598091" prot="public" virt="virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>atmYoYSwapDateRates</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a0d828258b458c1056058ff919436915b" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>atmYoYSwapDateRates_</name></member>
      <member refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1adc8f62fb7e797c81cc84e0dc534bf30e" prot="public" virt="virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>atmYoYSwapRate</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1aa22e79c81fffd6dc254da7420e658230" prot="public" virt="virtual" ambiguityscope="QuantLib::YoYCapFloorTermPriceSurface::"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>atmYoYSwapRate</name></member>
      <member refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1ab3bd59b56e4f3da093c9c345653d888a" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>atmYoYSwapRateCurve_</name></member>
      <member refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1aee5f4e6c8d7b8e8a776e00292dbb3953" prot="public" virt="virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>atmYoYSwapTimeRates</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ad02a86b60d917a323e3914d3a9493484" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>atmYoYSwapTimeRates_</name></member>
      <member refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1a8787bed109978b1656b65d8b83c8f90a" prot="public" virt="virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>baseDate</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ab1d37e13f445b151f536167032cb0d5d" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>bdc_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a422661e1d21b9da38de256e8d2e7ecba" prot="public" virt="virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>businessDayConvention</name></member>
      <member refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1a407472911479fc8a715973144cb870cd" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>calculateYoYTermStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac4ea5cbce495c9a47a44eeaedf7a9d45" prot="public" virt="virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>calendar</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a0a09e3fa8cdfbc9aa9685da0c35ccb90" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>calendar_</name></member>
      <member refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1a6207c7f642215c684484b331a5021e79" prot="public" virt="virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>capPrice</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ab6c1ca261db01ef6cf0f6f6f255a7af5" prot="public" virt="virtual" ambiguityscope="QuantLib::YoYCapFloorTermPriceSurface::"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>capPrice</name></member>
      <member refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1a187f839346bf2102ae35668816c6ff2f" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>capPrice_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ab67baf0496ed506f55da704441f43e0e" prot="public" virt="virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>capStrikes</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ad2fdd7beefdc6813241a7113ca3947b8" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>cfMaturities_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a624ff607d930b488cc755fdb1eee5566" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>cfMaturityTimes_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1aa837354b3b2cbe7c24329ea0abd951a0" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>cfStrikes_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1adb64a318d64e08fc6c87c307f86c59cd" prot="protected" virt="virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>checkMaturity</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1aa7297742ffbeeb0c7611f90a0f7d15bf" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>checkRange</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a4d246bcb13b7518a75088bf7cf01ea75" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>checkRange</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1aed24266e40b5d44696271c201993de75" prot="protected" virt="virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>checkStrike</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a8683e6f0346728929bdf1febf4ed1f09" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>cPrice_</name></member>
      <member refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1a8154be9d49bc00b8e48b0bac6e57e428" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>cPriceB_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ae2d47154e4c3c1e455ae785ddc9d27c5" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>cStrikes_</name></member>
      <member refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1a9d8ed1f4e6c12a9e8d13cbfb20522d24" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>cStrikesB_</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac03e725e4e0685b209caa626b00924ca" prot="public" virt="virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>dayCounter</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1a6af69387d5cae0fe84d6a0c858406218" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>disableExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1a5f7b5650a44d6c63095bc739470c8bfb" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>enableExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1af1c3adaccdfaf07d3d07edaa234444f7" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>Extrapolator</name></member>
      <member refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1adacf63b172e73313fd7fd70d8ad5ec5b" prot="public" virt="virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>fixingDays</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a1d298dc5bea2e7e29fcebec407281768" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>fixingDays_</name></member>
      <member refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1a3edef885afa6d40291e3a48606880926" prot="public" virt="virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>floorPrice</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a6988d434e327a0f9c175ffecc6d459cd" prot="public" virt="virtual" ambiguityscope="QuantLib::YoYCapFloorTermPriceSurface::"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>floorPrice</name></member>
      <member refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1a9e47053e494cee7720812e7db2933c32" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>floorPrice2_</name></member>
      <member refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1a187dc7d4ff72fbb4bf97189a9a7e1fc6" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>floorPrice_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a1a5f5d1e32878f425d2149b21fd3bd03" prot="public" virt="virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>floorStrikes</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a2d8b33206b788fe940cf6f291433ad5d" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>fPrice_</name></member>
      <member refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1aa46d471ea380986a0767547cbfa96c90" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>fPriceB_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a0a48453184823e7e399f7cc50afecad9" prot="public" virt="virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>frequency</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a6366acb6650bf99c4f70968a9a8dc689" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>fStrikes_</name></member>
      <member refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1abeeab6118953266a6adb92d7f7207ae5" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>fStrikesB_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ac6a6a54cc01ddb8ee98f2f5335a705be" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>indexIsInterpolated</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a7caf9a79cc0b0c41162eb3608527dbae" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>indexIsInterpolated_</name></member>
      <member refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1ac8c9d32ae54028eb7a7db818cf201840" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>InterpolatedYoYCapFloorTermPriceSurface</name></member>
      <member refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1a9b73e054e6a5038ea609057fdb886897" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>InterpolatedYoYCapFloorTermPriceSurface</name></member>
      <member refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1a065a865c55d01343ce6d8ce05f725c99" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>interpolator1d_</name></member>
      <member refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1aafbd6da3be5d41b63c385ffdb4b4680d" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>interpolator2d_</name></member>
      <member refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1aecc9166fec0f1482b1ed58bd40718060" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>intersect</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a6d338491cff91ce601056e7f18ba784b" prot="public" virt="virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>maturities</name></member>
      <member refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1aa7b9e0d59581edd9ab1c1f5b48edee00" prot="public" virt="virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>maxDate</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1adeb3680d5f39759b107c9f48af8d6410" prot="public" virt="virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>maxMaturity</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a405a9525fbe7822ef04b2b070422169a" prot="public" virt="virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>maxStrike</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a2f820c32e198e1046d97ca3dd9a807c5" prot="public" virt="virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>maxTime</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1af6e62cea04af296a9d5ebc3c783136d0" prot="public" virt="virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>minMaturity</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1adab93ec44a525348df03edbda307591c" prot="public" virt="virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>minStrike</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a8319e5c2c37b09a825d61210c9cb8e2a" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>moving_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1af2e2f997857ea076570439cab910fe2e" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>nominalTS_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a77b7913c7c656ab4e6eb2095b09d4c52" prot="public" virt="virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>observationLag</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ac7be278078d051319670e7301d92cf18" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>observationLag_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::QuantLib::Observable::"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1ae4182a81d33f73f9b1f3c44609e99ade" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>performCalculations</name></member>
      <member refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1a17d4abd943a6fd5c768f4742907bd27d" prot="public" virt="virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>price</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a021187f13183ac92b7ae0c5abe703919" prot="public" virt="virtual" ambiguityscope="QuantLib::YoYCapFloorTermPriceSurface::"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>price</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1accbf3d4af41db0333d456eb5616c4e1e" prot="public" virt="virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>referenceDate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1abeb79eefda70a9414f206ca9e70ced0f" prot="public" virt="virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>settlementDays</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ac8e13fcb01eb6045c07af1ca0b936466" prot="public" virt="virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>strikes</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac8365997e6d41134b4e0998fe6b4e949" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>TermStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a95764a49e0368b653eadbe619d9ef334" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>TermStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1aab73d2acafdc8fbdf9336e7084bd88a1" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>TermStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac8da61eb0f06ae07a35e8e4bbe7146b0" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>timeFromReference</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1a5927904e5e2745ee70e7a8027df8a11b" prot="public" virt="virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a2fcf1c78e57786ad5c123f52dbf619e8" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>updated_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a1beef9b99263609f9f384f7fac326414" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>yoy_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a4d7ab2efa3cb0aa3aa6d8c5aaf87b7b3" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>YoYCapFloorTermPriceSurface</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a4db3e0b96218013e51a4f421dae0bbcd" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>YoYCapFloorTermPriceSurface</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a8a2f9a6dc1e752c18753293e01ef0e46" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>yoyIndex</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ad97064c4c1fd7a02fe08f14e309ad7a0" prot="protected" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>yoyIndex_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a1fd6fe13f04a258e75f6d7f59eadece8" prot="public" virt="virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>yoyOptionDateFromTenor</name></member>
      <member refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1aff7ce46d135d3cb48ed9a7bd0239ac26" prot="public" virt="virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>YoYTS</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1af0ca0156436ffbce159183198eb27e2e" prot="public" virt="virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>~Extrapolator</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ad202ddcc14fc4a6c16686d6164d7b36c" prot="public" virt="non-virtual"><scope>QuantLib::InterpolatedYoYCapFloorTermPriceSurface</scope><name>~TermStructure</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::MakeMCDiscreteGeometricAPEngine</compoundname>
    <templateparamlist>
      <param>
        <type>class RNG</type>
        <defval><ref refid="namespace_quant_lib_1a68b9aaf5f0c17983506b1a1db8575ab0" kindref="member">PseudoRandom</ref></defval>
      </param>
      <param>
        <type>class S</type>
        <defval><ref refid="namespace_quant_lib_1ae2e788da35d2b866040a03b96227ee6e" kindref="member">Statistics</ref></defval>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine_1a0a9c410d2fa337990c0b637b6d8d337b" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_generalized_black_scholes_process" kindref="compound">GeneralizedBlackScholesProcess</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;GeneralizedBlackScholesProcess&gt; QuantLib::MakeMCDiscreteGeometricAPEngine&lt; RNG, S &gt;::process_</definition>
        <argsstring></argsstring>
        <name>process_</name>
        <qualifiedname>QuantLib::MakeMCDiscreteGeometricAPEngine::process_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_geom_av_price.hpp" line="157" column="25" bodyfile="ql/pricingengines/asian/mc_discr_geom_av_price.hpp" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine_1ac1b2032fbc3e83068e318915b957780d" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::MakeMCDiscreteGeometricAPEngine&lt; RNG, S &gt;::antithetic_</definition>
        <argsstring></argsstring>
        <name>antithetic_</name>
        <qualifiedname>QuantLib::MakeMCDiscreteGeometricAPEngine::antithetic_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_geom_av_price.hpp" line="158" column="14" bodyfile="ql/pricingengines/asian/mc_discr_geom_av_price.hpp" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine_1a6f8f3f547a0bb16e293a7d9ac1a8442f" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCDiscreteGeometricAPEngine&lt; RNG, S &gt;::samples_</definition>
        <argsstring></argsstring>
        <name>samples_</name>
        <qualifiedname>QuantLib::MakeMCDiscreteGeometricAPEngine::samples_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_geom_av_price.hpp" line="159" column="14" bodyfile="ql/pricingengines/asian/mc_discr_geom_av_price.hpp" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine_1a6e86bf687b9eff84720ea38fb786785a" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCDiscreteGeometricAPEngine&lt; RNG, S &gt;::maxSamples_</definition>
        <argsstring></argsstring>
        <name>maxSamples_</name>
        <qualifiedname>QuantLib::MakeMCDiscreteGeometricAPEngine::maxSamples_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_geom_av_price.hpp" line="159" column="23" bodyfile="ql/pricingengines/asian/mc_discr_geom_av_price.hpp" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine_1a755dc3b5cccbfebb26f490428ef1e11b" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::MakeMCDiscreteGeometricAPEngine&lt; RNG, S &gt;::tolerance_</definition>
        <argsstring></argsstring>
        <name>tolerance_</name>
        <qualifiedname>QuantLib::MakeMCDiscreteGeometricAPEngine::tolerance_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_geom_av_price.hpp" line="160" column="14" bodyfile="ql/pricingengines/asian/mc_discr_geom_av_price.hpp" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine_1ab14fa79504d311dd851f5642c781e008" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::MakeMCDiscreteGeometricAPEngine&lt; RNG, S &gt;::brownianBridge_</definition>
        <argsstring></argsstring>
        <name>brownianBridge_</name>
        <qualifiedname>QuantLib::MakeMCDiscreteGeometricAPEngine::brownianBridge_</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_geom_av_price.hpp" line="161" column="14" bodyfile="ql/pricingengines/asian/mc_discr_geom_av_price.hpp" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine_1ab31030896033d1c1b16162aa9506fe0e" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
        <definition>BigNatural QuantLib::MakeMCDiscreteGeometricAPEngine&lt; RNG, S &gt;::seed_</definition>
        <argsstring></argsstring>
        <name>seed_</name>
        <qualifiedname>QuantLib::MakeMCDiscreteGeometricAPEngine::seed_</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_geom_av_price.hpp" line="162" column="20" bodyfile="ql/pricingengines/asian/mc_discr_geom_av_price.hpp" bodystart="162" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine_1a20f0fbdce92fe90e99fed3188b7fae6e" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::MakeMCDiscreteGeometricAPEngine&lt; RNG, S &gt;::MakeMCDiscreteGeometricAPEngine</definition>
        <argsstring>(ext::shared_ptr&lt; GeneralizedBlackScholesProcess &gt; process)</argsstring>
        <name>MakeMCDiscreteGeometricAPEngine</name>
        <qualifiedname>QuantLib::MakeMCDiscreteGeometricAPEngine::MakeMCDiscreteGeometricAPEngine</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_generalized_black_scholes_process" kindref="compound">GeneralizedBlackScholesProcess</ref> &gt;</type>
          <declname>process</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_geom_av_price.hpp" line="145" column="18" bodyfile="ql/pricingengines/asian/mc_discr_geom_av_price.hpp" bodystart="166" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine_1a122d2b27594e5f102f3a6edb16e534f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine" kindref="compound">MakeMCDiscreteGeometricAPEngine</ref> &amp;</type>
        <definition>MakeMCDiscreteGeometricAPEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCDiscreteGeometricAPEngine&lt; RNG, S &gt;::withBrownianBridge</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>withBrownianBridge</name>
        <qualifiedname>QuantLib::MakeMCDiscreteGeometricAPEngine::withBrownianBridge</qualifiedname>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_geom_av_price.hpp" line="148" column="41" bodyfile="ql/pricingengines/asian/mc_discr_geom_av_price.hpp" bodystart="209" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine_1a87dc09d897aa96804c0a16f59752ed88" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine" kindref="compound">MakeMCDiscreteGeometricAPEngine</ref> &amp;</type>
        <definition>MakeMCDiscreteGeometricAPEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCDiscreteGeometricAPEngine&lt; RNG, S &gt;::withSamples</definition>
        <argsstring>(Size samples)</argsstring>
        <name>withSamples</name>
        <qualifiedname>QuantLib::MakeMCDiscreteGeometricAPEngine::withSamples</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_geom_av_price.hpp" line="149" column="41" bodyfile="ql/pricingengines/asian/mc_discr_geom_av_price.hpp" bodystart="173" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine_1a4ace590b6d1bbd815897955332c2c5c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine" kindref="compound">MakeMCDiscreteGeometricAPEngine</ref> &amp;</type>
        <definition>MakeMCDiscreteGeometricAPEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCDiscreteGeometricAPEngine&lt; RNG, S &gt;::withAbsoluteTolerance</definition>
        <argsstring>(Real tolerance)</argsstring>
        <name>withAbsoluteTolerance</name>
        <qualifiedname>QuantLib::MakeMCDiscreteGeometricAPEngine::withAbsoluteTolerance</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>tolerance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_geom_av_price.hpp" line="150" column="41" bodyfile="ql/pricingengines/asian/mc_discr_geom_av_price.hpp" bodystart="182" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine_1acadcb38fcd8308a110aa9130443da1d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine" kindref="compound">MakeMCDiscreteGeometricAPEngine</ref> &amp;</type>
        <definition>MakeMCDiscreteGeometricAPEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCDiscreteGeometricAPEngine&lt; RNG, S &gt;::withMaxSamples</definition>
        <argsstring>(Size samples)</argsstring>
        <name>withMaxSamples</name>
        <qualifiedname>QuantLib::MakeMCDiscreteGeometricAPEngine::withMaxSamples</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_geom_av_price.hpp" line="151" column="41" bodyfile="ql/pricingengines/asian/mc_discr_geom_av_price.hpp" bodystart="195" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine_1a92e12784467e72d0d71b50b0cda24ea2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine" kindref="compound">MakeMCDiscreteGeometricAPEngine</ref> &amp;</type>
        <definition>MakeMCDiscreteGeometricAPEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCDiscreteGeometricAPEngine&lt; RNG, S &gt;::withSeed</definition>
        <argsstring>(BigNatural seed)</argsstring>
        <name>withSeed</name>
        <qualifiedname>QuantLib::MakeMCDiscreteGeometricAPEngine::withSeed</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_geom_av_price.hpp" line="152" column="41" bodyfile="ql/pricingengines/asian/mc_discr_geom_av_price.hpp" bodystart="202" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine_1a6a519895f19220ea930a90b151a86b37" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine" kindref="compound">MakeMCDiscreteGeometricAPEngine</ref> &amp;</type>
        <definition>MakeMCDiscreteGeometricAPEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCDiscreteGeometricAPEngine&lt; RNG, S &gt;::withAntitheticVariate</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>withAntitheticVariate</name>
        <qualifiedname>QuantLib::MakeMCDiscreteGeometricAPEngine::withAntitheticVariate</qualifiedname>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_geom_av_price.hpp" line="153" column="41" bodyfile="ql/pricingengines/asian/mc_discr_geom_av_price.hpp" bodystart="216" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine_1a123ba2f24fe9ff15e65be53070dfc6d4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::MakeMCDiscreteGeometricAPEngine&lt; RNG, S &gt;::operator ext::shared_ptr&lt; PricingEngine &gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator ext::shared_ptr&lt; PricingEngine &gt;</name>
        <qualifiedname>QuantLib::MakeMCDiscreteGeometricAPEngine::shared_ptr&lt; PricingEngine &gt;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_geom_av_price.hpp" line="155" column="9" bodyfile="ql/pricingengines/asian/mc_discr_geom_av_price.hpp" bodystart="223" bodyend="232"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/pricingengines/asian/mc_discr_geom_av_price.hpp" line="143" column="5" bodyfile="ql/pricingengines/asian/mc_discr_geom_av_price.hpp" bodystart="143" bodyend="163"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine_1ac1b2032fbc3e83068e318915b957780d" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteGeometricAPEngine</scope><name>antithetic_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine_1ab14fa79504d311dd851f5642c781e008" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteGeometricAPEngine</scope><name>brownianBridge_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine_1a20f0fbdce92fe90e99fed3188b7fae6e" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteGeometricAPEngine</scope><name>MakeMCDiscreteGeometricAPEngine</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine_1a6e86bf687b9eff84720ea38fb786785a" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteGeometricAPEngine</scope><name>maxSamples_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine_1a123ba2f24fe9ff15e65be53070dfc6d4" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteGeometricAPEngine</scope><name>operator ext::shared_ptr&lt; PricingEngine &gt;</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine_1a0a9c410d2fa337990c0b637b6d8d337b" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteGeometricAPEngine</scope><name>process_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine_1a6f8f3f547a0bb16e293a7d9ac1a8442f" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteGeometricAPEngine</scope><name>samples_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine_1ab31030896033d1c1b16162aa9506fe0e" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteGeometricAPEngine</scope><name>seed_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine_1a755dc3b5cccbfebb26f490428ef1e11b" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteGeometricAPEngine</scope><name>tolerance_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine_1a4ace590b6d1bbd815897955332c2c5c8" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteGeometricAPEngine</scope><name>withAbsoluteTolerance</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine_1a6a519895f19220ea930a90b151a86b37" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteGeometricAPEngine</scope><name>withAntitheticVariate</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine_1a122d2b27594e5f102f3a6edb16e534f7" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteGeometricAPEngine</scope><name>withBrownianBridge</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine_1acadcb38fcd8308a110aa9130443da1d7" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteGeometricAPEngine</scope><name>withMaxSamples</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine_1a87dc09d897aa96804c0a16f59752ed88" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteGeometricAPEngine</scope><name>withSamples</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_geometric_a_p_engine_1a92e12784467e72d0d71b50b0cda24ea2" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteGeometricAPEngine</scope><name>withSeed</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

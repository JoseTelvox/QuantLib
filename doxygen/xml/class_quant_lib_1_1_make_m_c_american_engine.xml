<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_make_m_c_american_engine" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::MakeMCAmericanEngine</compoundname>
    <includes refid="mcamericanengine_8hpp" local="no">mcamericanengine.hpp</includes>
    <templateparamlist>
      <param>
        <type>class RNG</type>
        <defval><ref refid="namespace_quant_lib_1a68b9aaf5f0c17983506b1a1db8575ab0" kindref="member">PseudoRandom</ref></defval>
      </param>
      <param>
        <type>class S</type>
        <defval><ref refid="namespace_quant_lib_1ae2e788da35d2b866040a03b96227ee6e" kindref="member">Statistics</ref></defval>
      </param>
      <param>
        <type>class RNG_Calibration</type>
        <defval>RNG</defval>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_american_engine_1ab8e6578c09e2cfa5ea5bb8337f7c21c4" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_generalized_black_scholes_process" kindref="compound">GeneralizedBlackScholesProcess</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;GeneralizedBlackScholesProcess&gt; QuantLib::MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt;::process_</definition>
        <argsstring></argsstring>
        <name>process_</name>
        <qualifiedname>QuantLib::MakeMCAmericanEngine::process_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="129" column="25" bodyfile="ql/pricingengines/vanilla/mcamericanengine.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_american_engine_1adba5101eafc95ff045ac5329eebec003" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt;::antithetic_</definition>
        <argsstring></argsstring>
        <name>antithetic_</name>
        <qualifiedname>QuantLib::MakeMCAmericanEngine::antithetic_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="130" column="14" bodyfile="ql/pricingengines/vanilla/mcamericanengine.hpp" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_american_engine_1ac6c69a420b106b0cd3166710266c3cd0" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt;::controlVariate_</definition>
        <argsstring></argsstring>
        <name>controlVariate_</name>
        <qualifiedname>QuantLib::MakeMCAmericanEngine::controlVariate_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="130" column="27" bodyfile="ql/pricingengines/vanilla/mcamericanengine.hpp" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_american_engine_1a2598535c74c3b605d3dca1fdd7b87ba3" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt;::steps_</definition>
        <argsstring></argsstring>
        <name>steps_</name>
        <qualifiedname>QuantLib::MakeMCAmericanEngine::steps_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="131" column="14" bodyfile="ql/pricingengines/vanilla/mcamericanengine.hpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_american_engine_1a570a3d68ef5c7c283e53eed08e9d84e6" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt;::stepsPerYear_</definition>
        <argsstring></argsstring>
        <name>stepsPerYear_</name>
        <qualifiedname>QuantLib::MakeMCAmericanEngine::stepsPerYear_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="131" column="21" bodyfile="ql/pricingengines/vanilla/mcamericanengine.hpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_american_engine_1acdf369b841b3681d90890658f5811b07" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt;::samples_</definition>
        <argsstring></argsstring>
        <name>samples_</name>
        <qualifiedname>QuantLib::MakeMCAmericanEngine::samples_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="132" column="14" bodyfile="ql/pricingengines/vanilla/mcamericanengine.hpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_american_engine_1ab9bf3bb766cffc5d7d28cf9561e036a7" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt;::maxSamples_</definition>
        <argsstring></argsstring>
        <name>maxSamples_</name>
        <qualifiedname>QuantLib::MakeMCAmericanEngine::maxSamples_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="132" column="23" bodyfile="ql/pricingengines/vanilla/mcamericanengine.hpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_american_engine_1a69221a41613af9a411fdc9a0816bf4da" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt;::calibrationSamples_</definition>
        <argsstring></argsstring>
        <name>calibrationSamples_</name>
        <qualifiedname>QuantLib::MakeMCAmericanEngine::calibrationSamples_</qualifiedname>
        <initializer>= 2048</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="132" column="35" bodyfile="ql/pricingengines/vanilla/mcamericanengine.hpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_american_engine_1ad177cfcfe86007d3224089651d5fcca3" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt;::tolerance_</definition>
        <argsstring></argsstring>
        <name>tolerance_</name>
        <qualifiedname>QuantLib::MakeMCAmericanEngine::tolerance_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="133" column="14" bodyfile="ql/pricingengines/vanilla/mcamericanengine.hpp" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_american_engine_1a5a7c249bb1821274644cc5b295e059f0" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
        <definition>BigNatural QuantLib::MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt;::seed_</definition>
        <argsstring></argsstring>
        <name>seed_</name>
        <qualifiedname>QuantLib::MakeMCAmericanEngine::seed_</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="134" column="20" bodyfile="ql/pricingengines/vanilla/mcamericanengine.hpp" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_american_engine_1a39b1c0d08cfffff3b938cc24db585434" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt;::polynomialOrder_</definition>
        <argsstring></argsstring>
        <name>polynomialOrder_</name>
        <qualifiedname>QuantLib::MakeMCAmericanEngine::polynomialOrder_</qualifiedname>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="135" column="14" bodyfile="ql/pricingengines/vanilla/mcamericanengine.hpp" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_american_engine_1ad18f5a365dcec212d25adf53b7a1eafd" prot="private" static="no" mutable="no">
        <type>LsmBasisSystem::PolynomialType</type>
        <definition>LsmBasisSystem::PolynomialType QuantLib::MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt;::polynomialType_</definition>
        <argsstring></argsstring>
        <name>polynomialType_</name>
        <qualifiedname>QuantLib::MakeMCAmericanEngine::polynomialType_</qualifiedname>
        <initializer>= LsmBasisSystem::Monomial</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="136" column="40" bodyfile="ql/pricingengines/vanilla/mcamericanengine.hpp" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_american_engine_1abbf929b0cdd4cff9b79c73123628ba61" prot="private" static="no" mutable="no">
        <type>ext::optional&lt; bool &gt;</type>
        <definition>ext::optional&lt;bool&gt; QuantLib::MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt;::antitheticCalibration_</definition>
        <argsstring></argsstring>
        <name>antitheticCalibration_</name>
        <qualifiedname>QuantLib::MakeMCAmericanEngine::antitheticCalibration_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="137" column="23" bodyfile="ql/pricingengines/vanilla/mcamericanengine.hpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_american_engine_1aebb1f51f1a0373822292f42f766ae149" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
        <definition>BigNatural QuantLib::MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt;::seedCalibration_</definition>
        <argsstring></argsstring>
        <name>seedCalibration_</name>
        <qualifiedname>QuantLib::MakeMCAmericanEngine::seedCalibration_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="138" column="20" bodyfile="ql/pricingengines/vanilla/mcamericanengine.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_american_engine_1ac266b8bbdbb61e52335f54678f0f0deb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt;::MakeMCAmericanEngine</definition>
        <argsstring>(ext::shared_ptr&lt; GeneralizedBlackScholesProcess &gt;)</argsstring>
        <name>MakeMCAmericanEngine</name>
        <qualifiedname>QuantLib::MakeMCAmericanEngine::MakeMCAmericanEngine</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_generalized_black_scholes_process" kindref="compound">GeneralizedBlackScholesProcess</ref> &gt;</type>
          <defname>process</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="110" column="9" bodyfile="ql/pricingengines/vanilla/mcamericanengine.hpp" bodystart="268" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_american_engine_1acf0d4730e915d4be94ca0696d2ad56ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_american_engine" kindref="compound">MakeMCAmericanEngine</ref> &amp;</type>
        <definition>MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt; &amp; QuantLib::MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt;::withSteps</definition>
        <argsstring>(Size steps)</argsstring>
        <name>withSteps</name>
        <qualifiedname>QuantLib::MakeMCAmericanEngine::withSteps</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="112" column="30" bodyfile="ql/pricingengines/vanilla/mcamericanengine.hpp" bodystart="290" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_american_engine_1a11ea8819f8517562abd25299066ff11b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_american_engine" kindref="compound">MakeMCAmericanEngine</ref> &amp;</type>
        <definition>MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt; &amp; QuantLib::MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt;::withStepsPerYear</definition>
        <argsstring>(Size steps)</argsstring>
        <name>withStepsPerYear</name>
        <qualifiedname>QuantLib::MakeMCAmericanEngine::withStepsPerYear</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="113" column="30" bodyfile="ql/pricingengines/vanilla/mcamericanengine.hpp" bodystart="297" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_american_engine_1aa9eafbed6ed425bc5497816a7da24ccc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_american_engine" kindref="compound">MakeMCAmericanEngine</ref> &amp;</type>
        <definition>MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt; &amp; QuantLib::MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt;::withSamples</definition>
        <argsstring>(Size samples)</argsstring>
        <name>withSamples</name>
        <qualifiedname>QuantLib::MakeMCAmericanEngine::withSamples</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="114" column="30" bodyfile="ql/pricingengines/vanilla/mcamericanengine.hpp" bodystart="305" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_american_engine_1ab5226ac06189d6fa58ff49197cbb0ea4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_american_engine" kindref="compound">MakeMCAmericanEngine</ref> &amp;</type>
        <definition>MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt; &amp; QuantLib::MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt;::withAbsoluteTolerance</definition>
        <argsstring>(Real tolerance)</argsstring>
        <name>withAbsoluteTolerance</name>
        <qualifiedname>QuantLib::MakeMCAmericanEngine::withAbsoluteTolerance</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>tolerance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="115" column="30" bodyfile="ql/pricingengines/vanilla/mcamericanengine.hpp" bodystart="314" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_american_engine_1aaa16388c4a32c83239636d1d491e617c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_american_engine" kindref="compound">MakeMCAmericanEngine</ref> &amp;</type>
        <definition>MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt; &amp; QuantLib::MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt;::withMaxSamples</definition>
        <argsstring>(Size samples)</argsstring>
        <name>withMaxSamples</name>
        <qualifiedname>QuantLib::MakeMCAmericanEngine::withMaxSamples</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="116" column="30" bodyfile="ql/pricingengines/vanilla/mcamericanengine.hpp" bodystart="327" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_american_engine_1ae7bd90783567455e4b80921800961183" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_american_engine" kindref="compound">MakeMCAmericanEngine</ref> &amp;</type>
        <definition>MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt; &amp; QuantLib::MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt;::withSeed</definition>
        <argsstring>(BigNatural seed)</argsstring>
        <name>withSeed</name>
        <qualifiedname>QuantLib::MakeMCAmericanEngine::withSeed</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="117" column="30" bodyfile="ql/pricingengines/vanilla/mcamericanengine.hpp" bodystart="343" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_american_engine_1abdcf6c1fb11fc539245903d1b34cf99e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_american_engine" kindref="compound">MakeMCAmericanEngine</ref> &amp;</type>
        <definition>MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt; &amp; QuantLib::MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt;::withAntitheticVariate</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>withAntitheticVariate</name>
        <qualifiedname>QuantLib::MakeMCAmericanEngine::withAntitheticVariate</qualifiedname>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="118" column="30" bodyfile="ql/pricingengines/vanilla/mcamericanengine.hpp" bodystart="350" bodyend="354"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_american_engine_1ae55bc59e05e3fdacad3a503004ed3404" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_american_engine" kindref="compound">MakeMCAmericanEngine</ref> &amp;</type>
        <definition>MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt; &amp; QuantLib::MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt;::withControlVariate</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>withControlVariate</name>
        <qualifiedname>QuantLib::MakeMCAmericanEngine::withControlVariate</qualifiedname>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="119" column="30" bodyfile="ql/pricingengines/vanilla/mcamericanengine.hpp" bodystart="358" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_american_engine_1a724e3293b97c5fd95513f352152664ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_american_engine" kindref="compound">MakeMCAmericanEngine</ref> &amp;</type>
        <definition>MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt; &amp; QuantLib::MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt;::withPolynomialOrder</definition>
        <argsstring>(Size polynomialOrder)</argsstring>
        <name>withPolynomialOrder</name>
        <qualifiedname>QuantLib::MakeMCAmericanEngine::withPolynomialOrder</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>polynomialOrder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="120" column="30" bodyfile="ql/pricingengines/vanilla/mcamericanengine.hpp" bodystart="276" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_american_engine_1a95c0f206a72c40fe893ae0d4229a1107" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_american_engine" kindref="compound">MakeMCAmericanEngine</ref> &amp;</type>
        <definition>MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt; &amp; QuantLib::MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt;::withBasisSystem</definition>
        <argsstring>(LsmBasisSystem::PolynomialType)</argsstring>
        <name>withBasisSystem</name>
        <qualifiedname>QuantLib::MakeMCAmericanEngine::withBasisSystem</qualifiedname>
        <param>
          <type>LsmBasisSystem::PolynomialType</type>
          <defname>polynomialType</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="121" column="30" bodyfile="ql/pricingengines/vanilla/mcamericanengine.hpp" bodystart="283" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_american_engine_1a63cfc8f78b6828a8c5c8d367dd7b386e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_american_engine" kindref="compound">MakeMCAmericanEngine</ref> &amp;</type>
        <definition>MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt; &amp; QuantLib::MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt;::withCalibrationSamples</definition>
        <argsstring>(Size calibrationSamples)</argsstring>
        <name>withCalibrationSamples</name>
        <qualifiedname>QuantLib::MakeMCAmericanEngine::withCalibrationSamples</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>calibrationSamples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="122" column="30" bodyfile="ql/pricingengines/vanilla/mcamericanengine.hpp" bodystart="335" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_american_engine_1ad6f84d37b42c8bd367d9ba54be054928" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_american_engine" kindref="compound">MakeMCAmericanEngine</ref> &amp;</type>
        <definition>MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt; &amp; QuantLib::MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt;::withAntitheticVariateCalibration</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>withAntitheticVariateCalibration</name>
        <qualifiedname>QuantLib::MakeMCAmericanEngine::withAntitheticVariateCalibration</qualifiedname>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="123" column="30" bodyfile="ql/pricingengines/vanilla/mcamericanengine.hpp" bodystart="365" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_american_engine_1a4d8f14e7a86f26f271bece2a96ef382f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_american_engine" kindref="compound">MakeMCAmericanEngine</ref> &amp;</type>
        <definition>MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt; &amp; QuantLib::MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt;::withSeedCalibration</definition>
        <argsstring>(BigNatural seed)</argsstring>
        <name>withSeedCalibration</name>
        <qualifiedname>QuantLib::MakeMCAmericanEngine::withSeedCalibration</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="124" column="30" bodyfile="ql/pricingengines/vanilla/mcamericanengine.hpp" bodystart="372" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_american_engine_1a139e81a6ae9447eb006484b5f7d830ec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::MakeMCAmericanEngine&lt; RNG, S, RNG_Calibration &gt;::operator ext::shared_ptr&lt; PricingEngine &gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator ext::shared_ptr&lt; PricingEngine &gt;</name>
        <qualifiedname>QuantLib::MakeMCAmericanEngine::shared_ptr&lt; PricingEngine &gt;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="127" column="9" bodyfile="ql/pricingengines/vanilla/mcamericanengine.hpp" bodystart="380" bodyend="399"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Monte Carlo American engine factory. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/pricingengines/vanilla/mcamericanengine.hpp" line="108" column="5" bodyfile="ql/pricingengines/vanilla/mcamericanengine.hpp" bodystart="108" bodyend="139"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_make_m_c_american_engine_1adba5101eafc95ff045ac5329eebec003" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCAmericanEngine</scope><name>antithetic_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_engine_1abbf929b0cdd4cff9b79c73123628ba61" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCAmericanEngine</scope><name>antitheticCalibration_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_engine_1a69221a41613af9a411fdc9a0816bf4da" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCAmericanEngine</scope><name>calibrationSamples_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_engine_1ac6c69a420b106b0cd3166710266c3cd0" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCAmericanEngine</scope><name>controlVariate_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_engine_1ac266b8bbdbb61e52335f54678f0f0deb" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCAmericanEngine</scope><name>MakeMCAmericanEngine</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_engine_1ab9bf3bb766cffc5d7d28cf9561e036a7" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCAmericanEngine</scope><name>maxSamples_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_engine_1a139e81a6ae9447eb006484b5f7d830ec" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCAmericanEngine</scope><name>operator ext::shared_ptr&lt; PricingEngine &gt;</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_engine_1a39b1c0d08cfffff3b938cc24db585434" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCAmericanEngine</scope><name>polynomialOrder_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_engine_1ad18f5a365dcec212d25adf53b7a1eafd" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCAmericanEngine</scope><name>polynomialType_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_engine_1ab8e6578c09e2cfa5ea5bb8337f7c21c4" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCAmericanEngine</scope><name>process_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_engine_1acdf369b841b3681d90890658f5811b07" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCAmericanEngine</scope><name>samples_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_engine_1a5a7c249bb1821274644cc5b295e059f0" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCAmericanEngine</scope><name>seed_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_engine_1aebb1f51f1a0373822292f42f766ae149" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCAmericanEngine</scope><name>seedCalibration_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_engine_1a2598535c74c3b605d3dca1fdd7b87ba3" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCAmericanEngine</scope><name>steps_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_engine_1a570a3d68ef5c7c283e53eed08e9d84e6" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCAmericanEngine</scope><name>stepsPerYear_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_engine_1ad177cfcfe86007d3224089651d5fcca3" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCAmericanEngine</scope><name>tolerance_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_engine_1ab5226ac06189d6fa58ff49197cbb0ea4" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCAmericanEngine</scope><name>withAbsoluteTolerance</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_engine_1abdcf6c1fb11fc539245903d1b34cf99e" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCAmericanEngine</scope><name>withAntitheticVariate</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_engine_1ad6f84d37b42c8bd367d9ba54be054928" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCAmericanEngine</scope><name>withAntitheticVariateCalibration</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_engine_1a95c0f206a72c40fe893ae0d4229a1107" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCAmericanEngine</scope><name>withBasisSystem</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_engine_1a63cfc8f78b6828a8c5c8d367dd7b386e" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCAmericanEngine</scope><name>withCalibrationSamples</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_engine_1ae55bc59e05e3fdacad3a503004ed3404" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCAmericanEngine</scope><name>withControlVariate</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_engine_1aaa16388c4a32c83239636d1d491e617c" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCAmericanEngine</scope><name>withMaxSamples</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_engine_1a724e3293b97c5fd95513f352152664ed" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCAmericanEngine</scope><name>withPolynomialOrder</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_engine_1aa9eafbed6ed425bc5497816a7da24ccc" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCAmericanEngine</scope><name>withSamples</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_engine_1ae7bd90783567455e4b80921800961183" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCAmericanEngine</scope><name>withSeed</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_engine_1a4d8f14e7a86f26f271bece2a96ef382f" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCAmericanEngine</scope><name>withSeedCalibration</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_engine_1acf0d4730e915d4be94ca0696d2ad56ba" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCAmericanEngine</scope><name>withSteps</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_engine_1a11ea8819f8517562abd25299066ff11b" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCAmericanEngine</scope><name>withStepsPerYear</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

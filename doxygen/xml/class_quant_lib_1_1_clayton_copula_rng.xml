<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_clayton_copula_rng" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::ClaytonCopulaRng</compoundname>
    <includes refid="claytoncopularng_8hpp" local="no">claytoncopularng.hpp</includes>
    <templateparamlist>
      <param>
        <type>class RNG</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_quant_lib_1_1_clayton_copula_rng_1a87407ac0fd23260e79f13f7c21b24a31" prot="public" static="no">
        <type><ref refid="struct_quant_lib_1_1_sample" kindref="compound">Sample</ref>&lt; std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &gt;</type>
        <definition>typedef Sample&lt;std::vector&lt;Real&gt; &gt; QuantLib::ClaytonCopulaRng&lt; RNG &gt;::sample_type</definition>
        <argsstring></argsstring>
        <name>sample_type</name>
        <qualifiedname>QuantLib::ClaytonCopulaRng::sample_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/claytoncopularng.hpp" line="38" column="24" bodyfile="ql/experimental/math/claytoncopularng.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_quant_lib_1_1_clayton_copula_rng_1ab401786c9a5118f7115e2d262fca2ef3" prot="public" static="no">
        <type>RNG</type>
        <definition>typedef RNG QuantLib::ClaytonCopulaRng&lt; RNG &gt;::urng_type</definition>
        <argsstring></argsstring>
        <name>urng_type</name>
        <qualifiedname>QuantLib::ClaytonCopulaRng::urng_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/claytoncopularng.hpp" line="39" column="21" bodyfile="ql/experimental/math/claytoncopularng.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_clayton_copula_rng_1aa477de5b00629c7fcad249c2ad2fb995" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ClaytonCopulaRng&lt; RNG &gt;::theta_</definition>
        <argsstring></argsstring>
        <name>theta_</name>
        <qualifiedname>QuantLib::ClaytonCopulaRng::theta_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/claytoncopularng.hpp" line="43" column="14" bodyfile="ql/experimental/math/claytoncopularng.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_clayton_copula_rng_1a0d8845d82a81592d8452fe3bf29d1a8e" prot="private" static="no" mutable="no">
        <type>RNG</type>
        <definition>RNG QuantLib::ClaytonCopulaRng&lt; RNG &gt;::uniformGenerator_</definition>
        <argsstring></argsstring>
        <name>uniformGenerator_</name>
        <qualifiedname>QuantLib::ClaytonCopulaRng::uniformGenerator_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/claytoncopularng.hpp" line="44" column="13" bodyfile="ql/experimental/math/claytoncopularng.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_clayton_copula_rng_1ad60a742c892e2576471de66c62265dc8" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ClaytonCopulaRng&lt; RNG &gt;::ClaytonCopulaRng</definition>
        <argsstring>(const RNG &amp;uniformGenerator, Real theta)</argsstring>
        <name>ClaytonCopulaRng</name>
        <qualifiedname>QuantLib::ClaytonCopulaRng::ClaytonCopulaRng</qualifiedname>
        <param>
          <type>const RNG &amp;</type>
          <declname>uniformGenerator</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/claytoncopularng.hpp" line="40" column="18" bodyfile="ql/experimental/math/claytoncopularng.hpp" bodystart="48" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_clayton_copula_rng_1a88fc33c1fd9ff085bf5a478cf99feb41" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_quant_lib_1_1_sample" kindref="compound">sample_type</ref></type>
        <definition>ClaytonCopulaRng&lt; RNG &gt;::sample_type QuantLib::ClaytonCopulaRng&lt; RNG &gt;::next</definition>
        <argsstring>() const</argsstring>
        <name>next</name>
        <qualifiedname>QuantLib::ClaytonCopulaRng::next</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/claytoncopularng.hpp" line="41" column="21" bodyfile="ql/experimental/math/claytoncopularng.hpp" bodystart="58" bodyend="67"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Clayton copula random-number generator. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/experimental/math/claytoncopularng.hpp" line="36" column="5" bodyfile="ql/experimental/math/claytoncopularng.hpp" bodystart="36" bodyend="45"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_clayton_copula_rng_1ad60a742c892e2576471de66c62265dc8" prot="public" virt="non-virtual"><scope>QuantLib::ClaytonCopulaRng</scope><name>ClaytonCopulaRng</name></member>
      <member refid="class_quant_lib_1_1_clayton_copula_rng_1a88fc33c1fd9ff085bf5a478cf99feb41" prot="public" virt="non-virtual"><scope>QuantLib::ClaytonCopulaRng</scope><name>next</name></member>
      <member refid="class_quant_lib_1_1_clayton_copula_rng_1a87407ac0fd23260e79f13f7c21b24a31" prot="public" virt="non-virtual"><scope>QuantLib::ClaytonCopulaRng</scope><name>sample_type</name></member>
      <member refid="class_quant_lib_1_1_clayton_copula_rng_1aa477de5b00629c7fcad249c2ad2fb995" prot="private" virt="non-virtual"><scope>QuantLib::ClaytonCopulaRng</scope><name>theta_</name></member>
      <member refid="class_quant_lib_1_1_clayton_copula_rng_1a0d8845d82a81592d8452fe3bf29d1a8e" prot="private" virt="non-virtual"><scope>QuantLib::ClaytonCopulaRng</scope><name>uniformGenerator_</name></member>
      <member refid="class_quant_lib_1_1_clayton_copula_rng_1ab401786c9a5118f7115e2d262fca2ef3" prot="public" virt="non-virtual"><scope>QuantLib::ClaytonCopulaRng</scope><name>urng_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

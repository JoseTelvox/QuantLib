<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_adapted_path_payoff" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::AdaptedPathPayoff</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_path_payoff" prot="public" virt="non-virtual">QuantLib::PathPayoff</basecompoundref>
    <innerclass refid="class_quant_lib_1_1_adapted_path_payoff_1_1_valuation_data" prot="public">QuantLib::AdaptedPathPayoff::ValuationData</innerclass>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_adapted_path_payoff_1a29796f11f6f4b5670f0f6b2c2a9d2124" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::AdaptedPathPayoff::value</definition>
        <argsstring>(const Matrix &amp;path, const std::vector&lt; Handle&lt; YieldTermStructure &gt; &gt; &amp;forwardTermStructures, Array &amp;payments, Array &amp;exercises, std::vector&lt; Array &gt; &amp;states) const override</argsstring>
        <name>value</name>
        <qualifiedname>QuantLib::AdaptedPathPayoff::value</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_path_payoff_1a11c4029518bb309bf04bf0510f1ab8fe">value</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &gt; &amp;</type>
          <declname>forwardTermStructures</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>payments</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>exercises</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &gt; &amp;</type>
          <declname>states</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/adaptedpathpayoff.hpp" line="69" column="14" bodyfile="ql/experimental/mcbasket/adaptedpathpayoff.cpp" bodystart="87" bodyend="95"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_adapted_path_payoff_1a6f353e6957ce80614ed9fd1b66f6bfeb" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void QuantLib::AdaptedPathPayoff::operator()</definition>
        <argsstring>(ValuationData &amp;data) const =0</argsstring>
        <name>operator()</name>
        <qualifiedname>QuantLib::AdaptedPathPayoff::operator()</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_adapted_path_payoff_1_1_valuation_data" kindref="compound">ValuationData</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/adaptedpathpayoff.hpp" line="84" column="22"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::AdaptedPathPayoff</label>
        <link refid="class_quant_lib_1_1_adapted_path_payoff"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::PathPayoff</label>
        <link refid="class_quant_lib_1_1_path_payoff"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::AdaptedPathPayoff</label>
        <link refid="class_quant_lib_1_1_adapted_path_payoff"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::PathPayoff</label>
        <link refid="class_quant_lib_1_1_path_payoff"/>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/mcbasket/adaptedpathpayoff.hpp" line="31" column="5" bodyfile="ql/experimental/mcbasket/adaptedpathpayoff.hpp" bodystart="31" bodyend="85"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_path_payoff_1a3d8581999f74e28916a6b7b05b6e67bb" prot="public" virt="virtual"><scope>QuantLib::AdaptedPathPayoff</scope><name>accept</name></member>
      <member refid="class_quant_lib_1_1_path_payoff_1a5a715c52b72f166b5f7570434cf8259f" prot="public" virt="pure-virtual"><scope>QuantLib::AdaptedPathPayoff</scope><name>basisSystemDimension</name></member>
      <member refid="class_quant_lib_1_1_path_payoff_1a7fb09497250b929502c175ff2d6d29c2" prot="public" virt="pure-virtual"><scope>QuantLib::AdaptedPathPayoff</scope><name>description</name></member>
      <member refid="class_quant_lib_1_1_path_payoff_1a5f80b3f28c9ab16267aa017dfaf463e3" prot="public" virt="pure-virtual"><scope>QuantLib::AdaptedPathPayoff</scope><name>name</name></member>
      <member refid="class_quant_lib_1_1_adapted_path_payoff_1a6f353e6957ce80614ed9fd1b66f6bfeb" prot="protected" virt="pure-virtual"><scope>QuantLib::AdaptedPathPayoff</scope><name>operator()</name></member>
      <member refid="class_quant_lib_1_1_adapted_path_payoff_1a29796f11f6f4b5670f0f6b2c2a9d2124" prot="public" virt="virtual"><scope>QuantLib::AdaptedPathPayoff</scope><name>value</name></member>
      <member refid="class_quant_lib_1_1_path_payoff_1a0584ec00e50e0391f5bb7471be435040" prot="public" virt="virtual"><scope>QuantLib::AdaptedPathPayoff</scope><name>~PathPayoff</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

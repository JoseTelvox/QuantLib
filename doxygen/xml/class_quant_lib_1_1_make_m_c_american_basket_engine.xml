<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_make_m_c_american_basket_engine" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::MakeMCAmericanBasketEngine</compoundname>
    <includes refid="mcamericanbasketengine_8hpp" local="no">mcamericanbasketengine.hpp</includes>
    <templateparamlist>
      <param>
        <type>class RNG</type>
        <defval><ref refid="namespace_quant_lib_1a68b9aaf5f0c17983506b1a1db8575ab0" kindref="member">PseudoRandom</ref></defval>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_american_basket_engine_1a2547e2c2e8fcffa5a1c7d6fd0d4791f8" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_stochastic_process_array" kindref="compound">StochasticProcessArray</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;StochasticProcessArray&gt; QuantLib::MakeMCAmericanBasketEngine&lt; RNG &gt;::process_</definition>
        <argsstring></argsstring>
        <name>process_</name>
        <qualifiedname>QuantLib::MakeMCAmericanBasketEngine::process_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mcamericanbasketengine.hpp" line="94" column="25" bodyfile="ql/pricingengines/basket/mcamericanbasketengine.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_american_basket_engine_1aa56ce181a1f2d7ff13c96b088285ba70" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::MakeMCAmericanBasketEngine&lt; RNG &gt;::brownianBridge_</definition>
        <argsstring></argsstring>
        <name>brownianBridge_</name>
        <qualifiedname>QuantLib::MakeMCAmericanBasketEngine::brownianBridge_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mcamericanbasketengine.hpp" line="95" column="14" bodyfile="ql/pricingengines/basket/mcamericanbasketengine.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_american_basket_engine_1a8fba6caced36ecfd4ca5e71cadb345d7" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::MakeMCAmericanBasketEngine&lt; RNG &gt;::antithetic_</definition>
        <argsstring></argsstring>
        <name>antithetic_</name>
        <qualifiedname>QuantLib::MakeMCAmericanBasketEngine::antithetic_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mcamericanbasketengine.hpp" line="95" column="31" bodyfile="ql/pricingengines/basket/mcamericanbasketengine.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_american_basket_engine_1abc3ceafaf856424376643fd939d1a702" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCAmericanBasketEngine&lt; RNG &gt;::steps_</definition>
        <argsstring></argsstring>
        <name>steps_</name>
        <qualifiedname>QuantLib::MakeMCAmericanBasketEngine::steps_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mcamericanbasketengine.hpp" line="96" column="14" bodyfile="ql/pricingengines/basket/mcamericanbasketengine.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_american_basket_engine_1aeeaa102331ed8892768d0a06813196fc" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCAmericanBasketEngine&lt; RNG &gt;::stepsPerYear_</definition>
        <argsstring></argsstring>
        <name>stepsPerYear_</name>
        <qualifiedname>QuantLib::MakeMCAmericanBasketEngine::stepsPerYear_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mcamericanbasketengine.hpp" line="96" column="21" bodyfile="ql/pricingengines/basket/mcamericanbasketengine.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_american_basket_engine_1a0270d75b4d58a85af01eb742b520d2bd" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCAmericanBasketEngine&lt; RNG &gt;::samples_</definition>
        <argsstring></argsstring>
        <name>samples_</name>
        <qualifiedname>QuantLib::MakeMCAmericanBasketEngine::samples_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mcamericanbasketengine.hpp" line="96" column="35" bodyfile="ql/pricingengines/basket/mcamericanbasketengine.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_american_basket_engine_1a281b500b634ec43e9759316947935a9e" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCAmericanBasketEngine&lt; RNG &gt;::maxSamples_</definition>
        <argsstring></argsstring>
        <name>maxSamples_</name>
        <qualifiedname>QuantLib::MakeMCAmericanBasketEngine::maxSamples_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mcamericanbasketengine.hpp" line="96" column="44" bodyfile="ql/pricingengines/basket/mcamericanbasketengine.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_american_basket_engine_1a5be8477adcc60db69b0009311fbede55" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCAmericanBasketEngine&lt; RNG &gt;::calibrationSamples_</definition>
        <argsstring></argsstring>
        <name>calibrationSamples_</name>
        <qualifiedname>QuantLib::MakeMCAmericanBasketEngine::calibrationSamples_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mcamericanbasketengine.hpp" line="96" column="56" bodyfile="ql/pricingengines/basket/mcamericanbasketengine.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_american_basket_engine_1a70e213575e37b61ed0ad84e39223fd47" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCAmericanBasketEngine&lt; RNG &gt;::polynomialOrder_</definition>
        <argsstring></argsstring>
        <name>polynomialOrder_</name>
        <qualifiedname>QuantLib::MakeMCAmericanBasketEngine::polynomialOrder_</qualifiedname>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mcamericanbasketengine.hpp" line="97" column="13" bodyfile="ql/pricingengines/basket/mcamericanbasketengine.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_american_basket_engine_1a0a00d191e5bcc53c58a2969d435581b7" prot="private" static="no" mutable="no">
        <type>LsmBasisSystem::PolynomialType</type>
        <definition>LsmBasisSystem::PolynomialType QuantLib::MakeMCAmericanBasketEngine&lt; RNG &gt;::polynomialType_</definition>
        <argsstring></argsstring>
        <name>polynomialType_</name>
        <qualifiedname>QuantLib::MakeMCAmericanBasketEngine::polynomialType_</qualifiedname>
        <initializer>= LsmBasisSystem::Monomial</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mcamericanbasketengine.hpp" line="98" column="40" bodyfile="ql/pricingengines/basket/mcamericanbasketengine.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_american_basket_engine_1ac01226fe81b09d1fafaa65baa91fa494" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::MakeMCAmericanBasketEngine&lt; RNG &gt;::tolerance_</definition>
        <argsstring></argsstring>
        <name>tolerance_</name>
        <qualifiedname>QuantLib::MakeMCAmericanBasketEngine::tolerance_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mcamericanbasketengine.hpp" line="99" column="14" bodyfile="ql/pricingengines/basket/mcamericanbasketengine.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_american_basket_engine_1afc92ed4b7cf8f6d66c482becadc509c8" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
        <definition>BigNatural QuantLib::MakeMCAmericanBasketEngine&lt; RNG &gt;::seed_</definition>
        <argsstring></argsstring>
        <name>seed_</name>
        <qualifiedname>QuantLib::MakeMCAmericanBasketEngine::seed_</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mcamericanbasketengine.hpp" line="100" column="20" bodyfile="ql/pricingengines/basket/mcamericanbasketengine.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_american_basket_engine_1a870be003ea50a50ea931271be5f1dae0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::MakeMCAmericanBasketEngine&lt; RNG &gt;::MakeMCAmericanBasketEngine</definition>
        <argsstring>(ext::shared_ptr&lt; StochasticProcessArray &gt;)</argsstring>
        <name>MakeMCAmericanBasketEngine</name>
        <qualifiedname>QuantLib::MakeMCAmericanBasketEngine::MakeMCAmericanBasketEngine</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_stochastic_process_array" kindref="compound">StochasticProcessArray</ref> &gt;</type>
          <defname>process</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mcamericanbasketengine.hpp" line="77" column="9" bodyfile="ql/pricingengines/basket/mcamericanbasketengine.hpp" bodystart="193" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_american_basket_engine_1a94399a51ca876b176ff91c1fa3934ee4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_american_basket_engine" kindref="compound">MakeMCAmericanBasketEngine</ref> &amp;</type>
        <definition>MakeMCAmericanBasketEngine&lt; RNG &gt; &amp; QuantLib::MakeMCAmericanBasketEngine&lt; RNG &gt;::withSteps</definition>
        <argsstring>(Size steps)</argsstring>
        <name>withSteps</name>
        <qualifiedname>QuantLib::MakeMCAmericanBasketEngine::withSteps</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mcamericanbasketengine.hpp" line="79" column="36" bodyfile="ql/pricingengines/basket/mcamericanbasketengine.hpp" bodystart="201" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_american_basket_engine_1a92fbae2717b2126c95bf2f80cbfeaeb2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_american_basket_engine" kindref="compound">MakeMCAmericanBasketEngine</ref> &amp;</type>
        <definition>MakeMCAmericanBasketEngine&lt; RNG &gt; &amp; QuantLib::MakeMCAmericanBasketEngine&lt; RNG &gt;::withStepsPerYear</definition>
        <argsstring>(Size steps)</argsstring>
        <name>withStepsPerYear</name>
        <qualifiedname>QuantLib::MakeMCAmericanBasketEngine::withStepsPerYear</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mcamericanbasketengine.hpp" line="80" column="36" bodyfile="ql/pricingengines/basket/mcamericanbasketengine.hpp" bodystart="208" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_american_basket_engine_1a45c10942210fdd6f6eb0b755e7f7098a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_american_basket_engine" kindref="compound">MakeMCAmericanBasketEngine</ref> &amp;</type>
        <definition>MakeMCAmericanBasketEngine&lt; RNG &gt; &amp; QuantLib::MakeMCAmericanBasketEngine&lt; RNG &gt;::withBrownianBridge</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>withBrownianBridge</name>
        <qualifiedname>QuantLib::MakeMCAmericanBasketEngine::withBrownianBridge</qualifiedname>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mcamericanbasketengine.hpp" line="81" column="36" bodyfile="ql/pricingengines/basket/mcamericanbasketengine.hpp" bodystart="215" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_american_basket_engine_1ab2fe62e25f242f6d5144738c9da552a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_american_basket_engine" kindref="compound">MakeMCAmericanBasketEngine</ref> &amp;</type>
        <definition>MakeMCAmericanBasketEngine&lt; RNG &gt; &amp; QuantLib::MakeMCAmericanBasketEngine&lt; RNG &gt;::withAntitheticVariate</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>withAntitheticVariate</name>
        <qualifiedname>QuantLib::MakeMCAmericanBasketEngine::withAntitheticVariate</qualifiedname>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mcamericanbasketengine.hpp" line="82" column="36" bodyfile="ql/pricingengines/basket/mcamericanbasketengine.hpp" bodystart="222" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_american_basket_engine_1afb17129367cf99ad01626491a16a24c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_american_basket_engine" kindref="compound">MakeMCAmericanBasketEngine</ref> &amp;</type>
        <definition>MakeMCAmericanBasketEngine&lt; RNG &gt; &amp; QuantLib::MakeMCAmericanBasketEngine&lt; RNG &gt;::withSamples</definition>
        <argsstring>(Size samples)</argsstring>
        <name>withSamples</name>
        <qualifiedname>QuantLib::MakeMCAmericanBasketEngine::withSamples</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mcamericanbasketengine.hpp" line="83" column="36" bodyfile="ql/pricingengines/basket/mcamericanbasketengine.hpp" bodystart="229" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_american_basket_engine_1a11cc5379136b8cf40ab00eeaf592998d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_american_basket_engine" kindref="compound">MakeMCAmericanBasketEngine</ref> &amp;</type>
        <definition>MakeMCAmericanBasketEngine&lt; RNG &gt; &amp; QuantLib::MakeMCAmericanBasketEngine&lt; RNG &gt;::withAbsoluteTolerance</definition>
        <argsstring>(Real tolerance)</argsstring>
        <name>withAbsoluteTolerance</name>
        <qualifiedname>QuantLib::MakeMCAmericanBasketEngine::withAbsoluteTolerance</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>tolerance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mcamericanbasketengine.hpp" line="84" column="36" bodyfile="ql/pricingengines/basket/mcamericanbasketengine.hpp" bodystart="238" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_american_basket_engine_1a41a88392bffb5f1e03caf63e9bd1fa8e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_american_basket_engine" kindref="compound">MakeMCAmericanBasketEngine</ref> &amp;</type>
        <definition>MakeMCAmericanBasketEngine&lt; RNG &gt; &amp; QuantLib::MakeMCAmericanBasketEngine&lt; RNG &gt;::withMaxSamples</definition>
        <argsstring>(Size samples)</argsstring>
        <name>withMaxSamples</name>
        <qualifiedname>QuantLib::MakeMCAmericanBasketEngine::withMaxSamples</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mcamericanbasketengine.hpp" line="85" column="36" bodyfile="ql/pricingengines/basket/mcamericanbasketengine.hpp" bodystart="250" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_american_basket_engine_1abc40345bb871b86127e6017cfd457bcd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_american_basket_engine" kindref="compound">MakeMCAmericanBasketEngine</ref> &amp;</type>
        <definition>MakeMCAmericanBasketEngine&lt; RNG &gt; &amp; QuantLib::MakeMCAmericanBasketEngine&lt; RNG &gt;::withSeed</definition>
        <argsstring>(BigNatural seed)</argsstring>
        <name>withSeed</name>
        <qualifiedname>QuantLib::MakeMCAmericanBasketEngine::withSeed</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mcamericanbasketengine.hpp" line="86" column="36" bodyfile="ql/pricingengines/basket/mcamericanbasketengine.hpp" bodystart="257" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_american_basket_engine_1ac7027fdb761a8d016c9ef8a7f9abf8d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_american_basket_engine" kindref="compound">MakeMCAmericanBasketEngine</ref> &amp;</type>
        <definition>MakeMCAmericanBasketEngine&lt; RNG &gt; &amp; QuantLib::MakeMCAmericanBasketEngine&lt; RNG &gt;::withCalibrationSamples</definition>
        <argsstring>(Size samples)</argsstring>
        <name>withCalibrationSamples</name>
        <qualifiedname>QuantLib::MakeMCAmericanBasketEngine::withCalibrationSamples</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mcamericanbasketengine.hpp" line="87" column="36" bodyfile="ql/pricingengines/basket/mcamericanbasketengine.hpp" bodystart="264" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_american_basket_engine_1a17cdcd4469c776eab6b56933f1a07c05" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_american_basket_engine" kindref="compound">MakeMCAmericanBasketEngine</ref> &amp;</type>
        <definition>MakeMCAmericanBasketEngine&lt; RNG &gt; &amp; QuantLib::MakeMCAmericanBasketEngine&lt; RNG &gt;::withPolynomialOrder</definition>
        <argsstring>(Size polynmOrder)</argsstring>
        <name>withPolynomialOrder</name>
        <qualifiedname>QuantLib::MakeMCAmericanBasketEngine::withPolynomialOrder</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>polynmOrder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mcamericanbasketengine.hpp" line="88" column="36" bodyfile="ql/pricingengines/basket/mcamericanbasketengine.hpp" bodystart="271" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_american_basket_engine_1a3308ba14ea0c21f5b97becc5c727eee7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_american_basket_engine" kindref="compound">MakeMCAmericanBasketEngine</ref> &amp;</type>
        <definition>MakeMCAmericanBasketEngine&lt; RNG &gt; &amp; QuantLib::MakeMCAmericanBasketEngine&lt; RNG &gt;::withBasisSystem</definition>
        <argsstring>(LsmBasisSystem::PolynomialType polynomialType)</argsstring>
        <name>withBasisSystem</name>
        <qualifiedname>QuantLib::MakeMCAmericanBasketEngine::withBasisSystem</qualifiedname>
        <param>
          <type>LsmBasisSystem::PolynomialType</type>
          <declname>polynomialType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mcamericanbasketengine.hpp" line="89" column="36" bodyfile="ql/pricingengines/basket/mcamericanbasketengine.hpp" bodystart="278" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_american_basket_engine_1aad4454c2d88ec2b382257ba28388218f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::MakeMCAmericanBasketEngine&lt; RNG &gt;::operator ext::shared_ptr&lt; PricingEngine &gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator ext::shared_ptr&lt; PricingEngine &gt;</name>
        <qualifiedname>QuantLib::MakeMCAmericanBasketEngine::shared_ptr&lt; PricingEngine &gt;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/mcamericanbasketengine.hpp" line="92" column="9" bodyfile="ql/pricingengines/basket/mcamericanbasketengine.hpp" bodystart="286" bodyend="304"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Monte Carlo American basket-option engine factory. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/pricingengines/basket/mcamericanbasketengine.hpp" line="75" column="5" bodyfile="ql/pricingengines/basket/mcamericanbasketengine.hpp" bodystart="75" bodyend="101"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_make_m_c_american_basket_engine_1a8fba6caced36ecfd4ca5e71cadb345d7" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCAmericanBasketEngine</scope><name>antithetic_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_basket_engine_1aa56ce181a1f2d7ff13c96b088285ba70" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCAmericanBasketEngine</scope><name>brownianBridge_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_basket_engine_1a5be8477adcc60db69b0009311fbede55" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCAmericanBasketEngine</scope><name>calibrationSamples_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_basket_engine_1a870be003ea50a50ea931271be5f1dae0" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCAmericanBasketEngine</scope><name>MakeMCAmericanBasketEngine</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_basket_engine_1a281b500b634ec43e9759316947935a9e" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCAmericanBasketEngine</scope><name>maxSamples_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_basket_engine_1aad4454c2d88ec2b382257ba28388218f" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCAmericanBasketEngine</scope><name>operator ext::shared_ptr&lt; PricingEngine &gt;</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_basket_engine_1a70e213575e37b61ed0ad84e39223fd47" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCAmericanBasketEngine</scope><name>polynomialOrder_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_basket_engine_1a0a00d191e5bcc53c58a2969d435581b7" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCAmericanBasketEngine</scope><name>polynomialType_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_basket_engine_1a2547e2c2e8fcffa5a1c7d6fd0d4791f8" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCAmericanBasketEngine</scope><name>process_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_basket_engine_1a0270d75b4d58a85af01eb742b520d2bd" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCAmericanBasketEngine</scope><name>samples_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_basket_engine_1afc92ed4b7cf8f6d66c482becadc509c8" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCAmericanBasketEngine</scope><name>seed_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_basket_engine_1abc3ceafaf856424376643fd939d1a702" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCAmericanBasketEngine</scope><name>steps_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_basket_engine_1aeeaa102331ed8892768d0a06813196fc" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCAmericanBasketEngine</scope><name>stepsPerYear_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_basket_engine_1ac01226fe81b09d1fafaa65baa91fa494" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCAmericanBasketEngine</scope><name>tolerance_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_basket_engine_1a11cc5379136b8cf40ab00eeaf592998d" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCAmericanBasketEngine</scope><name>withAbsoluteTolerance</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_basket_engine_1ab2fe62e25f242f6d5144738c9da552a5" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCAmericanBasketEngine</scope><name>withAntitheticVariate</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_basket_engine_1a3308ba14ea0c21f5b97becc5c727eee7" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCAmericanBasketEngine</scope><name>withBasisSystem</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_basket_engine_1a45c10942210fdd6f6eb0b755e7f7098a" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCAmericanBasketEngine</scope><name>withBrownianBridge</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_basket_engine_1ac7027fdb761a8d016c9ef8a7f9abf8d3" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCAmericanBasketEngine</scope><name>withCalibrationSamples</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_basket_engine_1a41a88392bffb5f1e03caf63e9bd1fa8e" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCAmericanBasketEngine</scope><name>withMaxSamples</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_basket_engine_1a17cdcd4469c776eab6b56933f1a07c05" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCAmericanBasketEngine</scope><name>withPolynomialOrder</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_basket_engine_1afb17129367cf99ad01626491a16a24c8" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCAmericanBasketEngine</scope><name>withSamples</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_basket_engine_1abc40345bb871b86127e6017cfd457bcd" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCAmericanBasketEngine</scope><name>withSeed</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_basket_engine_1a94399a51ca876b176ff91c1fa3934ee4" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCAmericanBasketEngine</scope><name>withSteps</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_american_basket_engine_1a92fbae2717b2126c95bf2f80cbfeaeb2" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCAmericanBasketEngine</scope><name>withStepsPerYear</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_flat_smile_section" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::FlatSmileSection</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_smile_section" prot="public" virt="non-virtual">QuantLib::SmileSection</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_flat_smile_section_1ac353b61ea8e5506d63847d3e0465dce4" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
        <definition>Volatility QuantLib::FlatSmileSection::vol_</definition>
        <argsstring></argsstring>
        <name>vol_</name>
        <qualifiedname>QuantLib::FlatSmileSection::vol_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/flatsmilesection.hpp" line="58" column="20" bodyfile="ql/termstructures/volatility/flatsmilesection.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_flat_smile_section_1a4bf9ca8cc84ada2e367f23f00fb024e7" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::FlatSmileSection::atmLevel_</definition>
        <argsstring></argsstring>
        <name>atmLevel_</name>
        <qualifiedname>QuantLib::FlatSmileSection::atmLevel_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/flatsmilesection.hpp" line="59" column="14" bodyfile="ql/termstructures/volatility/flatsmilesection.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_flat_smile_section_1adf55dea47a7ae3e3e6bf93bb315943a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FlatSmileSection::FlatSmileSection</definition>
        <argsstring>(const Date &amp;d, Volatility vol, const DayCounter &amp;dc, const Date &amp;referenceDate=Date(), Real atmLevel=Null&lt; Rate &gt;(), VolatilityType type=ShiftedLognormal, Real shift=0.0)</argsstring>
        <name>FlatSmileSection</name>
        <qualifiedname>QuantLib::FlatSmileSection::FlatSmileSection</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
          <declname>vol</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>referenceDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>atmLevel</declname>
          <defval><ref refid="class_quant_lib_1_1_null" kindref="compound">Null</ref>&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;()</defval>
        </param>
        <param>
          <type>VolatilityType</type>
          <declname>type</declname>
          <defval>ShiftedLognormal</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>shift</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/flatsmilesection.hpp" line="36" column="9" bodyfile="ql/termstructures/volatility/flatsmilesection.cpp" bodystart="27" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_flat_smile_section_1acec55abab004abf9bfcf9bb80f685e92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FlatSmileSection::FlatSmileSection</definition>
        <argsstring>(Time exerciseTime, Volatility vol, const DayCounter &amp;dc, Real atmLevel=Null&lt; Rate &gt;(), VolatilityType type=ShiftedLognormal, Real shift=0.0)</argsstring>
        <name>FlatSmileSection</name>
        <qualifiedname>QuantLib::FlatSmileSection::FlatSmileSection</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>exerciseTime</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
          <declname>vol</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>atmLevel</declname>
          <defval><ref refid="class_quant_lib_1_1_null" kindref="compound">Null</ref>&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;()</defval>
        </param>
        <param>
          <type>VolatilityType</type>
          <declname>type</declname>
          <defval>ShiftedLognormal</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>shift</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/flatsmilesection.hpp" line="43" column="9" bodyfile="ql/termstructures/volatility/flatsmilesection.cpp" bodystart="37" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_flat_smile_section_1a2fd9e282db345d09402cabbf5bfa3fc8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::FlatSmileSection::minStrike</definition>
        <argsstring>() const override</argsstring>
        <name>minStrike</name>
        <qualifiedname>QuantLib::FlatSmileSection::minStrike</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_smile_section_1a54bb5cd9f6913f7d69efc85d51af2624">minStrike</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/flatsmilesection.hpp" line="50" column="14" bodyfile="ql/termstructures/volatility/flatsmilesection.hpp" bodystart="62" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_flat_smile_section_1a913c2296661e80068a1a9a9c9077dcb5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::FlatSmileSection::maxStrike</definition>
        <argsstring>() const override</argsstring>
        <name>maxStrike</name>
        <qualifiedname>QuantLib::FlatSmileSection::maxStrike</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_smile_section_1aa74a46c0a15e98112c1f9afaad9e6604">maxStrike</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/flatsmilesection.hpp" line="51" column="14" bodyfile="ql/termstructures/volatility/flatsmilesection.hpp" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_flat_smile_section_1ad3aeb65ef8e66d14c7590708072fb0d1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::FlatSmileSection::atmLevel</definition>
        <argsstring>() const override</argsstring>
        <name>atmLevel</name>
        <qualifiedname>QuantLib::FlatSmileSection::atmLevel</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_smile_section_1a7ff3d003fcdcf207cde30c3469b6422a">atmLevel</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/flatsmilesection.hpp" line="52" column="14" bodyfile="ql/termstructures/volatility/flatsmilesection.hpp" bodystart="70" bodyend="72"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_flat_smile_section_1a068778b7aac51f86900bef15fabcaf98" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
        <definition>Volatility QuantLib::FlatSmileSection::volatilityImpl</definition>
        <argsstring>(Rate) const override</argsstring>
        <name>volatilityImpl</name>
        <qualifiedname>QuantLib::FlatSmileSection::volatilityImpl</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_smile_section_1a14bf773bdfb690c9b9e9cbe61f14c2bf">volatilityImpl</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/flatsmilesection.hpp" line="55" column="20" bodyfile="ql/termstructures/volatility/flatsmilesection.hpp" bodystart="74" bodyend="76"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::FlatSmileSection</label>
        <link refid="class_quant_lib_1_1_flat_smile_section"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>QuantLib::SmileSection</label>
        <link refid="class_quant_lib_1_1_smile_section"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::FlatSmileSection</label>
        <link refid="class_quant_lib_1_1_flat_smile_section"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>QuantLib::SmileSection</label>
        <link refid="class_quant_lib_1_1_smile_section"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/termstructures/volatility/flatsmilesection.hpp" line="34" column="5" bodyfile="ql/termstructures/volatility/flatsmilesection.hpp" bodystart="34" bodyend="60"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_flat_smile_section_1ad3aeb65ef8e66d14c7590708072fb0d1" prot="public" virt="virtual"><scope>QuantLib::FlatSmileSection</scope><name>atmLevel</name></member>
      <member refid="class_quant_lib_1_1_flat_smile_section_1a4bf9ca8cc84ada2e367f23f00fb024e7" prot="private" virt="non-virtual"><scope>QuantLib::FlatSmileSection</scope><name>atmLevel_</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a9d62efde0aa0bc8b6628ab562b5c479d" prot="public" virt="virtual"><scope>QuantLib::FlatSmileSection</scope><name>dayCounter</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::FlatSmileSection</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a3a4e90440ae22c4c9c3e9253b0199a82" prot="public" virt="virtual"><scope>QuantLib::FlatSmileSection</scope><name>density</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a9ecdb328b2b90432da8a4429c4d56f06" prot="public" virt="virtual"><scope>QuantLib::FlatSmileSection</scope><name>digitalOptionPrice</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1ac9b9e60511fc940cd8d74fbbbcd87b5f" prot="public" virt="virtual"><scope>QuantLib::FlatSmileSection</scope><name>exerciseDate</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a7bf1b552a5e93d12631f01a5fa59eb58" prot="public" virt="virtual"><scope>QuantLib::FlatSmileSection</scope><name>exerciseTime</name></member>
      <member refid="class_quant_lib_1_1_flat_smile_section_1adf55dea47a7ae3e3e6bf93bb315943a6" prot="public" virt="non-virtual"><scope>QuantLib::FlatSmileSection</scope><name>FlatSmileSection</name></member>
      <member refid="class_quant_lib_1_1_flat_smile_section_1acec55abab004abf9bfcf9bb80f685e92" prot="public" virt="non-virtual"><scope>QuantLib::FlatSmileSection</scope><name>FlatSmileSection</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a7fba48f0a4277b91b0d0768d262affdb" prot="protected" virt="virtual"><scope>QuantLib::FlatSmileSection</scope><name>initializeExerciseTime</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::FlatSmileSection</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_flat_smile_section_1a913c2296661e80068a1a9a9c9077dcb5" prot="public" virt="virtual"><scope>QuantLib::FlatSmileSection</scope><name>maxStrike</name></member>
      <member refid="class_quant_lib_1_1_flat_smile_section_1a2fd9e282db345d09402cabbf5bfa3fc8" prot="public" virt="virtual"><scope>QuantLib::FlatSmileSection</scope><name>minStrike</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::FlatSmileSection</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::FlatSmileSection</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::SmileSection::"><scope>QuantLib::FlatSmileSection</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::SmileSection::"><scope>QuantLib::FlatSmileSection</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::FlatSmileSection</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::FlatSmileSection</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::FlatSmileSection</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::SmileSection::"><scope>QuantLib::FlatSmileSection</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::SmileSection::QuantLib::Observer::"><scope>QuantLib::FlatSmileSection</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1abf5fbad0f8d32a1b644ec3c23927061b" prot="public" virt="virtual"><scope>QuantLib::FlatSmileSection</scope><name>optionPrice</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a42fe316ed2696fb7b8b6fb8853b5bae0" prot="public" virt="virtual"><scope>QuantLib::FlatSmileSection</scope><name>referenceDate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::FlatSmileSection</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::FlatSmileSection</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a3fbddba097e2b742fe8800217ed613cc" prot="public" virt="virtual"><scope>QuantLib::FlatSmileSection</scope><name>shift</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a6c2ea1d64020c754251c89372fe46686" prot="public" virt="non-virtual"><scope>QuantLib::FlatSmileSection</scope><name>SmileSection</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1aae4f281efa6a9f4b5cea8165363df3b5" prot="public" virt="non-virtual"><scope>QuantLib::FlatSmileSection</scope><name>SmileSection</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a67cece6b7c60c0a5d7729bea038fe85c" prot="public" virt="non-virtual"><scope>QuantLib::FlatSmileSection</scope><name>SmileSection</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::FlatSmileSection</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::FlatSmileSection</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1adecc5abf2867e2291878329b0256b08a" prot="public" virt="virtual"><scope>QuantLib::FlatSmileSection</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a5bab1e23eb1c4d12f927c7b80cafa550" prot="public" virt="non-virtual"><scope>QuantLib::FlatSmileSection</scope><name>variance</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a680162f5de7f231d1ff2b5fb76cfc54a" prot="protected" virt="virtual"><scope>QuantLib::FlatSmileSection</scope><name>varianceImpl</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a7186ee49bc91697dcca75fd5204629be" prot="public" virt="virtual"><scope>QuantLib::FlatSmileSection</scope><name>vega</name></member>
      <member refid="class_quant_lib_1_1_flat_smile_section_1ac353b61ea8e5506d63847d3e0465dce4" prot="private" virt="non-virtual"><scope>QuantLib::FlatSmileSection</scope><name>vol_</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a0e1a9e52460bb881952fc9d9bce51a98" prot="public" virt="non-virtual"><scope>QuantLib::FlatSmileSection</scope><name>volatility</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a672a3e1398986f0a9c922b7b6bf3233c" prot="public" virt="non-virtual"><scope>QuantLib::FlatSmileSection</scope><name>volatility</name></member>
      <member refid="class_quant_lib_1_1_flat_smile_section_1a068778b7aac51f86900bef15fabcaf98" prot="protected" virt="virtual"><scope>QuantLib::FlatSmileSection</scope><name>volatilityImpl</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1aac4cb2b17d273eecb0508f3a5c050a22" prot="public" virt="virtual"><scope>QuantLib::FlatSmileSection</scope><name>volatilityType</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::FlatSmileSection</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::FlatSmileSection</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a7c6cb707ed5e58e5a1fa92efc3a9a88f" prot="public" virt="non-virtual"><scope>QuantLib::FlatSmileSection</scope><name>~SmileSection</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

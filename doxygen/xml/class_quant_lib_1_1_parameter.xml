<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_parameter" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::Parameter</compoundname>
    <derivedcompoundref refid="class_quant_lib_1_1_constant_parameter" prot="public" virt="non-virtual">QuantLib::ConstantParameter</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_interpolation_parameter" prot="public" virt="non-virtual">QuantLib::InterpolationParameter</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_null_parameter" prot="public" virt="non-virtual">QuantLib::NullParameter</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_piecewise_constant_parameter" prot="public" virt="non-virtual">QuantLib::PiecewiseConstantParameter</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_term_structure_fitting_parameter" prot="public" virt="non-virtual">QuantLib::TermStructureFittingParameter</derivedcompoundref>
    <includes refid="parameter_8hpp" local="no">parameter.hpp</includes>
    <innerclass refid="class_quant_lib_1_1_parameter_1_1_impl" prot="protected">QuantLib::Parameter::Impl</innerclass>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_parameter_1aa1f594b569e9b321a87d6650b2c3fcfe" prot="protected" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_parameter_1_1_impl" kindref="compound">Impl</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;Impl&gt; QuantLib::Parameter::impl_</definition>
        <argsstring></argsstring>
        <name>impl_</name>
        <qualifiedname>QuantLib::Parameter::impl_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/parameter.hpp" line="46" column="25" bodyfile="ql/models/parameter.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_parameter_1a9b9e9c152acebb4a32a39b193e6e0645" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::Parameter::params_</definition>
        <argsstring></argsstring>
        <name>params_</name>
        <qualifiedname>QuantLib::Parameter::params_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/parameter.hpp" line="66" column="15" bodyfile="ql/models/parameter.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_parameter_1a196df23618d764f9f8c9fc20f7a70376" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_constraint" kindref="compound">Constraint</ref></type>
        <definition>Constraint QuantLib::Parameter::constraint_</definition>
        <argsstring></argsstring>
        <name>constraint_</name>
        <qualifiedname>QuantLib::Parameter::constraint_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/parameter.hpp" line="67" column="20" bodyfile="ql/models/parameter.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_parameter_1ae9dfec4975919aca7890717ed1a300cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Parameter::Parameter</definition>
        <argsstring>()</argsstring>
        <name>Parameter</name>
        <qualifiedname>QuantLib::Parameter::Parameter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/parameter.hpp" line="48" column="9" bodyfile="ql/models/parameter.hpp" bodystart="48" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_parameter_1a751733d0526c8161fdc3c151a66cea5b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
        <definition>const Array &amp; QuantLib::Parameter::params</definition>
        <argsstring>() const</argsstring>
        <name>params</name>
        <qualifiedname>QuantLib::Parameter::params</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/parameter.hpp" line="50" column="21" bodyfile="ql/models/parameter.hpp" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_parameter_1a1e28f9ff5c6873a8d43b5b256772832c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::Parameter::setParam</definition>
        <argsstring>(Size i, Real x)</argsstring>
        <name>setParam</name>
        <qualifiedname>QuantLib::Parameter::setParam</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/parameter.hpp" line="51" column="14" bodyfile="ql/models/parameter.hpp" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_parameter_1a6bc4c72e11da0e3aaeb8415f96f255c2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::Parameter::testParams</definition>
        <argsstring>(const Array &amp;params) const</argsstring>
        <name>testParams</name>
        <qualifiedname>QuantLib::Parameter::testParams</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/parameter.hpp" line="52" column="14" bodyfile="ql/models/parameter.hpp" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_parameter_1a640715c5e80f9f45bc685b79bf347cc1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::Parameter::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>QuantLib::Parameter::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/parameter.hpp" line="55" column="14" bodyfile="ql/models/parameter.hpp" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_parameter_1a22f3ab370160122e7b6de16a10c7f5e7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Parameter::operator()</definition>
        <argsstring>(Time t) const</argsstring>
        <name>operator()</name>
        <qualifiedname>QuantLib::Parameter::operator()</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/parameter.hpp" line="56" column="14" bodyfile="ql/models/parameter.hpp" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_parameter_1aeae65f2c29c269c9787c2432ce826321" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_parameter_1_1_impl" kindref="compound">Impl</ref> &gt; &amp;</type>
        <definition>const ext::shared_ptr&lt; Impl &gt; &amp; QuantLib::Parameter::implementation</definition>
        <argsstring>() const</argsstring>
        <name>implementation</name>
        <qualifiedname>QuantLib::Parameter::implementation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/parameter.hpp" line="59" column="31" bodyfile="ql/models/parameter.hpp" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_parameter_1a9a4dd5e6f14c6374d034e91c87070c7b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_constraint" kindref="compound">Constraint</ref> &amp;</type>
        <definition>const Constraint &amp; QuantLib::Parameter::constraint</definition>
        <argsstring>() const</argsstring>
        <name>constraint</name>
        <qualifiedname>QuantLib::Parameter::constraint</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/parameter.hpp" line="62" column="26" bodyfile="ql/models/parameter.hpp" bodystart="62" bodyend="62"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_parameter_1a8cd62fbc61a60bbb81b843c35ee4fc03" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Parameter::Parameter</definition>
        <argsstring>(Size size, ext::shared_ptr&lt; Impl &gt; impl, Constraint constraint)</argsstring>
        <name>Parameter</name>
        <qualifiedname>QuantLib::Parameter::Parameter</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_parameter_1_1_impl" kindref="compound">Impl</ref> &gt;</type>
          <declname>impl</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_constraint" kindref="compound">Constraint</ref></type>
          <declname>constraint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/parameter.hpp" line="64" column="9" bodyfile="ql/models/parameter.hpp" bodystart="64" bodyend="65"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Base class for model arguments. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::ConstantParameter</label>
        <link refid="class_quant_lib_1_1_constant_parameter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::ExtendedCoxIngersollRoss::FittingParameter</label>
        <link refid="class_quant_lib_1_1_extended_cox_ingersoll_ross_1_1_fitting_parameter"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::G2::FittingParameter</label>
        <link refid="class_quant_lib_1_1_g2_1_1_fitting_parameter"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QuantLib::GeneralizedHullWhite::FittingParameter</label>
        <link refid="class_quant_lib_1_1_generalized_hull_white_1_1_fitting_parameter"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QuantLib::HullWhite::FittingParameter</label>
        <link refid="class_quant_lib_1_1_hull_white_1_1_fitting_parameter"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::InterpolationParameter</label>
        <link refid="class_quant_lib_1_1_interpolation_parameter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::NullParameter</label>
        <link refid="class_quant_lib_1_1_null_parameter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::Parameter</label>
        <link refid="class_quant_lib_1_1_parameter"/>
      </node>
      <node id="5">
        <label>QuantLib::PiecewiseConstantParameter</label>
        <link refid="class_quant_lib_1_1_piecewise_constant_parameter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::TermStructureFittingParameter</label>
        <link refid="class_quant_lib_1_1_term_structure_fitting_parameter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::Array</label>
        <link refid="class_quant_lib_1_1_array"/>
      </node>
      <node id="3">
        <label>QuantLib::Constraint</label>
        <link refid="class_quant_lib_1_1_constraint"/>
      </node>
      <node id="1">
        <label>QuantLib::Parameter</label>
        <link refid="class_quant_lib_1_1_parameter"/>
        <childnode refid="2" relation="usage">
          <edgelabel>params_</edgelabel>
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>constraint_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/models/parameter.hpp" line="38" column="5" bodyfile="ql/models/parameter.hpp" bodystart="38" bodyend="68"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_parameter_1a9a4dd5e6f14c6374d034e91c87070c7b" prot="public" virt="non-virtual"><scope>QuantLib::Parameter</scope><name>constraint</name></member>
      <member refid="class_quant_lib_1_1_parameter_1a196df23618d764f9f8c9fc20f7a70376" prot="protected" virt="non-virtual"><scope>QuantLib::Parameter</scope><name>constraint_</name></member>
      <member refid="class_quant_lib_1_1_parameter_1aa1f594b569e9b321a87d6650b2c3fcfe" prot="protected" virt="non-virtual"><scope>QuantLib::Parameter</scope><name>impl_</name></member>
      <member refid="class_quant_lib_1_1_parameter_1aeae65f2c29c269c9787c2432ce826321" prot="public" virt="non-virtual"><scope>QuantLib::Parameter</scope><name>implementation</name></member>
      <member refid="class_quant_lib_1_1_parameter_1a22f3ab370160122e7b6de16a10c7f5e7" prot="public" virt="non-virtual"><scope>QuantLib::Parameter</scope><name>operator()</name></member>
      <member refid="class_quant_lib_1_1_parameter_1ae9dfec4975919aca7890717ed1a300cb" prot="public" virt="non-virtual"><scope>QuantLib::Parameter</scope><name>Parameter</name></member>
      <member refid="class_quant_lib_1_1_parameter_1a8cd62fbc61a60bbb81b843c35ee4fc03" prot="protected" virt="non-virtual"><scope>QuantLib::Parameter</scope><name>Parameter</name></member>
      <member refid="class_quant_lib_1_1_parameter_1a751733d0526c8161fdc3c151a66cea5b" prot="public" virt="non-virtual"><scope>QuantLib::Parameter</scope><name>params</name></member>
      <member refid="class_quant_lib_1_1_parameter_1a9b9e9c152acebb4a32a39b193e6e0645" prot="protected" virt="non-virtual"><scope>QuantLib::Parameter</scope><name>params_</name></member>
      <member refid="class_quant_lib_1_1_parameter_1a1e28f9ff5c6873a8d43b5b256772832c" prot="public" virt="non-virtual"><scope>QuantLib::Parameter</scope><name>setParam</name></member>
      <member refid="class_quant_lib_1_1_parameter_1a640715c5e80f9f45bc685b79bf347cc1" prot="public" virt="non-virtual"><scope>QuantLib::Parameter</scope><name>size</name></member>
      <member refid="class_quant_lib_1_1_parameter_1a6bc4c72e11da0e3aaeb8415f96f255c2" prot="public" virt="non-virtual"><scope>QuantLib::Parameter</scope><name>testParams</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_heston_process" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::HestonProcess</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_stochastic_process" prot="public" virt="non-virtual">QuantLib::StochasticProcess</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_bates_process" prot="public" virt="non-virtual">QuantLib::BatesProcess</derivedcompoundref>
    <includes refid="hestonprocess_8hpp" local="no">hestonprocess.hpp</includes>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_quant_lib_1_1_heston_process_1a7efd616697f1321b654176850dc55cb6" prot="public" static="no" strong="no">
        <type></type>
        <name>Discretization</name>
        <qualifiedname>QuantLib::HestonProcess::Discretization</qualifiedname>
        <enumvalue id="class_quant_lib_1_1_heston_process_1a7efd616697f1321b654176850dc55cb6a1ab21edab612d0795d3a8a762c299ed3" prot="public">
          <name>PartialTruncation</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_heston_process_1a7efd616697f1321b654176850dc55cb6ae0b8673280d91d3d56a9b7d3c805329c" prot="public">
          <name>FullTruncation</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_heston_process_1a7efd616697f1321b654176850dc55cb6a0db5ca4cb4a62a352ff14d849f990c04" prot="public">
          <name>Reflection</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_heston_process_1a7efd616697f1321b654176850dc55cb6a8a3b27552e3b86dbc9001343c837a683" prot="public">
          <name>NonCentralChiSquareVariance</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_heston_process_1a7efd616697f1321b654176850dc55cb6a56705fe311d786792ee80bc5b18e5be8" prot="public">
          <name>QuadraticExponential</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_heston_process_1a7efd616697f1321b654176850dc55cb6a7f2c6e4e5736d78341ecd686e7fc401b" prot="public">
          <name>QuadraticExponentialMartingale</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_heston_process_1a7efd616697f1321b654176850dc55cb6a4cee95ae8defc606b7e8328e70c66273" prot="public">
          <name>BroadieKayaExactSchemeLobatto</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_heston_process_1a7efd616697f1321b654176850dc55cb6addc62b9561ab4b59e763e8420d44bf3f" prot="public">
          <name>BroadieKayaExactSchemeLaguerre</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_heston_process_1a7efd616697f1321b654176850dc55cb6a126fabc936b25f03f8e048e42df6fa94" prot="public">
          <name>BroadieKayaExactSchemeTrapezoidal</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hestonprocess.hpp" line="48" column="9" bodyfile="ql/processes/hestonprocess.hpp" bodystart="48" bodyend="56"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_heston_process_1aa0e0592f82b06d622fec560431c883be" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
        <definition>Handle&lt;YieldTermStructure&gt; QuantLib::HestonProcess::riskFreeRate_</definition>
        <argsstring></argsstring>
        <name>riskFreeRate_</name>
        <qualifiedname>QuantLib::HestonProcess::riskFreeRate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hestonprocess.hpp" line="96" column="16" bodyfile="ql/processes/hestonprocess.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_heston_process_1ae83254b2f920ba6e64b4dbca0daec2c7" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
        <definition>Handle&lt;YieldTermStructure&gt; QuantLib::HestonProcess::dividendYield_</definition>
        <argsstring></argsstring>
        <name>dividendYield_</name>
        <qualifiedname>QuantLib::HestonProcess::dividendYield_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hestonprocess.hpp" line="96" column="30" bodyfile="ql/processes/hestonprocess.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_heston_process_1ad5cc1976963ee53e729b7149760bf130" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
        <definition>Handle&lt;Quote&gt; QuantLib::HestonProcess::s0_</definition>
        <argsstring></argsstring>
        <name>s0_</name>
        <qualifiedname>QuantLib::HestonProcess::s0_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hestonprocess.hpp" line="97" column="16" bodyfile="ql/processes/hestonprocess.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_heston_process_1ac43c15029e6d053256bc1adf831524a2" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::HestonProcess::v0_</definition>
        <argsstring></argsstring>
        <name>v0_</name>
        <qualifiedname>QuantLib::HestonProcess::v0_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hestonprocess.hpp" line="98" column="14" bodyfile="ql/processes/hestonprocess.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_heston_process_1aff6dc6069166ce338cde2394bc21838e" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::HestonProcess::kappa_</definition>
        <argsstring></argsstring>
        <name>kappa_</name>
        <qualifiedname>QuantLib::HestonProcess::kappa_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hestonprocess.hpp" line="98" column="18" bodyfile="ql/processes/hestonprocess.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_heston_process_1a6f902ca310dba3a9d480532009330fff" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::HestonProcess::theta_</definition>
        <argsstring></argsstring>
        <name>theta_</name>
        <qualifiedname>QuantLib::HestonProcess::theta_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hestonprocess.hpp" line="98" column="25" bodyfile="ql/processes/hestonprocess.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_heston_process_1a9c6e869abae10f45d729c2d82c65d293" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::HestonProcess::sigma_</definition>
        <argsstring></argsstring>
        <name>sigma_</name>
        <qualifiedname>QuantLib::HestonProcess::sigma_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hestonprocess.hpp" line="98" column="32" bodyfile="ql/processes/hestonprocess.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_heston_process_1a08f1fff23587054fb3d8869c5625448d" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::HestonProcess::rho_</definition>
        <argsstring></argsstring>
        <name>rho_</name>
        <qualifiedname>QuantLib::HestonProcess::rho_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hestonprocess.hpp" line="98" column="39" bodyfile="ql/processes/hestonprocess.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_heston_process_1a269a07d5c3ae47e8b3e72e6b2d139aea" prot="private" static="no" mutable="no">
        <type>Discretization</type>
        <definition>Discretization QuantLib::HestonProcess::discretization_</definition>
        <argsstring></argsstring>
        <name>discretization_</name>
        <qualifiedname>QuantLib::HestonProcess::discretization_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hestonprocess.hpp" line="99" column="24" bodyfile="ql/processes/hestonprocess.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_heston_process_1a3e90a5a7ea3df751a104dc9bd372fb2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::HestonProcess::HestonProcess</definition>
        <argsstring>(Handle&lt; YieldTermStructure &gt; riskFreeRate, Handle&lt; YieldTermStructure &gt; dividendYield, Handle&lt; Quote &gt; s0, Real v0, Real kappa, Real theta, Real sigma, Real rho, Discretization d=QuadraticExponentialMartingale)</argsstring>
        <name>HestonProcess</name>
        <qualifiedname>QuantLib::HestonProcess::HestonProcess</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
          <declname>riskFreeRate</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
          <declname>dividendYield</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
          <declname>s0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>v0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>kappa</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>theta</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>sigma</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>rho</declname>
        </param>
        <param>
          <type>Discretization</type>
          <declname>d</declname>
          <defval>QuadraticExponentialMartingale</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hestonprocess.hpp" line="58" column="9" bodyfile="ql/processes/hestonprocess.cpp" bodystart="37" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_heston_process_1abf55870120f22d551262453b1a31c68a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::HestonProcess::size</definition>
        <argsstring>() const override</argsstring>
        <name>size</name>
        <qualifiedname>QuantLib::HestonProcess::size</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process_1a92e9b468d781e9ceb566d6e546113540">size</reimplements>
        <briefdescription>
<para>returns the number of dimensions of the stochastic process </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hestonprocess.hpp" line="68" column="14" bodyfile="ql/processes/hestonprocess.cpp" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_heston_process_1ae09bcddff8c039638458f46baf5e4c3a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::HestonProcess::factors</definition>
        <argsstring>() const override</argsstring>
        <name>factors</name>
        <qualifiedname>QuantLib::HestonProcess::factors</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process_1a0346d38598fb9a5a1cd58024f05081aa">factors</reimplements>
        <briefdescription>
<para>returns the number of independent factors of the process </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hestonprocess.hpp" line="69" column="14" bodyfile="ql/processes/hestonprocess.cpp" bodystart="60" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_heston_process_1af9aa6d9b2330dd899d66cde7a704ba0e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::HestonProcess::initialValues</definition>
        <argsstring>() const override</argsstring>
        <name>initialValues</name>
        <qualifiedname>QuantLib::HestonProcess::initialValues</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process_1a4277a74107d071252a2445d23c90b654">initialValues</reimplements>
        <briefdescription>
<para>returns the initial values of the state variables </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hestonprocess.hpp" line="71" column="15" bodyfile="ql/processes/hestonprocess.cpp" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_heston_process_1ae372bfda029ebf799318fb6f4c15f8f4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::HestonProcess::drift</definition>
        <argsstring>(Time t, const Array &amp;x) const override</argsstring>
        <name>drift</name>
        <qualifiedname>QuantLib::HestonProcess::drift</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process_1a467056bfaa17a1ea3debd1dc21402bb8">drift</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>returns the drift part of the equation, i.e., <formula id="468">$ \mu(t, \mathrm{x}_t) $</formula> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hestonprocess.hpp" line="72" column="15" bodyfile="ql/processes/hestonprocess.cpp" bodystart="70" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_heston_process_1ab130ae873bd99ecf7a193cdddd5b78e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::HestonProcess::diffusion</definition>
        <argsstring>(Time t, const Array &amp;x) const override</argsstring>
        <name>diffusion</name>
        <qualifiedname>QuantLib::HestonProcess::diffusion</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process_1a45df6a954a177df19d31de5a7f2bef35">diffusion</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>returns the diffusion part of the equation, i.e. <formula id="469">$ \sigma(t, \mathrm{x}_t) $</formula> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hestonprocess.hpp" line="73" column="16" bodyfile="ql/processes/hestonprocess.cpp" bodystart="83" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_heston_process_1a398724edde1a09b6cddaf88caaf1bf6a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::HestonProcess::apply</definition>
        <argsstring>(const Array &amp;x0, const Array &amp;dx) const override</argsstring>
        <name>apply</name>
        <qualifiedname>QuantLib::HestonProcess::apply</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process_1ae2e3d89d3595fcd73be5e6e7e195f3e7">apply</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>x0</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>dx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>applies a change to the asset value. By default, it returns <formula id="477">$ \mathrm{x} + \Delta \mathrm{x} $</formula>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hestonprocess.hpp" line="74" column="15" bodyfile="ql/processes/hestonprocess.cpp" bodystart="104" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_heston_process_1ac2a4580aa415c723996aee12ccf107da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::HestonProcess::evolve</definition>
        <argsstring>(Time t0, const Array &amp;x0, Time dt, const Array &amp;dw) const override</argsstring>
        <name>evolve</name>
        <qualifiedname>QuantLib::HestonProcess::evolve</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process_1a8d99a715b297d5b6543b1d303a6002c0">evolve</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t0</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>x0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>dt</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>dw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the asset value after a time interval  <formula id="474">$ \Delta t
$</formula> according to the given discretization. By default, it returns    <formula id="475">\[E(\mathrm{x}_0,t_0,\Delta t) +
S(\mathrm{x}_0,t_0,\Delta t) \cdot \Delta \mathrm{w}
\]</formula> where <formula id="476">$ E $</formula> is the expectation and <formula id="290">$ S $</formula> the standard deviation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hestonprocess.hpp" line="75" column="15" bodyfile="ql/processes/hestonprocess.cpp" bodystart="396" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_heston_process_1a2ae37b82f60c90937260d92d8ce0e582" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::HestonProcess::v0</definition>
        <argsstring>() const</argsstring>
        <name>v0</name>
        <qualifiedname>QuantLib::HestonProcess::v0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hestonprocess.hpp" line="77" column="14" bodyfile="ql/processes/hestonprocess.hpp" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_heston_process_1a09b6d1a4215d44334368d5803c4932b1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::HestonProcess::rho</definition>
        <argsstring>() const</argsstring>
        <name>rho</name>
        <qualifiedname>QuantLib::HestonProcess::rho</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hestonprocess.hpp" line="78" column="14" bodyfile="ql/processes/hestonprocess.hpp" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_heston_process_1a020a57960e74a6c3910e7a536356697a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::HestonProcess::kappa</definition>
        <argsstring>() const</argsstring>
        <name>kappa</name>
        <qualifiedname>QuantLib::HestonProcess::kappa</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hestonprocess.hpp" line="79" column="14" bodyfile="ql/processes/hestonprocess.hpp" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_heston_process_1a5bde5e946b418ce238fd2349c271662d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::HestonProcess::theta</definition>
        <argsstring>() const</argsstring>
        <name>theta</name>
        <qualifiedname>QuantLib::HestonProcess::theta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hestonprocess.hpp" line="80" column="14" bodyfile="ql/processes/hestonprocess.hpp" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_heston_process_1a8e2f3c91c05157fe85d42ed02dca9e94" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::HestonProcess::sigma</definition>
        <argsstring>() const</argsstring>
        <name>sigma</name>
        <qualifiedname>QuantLib::HestonProcess::sigma</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hestonprocess.hpp" line="81" column="14" bodyfile="ql/processes/hestonprocess.hpp" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_heston_process_1af820ff97d2a6b30d83be69da5564b903" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &amp;</type>
        <definition>const Handle&lt; Quote &gt; &amp; QuantLib::HestonProcess::s0</definition>
        <argsstring>() const</argsstring>
        <name>s0</name>
        <qualifiedname>QuantLib::HestonProcess::s0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hestonprocess.hpp" line="83" column="22" bodyfile="ql/processes/hestonprocess.cpp" bodystart="552" bodyend="554"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_heston_process_1a9ac5480512c570208f55a7d6107b29fb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
        <definition>const Handle&lt; YieldTermStructure &gt; &amp; QuantLib::HestonProcess::dividendYield</definition>
        <argsstring>() const</argsstring>
        <name>dividendYield</name>
        <qualifiedname>QuantLib::HestonProcess::dividendYield</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hestonprocess.hpp" line="84" column="22" bodyfile="ql/processes/hestonprocess.cpp" bodystart="556" bodyend="558"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_heston_process_1a7b6013a4d54317ff8978a34a24286d2b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
        <definition>const Handle&lt; YieldTermStructure &gt; &amp; QuantLib::HestonProcess::riskFreeRate</definition>
        <argsstring>() const</argsstring>
        <name>riskFreeRate</name>
        <qualifiedname>QuantLib::HestonProcess::riskFreeRate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hestonprocess.hpp" line="85" column="22" bodyfile="ql/processes/hestonprocess.cpp" bodystart="560" bodyend="562"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_heston_process_1a22244568ba9674ac2babfcc748b432b9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>Time QuantLib::HestonProcess::time</definition>
        <argsstring>(const Date &amp;) const override</argsstring>
        <name>time</name>
        <qualifiedname>QuantLib::HestonProcess::time</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process_1a39c5f08a3779665f9185a558d2b8418d">time</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the time value corresponding to the given date in the reference system of the stochastic process.</para>
<para><simplesect kind="note"><para>As a number of processes might not need this functionality, a default implementation is given which raises an exception. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hestonprocess.hpp" line="87" column="14" bodyfile="ql/processes/hestonprocess.cpp" bodystart="564" bodyend="567"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_heston_process_1aabb9742285c72394217bb69930f5c8ef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::HestonProcess::pdf</definition>
        <argsstring>(Real x, Real v, Time t, Real eps=1e-3) const</argsstring>
        <name>pdf</name>
        <qualifiedname>QuantLib::HestonProcess::pdf</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>eps</declname>
          <defval>1e-3</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hestonprocess.hpp" line="91" column="14" bodyfile="ql/processes/hestonprocess.cpp" bodystart="360" bodyend="394"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_heston_process_1a5c7dea9cc7bc512244020acd23ff8e29" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::HestonProcess::varianceDistribution</definition>
        <argsstring>(Real v, Real dw, Time dt) const</argsstring>
        <name>varianceDistribution</name>
        <qualifiedname>QuantLib::HestonProcess::varianceDistribution</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>dw</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hestonprocess.hpp" line="94" column="14" bodyfile="ql/processes/hestonprocess.cpp" bodystart="569" bodyend="579"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Square-root stochastic-volatility Heston process. </para>
    </briefdescription>
    <detaileddescription>
<para>This class describes the square root stochastic volatility process governed by       <formula id="462">\[\begin{array}{rcl}
dS(t, S)  &amp;=&amp; \mu S dt + \sqrt{v} S dW_1 \\
dv(t, S)  &amp;=&amp; \kappa (\theta - v) dt + \sigma \sqrt{v} dW_2 \\
dW_1 dW_2 &amp;=&amp; \rho dt
\end{array}
\]</formula> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="5">
        <label>QuantLib::BatesProcess</label>
        <link refid="class_quant_lib_1_1_bates_process"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::HestonProcess</label>
        <link refid="class_quant_lib_1_1_heston_process"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="3">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>QuantLib::StochasticProcess</label>
        <link refid="class_quant_lib_1_1_stochastic_process"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::HestonProcess</label>
        <link refid="class_quant_lib_1_1_heston_process"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="3">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>QuantLib::StochasticProcess</label>
        <link refid="class_quant_lib_1_1_stochastic_process"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/processes/hestonprocess.hpp" line="46" column="5" bodyfile="ql/processes/hestonprocess.hpp" bodystart="46" bodyend="100"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_heston_process_1a398724edde1a09b6cddaf88caaf1bf6a" prot="public" virt="virtual"><scope>QuantLib::HestonProcess</scope><name>apply</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1a7efd616697f1321b654176850dc55cb6addc62b9561ab4b59e763e8420d44bf3f" prot="public" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>BroadieKayaExactSchemeLaguerre</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1a7efd616697f1321b654176850dc55cb6a4cee95ae8defc606b7e8328e70c66273" prot="public" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>BroadieKayaExactSchemeLobatto</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1a7efd616697f1321b654176850dc55cb6a126fabc936b25f03f8e048e42df6fa94" prot="public" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>BroadieKayaExactSchemeTrapezoidal</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a3a92717719d8621148989905a132c5e1" prot="public" virt="virtual"><scope>QuantLib::HestonProcess</scope><name>covariance</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::HestonProcess</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1ab130ae873bd99ecf7a193cdddd5b78e2" prot="public" virt="virtual"><scope>QuantLib::HestonProcess</scope><name>diffusion</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1a7efd616697f1321b654176850dc55cb6" prot="public" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>Discretization</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1a269a07d5c3ae47e8b3e72e6b2d139aea" prot="private" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>discretization_</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1a9ac5480512c570208f55a7d6107b29fb" prot="public" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>dividendYield</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1ae83254b2f920ba6e64b4dbca0daec2c7" prot="private" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>dividendYield_</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1ae372bfda029ebf799318fb6f4c15f8f4" prot="public" virt="virtual"><scope>QuantLib::HestonProcess</scope><name>drift</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1ac2a4580aa415c723996aee12ccf107da" prot="public" virt="virtual"><scope>QuantLib::HestonProcess</scope><name>evolve</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1af225d654ba08bc09bf2ecab7d787ca9b" prot="public" virt="virtual"><scope>QuantLib::HestonProcess</scope><name>expectation</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1ae09bcddff8c039638458f46baf5e4c3a" prot="public" virt="virtual"><scope>QuantLib::HestonProcess</scope><name>factors</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1a7efd616697f1321b654176850dc55cb6ae0b8673280d91d3d56a9b7d3c805329c" prot="public" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>FullTruncation</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1a3e90a5a7ea3df751a104dc9bd372fb2e" prot="public" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>HestonProcess</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1af9aa6d9b2330dd899d66cde7a704ba0e" prot="public" virt="virtual"><scope>QuantLib::HestonProcess</scope><name>initialValues</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::HestonProcess</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1a020a57960e74a6c3910e7a536356697a" prot="public" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>kappa</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1aff6dc6069166ce338cde2394bc21838e" prot="private" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>kappa_</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1a7efd616697f1321b654176850dc55cb6a8a3b27552e3b86dbc9001343c837a683" prot="public" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>NonCentralChiSquareVariance</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::HestonProcess</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::HestonProcess</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::HestonProcess</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::HestonProcess</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::HestonProcess</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1a7efd616697f1321b654176850dc55cb6a1ab21edab612d0795d3a8a762c299ed3" prot="public" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>PartialTruncation</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1aabb9742285c72394217bb69930f5c8ef" prot="public" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>pdf</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1a7efd616697f1321b654176850dc55cb6a56705fe311d786792ee80bc5b18e5be8" prot="public" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>QuadraticExponential</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1a7efd616697f1321b654176850dc55cb6a7f2c6e4e5736d78341ecd686e7fc401b" prot="public" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>QuadraticExponentialMartingale</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1a7efd616697f1321b654176850dc55cb6a0db5ca4cb4a62a352ff14d849f990c04" prot="public" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>Reflection</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1a09b6d1a4215d44334368d5803c4932b1" prot="public" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>rho</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1a08f1fff23587054fb3d8869c5625448d" prot="private" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>rho_</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1a7b6013a4d54317ff8978a34a24286d2b" prot="public" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>riskFreeRate</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1aa0e0592f82b06d622fec560431c883be" prot="private" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>riskFreeRate_</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1af820ff97d2a6b30d83be69da5564b903" prot="public" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>s0</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1ad5cc1976963ee53e729b7149760bf130" prot="private" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>s0_</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1a8e2f3c91c05157fe85d42ed02dca9e94" prot="public" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>sigma</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1a9c6e869abae10f45d729c2d82c65d293" prot="private" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>sigma_</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1abf55870120f22d551262453b1a31c68a" prot="public" virt="virtual"><scope>QuantLib::HestonProcess</scope><name>size</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a47e9f5540b2ca9c32650dc81d051ca86" prot="public" virt="virtual"><scope>QuantLib::HestonProcess</scope><name>stdDeviation</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a2dd24b794a6b320bc60ba9e1a87bf48e" prot="protected" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>StochasticProcess</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a957ee9776d6048835106ea29ea44927f" prot="protected" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>StochasticProcess</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1a5bde5e946b418ce238fd2349c271662d" prot="public" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>theta</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1a6f902ca310dba3a9d480532009330fff" prot="private" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>theta_</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1a22244568ba9674ac2babfcc748b432b9" prot="public" virt="virtual"><scope>QuantLib::HestonProcess</scope><name>time</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a0f22628658fd2dc702c13c354ef3244e" prot="public" virt="virtual"><scope>QuantLib::HestonProcess</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1a2ae37b82f60c90937260d92d8ce0e582" prot="public" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>v0</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1ac43c15029e6d053256bc1adf831524a2" prot="private" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>v0_</name></member>
      <member refid="class_quant_lib_1_1_heston_process_1a5c7dea9cc7bc512244020acd23ff8e29" prot="private" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>varianceDistribution</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::HestonProcess</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::HestonProcess</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a0e2b6a14e675db5abd0ab8965ff7b2c3" prot="public" virt="non-virtual"><scope>QuantLib::HestonProcess</scope><name>~StochasticProcess</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

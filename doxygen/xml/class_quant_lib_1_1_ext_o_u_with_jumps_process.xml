<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_ext_o_u_with_jumps_process" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::ExtOUWithJumpsProcess</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_stochastic_process" prot="public" virt="non-virtual">QuantLib::StochasticProcess</basecompoundref>
    <includes refid="extouwithjumpsprocess_8hpp" local="no">extouwithjumpsprocess.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_ext_o_u_with_jumps_process_1a5b4349bb76eb2ae664a4ca080d65349b" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::ExtOUWithJumpsProcess::Y0_</definition>
        <argsstring></argsstring>
        <name>Y0_</name>
        <qualifiedname>QuantLib::ExtOUWithJumpsProcess::Y0_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/extouwithjumpsprocess.hpp" line="82" column="20" bodyfile="ql/experimental/processes/extouwithjumpsprocess.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_ext_o_u_with_jumps_process_1a227cfa024c264294535c18638ad75228" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::ExtOUWithJumpsProcess::beta_</definition>
        <argsstring></argsstring>
        <name>beta_</name>
        <qualifiedname>QuantLib::ExtOUWithJumpsProcess::beta_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/extouwithjumpsprocess.hpp" line="82" column="24" bodyfile="ql/experimental/processes/extouwithjumpsprocess.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_ext_o_u_with_jumps_process_1a54a4ab31ab0109ec092d5e2b2f4eb702" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::ExtOUWithJumpsProcess::jumpIntensity_</definition>
        <argsstring></argsstring>
        <name>jumpIntensity_</name>
        <qualifiedname>QuantLib::ExtOUWithJumpsProcess::jumpIntensity_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/extouwithjumpsprocess.hpp" line="82" column="30" bodyfile="ql/experimental/processes/extouwithjumpsprocess.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_ext_o_u_with_jumps_process_1a939883a2ab991c390fc4f2782e10c932" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::ExtOUWithJumpsProcess::eta_</definition>
        <argsstring></argsstring>
        <name>eta_</name>
        <qualifiedname>QuantLib::ExtOUWithJumpsProcess::eta_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/extouwithjumpsprocess.hpp" line="82" column="45" bodyfile="ql/experimental/processes/extouwithjumpsprocess.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_ext_o_u_with_jumps_process_1a790452eac054daa038693bf5113a4397" prot="private" static="no" mutable="no">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process" kindref="compound">ExtendedOrnsteinUhlenbeckProcess</ref> &gt;</type>
        <definition>const ext::shared_ptr&lt;ExtendedOrnsteinUhlenbeckProcess&gt; QuantLib::ExtOUWithJumpsProcess::ouProcess_</definition>
        <argsstring></argsstring>
        <name>ouProcess_</name>
        <qualifiedname>QuantLib::ExtOUWithJumpsProcess::ouProcess_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/extouwithjumpsprocess.hpp" line="83" column="31" bodyfile="ql/experimental/processes/extouwithjumpsprocess.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_ext_o_u_with_jumps_process_1a9b5c416a3bdf590c7d3c5e346d58b0bb" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_quant_lib_1_1_cumulative_normal_distribution" kindref="compound">CumulativeNormalDistribution</ref></type>
        <definition>const CumulativeNormalDistribution QuantLib::ExtOUWithJumpsProcess::cumNormalDist_</definition>
        <argsstring></argsstring>
        <name>cumNormalDist_</name>
        <qualifiedname>QuantLib::ExtOUWithJumpsProcess::cumNormalDist_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/extouwithjumpsprocess.hpp" line="85" column="44" bodyfile="ql/experimental/processes/extouwithjumpsprocess.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_ext_o_u_with_jumps_process_1afee5087e2b38ceb7b4ca685a9a891d4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ExtOUWithJumpsProcess::ExtOUWithJumpsProcess</definition>
        <argsstring>(ext::shared_ptr&lt; ExtendedOrnsteinUhlenbeckProcess &gt; process, Real Y0, Real beta, Real jumpIntensity, Real eta)</argsstring>
        <name>ExtOUWithJumpsProcess</name>
        <qualifiedname>QuantLib::ExtOUWithJumpsProcess::ExtOUWithJumpsProcess</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process" kindref="compound">ExtendedOrnsteinUhlenbeckProcess</ref> &gt;</type>
          <declname>process</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>Y0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>beta</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>jumpIntensity</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>eta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/extouwithjumpsprocess.hpp" line="61" column="9" bodyfile="ql/experimental/processes/extouwithjumpsprocess.cpp" bodystart="30" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_ext_o_u_with_jumps_process_1af2c52de854cd141727618a3bce62a73f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::ExtOUWithJumpsProcess::size</definition>
        <argsstring>() const override</argsstring>
        <name>size</name>
        <qualifiedname>QuantLib::ExtOUWithJumpsProcess::size</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process_1a92e9b468d781e9ceb566d6e546113540">size</reimplements>
        <briefdescription>
<para>returns the number of dimensions of the stochastic process </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/extouwithjumpsprocess.hpp" line="67" column="14" bodyfile="ql/experimental/processes/extouwithjumpsprocess.cpp" bodystart="41" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_ext_o_u_with_jumps_process_1abb8889680bf62e24482616bd70422e6d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::ExtOUWithJumpsProcess::factors</definition>
        <argsstring>() const override</argsstring>
        <name>factors</name>
        <qualifiedname>QuantLib::ExtOUWithJumpsProcess::factors</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process_1a0346d38598fb9a5a1cd58024f05081aa">factors</reimplements>
        <briefdescription>
<para>returns the number of independent factors of the process </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/extouwithjumpsprocess.hpp" line="68" column="14" bodyfile="ql/experimental/processes/extouwithjumpsprocess.cpp" bodystart="44" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_ext_o_u_with_jumps_process_1a5a44fff80322b7cd7bfa7369d53aa883" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::ExtOUWithJumpsProcess::initialValues</definition>
        <argsstring>() const override</argsstring>
        <name>initialValues</name>
        <qualifiedname>QuantLib::ExtOUWithJumpsProcess::initialValues</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process_1a4277a74107d071252a2445d23c90b654">initialValues</reimplements>
        <briefdescription>
<para>returns the initial values of the state variables </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/extouwithjumpsprocess.hpp" line="70" column="15" bodyfile="ql/experimental/processes/extouwithjumpsprocess.cpp" bodystart="61" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_ext_o_u_with_jumps_process_1a66dcffef20c7b411c5d1500c3009bf49" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::ExtOUWithJumpsProcess::drift</definition>
        <argsstring>(Time t, const Array &amp;x) const override</argsstring>
        <name>drift</name>
        <qualifiedname>QuantLib::ExtOUWithJumpsProcess::drift</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process_1a467056bfaa17a1ea3debd1dc21402bb8">drift</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>returns the drift part of the equation, i.e., <formula id="468">$ \mu(t, \mathrm{x}_t) $</formula> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/extouwithjumpsprocess.hpp" line="71" column="15" bodyfile="ql/experimental/processes/extouwithjumpsprocess.cpp" bodystart="68" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_ext_o_u_with_jumps_process_1a2915b3b5e1940e78523fa5f623e8996a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::ExtOUWithJumpsProcess::diffusion</definition>
        <argsstring>(Time t, const Array &amp;x) const override</argsstring>
        <name>diffusion</name>
        <qualifiedname>QuantLib::ExtOUWithJumpsProcess::diffusion</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process_1a45df6a954a177df19d31de5a7f2bef35">diffusion</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>returns the diffusion part of the equation, i.e. <formula id="469">$ \sigma(t, \mathrm{x}_t) $</formula> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/extouwithjumpsprocess.hpp" line="72" column="16" bodyfile="ql/experimental/processes/extouwithjumpsprocess.cpp" bodystart="75" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_ext_o_u_with_jumps_process_1a14df9e0bd6babdbc37ddaf7fce7a801f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::ExtOUWithJumpsProcess::evolve</definition>
        <argsstring>(Time t0, const Array &amp;x0, Time dt, const Array &amp;dw) const override</argsstring>
        <name>evolve</name>
        <qualifiedname>QuantLib::ExtOUWithJumpsProcess::evolve</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process_1a8d99a715b297d5b6543b1d303a6002c0">evolve</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t0</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>x0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>dt</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>dw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the asset value after a time interval  <formula id="474">$ \Delta t
$</formula> according to the given discretization. By default, it returns    <formula id="475">\[E(\mathrm{x}_0,t_0,\Delta t) +
S(\mathrm{x}_0,t_0,\Delta t) \cdot \Delta \mathrm{w}
\]</formula> where <formula id="476">$ E $</formula> is the expectation and <formula id="290">$ S $</formula> the standard deviation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/extouwithjumpsprocess.hpp" line="73" column="15" bodyfile="ql/experimental/processes/extouwithjumpsprocess.cpp" bodystart="82" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_ext_o_u_with_jumps_process_1a882ecf0196fa5028b7df76efedec41e2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process" kindref="compound">ExtendedOrnsteinUhlenbeckProcess</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; ExtendedOrnsteinUhlenbeckProcess &gt; QuantLib::ExtOUWithJumpsProcess::getExtendedOrnsteinUhlenbeckProcess</definition>
        <argsstring>() const</argsstring>
        <name>getExtendedOrnsteinUhlenbeckProcess</name>
        <qualifiedname>QuantLib::ExtOUWithJumpsProcess::getExtendedOrnsteinUhlenbeckProcess</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/extouwithjumpsprocess.hpp" line="75" column="25" bodyfile="ql/experimental/processes/extouwithjumpsprocess.cpp" bodystart="48" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_ext_o_u_with_jumps_process_1a67cc3158f4c2aa2c3ea447b1717c989f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ExtOUWithJumpsProcess::beta</definition>
        <argsstring>() const</argsstring>
        <name>beta</name>
        <qualifiedname>QuantLib::ExtOUWithJumpsProcess::beta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/extouwithjumpsprocess.hpp" line="77" column="14" bodyfile="ql/experimental/processes/extouwithjumpsprocess.cpp" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_ext_o_u_with_jumps_process_1a9f78940cff00ed609f9123cbc1dea63b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ExtOUWithJumpsProcess::eta</definition>
        <argsstring>() const</argsstring>
        <name>eta</name>
        <qualifiedname>QuantLib::ExtOUWithJumpsProcess::eta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/extouwithjumpsprocess.hpp" line="78" column="14" bodyfile="ql/experimental/processes/extouwithjumpsprocess.cpp" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_ext_o_u_with_jumps_process_1a7a708d8a944821b2f9c8ff4911fd75f4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ExtOUWithJumpsProcess::jumpIntensity</definition>
        <argsstring>() const</argsstring>
        <name>jumpIntensity</name>
        <qualifiedname>QuantLib::ExtOUWithJumpsProcess::jumpIntensity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/extouwithjumpsprocess.hpp" line="79" column="14" bodyfile="ql/experimental/processes/extouwithjumpsprocess.cpp" bodystart="54" bodyend="56"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class describes a Ornstein Uhlenbeck model plus exp jump, an extension of the Lucia and Schwartz model        <formula id="175">\[\begin{array}{rcl}
S &amp;=&amp; exp(X_t + Y_t) \\
dX_t  &amp;=&amp; \alpha(\mu(t)-X_t)dt + \sigma dW_t \\
dY_t  &amp;=&amp; -\beta Y_{t-}dt + J_tdN_t \\
\omega(J)&amp;=&amp; \eta_u e^{-\eta_u J}
\end{array}
\]</formula></para>
<para>References: T. Kluge, 2008. Pricing Swing Options and other Electricity Derivatives, <ulink url="http://eprints.maths.ox.ac.uk/246/1/kluge.pdf">http://eprints.maths.ox.ac.uk/246/1/kluge.pdf</ulink></para>
<para>B. Hambly, S. Howison, T. Kluge, Modelling spikes and pricing swing options in electricity markets, <ulink url="http://people.maths.ox.ac.uk/hambly/PDF/Papers/elec.pdf">http://people.maths.ox.ac.uk/hambly/PDF/Papers/elec.pdf</ulink> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::ExtOUWithJumpsProcess</label>
        <link refid="class_quant_lib_1_1_ext_o_u_with_jumps_process"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="3">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>QuantLib::StochasticProcess</label>
        <link refid="class_quant_lib_1_1_stochastic_process"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::ExtOUWithJumpsProcess</label>
        <link refid="class_quant_lib_1_1_ext_o_u_with_jumps_process"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="3">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>QuantLib::StochasticProcess</label>
        <link refid="class_quant_lib_1_1_stochastic_process"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/processes/extouwithjumpsprocess.hpp" line="59" column="5" bodyfile="ql/experimental/processes/extouwithjumpsprocess.hpp" bodystart="59" bodyend="86"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_stochastic_process_1ae2e3d89d3595fcd73be5e6e7e195f3e7" prot="public" virt="virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>apply</name></member>
      <member refid="class_quant_lib_1_1_ext_o_u_with_jumps_process_1a67cc3158f4c2aa2c3ea447b1717c989f" prot="public" virt="non-virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>beta</name></member>
      <member refid="class_quant_lib_1_1_ext_o_u_with_jumps_process_1a227cfa024c264294535c18638ad75228" prot="private" virt="non-virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>beta_</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a3a92717719d8621148989905a132c5e1" prot="public" virt="virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>covariance</name></member>
      <member refid="class_quant_lib_1_1_ext_o_u_with_jumps_process_1a9b5c416a3bdf590c7d3c5e346d58b0bb" prot="private" virt="non-virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>cumNormalDist_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_ext_o_u_with_jumps_process_1a2915b3b5e1940e78523fa5f623e8996a" prot="public" virt="virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>diffusion</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a98cd541abbfd37f62d10d3ec2ed214be" prot="protected" virt="non-virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>discretization_</name></member>
      <member refid="class_quant_lib_1_1_ext_o_u_with_jumps_process_1a66dcffef20c7b411c5d1500c3009bf49" prot="public" virt="virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>drift</name></member>
      <member refid="class_quant_lib_1_1_ext_o_u_with_jumps_process_1a9f78940cff00ed609f9123cbc1dea63b" prot="public" virt="non-virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>eta</name></member>
      <member refid="class_quant_lib_1_1_ext_o_u_with_jumps_process_1a939883a2ab991c390fc4f2782e10c932" prot="private" virt="non-virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>eta_</name></member>
      <member refid="class_quant_lib_1_1_ext_o_u_with_jumps_process_1a14df9e0bd6babdbc37ddaf7fce7a801f" prot="public" virt="virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>evolve</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1af225d654ba08bc09bf2ecab7d787ca9b" prot="public" virt="virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>expectation</name></member>
      <member refid="class_quant_lib_1_1_ext_o_u_with_jumps_process_1afee5087e2b38ceb7b4ca685a9a891d4a" prot="public" virt="non-virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>ExtOUWithJumpsProcess</name></member>
      <member refid="class_quant_lib_1_1_ext_o_u_with_jumps_process_1abb8889680bf62e24482616bd70422e6d" prot="public" virt="virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>factors</name></member>
      <member refid="class_quant_lib_1_1_ext_o_u_with_jumps_process_1a882ecf0196fa5028b7df76efedec41e2" prot="public" virt="non-virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>getExtendedOrnsteinUhlenbeckProcess</name></member>
      <member refid="class_quant_lib_1_1_ext_o_u_with_jumps_process_1a5a44fff80322b7cd7bfa7369d53aa883" prot="public" virt="virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>initialValues</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_ext_o_u_with_jumps_process_1a7a708d8a944821b2f9c8ff4911fd75f4" prot="public" virt="non-virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>jumpIntensity</name></member>
      <member refid="class_quant_lib_1_1_ext_o_u_with_jumps_process_1a54a4ab31ab0109ec092d5e2b2f4eb702" prot="private" virt="non-virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>jumpIntensity_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_ext_o_u_with_jumps_process_1a790452eac054daa038693bf5113a4397" prot="private" virt="non-virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>ouProcess_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_ext_o_u_with_jumps_process_1af2c52de854cd141727618a3bce62a73f" prot="public" virt="virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>size</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a47e9f5540b2ca9c32650dc81d051ca86" prot="public" virt="virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>stdDeviation</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a2dd24b794a6b320bc60ba9e1a87bf48e" prot="protected" virt="non-virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>StochasticProcess</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a957ee9776d6048835106ea29ea44927f" prot="protected" virt="non-virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>StochasticProcess</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a39c5f08a3779665f9185a558d2b8418d" prot="public" virt="virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>time</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a0f22628658fd2dc702c13c354ef3244e" prot="public" virt="virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_ext_o_u_with_jumps_process_1a5b4349bb76eb2ae664a4ca080d65349b" prot="private" virt="non-virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>Y0_</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a0e2b6a14e675db5abd0ab8965ff7b2c3" prot="public" virt="non-virtual"><scope>QuantLib::ExtOUWithJumpsProcess</scope><name>~StochasticProcess</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

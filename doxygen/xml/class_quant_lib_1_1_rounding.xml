<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_rounding" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::Rounding</compoundname>
    <derivedcompoundref refid="class_quant_lib_1_1_ceiling_truncation" prot="public" virt="non-virtual">QuantLib::CeilingTruncation</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_closest_rounding" prot="public" virt="non-virtual">QuantLib::ClosestRounding</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_down_rounding" prot="public" virt="non-virtual">QuantLib::DownRounding</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_floor_truncation" prot="public" virt="non-virtual">QuantLib::FloorTruncation</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_up_rounding" prot="public" virt="non-virtual">QuantLib::UpRounding</derivedcompoundref>
    <includes refid="rounding_8hpp" local="no">rounding.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Inspectors</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_rounding_1a94fa5963bbe6369d49e4bf541487d668" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
        <definition>Integer QuantLib::Rounding::precision_</definition>
        <argsstring></argsstring>
        <name>precision_</name>
        <qualifiedname>QuantLib::Rounding::precision_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/rounding.hpp" line="83" column="17" bodyfile="ql/math/rounding.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_rounding_1a02e1f500043bcd9247abf12c4e85afbc" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_rounding_1acc18d91f50c6de4b272f1982179e35bb" kindref="member">Type</ref></type>
        <definition>Type QuantLib::Rounding::type_</definition>
        <argsstring></argsstring>
        <name>type_</name>
        <qualifiedname>QuantLib::Rounding::type_</qualifiedname>
        <initializer>= <ref refid="class_quant_lib_1_1_rounding_1acc18d91f50c6de4b272f1982179e35bbacfb80f89be5c274493c15b9d74900051" kindref="member">None</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/rounding.hpp" line="84" column="14" bodyfile="ql/math/rounding.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_rounding_1abdd71177f1e9634dba10e4d56e9baa6a" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
        <definition>Integer QuantLib::Rounding::digit_</definition>
        <argsstring></argsstring>
        <name>digit_</name>
        <qualifiedname>QuantLib::Rounding::digit_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/rounding.hpp" line="85" column="17" bodyfile="ql/math/rounding.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_rounding_1ac961cbfb3b331390fe3f3894ffbafbb5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
        <definition>Integer QuantLib::Rounding::precision</definition>
        <argsstring>() const</argsstring>
        <name>precision</name>
        <qualifiedname>QuantLib::Rounding::precision</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/rounding.hpp" line="79" column="17" bodyfile="ql/math/rounding.hpp" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_rounding_1abae2d9814693aedf099bcd4ad987feb4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_rounding_1acc18d91f50c6de4b272f1982179e35bb" kindref="member">Type</ref></type>
        <definition>Type QuantLib::Rounding::type</definition>
        <argsstring>() const</argsstring>
        <name>type</name>
        <qualifiedname>QuantLib::Rounding::type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/rounding.hpp" line="80" column="14" bodyfile="ql/math/rounding.hpp" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_rounding_1a9c1f4bc3d65a4326fd0a8c8df8a2b209" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
        <definition>Integer QuantLib::Rounding::roundingDigit</definition>
        <argsstring>() const</argsstring>
        <name>roundingDigit</name>
        <qualifiedname>QuantLib::Rounding::roundingDigit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/rounding.hpp" line="81" column="17" bodyfile="ql/math/rounding.hpp" bodystart="81" bodyend="81"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_quant_lib_1_1_rounding_1acc18d91f50c6de4b272f1982179e35bb" prot="public" static="no" strong="no">
        <type></type>
        <name>Type</name>
        <qualifiedname>QuantLib::Rounding::Type</qualifiedname>
        <enumvalue id="class_quant_lib_1_1_rounding_1acc18d91f50c6de4b272f1982179e35bbacfb80f89be5c274493c15b9d74900051" prot="public">
          <name>None</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>do not round: return the number unmodified </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_rounding_1acc18d91f50c6de4b272f1982179e35bba1eff3ec70afe96d86225d53ce8922817" prot="public">
          <name>Up</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>the first decimal place past the precision will be rounded up. This differs from the OMG rule which rounds up only if the decimal to be rounded is greater than or equal to the rounding digit </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_rounding_1acc18d91f50c6de4b272f1982179e35bbab0c3b65f63449c382bc789214830ee59" prot="public">
          <name>Down</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>all decimal places past the precision will be truncated </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_rounding_1acc18d91f50c6de4b272f1982179e35bbae470a33d052ae70c922957414292d856" prot="public">
          <name>Closest</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>the first decimal place past the precision will be rounded up if greater than or equal to the rounding digit; this corresponds to the OMG round-up rule. When the rounding digit is 5, the result will be the one closest to the original number, hence the name. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_rounding_1acc18d91f50c6de4b272f1982179e35bba9da4dddeabb102ba5553ffbee6df9640" prot="public">
          <name>Floor</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>positive numbers will be rounded up and negative numbers will be rounded down using the OMG round up and round down rules </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_rounding_1acc18d91f50c6de4b272f1982179e35bba5f4cbd06e33a71af185e4457aaa8fc0c" prot="public">
          <name>Ceiling</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>positive numbers will be rounded down and negative numbers will be rounded up using the OMG round up and round down rules </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>rounding methods </para>
        </briefdescription>
        <detaileddescription>
<para>The rounding methods follow the OMG specification available at <ulink url="http://www.omg.org/cgi-bin/doc?formal/00-06-29.pdf">http://www.omg.org/cgi-bin/doc?formal/00-06-29.pdf</ulink>.</para>
<para><simplesect kind="warning"><para>the names of the <ref refid="class_quant_lib_1_1_floor" kindref="compound">Floor</ref> and Ceiling methods might be misleading. Check the provided reference. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/rounding.hpp" line="44" column="9" bodyfile="ql/math/rounding.hpp" bodystart="44" bodyend="65"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_rounding_1aeb59e087e4943bec35ee7f6c78d6a4d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Rounding::Rounding</definition>
        <argsstring>()=default</argsstring>
        <name>Rounding</name>
        <qualifiedname>QuantLib::Rounding::Rounding</qualifiedname>
        <briefdescription>
<para>default constructor </para>
        </briefdescription>
        <detaileddescription>
<para>Instances built through this constructor don&apos;t perform any rounding. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/rounding.hpp" line="70" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_rounding_1a756eb8173ecb835dafd463c741effb93" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Rounding::Rounding</definition>
        <argsstring>(Integer precision, Type type=Closest, Integer digit=5)</argsstring>
        <name>Rounding</name>
        <qualifiedname>QuantLib::Rounding::Rounding</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
          <declname>precision</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_rounding_1acc18d91f50c6de4b272f1982179e35bb" kindref="member">Type</ref></type>
          <declname>type</declname>
          <defval><ref refid="class_quant_lib_1_1_rounding_1acc18d91f50c6de4b272f1982179e35bbae470a33d052ae70c922957414292d856" kindref="member">Closest</ref></defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
          <declname>digit</declname>
          <defval>5</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/rounding.hpp" line="71" column="18" bodyfile="ql/math/rounding.hpp" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_rounding_1af2b1d4eab4da764edb4e329be7d9e194" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a65c9fada9109c70ad823e8e5177c9568" kindref="member">Decimal</ref></type>
        <definition>Decimal QuantLib::Rounding::operator()</definition>
        <argsstring>(Decimal value) const</argsstring>
        <name>operator()</name>
        <qualifiedname>QuantLib::Rounding::operator()</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a65c9fada9109c70ad823e8e5177c9568" kindref="member">Decimal</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>perform rounding </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/rounding.hpp" line="76" column="17" bodyfile="ql/math/rounding.cpp" bodystart="29" bodyend="67"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>basic rounding class </para>
    </briefdescription>
    <detaileddescription>
<para><xrefsect id="test_1_test000066"><xreftitle>Test</xreftitle><xrefdescription><para>the correctness of the returned values is tested by checking them against known good results. </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::CeilingTruncation</label>
        <link refid="class_quant_lib_1_1_ceiling_truncation"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::ClosestRounding</label>
        <link refid="class_quant_lib_1_1_closest_rounding"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::DownRounding</label>
        <link refid="class_quant_lib_1_1_down_rounding"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::FloorTruncation</label>
        <link refid="class_quant_lib_1_1_floor_truncation"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::Rounding</label>
        <link refid="class_quant_lib_1_1_rounding"/>
      </node>
      <node id="6">
        <label>QuantLib::UpRounding</label>
        <link refid="class_quant_lib_1_1_up_rounding"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="ql/math/rounding.hpp" line="35" column="5" bodyfile="ql/math/rounding.hpp" bodystart="35" bodyend="86"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_rounding_1acc18d91f50c6de4b272f1982179e35bba5f4cbd06e33a71af185e4457aaa8fc0c" prot="public" virt="non-virtual"><scope>QuantLib::Rounding</scope><name>Ceiling</name></member>
      <member refid="class_quant_lib_1_1_rounding_1acc18d91f50c6de4b272f1982179e35bbae470a33d052ae70c922957414292d856" prot="public" virt="non-virtual"><scope>QuantLib::Rounding</scope><name>Closest</name></member>
      <member refid="class_quant_lib_1_1_rounding_1abdd71177f1e9634dba10e4d56e9baa6a" prot="private" virt="non-virtual"><scope>QuantLib::Rounding</scope><name>digit_</name></member>
      <member refid="class_quant_lib_1_1_rounding_1acc18d91f50c6de4b272f1982179e35bbab0c3b65f63449c382bc789214830ee59" prot="public" virt="non-virtual"><scope>QuantLib::Rounding</scope><name>Down</name></member>
      <member refid="class_quant_lib_1_1_rounding_1acc18d91f50c6de4b272f1982179e35bba9da4dddeabb102ba5553ffbee6df9640" prot="public" virt="non-virtual"><scope>QuantLib::Rounding</scope><name>Floor</name></member>
      <member refid="class_quant_lib_1_1_rounding_1acc18d91f50c6de4b272f1982179e35bbacfb80f89be5c274493c15b9d74900051" prot="public" virt="non-virtual"><scope>QuantLib::Rounding</scope><name>None</name></member>
      <member refid="class_quant_lib_1_1_rounding_1af2b1d4eab4da764edb4e329be7d9e194" prot="public" virt="non-virtual"><scope>QuantLib::Rounding</scope><name>operator()</name></member>
      <member refid="class_quant_lib_1_1_rounding_1ac961cbfb3b331390fe3f3894ffbafbb5" prot="public" virt="non-virtual"><scope>QuantLib::Rounding</scope><name>precision</name></member>
      <member refid="class_quant_lib_1_1_rounding_1a94fa5963bbe6369d49e4bf541487d668" prot="private" virt="non-virtual"><scope>QuantLib::Rounding</scope><name>precision_</name></member>
      <member refid="class_quant_lib_1_1_rounding_1aeb59e087e4943bec35ee7f6c78d6a4d6" prot="public" virt="non-virtual"><scope>QuantLib::Rounding</scope><name>Rounding</name></member>
      <member refid="class_quant_lib_1_1_rounding_1a756eb8173ecb835dafd463c741effb93" prot="public" virt="non-virtual"><scope>QuantLib::Rounding</scope><name>Rounding</name></member>
      <member refid="class_quant_lib_1_1_rounding_1a9c1f4bc3d65a4326fd0a8c8df8a2b209" prot="public" virt="non-virtual"><scope>QuantLib::Rounding</scope><name>roundingDigit</name></member>
      <member refid="class_quant_lib_1_1_rounding_1acc18d91f50c6de4b272f1982179e35bb" prot="public" virt="non-virtual"><scope>QuantLib::Rounding</scope><name>Type</name></member>
      <member refid="class_quant_lib_1_1_rounding_1abae2d9814693aedf099bcd4ad987feb4" prot="public" virt="non-virtual"><scope>QuantLib::Rounding</scope><name>type</name></member>
      <member refid="class_quant_lib_1_1_rounding_1a02e1f500043bcd9247abf12c4e85afbc" prot="private" virt="non-virtual"><scope>QuantLib::Rounding</scope><name>type_</name></member>
      <member refid="class_quant_lib_1_1_rounding_1acc18d91f50c6de4b272f1982179e35bba1eff3ec70afe96d86225d53ce8922817" prot="public" virt="non-virtual"><scope>QuantLib::Rounding</scope><name>Up</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_svi_interpolated_smile_section" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::SviInterpolatedSmileSection</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_smile_section" prot="public" virt="non-virtual">QuantLib::SmileSection</basecompoundref>
    <basecompoundref refid="class_quant_lib_1_1_lazy_object" prot="public" virt="non-virtual">QuantLib::LazyObject</basecompoundref>
    <sectiondef kind="user-defined">
      <header>Inspectors</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_svi_interpolated_smile_section_1a9a48d8afc9134c50bcfe27611c2acbce" prot="protected" static="no" mutable="yes">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_svi_interpolation" kindref="compound">SviInterpolation</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;SviInterpolation&gt; QuantLib::SviInterpolatedSmileSection::sviInterpolation_</definition>
        <argsstring></argsstring>
        <name>sviInterpolation_</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::sviInterpolation_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="113" column="29" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_svi_interpolated_smile_section_1a6acac3ed9e5a6d4f3fde5e3d1b9472c8" prot="protected" static="no" mutable="no">
        <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
        <definition>const Handle&lt;Quote&gt; QuantLib::SviInterpolatedSmileSection::forward_</definition>
        <argsstring></argsstring>
        <name>forward_</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::forward_</qualifiedname>
        <briefdescription>
<para>Market data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="116" column="18" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_svi_interpolated_smile_section_1a29f9c44dd807d49d835933d849dc5126" prot="protected" static="no" mutable="no">
        <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
        <definition>const Handle&lt;Quote&gt; QuantLib::SviInterpolatedSmileSection::atmVolatility_</definition>
        <argsstring></argsstring>
        <name>atmVolatility_</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::atmVolatility_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="117" column="18" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_svi_interpolated_smile_section_1ad6eecc6eee0d4ccd28c9ae8ae1c0cc5e" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &gt;</type>
        <definition>std::vector&lt;Handle&lt;Quote&gt; &gt; QuantLib::SviInterpolatedSmileSection::volHandles_</definition>
        <argsstring></argsstring>
        <name>volHandles_</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::volHandles_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="118" column="17" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_svi_interpolated_smile_section_1a65e24ad1dcdf9ba4d5625d38079f76c8" prot="protected" static="no" mutable="yes">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>std::vector&lt;Rate&gt; QuantLib::SviInterpolatedSmileSection::strikes_</definition>
        <argsstring></argsstring>
        <name>strikes_</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::strikes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="119" column="25" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_svi_interpolated_smile_section_1acb2459b004920dc26c387b48d11693d3" prot="protected" static="no" mutable="yes">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>std::vector&lt;Rate&gt; QuantLib::SviInterpolatedSmileSection::actualStrikes_</definition>
        <argsstring></argsstring>
        <name>actualStrikes_</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::actualStrikes_</qualifiedname>
        <briefdescription>
<para>Only strikes corresponding to valid market data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="121" column="25" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_svi_interpolated_smile_section_1a2cbfb05f68d317178fa458165b8a5dd5" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::SviInterpolatedSmileSection::hasFloatingStrikes_</definition>
        <argsstring></argsstring>
        <name>hasFloatingStrikes_</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::hasFloatingStrikes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="122" column="10" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_svi_interpolated_smile_section_1ac33a86e10f5518f6d9a7377df8ed1356" prot="protected" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SviInterpolatedSmileSection::forwardValue_</definition>
        <argsstring></argsstring>
        <name>forwardValue_</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::forwardValue_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="124" column="18" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_svi_interpolated_smile_section_1aaa7527da01660467021aa3269163b415" prot="protected" static="no" mutable="yes">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref> &gt;</type>
        <definition>std::vector&lt;Volatility&gt; QuantLib::SviInterpolatedSmileSection::vols_</definition>
        <argsstring></argsstring>
        <name>vols_</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::vols_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="125" column="25" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_svi_interpolated_smile_section_1ab8e6d77bdfcd9ab1dd47929cb9e6b335" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SviInterpolatedSmileSection::a_</definition>
        <argsstring></argsstring>
        <name>a_</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::a_</qualifiedname>
        <briefdescription>
<para><ref refid="class_quant_lib_1_1_svi" kindref="compound">Svi</ref> parameters. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="127" column="10" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_svi_interpolated_smile_section_1a287a361390703ccc131f7c9667002cbd" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SviInterpolatedSmileSection::b_</definition>
        <argsstring></argsstring>
        <name>b_</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::b_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="127" column="13" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_svi_interpolated_smile_section_1a2f973be3859d7089b68ee6b11804431d" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SviInterpolatedSmileSection::sigma_</definition>
        <argsstring></argsstring>
        <name>sigma_</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::sigma_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="127" column="16" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_svi_interpolated_smile_section_1addfd41dd79e7ed6d383a64af0e9c6d22" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SviInterpolatedSmileSection::rho_</definition>
        <argsstring></argsstring>
        <name>rho_</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::rho_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="127" column="23" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_svi_interpolated_smile_section_1acfc47031ec05f2da4528d640eca502d7" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SviInterpolatedSmileSection::m_</definition>
        <argsstring></argsstring>
        <name>m_</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::m_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="127" column="28" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_svi_interpolated_smile_section_1aa58143eab42a52e35857737e98efedf0" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::SviInterpolatedSmileSection::isAFixed_</definition>
        <argsstring></argsstring>
        <name>isAFixed_</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::isAFixed_</qualifiedname>
        <briefdescription>
<para><ref refid="class_quant_lib_1_1_svi" kindref="compound">Svi</ref> interpolation settings. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="129" column="10" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_svi_interpolated_smile_section_1ad43c1631ffdb9519d268116075629dfd" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::SviInterpolatedSmileSection::isBFixed_</definition>
        <argsstring></argsstring>
        <name>isBFixed_</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::isBFixed_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="129" column="20" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_svi_interpolated_smile_section_1a39520982956be4a3b4ffe807a9dec5e6" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::SviInterpolatedSmileSection::isSigmaFixed_</definition>
        <argsstring></argsstring>
        <name>isSigmaFixed_</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::isSigmaFixed_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="129" column="30" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_svi_interpolated_smile_section_1ab5c7d11eea0e83fe535593a123e2ac7f" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::SviInterpolatedSmileSection::isRhoFixed_</definition>
        <argsstring></argsstring>
        <name>isRhoFixed_</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::isRhoFixed_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="129" column="44" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_svi_interpolated_smile_section_1aa69a34d68b2c8ebb938d6d89aafb01be" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::SviInterpolatedSmileSection::isMFixed_</definition>
        <argsstring></argsstring>
        <name>isMFixed_</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::isMFixed_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="129" column="56" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_svi_interpolated_smile_section_1a532b8dc5ea2bca106dc9844c0a0a0430" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::SviInterpolatedSmileSection::vegaWeighted_</definition>
        <argsstring></argsstring>
        <name>vegaWeighted_</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::vegaWeighted_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="130" column="10" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_svi_interpolated_smile_section_1a09c530368dfde34919a9935fda5d3285" prot="protected" static="no" mutable="no">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_end_criteria" kindref="compound">EndCriteria</ref> &gt;</type>
        <definition>const ext::shared_ptr&lt;EndCriteria&gt; QuantLib::SviInterpolatedSmileSection::endCriteria_</definition>
        <argsstring></argsstring>
        <name>endCriteria_</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::endCriteria_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="131" column="27" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_svi_interpolated_smile_section_1af62486b4fbdef88eb2404b0b0ff8f298" prot="protected" static="no" mutable="no">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_optimization_method" kindref="compound">OptimizationMethod</ref> &gt;</type>
        <definition>const ext::shared_ptr&lt;OptimizationMethod&gt; QuantLib::SviInterpolatedSmileSection::method_</definition>
        <argsstring></argsstring>
        <name>method_</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::method_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="132" column="27" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_svi_interpolated_smile_section_1aa48cf8ba7868a861e43d3b936a2158e2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SviInterpolatedSmileSection::a</definition>
        <argsstring>() const</argsstring>
        <name>a</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::a</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="100" column="10" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_svi_interpolated_smile_section_1a60e602e469a6f654acde73cdf69ae9b0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SviInterpolatedSmileSection::b</definition>
        <argsstring>() const</argsstring>
        <name>b</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::b</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="101" column="10" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="150" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_svi_interpolated_smile_section_1a7784bc15e7e5fd356d4ee8f139069b8f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SviInterpolatedSmileSection::sigma</definition>
        <argsstring>() const</argsstring>
        <name>sigma</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::sigma</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="102" column="10" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="155" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_svi_interpolated_smile_section_1a3e50342e6720004e42e9f99f20a773a4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SviInterpolatedSmileSection::rho</definition>
        <argsstring>() const</argsstring>
        <name>rho</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::rho</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="103" column="10" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="160" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_svi_interpolated_smile_section_1a07272775a7375732d92efbf822b063a4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SviInterpolatedSmileSection::m</definition>
        <argsstring>() const</argsstring>
        <name>m</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::m</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="104" column="10" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="165" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_svi_interpolated_smile_section_1afbcbe4bf5eb029ed6ca5c4ee7503decf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SviInterpolatedSmileSection::rmsError</definition>
        <argsstring>() const</argsstring>
        <name>rmsError</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::rmsError</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="105" column="10" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="170" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_svi_interpolated_smile_section_1a25ba4bd33307617f3b7c52d5f84f8583" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SviInterpolatedSmileSection::maxError</definition>
        <argsstring>() const</argsstring>
        <name>maxError</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::maxError</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="106" column="10" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="175" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_svi_interpolated_smile_section_1a2a7ef2aa9febeca8cf50a5877ff3e4d0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>EndCriteria::Type</type>
        <definition>EndCriteria::Type QuantLib::SviInterpolatedSmileSection::endCriteria</definition>
        <argsstring>() const</argsstring>
        <name>endCriteria</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::endCriteria</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="107" column="23" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="180" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_svi_interpolated_smile_section_1ad6156b35f9b943b3ef5224ca7b356079" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::SviInterpolatedSmileSection::createInterpolation</definition>
        <argsstring>() const</argsstring>
        <name>createInterpolation</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::createInterpolation</qualifiedname>
        <briefdescription>
<para>Creates the mutable <ref refid="class_quant_lib_1_1_svi_interpolation" kindref="compound">SviInterpolation</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="112" column="10" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.cpp" bodystart="97" bodyend="104"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Constructors</header>
      <memberdef kind="function" id="class_quant_lib_1_1_svi_interpolated_smile_section_1a783ec33d467688423137d8be1b50ead9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::SviInterpolatedSmileSection::SviInterpolatedSmileSection</definition>
        <argsstring>(const Date &amp;optionDate, Handle&lt; Quote &gt; forward, const std::vector&lt; Rate &gt; &amp;strikes, bool hasFloatingStrikes, Handle&lt; Quote &gt; atmVolatility, const std::vector&lt; Handle&lt; Quote &gt; &gt; &amp;volHandles, Real a, Real b, Real sigma, Real rho, Real m, bool aIsFixed, bool bIsFixed, bool sigmaIsFixed, bool rhoIsFixed, bool mIsFixed, bool vegaWeighted=true, ext::shared_ptr&lt; EndCriteria &gt; endCriteria=ext::shared_ptr&lt; EndCriteria &gt;(), ext::shared_ptr&lt; OptimizationMethod &gt; method=ext::shared_ptr&lt; OptimizationMethod &gt;(), const DayCounter &amp;dc=Actual365Fixed())</argsstring>
        <name>SviInterpolatedSmileSection</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::SviInterpolatedSmileSection</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>optionDate</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
          <declname>forward</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
          <declname>strikes</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>hasFloatingStrikes</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
          <declname>atmVolatility</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &gt; &amp;</type>
          <declname>volHandles</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>sigma</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>rho</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>m</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>aIsFixed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bIsFixed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>sigmaIsFixed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>rhoIsFixed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>mIsFixed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>vegaWeighted</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_end_criteria" kindref="compound">EndCriteria</ref> &gt;</type>
          <declname>endCriteria</declname>
          <defval>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_end_criteria" kindref="compound">EndCriteria</ref> &gt;()</defval>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_optimization_method" kindref="compound">OptimizationMethod</ref> &gt;</type>
          <declname>method</declname>
          <defval>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_optimization_method" kindref="compound">OptimizationMethod</ref> &gt;()</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dc</declname>
          <defval><ref refid="class_quant_lib_1_1_actual365_fixed" kindref="compound">Actual365Fixed</ref>()</defval>
        </param>
        <briefdescription>
<para>all market data are quotes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="41" column="5" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.cpp" bodystart="27" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_svi_interpolated_smile_section_1a66d386ae6e55d938c9a56cfe32711659" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::SviInterpolatedSmileSection::SviInterpolatedSmileSection</definition>
        <argsstring>(const Date &amp;optionDate, const Rate &amp;forward, const std::vector&lt; Rate &gt; &amp;strikes, bool hasFloatingStrikes, const Volatility &amp;atmVolatility, const std::vector&lt; Volatility &gt; &amp;vols, Real a, Real b, Real sigma, Real rho, Real m, bool isAFixed, bool isBFixed, bool isSigmaFixed, bool isRhoFixed, bool isMFixed, bool vegaWeighted=true, ext::shared_ptr&lt; EndCriteria &gt; endCriteria=ext::shared_ptr&lt; EndCriteria &gt;(), ext::shared_ptr&lt; OptimizationMethod &gt; method=ext::shared_ptr&lt; OptimizationMethod &gt;(), const DayCounter &amp;dc=Actual365Fixed())</argsstring>
        <name>SviInterpolatedSmileSection</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::SviInterpolatedSmileSection</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>optionDate</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &amp;</type>
          <declname>forward</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
          <declname>strikes</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>hasFloatingStrikes</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref> &amp;</type>
          <declname>atmVolatility</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref> &gt; &amp;</type>
          <declname>vols</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>sigma</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>rho</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>m</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isAFixed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isBFixed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isSigmaFixed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isRhoFixed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isMFixed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>vegaWeighted</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_end_criteria" kindref="compound">EndCriteria</ref> &gt;</type>
          <declname>endCriteria</declname>
          <defval>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_end_criteria" kindref="compound">EndCriteria</ref> &gt;()</defval>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_optimization_method" kindref="compound">OptimizationMethod</ref> &gt;</type>
          <declname>method</declname>
          <defval>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_optimization_method" kindref="compound">OptimizationMethod</ref> &gt;()</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dc</declname>
          <defval><ref refid="class_quant_lib_1_1_actual365_fixed" kindref="compound">Actual365Fixed</ref>()</defval>
        </param>
        <briefdescription>
<para>no quotes </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="63" column="5" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.cpp" bodystart="62" bodyend="95"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>LazyObject interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_svi_interpolated_smile_section_1ab2652b08b984443909307f5d0a727cb3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::SviInterpolatedSmileSection::performCalculations</definition>
        <argsstring>() const override</argsstring>
        <name>performCalculations</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::performCalculations</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_lazy_object_1aafa5583a3743d9f93fa40da5b62e1ff8">performCalculations</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must implement any calculations which must be (re)done in order to calculate the desired results. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="87" column="10" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.cpp" bodystart="106" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_svi_interpolated_smile_section_1a464e4516d105d2b317f11ed5ca3f1071" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::SviInterpolatedSmileSection::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::update</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_smile_section_1adecc5abf2867e2291878329b0256b08a">update</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must be implemented in derived classes. An instance of Observer does not call this method directly: instead, it will be called by the observables the instance registered with when they need to notify any changes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="88" column="10" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="135" bodyend="138"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>SmileSection interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_svi_interpolated_smile_section_1a84c5c2abce3e9e6d39469d8115aade13" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SviInterpolatedSmileSection::minStrike</definition>
        <argsstring>() const override</argsstring>
        <name>minStrike</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::minStrike</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_smile_section_1a54bb5cd9f6913f7d69efc85d51af2624">minStrike</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="92" column="10" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="185" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_svi_interpolated_smile_section_1add420c506ac728d770e3b3805ffe0079" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SviInterpolatedSmileSection::maxStrike</definition>
        <argsstring>() const override</argsstring>
        <name>maxStrike</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::maxStrike</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_smile_section_1aa74a46c0a15e98112c1f9afaad9e6604">maxStrike</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="93" column="10" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="190" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_svi_interpolated_smile_section_1aee66c69f84128ccd841c3774d02aff45" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SviInterpolatedSmileSection::atmLevel</definition>
        <argsstring>() const override</argsstring>
        <name>atmLevel</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::atmLevel</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_smile_section_1a7ff3d003fcdcf207cde30c3469b6422a">atmLevel</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="94" column="10" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="195" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_svi_interpolated_smile_section_1a76325269c2c7cf944b6ba7da8f7831c5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SviInterpolatedSmileSection::varianceImpl</definition>
        <argsstring>(Rate strike) const override</argsstring>
        <name>varianceImpl</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::varianceImpl</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_smile_section_1a680162f5de7f231d1ff2b5fb76cfc54a">varianceImpl</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="96" column="10" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.cpp" bodystart="129" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_svi_interpolated_smile_section_1ab493f2de85c330982b46a8febcc2930d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
        <definition>Real QuantLib::SviInterpolatedSmileSection::volatilityImpl</definition>
        <argsstring>(Rate strike) const override</argsstring>
        <name>volatilityImpl</name>
        <qualifiedname>QuantLib::SviInterpolatedSmileSection::volatilityImpl</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_smile_section_1a14bf773bdfb690c9b9e9cbe61f14c2bf">volatilityImpl</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="97" column="16" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="140" bodyend="143"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>QuantLib::SmileSection</label>
        <link refid="class_quant_lib_1_1_smile_section"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::SviInterpolatedSmileSection</label>
        <link refid="class_quant_lib_1_1_svi_interpolated_smile_section"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>QuantLib::Handle&lt; QuantLib::Quote &gt;</label>
        <link refid="class_quant_lib_1_1_handle"/>
      </node>
      <node id="5">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>QuantLib::SmileSection</label>
        <link refid="class_quant_lib_1_1_smile_section"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::SviInterpolatedSmileSection</label>
        <link refid="class_quant_lib_1_1_svi_interpolated_smile_section"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>atmVolatility_</edgelabel>
          <edgelabel>forward_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" line="36" column="1" bodyfile="ql/experimental/volatility/sviinterpolatedsmilesection.hpp" bodystart="36" bodyend="133"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1aa48cf8ba7868a861e43d3b936a2158e2" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>a</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1ab8e6d77bdfcd9ab1dd47929cb9e6b335" prot="protected" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>a_</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1acb2459b004920dc26c387b48d11693d3" prot="protected" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>actualStrikes_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a02070ea7442d30625992c1711030d4b8" prot="protected" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>alwaysForward_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a17c9433135a259e4776baec66204a484" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>alwaysForwardNotifications</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1aee66c69f84128ccd841c3774d02aff45" prot="public" virt="virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>atmLevel</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1a29f9c44dd807d49d835933d849dc5126" prot="protected" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>atmVolatility_</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1a60e602e469a6f654acde73cdf69ae9b0" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>b</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1a287a361390703ccc131f7c9667002cbd" prot="protected" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>b_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a5244c7f83592375a0ea9048296435fd1" prot="protected" virt="virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a58b4986a80efa18634483a92c121e26e" prot="protected" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>calculated_</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1ad6156b35f9b943b3ef5224ca7b356079" prot="protected" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>createInterpolation</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a9d62efde0aa0bc8b6628ab562b5c479d" prot="public" virt="virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>dayCounter</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a3a4e90440ae22c4c9c3e9253b0199a82" prot="public" virt="virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>density</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a9ecdb328b2b90432da8a4429c4d56f06" prot="public" virt="virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>digitalOptionPrice</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1a2a7ef2aa9febeca8cf50a5877ff3e4d0" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>endCriteria</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1a09c530368dfde34919a9935fda5d3285" prot="protected" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>endCriteria_</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1ac9b9e60511fc940cd8d74fbbbcd87b5f" prot="public" virt="virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>exerciseDate</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a7bf1b552a5e93d12631f01a5fa59eb58" prot="public" virt="virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>exerciseTime</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1a6acac3ed9e5a6d4f3fde5e3d1b9472c8" prot="protected" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>forward_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1afac6ee19c3107c453e1347dd8000e023" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>forwardFirstNotificationOnly</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1ac33a86e10f5518f6d9a7377df8ed1356" prot="protected" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>forwardValue_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7157f41e83f2c5d924f5c5bafda04d1d" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>freeze</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7bb721fe00c6854e602758aba629ab77" prot="protected" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>frozen_</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1a2cbfb05f68d317178fa458165b8a5dd5" prot="protected" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>hasFloatingStrikes_</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a7fba48f0a4277b91b0d0768d262affdb" prot="protected" virt="virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>initializeExerciseTime</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1aa58143eab42a52e35857737e98efedf0" prot="protected" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>isAFixed_</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1ad43c1631ffdb9519d268116075629dfd" prot="protected" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>isBFixed_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a0a7c5d42815a4e16ee2158e24dbfc748" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>isCalculated</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1aa69a34d68b2c8ebb938d6d89aafb01be" prot="protected" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>isMFixed_</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1ab5c7d11eea0e83fe535593a123e2ac7f" prot="protected" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>isRhoFixed_</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1a39520982956be4a3b4ffe807a9dec5e6" prot="protected" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>isSigmaFixed_</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a26f18f4ff7faaaebd8eae50e064b493e" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>LazyObject</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1a07272775a7375732d92efbf822b063a4" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>m</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1acfc47031ec05f2da4528d640eca502d7" prot="protected" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>m_</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1a25ba4bd33307617f3b7c52d5f84f8583" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>maxError</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1add420c506ac728d770e3b3805ffe0079" prot="public" virt="virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>maxStrike</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1af62486b4fbdef88eb2404b0b0ff8f298" prot="protected" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>method_</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1a84c5c2abce3e9e6d39469d8115aade13" prot="public" virt="virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>minStrike</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::SmileSection::"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::SmileSection::"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::SmileSection::"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::SmileSection::QuantLib::Observer::"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1abf5fbad0f8d32a1b644ec3c23927061b" prot="public" virt="virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>optionPrice</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1ab2652b08b984443909307f5d0a727cb3" prot="public" virt="virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>performCalculations</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a70c9b24e50132408d8d9ce4f6674662a" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>recalculate</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a42fe316ed2696fb7b8b6fb8853b5bae0" prot="public" virt="virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>referenceDate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1a3e50342e6720004e42e9f99f20a773a4" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>rho</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1addfd41dd79e7ed6d383a64af0e9c6d22" prot="protected" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>rho_</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1afbcbe4bf5eb029ed6ca5c4ee7503decf" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>rmsError</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a3fbddba097e2b742fe8800217ed613cc" prot="public" virt="virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>shift</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1a7784bc15e7e5fd356d4ee8f139069b8f" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>sigma</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1a2f973be3859d7089b68ee6b11804431d" prot="protected" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>sigma_</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a6c2ea1d64020c754251c89372fe46686" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>SmileSection</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1aae4f281efa6a9f4b5cea8165363df3b5" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>SmileSection</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a67cece6b7c60c0a5d7729bea038fe85c" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>SmileSection</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1a65e24ad1dcdf9ba4d5625d38079f76c8" prot="protected" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>strikes_</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1a783ec33d467688423137d8be1b50ead9" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>SviInterpolatedSmileSection</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1a66d386ae6e55d938c9a56cfe32711659" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>SviInterpolatedSmileSection</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1a9a48d8afc9134c50bcfe27611c2acbce" prot="protected" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>sviInterpolation_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a2e0e4786666453024b9d4e0761f2770b" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>unfreeze</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1a464e4516d105d2b317f11ed5ca3f1071" prot="public" virt="virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a5bab1e23eb1c4d12f927c7b80cafa550" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>variance</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1a76325269c2c7cf944b6ba7da8f7831c5" prot="public" virt="virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>varianceImpl</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a7186ee49bc91697dcca75fd5204629be" prot="public" virt="virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>vega</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1a532b8dc5ea2bca106dc9844c0a0a0430" prot="protected" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>vegaWeighted_</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a0e1a9e52460bb881952fc9d9bce51a98" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>volatility</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a672a3e1398986f0a9c922b7b6bf3233c" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>volatility</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1ab493f2de85c330982b46a8febcc2930d" prot="public" virt="virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>volatilityImpl</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1aac4cb2b17d273eecb0508f3a5c050a22" prot="public" virt="virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>volatilityType</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1ad6eecc6eee0d4ccd28c9ae8ae1c0cc5e" prot="protected" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>volHandles_</name></member>
      <member refid="class_quant_lib_1_1_svi_interpolated_smile_section_1aaa7527da01660467021aa3269163b415" prot="protected" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>vols_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a9d719c43bb627177a90d7d12324a2d6e" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>~LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_smile_section_1a7c6cb707ed5e58e5a1fa92efc3a9a88f" prot="public" virt="non-virtual"><scope>QuantLib::SviInterpolatedSmileSection</scope><name>~SmileSection</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_fdm_dupire1d_op" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::FdmDupire1dOp</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_fdm_linear_op_composite" prot="public" virt="non-virtual">QuantLib::FdmLinearOpComposite</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_dupire1d_op_1ab22bebf97ed840d12861695e946c30df" prot="private" static="no" mutable="no">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_fdm_mesher" kindref="compound">FdmMesher</ref> &gt;</type>
        <definition>const ext::shared_ptr&lt;FdmMesher&gt; QuantLib::FdmDupire1dOp::mesher_</definition>
        <argsstring></argsstring>
        <name>mesher_</name>
        <qualifiedname>QuantLib::FdmDupire1dOp::mesher_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/finitedifferences/fdmdupire1dop.hpp" line="53" column="27" bodyfile="ql/experimental/finitedifferences/fdmdupire1dop.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_dupire1d_op_1a9a51c3ad6d2f6cf3e65ed7b79856ae79" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>const Array QuantLib::FdmDupire1dOp::localVolatility_</definition>
        <argsstring></argsstring>
        <name>localVolatility_</name>
        <qualifiedname>QuantLib::FdmDupire1dOp::localVolatility_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/finitedifferences/fdmdupire1dop.hpp" line="54" column="17" bodyfile="ql/experimental/finitedifferences/fdmdupire1dop.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_dupire1d_op_1a356c20ef019ca1f50a98644253875856" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_triple_band_linear_op" kindref="compound">TripleBandLinearOp</ref></type>
        <definition>TripleBandLinearOp QuantLib::FdmDupire1dOp::mapT_</definition>
        <argsstring></argsstring>
        <name>mapT_</name>
        <qualifiedname>QuantLib::FdmDupire1dOp::mapT_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/finitedifferences/fdmdupire1dop.hpp" line="55" column="24" bodyfile="ql/experimental/finitedifferences/fdmdupire1dop.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_dupire1d_op_1a915417a19ed52210253c8be10d57c621" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FdmDupire1dOp::FdmDupire1dOp</definition>
        <argsstring>(const ext::shared_ptr&lt; FdmMesher &gt; &amp;mesher, const Array &amp;localVolatility)</argsstring>
        <name>FdmDupire1dOp</name>
        <qualifiedname>QuantLib::FdmDupire1dOp::FdmDupire1dOp</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_fdm_mesher" kindref="compound">FdmMesher</ref> &gt; &amp;</type>
          <declname>mesher</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>localVolatility</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/finitedifferences/fdmdupire1dop.hpp" line="37" column="5" bodyfile="ql/experimental/finitedifferences/fdmdupire1dop.cpp" bodystart="26" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_dupire1d_op_1ad474104004dee838405aed2202913603" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::FdmDupire1dOp::size</definition>
        <argsstring>() const override</argsstring>
        <name>size</name>
        <qualifiedname>QuantLib::FdmDupire1dOp::size</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1aea89ff84d04c901c37823de66b392018">size</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/finitedifferences/fdmdupire1dop.hpp" line="40" column="10" bodyfile="ql/experimental/finitedifferences/fdmdupire1dop.cpp" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_dupire1d_op_1a70728095047f9cad2b76994596de76c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::FdmDupire1dOp::setTime</definition>
        <argsstring>(Time t1, Time t2) override</argsstring>
        <name>setTime</name>
        <qualifiedname>QuantLib::FdmDupire1dOp::setTime</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1ab635911759d6a1bde11c501d15515872">setTime</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t1</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t2</declname>
        </param>
        <briefdescription>
<para><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> <formula id="385">$t1 &lt;= t2$</formula> is required. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/finitedifferences/fdmdupire1dop.hpp" line="41" column="10" bodyfile="ql/experimental/finitedifferences/fdmdupire1dop.cpp" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_dupire1d_op_1a8baf8088e17e896ddb102390d168e4c7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FdmDupire1dOp::apply</definition>
        <argsstring>(const Array &amp;r) const override</argsstring>
        <name>apply</name>
        <qualifiedname>QuantLib::FdmDupire1dOp::apply</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_1a9d59d8bb3597206db60f61c3f448c211">apply</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/finitedifferences/fdmdupire1dop.hpp" line="43" column="11" bodyfile="ql/experimental/finitedifferences/fdmdupire1dop.cpp" bodystart="36" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_dupire1d_op_1af85093e9f6e387f2cfaa9159bc68a07e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FdmDupire1dOp::apply_mixed</definition>
        <argsstring>(const Array &amp;r) const override</argsstring>
        <name>apply_mixed</name>
        <qualifiedname>QuantLib::FdmDupire1dOp::apply_mixed</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1a162fe1437fb3060475f7824d73b72ff7">apply_mixed</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/finitedifferences/fdmdupire1dop.hpp" line="44" column="11" bodyfile="ql/experimental/finitedifferences/fdmdupire1dop.cpp" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_dupire1d_op_1aa23aab7c071133f6caafcc34a26c280d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FdmDupire1dOp::apply_direction</definition>
        <argsstring>(Size direction, const Array &amp;r) const override</argsstring>
        <name>apply_direction</name>
        <qualifiedname>QuantLib::FdmDupire1dOp::apply_direction</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1aa9f8c9bcd1596637b3eaaa74c64ad83c">apply_direction</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/finitedifferences/fdmdupire1dop.hpp" line="46" column="11" bodyfile="ql/experimental/finitedifferences/fdmdupire1dop.cpp" bodystart="40" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_dupire1d_op_1a0b287b33557c6fd15f3cb6a6d9d864c7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FdmDupire1dOp::solve_splitting</definition>
        <argsstring>(Size direction, const Array &amp;r, Real s) const override</argsstring>
        <name>solve_splitting</name>
        <qualifiedname>QuantLib::FdmDupire1dOp::solve_splitting</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1a1ea6ebafd3a36a95a6acb6e1c189e21f">solve_splitting</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/finitedifferences/fdmdupire1dop.hpp" line="47" column="11" bodyfile="ql/experimental/finitedifferences/fdmdupire1dop.cpp" bodystart="50" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_dupire1d_op_1a722587d14db8a32a83db0f0c7f0127ae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FdmDupire1dOp::preconditioner</definition>
        <argsstring>(const Array &amp;r, Real s) const override</argsstring>
        <name>preconditioner</name>
        <qualifiedname>QuantLib::FdmDupire1dOp::preconditioner</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1a3122983a62d53799ffd1c03922660e6c">preconditioner</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/finitedifferences/fdmdupire1dop.hpp" line="48" column="11" bodyfile="ql/experimental/finitedifferences/fdmdupire1dop.cpp" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_dupire1d_op_1a1c76f9f96b116db1c73af7c1ae69085c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; SparseMatrix &gt;</type>
        <definition>std::vector&lt; SparseMatrix &gt; QuantLib::FdmDupire1dOp::toMatrixDecomp</definition>
        <argsstring>() const override</argsstring>
        <name>toMatrixDecomp</name>
        <qualifiedname>QuantLib::FdmDupire1dOp::toMatrixDecomp</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1aae06b697cc0d041a8cbdd9b259ec34b9">toMatrixDecomp</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/finitedifferences/fdmdupire1dop.hpp" line="50" column="17" bodyfile="ql/experimental/finitedifferences/fdmdupire1dop.cpp" bodystart="62" bodyend="64"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::FdmDupire1dOp</label>
        <link refid="class_quant_lib_1_1_fdm_dupire1d_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::FdmLinearOp</label>
        <link refid="class_quant_lib_1_1_fdm_linear_op"/>
      </node>
      <node id="2">
        <label>QuantLib::FdmLinearOpComposite</label>
        <link refid="class_quant_lib_1_1_fdm_linear_op_composite"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::FdmDupire1dOp</label>
        <link refid="class_quant_lib_1_1_fdm_dupire1d_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::FdmLinearOp</label>
        <link refid="class_quant_lib_1_1_fdm_linear_op"/>
      </node>
      <node id="2">
        <label>QuantLib::FdmLinearOpComposite</label>
        <link refid="class_quant_lib_1_1_fdm_linear_op_composite"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/finitedifferences/fdmdupire1dop.hpp" line="35" column="1" bodyfile="ql/experimental/finitedifferences/fdmdupire1dop.hpp" bodystart="35" bodyend="56"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_fdm_dupire1d_op_1a8baf8088e17e896ddb102390d168e4c7" prot="public" virt="virtual"><scope>QuantLib::FdmDupire1dOp</scope><name>apply</name></member>
      <member refid="class_quant_lib_1_1_fdm_dupire1d_op_1aa23aab7c071133f6caafcc34a26c280d" prot="public" virt="virtual"><scope>QuantLib::FdmDupire1dOp</scope><name>apply_direction</name></member>
      <member refid="class_quant_lib_1_1_fdm_dupire1d_op_1af85093e9f6e387f2cfaa9159bc68a07e" prot="public" virt="virtual"><scope>QuantLib::FdmDupire1dOp</scope><name>apply_mixed</name></member>
      <member refid="class_quant_lib_1_1_fdm_linear_op_1af55693593c0cf7e885c67fd848f76e49" prot="public" virt="non-virtual"><scope>QuantLib::FdmDupire1dOp</scope><name>array_type</name></member>
      <member refid="class_quant_lib_1_1_fdm_dupire1d_op_1a915417a19ed52210253c8be10d57c621" prot="public" virt="non-virtual"><scope>QuantLib::FdmDupire1dOp</scope><name>FdmDupire1dOp</name></member>
      <member refid="class_quant_lib_1_1_fdm_dupire1d_op_1a9a51c3ad6d2f6cf3e65ed7b79856ae79" prot="private" virt="non-virtual"><scope>QuantLib::FdmDupire1dOp</scope><name>localVolatility_</name></member>
      <member refid="class_quant_lib_1_1_fdm_dupire1d_op_1a356c20ef019ca1f50a98644253875856" prot="private" virt="non-virtual"><scope>QuantLib::FdmDupire1dOp</scope><name>mapT_</name></member>
      <member refid="class_quant_lib_1_1_fdm_dupire1d_op_1ab22bebf97ed840d12861695e946c30df" prot="private" virt="non-virtual"><scope>QuantLib::FdmDupire1dOp</scope><name>mesher_</name></member>
      <member refid="class_quant_lib_1_1_fdm_dupire1d_op_1a722587d14db8a32a83db0f0c7f0127ae" prot="public" virt="virtual"><scope>QuantLib::FdmDupire1dOp</scope><name>preconditioner</name></member>
      <member refid="class_quant_lib_1_1_fdm_dupire1d_op_1a70728095047f9cad2b76994596de76c8" prot="public" virt="virtual"><scope>QuantLib::FdmDupire1dOp</scope><name>setTime</name></member>
      <member refid="class_quant_lib_1_1_fdm_dupire1d_op_1ad474104004dee838405aed2202913603" prot="public" virt="virtual"><scope>QuantLib::FdmDupire1dOp</scope><name>size</name></member>
      <member refid="class_quant_lib_1_1_fdm_dupire1d_op_1a0b287b33557c6fd15f3cb6a6d9d864c7" prot="public" virt="virtual"><scope>QuantLib::FdmDupire1dOp</scope><name>solve_splitting</name></member>
      <member refid="class_quant_lib_1_1_fdm_linear_op_composite_1abca0364ae63b5b0e714fcd3ac9e8a73b" prot="public" virt="virtual"><scope>QuantLib::FdmDupire1dOp</scope><name>toMatrix</name></member>
      <member refid="class_quant_lib_1_1_fdm_dupire1d_op_1a1c76f9f96b116db1c73af7c1ae69085c" prot="public" virt="virtual"><scope>QuantLib::FdmDupire1dOp</scope><name>toMatrixDecomp</name></member>
      <member refid="class_quant_lib_1_1_fdm_linear_op_1aa6f29eb6144a1848c73c21e392f023e4" prot="public" virt="virtual"><scope>QuantLib::FdmDupire1dOp</scope><name>~FdmLinearOp</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

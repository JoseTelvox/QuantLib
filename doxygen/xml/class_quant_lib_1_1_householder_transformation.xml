<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_householder_transformation" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::HouseholderTransformation</compoundname>
    <includes refid="householder_8hpp" local="no">householder.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_householder_transformation_1a7959e5aaac5452bd5d0aa995cbde8090" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>const Array QuantLib::HouseholderTransformation::v_</definition>
        <argsstring></argsstring>
        <name>v_</name>
        <qualifiedname>QuantLib::HouseholderTransformation::v_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/householder.hpp" line="43" column="21" bodyfile="ql/math/matrixutilities/householder.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_householder_transformation_1a33e600c335beabfedd47db4f4c7861bb" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::HouseholderTransformation::HouseholderTransformation</definition>
        <argsstring>(Array v)</argsstring>
        <name>HouseholderTransformation</name>
        <qualifiedname>QuantLib::HouseholderTransformation::HouseholderTransformation</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/householder.hpp" line="37" column="18" bodyfile="ql/math/matrixutilities/householder.cpp" bodystart="24" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_householder_transformation_1af1953ff357d7878d582baddb70b1f691" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::HouseholderTransformation::getMatrix</definition>
        <argsstring>() const</argsstring>
        <name>getMatrix</name>
        <qualifiedname>QuantLib::HouseholderTransformation::getMatrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/householder.hpp" line="39" column="16" bodyfile="ql/math/matrixutilities/householder.cpp" bodystart="32" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_householder_transformation_1a105fd976f27456c7d4cb57f88a82be9e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::HouseholderTransformation::operator()</definition>
        <argsstring>(const Array &amp;x) const</argsstring>
        <name>operator()</name>
        <qualifiedname>QuantLib::HouseholderTransformation::operator()</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/matrixutilities/householder.hpp" line="40" column="15" bodyfile="ql/math/matrixutilities/householder.cpp" bodystart="28" bodyend="30"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>References: <ulink url="https://en.wikipedia.org/wiki/Householder_transformation">https://en.wikipedia.org/wiki/Householder_transformation</ulink> </para>
    </detaileddescription>
    <location file="ql/math/matrixutilities/householder.hpp" line="35" column="5" bodyfile="ql/math/matrixutilities/householder.hpp" bodystart="35" bodyend="44"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_householder_transformation_1af1953ff357d7878d582baddb70b1f691" prot="public" virt="non-virtual"><scope>QuantLib::HouseholderTransformation</scope><name>getMatrix</name></member>
      <member refid="class_quant_lib_1_1_householder_transformation_1a33e600c335beabfedd47db4f4c7861bb" prot="public" virt="non-virtual"><scope>QuantLib::HouseholderTransformation</scope><name>HouseholderTransformation</name></member>
      <member refid="class_quant_lib_1_1_householder_transformation_1a105fd976f27456c7d4cb57f88a82be9e" prot="public" virt="non-virtual"><scope>QuantLib::HouseholderTransformation</scope><name>operator()</name></member>
      <member refid="class_quant_lib_1_1_householder_transformation_1a7959e5aaac5452bd5d0aa995cbde8090" prot="private" virt="non-virtual"><scope>QuantLib::HouseholderTransformation</scope><name>v_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_risky_bond_engine" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::RiskyBondEngine</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_bond_1_1engine" prot="public" virt="non-virtual">QuantLib::Bond::engine</basecompoundref>
    <includes refid="riskybondengine_8hpp" local="no">riskybondengine.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_risky_bond_engine_1a5773798861da6230376a8a16532123b2" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_default_probability_term_structure" kindref="compound">DefaultProbabilityTermStructure</ref> &gt;</type>
        <definition>Handle&lt;DefaultProbabilityTermStructure&gt; QuantLib::RiskyBondEngine::defaultTS_</definition>
        <argsstring></argsstring>
        <name>defaultTS_</name>
        <qualifiedname>QuantLib::RiskyBondEngine::defaultTS_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/bond/riskybondengine.hpp" line="74" column="16" bodyfile="ql/pricingengines/bond/riskybondengine.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_risky_bond_engine_1a952d960bc5df9daa55c2a9d69ff19607" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::RiskyBondEngine::recoveryRate_</definition>
        <argsstring></argsstring>
        <name>recoveryRate_</name>
        <qualifiedname>QuantLib::RiskyBondEngine::recoveryRate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/bond/riskybondengine.hpp" line="75" column="14" bodyfile="ql/pricingengines/bond/riskybondengine.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_risky_bond_engine_1ad804c75aa073bff414c1ed9b33145d3d" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
        <definition>Handle&lt;YieldTermStructure&gt; QuantLib::RiskyBondEngine::yieldTS_</definition>
        <argsstring></argsstring>
        <name>yieldTS_</name>
        <qualifiedname>QuantLib::RiskyBondEngine::yieldTS_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/bond/riskybondengine.hpp" line="76" column="16" bodyfile="ql/pricingengines/bond/riskybondengine.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_risky_bond_engine_1a6184d399ccb44b97e6e41b896cbc8082" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::RiskyBondEngine::RiskyBondEngine</definition>
        <argsstring>(Handle&lt; DefaultProbabilityTermStructure &gt; defaultTS, Real recoveryRate, Handle&lt; YieldTermStructure &gt; yieldTS)</argsstring>
        <name>RiskyBondEngine</name>
        <qualifiedname>QuantLib::RiskyBondEngine::RiskyBondEngine</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_default_probability_term_structure" kindref="compound">DefaultProbabilityTermStructure</ref> &gt;</type>
          <declname>defaultTS</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>recoveryRate</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
          <declname>yieldTS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/bond/riskybondengine.hpp" line="66" column="9" bodyfile="ql/pricingengines/bond/riskybondengine.cpp" bodystart="29" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_risky_bond_engine_1a869efe4b57b8a544b6a91fcb554e7225" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::RiskyBondEngine::calculate</definition>
        <argsstring>() const override</argsstring>
        <name>calculate</name>
        <qualifiedname>QuantLib::RiskyBondEngine::calculate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_pricing_engine_1ad2be11cff80d9792f0cc8231711fcb06">calculate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/bond/riskybondengine.hpp" line="69" column="14" bodyfile="ql/pricingengines/bond/riskybondengine.cpp" bodystart="39" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_risky_bond_engine_1ae1c4e068395b479f0d5a5dbd9139eb03" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_default_probability_term_structure" kindref="compound">DefaultProbabilityTermStructure</ref> &gt;</type>
        <definition>Handle&lt; DefaultProbabilityTermStructure &gt; QuantLib::RiskyBondEngine::defaultTS</definition>
        <argsstring>() const</argsstring>
        <name>defaultTS</name>
        <qualifiedname>QuantLib::RiskyBondEngine::defaultTS</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/bond/riskybondengine.hpp" line="70" column="16" bodyfile="ql/pricingengines/bond/riskybondengine.hpp" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_risky_bond_engine_1ad401c986246bafa1a3bca851486d8f15" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::RiskyBondEngine::recoveryRate</definition>
        <argsstring>() const</argsstring>
        <name>recoveryRate</name>
        <qualifiedname>QuantLib::RiskyBondEngine::recoveryRate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/bond/riskybondengine.hpp" line="71" column="14" bodyfile="ql/pricingengines/bond/riskybondengine.hpp" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_risky_bond_engine_1a9a862defc9201f8f9fed6deeef4c070c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
        <definition>Handle&lt; YieldTermStructure &gt; QuantLib::RiskyBondEngine::yieldTS</definition>
        <argsstring>() const</argsstring>
        <name>yieldTS</name>
        <qualifiedname>QuantLib::RiskyBondEngine::yieldTS</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/bond/riskybondengine.hpp" line="72" column="16" bodyfile="ql/pricingengines/bond/riskybondengine.hpp" bodystart="86" bodyend="86"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Risky pricing engine for bonds. </para>
    </briefdescription>
    <detaileddescription>
<para>The value of each cashflow is contingent to survival, i.e., the knockout probability is considered.</para>
<para>In each of the <formula id="334">$n$</formula> coupon periods, we can calculate the value in the case of survival and default, assuming that the issuer can only default in the middle of a coupon period. We denote this time <formula id="422">$T_{i}^{mid}=\frac{T_{i-1}+T_{i}}{2}$</formula>.</para>
<para>Given survival we receive the full cash flow (both coupons and notional). The time <formula id="63">$t$</formula> value of these payments are given by   <formula id="423">\[    \sum_{i=1}^{n}CF_{i}P(t,T_{i})Q(T_{i}&lt;\tau)
\]</formula> where <formula id="424">$P(t,T)$</formula> is the time <formula id="425">$T$</formula> discount bond and <formula id="426">$Q(T&lt;\tau)$</formula> is the time <formula id="425">$T$</formula> survival probability. <formula id="334">$n$</formula> is the number of coupon periods. This takes care of the payments in the case of survival.</para>
<para>Given default we receive only a fraction of the notional at default.   <formula id="427">\[    \sum_{i=1}^{n}Rec N(T_{i}^{mid}) P(t,T_{i}^{mid})Q(T_{i-1}&lt;\tau\leq T_{i})
\]</formula> where <formula id="428">$Rec$</formula> is the recovery rate and <formula id="429">$N(T)$</formula> is the time T notional. The default probability can be rewritten as   <formula id="430">\[    Q(T_{i-1}&lt;\tau\leq T_{i})=Q(T_{i}&lt;\tau)-Q(T_{i-1}&lt;\tau)=(1-Q(T_{i}\geq\tau))-(1-Q(T_{i-1}\geq\tau))=Q(T_{i-1}\geq\tau)-Q(T_{i}\geq\tau)
\]</formula> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::Bond::engine</label>
        <link refid="class_quant_lib_1_1_bond_1_1engine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::GenericEngine&lt; Bond::arguments, Bond::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_engine"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="4">
        <label>QuantLib::PricingEngine</label>
        <link refid="class_quant_lib_1_1_pricing_engine"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::RiskyBondEngine</label>
        <link refid="class_quant_lib_1_1_risky_bond_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7">
        <label>QuantLib::Bond::arguments</label>
        <link refid="class_quant_lib_1_1_bond_1_1arguments"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>settlementDate</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>calendar</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Bond::engine</label>
        <link refid="class_quant_lib_1_1_bond_1_1engine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>QuantLib::Bond::results</label>
        <link refid="class_quant_lib_1_1_bond_1_1results"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QuantLib::Calendar</label>
        <link refid="class_quant_lib_1_1_calendar"/>
      </node>
      <node id="9">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="3">
        <label>QuantLib::GenericEngine&lt; Bond::arguments, Bond::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_engine"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>arguments_</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>results_</edgelabel>
        </childnode>
      </node>
      <node id="12">
        <label>QuantLib::Instrument::results</label>
        <link refid="class_quant_lib_1_1_instrument_1_1results"/>
        <childnode refid="13" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>valuationDate</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="4">
        <label>QuantLib::PricingEngine</label>
        <link refid="class_quant_lib_1_1_pricing_engine"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::PricingEngine::arguments</label>
        <link refid="class_quant_lib_1_1_pricing_engine_1_1arguments"/>
      </node>
      <node id="13">
        <label>QuantLib::PricingEngine::results</label>
        <link refid="class_quant_lib_1_1_pricing_engine_1_1results"/>
      </node>
      <node id="1">
        <label>QuantLib::RiskyBondEngine</label>
        <link refid="class_quant_lib_1_1_risky_bond_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/pricingengines/bond/riskybondengine.hpp" line="64" column="5" bodyfile="ql/pricingengines/bond/riskybondengine.hpp" bodystart="64" bodyend="77"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_generic_engine_1ad2371cdbafa1989afb0e4733b1212c0d" prot="protected" virt="non-virtual"><scope>QuantLib::RiskyBondEngine</scope><name>arguments_</name></member>
      <member refid="class_quant_lib_1_1_risky_bond_engine_1a869efe4b57b8a544b6a91fcb554e7225" prot="public" virt="virtual"><scope>QuantLib::RiskyBondEngine</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::RiskyBondEngine</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_risky_bond_engine_1ae1c4e068395b479f0d5a5dbd9139eb03" prot="public" virt="non-virtual"><scope>QuantLib::RiskyBondEngine</scope><name>defaultTS</name></member>
      <member refid="class_quant_lib_1_1_risky_bond_engine_1a5773798861da6230376a8a16532123b2" prot="private" virt="non-virtual"><scope>QuantLib::RiskyBondEngine</scope><name>defaultTS_</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1ad9c6e8dc65ca072d5e6e17640d74db3e" prot="public" virt="virtual"><scope>QuantLib::RiskyBondEngine</scope><name>getArguments</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1aea8272ef6e5e0ea1cffadfed0454fa88" prot="public" virt="virtual"><scope>QuantLib::RiskyBondEngine</scope><name>getResults</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::RiskyBondEngine</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::RiskyBondEngine</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::RiskyBondEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::RiskyBondEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::RiskyBondEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::RiskyBondEngine</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::RiskyBondEngine</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::RiskyBondEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::RiskyBondEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::RiskyBondEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_risky_bond_engine_1ad401c986246bafa1a3bca851486d8f15" prot="public" virt="non-virtual"><scope>QuantLib::RiskyBondEngine</scope><name>recoveryRate</name></member>
      <member refid="class_quant_lib_1_1_risky_bond_engine_1a952d960bc5df9daa55c2a9d69ff19607" prot="private" virt="non-virtual"><scope>QuantLib::RiskyBondEngine</scope><name>recoveryRate_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::RiskyBondEngine</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::RiskyBondEngine</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1a81c5390ba1e713e57ca87d5f841d37f2" prot="public" virt="virtual"><scope>QuantLib::RiskyBondEngine</scope><name>reset</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1a41281f2ea4990dbce90be1f9f2e231f6" prot="protected" virt="non-virtual"><scope>QuantLib::RiskyBondEngine</scope><name>results_</name></member>
      <member refid="class_quant_lib_1_1_risky_bond_engine_1a6184d399ccb44b97e6e41b896cbc8082" prot="public" virt="non-virtual"><scope>QuantLib::RiskyBondEngine</scope><name>RiskyBondEngine</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::RiskyBondEngine</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::RiskyBondEngine</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1aaf5ef54d9e1abf8b1b50b48804edf3dc" prot="public" virt="virtual"><scope>QuantLib::RiskyBondEngine</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_risky_bond_engine_1a9a862defc9201f8f9fed6deeef4c070c" prot="public" virt="non-virtual"><scope>QuantLib::RiskyBondEngine</scope><name>yieldTS</name></member>
      <member refid="class_quant_lib_1_1_risky_bond_engine_1ad804c75aa073bff414c1ed9b33145d3d" prot="private" virt="non-virtual"><scope>QuantLib::RiskyBondEngine</scope><name>yieldTS_</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::RiskyBondEngine</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::RiskyBondEngine</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_pricing_engine_1a66b279a54578cd7e60d402e5147eb526" prot="public" virt="non-virtual"><scope>QuantLib::RiskyBondEngine</scope><name>~PricingEngine</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

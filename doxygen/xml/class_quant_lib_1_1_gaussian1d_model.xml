<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_gaussian1d_model" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::Gaussian1dModel</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_term_structure_consistent_model" prot="public" virt="non-virtual">QuantLib::TermStructureConsistentModel</basecompoundref>
    <basecompoundref refid="class_quant_lib_1_1_lazy_object" prot="public" virt="non-virtual">QuantLib::LazyObject</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_gsr" prot="public" virt="non-virtual">QuantLib::Gsr</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_markov_functional" prot="public" virt="non-virtual">QuantLib::MarkovFunctional</derivedcompoundref>
    <includes refid="gaussian1dmodel_8hpp" local="no">gaussian1dmodel.hpp</includes>
    <innerclass refid="struct_quant_lib_1_1_gaussian1d_model_1_1_cached_swap_key" prot="private">QuantLib::Gaussian1dModel::CachedSwapKey</innerclass>
    <innerclass refid="struct_quant_lib_1_1_gaussian1d_model_1_1_cached_swap_key_hasher" prot="private">QuantLib::Gaussian1dModel::CachedSwapKeyHasher</innerclass>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_gaussian1d_model_1a037fa6aae64d3bef9c0f5ec1a13db269" prot="private" static="no" mutable="yes">
        <type>std::unordered_map&lt; CachedSwapKey, ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_vanilla_swap" kindref="compound">VanillaSwap</ref> &gt;, CachedSwapKeyHasher &gt;</type>
        <definition>std::unordered_map&lt;CachedSwapKey, ext::shared_ptr&lt;VanillaSwap&gt;, CachedSwapKeyHasher&gt; QuantLib::Gaussian1dModel::swapCache_</definition>
        <argsstring></argsstring>
        <name>swapCache_</name>
        <qualifiedname>QuantLib::Gaussian1dModel::swapCache_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" line="177" column="32" bodyfile="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" bodystart="177" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_gaussian1d_model_1a230e77edf5f6c60a01a15ea37d822b8c" prot="protected" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_stochastic_process1_d" kindref="compound">StochasticProcess1D</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;StochasticProcess1D&gt; QuantLib::Gaussian1dModel::stateProcess_</definition>
        <argsstring></argsstring>
        <name>stateProcess_</name>
        <qualifiedname>QuantLib::Gaussian1dModel::stateProcess_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" line="219" column="21" bodyfile="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_gaussian1d_model_1a1a79a7d006514bc879b829fb7cce0b32" prot="protected" static="no" mutable="yes">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::Gaussian1dModel::evaluationDate_</definition>
        <argsstring></argsstring>
        <name>evaluationDate_</name>
        <qualifiedname>QuantLib::Gaussian1dModel::evaluationDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" line="220" column="18" bodyfile="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_gaussian1d_model_1a4191c13114b4c255bd15023fda112bb7" prot="protected" static="no" mutable="yes">
        <type>bool</type>
        <definition>bool QuantLib::Gaussian1dModel::enforcesTodaysHistoricFixings_</definition>
        <argsstring></argsstring>
        <name>enforcesTodaysHistoricFixings_</name>
        <qualifiedname>QuantLib::Gaussian1dModel::enforcesTodaysHistoricFixings_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" line="221" column="18" bodyfile="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" bodystart="221" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_gaussian1d_model_1a18b9a69958760d4d8c4e5b8c1aa33672" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_stochastic_process1_d" kindref="compound">StochasticProcess1D</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; StochasticProcess1D &gt; QuantLib::Gaussian1dModel::stateProcess</definition>
        <argsstring>() const</argsstring>
        <name>stateProcess</name>
        <qualifiedname>QuantLib::Gaussian1dModel::stateProcess</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" line="74" column="21" bodyfile="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" bodystart="224" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gaussian1d_model_1a8a1a2254ee3af1847f4834502fe633da" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Gaussian1dModel::numeraire</definition>
        <argsstring>(Time t, Real y=0.0, const Handle&lt; YieldTermStructure &gt; &amp;yts=Handle&lt; YieldTermStructure &gt;()) const</argsstring>
        <name>numeraire</name>
        <qualifiedname>QuantLib::Gaussian1dModel::numeraire</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>y</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>yts</declname>
          <defval><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" line="76" column="10" bodyfile="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" bodystart="231" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gaussian1d_model_1ace852a9cba4468245c8132631d6355d7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Gaussian1dModel::zerobond</definition>
        <argsstring>(Time T, Time t=0.0, Real y=0.0, const Handle&lt; YieldTermStructure &gt; &amp;yts=Handle&lt; YieldTermStructure &gt;()) const</argsstring>
        <name>zerobond</name>
        <qualifiedname>QuantLib::Gaussian1dModel::zerobond</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>T</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>y</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>yts</declname>
          <defval><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" line="80" column="10" bodyfile="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" bodystart="238" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gaussian1d_model_1a8dee7c5e3980bd1705ca37be7bfcdf20" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Gaussian1dModel::numeraire</definition>
        <argsstring>(const Date &amp;referenceDate, Real y=0.0, const Handle&lt; YieldTermStructure &gt; &amp;yts=Handle&lt; YieldTermStructure &gt;()) const</argsstring>
        <name>numeraire</name>
        <qualifiedname>QuantLib::Gaussian1dModel::numeraire</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>referenceDate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>y</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>yts</declname>
          <defval><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" line="85" column="10" bodyfile="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" bodystart="244" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gaussian1d_model_1a971e93d2e7dc87a72828ecdba8ad47f8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Gaussian1dModel::zerobond</definition>
        <argsstring>(const Date &amp;maturity, const Date &amp;referenceDate=Date(), Real y=0.0, const Handle&lt; YieldTermStructure &gt; &amp;yts=Handle&lt; YieldTermStructure &gt;()) const</argsstring>
        <name>zerobond</name>
        <qualifiedname>QuantLib::Gaussian1dModel::zerobond</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>maturity</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>referenceDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>y</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>yts</declname>
          <defval><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" line="89" column="10" bodyfile="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" bodystart="251" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gaussian1d_model_1a3d5903550581a1ed1705aebbf548a251" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Gaussian1dModel::zerobondOption</definition>
        <argsstring>(const Option::Type &amp;type, const Date &amp;expiry, const Date &amp;valueDate, const Date &amp;maturity, Rate strike, const Date &amp;referenceDate=Date(), Real y=0.0, const Handle&lt; YieldTermStructure &gt; &amp;yts=Handle&lt; YieldTermStructure &gt;(), Real yStdDevs=7.0, Size yGridPoints=64, bool extrapolatePayoff=true, bool flatPayoffExtrapolation=false) const</argsstring>
        <name>zerobondOption</name>
        <qualifiedname>QuantLib::Gaussian1dModel::zerobondOption</qualifiedname>
        <param>
          <type>const Option::Type &amp;</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>expiry</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>valueDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>maturity</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>referenceDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>y</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>yts</declname>
          <defval><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;()</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>yStdDevs</declname>
          <defval>7.0</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>yGridPoints</declname>
          <defval>64</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolatePayoff</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>flatPayoffExtrapolation</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" line="94" column="10" bodyfile="ql/models/shortrate/onefactormodels/gaussian1dmodel.cpp" bodystart="143" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gaussian1d_model_1ab08758ac455bee935c59b26181a86307" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Gaussian1dModel::forwardRate</definition>
        <argsstring>(const Date &amp;fixing, const Date &amp;referenceDate=Date(), Real y=0.0, const ext::shared_ptr&lt; IborIndex &gt; &amp;iborIdx=ext::shared_ptr&lt; IborIndex &gt;()) const</argsstring>
        <name>forwardRate</name>
        <qualifiedname>QuantLib::Gaussian1dModel::forwardRate</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>fixing</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>referenceDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>y</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_ibor_index" kindref="compound">IborIndex</ref> &gt; &amp;</type>
          <declname>iborIdx</declname>
          <defval>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_ibor_index" kindref="compound">IborIndex</ref> &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" line="108" column="5" bodyfile="ql/models/shortrate/onefactormodels/gaussian1dmodel.cpp" bodystart="27" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gaussian1d_model_1a09972042f535a7f5f1245064970e80b0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Gaussian1dModel::swapRate</definition>
        <argsstring>(const Date &amp;fixing, const Period &amp;tenor, const Date &amp;referenceDate=Date(), Real y=0.0, const ext::shared_ptr&lt; SwapIndex &gt; &amp;swapIdx=ext::shared_ptr&lt; SwapIndex &gt;()) const</argsstring>
        <name>swapRate</name>
        <qualifiedname>QuantLib::Gaussian1dModel::swapRate</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>fixing</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>tenor</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>referenceDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>y</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_swap_index" kindref="compound">SwapIndex</ref> &gt; &amp;</type>
          <declname>swapIdx</declname>
          <defval>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_swap_index" kindref="compound">SwapIndex</ref> &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" line="113" column="10" bodyfile="ql/models/shortrate/onefactormodels/gaussian1dmodel.cpp" bodystart="53" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gaussian1d_model_1a36a5a83c73650f95f1f98df1578c8f51" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Gaussian1dModel::swapAnnuity</definition>
        <argsstring>(const Date &amp;fixing, const Period &amp;tenor, const Date &amp;referenceDate=Date(), Real y=0.0, const ext::shared_ptr&lt; SwapIndex &gt; &amp;swapIdx=ext::shared_ptr&lt; SwapIndex &gt;()) const</argsstring>
        <name>swapAnnuity</name>
        <qualifiedname>QuantLib::Gaussian1dModel::swapAnnuity</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>fixing</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>tenor</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>referenceDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>y</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_swap_index" kindref="compound">SwapIndex</ref> &gt; &amp;</type>
          <declname>swapIdx</declname>
          <defval>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_swap_index" kindref="compound">SwapIndex</ref> &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" line="120" column="5" bodyfile="ql/models/shortrate/onefactormodels/gaussian1dmodel.cpp" bodystart="113" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gaussian1d_model_1af03811fbee0d8d4e91790a76a8a862a0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::Gaussian1dModel::yGrid</definition>
        <argsstring>(Real yStdDevs, int gridPoints, Real T=1.0, Real t=0, Real y=0) const</argsstring>
        <name>yGrid</name>
        <qualifiedname>QuantLib::Gaussian1dModel::yGrid</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>yStdDevs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>gridPoints</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>T</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>t</declname>
          <defval>0</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generates a grid of values for the standardized state variable $y$ at time $T$ conditional on $y(t)=y$, covering yStdDevs standard deviations consisting of 2*gridPoints+1 points </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" line="148" column="11" bodyfile="ql/models/shortrate/onefactormodels/gaussian1dmodel.cpp" bodystart="249" bodyend="284"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_quant_lib_1_1_gaussian1d_model_1a2606237f8756ca69c5206f5d8d1cd607" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Gaussian1dModel::gaussianPolynomialIntegral</definition>
        <argsstring>(Real a, Real b, Real c, Real d, Real e, Real x0, Real x1)</argsstring>
        <name>gaussianPolynomialIntegral</name>
        <qualifiedname>QuantLib::Gaussian1dModel::gaussianPolynomialIntegral</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computes the integral <formula id="404">\[ {2\pi}^{-0.5} \int_{a}^{b} p(x) \exp{-0.5*x*x} \mathrm{d}x \]</formula> with <formula id="405">\[ p(x) = ax^4+bx^3+cx^2+dx+e \]</formula>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" line="132" column="5" bodyfile="ql/models/shortrate/onefactormodels/gaussian1dmodel.cpp" bodystart="207" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gaussian1d_model_1a9dc6c696de6c09d568fb612210771168" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Gaussian1dModel::gaussianShiftedPolynomialIntegral</definition>
        <argsstring>(Real a, Real b, Real c, Real d, Real e, Real h, Real x0, Real x1)</argsstring>
        <name>gaussianShiftedPolynomialIntegral</name>
        <qualifiedname>QuantLib::Gaussian1dModel::gaussianShiftedPolynomialIntegral</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>h</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computes the integral <formula id="404">\[ {2\pi}^{-0.5} \int_{a}^{b} p(x) \exp{-0.5*x*x} \mathrm{d}x \]</formula> with <formula id="406">\[ p(x) = a(x-h)^4+b(x-h)^3+c(x-h)^2+d(x-h)+e \]</formula>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" line="139" column="17" bodyfile="ql/models/shortrate/onefactormodels/gaussian1dmodel.cpp" bodystart="240" bodyend="247"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_gaussian1d_model_1a48cf24f80b90b6f508f466b77fb2cc5b" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Gaussian1dModel::Gaussian1dModel</definition>
        <argsstring>(const Handle&lt; YieldTermStructure &gt; &amp;yieldTermStructure)</argsstring>
        <name>Gaussian1dModel</name>
        <qualifiedname>QuantLib::Gaussian1dModel::Gaussian1dModel</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>yieldTermStructure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" line="181" column="5" bodyfile="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" bodystart="181" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gaussian1d_model_1a51ca3a99898a9fabda8fe8a9b0de22cf" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::Gaussian1dModel::numeraireImpl</definition>
        <argsstring>(Time t, Real y, const Handle&lt; YieldTermStructure &gt; &amp;yts) const =0</argsstring>
        <name>numeraireImpl</name>
        <qualifiedname>QuantLib::Gaussian1dModel::numeraireImpl</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_gsr_1af520ad3118a7f4f93a9af15dcf42b2d9">numeraireImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_markov_functional_1a8679052a979d16258ea1e77c09f27c42">numeraireImpl</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>yts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" line="186" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gaussian1d_model_1a08f011ee1847db6713b20f4b1cc2d08d" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::Gaussian1dModel::zerobondImpl</definition>
        <argsstring>(Time T, Time t, Real y, const Handle&lt; YieldTermStructure &gt; &amp;yts) const =0</argsstring>
        <name>zerobondImpl</name>
        <qualifiedname>QuantLib::Gaussian1dModel::zerobondImpl</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_gsr_1a7714ff28614ec8eec923cb65bae435a6">zerobondImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_markov_functional_1a46d117fbb14b1c3f6a93a9b667c9f2d6">zerobondImpl</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>T</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>yts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" line="189" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gaussian1d_model_1ac299fb9c82685759700edcadc84b9f4c" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::Gaussian1dModel::performCalculations</definition>
        <argsstring>() const override</argsstring>
        <name>performCalculations</name>
        <qualifiedname>QuantLib::Gaussian1dModel::performCalculations</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_lazy_object_1aafa5583a3743d9f93fa40da5b62e1ff8">performCalculations</reimplements>
        <reimplementedby refid="class_quant_lib_1_1_gsr_1a6727fcb92ae273e667aaed986e9cd082">performCalculations</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_markov_functional_1a2ac6bb6bf0f33d2b6af7cb6897a60831">performCalculations</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must implement any calculations which must be (re)done in order to calculate the desired results. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" line="191" column="10" bodyfile="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" bodystart="191" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gaussian1d_model_1a9e9bbe4af2b0d5ce0f0ded42bb09ef44" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::Gaussian1dModel::generateArguments</definition>
        <argsstring>()</argsstring>
        <name>generateArguments</name>
        <qualifiedname>QuantLib::Gaussian1dModel::generateArguments</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" line="197" column="10" bodyfile="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" bodystart="197" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gaussian1d_model_1adf55b7dbb1184a0383d61c7a61c9474c" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_vanilla_swap" kindref="compound">VanillaSwap</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; VanillaSwap &gt; QuantLib::Gaussian1dModel::underlyingSwap</definition>
        <argsstring>(const ext::shared_ptr&lt; SwapIndex &gt; &amp;index, const Date &amp;expiry, const Period &amp;tenor) const</argsstring>
        <name>underlyingSwap</name>
        <qualifiedname>QuantLib::Gaussian1dModel::underlyingSwap</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_swap_index" kindref="compound">SwapIndex</ref> &gt; &amp;</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>expiry</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>tenor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" line="205" column="5" bodyfile="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" bodystart="205" bodyend="217"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>One factor interest rate model interface class The only methods that must be implemented by subclasses are the numeraire and zerobond methods for an input array of state variable values. The variable $y$ is understood to be the standardized (zero mean, unit variance) version of the model&apos;s original state variable $x$.</para>
<para>NTL support may be enabled by defining GAUSS1D_ENABLE_NTL in this file. For details on NTL see <ulink url="http://www.shoup.net/ntl/">http://www.shoup.net/ntl/</ulink></para>
<para><simplesect kind="warning"><para>the variance of the state process conditional on $x(t)=x$ must be independent of the value of $x$ </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::Gaussian1dModel</label>
        <link refid="class_quant_lib_1_1_gaussian1d_model"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::Gsr</label>
        <link refid="class_quant_lib_1_1_gsr"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::MarkovFunctional</label>
        <link refid="class_quant_lib_1_1_markov_functional"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>QuantLib::TermStructureConsistentModel</label>
        <link refid="class_quant_lib_1_1_term_structure_consistent_model"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="1">
        <label>QuantLib::Gaussian1dModel</label>
        <link refid="class_quant_lib_1_1_gaussian1d_model"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>evaluationDate_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>QuantLib::TermStructureConsistentModel</label>
        <link refid="class_quant_lib_1_1_term_structure_consistent_model"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" line="72" column="1" bodyfile="ql/models/shortrate/onefactormodels/gaussian1dmodel.hpp" bodystart="72" bodyend="222"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_lazy_object_1a02070ea7442d30625992c1711030d4b8" prot="protected" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>alwaysForward_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a17c9433135a259e4776baec66204a484" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>alwaysForwardNotifications</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a5244c7f83592375a0ea9048296435fd1" prot="protected" virt="virtual"><scope>QuantLib::Gaussian1dModel</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a58b4986a80efa18634483a92c121e26e" prot="protected" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>calculated_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::Gaussian1dModel</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1a4191c13114b4c255bd15023fda112bb7" prot="protected" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>enforcesTodaysHistoricFixings_</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1a1a79a7d006514bc879b829fb7cce0b32" prot="protected" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>evaluationDate_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1afac6ee19c3107c453e1347dd8000e023" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>forwardFirstNotificationOnly</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1ab08758ac455bee935c59b26181a86307" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>forwardRate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7157f41e83f2c5d924f5c5bafda04d1d" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>freeze</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7bb721fe00c6854e602758aba629ab77" prot="protected" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>frozen_</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1a48cf24f80b90b6f508f466b77fb2cc5b" prot="protected" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>Gaussian1dModel</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1a2606237f8756ca69c5206f5d8d1cd607" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>gaussianPolynomialIntegral</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1a9dc6c696de6c09d568fb612210771168" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>gaussianShiftedPolynomialIntegral</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1a9e9bbe4af2b0d5ce0f0ded42bb09ef44" prot="protected" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>generateArguments</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a0a7c5d42815a4e16ee2158e24dbfc748" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>isCalculated</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a26f18f4ff7faaaebd8eae50e064b493e" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1a8a1a2254ee3af1847f4834502fe633da" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>numeraire</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1a8dee7c5e3980bd1705ca37be7bfcdf20" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>numeraire</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1a51ca3a99898a9fabda8fe8a9b0de22cf" prot="protected" virt="pure-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>numeraireImpl</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructureConsistentModel::"><scope>QuantLib::Gaussian1dModel</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructureConsistentModel::"><scope>QuantLib::Gaussian1dModel</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::Gaussian1dModel</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::Gaussian1dModel</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructureConsistentModel::"><scope>QuantLib::Gaussian1dModel</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::QuantLib::Observer::"><scope>QuantLib::Gaussian1dModel</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1ac299fb9c82685759700edcadc84b9f4c" prot="protected" virt="virtual"><scope>QuantLib::Gaussian1dModel</scope><name>performCalculations</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a70c9b24e50132408d8d9ce4f6674662a" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>recalculate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1a18b9a69958760d4d8c4e5b8c1aa33672" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>stateProcess</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1a230e77edf5f6c60a01a15ea37d822b8c" prot="protected" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>stateProcess_</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1a36a5a83c73650f95f1f98df1578c8f51" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>swapAnnuity</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1a037fa6aae64d3bef9c0f5ec1a13db269" prot="private" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>swapCache_</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1a09972042f535a7f5f1245064970e80b0" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>swapRate</name></member>
      <member refid="class_quant_lib_1_1_term_structure_consistent_model_1a3035748f8b1b618e13a45428e3f55f90" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>termStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_consistent_model_1a20d3cd0bfeafc1ed325eb7e5747943a7" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>TermStructureConsistentModel</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1adf55b7dbb1184a0383d61c7a61c9474c" prot="protected" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>underlyingSwap</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a2e0e4786666453024b9d4e0761f2770b" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>unfreeze</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1adee2bf49be5c4c78736be293321a856d" prot="public" virt="virtual"><scope>QuantLib::Gaussian1dModel</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1af03811fbee0d8d4e91790a76a8a862a0" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>yGrid</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1ace852a9cba4468245c8132631d6355d7" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>zerobond</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1a971e93d2e7dc87a72828ecdba8ad47f8" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>zerobond</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1a08f011ee1847db6713b20f4b1cc2d08d" prot="protected" virt="pure-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>zerobondImpl</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1a3d5903550581a1ed1705aebbf548a251" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>zerobondOption</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a9d719c43bb627177a90d7d12324a2d6e" prot="public" virt="non-virtual"><scope>QuantLib::Gaussian1dModel</scope><name>~LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::Gaussian1dModel</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::Gaussian1dModel</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

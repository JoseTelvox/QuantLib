<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_parametric_exercise_adapter" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::ParametricExerciseAdapter</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_exercise_strategy" prot="public" virt="non-virtual">QuantLib::ExerciseStrategy&lt; CurveState &gt;</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_parametric_exercise_adapter_1adc3b8e2a89aa5e61729b6db6e35f1974" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_clone" kindref="compound">Clone</ref>&lt; <ref refid="class_quant_lib_1_1_market_model_parametric_exercise" kindref="compound">MarketModelParametricExercise</ref> &gt;</type>
        <definition>Clone&lt;MarketModelParametricExercise&gt; QuantLib::ParametricExerciseAdapter::exercise_</definition>
        <argsstring></argsstring>
        <name>exercise_</name>
        <qualifiedname>QuantLib::ParametricExerciseAdapter::exercise_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/callability/parametricexerciseadapter.hpp" line="44" column="15" bodyfile="ql/models/marketmodels/callability/parametricexerciseadapter.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_parametric_exercise_adapter_1ad523d6b8f4a30129612ef82a95bb04c7" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;Real&gt; &gt; QuantLib::ParametricExerciseAdapter::parameters_</definition>
        <argsstring></argsstring>
        <name>parameters_</name>
        <qualifiedname>QuantLib::ParametricExerciseAdapter::parameters_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/callability/parametricexerciseadapter.hpp" line="45" column="21" bodyfile="ql/models/marketmodels/callability/parametricexerciseadapter.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_parametric_exercise_adapter_1a5495189b2f286acf8f052f5d7a5b9da0" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;</type>
        <definition>std::vector&lt;Time&gt; QuantLib::ParametricExerciseAdapter::exerciseTimes_</definition>
        <argsstring></argsstring>
        <name>exerciseTimes_</name>
        <qualifiedname>QuantLib::ParametricExerciseAdapter::exerciseTimes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/callability/parametricexerciseadapter.hpp" line="46" column="21" bodyfile="ql/models/marketmodels/callability/parametricexerciseadapter.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_parametric_exercise_adapter_1a4995387284b7b2e31a80017d3cd24956" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::ParametricExerciseAdapter::currentStep_</definition>
        <argsstring></argsstring>
        <name>currentStep_</name>
        <qualifiedname>QuantLib::ParametricExerciseAdapter::currentStep_</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/callability/parametricexerciseadapter.hpp" line="47" column="14" bodyfile="ql/models/marketmodels/callability/parametricexerciseadapter.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_parametric_exercise_adapter_1a551fc472d522608baf3d6641ee5f1602" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::ParametricExerciseAdapter::currentExercise_</definition>
        <argsstring></argsstring>
        <name>currentExercise_</name>
        <qualifiedname>QuantLib::ParametricExerciseAdapter::currentExercise_</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/callability/parametricexerciseadapter.hpp" line="47" column="28" bodyfile="ql/models/marketmodels/callability/parametricexerciseadapter.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_parametric_exercise_adapter_1a61157906c2646f5f8ef1fe3dc40dcfd9" prot="private" static="no" mutable="no">
        <type>std::valarray&lt; bool &gt;</type>
        <definition>std::valarray&lt;bool&gt; QuantLib::ParametricExerciseAdapter::isExerciseTime_</definition>
        <argsstring></argsstring>
        <name>isExerciseTime_</name>
        <qualifiedname>QuantLib::ParametricExerciseAdapter::isExerciseTime_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/callability/parametricexerciseadapter.hpp" line="48" column="23" bodyfile="ql/models/marketmodels/callability/parametricexerciseadapter.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_parametric_exercise_adapter_1ae6b70efa506e15f9e579fb2b8dff7048" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &gt;</type>
        <definition>std::vector&lt;Size&gt; QuantLib::ParametricExerciseAdapter::numberOfVariables_</definition>
        <argsstring></argsstring>
        <name>numberOfVariables_</name>
        <qualifiedname>QuantLib::ParametricExerciseAdapter::numberOfVariables_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/callability/parametricexerciseadapter.hpp" line="49" column="21" bodyfile="ql/models/marketmodels/callability/parametricexerciseadapter.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_parametric_exercise_adapter_1a4be5b2b0f1b7c51268a84f3fe15595e7" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::ParametricExerciseAdapter::variables_</definition>
        <argsstring></argsstring>
        <name>variables_</name>
        <qualifiedname>QuantLib::ParametricExerciseAdapter::variables_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/callability/parametricexerciseadapter.hpp" line="50" column="29" bodyfile="ql/models/marketmodels/callability/parametricexerciseadapter.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_parametric_exercise_adapter_1ae2750377f0e66dda7fedf1e183570d39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ParametricExerciseAdapter::ParametricExerciseAdapter</definition>
        <argsstring>(const MarketModelParametricExercise &amp;exercise, std::vector&lt; std::vector&lt; Real &gt; &gt; parameters)</argsstring>
        <name>ParametricExerciseAdapter</name>
        <qualifiedname>QuantLib::ParametricExerciseAdapter::ParametricExerciseAdapter</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_market_model_parametric_exercise" kindref="compound">MarketModelParametricExercise</ref> &amp;</type>
          <declname>exercise</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &gt;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/callability/parametricexerciseadapter.hpp" line="35" column="9" bodyfile="ql/models/marketmodels/callability/parametricexerciseadapter.cpp" bodystart="27" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_parametric_exercise_adapter_1ab36e07c53dd06f996552fb994c7803cc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;</type>
        <definition>std::vector&lt; Time &gt; QuantLib::ParametricExerciseAdapter::exerciseTimes</definition>
        <argsstring>() const override</argsstring>
        <name>exerciseTimes</name>
        <qualifiedname>QuantLib::ParametricExerciseAdapter::exerciseTimes</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_exercise_strategy_1a62a09406e2863e42ecc2a91ab3af2aa3">exerciseTimes</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/callability/parametricexerciseadapter.hpp" line="37" column="21" bodyfile="ql/models/marketmodels/callability/parametricexerciseadapter.cpp" bodystart="39" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_parametric_exercise_adapter_1aa8a573ef9d80e0c26abcec13235ba0bf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;</type>
        <definition>std::vector&lt; Time &gt; QuantLib::ParametricExerciseAdapter::relevantTimes</definition>
        <argsstring>() const override</argsstring>
        <name>relevantTimes</name>
        <qualifiedname>QuantLib::ParametricExerciseAdapter::relevantTimes</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_exercise_strategy_1a34f8c3ed0e7a2f17223018f2a25461de">relevantTimes</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/callability/parametricexerciseadapter.hpp" line="38" column="21" bodyfile="ql/models/marketmodels/callability/parametricexerciseadapter.cpp" bodystart="43" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_parametric_exercise_adapter_1af172be8291283a00e30360fd648cfe8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::ParametricExerciseAdapter::reset</definition>
        <argsstring>() override</argsstring>
        <name>reset</name>
        <qualifiedname>QuantLib::ParametricExerciseAdapter::reset</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_exercise_strategy_1a040a0da0703f53560eb22e88f2a4f19b">reset</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/callability/parametricexerciseadapter.hpp" line="39" column="14" bodyfile="ql/models/marketmodels/callability/parametricexerciseadapter.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_parametric_exercise_adapter_1a664a006cc6abfdf7ae845265ff354353" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::ParametricExerciseAdapter::nextStep</definition>
        <argsstring>(const CurveState &amp;currentState) override</argsstring>
        <name>nextStep</name>
        <qualifiedname>QuantLib::ParametricExerciseAdapter::nextStep</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_exercise_strategy_1a80939482349995cc39037f85581206bb">nextStep</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_curve_state" kindref="compound">CurveState</ref> &amp;</type>
          <declname>currentState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/callability/parametricexerciseadapter.hpp" line="40" column="14" bodyfile="ql/models/marketmodels/callability/parametricexerciseadapter.cpp" bodystart="52" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_parametric_exercise_adapter_1a932b34800aa3ea82b6243061bcaf9207" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QuantLib::ParametricExerciseAdapter::exercise</definition>
        <argsstring>(const CurveState &amp;currentState) const override</argsstring>
        <name>exercise</name>
        <qualifiedname>QuantLib::ParametricExerciseAdapter::exercise</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_exercise_strategy_1aa64190719346d2a7d41bd83fa3434b42">exercise</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_curve_state" kindref="compound">CurveState</ref> &amp;</type>
          <declname>currentState</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/callability/parametricexerciseadapter.hpp" line="41" column="14" bodyfile="ql/models/marketmodels/callability/parametricexerciseadapter.cpp" bodystart="59" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_parametric_exercise_adapter_1a21114b3a74588ae9cb7142a6ebeb6439" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::unique_ptr&lt; <ref refid="class_quant_lib_1_1_exercise_strategy" kindref="compound">ExerciseStrategy</ref>&lt; <ref refid="class_quant_lib_1_1_curve_state" kindref="compound">CurveState</ref> &gt; &gt;</type>
        <definition>std::unique_ptr&lt; ExerciseStrategy&lt; CurveState &gt; &gt; QuantLib::ParametricExerciseAdapter::clone</definition>
        <argsstring>() const override</argsstring>
        <name>clone</name>
        <qualifiedname>QuantLib::ParametricExerciseAdapter::clone</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_exercise_strategy_1a561c70bfc7582b2a506a20a2fe5d9124">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/callability/parametricexerciseadapter.hpp" line="42" column="25" bodyfile="ql/models/marketmodels/callability/parametricexerciseadapter.cpp" bodystart="67" bodyend="69"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::ExerciseStrategy&lt; CurveState &gt;</label>
        <link refid="class_quant_lib_1_1_exercise_strategy"/>
      </node>
      <node id="1">
        <label>QuantLib::ParametricExerciseAdapter</label>
        <link refid="class_quant_lib_1_1_parametric_exercise_adapter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::ExerciseStrategy&lt; CurveState &gt;</label>
        <link refid="class_quant_lib_1_1_exercise_strategy"/>
      </node>
      <node id="1">
        <label>QuantLib::ParametricExerciseAdapter</label>
        <link refid="class_quant_lib_1_1_parametric_exercise_adapter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/models/marketmodels/callability/parametricexerciseadapter.hpp" line="33" column="5" bodyfile="ql/models/marketmodels/callability/parametricexerciseadapter.hpp" bodystart="33" bodyend="51"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_parametric_exercise_adapter_1a21114b3a74588ae9cb7142a6ebeb6439" prot="public" virt="virtual"><scope>QuantLib::ParametricExerciseAdapter</scope><name>clone</name></member>
      <member refid="class_quant_lib_1_1_parametric_exercise_adapter_1a551fc472d522608baf3d6641ee5f1602" prot="private" virt="non-virtual"><scope>QuantLib::ParametricExerciseAdapter</scope><name>currentExercise_</name></member>
      <member refid="class_quant_lib_1_1_parametric_exercise_adapter_1a4995387284b7b2e31a80017d3cd24956" prot="private" virt="non-virtual"><scope>QuantLib::ParametricExerciseAdapter</scope><name>currentStep_</name></member>
      <member refid="class_quant_lib_1_1_parametric_exercise_adapter_1a932b34800aa3ea82b6243061bcaf9207" prot="public" virt="virtual"><scope>QuantLib::ParametricExerciseAdapter</scope><name>exercise</name></member>
      <member refid="class_quant_lib_1_1_parametric_exercise_adapter_1adc3b8e2a89aa5e61729b6db6e35f1974" prot="private" virt="non-virtual"><scope>QuantLib::ParametricExerciseAdapter</scope><name>exercise_</name></member>
      <member refid="class_quant_lib_1_1_parametric_exercise_adapter_1ab36e07c53dd06f996552fb994c7803cc" prot="public" virt="virtual"><scope>QuantLib::ParametricExerciseAdapter</scope><name>exerciseTimes</name></member>
      <member refid="class_quant_lib_1_1_parametric_exercise_adapter_1a5495189b2f286acf8f052f5d7a5b9da0" prot="private" virt="non-virtual"><scope>QuantLib::ParametricExerciseAdapter</scope><name>exerciseTimes_</name></member>
      <member refid="class_quant_lib_1_1_parametric_exercise_adapter_1a61157906c2646f5f8ef1fe3dc40dcfd9" prot="private" virt="non-virtual"><scope>QuantLib::ParametricExerciseAdapter</scope><name>isExerciseTime_</name></member>
      <member refid="class_quant_lib_1_1_parametric_exercise_adapter_1a664a006cc6abfdf7ae845265ff354353" prot="public" virt="virtual"><scope>QuantLib::ParametricExerciseAdapter</scope><name>nextStep</name></member>
      <member refid="class_quant_lib_1_1_parametric_exercise_adapter_1ae6b70efa506e15f9e579fb2b8dff7048" prot="private" virt="non-virtual"><scope>QuantLib::ParametricExerciseAdapter</scope><name>numberOfVariables_</name></member>
      <member refid="class_quant_lib_1_1_parametric_exercise_adapter_1ad523d6b8f4a30129612ef82a95bb04c7" prot="private" virt="non-virtual"><scope>QuantLib::ParametricExerciseAdapter</scope><name>parameters_</name></member>
      <member refid="class_quant_lib_1_1_parametric_exercise_adapter_1ae2750377f0e66dda7fedf1e183570d39" prot="public" virt="non-virtual"><scope>QuantLib::ParametricExerciseAdapter</scope><name>ParametricExerciseAdapter</name></member>
      <member refid="class_quant_lib_1_1_parametric_exercise_adapter_1aa8a573ef9d80e0c26abcec13235ba0bf" prot="public" virt="virtual"><scope>QuantLib::ParametricExerciseAdapter</scope><name>relevantTimes</name></member>
      <member refid="class_quant_lib_1_1_parametric_exercise_adapter_1af172be8291283a00e30360fd648cfe8a" prot="public" virt="virtual"><scope>QuantLib::ParametricExerciseAdapter</scope><name>reset</name></member>
      <member refid="class_quant_lib_1_1_parametric_exercise_adapter_1a4be5b2b0f1b7c51268a84f3fe15595e7" prot="private" virt="non-virtual"><scope>QuantLib::ParametricExerciseAdapter</scope><name>variables_</name></member>
      <member refid="class_quant_lib_1_1_exercise_strategy_1a39f9a6971a09b49d1ef7456a04257839" prot="public" virt="virtual"><scope>QuantLib::ParametricExerciseAdapter</scope><name>~ExerciseStrategy</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

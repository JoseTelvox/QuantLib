<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_gsr_process" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::GsrProcess</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_forward_measure_process1_d" prot="public" virt="non-virtual">QuantLib::ForwardMeasureProcess1D</basecompoundref>
    <includes refid="gsrprocess_8hpp" local="no">gsrprocess.hpp</includes>
    <sectiondef kind="user-defined">
      <header>ForwardMeasureProcess1D interface</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_gsr_process_1ab9568950055d503f61aaa8778405199c" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_quant_lib_1_1detail_1_1_gsr_process_core" kindref="compound">detail::GsrProcessCore</ref></type>
        <definition>const detail::GsrProcessCore QuantLib::GsrProcess::core_</definition>
        <argsstring></argsstring>
        <name>core_</name>
        <qualifiedname>QuantLib::GsrProcess::core_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/gsrprocess.hpp" line="71" column="38" bodyfile="ql/processes/gsrprocess.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_gsr_process_1a11b697ee6fc7a8327da7faac0c28c0c8" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::GsrProcess::referenceDate_</definition>
        <argsstring></argsstring>
        <name>referenceDate_</name>
        <qualifiedname>QuantLib::GsrProcess::referenceDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/gsrprocess.hpp" line="72" column="14" bodyfile="ql/processes/gsrprocess.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_gsr_process_1a0507fb85c67344d0cc72d31a187d5402" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref></type>
        <definition>DayCounter QuantLib::GsrProcess::dc_</definition>
        <argsstring></argsstring>
        <name>dc_</name>
        <qualifiedname>QuantLib::GsrProcess::dc_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/gsrprocess.hpp" line="73" column="20" bodyfile="ql/processes/gsrprocess.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_process_1a401cabe2a46aad8c304bc92708eca385" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::GsrProcess::setForwardMeasureTime</definition>
        <argsstring>(Time t) override</argsstring>
        <name>setForwardMeasureTime</name>
        <qualifiedname>QuantLib::GsrProcess::setForwardMeasureTime</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_forward_measure_process1_d_1a288020a065ed1e78edeabf5f1680ae56">setForwardMeasureTime</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/gsrprocess.hpp" line="59" column="14" bodyfile="ql/processes/gsrprocess.hpp" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_process_1a14b2b98dfaeab1ec20adcb6534cb57d7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::GsrProcess::sigma</definition>
        <argsstring>(Time t) const</argsstring>
        <name>sigma</name>
        <qualifiedname>QuantLib::GsrProcess::sigma</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>additional inspectors </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/gsrprocess.hpp" line="62" column="14" bodyfile="ql/processes/gsrprocess.cpp" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_process_1a42238eccb2220d121dc08f1607952bea" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::GsrProcess::reversion</definition>
        <argsstring>(Time t) const</argsstring>
        <name>reversion</name>
        <qualifiedname>QuantLib::GsrProcess::reversion</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/gsrprocess.hpp" line="63" column="14" bodyfile="ql/processes/gsrprocess.cpp" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_process_1aab3ecdfae02c2b43d08b08df387399b0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::GsrProcess::y</definition>
        <argsstring>(Time t) const</argsstring>
        <name>y</name>
        <qualifiedname>QuantLib::GsrProcess::y</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/gsrprocess.hpp" line="64" column="14" bodyfile="ql/processes/gsrprocess.cpp" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_process_1a22b5134c95deb4eae38f876ab33a0cf6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::GsrProcess::G</definition>
        <argsstring>(Time t, Time T, Real x) const</argsstring>
        <name>G</name>
        <qualifiedname>QuantLib::GsrProcess::G</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>T</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/gsrprocess.hpp" line="65" column="14" bodyfile="ql/processes/gsrprocess.cpp" bodystart="91" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_process_1adefbcd2b3e5dffd1e4a9dc12d429421a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::GsrProcess::flushCache</definition>
        <argsstring>() const</argsstring>
        <name>flushCache</name>
        <qualifiedname>QuantLib::GsrProcess::flushCache</qualifiedname>
        <briefdescription>
<para>reset cache </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/gsrprocess.hpp" line="67" column="14" bodyfile="ql/processes/gsrprocess.hpp" bodystart="83" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_process_1a46b0109d33cebadd3fdbf7aafde2609a" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::GsrProcess::checkT</definition>
        <argsstring>(Time t) const</argsstring>
        <name>checkT</name>
        <qualifiedname>QuantLib::GsrProcess::checkT</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/gsrprocess.hpp" line="70" column="14" bodyfile="ql/processes/gsrprocess.cpp" bodystart="37" bodyend="42"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>StochasticProcess1D interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_process_1ac0c81bb61eda8dc15b24aafc740af911" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::GsrProcess::x0</definition>
        <argsstring>() const override</argsstring>
        <name>x0</name>
        <qualifiedname>QuantLib::GsrProcess::x0</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process1_d_1a4a0eee3b5c6592950bd6635177f76113">x0</reimplements>
        <briefdescription>
<para>returns the initial value of the state variable </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/gsrprocess.hpp" line="50" column="14" bodyfile="ql/processes/gsrprocess.cpp" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_process_1a17a6a050de87abfa4a3e63e0243dec4f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::GsrProcess::drift</definition>
        <argsstring>(Time t, Real x) const override</argsstring>
        <name>drift</name>
        <qualifiedname>QuantLib::GsrProcess::drift</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process1_d_1ad27eced4c2abbe7d8da5951969158e2d">drift</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>returns the drift part of the equation, i.e. <formula id="478">$ \mu(t, x_t) $</formula> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/gsrprocess.hpp" line="51" column="14" bodyfile="ql/processes/gsrprocess.cpp" bodystart="53" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_process_1a40200151ce624122fa182ca7a1d7deee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::GsrProcess::diffusion</definition>
        <argsstring>(Time t, Real) const override</argsstring>
        <name>diffusion</name>
        <qualifiedname>QuantLib::GsrProcess::diffusion</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process1_d_1a66bde34ae0158d64169e39655fdfcfc0">diffusion</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>returns the diffusion part of the equation, i.e. <formula id="479">$ \sigma(t, x_t) $</formula> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/gsrprocess.hpp" line="52" column="14" bodyfile="ql/processes/gsrprocess.cpp" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_process_1aaba0d793a88010d0173337b864d973ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::GsrProcess::expectation</definition>
        <argsstring>(Time t0, Real x0, Time dt) const override</argsstring>
        <name>expectation</name>
        <qualifiedname>QuantLib::GsrProcess::expectation</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process1_d_1a4543779731a4ce76e9dd85f3c81752e7">expectation</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the expectation <formula id="480">$ E(x_{t_0 + \Delta t} | x_{t_0} = x_0) $</formula> of the process after a time interval <formula id="471">$ \Delta t $</formula> according to the given discretization. This method can be overridden in derived classes which want to hard-code a particular discretization. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/gsrprocess.hpp" line="53" column="14" bodyfile="ql/processes/gsrprocess.cpp" bodystart="64" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_process_1aa1027487e3496d00c21866eb673e5203" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::GsrProcess::stdDeviation</definition>
        <argsstring>(Time t0, Real x0, Time dt) const override</argsstring>
        <name>stdDeviation</name>
        <qualifiedname>QuantLib::GsrProcess::stdDeviation</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process1_d_1a3290404acdbfcbbd6bbf8b035862e803">stdDeviation</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the standard deviation <formula id="481">$ S(x_{t_0 + \Delta t} | x_{t_0} = x_0) $</formula> of the process after a time interval <formula id="471">$ \Delta t $</formula> according to the given discretization. This method can be overridden in derived classes which want to hard-code a particular discretization. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/gsrprocess.hpp" line="54" column="14" bodyfile="ql/processes/gsrprocess.cpp" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_process_1a18cf99a29828d272547eb594f1f25e27" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::GsrProcess::variance</definition>
        <argsstring>(Time t0, Real, Time dt) const override</argsstring>
        <name>variance</name>
        <qualifiedname>QuantLib::GsrProcess::variance</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process1_d_1afec760c46c7f53d98cea9befd7087508">variance</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the variance <formula id="482">$ V(x_{t_0 + \Delta t} | x_{t_0} = x_0) $</formula> of the process after a time interval <formula id="471">$ \Delta t $</formula> according to the given discretization. This method can be overridden in derived classes which want to hard-code a particular discretization. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/gsrprocess.hpp" line="55" column="14" bodyfile="ql/processes/gsrprocess.cpp" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_process_1a061a8613ca728825cef901b9e45d60fa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::GsrProcess::time</definition>
        <argsstring>(const Date &amp;d) const override</argsstring>
        <name>time</name>
        <qualifiedname>QuantLib::GsrProcess::time</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process_1a39c5f08a3779665f9185a558d2b8418d">time</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the time value corresponding to the given date in the reference system of the stochastic process.</para>
<para><simplesect kind="note"><para>As a number of processes might not need this functionality, a default implementation is given which raises an exception. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/gsrprocess.hpp" line="56" column="14" bodyfile="ql/processes/gsrprocess.cpp" bodystart="44" bodyend="49"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_process_1a8a28b19221f864249fe607cb5911b958" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::GsrProcess::GsrProcess</definition>
        <argsstring>(const Array &amp;times, const Array &amp;vols, const Array &amp;reversions, Real T=60.0, const Date &amp;referenceDate=Date(), DayCounter dc=DayCounter())</argsstring>
        <name>GsrProcess</name>
        <qualifiedname>QuantLib::GsrProcess::GsrProcess</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>times</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>vols</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>reversions</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>T</declname>
          <defval>60.0</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>referenceDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref></type>
          <declname>dc</declname>
          <defval><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/gsrprocess.hpp" line="42" column="9" bodyfile="ql/processes/gsrprocess.cpp" bodystart="26" bodyend="35"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>GSR stochastic process. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::ForwardMeasureProcess1D</label>
        <link refid="class_quant_lib_1_1_forward_measure_process1_d"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::GsrProcess</label>
        <link refid="class_quant_lib_1_1_gsr_process"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="4">
        <label>QuantLib::StochasticProcess</label>
        <link refid="class_quant_lib_1_1_stochastic_process"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::StochasticProcess1D</label>
        <link refid="class_quant_lib_1_1_stochastic_process1_d"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::ForwardMeasureProcess1D</label>
        <link refid="class_quant_lib_1_1_forward_measure_process1_d"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::GsrProcess</label>
        <link refid="class_quant_lib_1_1_gsr_process"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="4">
        <label>QuantLib::StochasticProcess</label>
        <link refid="class_quant_lib_1_1_stochastic_process"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::StochasticProcess1D</label>
        <link refid="class_quant_lib_1_1_stochastic_process1_d"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/processes/gsrprocess.hpp" line="40" column="5" bodyfile="ql/processes/gsrprocess.hpp" bodystart="40" bodyend="74"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_stochastic_process1_d_1a303b2e3c9243b674ac1f145c304811b7" prot="public" virt="virtual"><scope>QuantLib::GsrProcess</scope><name>apply</name></member>
      <member refid="class_quant_lib_1_1_gsr_process_1a46b0109d33cebadd3fdbf7aafde2609a" prot="private" virt="non-virtual"><scope>QuantLib::GsrProcess</scope><name>checkT</name></member>
      <member refid="class_quant_lib_1_1_gsr_process_1ab9568950055d503f61aaa8778405199c" prot="private" virt="non-virtual"><scope>QuantLib::GsrProcess</scope><name>core_</name></member>
      <member refid="class_quant_lib_1_1_gsr_process_1a0507fb85c67344d0cc72d31a187d5402" prot="private" virt="non-virtual"><scope>QuantLib::GsrProcess</scope><name>dc_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::GsrProcess</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_gsr_process_1a40200151ce624122fa182ca7a1d7deee" prot="public" virt="virtual"><scope>QuantLib::GsrProcess</scope><name>diffusion</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process1_d_1aff0e6c615f076baf4393abe860794583" prot="protected" virt="non-virtual"><scope>QuantLib::GsrProcess</scope><name>discretization_</name></member>
      <member refid="class_quant_lib_1_1_gsr_process_1a17a6a050de87abfa4a3e63e0243dec4f" prot="public" virt="virtual"><scope>QuantLib::GsrProcess</scope><name>drift</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process1_d_1a39605ea27c7ef3a7feafed4fafcc1f90" prot="public" virt="virtual"><scope>QuantLib::GsrProcess</scope><name>evolve</name></member>
      <member refid="class_quant_lib_1_1_gsr_process_1aaba0d793a88010d0173337b864d973ad" prot="public" virt="virtual"><scope>QuantLib::GsrProcess</scope><name>expectation</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a0346d38598fb9a5a1cd58024f05081aa" prot="public" virt="virtual"><scope>QuantLib::GsrProcess</scope><name>factors</name></member>
      <member refid="class_quant_lib_1_1_gsr_process_1adefbcd2b3e5dffd1e4a9dc12d429421a" prot="public" virt="non-virtual"><scope>QuantLib::GsrProcess</scope><name>flushCache</name></member>
      <member refid="class_quant_lib_1_1_forward_measure_process1_d_1af979d0c5450a0f246b0a4f25de461eca" prot="protected" virt="non-virtual"><scope>QuantLib::GsrProcess</scope><name>ForwardMeasureProcess1D</name></member>
      <member refid="class_quant_lib_1_1_forward_measure_process1_d_1a94185a3644676074e138d2fdd37d6610" prot="protected" virt="non-virtual"><scope>QuantLib::GsrProcess</scope><name>ForwardMeasureProcess1D</name></member>
      <member refid="class_quant_lib_1_1_forward_measure_process1_d_1a4ec0ebb27c1d1f1b008e853f4658587f" prot="protected" virt="non-virtual"><scope>QuantLib::GsrProcess</scope><name>ForwardMeasureProcess1D</name></member>
      <member refid="class_quant_lib_1_1_gsr_process_1a22b5134c95deb4eae38f876ab33a0cf6" prot="public" virt="non-virtual"><scope>QuantLib::GsrProcess</scope><name>G</name></member>
      <member refid="class_quant_lib_1_1_forward_measure_process1_d_1a6d7f571f0a20a65ec90e47050912af5b" prot="public" virt="non-virtual"><scope>QuantLib::GsrProcess</scope><name>getForwardMeasureTime</name></member>
      <member refid="class_quant_lib_1_1_gsr_process_1a8a28b19221f864249fe607cb5911b958" prot="public" virt="non-virtual"><scope>QuantLib::GsrProcess</scope><name>GsrProcess</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::GsrProcess</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::GsrProcess</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::GsrProcess</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::GsrProcess</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::GsrProcess</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::GsrProcess</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::GsrProcess</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::GsrProcess</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::GsrProcess</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::GsrProcess</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_gsr_process_1a11b697ee6fc7a8327da7faac0c28c0c8" prot="private" virt="non-virtual"><scope>QuantLib::GsrProcess</scope><name>referenceDate_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::GsrProcess</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::GsrProcess</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_gsr_process_1a42238eccb2220d121dc08f1607952bea" prot="public" virt="non-virtual"><scope>QuantLib::GsrProcess</scope><name>reversion</name></member>
      <member refid="class_quant_lib_1_1_gsr_process_1a401cabe2a46aad8c304bc92708eca385" prot="public" virt="virtual"><scope>QuantLib::GsrProcess</scope><name>setForwardMeasureTime</name></member>
      <member refid="class_quant_lib_1_1_gsr_process_1a14b2b98dfaeab1ec20adcb6534cb57d7" prot="public" virt="non-virtual"><scope>QuantLib::GsrProcess</scope><name>sigma</name></member>
      <member refid="class_quant_lib_1_1_gsr_process_1aa1027487e3496d00c21866eb673e5203" prot="public" virt="virtual"><scope>QuantLib::GsrProcess</scope><name>stdDeviation</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a2dd24b794a6b320bc60ba9e1a87bf48e" prot="protected" virt="non-virtual"><scope>QuantLib::GsrProcess</scope><name>StochasticProcess</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a957ee9776d6048835106ea29ea44927f" prot="protected" virt="non-virtual"><scope>QuantLib::GsrProcess</scope><name>StochasticProcess</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process1_d_1a8fd2dc83f956da3dd008242ee5a5c926" prot="protected" virt="non-virtual"><scope>QuantLib::GsrProcess</scope><name>StochasticProcess1D</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process1_d_1a0971f058bea9a93d2ced17c685576686" prot="protected" virt="non-virtual"><scope>QuantLib::GsrProcess</scope><name>StochasticProcess1D</name></member>
      <member refid="class_quant_lib_1_1_forward_measure_process1_d_1a05fc6ae81fca7bb07b2a735516c302a2" prot="protected" virt="non-virtual"><scope>QuantLib::GsrProcess</scope><name>T_</name></member>
      <member refid="class_quant_lib_1_1_gsr_process_1a061a8613ca728825cef901b9e45d60fa" prot="public" virt="virtual"><scope>QuantLib::GsrProcess</scope><name>time</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::GsrProcess</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::GsrProcess</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a0f22628658fd2dc702c13c354ef3244e" prot="public" virt="virtual"><scope>QuantLib::GsrProcess</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_gsr_process_1a18cf99a29828d272547eb594f1f25e27" prot="public" virt="virtual"><scope>QuantLib::GsrProcess</scope><name>variance</name></member>
      <member refid="class_quant_lib_1_1_gsr_process_1ac0c81bb61eda8dc15b24aafc740af911" prot="public" virt="virtual"><scope>QuantLib::GsrProcess</scope><name>x0</name></member>
      <member refid="class_quant_lib_1_1_gsr_process_1aab3ecdfae02c2b43d08b08df387399b0" prot="public" virt="non-virtual"><scope>QuantLib::GsrProcess</scope><name>y</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::GsrProcess</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::GsrProcess</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a0e2b6a14e675db5abd0ab8965ff7b2c3" prot="public" virt="non-virtual"><scope>QuantLib::GsrProcess</scope><name>~StochasticProcess</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

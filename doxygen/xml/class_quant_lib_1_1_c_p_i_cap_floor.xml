<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_c_p_i_cap_floor" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::CPICapFloor</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_instrument" prot="public" virt="non-virtual">QuantLib::Instrument</basecompoundref>
    <includes refid="cpicapfloor_8hpp" local="no">cpicapfloor.hpp</includes>
    <innerclass refid="class_quant_lib_1_1_c_p_i_cap_floor_1_1arguments" prot="public">QuantLib::CPICapFloor::arguments</innerclass>
    <innerclass refid="class_quant_lib_1_1_c_p_i_cap_floor_1_1engine" prot="public">QuantLib::CPICapFloor::engine</innerclass>
    <sectiondef kind="user-defined">
      <header>Instrument interface</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_p_i_cap_floor_1aaab8e746ce61936f9fbed3d0a2ca1bde" prot="protected" static="no" mutable="no">
        <type>Option::Type</type>
        <definition>Option::Type QuantLib::CPICapFloor::type_</definition>
        <argsstring></argsstring>
        <name>type_</name>
        <qualifiedname>QuantLib::CPICapFloor::type_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/cpicapfloor.hpp" line="100" column="22" bodyfile="ql/instruments/cpicapfloor.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_p_i_cap_floor_1a657589cc0a3846ab5ddab20db928a035" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CPICapFloor::nominal_</definition>
        <argsstring></argsstring>
        <name>nominal_</name>
        <qualifiedname>QuantLib::CPICapFloor::nominal_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/cpicapfloor.hpp" line="101" column="14" bodyfile="ql/instruments/cpicapfloor.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_p_i_cap_floor_1a009fae9b274dc8fc2ccadf5ed2596fb3" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::CPICapFloor::startDate_</definition>
        <argsstring></argsstring>
        <name>startDate_</name>
        <qualifiedname>QuantLib::CPICapFloor::startDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/cpicapfloor.hpp" line="102" column="14" bodyfile="ql/instruments/cpicapfloor.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_p_i_cap_floor_1ab82fe0f12fcbe73f845fd026188a9d44" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::CPICapFloor::fixDate_</definition>
        <argsstring></argsstring>
        <name>fixDate_</name>
        <qualifiedname>QuantLib::CPICapFloor::fixDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/cpicapfloor.hpp" line="102" column="25" bodyfile="ql/instruments/cpicapfloor.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_p_i_cap_floor_1aeb735b60014d713dc4891440cc754a29" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::CPICapFloor::payDate_</definition>
        <argsstring></argsstring>
        <name>payDate_</name>
        <qualifiedname>QuantLib::CPICapFloor::payDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/cpicapfloor.hpp" line="102" column="34" bodyfile="ql/instruments/cpicapfloor.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_p_i_cap_floor_1a7a512eb1408ef6a255824e4b702360b1" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CPICapFloor::baseCPI_</definition>
        <argsstring></argsstring>
        <name>baseCPI_</name>
        <qualifiedname>QuantLib::CPICapFloor::baseCPI_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/cpicapfloor.hpp" line="103" column="14" bodyfile="ql/instruments/cpicapfloor.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_p_i_cap_floor_1a952ae623033c60e96581f1573f2133b5" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::CPICapFloor::maturity_</definition>
        <argsstring></argsstring>
        <name>maturity_</name>
        <qualifiedname>QuantLib::CPICapFloor::maturity_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/cpicapfloor.hpp" line="104" column="14" bodyfile="ql/instruments/cpicapfloor.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_p_i_cap_floor_1a4f53ffe45a886b2ce6421aeb82dcabff" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref></type>
        <definition>Calendar QuantLib::CPICapFloor::fixCalendar_</definition>
        <argsstring></argsstring>
        <name>fixCalendar_</name>
        <qualifiedname>QuantLib::CPICapFloor::fixCalendar_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/cpicapfloor.hpp" line="105" column="18" bodyfile="ql/instruments/cpicapfloor.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_p_i_cap_floor_1ad4e736ab1a8f8040cca457666c5de739" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
        <definition>BusinessDayConvention QuantLib::CPICapFloor::fixConvention_</definition>
        <argsstring></argsstring>
        <name>fixConvention_</name>
        <qualifiedname>QuantLib::CPICapFloor::fixConvention_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/cpicapfloor.hpp" line="106" column="31" bodyfile="ql/instruments/cpicapfloor.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_p_i_cap_floor_1a43f143c4459ad63d3df36e974bf2bb3b" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref></type>
        <definition>Calendar QuantLib::CPICapFloor::payCalendar_</definition>
        <argsstring></argsstring>
        <name>payCalendar_</name>
        <qualifiedname>QuantLib::CPICapFloor::payCalendar_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/cpicapfloor.hpp" line="107" column="18" bodyfile="ql/instruments/cpicapfloor.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_p_i_cap_floor_1ad06a28dc5289291146934b5739557178" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
        <definition>BusinessDayConvention QuantLib::CPICapFloor::payConvention_</definition>
        <argsstring></argsstring>
        <name>payConvention_</name>
        <qualifiedname>QuantLib::CPICapFloor::payConvention_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/cpicapfloor.hpp" line="108" column="31" bodyfile="ql/instruments/cpicapfloor.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_p_i_cap_floor_1ad9546706297b71ffe432ea7725255d4c" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::CPICapFloor::strike_</definition>
        <argsstring></argsstring>
        <name>strike_</name>
        <qualifiedname>QuantLib::CPICapFloor::strike_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/cpicapfloor.hpp" line="109" column="14" bodyfile="ql/instruments/cpicapfloor.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_p_i_cap_floor_1a380a68c8633078ad8e2e1cc28c667787" prot="protected" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_zero_inflation_index" kindref="compound">ZeroInflationIndex</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;ZeroInflationIndex&gt; QuantLib::CPICapFloor::index_</definition>
        <argsstring></argsstring>
        <name>index_</name>
        <qualifiedname>QuantLib::CPICapFloor::index_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/cpicapfloor.hpp" line="110" column="25" bodyfile="ql/instruments/cpicapfloor.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_p_i_cap_floor_1a0b6fd82e776d4669219aad811bc78c48" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref></type>
        <definition>Period QuantLib::CPICapFloor::observationLag_</definition>
        <argsstring></argsstring>
        <name>observationLag_</name>
        <qualifiedname>QuantLib::CPICapFloor::observationLag_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/cpicapfloor.hpp" line="111" column="16" bodyfile="ql/instruments/cpicapfloor.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_c_p_i_cap_floor_1acc352da92497132358c2f041ced85b0b" prot="protected" static="no" mutable="no">
        <type><ref refid="struct_quant_lib_1_1_c_p_i_1adaf018681fd1d9478c984348c82c9013" kindref="member">CPI::InterpolationType</ref></type>
        <definition>CPI::InterpolationType QuantLib::CPICapFloor::observationInterpolation_</definition>
        <argsstring></argsstring>
        <name>observationInterpolation_</name>
        <qualifiedname>QuantLib::CPICapFloor::observationInterpolation_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/cpicapfloor.hpp" line="112" column="32" bodyfile="ql/instruments/cpicapfloor.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_cap_floor_1a135727166ac0e563e246b3c662afbd30" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QuantLib::CPICapFloor::isExpired</definition>
        <argsstring>() const override</argsstring>
        <name>isExpired</name>
        <qualifiedname>QuantLib::CPICapFloor::isExpired</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_instrument_1a121a2a929b179900744a58272d46aefe">isExpired</reimplements>
        <briefdescription>
<para>returns whether the instrument might have value greater than zero. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/cpicapfloor.hpp" line="95" column="14" bodyfile="ql/instruments/cpicapfloor.cpp" bodystart="84" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_cap_floor_1aedb3fd5d89567650d8f9dc6550c28adb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::CPICapFloor::setupArguments</definition>
        <argsstring>(PricingEngine::arguments *) const override</argsstring>
        <name>setupArguments</name>
        <qualifiedname>QuantLib::CPICapFloor::setupArguments</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_instrument_1af7344eebc48a1a361386e5c5a90a8fcc">setupArguments</reimplements>
        <param>
          <type><ref refid="class_quant_lib_1_1_pricing_engine_1_1arguments" kindref="compound">PricingEngine::arguments</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>When a derived argument structure is defined for an instrument, this method should be overridden to fill it. This is mandatory in case a pricing engine is used. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/cpicapfloor.hpp" line="96" column="14" bodyfile="ql/instruments/cpicapfloor.cpp" bodystart="94" bodyend="116"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Inspectors</header>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_cap_floor_1a0acf975b8c69b5b2eaac7f37f8e3d91f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Option::Type</type>
        <definition>Option::Type QuantLib::CPICapFloor::type</definition>
        <argsstring>() const</argsstring>
        <name>type</name>
        <qualifiedname>QuantLib::CPICapFloor::type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/cpicapfloor.hpp" line="83" column="22" bodyfile="ql/instruments/cpicapfloor.hpp" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_cap_floor_1aed0f13bd2d8b3efa83c31616c1bb1cf6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CPICapFloor::nominal</definition>
        <argsstring>() const</argsstring>
        <name>nominal</name>
        <qualifiedname>QuantLib::CPICapFloor::nominal</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/cpicapfloor.hpp" line="84" column="14" bodyfile="ql/instruments/cpicapfloor.hpp" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_cap_floor_1ad8d9f35bb891acb2a6b4d50b1cc56e32" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::CPICapFloor::strike</definition>
        <argsstring>() const</argsstring>
        <name>strike</name>
        <qualifiedname>QuantLib::CPICapFloor::strike</qualifiedname>
        <briefdescription>
<para><formula id="201">$ K $</formula> in the above formula. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/cpicapfloor.hpp" line="86" column="14" bodyfile="ql/instruments/cpicapfloor.hpp" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_cap_floor_1aafcbd9fde04703a36ced3f340f59c6b2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::CPICapFloor::fixingDate</definition>
        <argsstring>() const</argsstring>
        <name>fixingDate</name>
        <qualifiedname>QuantLib::CPICapFloor::fixingDate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/cpicapfloor.hpp" line="87" column="14" bodyfile="ql/instruments/cpicapfloor.cpp" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_cap_floor_1a0561e5b1b9e530fb9fd3fef7948ae298" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::CPICapFloor::payDate</definition>
        <argsstring>() const</argsstring>
        <name>payDate</name>
        <qualifiedname>QuantLib::CPICapFloor::payDate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/cpicapfloor.hpp" line="88" column="14" bodyfile="ql/instruments/cpicapfloor.cpp" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_cap_floor_1a90c179641a0bf676d2c751cc0b2f6b81" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_zero_inflation_index" kindref="compound">ZeroInflationIndex</ref> &gt; &amp;</type>
        <definition>const ext::shared_ptr&lt; ZeroInflationIndex &gt; &amp; QuantLib::CPICapFloor::index</definition>
        <argsstring>() const</argsstring>
        <name>index</name>
        <qualifiedname>QuantLib::CPICapFloor::index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/cpicapfloor.hpp" line="89" column="31" bodyfile="ql/instruments/cpicapfloor.hpp" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_cap_floor_1a7afcfbd1fb8795882edb4e7b387b1a2f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref></type>
        <definition>Period QuantLib::CPICapFloor::observationLag</definition>
        <argsstring>() const</argsstring>
        <name>observationLag</name>
        <qualifiedname>QuantLib::CPICapFloor::observationLag</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/cpicapfloor.hpp" line="90" column="16" bodyfile="ql/instruments/cpicapfloor.hpp" bodystart="90" bodyend="90"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_c_p_i_cap_floor_1a88ab460fb16cff530d838ba89ccd504f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::CPICapFloor::CPICapFloor</definition>
        <argsstring>(Option::Type type, Real nominal, const Date &amp;startDate, Real baseCPI, const Date &amp;maturity, Calendar fixCalendar, BusinessDayConvention fixConvention, Calendar payCalendar, BusinessDayConvention payConvention, Rate strike, ext::shared_ptr&lt; ZeroInflationIndex &gt; inflationIndex, const Period &amp;observationLag, CPI::InterpolationType observationInterpolation=CPI::AsIndex)</argsstring>
        <name>CPICapFloor</name>
        <qualifiedname>QuantLib::CPICapFloor::CPICapFloor</qualifiedname>
        <param>
          <type>Option::Type</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>nominal</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>startDate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>baseCPI</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>maturity</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref></type>
          <declname>fixCalendar</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
          <declname>fixConvention</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref></type>
          <declname>payCalendar</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
          <declname>payConvention</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_zero_inflation_index" kindref="compound">ZeroInflationIndex</ref> &gt;</type>
          <declname>inflationIndex</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>observationLag</declname>
        </param>
        <param>
          <type><ref refid="struct_quant_lib_1_1_c_p_i_1adaf018681fd1d9478c984348c82c9013" kindref="member">CPI::InterpolationType</ref></type>
          <declname>observationInterpolation</declname>
          <defval><ref refid="struct_quant_lib_1_1_c_p_i_1adaf018681fd1d9478c984348c82c9013a75ed05f2d211630e39eda9d94d0b4577" kindref="member">CPI::AsIndex</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/cpicapfloor.hpp" line="67" column="9" bodyfile="ql/instruments/cpicapfloor.cpp" bodystart="37" bodyend="70"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para><ref refid="struct_quant_lib_1_1_c_p_i" kindref="compound">CPI</ref> cap or floor. </para>
    </briefdescription>
    <detaileddescription>
<para>Quoted as a fixed strike rate <formula id="201">$ K $</formula>. <ref refid="class_quant_lib_1_1_payoff" kindref="compound">Payoff</ref>:    <formula id="202">\[P_n(0,T) \max(y (N [(1+K)^{T}-1] -
            N \left[ \frac{I(T)}{I(0)} -1 \right]), 0)
\]</formula> where <formula id="5">$ T $</formula> is the maturity time, <formula id="203">$ P_n(0,t) $</formula> is the nominal discount factor at time <formula id="183">$ t $</formula>, <formula id="4">$ N $</formula> is the notional, and <formula id="204">$ I(t) $</formula> is the inflation index value at time <formula id="183">$ t $</formula>.</para>
<para>Inflation is generally available on every day, including holidays and weekends. Hence there is a variable to state whether the observe/fix dates for inflation are adjusted or not. The default is not to adjust.</para>
<para>N.B. a cpi cap or floor is an option, not a cap or floor on a coupon. Thus this is very similar to a ZCIIS and has a single flow, this is as usual for cpi because it is cumulative up to option maturity from base date.</para>
<para>We do not inherit from <ref refid="class_quant_lib_1_1_option" kindref="compound">Option</ref>, although this would be reasonable, because we do not have that degree of generality. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::CPICapFloor</label>
        <link refid="class_quant_lib_1_1_c_p_i_cap_floor"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Instrument</label>
        <link refid="class_quant_lib_1_1_instrument"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::CPICapFloor</label>
        <link refid="class_quant_lib_1_1_c_p_i_cap_floor"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>fixDate_</edgelabel>
          <edgelabel>maturity_</edgelabel>
          <edgelabel>payDate_</edgelabel>
          <edgelabel>startDate_</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>fixCalendar_</edgelabel>
          <edgelabel>payCalendar_</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>observationLag_</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::Calendar</label>
        <link refid="class_quant_lib_1_1_calendar"/>
      </node>
      <node id="6">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="2">
        <label>QuantLib::Instrument</label>
        <link refid="class_quant_lib_1_1_instrument"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>valuationDate_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="8">
        <label>QuantLib::Period</label>
        <link refid="class_quant_lib_1_1_period"/>
      </node>
    </collaborationgraph>
    <location file="ql/instruments/cpicapfloor.hpp" line="62" column="5" bodyfile="ql/instruments/cpicapfloor.hpp" bodystart="62" bodyend="113"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_instrument_1a468edb294da268b097c91bf821084c07" prot="public" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>additionalResults</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a57d2b34e8625ab3d9ffa50c0c7931099" prot="protected" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>additionalResults_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a02070ea7442d30625992c1711030d4b8" prot="protected" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>alwaysForward_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a17c9433135a259e4776baec66204a484" prot="public" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>alwaysForwardNotifications</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cap_floor_1a7a512eb1408ef6a255824e4b702360b1" prot="protected" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>baseCPI_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a4c573c48f7eaead5042864ac0eb5b025" prot="protected" virt="virtual"><scope>QuantLib::CPICapFloor</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a58b4986a80efa18634483a92c121e26e" prot="protected" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>calculated_</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cap_floor_1a88ab460fb16cff530d838ba89ccd504f" prot="public" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>CPICapFloor</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::CPICapFloor</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_instrument_1ac548cb61c864779db09bd0fac6ae7c81" prot="protected" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>engine_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a03502fb6c606b262c25acd94ff4c1e52" prot="public" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>errorEstimate</name></member>
      <member refid="class_quant_lib_1_1_instrument_1abb8f4cfa7346fab7a2f3a8c8b4da30f3" prot="protected" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>errorEstimate_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1aebe809131db2941325d037c031bbf41b" prot="public" virt="virtual"><scope>QuantLib::CPICapFloor</scope><name>fetchResults</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cap_floor_1a4f53ffe45a886b2ce6421aeb82dcabff" prot="protected" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>fixCalendar_</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cap_floor_1ad4e736ab1a8f8040cca457666c5de739" prot="protected" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>fixConvention_</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cap_floor_1ab82fe0f12fcbe73f845fd026188a9d44" prot="protected" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>fixDate_</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cap_floor_1aafcbd9fde04703a36ced3f340f59c6b2" prot="public" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>fixingDate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1afac6ee19c3107c453e1347dd8000e023" prot="public" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>forwardFirstNotificationOnly</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7157f41e83f2c5d924f5c5bafda04d1d" prot="public" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>freeze</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7bb721fe00c6854e602758aba629ab77" prot="protected" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>frozen_</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cap_floor_1a90c179641a0bf676d2c751cc0b2f6b81" prot="public" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>index</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cap_floor_1a380a68c8633078ad8e2e1cc28c667787" prot="protected" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>index_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a5e4c746cbf7999c83dc57f87e241f1cc" prot="public" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>Instrument</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a0a7c5d42815a4e16ee2158e24dbfc748" prot="public" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>isCalculated</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cap_floor_1a135727166ac0e563e246b3c662afbd30" prot="public" virt="virtual"><scope>QuantLib::CPICapFloor</scope><name>isExpired</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a26f18f4ff7faaaebd8eae50e064b493e" prot="public" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>LazyObject</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cap_floor_1a952ae623033c60e96581f1573f2133b5" prot="protected" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>maturity_</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cap_floor_1aed0f13bd2d8b3efa83c31616c1bb1cf6" prot="public" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>nominal</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cap_floor_1a657589cc0a3846ab5ddab20db928a035" prot="protected" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>nominal_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a5afdd9698267cd30ddd10cf01f3487b0" prot="public" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>NPV</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a997663780100d30ae59b14ac0285322d" prot="protected" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>NPV_</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::CPICapFloor</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::CPICapFloor</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cap_floor_1acc352da92497132358c2f041ced85b0b" prot="protected" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>observationInterpolation_</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cap_floor_1a7afcfbd1fb8795882edb4e7b387b1a2f" prot="public" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>observationLag</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cap_floor_1a0b6fd82e776d4669219aad811bc78c48" prot="protected" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>observationLag_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::CPICapFloor</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::CPICapFloor</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::CPICapFloor</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::QuantLib::Observer::"><scope>QuantLib::CPICapFloor</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cap_floor_1a43f143c4459ad63d3df36e974bf2bb3b" prot="protected" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>payCalendar_</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cap_floor_1ad06a28dc5289291146934b5739557178" prot="protected" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>payConvention_</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cap_floor_1a0561e5b1b9e530fb9fd3fef7948ae298" prot="public" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>payDate</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cap_floor_1aeb735b60014d713dc4891440cc754a29" prot="protected" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>payDate_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1aad23f546bbca156a49a95ca2bee124c4" prot="protected" virt="virtual"><scope>QuantLib::CPICapFloor</scope><name>performCalculations</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a70c9b24e50132408d8d9ce4f6674662a" prot="public" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>recalculate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a266c15a12160a89f4f9707db85f9fa27" prot="public" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>result</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a3444386491f179f64f4f0aac24997071" prot="public" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>setPricingEngine</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cap_floor_1aedb3fd5d89567650d8f9dc6550c28adb" prot="public" virt="virtual"><scope>QuantLib::CPICapFloor</scope><name>setupArguments</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a73d90597fcd3ff52a8aed674393ab574" prot="protected" virt="virtual"><scope>QuantLib::CPICapFloor</scope><name>setupExpired</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cap_floor_1a009fae9b274dc8fc2ccadf5ed2596fb3" prot="protected" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>startDate_</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cap_floor_1ad8d9f35bb891acb2a6b4d50b1cc56e32" prot="public" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>strike</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cap_floor_1ad9546706297b71ffe432ea7725255d4c" prot="protected" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>strike_</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cap_floor_1a0acf975b8c69b5b2eaac7f37f8e3d91f" prot="public" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>type</name></member>
      <member refid="class_quant_lib_1_1_c_p_i_cap_floor_1aaab8e746ce61936f9fbed3d0a2ca1bde" prot="protected" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>type_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a2e0e4786666453024b9d4e0761f2770b" prot="public" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>unfreeze</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1adee2bf49be5c4c78736be293321a856d" prot="public" virt="virtual"><scope>QuantLib::CPICapFloor</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a53a0fc1adc70b73387ad53009725835d" prot="public" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>valuationDate</name></member>
      <member refid="class_quant_lib_1_1_instrument_1aa60b558fc82f022e13535360ac4a6fed" prot="protected" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>valuationDate_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a9d719c43bb627177a90d7d12324a2d6e" prot="public" virt="non-virtual"><scope>QuantLib::CPICapFloor</scope><name>~LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::CPICapFloor</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::CPICapFloor</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_sabr_vol_surface" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::SabrVolSurface</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_interest_rate_vol_surface" prot="public" virt="non-virtual">QuantLib::InterestRateVolSurface</basecompoundref>
    <includes refid="sabrvolsurface_8hpp" local="no">sabrvolsurface.hpp</includes>
    <sectiondef kind="user-defined">
      <header>LazyObject interface</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_sabr_vol_surface_1a1ccc41da8a33e82681bfea3c379b6a59" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_black_atm_vol_curve" kindref="compound">BlackAtmVolCurve</ref> &gt;</type>
        <definition>Handle&lt;BlackAtmVolCurve&gt; QuantLib::SabrVolSurface::atmCurve_</definition>
        <argsstring></argsstring>
        <name>atmCurve_</name>
        <qualifiedname>QuantLib::SabrVolSurface::atmCurve_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sabrvolsurface.hpp" line="88" column="16" bodyfile="ql/experimental/volatility/sabrvolsurface.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_sabr_vol_surface_1a1b62792c19932775588a1eed83d8be7a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &gt;</type>
        <definition>std::vector&lt;Period&gt; QuantLib::SabrVolSurface::optionTenors_</definition>
        <argsstring></argsstring>
        <name>optionTenors_</name>
        <qualifiedname>QuantLib::SabrVolSurface::optionTenors_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sabrvolsurface.hpp" line="89" column="21" bodyfile="ql/experimental/volatility/sabrvolsurface.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_sabr_vol_surface_1add7194d5dddea28cdc4761314218c37f" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;</type>
        <definition>std::vector&lt;Time&gt; QuantLib::SabrVolSurface::optionTimes_</definition>
        <argsstring></argsstring>
        <name>optionTimes_</name>
        <qualifiedname>QuantLib::SabrVolSurface::optionTimes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sabrvolsurface.hpp" line="90" column="21" bodyfile="ql/experimental/volatility/sabrvolsurface.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_sabr_vol_surface_1afb10d54ff2cef694bb951cc9491e76d2" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &gt;</type>
        <definition>std::vector&lt;Date&gt; QuantLib::SabrVolSurface::optionDates_</definition>
        <argsstring></argsstring>
        <name>optionDates_</name>
        <qualifiedname>QuantLib::SabrVolSurface::optionDates_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sabrvolsurface.hpp" line="91" column="21" bodyfile="ql/experimental/volatility/sabrvolsurface.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_sabr_vol_surface_1a8111545c787c790d77171074098aec44" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1ad61d2e1a3f01154233de0d5fbb85177c" kindref="member">Spread</ref> &gt;</type>
        <definition>std::vector&lt;Spread&gt; QuantLib::SabrVolSurface::atmRateSpreads_</definition>
        <argsstring></argsstring>
        <name>atmRateSpreads_</name>
        <qualifiedname>QuantLib::SabrVolSurface::atmRateSpreads_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sabrvolsurface.hpp" line="92" column="21" bodyfile="ql/experimental/volatility/sabrvolsurface.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_sabr_vol_surface_1a36c6d8d89123827d550581d442d02802" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;Handle&lt;Quote&gt; &gt; &gt; QuantLib::SabrVolSurface::volSpreads_</definition>
        <argsstring></argsstring>
        <name>volSpreads_</name>
        <qualifiedname>QuantLib::SabrVolSurface::volSpreads_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sabrvolsurface.hpp" line="93" column="21" bodyfile="ql/experimental/volatility/sabrvolsurface.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_sabr_vol_surface_1a0a54a715f48b4e9f5b76a7e1ee69984b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::SabrVolSurface::isAlphaFixed_</definition>
        <argsstring></argsstring>
        <name>isAlphaFixed_</name>
        <qualifiedname>QuantLib::SabrVolSurface::isAlphaFixed_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sabrvolsurface.hpp" line="95" column="14" bodyfile="ql/experimental/volatility/sabrvolsurface.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_sabr_vol_surface_1ae1e3d6ea7174e5746e2e6d407c6a86d2" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::SabrVolSurface::isBetaFixed_</definition>
        <argsstring></argsstring>
        <name>isBetaFixed_</name>
        <qualifiedname>QuantLib::SabrVolSurface::isBetaFixed_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sabrvolsurface.hpp" line="96" column="14" bodyfile="ql/experimental/volatility/sabrvolsurface.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_sabr_vol_surface_1a62c034eb86b5f756c84a66962fd3428c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::SabrVolSurface::isNuFixed_</definition>
        <argsstring></argsstring>
        <name>isNuFixed_</name>
        <qualifiedname>QuantLib::SabrVolSurface::isNuFixed_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sabrvolsurface.hpp" line="97" column="14" bodyfile="ql/experimental/volatility/sabrvolsurface.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_sabr_vol_surface_1a03cd2ab3bd6ee7bbb07c16822b8e240a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::SabrVolSurface::isRhoFixed_</definition>
        <argsstring></argsstring>
        <name>isRhoFixed_</name>
        <qualifiedname>QuantLib::SabrVolSurface::isRhoFixed_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sabrvolsurface.hpp" line="98" column="14" bodyfile="ql/experimental/volatility/sabrvolsurface.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_sabr_vol_surface_1ab3486a62310956f9b117f2528b67c9e2" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::SabrVolSurface::vegaWeighted_</definition>
        <argsstring></argsstring>
        <name>vegaWeighted_</name>
        <qualifiedname>QuantLib::SabrVolSurface::vegaWeighted_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sabrvolsurface.hpp" line="99" column="14" bodyfile="ql/experimental/volatility/sabrvolsurface.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_sabr_vol_surface_1acf8eeb47e35d1129c80f6e3a5b4be38e" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; std::array&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>, 4 &gt; &gt;</type>
        <definition>std::vector&lt;std::array&lt;Real,4&gt; &gt; QuantLib::SabrVolSurface::sabrGuesses_</definition>
        <argsstring></argsstring>
        <name>sabrGuesses_</name>
        <qualifiedname>QuantLib::SabrVolSurface::sabrGuesses_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sabrvolsurface.hpp" line="101" column="29" bodyfile="ql/experimental/volatility/sabrvolsurface.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_sabr_vol_surface_1a43ab7448d6336d525e97c6222473c3b3" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::SabrVolSurface::performCalculations</definition>
        <argsstring>() const</argsstring>
        <name>performCalculations</name>
        <qualifiedname>QuantLib::SabrVolSurface::performCalculations</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sabrvolsurface.hpp" line="81" column="14"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_sabr_vol_surface_1a5e26c9b93f60c41cbd632468bfc26ab3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::SabrVolSurface::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <qualifiedname>QuantLib::SabrVolSurface::update</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_observer_1a07905c55dca858470fcf4a1aea0005aa">update</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must be implemented in derived classes. An instance of Observer does not call this method directly: instead, it will be called by the observables the instance registered with when they need to notify any changes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sabrvolsurface.hpp" line="82" column="14" bodyfile="ql/experimental/volatility/sabrvolsurface.cpp" bodystart="107" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_sabr_vol_surface_1a4821145ff9b8d78cc3ee6ac38e8453ba" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::SabrVolSurface::registerWithMarketData</definition>
        <argsstring>()</argsstring>
        <name>registerWithMarketData</name>
        <qualifiedname>QuantLib::SabrVolSurface::registerWithMarketData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sabrvolsurface.hpp" line="85" column="14" bodyfile="ql/experimental/volatility/sabrvolsurface.cpp" bodystart="147" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_sabr_vol_surface_1ad0cbff05e9b8ebeb62d9668a7bb7ec5a" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::SabrVolSurface::checkInputs</definition>
        <argsstring>() const</argsstring>
        <name>checkInputs</name>
        <qualifiedname>QuantLib::SabrVolSurface::checkInputs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sabrvolsurface.hpp" line="86" column="14" bodyfile="ql/experimental/volatility/sabrvolsurface.cpp" bodystart="156" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_sabr_vol_surface_1a052995f9e04ff169711dc11dfa49f28a" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::SabrVolSurface::updateSabrGuesses</definition>
        <argsstring>(const Date &amp;d, std::array&lt; Real, 4 &gt; newGuesses) const</argsstring>
        <name>updateSabrGuesses</name>
        <qualifiedname>QuantLib::SabrVolSurface::updateSabrGuesses</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>std::array&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>, 4 &gt;</type>
          <declname>newGuesses</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sabrvolsurface.hpp" line="87" column="14" bodyfile="ql/experimental/volatility/sabrvolsurface.cpp" bodystart="76" bodyend="86"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>TermStructure interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_sabr_vol_surface_1a00c2ba5019a2acc652e1d72291aa6c0b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref></type>
        <definition>DayCounter QuantLib::SabrVolSurface::dayCounter</definition>
        <argsstring>() const override</argsstring>
        <name>dayCounter</name>
        <qualifiedname>QuantLib::SabrVolSurface::dayCounter</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_term_structure_1ac03e725e4e0685b209caa626b00924ca">dayCounter</reimplements>
        <briefdescription>
<para>the day counter used for date/time conversion </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sabrvolsurface.hpp" line="50" column="20" bodyfile="ql/experimental/volatility/sabrvolsurface.hpp" bodystart="106" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_sabr_vol_surface_1acd30dd2a6cb90aff1d39d37133b396b2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::SabrVolSurface::maxDate</definition>
        <argsstring>() const override</argsstring>
        <name>maxDate</name>
        <qualifiedname>QuantLib::SabrVolSurface::maxDate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_term_structure_1ae9af756bbddc15962711f77f514f08fa">maxDate</reimplements>
        <briefdescription>
<para>the latest date for which the curve can return values </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sabrvolsurface.hpp" line="51" column="14" bodyfile="ql/experimental/volatility/sabrvolsurface.hpp" bodystart="110" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_sabr_vol_surface_1a903ea53d27099719382acb7007df905c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>Time QuantLib::SabrVolSurface::maxTime</definition>
        <argsstring>() const override</argsstring>
        <name>maxTime</name>
        <qualifiedname>QuantLib::SabrVolSurface::maxTime</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_term_structure_1a2f820c32e198e1046d97ca3dd9a807c5">maxTime</reimplements>
        <briefdescription>
<para>the latest time for which the curve can return values </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sabrvolsurface.hpp" line="52" column="14" bodyfile="ql/experimental/volatility/sabrvolsurface.hpp" bodystart="114" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_sabr_vol_surface_1a48d7d5b7839090fa74bfed845508372e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
        <definition>const Date &amp; QuantLib::SabrVolSurface::referenceDate</definition>
        <argsstring>() const override</argsstring>
        <name>referenceDate</name>
        <qualifiedname>QuantLib::SabrVolSurface::referenceDate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_term_structure_1accbf3d4af41db0333d456eb5616c4e1e">referenceDate</reimplements>
        <briefdescription>
<para>the date at which discount = 1.0 and/or variance = 0.0 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sabrvolsurface.hpp" line="53" column="20" bodyfile="ql/experimental/volatility/sabrvolsurface.hpp" bodystart="118" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_sabr_vol_surface_1a4b69f80b3b289a21601b8e06caf1819a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref></type>
        <definition>Calendar QuantLib::SabrVolSurface::calendar</definition>
        <argsstring>() const override</argsstring>
        <name>calendar</name>
        <qualifiedname>QuantLib::SabrVolSurface::calendar</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_term_structure_1ac4ea5cbce495c9a47a44eeaedf7a9d45">calendar</reimplements>
        <briefdescription>
<para>the calendar used for reference and/or option date calculation </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sabrvolsurface.hpp" line="54" column="18" bodyfile="ql/experimental/volatility/sabrvolsurface.hpp" bodystart="122" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_sabr_vol_surface_1ae0f2dc6aec73051bae99c2c1c37a69d5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
        <definition>Natural QuantLib::SabrVolSurface::settlementDays</definition>
        <argsstring>() const override</argsstring>
        <name>settlementDays</name>
        <qualifiedname>QuantLib::SabrVolSurface::settlementDays</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_term_structure_1abeb79eefda70a9414f206ca9e70ced0f">settlementDays</reimplements>
        <briefdescription>
<para>the settlementDays used for reference date calculation </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sabrvolsurface.hpp" line="55" column="17" bodyfile="ql/experimental/volatility/sabrvolsurface.hpp" bodystart="126" bodyend="128"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>VolatilityTermStructure interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_sabr_vol_surface_1a456d69a927f978d0b3cd88f412adf3ad" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SabrVolSurface::minStrike</definition>
        <argsstring>() const override</argsstring>
        <name>minStrike</name>
        <qualifiedname>QuantLib::SabrVolSurface::minStrike</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_volatility_term_structure_1a71a5c8f0fb8d9d478126f79d975cb26f">minStrike</reimplements>
        <briefdescription>
<para>the minimum strike for which the term structure can return vols </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sabrvolsurface.hpp" line="59" column="14" bodyfile="ql/experimental/volatility/sabrvolsurface.hpp" bodystart="130" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_sabr_vol_surface_1acc0b1344e846f7e713b3c9379f7ec4e7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SabrVolSurface::maxStrike</definition>
        <argsstring>() const override</argsstring>
        <name>maxStrike</name>
        <qualifiedname>QuantLib::SabrVolSurface::maxStrike</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_volatility_term_structure_1a31f164f3562124b7de3ea6caf0af08a9">maxStrike</reimplements>
        <briefdescription>
<para>the maximum strike for which the term structure can return vols </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sabrvolsurface.hpp" line="60" column="14" bodyfile="ql/experimental/volatility/sabrvolsurface.hpp" bodystart="134" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_sabr_vol_surface_1a88c1a83076427bc234ef763fa224d9b5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_black_atm_vol_curve" kindref="compound">BlackAtmVolCurve</ref> &gt; &amp;</type>
        <definition>const Handle&lt; BlackAtmVolCurve &gt; &amp; QuantLib::SabrVolSurface::atmCurve</definition>
        <argsstring>() const</argsstring>
        <name>atmCurve</name>
        <qualifiedname>QuantLib::SabrVolSurface::atmCurve</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sabrvolsurface.hpp" line="62" column="22" bodyfile="ql/experimental/volatility/sabrvolsurface.hpp" bodystart="138" bodyend="140"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Visitability</header>
      <memberdef kind="function" id="class_quant_lib_1_1_sabr_vol_surface_1af6dac61f9d37066f13e6fb83aa866e62" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::SabrVolSurface::accept</definition>
        <argsstring>(AcyclicVisitor &amp;) override</argsstring>
        <name>accept</name>
        <qualifiedname>QuantLib::SabrVolSurface::accept</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_interest_rate_vol_surface_1ac15b0af10e8b7200ff7f26a41933bcd4">accept</reimplements>
        <param>
          <type><ref refid="class_quant_lib_1_1_acyclic_visitor" kindref="compound">AcyclicVisitor</ref> &amp;</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sabrvolsurface.hpp" line="65" column="14" bodyfile="ql/experimental/volatility/sabrvolsurface.cpp" bodystart="172" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_sabr_vol_surface_1aa10aee52badbfd4d796b1a7964bb4cad" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref> &gt;</type>
        <definition>std::vector&lt; Volatility &gt; QuantLib::SabrVolSurface::volatilitySpreads</definition>
        <argsstring>(const Period &amp;) const</argsstring>
        <name>volatilitySpreads</name>
        <qualifiedname>QuantLib::SabrVolSurface::volatilitySpreads</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <defname>p</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sabrvolsurface.hpp" line="67" column="21" bodyfile="ql/experimental/volatility/sabrvolsurface.hpp" bodystart="143" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_sabr_vol_surface_1abab259cb4241b8adcc1d770b9c02cb3d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref> &gt;</type>
        <definition>std::vector&lt; Volatility &gt; QuantLib::SabrVolSurface::volatilitySpreads</definition>
        <argsstring>(const Date &amp;) const</argsstring>
        <name>volatilitySpreads</name>
        <qualifiedname>QuantLib::SabrVolSurface::volatilitySpreads</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <defname>d</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sabrvolsurface.hpp" line="68" column="21" bodyfile="ql/experimental/volatility/sabrvolsurface.cpp" bodystart="88" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_sabr_vol_surface_1a056c55018bc4a3a6cd25d263b993c562" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::array&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>, 4 &gt;</type>
        <definition>std::array&lt; Real, 4 &gt; QuantLib::SabrVolSurface::sabrGuesses</definition>
        <argsstring>(const Date &amp;) const</argsstring>
        <name>sabrGuesses</name>
        <qualifiedname>QuantLib::SabrVolSurface::sabrGuesses</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <defname>d</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sabrvolsurface.hpp" line="70" column="20" bodyfile="ql/experimental/volatility/sabrvolsurface.cpp" bodystart="66" bodyend="74"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>BlackVolSurface interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_sabr_vol_surface_1a4674d90c2c2a2aec048943d4049f058d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_smile_section" kindref="compound">SmileSection</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; SmileSection &gt; QuantLib::SabrVolSurface::smileSectionImpl</definition>
        <argsstring>(Time) const override</argsstring>
        <name>smileSectionImpl</name>
        <qualifiedname>QuantLib::SabrVolSurface::smileSectionImpl</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_black_vol_surface_1adf9da5b10bcfdad4365fa5dadf760d09">smileSectionImpl</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <defname>t</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sabrvolsurface.hpp" line="75" column="25" bodyfile="ql/experimental/volatility/sabrvolsurface.cpp" bodystart="118" bodyend="145"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_sabr_vol_surface_1a0cc92edbe88cb18647805cf16fc6b70d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::SabrVolSurface::SabrVolSurface</definition>
        <argsstring>(const ext::shared_ptr&lt; InterestRateIndex &gt; &amp;, Handle&lt; BlackAtmVolCurve &gt;, const std::vector&lt; Period &gt; &amp;optionTenors, std::vector&lt; Spread &gt; atmRateSpreads, std::vector&lt; std::vector&lt; Handle&lt; Quote &gt; &gt; &gt; volSpreads)</argsstring>
        <name>SabrVolSurface</name>
        <qualifiedname>QuantLib::SabrVolSurface::SabrVolSurface</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_interest_rate_index" kindref="compound">InterestRateIndex</ref> &gt; &amp;</type>
          <defname>index</defname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_black_atm_vol_curve" kindref="compound">BlackAtmVolCurve</ref> &gt;</type>
          <defname>atmCurve</defname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &gt; &amp;</type>
          <declname>optionTenors</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1ad61d2e1a3f01154233de0d5fbb85177c" kindref="member">Spread</ref> &gt;</type>
          <declname>atmRateSpreads</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &gt; &gt;</type>
          <declname>volSpreads</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/sabrvolsurface.hpp" line="41" column="9" bodyfile="ql/experimental/volatility/sabrvolsurface.cpp" bodystart="30" bodyend="64"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para><ref refid="class_quant_lib_1_1_s_a_b_r" kindref="compound">SABR</ref> volatility (smile) surface. </para>
    </briefdescription>
    <detaileddescription>
<para>blah blah </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>QuantLib::BlackAtmVolCurve</label>
        <link refid="class_quant_lib_1_1_black_atm_vol_curve"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::BlackVolSurface</label>
        <link refid="class_quant_lib_1_1_black_vol_surface"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QuantLib::Extrapolator</label>
        <link refid="class_quant_lib_1_1_extrapolator"/>
      </node>
      <node id="2">
        <label>QuantLib::InterestRateVolSurface</label>
        <link refid="class_quant_lib_1_1_interest_rate_vol_surface"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="7">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="1">
        <label>QuantLib::SabrVolSurface</label>
        <link refid="class_quant_lib_1_1_sabr_vol_surface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::TermStructure</label>
        <link refid="class_quant_lib_1_1_term_structure"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::VolatilityTermStructure</label>
        <link refid="class_quant_lib_1_1_volatility_term_structure"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>QuantLib::BlackAtmVolCurve</label>
        <link refid="class_quant_lib_1_1_black_atm_vol_curve"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::BlackVolSurface</label>
        <link refid="class_quant_lib_1_1_black_vol_surface"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QuantLib::Calendar</label>
        <link refid="class_quant_lib_1_1_calendar"/>
      </node>
      <node id="9">
        <label>QuantLib::Extrapolator</label>
        <link refid="class_quant_lib_1_1_extrapolator"/>
      </node>
      <node id="2">
        <label>QuantLib::InterestRateVolSurface</label>
        <link refid="class_quant_lib_1_1_interest_rate_vol_surface"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="7">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="1">
        <label>QuantLib::SabrVolSurface</label>
        <link refid="class_quant_lib_1_1_sabr_vol_surface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::TermStructure</label>
        <link refid="class_quant_lib_1_1_term_structure"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>calendar_</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::VolatilityTermStructure</label>
        <link refid="class_quant_lib_1_1_volatility_term_structure"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/volatility/sabrvolsurface.hpp" line="39" column="5" bodyfile="ql/experimental/volatility/sabrvolsurface.hpp" bodystart="39" bodyend="102"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_sabr_vol_surface_1af6dac61f9d37066f13e6fb83aa866e62" prot="public" virt="virtual"><scope>QuantLib::SabrVolSurface</scope><name>accept</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1ab3936a9b5b5c163d3e511437c16c1d9e" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>allowsExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_sabr_vol_surface_1a88c1a83076427bc234ef763fa224d9b5" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>atmCurve</name></member>
      <member refid="class_quant_lib_1_1_sabr_vol_surface_1a1ccc41da8a33e82681bfea3c379b6a59" prot="private" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>atmCurve_</name></member>
      <member refid="class_quant_lib_1_1_sabr_vol_surface_1a8111545c787c790d77171074098aec44" prot="private" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>atmRateSpreads_</name></member>
      <member refid="class_quant_lib_1_1_black_atm_vol_curve_1adeea5c079c1929f2008de9918b4f0110" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>atmVariance</name></member>
      <member refid="class_quant_lib_1_1_black_atm_vol_curve_1a2ad63dcfd05562bb2562f69ff49855f8" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>atmVariance</name></member>
      <member refid="class_quant_lib_1_1_black_atm_vol_curve_1a69604f29c96684857f7d97f9fe2d4963" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>atmVariance</name></member>
      <member refid="class_quant_lib_1_1_black_vol_surface_1aceb6561d5b57c4de60366619afa5b5d0" prot="protected" virt="virtual"><scope>QuantLib::SabrVolSurface</scope><name>atmVarianceImpl</name></member>
      <member refid="class_quant_lib_1_1_black_atm_vol_curve_1ae07e7544a6382eb9cefcdcac3cba208a" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>atmVol</name></member>
      <member refid="class_quant_lib_1_1_black_atm_vol_curve_1af4430459ba0580534a7e2394c46a8ec1" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>atmVol</name></member>
      <member refid="class_quant_lib_1_1_black_atm_vol_curve_1a8f866e2ed5e8e7904dabc2870909a741" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>atmVol</name></member>
      <member refid="class_quant_lib_1_1_black_vol_surface_1abd27b7301647b0e09fc5a59dc98718b8" prot="protected" virt="virtual"><scope>QuantLib::SabrVolSurface</scope><name>atmVolImpl</name></member>
      <member refid="class_quant_lib_1_1_black_atm_vol_curve_1aa4bb818fc8c19ebca6df87f1c53932b7" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>BlackAtmVolCurve</name></member>
      <member refid="class_quant_lib_1_1_black_atm_vol_curve_1a6ed4446a1b1b904fbaa1a21368d9865e" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>BlackAtmVolCurve</name></member>
      <member refid="class_quant_lib_1_1_black_atm_vol_curve_1a0b0749629d15591e83ac9d071e4fcb9b" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>BlackAtmVolCurve</name></member>
      <member refid="class_quant_lib_1_1_black_vol_surface_1a9284c52d6d6bc732048361dead6ece4d" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>BlackVolSurface</name></member>
      <member refid="class_quant_lib_1_1_black_vol_surface_1aeda93d766a9dc94af642242ef46b9fee" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>BlackVolSurface</name></member>
      <member refid="class_quant_lib_1_1_black_vol_surface_1af5c4d7876cf3f50c38e3dd690621798a" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>BlackVolSurface</name></member>
      <member refid="class_quant_lib_1_1_volatility_term_structure_1aaa1bad703d789d96a86c0d09f5bd0c05" prot="public" virt="virtual"><scope>QuantLib::SabrVolSurface</scope><name>businessDayConvention</name></member>
      <member refid="class_quant_lib_1_1_sabr_vol_surface_1a4b69f80b3b289a21601b8e06caf1819a" prot="public" virt="virtual"><scope>QuantLib::SabrVolSurface</scope><name>calendar</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a0a09e3fa8cdfbc9aa9685da0c35ccb90" prot="protected" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>calendar_</name></member>
      <member refid="class_quant_lib_1_1_sabr_vol_surface_1ad0cbff05e9b8ebeb62d9668a7bb7ec5a" prot="private" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>checkInputs</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1aa7297742ffbeeb0c7611f90a0f7d15bf" prot="protected" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>checkRange</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a4d246bcb13b7518a75088bf7cf01ea75" prot="protected" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>checkRange</name></member>
      <member refid="class_quant_lib_1_1_volatility_term_structure_1aad02ea6fe4bf30c662adaf01a46d5537" prot="protected" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>checkStrike</name></member>
      <member refid="class_quant_lib_1_1_sabr_vol_surface_1a00c2ba5019a2acc652e1d72291aa6c0b" prot="public" virt="virtual"><scope>QuantLib::SabrVolSurface</scope><name>dayCounter</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::SabrVolSurface</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1a6af69387d5cae0fe84d6a0c858406218" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>disableExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1a5f7b5650a44d6c63095bc739470c8bfb" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>enableExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1af1c3adaccdfaf07d3d07edaa234444f7" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>Extrapolator</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_vol_surface_1ab2921178250df65bedaf42ea9f3f39d0" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>index</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_vol_surface_1a007100606fa07546ba6a4cb8ea65557e" prot="protected" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>index_</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_vol_surface_1a53855c5435da6f572bf7e8cca4faee82" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>InterestRateVolSurface</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_vol_surface_1a5141a620d8c7d26fb71c714228576277" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>InterestRateVolSurface</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_vol_surface_1a469c55e939bc08192a0b408baa0a3c3c" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>InterestRateVolSurface</name></member>
      <member refid="class_quant_lib_1_1_sabr_vol_surface_1a0a54a715f48b4e9f5b76a7e1ee69984b" prot="private" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>isAlphaFixed_</name></member>
      <member refid="class_quant_lib_1_1_sabr_vol_surface_1ae1e3d6ea7174e5746e2e6d407c6a86d2" prot="private" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>isBetaFixed_</name></member>
      <member refid="class_quant_lib_1_1_sabr_vol_surface_1a62c034eb86b5f756c84a66962fd3428c" prot="private" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>isNuFixed_</name></member>
      <member refid="class_quant_lib_1_1_sabr_vol_surface_1a03cd2ab3bd6ee7bbb07c16822b8e240a" prot="private" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>isRhoFixed_</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_sabr_vol_surface_1acd30dd2a6cb90aff1d39d37133b396b2" prot="public" virt="virtual"><scope>QuantLib::SabrVolSurface</scope><name>maxDate</name></member>
      <member refid="class_quant_lib_1_1_sabr_vol_surface_1acc0b1344e846f7e713b3c9379f7ec4e7" prot="public" virt="virtual"><scope>QuantLib::SabrVolSurface</scope><name>maxStrike</name></member>
      <member refid="class_quant_lib_1_1_sabr_vol_surface_1a903ea53d27099719382acb7007df905c" prot="public" virt="virtual"><scope>QuantLib::SabrVolSurface</scope><name>maxTime</name></member>
      <member refid="class_quant_lib_1_1_sabr_vol_surface_1a456d69a927f978d0b3cd88f412adf3ad" prot="public" virt="virtual"><scope>QuantLib::SabrVolSurface</scope><name>minStrike</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a8319e5c2c37b09a825d61210c9cb8e2a" prot="protected" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>moving_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::"><scope>QuantLib::SabrVolSurface</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::"><scope>QuantLib::SabrVolSurface</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::"><scope>QuantLib::SabrVolSurface</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::SabrVolSurface</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::QuantLib::Observable::"><scope>QuantLib::SabrVolSurface</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::SabrVolSurface</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_vol_surface_1a08d89b9f0cde2bbb952899560bbaf4b5" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>optionDateFromTenor</name></member>
      <member refid="class_quant_lib_1_1_sabr_vol_surface_1afb10d54ff2cef694bb951cc9491e76d2" prot="private" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>optionDates_</name></member>
      <member refid="class_quant_lib_1_1_sabr_vol_surface_1a1b62792c19932775588a1eed83d8be7a" prot="private" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>optionTenors_</name></member>
      <member refid="class_quant_lib_1_1_sabr_vol_surface_1add7194d5dddea28cdc4761314218c37f" prot="private" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>optionTimes_</name></member>
      <member refid="class_quant_lib_1_1_sabr_vol_surface_1a43ab7448d6336d525e97c6222473c3b3" prot="protected" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>performCalculations</name></member>
      <member refid="class_quant_lib_1_1_sabr_vol_surface_1a48d7d5b7839090fa74bfed845508372e" prot="public" virt="virtual"><scope>QuantLib::SabrVolSurface</scope><name>referenceDate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_sabr_vol_surface_1a4821145ff9b8d78cc3ee6ac38e8453ba" prot="private" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>registerWithMarketData</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_sabr_vol_surface_1a056c55018bc4a3a6cd25d263b993c562" prot="protected" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>sabrGuesses</name></member>
      <member refid="class_quant_lib_1_1_sabr_vol_surface_1acf8eeb47e35d1129c80f6e3a5b4be38e" prot="private" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>sabrGuesses_</name></member>
      <member refid="class_quant_lib_1_1_sabr_vol_surface_1a0cc92edbe88cb18647805cf16fc6b70d" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>SabrVolSurface</name></member>
      <member refid="class_quant_lib_1_1_sabr_vol_surface_1ae0f2dc6aec73051bae99c2c1c37a69d5" prot="public" virt="virtual"><scope>QuantLib::SabrVolSurface</scope><name>settlementDays</name></member>
      <member refid="class_quant_lib_1_1_black_vol_surface_1acaec11612adec437acf7b7001acfb176" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>smileSection</name></member>
      <member refid="class_quant_lib_1_1_black_vol_surface_1a6af4a20f9df793b50f9529f15f534b15" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>smileSection</name></member>
      <member refid="class_quant_lib_1_1_black_vol_surface_1a8a7e31a693c72f4a777bedf0cec75831" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>smileSection</name></member>
      <member refid="class_quant_lib_1_1_sabr_vol_surface_1a4674d90c2c2a2aec048943d4049f058d" prot="public" virt="virtual"><scope>QuantLib::SabrVolSurface</scope><name>smileSectionImpl</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac8365997e6d41134b4e0998fe6b4e949" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>TermStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a95764a49e0368b653eadbe619d9ef334" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>TermStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1aab73d2acafdc8fbdf9336e7084bd88a1" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>TermStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac8da61eb0f06ae07a35e8e4bbe7146b0" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>timeFromReference</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_sabr_vol_surface_1a5e26c9b93f60c41cbd632468bfc26ab3" prot="protected" virt="virtual"><scope>QuantLib::SabrVolSurface</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a2fcf1c78e57786ad5c123f52dbf619e8" prot="protected" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>updated_</name></member>
      <member refid="class_quant_lib_1_1_sabr_vol_surface_1a052995f9e04ff169711dc11dfa49f28a" prot="private" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>updateSabrGuesses</name></member>
      <member refid="class_quant_lib_1_1_sabr_vol_surface_1ab3486a62310956f9b117f2528b67c9e2" prot="private" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>vegaWeighted_</name></member>
      <member refid="class_quant_lib_1_1_sabr_vol_surface_1aa10aee52badbfd4d796b1a7964bb4cad" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>volatilitySpreads</name></member>
      <member refid="class_quant_lib_1_1_sabr_vol_surface_1abab259cb4241b8adcc1d770b9c02cb3d" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>volatilitySpreads</name></member>
      <member refid="class_quant_lib_1_1_volatility_term_structure_1adfc4d4619ecf74dd849ba4fdf0b36d22" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>VolatilityTermStructure</name></member>
      <member refid="class_quant_lib_1_1_volatility_term_structure_1aa43b8722cce970ee126cc5907026f860" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>VolatilityTermStructure</name></member>
      <member refid="class_quant_lib_1_1_volatility_term_structure_1a10cfe1d03a1cfd642e7608d019f2cafc" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>VolatilityTermStructure</name></member>
      <member refid="class_quant_lib_1_1_sabr_vol_surface_1a36c6d8d89123827d550581d442d02802" prot="private" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>volSpreads_</name></member>
      <member refid="class_quant_lib_1_1_black_atm_vol_curve_1aba50ee525a773cbfe9d7081b7aeee342" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>~BlackAtmVolCurve</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1af0ca0156436ffbce159183198eb27e2e" prot="public" virt="virtual"><scope>QuantLib::SabrVolSurface</scope><name>~Extrapolator</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::SabrVolSurface</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::SabrVolSurface</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ad202ddcc14fc4a6c16686d6164d7b36c" prot="public" virt="non-virtual"><scope>QuantLib::SabrVolSurface</scope><name>~TermStructure</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

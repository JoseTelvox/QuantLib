<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_fdm_heston_op" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::FdmHestonOp</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_fdm_linear_op_composite" prot="public" virt="non-virtual">QuantLib::FdmLinearOpComposite</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_heston_op_1acd957f9b4239a73a76a8f189ffaa6282" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_nine_point_linear_op" kindref="compound">NinePointLinearOp</ref></type>
        <definition>NinePointLinearOp QuantLib::FdmHestonOp::correlationMap_</definition>
        <argsstring></argsstring>
        <name>correlationMap_</name>
        <qualifiedname>QuantLib::FdmHestonOp::correlationMap_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmhestonop.hpp" line="109" column="27" bodyfile="ql/methods/finitedifferences/operators/fdmhestonop.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_heston_op_1a438357d41a370588f401ebfc82dca409" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_fdm_heston_variance_part" kindref="compound">FdmHestonVariancePart</ref></type>
        <definition>FdmHestonVariancePart QuantLib::FdmHestonOp::dyMap_</definition>
        <argsstring></argsstring>
        <name>dyMap_</name>
        <qualifiedname>QuantLib::FdmHestonOp::dyMap_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmhestonop.hpp" line="110" column="31" bodyfile="ql/methods/finitedifferences/operators/fdmhestonop.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_heston_op_1ae3beb99c7f340f962813f7a244460fd9" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_fdm_heston_equity_part" kindref="compound">FdmHestonEquityPart</ref></type>
        <definition>FdmHestonEquityPart QuantLib::FdmHestonOp::dxMap_</definition>
        <argsstring></argsstring>
        <name>dxMap_</name>
        <qualifiedname>QuantLib::FdmHestonOp::dxMap_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmhestonop.hpp" line="111" column="29" bodyfile="ql/methods/finitedifferences/operators/fdmhestonop.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_heston_op_1a4be9629c5a27e30b9af537f8d7889cd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FdmHestonOp::FdmHestonOp</definition>
        <argsstring>(const ext::shared_ptr&lt; FdmMesher &gt; &amp;mesher, const ext::shared_ptr&lt; HestonProcess &gt; &amp;hestonProcess, const ext::shared_ptr&lt; FdmQuantoHelper &gt; &amp;quantoHelper=ext::shared_ptr&lt; FdmQuantoHelper &gt;(), const ext::shared_ptr&lt; LocalVolTermStructure &gt; &amp;leverageFct=ext::shared_ptr&lt; LocalVolTermStructure &gt;(), Real mixingFactor=1.0)</argsstring>
        <name>FdmHestonOp</name>
        <qualifiedname>QuantLib::FdmHestonOp::FdmHestonOp</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_fdm_mesher" kindref="compound">FdmMesher</ref> &gt; &amp;</type>
          <declname>mesher</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_heston_process" kindref="compound">HestonProcess</ref> &gt; &amp;</type>
          <declname>hestonProcess</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_fdm_quanto_helper" kindref="compound">FdmQuantoHelper</ref> &gt; &amp;</type>
          <declname>quantoHelper</declname>
          <defval>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_fdm_quanto_helper" kindref="compound">FdmQuantoHelper</ref> &gt;()</defval>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_local_vol_term_structure" kindref="compound">LocalVolTermStructure</ref> &gt; &amp;</type>
          <declname>leverageFct</declname>
          <defval>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_local_vol_term_structure" kindref="compound">LocalVolTermStructure</ref> &gt;()</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>mixingFactor</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmhestonop.hpp" line="88" column="9" bodyfile="ql/methods/finitedifferences/operators/fdmhestonop.cpp" bodystart="122" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_heston_op_1adc56c2289f46bb67570002ac9c9db3f9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::FdmHestonOp::size</definition>
        <argsstring>() const override</argsstring>
        <name>size</name>
        <qualifiedname>QuantLib::FdmHestonOp::size</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1aea89ff84d04c901c37823de66b392018">size</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmhestonop.hpp" line="96" column="14" bodyfile="ql/methods/finitedifferences/operators/fdmhestonop.cpp" bodystart="148" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_heston_op_1acb9f4c5bd64e504544746d64a9bd06a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::FdmHestonOp::setTime</definition>
        <argsstring>(Time t1, Time t2) override</argsstring>
        <name>setTime</name>
        <qualifiedname>QuantLib::FdmHestonOp::setTime</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1ab635911759d6a1bde11c501d15515872">setTime</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t1</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t2</declname>
        </param>
        <briefdescription>
<para><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> <formula id="385">$t1 &lt;= t2$</formula> is required. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmhestonop.hpp" line="97" column="14" bodyfile="ql/methods/finitedifferences/operators/fdmhestonop.cpp" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_heston_op_1a3af43a02d8df3f9ad249f62df4b77f79" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FdmHestonOp::apply</definition>
        <argsstring>(const Array &amp;r) const override</argsstring>
        <name>apply</name>
        <qualifiedname>QuantLib::FdmHestonOp::apply</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_1a9d59d8bb3597206db60f61c3f448c211">apply</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmhestonop.hpp" line="99" column="15" bodyfile="ql/methods/finitedifferences/operators/fdmhestonop.cpp" bodystart="152" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_heston_op_1ac757699524d08b76615abf7b9f676f3a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FdmHestonOp::apply_mixed</definition>
        <argsstring>(const Array &amp;r) const override</argsstring>
        <name>apply_mixed</name>
        <qualifiedname>QuantLib::FdmHestonOp::apply_mixed</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1a162fe1437fb3060475f7824d73b72ff7">apply_mixed</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmhestonop.hpp" line="100" column="15" bodyfile="ql/methods/finitedifferences/operators/fdmhestonop.cpp" bodystart="167" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_heston_op_1a7e01d14a874c58de1f1303cdaac26842" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FdmHestonOp::apply_direction</definition>
        <argsstring>(Size direction, const Array &amp;r) const override</argsstring>
        <name>apply_direction</name>
        <qualifiedname>QuantLib::FdmHestonOp::apply_direction</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1aa9f8c9bcd1596637b3eaaa74c64ad83c">apply_direction</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmhestonop.hpp" line="102" column="15" bodyfile="ql/methods/finitedifferences/operators/fdmhestonop.cpp" bodystart="157" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_heston_op_1ad63b43737314fc5d513a49f2bf2e1468" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FdmHestonOp::solve_splitting</definition>
        <argsstring>(Size direction, const Array &amp;r, Real s) const override</argsstring>
        <name>solve_splitting</name>
        <qualifiedname>QuantLib::FdmHestonOp::solve_splitting</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1a1ea6ebafd3a36a95a6acb6e1c189e21f">solve_splitting</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmhestonop.hpp" line="103" column="15" bodyfile="ql/methods/finitedifferences/operators/fdmhestonop.cpp" bodystart="171" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_heston_op_1a92cc2563d3e1e86dce28ef60e7ede53c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FdmHestonOp::preconditioner</definition>
        <argsstring>(const Array &amp;r, Real s) const override</argsstring>
        <name>preconditioner</name>
        <qualifiedname>QuantLib::FdmHestonOp::preconditioner</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1a3122983a62d53799ffd1c03922660e6c">preconditioner</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmhestonop.hpp" line="104" column="15" bodyfile="ql/methods/finitedifferences/operators/fdmhestonop.cpp" bodystart="184" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_heston_op_1acb93fceec2c1e7c5b6d37e7c09c16759" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; SparseMatrix &gt;</type>
        <definition>std::vector&lt; SparseMatrix &gt; QuantLib::FdmHestonOp::toMatrixDecomp</definition>
        <argsstring>() const override</argsstring>
        <name>toMatrixDecomp</name>
        <qualifiedname>QuantLib::FdmHestonOp::toMatrixDecomp</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1aae06b697cc0d041a8cbdd9b259ec34b9">toMatrixDecomp</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmhestonop.hpp" line="106" column="21" bodyfile="ql/methods/finitedifferences/operators/fdmhestonop.cpp" bodystart="188" bodyend="194"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::FdmHestonOp</label>
        <link refid="class_quant_lib_1_1_fdm_heston_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::FdmLinearOp</label>
        <link refid="class_quant_lib_1_1_fdm_linear_op"/>
      </node>
      <node id="2">
        <label>QuantLib::FdmLinearOpComposite</label>
        <link refid="class_quant_lib_1_1_fdm_linear_op_composite"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::FdmHestonOp</label>
        <link refid="class_quant_lib_1_1_fdm_heston_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::FdmLinearOp</label>
        <link refid="class_quant_lib_1_1_fdm_linear_op"/>
      </node>
      <node id="2">
        <label>QuantLib::FdmLinearOpComposite</label>
        <link refid="class_quant_lib_1_1_fdm_linear_op_composite"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/methods/finitedifferences/operators/fdmhestonop.hpp" line="86" column="5" bodyfile="ql/methods/finitedifferences/operators/fdmhestonop.hpp" bodystart="86" bodyend="112"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_fdm_heston_op_1a3af43a02d8df3f9ad249f62df4b77f79" prot="public" virt="virtual"><scope>QuantLib::FdmHestonOp</scope><name>apply</name></member>
      <member refid="class_quant_lib_1_1_fdm_heston_op_1a7e01d14a874c58de1f1303cdaac26842" prot="public" virt="virtual"><scope>QuantLib::FdmHestonOp</scope><name>apply_direction</name></member>
      <member refid="class_quant_lib_1_1_fdm_heston_op_1ac757699524d08b76615abf7b9f676f3a" prot="public" virt="virtual"><scope>QuantLib::FdmHestonOp</scope><name>apply_mixed</name></member>
      <member refid="class_quant_lib_1_1_fdm_linear_op_1af55693593c0cf7e885c67fd848f76e49" prot="public" virt="non-virtual"><scope>QuantLib::FdmHestonOp</scope><name>array_type</name></member>
      <member refid="class_quant_lib_1_1_fdm_heston_op_1acd957f9b4239a73a76a8f189ffaa6282" prot="private" virt="non-virtual"><scope>QuantLib::FdmHestonOp</scope><name>correlationMap_</name></member>
      <member refid="class_quant_lib_1_1_fdm_heston_op_1ae3beb99c7f340f962813f7a244460fd9" prot="private" virt="non-virtual"><scope>QuantLib::FdmHestonOp</scope><name>dxMap_</name></member>
      <member refid="class_quant_lib_1_1_fdm_heston_op_1a438357d41a370588f401ebfc82dca409" prot="private" virt="non-virtual"><scope>QuantLib::FdmHestonOp</scope><name>dyMap_</name></member>
      <member refid="class_quant_lib_1_1_fdm_heston_op_1a4be9629c5a27e30b9af537f8d7889cd1" prot="public" virt="non-virtual"><scope>QuantLib::FdmHestonOp</scope><name>FdmHestonOp</name></member>
      <member refid="class_quant_lib_1_1_fdm_heston_op_1a92cc2563d3e1e86dce28ef60e7ede53c" prot="public" virt="virtual"><scope>QuantLib::FdmHestonOp</scope><name>preconditioner</name></member>
      <member refid="class_quant_lib_1_1_fdm_heston_op_1acb9f4c5bd64e504544746d64a9bd06a9" prot="public" virt="virtual"><scope>QuantLib::FdmHestonOp</scope><name>setTime</name></member>
      <member refid="class_quant_lib_1_1_fdm_heston_op_1adc56c2289f46bb67570002ac9c9db3f9" prot="public" virt="virtual"><scope>QuantLib::FdmHestonOp</scope><name>size</name></member>
      <member refid="class_quant_lib_1_1_fdm_heston_op_1ad63b43737314fc5d513a49f2bf2e1468" prot="public" virt="virtual"><scope>QuantLib::FdmHestonOp</scope><name>solve_splitting</name></member>
      <member refid="class_quant_lib_1_1_fdm_linear_op_composite_1abca0364ae63b5b0e714fcd3ac9e8a73b" prot="public" virt="virtual"><scope>QuantLib::FdmHestonOp</scope><name>toMatrix</name></member>
      <member refid="class_quant_lib_1_1_fdm_heston_op_1acb93fceec2c1e7c5b6d37e7c09c16759" prot="public" virt="virtual"><scope>QuantLib::FdmHestonOp</scope><name>toMatrixDecomp</name></member>
      <member refid="class_quant_lib_1_1_fdm_linear_op_1aa6f29eb6144a1848c73c21e392f023e4" prot="public" virt="virtual"><scope>QuantLib::FdmHestonOp</scope><name>~FdmLinearOp</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

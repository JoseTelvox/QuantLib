<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_black_karasinski" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::BlackKarasinski</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_one_factor_model" prot="public" virt="non-virtual">QuantLib::OneFactorModel</basecompoundref>
    <basecompoundref refid="class_quant_lib_1_1_term_structure_consistent_model" prot="public" virt="non-virtual">QuantLib::TermStructureConsistentModel</basecompoundref>
    <includes refid="blackkarasinski_8hpp" local="no">blackkarasinski.hpp</includes>
    <innerclass refid="class_quant_lib_1_1_black_karasinski_1_1_dynamics" prot="public">QuantLib::BlackKarasinski::Dynamics</innerclass>
    <innerclass refid="class_quant_lib_1_1_black_karasinski_1_1_helper" prot="public">QuantLib::BlackKarasinski::Helper</innerclass>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_black_karasinski_1a70cbb8f641cef1e1bb9f412c5bc69c02" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_parameter" kindref="compound">Parameter</ref> &amp;</type>
        <definition>Parameter&amp; QuantLib::BlackKarasinski::a_</definition>
        <argsstring></argsstring>
        <name>a_</name>
        <qualifiedname>QuantLib::BlackKarasinski::a_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/blackkarasinski.hpp" line="59" column="19" bodyfile="ql/models/shortrate/onefactormodels/blackkarasinski.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_black_karasinski_1afd7b16e4c376d2819f2cc714973d89af" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_parameter" kindref="compound">Parameter</ref> &amp;</type>
        <definition>Parameter&amp; QuantLib::BlackKarasinski::sigma_</definition>
        <argsstring></argsstring>
        <name>sigma_</name>
        <qualifiedname>QuantLib::BlackKarasinski::sigma_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/blackkarasinski.hpp" line="60" column="19" bodyfile="ql/models/shortrate/onefactormodels/blackkarasinski.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_black_karasinski_1af1cb474db73b04f4ed36c20ea9f6ec4c" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_parameter" kindref="compound">Parameter</ref></type>
        <definition>Parameter QuantLib::BlackKarasinski::phi_</definition>
        <argsstring></argsstring>
        <name>phi_</name>
        <qualifiedname>QuantLib::BlackKarasinski::phi_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/blackkarasinski.hpp" line="61" column="19" bodyfile="ql/models/shortrate/onefactormodels/blackkarasinski.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_black_karasinski_1a915ef041d67a069e96576ce1f5fdfe1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::BlackKarasinski::BlackKarasinski</definition>
        <argsstring>(const Handle&lt; YieldTermStructure &gt; &amp;termStructure, Real a=0.1, Real sigma=0.1)</argsstring>
        <name>BlackKarasinski</name>
        <qualifiedname>QuantLib::BlackKarasinski::BlackKarasinski</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>termStructure</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>a</declname>
          <defval>0.1</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>sigma</declname>
          <defval>0.1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/blackkarasinski.hpp" line="45" column="9" bodyfile="ql/models/shortrate/onefactormodels/blackkarasinski.cpp" bodystart="57" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_black_karasinski_1a643dcb4d6161c84d32ffa2dbfdce6a68" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_one_factor_model_1_1_short_rate_dynamics" kindref="compound">ShortRateDynamics</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; OneFactorModel::ShortRateDynamics &gt; QuantLib::BlackKarasinski::dynamics</definition>
        <argsstring>() const override</argsstring>
        <name>dynamics</name>
        <qualifiedname>QuantLib::BlackKarasinski::dynamics</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_one_factor_model_1a8d62ee9199d0c0d3fe4e9b562537bcd3">dynamics</reimplements>
        <briefdescription>
<para>returns the short-rate dynamics </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/blackkarasinski.hpp" line="48" column="25" bodyfile="ql/models/shortrate/onefactormodels/blackkarasinski.cpp" bodystart="100" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_black_karasinski_1afc54eb9a86dbc0bd666018d6b963ffcb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_lattice" kindref="compound">Lattice</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; Lattice &gt; QuantLib::BlackKarasinski::tree</definition>
        <argsstring>(const TimeGrid &amp;grid) const override</argsstring>
        <name>tree</name>
        <qualifiedname>QuantLib::BlackKarasinski::tree</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_short_rate_model_1ae29f41ca551d424e53bac5967353e8ae">tree</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_time_grid" kindref="compound">TimeGrid</ref> &amp;</type>
          <declname>grid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/blackkarasinski.hpp" line="50" column="25" bodyfile="ql/models/shortrate/onefactormodels/blackkarasinski.cpp" bodystart="70" bodyend="97"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_black_karasinski_1a8aed0499d9f8dc764fb0117eaca6ca76" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::BlackKarasinski::a</definition>
        <argsstring>() const</argsstring>
        <name>a</name>
        <qualifiedname>QuantLib::BlackKarasinski::a</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/blackkarasinski.hpp" line="56" column="14" bodyfile="ql/models/shortrate/onefactormodels/blackkarasinski.hpp" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_black_karasinski_1a2d51dca45d0f391e4b8aff3244c2667d" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::BlackKarasinski::sigma</definition>
        <argsstring>() const</argsstring>
        <name>sigma</name>
        <qualifiedname>QuantLib::BlackKarasinski::sigma</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/blackkarasinski.hpp" line="57" column="14" bodyfile="ql/models/shortrate/onefactormodels/blackkarasinski.hpp" bodystart="57" bodyend="57"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Standard Black-Karasinski model class. </para>
    </briefdescription>
    <detaileddescription>
<para>This class implements the standard Black-Karasinski model defined by   <formula id="394">\[    d\ln r_t = (\theta(t) - \alpha \ln r_t)dt + \sigma dW_t,
\]</formula> where <formula id="178">$ alpha $</formula> and <formula id="179">$ sigma $</formula> are constants. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::BlackKarasinski</label>
        <link refid="class_quant_lib_1_1_black_karasinski"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::CalibratedModel</label>
        <link refid="class_quant_lib_1_1_calibrated_model"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>QuantLib::OneFactorModel</label>
        <link refid="class_quant_lib_1_1_one_factor_model"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::ShortRateModel</label>
        <link refid="class_quant_lib_1_1_short_rate_model"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::TermStructureConsistentModel</label>
        <link refid="class_quant_lib_1_1_term_structure_consistent_model"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7">
        <label>QuantLib::Array</label>
        <link refid="class_quant_lib_1_1_array"/>
      </node>
      <node id="1">
        <label>QuantLib::BlackKarasinski</label>
        <link refid="class_quant_lib_1_1_black_karasinski"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::CalibratedModel</label>
        <link refid="class_quant_lib_1_1_calibrated_model"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>problemValues_</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>QuantLib::OneFactorModel</label>
        <link refid="class_quant_lib_1_1_one_factor_model"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::ShortRateModel</label>
        <link refid="class_quant_lib_1_1_short_rate_model"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::TermStructureConsistentModel</label>
        <link refid="class_quant_lib_1_1_term_structure_consistent_model"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/models/shortrate/onefactormodels/blackkarasinski.hpp" line="42" column="5" bodyfile="ql/models/shortrate/onefactormodels/blackkarasinski.hpp" bodystart="43" bodyend="62"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_black_karasinski_1a8aed0499d9f8dc764fb0117eaca6ca76" prot="private" virt="non-virtual"><scope>QuantLib::BlackKarasinski</scope><name>a</name></member>
      <member refid="class_quant_lib_1_1_black_karasinski_1a70cbb8f641cef1e1bb9f412c5bc69c02" prot="private" virt="non-virtual"><scope>QuantLib::BlackKarasinski</scope><name>a_</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a063e96ccbf2ebbdb39341822083bd37c" prot="protected" virt="non-virtual"><scope>QuantLib::BlackKarasinski</scope><name>arguments_</name></member>
      <member refid="class_quant_lib_1_1_black_karasinski_1a915ef041d67a069e96576ce1f5fdfe1e" prot="public" virt="non-virtual"><scope>QuantLib::BlackKarasinski</scope><name>BlackKarasinski</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1af2776521b1584d547ec2440833508677" prot="public" virt="virtual"><scope>QuantLib::BlackKarasinski</scope><name>calibrate</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a6368e7ce0867de464f64d7b104b79b85" prot="public" virt="non-virtual"><scope>QuantLib::BlackKarasinski</scope><name>CalibratedModel</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a3b1198e322e93d700c2b48fe0cd888cf" prot="public" virt="non-virtual"><scope>QuantLib::BlackKarasinski</scope><name>constraint</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1add85b46f3e818f3916bd30eb85d877ef" prot="protected" virt="non-virtual"><scope>QuantLib::BlackKarasinski</scope><name>constraint_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::BlackKarasinski</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_black_karasinski_1a643dcb4d6161c84d32ffa2dbfdce6a68" prot="public" virt="virtual"><scope>QuantLib::BlackKarasinski</scope><name>dynamics</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a797a6b080b7a66d620758ff6fe34df39" prot="public" virt="non-virtual"><scope>QuantLib::BlackKarasinski</scope><name>endCriteria</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a66027503e827f56c83a5a60f8f066d84" prot="public" virt="non-virtual"><scope>QuantLib::BlackKarasinski</scope><name>functionEvaluation</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a6b9b9c042c526902626eead4de47e74c" prot="protected" virt="non-virtual"><scope>QuantLib::BlackKarasinski</scope><name>functionEvaluation_</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a9282281fe5c1dbc558462648b72b6e18" prot="protected" virt="virtual"><scope>QuantLib::BlackKarasinski</scope><name>generateArguments</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::BlackKarasinski</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::BlackKarasinski</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::BlackKarasinski</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::CalibratedModel::"><scope>QuantLib::BlackKarasinski</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::CalibratedModel::"><scope>QuantLib::BlackKarasinski</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::BlackKarasinski</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::CalibratedModel::"><scope>QuantLib::BlackKarasinski</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_one_factor_model_1a5a46125d5e17846020c0f2562b26e371" prot="public" virt="non-virtual"><scope>QuantLib::BlackKarasinski</scope><name>OneFactorModel</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::BlackKarasinski</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::CalibratedModel::QuantLib::Observable::"><scope>QuantLib::BlackKarasinski</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::BlackKarasinski</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1adae9352d30045e32f5382fa79a0bc88c" prot="public" virt="non-virtual"><scope>QuantLib::BlackKarasinski</scope><name>params</name></member>
      <member refid="class_quant_lib_1_1_black_karasinski_1af1cb474db73b04f4ed36c20ea9f6ec4c" prot="private" virt="non-virtual"><scope>QuantLib::BlackKarasinski</scope><name>phi_</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1ab7766a4e575c67e8f1e00f98bfe2e8c6" prot="public" virt="non-virtual"><scope>QuantLib::BlackKarasinski</scope><name>problemValues</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a4341c3bd6dc46bc9380bb4d52c032d25" prot="protected" virt="non-virtual"><scope>QuantLib::BlackKarasinski</scope><name>problemValues_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::BlackKarasinski</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::BlackKarasinski</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a018930665d7468824b0f1800b7472eb6" prot="public" virt="virtual"><scope>QuantLib::BlackKarasinski</scope><name>setParams</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a91f2d3c3d84fbe420b0d842de338037e" prot="protected" virt="non-virtual"><scope>QuantLib::BlackKarasinski</scope><name>shortRateEndCriteria_</name></member>
      <member refid="class_quant_lib_1_1_short_rate_model_1a372926acccb7e867cbd64657b3ad36db" prot="public" virt="non-virtual"><scope>QuantLib::BlackKarasinski</scope><name>ShortRateModel</name></member>
      <member refid="class_quant_lib_1_1_black_karasinski_1a2d51dca45d0f391e4b8aff3244c2667d" prot="private" virt="non-virtual"><scope>QuantLib::BlackKarasinski</scope><name>sigma</name></member>
      <member refid="class_quant_lib_1_1_black_karasinski_1afd7b16e4c376d2819f2cc714973d89af" prot="private" virt="non-virtual"><scope>QuantLib::BlackKarasinski</scope><name>sigma_</name></member>
      <member refid="class_quant_lib_1_1_term_structure_consistent_model_1a3035748f8b1b618e13a45428e3f55f90" prot="public" virt="non-virtual"><scope>QuantLib::BlackKarasinski</scope><name>termStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_consistent_model_1a20d3cd0bfeafc1ed325eb7e5747943a7" prot="public" virt="non-virtual"><scope>QuantLib::BlackKarasinski</scope><name>TermStructureConsistentModel</name></member>
      <member refid="class_quant_lib_1_1_black_karasinski_1afc54eb9a86dbc0bd666018d6b963ffcb" prot="public" virt="virtual"><scope>QuantLib::BlackKarasinski</scope><name>tree</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::BlackKarasinski</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::BlackKarasinski</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a03d7cb63ca181a47a45994cfe448e42c" prot="public" virt="virtual"><scope>QuantLib::BlackKarasinski</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a2652178a7f9d28ca4e213f76b55c87e9" prot="public" virt="non-virtual"><scope>QuantLib::BlackKarasinski</scope><name>value</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::BlackKarasinski</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::BlackKarasinski</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_one_factor_model_1ac6681ea431a84683013da24f2a04f5eb" prot="public" virt="non-virtual"><scope>QuantLib::BlackKarasinski</scope><name>~OneFactorModel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_bachelier_swaption_engine" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::BachelierSwaptionEngine</compoundname>
    <basecompoundref refid="class_quant_lib_1_1detail_1_1_black_style_swaption_engine" prot="public" virt="non-virtual">QuantLib::detail::BlackStyleSwaptionEngine&lt; detail::BachelierSpec &gt;</basecompoundref>
    <includes refid="blackswaptionengine_8hpp" local="no">blackswaptionengine.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_bachelier_swaption_engine_1a957cc97d3f80430671907fbee2dca4f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::BachelierSwaptionEngine::BachelierSwaptionEngine</definition>
        <argsstring>(const Handle&lt; YieldTermStructure &gt; &amp;discountCurve, Volatility vol, const DayCounter &amp;dc=Actual365Fixed(), CashAnnuityModel model=DiscountCurve)</argsstring>
        <name>BachelierSwaptionEngine</name>
        <qualifiedname>QuantLib::BachelierSwaptionEngine::BachelierSwaptionEngine</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>discountCurve</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
          <declname>vol</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dc</declname>
          <defval><ref refid="class_quant_lib_1_1_actual365_fixed" kindref="compound">Actual365Fixed</ref>()</defval>
        </param>
        <param>
          <type>CashAnnuityModel</type>
          <declname>model</declname>
          <defval><ref refid="namespace_quant_lib_1a4e84f831efa41ec8cfff0f14c823005e" kindref="member">DiscountCurve</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/swaption/blackswaptionengine.hpp" line="164" column="9" bodyfile="ql/pricingengines/swaption/blackswaptionengine.cpp" bodystart="58" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_bachelier_swaption_engine_1a4c4e23e022f4b87e3eb70bc06e2a7e14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::BachelierSwaptionEngine::BachelierSwaptionEngine</definition>
        <argsstring>(const Handle&lt; YieldTermStructure &gt; &amp;discountCurve, const Handle&lt; Quote &gt; &amp;vol, const DayCounter &amp;dc=Actual365Fixed(), CashAnnuityModel model=DiscountCurve)</argsstring>
        <name>BachelierSwaptionEngine</name>
        <qualifiedname>QuantLib::BachelierSwaptionEngine::BachelierSwaptionEngine</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>discountCurve</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &amp;</type>
          <declname>vol</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dc</declname>
          <defval><ref refid="class_quant_lib_1_1_actual365_fixed" kindref="compound">Actual365Fixed</ref>()</defval>
        </param>
        <param>
          <type>CashAnnuityModel</type>
          <declname>model</declname>
          <defval><ref refid="namespace_quant_lib_1a4e84f831efa41ec8cfff0f14c823005e" kindref="member">DiscountCurve</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/swaption/blackswaptionengine.hpp" line="168" column="9" bodyfile="ql/pricingengines/swaption/blackswaptionengine.cpp" bodystart="64" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_bachelier_swaption_engine_1ac0e8d152e5d8e8c98dae4034cd5ddf93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::BachelierSwaptionEngine::BachelierSwaptionEngine</definition>
        <argsstring>(const Handle&lt; YieldTermStructure &gt; &amp;discountCurve, const Handle&lt; SwaptionVolatilityStructure &gt; &amp;vol, CashAnnuityModel model=DiscountCurve)</argsstring>
        <name>BachelierSwaptionEngine</name>
        <qualifiedname>QuantLib::BachelierSwaptionEngine::BachelierSwaptionEngine</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>discountCurve</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_swaption_volatility_structure" kindref="compound">SwaptionVolatilityStructure</ref> &gt; &amp;</type>
          <declname>vol</declname>
        </param>
        <param>
          <type>CashAnnuityModel</type>
          <declname>model</declname>
          <defval><ref refid="namespace_quant_lib_1a4e84f831efa41ec8cfff0f14c823005e" kindref="member">DiscountCurve</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/swaption/blackswaptionengine.hpp" line="172" column="9" bodyfile="ql/pricingengines/swaption/blackswaptionengine.cpp" bodystart="70" bodyend="77"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Normal Bachelier-formula swaption engine. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="warning"><para>The engine assumes that the exercise date lies before the start date of the passed swap. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::BachelierSwaptionEngine</label>
        <link refid="class_quant_lib_1_1_bachelier_swaption_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::GenericEngine&lt; Swaption::arguments, Swaption::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_engine"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="7">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="5">
        <label>QuantLib::PricingEngine</label>
        <link refid="class_quant_lib_1_1_pricing_engine"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Swaption::engine</label>
        <link refid="class_quant_lib_1_1_swaption_1_1engine"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::detail::BlackStyleSwaptionEngine&lt; detail::BachelierSpec &gt;</label>
        <link refid="class_quant_lib_1_1detail_1_1_black_style_swaption_engine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::BachelierSwaptionEngine</label>
        <link refid="class_quant_lib_1_1_bachelier_swaption_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QuantLib::FixedVsFloatingSwap::arguments</label>
        <link refid="class_quant_lib_1_1_fixed_vs_floating_swap_1_1arguments"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::GenericEngine&lt; Swaption::arguments, Swaption::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_engine"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>arguments_</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="7">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="12">
        <label>QuantLib::Option::arguments</label>
        <link refid="class_quant_lib_1_1_option_1_1arguments"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::PricingEngine</label>
        <link refid="class_quant_lib_1_1_pricing_engine"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>QuantLib::PricingEngine::arguments</label>
        <link refid="class_quant_lib_1_1_pricing_engine_1_1arguments"/>
      </node>
      <node id="10">
        <label>QuantLib::Swap::arguments</label>
        <link refid="class_quant_lib_1_1_swap_1_1arguments"/>
        <childnode refid="11" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::Swaption::arguments</label>
        <link refid="class_quant_lib_1_1_swaption_1_1arguments"/>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Swaption::engine</label>
        <link refid="class_quant_lib_1_1_swaption_1_1engine"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::detail::BlackStyleSwaptionEngine&lt; detail::BachelierSpec &gt;</label>
        <link refid="class_quant_lib_1_1detail_1_1_black_style_swaption_engine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/pricingengines/swaption/blackswaptionengine.hpp" line="161" column="5" bodyfile="ql/pricingengines/swaption/blackswaptionengine.hpp" bodystart="162" bodyend="175"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_generic_engine_1ad2371cdbafa1989afb0e4733b1212c0d" prot="protected" virt="non-virtual"><scope>QuantLib::BachelierSwaptionEngine</scope><name>arguments_</name></member>
      <member refid="class_quant_lib_1_1_bachelier_swaption_engine_1a957cc97d3f80430671907fbee2dca4f3" prot="public" virt="non-virtual"><scope>QuantLib::BachelierSwaptionEngine</scope><name>BachelierSwaptionEngine</name></member>
      <member refid="class_quant_lib_1_1_bachelier_swaption_engine_1a4c4e23e022f4b87e3eb70bc06e2a7e14" prot="public" virt="non-virtual"><scope>QuantLib::BachelierSwaptionEngine</scope><name>BachelierSwaptionEngine</name></member>
      <member refid="class_quant_lib_1_1_bachelier_swaption_engine_1ac0e8d152e5d8e8c98dae4034cd5ddf93" prot="public" virt="non-virtual"><scope>QuantLib::BachelierSwaptionEngine</scope><name>BachelierSwaptionEngine</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_black_style_swaption_engine_1afa9dfa23fe41fa4a6963e5917ea968fe" prot="public" virt="non-virtual"><scope>QuantLib::BachelierSwaptionEngine</scope><name>BlackStyleSwaptionEngine</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_black_style_swaption_engine_1a8d4b99d4df1cb30fe69d9c54805e6492" prot="public" virt="non-virtual"><scope>QuantLib::BachelierSwaptionEngine</scope><name>BlackStyleSwaptionEngine</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_black_style_swaption_engine_1a8416b53690dbf1a0078b577218573d2c" prot="public" virt="non-virtual"><scope>QuantLib::BachelierSwaptionEngine</scope><name>BlackStyleSwaptionEngine</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_black_style_swaption_engine_1a702f297bfe1d5b75bc26ef0e2b5384fa" prot="public" virt="virtual"><scope>QuantLib::BachelierSwaptionEngine</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_black_style_swaption_engine_1a6be8294c772f403a290ed3c33db62300" prot="public" virt="non-virtual"><scope>QuantLib::BachelierSwaptionEngine</scope><name>CashAnnuityModel</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::BachelierSwaptionEngine</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_black_style_swaption_engine_1a6be8294c772f403a290ed3c33db62300a4fd56414662536e33223e65f9e1195ad" prot="public" virt="non-virtual"><scope>QuantLib::BachelierSwaptionEngine</scope><name>DiscountCurve</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1ad9c6e8dc65ca072d5e6e17640d74db3e" prot="public" virt="virtual"><scope>QuantLib::BachelierSwaptionEngine</scope><name>getArguments</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1aea8272ef6e5e0ea1cffadfed0454fa88" prot="public" virt="virtual"><scope>QuantLib::BachelierSwaptionEngine</scope><name>getResults</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::BachelierSwaptionEngine</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::BachelierSwaptionEngine</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::BachelierSwaptionEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::BachelierSwaptionEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::BachelierSwaptionEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::BachelierSwaptionEngine</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::BachelierSwaptionEngine</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::BachelierSwaptionEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::BachelierSwaptionEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::BachelierSwaptionEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::BachelierSwaptionEngine</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::BachelierSwaptionEngine</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1a81c5390ba1e713e57ca87d5f841d37f2" prot="public" virt="virtual"><scope>QuantLib::BachelierSwaptionEngine</scope><name>reset</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1a41281f2ea4990dbce90be1f9f2e231f6" prot="protected" virt="non-virtual"><scope>QuantLib::BachelierSwaptionEngine</scope><name>results_</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_black_style_swaption_engine_1a6be8294c772f403a290ed3c33db62300adafb0602a5393650ea2701cd4dd4ac61" prot="public" virt="non-virtual"><scope>QuantLib::BachelierSwaptionEngine</scope><name>SwapRate</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_black_style_swaption_engine_1a42cb47dcf6a37c1555b77fbb09e41f5f" prot="public" virt="non-virtual"><scope>QuantLib::BachelierSwaptionEngine</scope><name>termStructure</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::BachelierSwaptionEngine</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::BachelierSwaptionEngine</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1aaf5ef54d9e1abf8b1b50b48804edf3dc" prot="public" virt="virtual"><scope>QuantLib::BachelierSwaptionEngine</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1detail_1_1_black_style_swaption_engine_1a993edc541d9a7532b1ad59cb78c9ad8e" prot="public" virt="non-virtual"><scope>QuantLib::BachelierSwaptionEngine</scope><name>volatility</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::BachelierSwaptionEngine</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::BachelierSwaptionEngine</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_pricing_engine_1a66b279a54578cd7e60d402e5147eb526" prot="public" virt="non-virtual"><scope>QuantLib::BachelierSwaptionEngine</scope><name>~PricingEngine</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_analytic_p_t_d_heston_engine" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::AnalyticPTDHestonEngine</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_generic_model_engine" prot="public" virt="non-virtual">QuantLib::GenericModelEngine&lt; PiecewiseTimeDependentHestonModel, VanillaOption::arguments, VanillaOption::results &gt;</basecompoundref>
    <includes refid="analyticptdhestonengine_8hpp" local="no">analyticptdhestonengine.hpp</includes>
    <innerclass refid="class_quant_lib_1_1_analytic_p_t_d_heston_engine_1_1_a_p___helper" prot="public">QuantLib::AnalyticPTDHestonEngine::AP_Helper</innerclass>
    <innerclass refid="class_quant_lib_1_1_analytic_p_t_d_heston_engine_1_1_fj___helper" prot="public">QuantLib::AnalyticPTDHestonEngine::Fj_Helper</innerclass>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_quant_lib_1_1_analytic_p_t_d_heston_engine_1afdbad2abd6f9314887e43743bcb8a281" prot="public" static="no" strong="no">
        <type></type>
        <name>ComplexLogFormula</name>
        <qualifiedname>QuantLib::AnalyticPTDHestonEngine::ComplexLogFormula</qualifiedname>
        <enumvalue id="class_quant_lib_1_1_analytic_p_t_d_heston_engine_1afdbad2abd6f9314887e43743bcb8a281ab7aced9d1e299f28764d41acd0804df5" prot="public">
          <name>Gatheral</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_analytic_p_t_d_heston_engine_1afdbad2abd6f9314887e43743bcb8a281a55a2c1f35f8605dd3cef2ec442d15c8e" prot="public">
          <name>AndersenPiterbarg</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analyticptdhestonengine.hpp" line="57" column="9" bodyfile="ql/pricingengines/vanilla/analyticptdhestonengine.hpp" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="typedef" id="class_quant_lib_1_1_analytic_p_t_d_heston_engine_1a038a28bf8b2ac8f31153e9c1f8d58828" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration" kindref="compound">AnalyticHestonEngine::Integration</ref></type>
        <definition>typedef AnalyticHestonEngine::Integration QuantLib::AnalyticPTDHestonEngine::Integration</definition>
        <argsstring></argsstring>
        <name>Integration</name>
        <qualifiedname>QuantLib::AnalyticPTDHestonEngine::Integration</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analyticptdhestonengine.hpp" line="58" column="51" bodyfile="ql/pricingengines/vanilla/analyticptdhestonengine.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_p_t_d_heston_engine_1a57f0f21f5e22223b3074ee583f49c973" prot="private" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::AnalyticPTDHestonEngine::evaluations_</definition>
        <argsstring></argsstring>
        <name>evaluations_</name>
        <qualifiedname>QuantLib::AnalyticPTDHestonEngine::evaluations_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analyticptdhestonengine.hpp" line="94" column="22" bodyfile="ql/pricingengines/vanilla/analyticptdhestonengine.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_p_t_d_heston_engine_1abc4393437682f1eaebaed385758e9318" prot="private" static="no" mutable="no">
        <type>const ComplexLogFormula</type>
        <definition>const ComplexLogFormula QuantLib::AnalyticPTDHestonEngine::cpxLog_</definition>
        <argsstring></argsstring>
        <name>cpxLog_</name>
        <qualifiedname>QuantLib::AnalyticPTDHestonEngine::cpxLog_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analyticptdhestonengine.hpp" line="95" column="33" bodyfile="ql/pricingengines/vanilla/analyticptdhestonengine.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_p_t_d_heston_engine_1a259e005a122cf941db1e5dbd3c3cad75" prot="private" static="no" mutable="no">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration" kindref="compound">Integration</ref> &gt;</type>
        <definition>const ext::shared_ptr&lt;Integration&gt; QuantLib::AnalyticPTDHestonEngine::integration_</definition>
        <argsstring></argsstring>
        <name>integration_</name>
        <qualifiedname>QuantLib::AnalyticPTDHestonEngine::integration_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analyticptdhestonengine.hpp" line="96" column="31" bodyfile="ql/pricingengines/vanilla/analyticptdhestonengine.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_p_t_d_heston_engine_1aeb513b80d498cb795ea43fa476e4b441" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::AnalyticPTDHestonEngine::andersenPiterbargEpsilon_</definition>
        <argsstring></argsstring>
        <name>andersenPiterbargEpsilon_</name>
        <qualifiedname>QuantLib::AnalyticPTDHestonEngine::andersenPiterbargEpsilon_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analyticptdhestonengine.hpp" line="97" column="20" bodyfile="ql/pricingengines/vanilla/analyticptdhestonengine.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_p_t_d_heston_engine_1a209a13d0797f9d72bd537178724b30fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::AnalyticPTDHestonEngine::AnalyticPTDHestonEngine</definition>
        <argsstring>(const ext::shared_ptr&lt; PiecewiseTimeDependentHestonModel &gt; &amp;model, Real relTolerance, Size maxEvaluations)</argsstring>
        <name>AnalyticPTDHestonEngine</name>
        <qualifiedname>QuantLib::AnalyticPTDHestonEngine::AnalyticPTDHestonEngine</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_piecewise_time_dependent_heston_model" kindref="compound">PiecewiseTimeDependentHestonModel</ref> &gt; &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>relTolerance</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>maxEvaluations</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analyticptdhestonengine.hpp" line="65" column="9" bodyfile="ql/pricingengines/vanilla/analyticptdhestonengine.cpp" bodystart="224" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_p_t_d_heston_engine_1a71877303bc878bb33e85a14142faf19a" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::AnalyticPTDHestonEngine::AnalyticPTDHestonEngine</definition>
        <argsstring>(const ext::shared_ptr&lt; PiecewiseTimeDependentHestonModel &gt; &amp;model, Size integrationOrder=144)</argsstring>
        <name>AnalyticPTDHestonEngine</name>
        <qualifiedname>QuantLib::AnalyticPTDHestonEngine::AnalyticPTDHestonEngine</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_piecewise_time_dependent_heston_model" kindref="compound">PiecewiseTimeDependentHestonModel</ref> &gt; &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>integrationOrder</declname>
          <defval>144</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analyticptdhestonengine.hpp" line="71" column="18" bodyfile="ql/pricingengines/vanilla/analyticptdhestonengine.cpp" bodystart="211" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_p_t_d_heston_engine_1a4f127905abb550f4a9d388b78d43a32f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::AnalyticPTDHestonEngine::AnalyticPTDHestonEngine</definition>
        <argsstring>(const ext::shared_ptr&lt; PiecewiseTimeDependentHestonModel &gt; &amp;model, ComplexLogFormula cpxLog, const Integration &amp;itg, Real andersenPiterbargEpsilon=1e-8)</argsstring>
        <name>AnalyticPTDHestonEngine</name>
        <qualifiedname>QuantLib::AnalyticPTDHestonEngine::AnalyticPTDHestonEngine</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_piecewise_time_dependent_heston_model" kindref="compound">PiecewiseTimeDependentHestonModel</ref> &gt; &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>ComplexLogFormula</type>
          <declname>cpxLog</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_analytic_heston_engine_1_1_integration" kindref="compound">Integration</ref> &amp;</type>
          <declname>itg</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>andersenPiterbargEpsilon</declname>
          <defval>1e-8</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analyticptdhestonengine.hpp" line="76" column="9" bodyfile="ql/pricingengines/vanilla/analyticptdhestonengine.cpp" bodystart="237" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_p_t_d_heston_engine_1a2fa4a3189b2d8125b766b48d9eadf054" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::AnalyticPTDHestonEngine::calculate</definition>
        <argsstring>() const override</argsstring>
        <name>calculate</name>
        <qualifiedname>QuantLib::AnalyticPTDHestonEngine::calculate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_pricing_engine_1ad2be11cff80d9792f0cc8231711fcb06">calculate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analyticptdhestonengine.hpp" line="83" column="14" bodyfile="ql/pricingengines/vanilla/analyticptdhestonengine.cpp" bodystart="252" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_p_t_d_heston_engine_1aed093c41aa42cfe77682d2ce9df63103" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::AnalyticPTDHestonEngine::numberOfEvaluations</definition>
        <argsstring>() const</argsstring>
        <name>numberOfEvaluations</name>
        <qualifiedname>QuantLib::AnalyticPTDHestonEngine::numberOfEvaluations</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analyticptdhestonengine.hpp" line="84" column="14" bodyfile="ql/pricingengines/vanilla/analyticptdhestonengine.cpp" bodystart="408" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_p_t_d_heston_engine_1ac7b2dd09fb56aa26d769cb850a16da8a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::complex&lt; Real &gt; QuantLib::AnalyticPTDHestonEngine::chF</definition>
        <argsstring>(const std::complex&lt; Real &gt; &amp;z, Time t) const</argsstring>
        <name>chF</name>
        <qualifiedname>QuantLib::AnalyticPTDHestonEngine::chF</qualifiedname>
        <param>
          <type>const std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>z</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analyticptdhestonengine.hpp" line="87" column="22" bodyfile="ql/pricingengines/vanilla/analyticptdhestonengine.cpp" bodystart="206" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_p_t_d_heston_engine_1a129d8e42b62c83ab20ed68f98ae50d29" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::complex&lt; Real &gt; QuantLib::AnalyticPTDHestonEngine::lnChF</definition>
        <argsstring>(const std::complex&lt; Real &gt; &amp;z, Time t) const</argsstring>
        <name>lnChF</name>
        <qualifiedname>QuantLib::AnalyticPTDHestonEngine::lnChF</qualifiedname>
        <param>
          <type>const std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>z</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analyticptdhestonengine.hpp" line="88" column="22" bodyfile="ql/pricingengines/vanilla/analyticptdhestonengine.cpp" bodystart="155" bodyend="204"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>analytic piecewise constant time dependent Heston-model engine </para>
    </briefdescription>
    <detaileddescription>
<para>References:</para>
<para>Heston, Steven L., 1993. A Closed-Form Solution for Options with Stochastic <ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref> with Applications to <ref refid="class_quant_lib_1_1_bond" kindref="compound">Bond</ref> and <ref refid="class_quant_lib_1_1_currency" kindref="compound">Currency</ref> Options. The review of Financial Studies, Volume 6, Issue 2, 327-343.</para>
<para>J. Gatheral, The <ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref> Surface: A Practitioner&apos;s Guide, Wiley Finance</para>
<para>A. Elices, Models with time-dependent parameters using transform methods: application to Heston’s model, <ulink url="http://arxiv.org/pdf/0708.2020">http://arxiv.org/pdf/0708.2020</ulink> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::AnalyticPTDHestonEngine</label>
        <link refid="class_quant_lib_1_1_analytic_p_t_d_heston_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::GenericEngine&lt; VanillaOption::arguments, VanillaOption::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_engine"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::GenericModelEngine&lt; PiecewiseTimeDependentHestonModel, VanillaOption::arguments, VanillaOption::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_model_engine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="4">
        <label>QuantLib::PricingEngine</label>
        <link refid="class_quant_lib_1_1_pricing_engine"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::AnalyticPTDHestonEngine</label>
        <link refid="class_quant_lib_1_1_analytic_p_t_d_heston_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::GenericEngine&lt; VanillaOption::arguments, VanillaOption::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_engine"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::GenericModelEngine&lt; PiecewiseTimeDependentHestonModel, VanillaOption::arguments, VanillaOption::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_model_engine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>model_</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::Handle&lt; PiecewiseTimeDependentHestonModel &gt;</label>
        <link refid="class_quant_lib_1_1_handle"/>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="4">
        <label>QuantLib::PricingEngine</label>
        <link refid="class_quant_lib_1_1_pricing_engine"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/pricingengines/vanilla/analyticptdhestonengine.hpp" line="52" column="5" bodyfile="ql/pricingengines/vanilla/analyticptdhestonengine.hpp" bodystart="55" bodyend="98"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_analytic_p_t_d_heston_engine_1a209a13d0797f9d72bd537178724b30fd" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>AnalyticPTDHestonEngine</name></member>
      <member refid="class_quant_lib_1_1_analytic_p_t_d_heston_engine_1a71877303bc878bb33e85a14142faf19a" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>AnalyticPTDHestonEngine</name></member>
      <member refid="class_quant_lib_1_1_analytic_p_t_d_heston_engine_1a4f127905abb550f4a9d388b78d43a32f" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>AnalyticPTDHestonEngine</name></member>
      <member refid="class_quant_lib_1_1_analytic_p_t_d_heston_engine_1afdbad2abd6f9314887e43743bcb8a281a55a2c1f35f8605dd3cef2ec442d15c8e" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>AndersenPiterbarg</name></member>
      <member refid="class_quant_lib_1_1_analytic_p_t_d_heston_engine_1aeb513b80d498cb795ea43fa476e4b441" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>andersenPiterbargEpsilon_</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1ad2371cdbafa1989afb0e4733b1212c0d" prot="protected" virt="non-virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>arguments_</name></member>
      <member refid="class_quant_lib_1_1_analytic_p_t_d_heston_engine_1a2fa4a3189b2d8125b766b48d9eadf054" prot="public" virt="virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_analytic_p_t_d_heston_engine_1ac7b2dd09fb56aa26d769cb850a16da8a" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>chF</name></member>
      <member refid="class_quant_lib_1_1_analytic_p_t_d_heston_engine_1afdbad2abd6f9314887e43743bcb8a281" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>ComplexLogFormula</name></member>
      <member refid="class_quant_lib_1_1_analytic_p_t_d_heston_engine_1abc4393437682f1eaebaed385758e9318" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>cpxLog_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_analytic_p_t_d_heston_engine_1a57f0f21f5e22223b3074ee583f49c973" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>evaluations_</name></member>
      <member refid="class_quant_lib_1_1_analytic_p_t_d_heston_engine_1afdbad2abd6f9314887e43743bcb8a281ab7aced9d1e299f28764d41acd0804df5" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>Gatheral</name></member>
      <member refid="class_quant_lib_1_1_generic_model_engine_1ab8c094dbe99234f8aa9dc0a92e0e5fd1" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>GenericModelEngine</name></member>
      <member refid="class_quant_lib_1_1_generic_model_engine_1a8ab246499452beddca7225a2c63f8549" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>GenericModelEngine</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1ad9c6e8dc65ca072d5e6e17640d74db3e" prot="public" virt="virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>getArguments</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1aea8272ef6e5e0ea1cffadfed0454fa88" prot="public" virt="virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>getResults</name></member>
      <member refid="class_quant_lib_1_1_analytic_p_t_d_heston_engine_1a038a28bf8b2ac8f31153e9c1f8d58828" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>Integration</name></member>
      <member refid="class_quant_lib_1_1_analytic_p_t_d_heston_engine_1a259e005a122cf941db1e5dbd3c3cad75" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>integration_</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_analytic_p_t_d_heston_engine_1a129d8e42b62c83ab20ed68f98ae50d29" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>lnChF</name></member>
      <member refid="class_quant_lib_1_1_generic_model_engine_1a48733a3abfeb33214816709c9c5c6b62" prot="protected" virt="non-virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>model_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_analytic_p_t_d_heston_engine_1aed093c41aa42cfe77682d2ce9df63103" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>numberOfEvaluations</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1a81c5390ba1e713e57ca87d5f841d37f2" prot="public" virt="virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>reset</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1a41281f2ea4990dbce90be1f9f2e231f6" prot="protected" virt="non-virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>results_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1aaf5ef54d9e1abf8b1b50b48804edf3dc" prot="public" virt="virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_pricing_engine_1a66b279a54578cd7e60d402e5147eb526" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticPTDHestonEngine</scope><name>~PricingEngine</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

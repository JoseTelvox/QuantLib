<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_kluge_ext_o_u_process" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::KlugeExtOUProcess</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_stochastic_process" prot="public" virt="non-virtual">QuantLib::StochasticProcess</basecompoundref>
    <includes refid="klugeextouprocess_8hpp" local="no">klugeextouprocess.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_kluge_ext_o_u_process_1a0d42b5e964ab5030f32217213a2d8d7d" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::KlugeExtOUProcess::rho_</definition>
        <argsstring></argsstring>
        <name>rho_</name>
        <qualifiedname>QuantLib::KlugeExtOUProcess::rho_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/klugeextouprocess.hpp" line="76" column="20" bodyfile="ql/experimental/processes/klugeextouprocess.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_kluge_ext_o_u_process_1aad7c37043fc08d5c3011c937d2690eb9" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::KlugeExtOUProcess::sqrtMRho_</definition>
        <argsstring></argsstring>
        <name>sqrtMRho_</name>
        <qualifiedname>QuantLib::KlugeExtOUProcess::sqrtMRho_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/klugeextouprocess.hpp" line="76" column="25" bodyfile="ql/experimental/processes/klugeextouprocess.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_kluge_ext_o_u_process_1ad699b4382c2f436fd34d97f3858c92ab" prot="private" static="no" mutable="no">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_ext_o_u_with_jumps_process" kindref="compound">ExtOUWithJumpsProcess</ref> &gt;</type>
        <definition>const ext::shared_ptr&lt;ExtOUWithJumpsProcess&gt; QuantLib::KlugeExtOUProcess::klugeProcess_</definition>
        <argsstring></argsstring>
        <name>klugeProcess_</name>
        <qualifiedname>QuantLib::KlugeExtOUProcess::klugeProcess_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/klugeextouprocess.hpp" line="77" column="31" bodyfile="ql/experimental/processes/klugeextouprocess.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_kluge_ext_o_u_process_1a85718da4081c73bec81dea6be2d4738a" prot="private" static="no" mutable="no">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process" kindref="compound">ExtendedOrnsteinUhlenbeckProcess</ref> &gt;</type>
        <definition>const ext::shared_ptr&lt;ExtendedOrnsteinUhlenbeckProcess&gt; QuantLib::KlugeExtOUProcess::ouProcess_</definition>
        <argsstring></argsstring>
        <name>ouProcess_</name>
        <qualifiedname>QuantLib::KlugeExtOUProcess::ouProcess_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/klugeextouprocess.hpp" line="78" column="31" bodyfile="ql/experimental/processes/klugeextouprocess.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_kluge_ext_o_u_process_1acaaeede4a99397a0925bba1a954064c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::KlugeExtOUProcess::KlugeExtOUProcess</definition>
        <argsstring>(Real rho, ext::shared_ptr&lt; ExtOUWithJumpsProcess &gt; kluge, ext::shared_ptr&lt; ExtendedOrnsteinUhlenbeckProcess &gt; extOU)</argsstring>
        <name>KlugeExtOUProcess</name>
        <qualifiedname>QuantLib::KlugeExtOUProcess::KlugeExtOUProcess</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>rho</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_ext_o_u_with_jumps_process" kindref="compound">ExtOUWithJumpsProcess</ref> &gt;</type>
          <declname>kluge</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process" kindref="compound">ExtendedOrnsteinUhlenbeckProcess</ref> &gt;</type>
          <declname>extOU</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/klugeextouprocess.hpp" line="58" column="9" bodyfile="ql/experimental/processes/klugeextouprocess.cpp" bodystart="28" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_kluge_ext_o_u_process_1a1f4278cabea630d806cf77fa0e5fcb43" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::KlugeExtOUProcess::size</definition>
        <argsstring>() const override</argsstring>
        <name>size</name>
        <qualifiedname>QuantLib::KlugeExtOUProcess::size</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process_1a92e9b468d781e9ceb566d6e546113540">size</reimplements>
        <briefdescription>
<para>returns the number of dimensions of the stochastic process </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/klugeextouprocess.hpp" line="62" column="14" bodyfile="ql/experimental/processes/klugeextouprocess.cpp" bodystart="38" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_kluge_ext_o_u_process_1abc4b91924850204b0f675596086fc30b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::KlugeExtOUProcess::factors</definition>
        <argsstring>() const override</argsstring>
        <name>factors</name>
        <qualifiedname>QuantLib::KlugeExtOUProcess::factors</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process_1a0346d38598fb9a5a1cd58024f05081aa">factors</reimplements>
        <briefdescription>
<para>returns the number of independent factors of the process </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/klugeextouprocess.hpp" line="63" column="14" bodyfile="ql/experimental/processes/klugeextouprocess.cpp" bodystart="42" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_kluge_ext_o_u_process_1aa33532807af70c7c0e1336325eb2a6a5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::KlugeExtOUProcess::initialValues</definition>
        <argsstring>() const override</argsstring>
        <name>initialValues</name>
        <qualifiedname>QuantLib::KlugeExtOUProcess::initialValues</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process_1a4277a74107d071252a2445d23c90b654">initialValues</reimplements>
        <briefdescription>
<para>returns the initial values of the state variables </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/klugeextouprocess.hpp" line="65" column="15" bodyfile="ql/experimental/processes/klugeextouprocess.cpp" bodystart="46" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_kluge_ext_o_u_process_1a7bc44995833840c57909f6ffb3796b3d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::KlugeExtOUProcess::drift</definition>
        <argsstring>(Time t, const Array &amp;x) const override</argsstring>
        <name>drift</name>
        <qualifiedname>QuantLib::KlugeExtOUProcess::drift</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process_1a467056bfaa17a1ea3debd1dc21402bb8">drift</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>returns the drift part of the equation, i.e., <formula id="468">$ \mu(t, \mathrm{x}_t) $</formula> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/klugeextouprocess.hpp" line="66" column="15" bodyfile="ql/experimental/processes/klugeextouprocess.cpp" bodystart="55" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_kluge_ext_o_u_process_1ad08983250a1f583b21ba3b4adf3f3859" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::KlugeExtOUProcess::diffusion</definition>
        <argsstring>(Time t, const Array &amp;x) const override</argsstring>
        <name>diffusion</name>
        <qualifiedname>QuantLib::KlugeExtOUProcess::diffusion</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process_1a45df6a954a177df19d31de5a7f2bef35">diffusion</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>returns the diffusion part of the equation, i.e. <formula id="469">$ \sigma(t, \mathrm{x}_t) $</formula> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/klugeextouprocess.hpp" line="67" column="16" bodyfile="ql/experimental/processes/klugeextouprocess.cpp" bodystart="64" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_kluge_ext_o_u_process_1a5b3391b7743f5797e26e97d6ace46a91" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::KlugeExtOUProcess::evolve</definition>
        <argsstring>(Time t0, const Array &amp;x0, Time dt, const Array &amp;dw) const override</argsstring>
        <name>evolve</name>
        <qualifiedname>QuantLib::KlugeExtOUProcess::evolve</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process_1a8d99a715b297d5b6543b1d303a6002c0">evolve</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t0</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>x0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>dt</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>dw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the asset value after a time interval  <formula id="474">$ \Delta t
$</formula> according to the given discretization. By default, it returns    <formula id="475">\[E(\mathrm{x}_0,t_0,\Delta t) +
S(\mathrm{x}_0,t_0,\Delta t) \cdot \Delta \mathrm{w}
\]</formula> where <formula id="476">$ E $</formula> is the expectation and <formula id="290">$ S $</formula> the standard deviation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/klugeextouprocess.hpp" line="68" column="15" bodyfile="ql/experimental/processes/klugeextouprocess.cpp" bodystart="76" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_kluge_ext_o_u_process_1adfd6be7dbbedeeb0c096285f9fcbe4b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_ext_o_u_with_jumps_process" kindref="compound">ExtOUWithJumpsProcess</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; ExtOUWithJumpsProcess &gt; QuantLib::KlugeExtOUProcess::getKlugeProcess</definition>
        <argsstring>() const</argsstring>
        <name>getKlugeProcess</name>
        <qualifiedname>QuantLib::KlugeExtOUProcess::getKlugeProcess</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/klugeextouprocess.hpp" line="70" column="25" bodyfile="ql/experimental/processes/klugeextouprocess.cpp" bodystart="90" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_kluge_ext_o_u_process_1a7ce1ebd4eafbddc242358b9394bc5033" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_extended_ornstein_uhlenbeck_process" kindref="compound">ExtendedOrnsteinUhlenbeckProcess</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; ExtendedOrnsteinUhlenbeckProcess &gt; QuantLib::KlugeExtOUProcess::getExtOUProcess</definition>
        <argsstring>() const</argsstring>
        <name>getExtOUProcess</name>
        <qualifiedname>QuantLib::KlugeExtOUProcess::getExtOUProcess</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/klugeextouprocess.hpp" line="71" column="25" bodyfile="ql/experimental/processes/klugeextouprocess.cpp" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_kluge_ext_o_u_process_1a1845f90f4a60a91f046cd65d775a7dcf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::KlugeExtOUProcess::rho</definition>
        <argsstring>() const</argsstring>
        <name>rho</name>
        <qualifiedname>QuantLib::KlugeExtOUProcess::rho</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/processes/klugeextouprocess.hpp" line="73" column="14" bodyfile="ql/experimental/processes/klugeextouprocess.cpp" bodystart="98" bodyend="100"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class describes a correlated Kluge - extended Ornstein-Uhlenbeck process governed by           <formula id="111">\[\begin{array}{rcl}
    P_t &amp;=&amp; \exp(p_t + X_t + Y_t) \\
    dX_t &amp;=&amp; -\alpha X_tdt + \sigma_x dW_t^x \\
    dY_t &amp;=&amp; -\beta Y_{t-}dt + J_tdN_t \\
    \omega(J) &amp;=&amp; \eta e^{-\eta J} \\
    G_t &amp;=&amp; \exp(g_t + U_t) \\
    dU_t &amp;=&amp; -\kappa U_tdt + \sigma_udW_t^u \\
    \rho &amp;=&amp; \mathrm{corr} (dW_t^x, dW_t^u)
 \end{array}
\]</formula></para>
<para>References: B. Hambly, S. Howison, T. Kluge, Modelling spikes and pricing swing options in electricity markets, <ulink url="http://people.maths.ox.ac.uk/hambly/PDF/Papers/elec.pdf">http://people.maths.ox.ac.uk/hambly/PDF/Papers/elec.pdf</ulink> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::KlugeExtOUProcess</label>
        <link refid="class_quant_lib_1_1_kluge_ext_o_u_process"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="3">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>QuantLib::StochasticProcess</label>
        <link refid="class_quant_lib_1_1_stochastic_process"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::KlugeExtOUProcess</label>
        <link refid="class_quant_lib_1_1_kluge_ext_o_u_process"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="3">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>QuantLib::StochasticProcess</label>
        <link refid="class_quant_lib_1_1_stochastic_process"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/processes/klugeextouprocess.hpp" line="56" column="5" bodyfile="ql/experimental/processes/klugeextouprocess.hpp" bodystart="56" bodyend="79"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_stochastic_process_1ae2e3d89d3595fcd73be5e6e7e195f3e7" prot="public" virt="virtual"><scope>QuantLib::KlugeExtOUProcess</scope><name>apply</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a3a92717719d8621148989905a132c5e1" prot="public" virt="virtual"><scope>QuantLib::KlugeExtOUProcess</scope><name>covariance</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::KlugeExtOUProcess</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_kluge_ext_o_u_process_1ad08983250a1f583b21ba3b4adf3f3859" prot="public" virt="virtual"><scope>QuantLib::KlugeExtOUProcess</scope><name>diffusion</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a98cd541abbfd37f62d10d3ec2ed214be" prot="protected" virt="non-virtual"><scope>QuantLib::KlugeExtOUProcess</scope><name>discretization_</name></member>
      <member refid="class_quant_lib_1_1_kluge_ext_o_u_process_1a7bc44995833840c57909f6ffb3796b3d" prot="public" virt="virtual"><scope>QuantLib::KlugeExtOUProcess</scope><name>drift</name></member>
      <member refid="class_quant_lib_1_1_kluge_ext_o_u_process_1a5b3391b7743f5797e26e97d6ace46a91" prot="public" virt="virtual"><scope>QuantLib::KlugeExtOUProcess</scope><name>evolve</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1af225d654ba08bc09bf2ecab7d787ca9b" prot="public" virt="virtual"><scope>QuantLib::KlugeExtOUProcess</scope><name>expectation</name></member>
      <member refid="class_quant_lib_1_1_kluge_ext_o_u_process_1abc4b91924850204b0f675596086fc30b" prot="public" virt="virtual"><scope>QuantLib::KlugeExtOUProcess</scope><name>factors</name></member>
      <member refid="class_quant_lib_1_1_kluge_ext_o_u_process_1a7ce1ebd4eafbddc242358b9394bc5033" prot="public" virt="non-virtual"><scope>QuantLib::KlugeExtOUProcess</scope><name>getExtOUProcess</name></member>
      <member refid="class_quant_lib_1_1_kluge_ext_o_u_process_1adfd6be7dbbedeeb0c096285f9fcbe4b6" prot="public" virt="non-virtual"><scope>QuantLib::KlugeExtOUProcess</scope><name>getKlugeProcess</name></member>
      <member refid="class_quant_lib_1_1_kluge_ext_o_u_process_1aa33532807af70c7c0e1336325eb2a6a5" prot="public" virt="virtual"><scope>QuantLib::KlugeExtOUProcess</scope><name>initialValues</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::KlugeExtOUProcess</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_kluge_ext_o_u_process_1acaaeede4a99397a0925bba1a954064c6" prot="public" virt="non-virtual"><scope>QuantLib::KlugeExtOUProcess</scope><name>KlugeExtOUProcess</name></member>
      <member refid="class_quant_lib_1_1_kluge_ext_o_u_process_1ad699b4382c2f436fd34d97f3858c92ab" prot="private" virt="non-virtual"><scope>QuantLib::KlugeExtOUProcess</scope><name>klugeProcess_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::KlugeExtOUProcess</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::KlugeExtOUProcess</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::KlugeExtOUProcess</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::KlugeExtOUProcess</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::KlugeExtOUProcess</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::KlugeExtOUProcess</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::KlugeExtOUProcess</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::KlugeExtOUProcess</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::KlugeExtOUProcess</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_kluge_ext_o_u_process_1a85718da4081c73bec81dea6be2d4738a" prot="private" virt="non-virtual"><scope>QuantLib::KlugeExtOUProcess</scope><name>ouProcess_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::KlugeExtOUProcess</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::KlugeExtOUProcess</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_kluge_ext_o_u_process_1a1845f90f4a60a91f046cd65d775a7dcf" prot="public" virt="non-virtual"><scope>QuantLib::KlugeExtOUProcess</scope><name>rho</name></member>
      <member refid="class_quant_lib_1_1_kluge_ext_o_u_process_1a0d42b5e964ab5030f32217213a2d8d7d" prot="private" virt="non-virtual"><scope>QuantLib::KlugeExtOUProcess</scope><name>rho_</name></member>
      <member refid="class_quant_lib_1_1_kluge_ext_o_u_process_1a1f4278cabea630d806cf77fa0e5fcb43" prot="public" virt="virtual"><scope>QuantLib::KlugeExtOUProcess</scope><name>size</name></member>
      <member refid="class_quant_lib_1_1_kluge_ext_o_u_process_1aad7c37043fc08d5c3011c937d2690eb9" prot="private" virt="non-virtual"><scope>QuantLib::KlugeExtOUProcess</scope><name>sqrtMRho_</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a47e9f5540b2ca9c32650dc81d051ca86" prot="public" virt="virtual"><scope>QuantLib::KlugeExtOUProcess</scope><name>stdDeviation</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a2dd24b794a6b320bc60ba9e1a87bf48e" prot="protected" virt="non-virtual"><scope>QuantLib::KlugeExtOUProcess</scope><name>StochasticProcess</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a957ee9776d6048835106ea29ea44927f" prot="protected" virt="non-virtual"><scope>QuantLib::KlugeExtOUProcess</scope><name>StochasticProcess</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a39c5f08a3779665f9185a558d2b8418d" prot="public" virt="virtual"><scope>QuantLib::KlugeExtOUProcess</scope><name>time</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::KlugeExtOUProcess</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::KlugeExtOUProcess</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a0f22628658fd2dc702c13c354ef3244e" prot="public" virt="virtual"><scope>QuantLib::KlugeExtOUProcess</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::KlugeExtOUProcess</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::KlugeExtOUProcess</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a0e2b6a14e675db5abd0ab8965ff7b2c3" prot="public" virt="non-virtual"><scope>QuantLib::KlugeExtOUProcess</scope><name>~StochasticProcess</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

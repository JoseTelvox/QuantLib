<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_make_m_c_european_heston_engine" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::MakeMCEuropeanHestonEngine</compoundname>
    <includes refid="mceuropeanhestonengine_8hpp" local="no">mceuropeanhestonengine.hpp</includes>
    <templateparamlist>
      <param>
        <type>class RNG</type>
        <defval><ref refid="namespace_quant_lib_1a68b9aaf5f0c17983506b1a1db8575ab0" kindref="member">PseudoRandom</ref></defval>
      </param>
      <param>
        <type>class S</type>
        <defval><ref refid="namespace_quant_lib_1ae2e788da35d2b866040a03b96227ee6e" kindref="member">Statistics</ref></defval>
      </param>
      <param>
        <type>class P</type>
        <defval><ref refid="class_quant_lib_1_1_heston_process" kindref="compound">HestonProcess</ref></defval>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_european_heston_engine_1a7ea409287baf335d8befce907047743e" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; P &gt;</type>
        <definition>ext::shared_ptr&lt;P&gt; QuantLib::MakeMCEuropeanHestonEngine&lt; RNG, S, P &gt;::process_</definition>
        <argsstring></argsstring>
        <name>process_</name>
        <qualifiedname>QuantLib::MakeMCEuropeanHestonEngine::process_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" line="76" column="25" bodyfile="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_european_heston_engine_1a97cc613628762cb219f330f5fbb95694" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::MakeMCEuropeanHestonEngine&lt; RNG, S, P &gt;::antithetic_</definition>
        <argsstring></argsstring>
        <name>antithetic_</name>
        <qualifiedname>QuantLib::MakeMCEuropeanHestonEngine::antithetic_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" line="77" column="14" bodyfile="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_european_heston_engine_1ab7f036704e928626d3a09250984dd519" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCEuropeanHestonEngine&lt; RNG, S, P &gt;::steps_</definition>
        <argsstring></argsstring>
        <name>steps_</name>
        <qualifiedname>QuantLib::MakeMCEuropeanHestonEngine::steps_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" line="78" column="14" bodyfile="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_european_heston_engine_1a5dd2c0ae82fc445a13863879927d1874" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCEuropeanHestonEngine&lt; RNG, S, P &gt;::stepsPerYear_</definition>
        <argsstring></argsstring>
        <name>stepsPerYear_</name>
        <qualifiedname>QuantLib::MakeMCEuropeanHestonEngine::stepsPerYear_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" line="78" column="21" bodyfile="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_european_heston_engine_1a42eb385252a06c7b326dd767d56a088a" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCEuropeanHestonEngine&lt; RNG, S, P &gt;::samples_</definition>
        <argsstring></argsstring>
        <name>samples_</name>
        <qualifiedname>QuantLib::MakeMCEuropeanHestonEngine::samples_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" line="78" column="35" bodyfile="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_european_heston_engine_1ad113d1eb69a8b3de7e2dd9d80cfc8984" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCEuropeanHestonEngine&lt; RNG, S, P &gt;::maxSamples_</definition>
        <argsstring></argsstring>
        <name>maxSamples_</name>
        <qualifiedname>QuantLib::MakeMCEuropeanHestonEngine::maxSamples_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" line="78" column="44" bodyfile="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_european_heston_engine_1a72507b99c1f69a0fc7a604d71ee6f591" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::MakeMCEuropeanHestonEngine&lt; RNG, S, P &gt;::tolerance_</definition>
        <argsstring></argsstring>
        <name>tolerance_</name>
        <qualifiedname>QuantLib::MakeMCEuropeanHestonEngine::tolerance_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" line="79" column="14" bodyfile="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_european_heston_engine_1a0629b7effa60631f9b87a8f0be7d1ae0" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
        <definition>BigNatural QuantLib::MakeMCEuropeanHestonEngine&lt; RNG, S, P &gt;::seed_</definition>
        <argsstring></argsstring>
        <name>seed_</name>
        <qualifiedname>QuantLib::MakeMCEuropeanHestonEngine::seed_</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" line="80" column="20" bodyfile="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_european_heston_engine_1a10359c4ea9af46f49abdb012cbb4041c" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::MakeMCEuropeanHestonEngine&lt; RNG, S, P &gt;::MakeMCEuropeanHestonEngine</definition>
        <argsstring>(ext::shared_ptr&lt; P &gt;)</argsstring>
        <name>MakeMCEuropeanHestonEngine</name>
        <qualifiedname>QuantLib::MakeMCEuropeanHestonEngine::MakeMCEuropeanHestonEngine</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; P &gt;</type>
          <defname>process</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" line="64" column="18" bodyfile="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" bodystart="136" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_european_heston_engine_1aafdadcb363c4bb6ff61bf44e7d7ad08f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_european_heston_engine" kindref="compound">MakeMCEuropeanHestonEngine</ref> &amp;</type>
        <definition>MakeMCEuropeanHestonEngine&lt; RNG, S, P &gt; &amp; QuantLib::MakeMCEuropeanHestonEngine&lt; RNG, S, P &gt;::withSteps</definition>
        <argsstring>(Size steps)</argsstring>
        <name>withSteps</name>
        <qualifiedname>QuantLib::MakeMCEuropeanHestonEngine::withSteps</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" line="66" column="36" bodyfile="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" bodystart="143" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_european_heston_engine_1abe7c0d3b9d4504ea1282da0ececd1523" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_european_heston_engine" kindref="compound">MakeMCEuropeanHestonEngine</ref> &amp;</type>
        <definition>MakeMCEuropeanHestonEngine&lt; RNG, S, P &gt; &amp; QuantLib::MakeMCEuropeanHestonEngine&lt; RNG, S, P &gt;::withStepsPerYear</definition>
        <argsstring>(Size steps)</argsstring>
        <name>withStepsPerYear</name>
        <qualifiedname>QuantLib::MakeMCEuropeanHestonEngine::withStepsPerYear</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" line="67" column="36" bodyfile="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" bodystart="152" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_european_heston_engine_1a3497ee26ddd0d09d0d39637ecbfe8c96" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_european_heston_engine" kindref="compound">MakeMCEuropeanHestonEngine</ref> &amp;</type>
        <definition>MakeMCEuropeanHestonEngine&lt; RNG, S, P &gt; &amp; QuantLib::MakeMCEuropeanHestonEngine&lt; RNG, S, P &gt;::withSamples</definition>
        <argsstring>(Size samples)</argsstring>
        <name>withSamples</name>
        <qualifiedname>QuantLib::MakeMCEuropeanHestonEngine::withSamples</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" line="68" column="36" bodyfile="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" bodystart="161" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_european_heston_engine_1a8412ae64930011be09a3306ae0eaf77a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_european_heston_engine" kindref="compound">MakeMCEuropeanHestonEngine</ref> &amp;</type>
        <definition>MakeMCEuropeanHestonEngine&lt; RNG, S, P &gt; &amp; QuantLib::MakeMCEuropeanHestonEngine&lt; RNG, S, P &gt;::withAbsoluteTolerance</definition>
        <argsstring>(Real tolerance)</argsstring>
        <name>withAbsoluteTolerance</name>
        <qualifiedname>QuantLib::MakeMCEuropeanHestonEngine::withAbsoluteTolerance</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>tolerance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" line="69" column="36" bodyfile="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" bodystart="170" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_european_heston_engine_1a998e652b00c36131d9de86b76bee1c49" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_european_heston_engine" kindref="compound">MakeMCEuropeanHestonEngine</ref> &amp;</type>
        <definition>MakeMCEuropeanHestonEngine&lt; RNG, S, P &gt; &amp; QuantLib::MakeMCEuropeanHestonEngine&lt; RNG, S, P &gt;::withMaxSamples</definition>
        <argsstring>(Size samples)</argsstring>
        <name>withMaxSamples</name>
        <qualifiedname>QuantLib::MakeMCEuropeanHestonEngine::withMaxSamples</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" line="70" column="36" bodyfile="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" bodystart="182" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_european_heston_engine_1a1e97519ec10d9556a8fb3a51b3a5e2d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_european_heston_engine" kindref="compound">MakeMCEuropeanHestonEngine</ref> &amp;</type>
        <definition>MakeMCEuropeanHestonEngine&lt; RNG, S, P &gt; &amp; QuantLib::MakeMCEuropeanHestonEngine&lt; RNG, S, P &gt;::withSeed</definition>
        <argsstring>(BigNatural seed)</argsstring>
        <name>withSeed</name>
        <qualifiedname>QuantLib::MakeMCEuropeanHestonEngine::withSeed</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" line="71" column="36" bodyfile="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" bodystart="189" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_european_heston_engine_1ab4be1c6bfe6b5f685d6ac4d0a876d02f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_european_heston_engine" kindref="compound">MakeMCEuropeanHestonEngine</ref> &amp;</type>
        <definition>MakeMCEuropeanHestonEngine&lt; RNG, S, P &gt; &amp; QuantLib::MakeMCEuropeanHestonEngine&lt; RNG, S, P &gt;::withAntitheticVariate</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>withAntitheticVariate</name>
        <qualifiedname>QuantLib::MakeMCEuropeanHestonEngine::withAntitheticVariate</qualifiedname>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" line="72" column="36" bodyfile="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" bodystart="196" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_european_heston_engine_1a959ad1f141937148d63433da63e69bf7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::MakeMCEuropeanHestonEngine&lt; RNG, S, P &gt;::operator ext::shared_ptr&lt; PricingEngine &gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator ext::shared_ptr&lt; PricingEngine &gt;</name>
        <qualifiedname>QuantLib::MakeMCEuropeanHestonEngine::shared_ptr&lt; PricingEngine &gt;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" line="74" column="9" bodyfile="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" bodystart="204" bodyend="215"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Monte Carlo Heston European engine factory. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" line="62" column="5" bodyfile="ql/pricingengines/vanilla/mceuropeanhestonengine.hpp" bodystart="62" bodyend="81"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_make_m_c_european_heston_engine_1a97cc613628762cb219f330f5fbb95694" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanHestonEngine</scope><name>antithetic_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_european_heston_engine_1a10359c4ea9af46f49abdb012cbb4041c" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanHestonEngine</scope><name>MakeMCEuropeanHestonEngine</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_european_heston_engine_1ad113d1eb69a8b3de7e2dd9d80cfc8984" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanHestonEngine</scope><name>maxSamples_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_european_heston_engine_1a959ad1f141937148d63433da63e69bf7" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanHestonEngine</scope><name>operator ext::shared_ptr&lt; PricingEngine &gt;</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_european_heston_engine_1a7ea409287baf335d8befce907047743e" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanHestonEngine</scope><name>process_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_european_heston_engine_1a42eb385252a06c7b326dd767d56a088a" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanHestonEngine</scope><name>samples_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_european_heston_engine_1a0629b7effa60631f9b87a8f0be7d1ae0" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanHestonEngine</scope><name>seed_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_european_heston_engine_1ab7f036704e928626d3a09250984dd519" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanHestonEngine</scope><name>steps_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_european_heston_engine_1a5dd2c0ae82fc445a13863879927d1874" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanHestonEngine</scope><name>stepsPerYear_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_european_heston_engine_1a72507b99c1f69a0fc7a604d71ee6f591" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanHestonEngine</scope><name>tolerance_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_european_heston_engine_1a8412ae64930011be09a3306ae0eaf77a" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanHestonEngine</scope><name>withAbsoluteTolerance</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_european_heston_engine_1ab4be1c6bfe6b5f685d6ac4d0a876d02f" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanHestonEngine</scope><name>withAntitheticVariate</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_european_heston_engine_1a998e652b00c36131d9de86b76bee1c49" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanHestonEngine</scope><name>withMaxSamples</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_european_heston_engine_1a3497ee26ddd0d09d0d39637ecbfe8c96" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanHestonEngine</scope><name>withSamples</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_european_heston_engine_1a1e97519ec10d9556a8fb3a51b3a5e2d9" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanHestonEngine</scope><name>withSeed</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_european_heston_engine_1aafdadcb363c4bb6ff61bf44e7d7ad08f" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanHestonEngine</scope><name>withSteps</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_european_heston_engine_1abe7c0d3b9d4504ea1282da0ececd1523" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCEuropeanHestonEngine</scope><name>withStepsPerYear</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_trigeorgis" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::Trigeorgis</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_equal_jumps_binomial_tree" prot="public" virt="non-virtual">QuantLib::EqualJumpsBinomialTree&lt; Trigeorgis &gt;</basecompoundref>
    <includes refid="binomialtree_8hpp" local="no">binomialtree.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_trigeorgis_1a4fa3e72747a3c66fef01f8d184f024a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Trigeorgis::Trigeorgis</definition>
        <argsstring>(const ext::shared_ptr&lt; StochasticProcess1D &gt; &amp;, Time end, Size steps, Real strike)</argsstring>
        <name>Trigeorgis</name>
        <qualifiedname>QuantLib::Trigeorgis::Trigeorgis</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_stochastic_process1_d" kindref="compound">StochasticProcess1D</ref> &gt; &amp;</type>
          <defname>process</defname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>steps</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>strike</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/binomialtree.hpp" line="144" column="9" bodyfile="ql/methods/lattices/binomialtree.cpp" bodystart="62" bodyend="74"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Trigeorgis (additive equal jumps) binomial tree </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>QuantLib::BinomialTree&lt; Trigeorgis &gt;</label>
        <link refid="class_quant_lib_1_1_binomial_tree"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::CuriouslyRecurringTemplate&lt; Trigeorgis &gt;</label>
        <link refid="class_quant_lib_1_1_curiously_recurring_template"/>
      </node>
      <node id="2">
        <label>QuantLib::EqualJumpsBinomialTree&lt; Trigeorgis &gt;</label>
        <link refid="class_quant_lib_1_1_equal_jumps_binomial_tree"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Tree&lt; Trigeorgis &gt;</label>
        <link refid="class_quant_lib_1_1_tree"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::Trigeorgis</label>
        <link refid="class_quant_lib_1_1_trigeorgis"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>QuantLib::BinomialTree&lt; Trigeorgis &gt;</label>
        <link refid="class_quant_lib_1_1_binomial_tree"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::CuriouslyRecurringTemplate&lt; Trigeorgis &gt;</label>
        <link refid="class_quant_lib_1_1_curiously_recurring_template"/>
      </node>
      <node id="2">
        <label>QuantLib::EqualJumpsBinomialTree&lt; Trigeorgis &gt;</label>
        <link refid="class_quant_lib_1_1_equal_jumps_binomial_tree"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Tree&lt; Trigeorgis &gt;</label>
        <link refid="class_quant_lib_1_1_tree"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::Trigeorgis</label>
        <link refid="class_quant_lib_1_1_trigeorgis"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/methods/lattices/binomialtree.hpp" line="142" column="5" bodyfile="ql/methods/lattices/binomialtree.hpp" bodystart="142" bodyend="148"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_binomial_tree_1a76e8c8f9a83579b158add6aef4505c3c" prot="public" virt="non-virtual"><scope>QuantLib::Trigeorgis</scope><name>BinomialTree</name></member>
      <member refid="class_quant_lib_1_1_binomial_tree_1abac51ac321edcf6705b9fd62e5d4f6e7" prot="public" virt="non-virtual"><scope>QuantLib::Trigeorgis</scope><name>Branches</name></member>
      <member refid="class_quant_lib_1_1_binomial_tree_1abac51ac321edcf6705b9fd62e5d4f6e7ae76994f55191e538deb504d5fef1c481" prot="public" virt="non-virtual"><scope>QuantLib::Trigeorgis</scope><name>branches</name></member>
      <member refid="class_quant_lib_1_1_tree_1ad67606506e0773cb697aa0826dd953b2" prot="public" virt="non-virtual"><scope>QuantLib::Trigeorgis</scope><name>columns</name></member>
      <member refid="class_quant_lib_1_1_curiously_recurring_template_1ac51e69d7c3e616686e8777fcabebf954" prot="protected" virt="non-virtual"><scope>QuantLib::Trigeorgis</scope><name>CuriouslyRecurringTemplate</name></member>
      <member refid="class_quant_lib_1_1_binomial_tree_1ae8d564f5802d362d6d9f9e972b642945" prot="public" virt="non-virtual"><scope>QuantLib::Trigeorgis</scope><name>descendant</name></member>
      <member refid="class_quant_lib_1_1_binomial_tree_1a848c46504adda17faed1042b2210284e" prot="protected" virt="non-virtual"><scope>QuantLib::Trigeorgis</scope><name>driftPerStep_</name></member>
      <member refid="class_quant_lib_1_1_binomial_tree_1abbad6eed306ff42cfa5a315a8024081b" prot="protected" virt="non-virtual"><scope>QuantLib::Trigeorgis</scope><name>dt_</name></member>
      <member refid="class_quant_lib_1_1_equal_jumps_binomial_tree_1ace43264bce8c80294a0353d03b1b4211" prot="protected" virt="non-virtual"><scope>QuantLib::Trigeorgis</scope><name>dx_</name></member>
      <member refid="class_quant_lib_1_1_equal_jumps_binomial_tree_1aa129a17e9fbfd1ac8aded356e2afef57" prot="public" virt="non-virtual"><scope>QuantLib::Trigeorgis</scope><name>EqualJumpsBinomialTree</name></member>
      <member refid="class_quant_lib_1_1_curiously_recurring_template_1a72c11590c74c9d0085fd43f17cdfe96e" prot="protected" virt="non-virtual"><scope>QuantLib::Trigeorgis</scope><name>impl</name></member>
      <member refid="class_quant_lib_1_1_curiously_recurring_template_1a9efaa4c38bfca1e148ed265a809ed220" prot="protected" virt="non-virtual"><scope>QuantLib::Trigeorgis</scope><name>impl</name></member>
      <member refid="class_quant_lib_1_1_equal_jumps_binomial_tree_1af3557b484885b2915171549cfe4d3eb9" prot="protected" virt="non-virtual"><scope>QuantLib::Trigeorgis</scope><name>pd_</name></member>
      <member refid="class_quant_lib_1_1_equal_jumps_binomial_tree_1a14f06585b270e814f5ce9bbb4a98de82" prot="public" virt="non-virtual"><scope>QuantLib::Trigeorgis</scope><name>probability</name></member>
      <member refid="class_quant_lib_1_1_equal_jumps_binomial_tree_1ab70e99b45c55ffafdc1c0389ea583ed7" prot="protected" virt="non-virtual"><scope>QuantLib::Trigeorgis</scope><name>pu_</name></member>
      <member refid="class_quant_lib_1_1_binomial_tree_1abb0476c508dbab415d267d36b0522383" prot="public" virt="non-virtual"><scope>QuantLib::Trigeorgis</scope><name>size</name></member>
      <member refid="class_quant_lib_1_1_tree_1a50c9a44fb22df3c7d5916a8ff80d79b9" prot="public" virt="non-virtual"><scope>QuantLib::Trigeorgis</scope><name>Tree</name></member>
      <member refid="class_quant_lib_1_1_trigeorgis_1a4fa3e72747a3c66fef01f8d184f024a4" prot="public" virt="non-virtual"><scope>QuantLib::Trigeorgis</scope><name>Trigeorgis</name></member>
      <member refid="class_quant_lib_1_1_equal_jumps_binomial_tree_1a86be51b5ebdf7a55a523bfbca516eb2f" prot="public" virt="non-virtual"><scope>QuantLib::Trigeorgis</scope><name>underlying</name></member>
      <member refid="class_quant_lib_1_1_binomial_tree_1a664b6476786a374e5f1805240528feda" prot="protected" virt="non-virtual"><scope>QuantLib::Trigeorgis</scope><name>x0_</name></member>
      <member refid="class_quant_lib_1_1_curiously_recurring_template_1ae22b4353d3c05a5aad5f5b8769392b05" prot="protected" virt="non-virtual"><scope>QuantLib::Trigeorgis</scope><name>~CuriouslyRecurringTemplate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_hull_white_forward_process" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::HullWhiteForwardProcess</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_forward_measure_process1_d" prot="public" virt="non-virtual">QuantLib::ForwardMeasureProcess1D</basecompoundref>
    <includes refid="hullwhiteprocess_8hpp" local="no">hullwhiteprocess.hpp</includes>
    <sectiondef kind="user-defined">
      <header>StochasticProcess1D interface</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_hull_white_forward_process_1a3f4cf043c5af4eef8f61764bd7ca6ce0" prot="protected" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_ornstein_uhlenbeck_process" kindref="compound">QuantLib::OrnsteinUhlenbeckProcess</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;QuantLib::OrnsteinUhlenbeckProcess&gt; QuantLib::HullWhiteForwardProcess::process_</definition>
        <argsstring></argsstring>
        <name>process_</name>
        <qualifiedname>QuantLib::HullWhiteForwardProcess::process_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hullwhiteprocess.hpp" line="83" column="25" bodyfile="ql/processes/hullwhiteprocess.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_hull_white_forward_process_1aa3dfa905d256c9006d7d646b7044cad7" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
        <definition>Handle&lt;YieldTermStructure&gt; QuantLib::HullWhiteForwardProcess::h_</definition>
        <argsstring></argsstring>
        <name>h_</name>
        <qualifiedname>QuantLib::HullWhiteForwardProcess::h_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hullwhiteprocess.hpp" line="84" column="16" bodyfile="ql/processes/hullwhiteprocess.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_hull_white_forward_process_1abb6626098d559f2fcc2186ae1b819aac" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::HullWhiteForwardProcess::a_</definition>
        <argsstring></argsstring>
        <name>a_</name>
        <qualifiedname>QuantLib::HullWhiteForwardProcess::a_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hullwhiteprocess.hpp" line="85" column="14" bodyfile="ql/processes/hullwhiteprocess.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_hull_white_forward_process_1a38ef385020eddf8e779b1fd58243fb2d" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::HullWhiteForwardProcess::sigma_</definition>
        <argsstring></argsstring>
        <name>sigma_</name>
        <qualifiedname>QuantLib::HullWhiteForwardProcess::sigma_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hullwhiteprocess.hpp" line="85" column="17" bodyfile="ql/processes/hullwhiteprocess.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_hull_white_forward_process_1ace9da6fcb6da084f0b8fbb1c99bef611" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::HullWhiteForwardProcess::x0</definition>
        <argsstring>() const override</argsstring>
        <name>x0</name>
        <qualifiedname>QuantLib::HullWhiteForwardProcess::x0</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process1_d_1a4a0eee3b5c6592950bd6635177f76113">x0</reimplements>
        <briefdescription>
<para>returns the initial value of the state variable </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hullwhiteprocess.hpp" line="68" column="14" bodyfile="ql/processes/hullwhiteprocess.cpp" bodystart="90" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_hull_white_forward_process_1a68a054f4557e68c53c9a0d2a36109436" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::HullWhiteForwardProcess::drift</definition>
        <argsstring>(Time t, Real x) const override</argsstring>
        <name>drift</name>
        <qualifiedname>QuantLib::HullWhiteForwardProcess::drift</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process1_d_1ad27eced4c2abbe7d8da5951969158e2d">drift</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>returns the drift part of the equation, i.e. <formula id="478">$ \mu(t, x_t) $</formula> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hullwhiteprocess.hpp" line="69" column="14" bodyfile="ql/processes/hullwhiteprocess.cpp" bodystart="94" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_hull_white_forward_process_1a0987b3bc80e7735e5533e83579a37bdf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::HullWhiteForwardProcess::diffusion</definition>
        <argsstring>(Time t, Real x) const override</argsstring>
        <name>diffusion</name>
        <qualifiedname>QuantLib::HullWhiteForwardProcess::diffusion</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process1_d_1a66bde34ae0158d64169e39655fdfcfc0">diffusion</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>returns the diffusion part of the equation, i.e. <formula id="479">$ \sigma(t, x_t) $</formula> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hullwhiteprocess.hpp" line="70" column="14" bodyfile="ql/processes/hullwhiteprocess.cpp" bodystart="104" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_hull_white_forward_process_1a828d17238e20decef4f249fa0f0734f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::HullWhiteForwardProcess::expectation</definition>
        <argsstring>(Time t0, Real x0, Time dt) const override</argsstring>
        <name>expectation</name>
        <qualifiedname>QuantLib::HullWhiteForwardProcess::expectation</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process1_d_1a4543779731a4ce76e9dd85f3c81752e7">expectation</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the expectation <formula id="480">$ E(x_{t_0 + \Delta t} | x_{t_0} = x_0) $</formula> of the process after a time interval <formula id="471">$ \Delta t $</formula> according to the given discretization. This method can be overridden in derived classes which want to hard-code a particular discretization. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hullwhiteprocess.hpp" line="71" column="14" bodyfile="ql/processes/hullwhiteprocess.cpp" bodystart="108" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_hull_white_forward_process_1a9fbce1a75b1d53a2e989f1d3a195c62e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::HullWhiteForwardProcess::stdDeviation</definition>
        <argsstring>(Time t0, Real x0, Time dt) const override</argsstring>
        <name>stdDeviation</name>
        <qualifiedname>QuantLib::HullWhiteForwardProcess::stdDeviation</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process1_d_1a3290404acdbfcbbd6bbf8b035862e803">stdDeviation</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the standard deviation <formula id="481">$ S(x_{t_0 + \Delta t} | x_{t_0} = x_0) $</formula> of the process after a time interval <formula id="471">$ \Delta t $</formula> according to the given discretization. This method can be overridden in derived classes which want to hard-code a particular discretization. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hullwhiteprocess.hpp" line="72" column="14" bodyfile="ql/processes/hullwhiteprocess.cpp" bodystart="115" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_hull_white_forward_process_1a7a87a34f6339dc9650dafd239117bff7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::HullWhiteForwardProcess::variance</definition>
        <argsstring>(Time t0, Real x0, Time dt) const override</argsstring>
        <name>variance</name>
        <qualifiedname>QuantLib::HullWhiteForwardProcess::variance</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process1_d_1afec760c46c7f53d98cea9befd7087508">variance</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the variance <formula id="482">$ V(x_{t_0 + \Delta t} | x_{t_0} = x_0) $</formula> of the process after a time interval <formula id="471">$ \Delta t $</formula> according to the given discretization. This method can be overridden in derived classes which want to hard-code a particular discretization. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hullwhiteprocess.hpp" line="73" column="14" bodyfile="ql/processes/hullwhiteprocess.cpp" bodystart="120" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_hull_white_forward_process_1a432cbe42fce6b92a5b770a1d71811659" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::HullWhiteForwardProcess::a</definition>
        <argsstring>() const</argsstring>
        <name>a</name>
        <qualifiedname>QuantLib::HullWhiteForwardProcess::a</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hullwhiteprocess.hpp" line="76" column="14" bodyfile="ql/processes/hullwhiteprocess.cpp" bodystart="154" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_hull_white_forward_process_1ae4c4e2c4f41420de9172e14647c68075" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::HullWhiteForwardProcess::sigma</definition>
        <argsstring>() const</argsstring>
        <name>sigma</name>
        <qualifiedname>QuantLib::HullWhiteForwardProcess::sigma</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hullwhiteprocess.hpp" line="77" column="14" bodyfile="ql/processes/hullwhiteprocess.cpp" bodystart="158" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_hull_white_forward_process_1afca14e3f392b2ddd7a2e46b1c31c8650" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::HullWhiteForwardProcess::alpha</definition>
        <argsstring>(Time t) const</argsstring>
        <name>alpha</name>
        <qualifiedname>QuantLib::HullWhiteForwardProcess::alpha</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hullwhiteprocess.hpp" line="78" column="14" bodyfile="ql/processes/hullwhiteprocess.cpp" bodystart="124" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_hull_white_forward_process_1ab71ac79dda4eba3886a14c2942f059b1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::HullWhiteForwardProcess::M_T</definition>
        <argsstring>(Real s, Real t, Real T) const</argsstring>
        <name>M_T</name>
        <qualifiedname>QuantLib::HullWhiteForwardProcess::M_T</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>T</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hullwhiteprocess.hpp" line="79" column="14" bodyfile="ql/processes/hullwhiteprocess.cpp" bodystart="134" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_hull_white_forward_process_1a92860782b60fa818e5ed28513874cf7f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::HullWhiteForwardProcess::B</definition>
        <argsstring>(Time t, Time T) const</argsstring>
        <name>B</name>
        <qualifiedname>QuantLib::HullWhiteForwardProcess::B</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>T</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hullwhiteprocess.hpp" line="80" column="14" bodyfile="ql/processes/hullwhiteprocess.cpp" bodystart="148" bodyend="152"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_hull_white_forward_process_1ab6b7e14f70314d40ca9a6b4a57d70151" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::HullWhiteForwardProcess::HullWhiteForwardProcess</definition>
        <argsstring>(const Handle&lt; YieldTermStructure &gt; &amp;h, Real a, Real sigma)</argsstring>
        <name>HullWhiteForwardProcess</name>
        <qualifiedname>QuantLib::HullWhiteForwardProcess::HullWhiteForwardProcess</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>h</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>sigma</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/hullwhiteprocess.hpp" line="63" column="9" bodyfile="ql/processes/hullwhiteprocess.cpp" bodystart="82" bodyend="88"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Forward Hull-White stochastic process </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::ForwardMeasureProcess1D</label>
        <link refid="class_quant_lib_1_1_forward_measure_process1_d"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::HullWhiteForwardProcess</label>
        <link refid="class_quant_lib_1_1_hull_white_forward_process"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="4">
        <label>QuantLib::StochasticProcess</label>
        <link refid="class_quant_lib_1_1_stochastic_process"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::StochasticProcess1D</label>
        <link refid="class_quant_lib_1_1_stochastic_process1_d"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::ForwardMeasureProcess1D</label>
        <link refid="class_quant_lib_1_1_forward_measure_process1_d"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::Handle&lt; QuantLib::YieldTermStructure &gt;</label>
        <link refid="class_quant_lib_1_1_handle"/>
      </node>
      <node id="1">
        <label>QuantLib::HullWhiteForwardProcess</label>
        <link refid="class_quant_lib_1_1_hull_white_forward_process"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>h_</edgelabel>
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="4">
        <label>QuantLib::StochasticProcess</label>
        <link refid="class_quant_lib_1_1_stochastic_process"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::StochasticProcess1D</label>
        <link refid="class_quant_lib_1_1_stochastic_process1_d"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/processes/hullwhiteprocess.hpp" line="61" column="5" bodyfile="ql/processes/hullwhiteprocess.hpp" bodystart="61" bodyend="86"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_hull_white_forward_process_1a432cbe42fce6b92a5b770a1d71811659" prot="public" virt="non-virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>a</name></member>
      <member refid="class_quant_lib_1_1_hull_white_forward_process_1abb6626098d559f2fcc2186ae1b819aac" prot="protected" virt="non-virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>a_</name></member>
      <member refid="class_quant_lib_1_1_hull_white_forward_process_1afca14e3f392b2ddd7a2e46b1c31c8650" prot="public" virt="non-virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>alpha</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process1_d_1a303b2e3c9243b674ac1f145c304811b7" prot="public" virt="virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>apply</name></member>
      <member refid="class_quant_lib_1_1_hull_white_forward_process_1a92860782b60fa818e5ed28513874cf7f" prot="public" virt="non-virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>B</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_hull_white_forward_process_1a0987b3bc80e7735e5533e83579a37bdf" prot="public" virt="virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>diffusion</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process1_d_1aff0e6c615f076baf4393abe860794583" prot="protected" virt="non-virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>discretization_</name></member>
      <member refid="class_quant_lib_1_1_hull_white_forward_process_1a68a054f4557e68c53c9a0d2a36109436" prot="public" virt="virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>drift</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process1_d_1a39605ea27c7ef3a7feafed4fafcc1f90" prot="public" virt="virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>evolve</name></member>
      <member refid="class_quant_lib_1_1_hull_white_forward_process_1a828d17238e20decef4f249fa0f0734f5" prot="public" virt="virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>expectation</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a0346d38598fb9a5a1cd58024f05081aa" prot="public" virt="virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>factors</name></member>
      <member refid="class_quant_lib_1_1_forward_measure_process1_d_1af979d0c5450a0f246b0a4f25de461eca" prot="protected" virt="non-virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>ForwardMeasureProcess1D</name></member>
      <member refid="class_quant_lib_1_1_forward_measure_process1_d_1a94185a3644676074e138d2fdd37d6610" prot="protected" virt="non-virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>ForwardMeasureProcess1D</name></member>
      <member refid="class_quant_lib_1_1_forward_measure_process1_d_1a4ec0ebb27c1d1f1b008e853f4658587f" prot="protected" virt="non-virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>ForwardMeasureProcess1D</name></member>
      <member refid="class_quant_lib_1_1_forward_measure_process1_d_1a6d7f571f0a20a65ec90e47050912af5b" prot="public" virt="non-virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>getForwardMeasureTime</name></member>
      <member refid="class_quant_lib_1_1_hull_white_forward_process_1aa3dfa905d256c9006d7d646b7044cad7" prot="protected" virt="non-virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>h_</name></member>
      <member refid="class_quant_lib_1_1_hull_white_forward_process_1ab6b7e14f70314d40ca9a6b4a57d70151" prot="public" virt="non-virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>HullWhiteForwardProcess</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::HullWhiteForwardProcess</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_hull_white_forward_process_1ab71ac79dda4eba3886a14c2942f059b1" prot="public" virt="non-virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>M_T</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::HullWhiteForwardProcess</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::HullWhiteForwardProcess</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::HullWhiteForwardProcess</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::HullWhiteForwardProcess</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::HullWhiteForwardProcess</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_hull_white_forward_process_1a3f4cf043c5af4eef8f61764bd7ca6ce0" prot="protected" virt="non-virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>process_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_forward_measure_process1_d_1a288020a065ed1e78edeabf5f1680ae56" prot="public" virt="virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>setForwardMeasureTime</name></member>
      <member refid="class_quant_lib_1_1_hull_white_forward_process_1ae4c4e2c4f41420de9172e14647c68075" prot="public" virt="non-virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>sigma</name></member>
      <member refid="class_quant_lib_1_1_hull_white_forward_process_1a38ef385020eddf8e779b1fd58243fb2d" prot="protected" virt="non-virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>sigma_</name></member>
      <member refid="class_quant_lib_1_1_hull_white_forward_process_1a9fbce1a75b1d53a2e989f1d3a195c62e" prot="public" virt="virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>stdDeviation</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a2dd24b794a6b320bc60ba9e1a87bf48e" prot="protected" virt="non-virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>StochasticProcess</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a957ee9776d6048835106ea29ea44927f" prot="protected" virt="non-virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>StochasticProcess</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process1_d_1a8fd2dc83f956da3dd008242ee5a5c926" prot="protected" virt="non-virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>StochasticProcess1D</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process1_d_1a0971f058bea9a93d2ced17c685576686" prot="protected" virt="non-virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>StochasticProcess1D</name></member>
      <member refid="class_quant_lib_1_1_forward_measure_process1_d_1a05fc6ae81fca7bb07b2a735516c302a2" prot="protected" virt="non-virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>T_</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a39c5f08a3779665f9185a558d2b8418d" prot="public" virt="virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>time</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a0f22628658fd2dc702c13c354ef3244e" prot="public" virt="virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_hull_white_forward_process_1a7a87a34f6339dc9650dafd239117bff7" prot="public" virt="virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>variance</name></member>
      <member refid="class_quant_lib_1_1_hull_white_forward_process_1ace9da6fcb6da084f0b8fbb1c99bef611" prot="public" virt="virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>x0</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1a0e2b6a14e675db5abd0ab8965ff7b2c3" prot="public" virt="non-virtual"><scope>QuantLib::HullWhiteForwardProcess</scope><name>~StochasticProcess</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_discretized_option" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::DiscretizedOption</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_discretized_asset" prot="public" virt="non-virtual">QuantLib::DiscretizedAsset</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_discretized_swaption" prot="public" virt="non-virtual">QuantLib::DiscretizedSwaption</derivedcompoundref>
    <includes refid="discretizedasset_8hpp" local="no">discretizedasset.hpp</includes>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_discretized_option_1a09bf6b46486112672ca1be7983635562" prot="protected" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_discretized_asset" kindref="compound">DiscretizedAsset</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;DiscretizedAsset&gt; QuantLib::DiscretizedOption::underlying_</definition>
        <argsstring></argsstring>
        <name>underlying_</name>
        <qualifiedname>QuantLib::DiscretizedOption::underlying_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/discretizedasset.hpp" line="173" column="25" bodyfile="ql/discretizedasset.hpp" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_discretized_option_1a2061fad5e5b67b985e4221093f1339e2" prot="protected" static="no" mutable="no">
        <type>Exercise::Type</type>
        <definition>Exercise::Type QuantLib::DiscretizedOption::exerciseType_</definition>
        <argsstring></argsstring>
        <name>exerciseType_</name>
        <qualifiedname>QuantLib::DiscretizedOption::exerciseType_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/discretizedasset.hpp" line="174" column="24" bodyfile="ql/discretizedasset.hpp" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_discretized_option_1a96c3b181f7f08910a18d1be2c857af71" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;</type>
        <definition>std::vector&lt;Time&gt; QuantLib::DiscretizedOption::exerciseTimes_</definition>
        <argsstring></argsstring>
        <name>exerciseTimes_</name>
        <qualifiedname>QuantLib::DiscretizedOption::exerciseTimes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/discretizedasset.hpp" line="175" column="21" bodyfile="ql/discretizedasset.hpp" bodystart="175" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_option_1a6c81eb19eeab5661a3ec57d94f742cad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::DiscretizedOption::DiscretizedOption</definition>
        <argsstring>(ext::shared_ptr&lt; DiscretizedAsset &gt; underlying, Exercise::Type exerciseType, std::vector&lt; Time &gt; exerciseTimes)</argsstring>
        <name>DiscretizedOption</name>
        <qualifiedname>QuantLib::DiscretizedOption::DiscretizedOption</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_discretized_asset" kindref="compound">DiscretizedAsset</ref> &gt;</type>
          <declname>underlying</declname>
        </param>
        <param>
          <type>Exercise::Type</type>
          <declname>exerciseType</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;</type>
          <declname>exerciseTimes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/discretizedasset.hpp" line="162" column="9" bodyfile="ql/discretizedasset.hpp" bodystart="162" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_option_1ae5c07005ba73043492e1c9443d84c14e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::DiscretizedOption::reset</definition>
        <argsstring>(Size size) override</argsstring>
        <name>reset</name>
        <qualifiedname>QuantLib::DiscretizedOption::reset</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_discretized_asset_1a564cea41e833b0f86e4bbbfca26274bc">reset</reimplements>
        <reimplementedby refid="class_quant_lib_1_1_discretized_swaption_1af6c2a45a15e44b2a7fed1d473d39e911">reset</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method should initialize the asset values to an <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> of the given size and with values depending on the particular asset. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/discretizedasset.hpp" line="167" column="14" bodyfile="ql/discretizedasset.hpp" bodystart="221" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_option_1a9eca7fbea61dd9099ea7ff9c99111bf0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;</type>
        <definition>std::vector&lt; Time &gt; QuantLib::DiscretizedOption::mandatoryTimes</definition>
        <argsstring>() const override</argsstring>
        <name>mandatoryTimes</name>
        <qualifiedname>QuantLib::DiscretizedOption::mandatoryTimes</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_discretized_asset_1a387fb8413f6892687f001d0091fcc2ce">mandatoryTimes</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the times at which the numerical method should stop while rolling back the asset. Typical examples include payment times, exercise times and such.</para>
<para><simplesect kind="note"><para>The returned values are not guaranteed to be sorted. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/discretizedasset.hpp" line="168" column="21" bodyfile="ql/discretizedasset.hpp" bodystart="229" bodyend="237"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_option_1a029f5811e35280143586dd0bbcbefd02" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::DiscretizedOption::postAdjustValuesImpl</definition>
        <argsstring>() override</argsstring>
        <name>postAdjustValuesImpl</name>
        <qualifiedname>QuantLib::DiscretizedOption::postAdjustValuesImpl</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_discretized_asset_1a977eeb69773ccb7e8dc16fc7d61f678c">postAdjustValuesImpl</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method performs the actual post-adjustment </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/discretizedasset.hpp" line="171" column="14" bodyfile="ql/discretizedasset.cpp" bodystart="25" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_option_1ae5477629b96683f06ae6a6346090fae9" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::DiscretizedOption::applyExerciseCondition</definition>
        <argsstring>()</argsstring>
        <name>applyExerciseCondition</name>
        <qualifiedname>QuantLib::DiscretizedOption::applyExerciseCondition</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/discretizedasset.hpp" line="172" column="14" bodyfile="ql/discretizedasset.hpp" bodystart="239" bodyend="242"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Discretized option on a given asset. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="warning"><para>it is advised that derived classes take care of creating and initializing themselves an instance of the underlying. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::DiscretizedAsset</label>
        <link refid="class_quant_lib_1_1_discretized_asset"/>
      </node>
      <node id="1">
        <label>QuantLib::DiscretizedOption</label>
        <link refid="class_quant_lib_1_1_discretized_option"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::DiscretizedSwaption</label>
        <link refid="class_quant_lib_1_1_discretized_swaption"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>QuantLib::Array</label>
        <link refid="class_quant_lib_1_1_array"/>
      </node>
      <node id="2">
        <label>QuantLib::DiscretizedAsset</label>
        <link refid="class_quant_lib_1_1_discretized_asset"/>
        <childnode refid="3" relation="usage">
          <edgelabel>values_</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::DiscretizedOption</label>
        <link refid="class_quant_lib_1_1_discretized_option"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/discretizedasset.hpp" line="160" column="5" bodyfile="ql/discretizedasset.hpp" bodystart="160" bodyend="176"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_discretized_asset_1a35b681c10038f1f62bad25e9b4915c4b" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedOption</scope><name>adjustValues</name></member>
      <member refid="class_quant_lib_1_1_discretized_option_1ae5477629b96683f06ae6a6346090fae9" prot="protected" virt="non-virtual"><scope>QuantLib::DiscretizedOption</scope><name>applyExerciseCondition</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1ae818ed5af32e6c027454bcc19a4abb4f" prot="protected" virt="non-virtual"><scope>QuantLib::DiscretizedOption</scope><name>CouponAdjustment</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1ad305192b76a41f7eedfa7d849c80fb14" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedOption</scope><name>DiscretizedAsset</name></member>
      <member refid="class_quant_lib_1_1_discretized_option_1a6c81eb19eeab5661a3ec57d94f742cad" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedOption</scope><name>DiscretizedOption</name></member>
      <member refid="class_quant_lib_1_1_discretized_option_1a96c3b181f7f08910a18d1be2c857af71" prot="protected" virt="non-virtual"><scope>QuantLib::DiscretizedOption</scope><name>exerciseTimes_</name></member>
      <member refid="class_quant_lib_1_1_discretized_option_1a2061fad5e5b67b985e4221093f1339e2" prot="protected" virt="non-virtual"><scope>QuantLib::DiscretizedOption</scope><name>exerciseType_</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1a38a567d1a1efc9f3de789af08ccfd439" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedOption</scope><name>initialize</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1a36eb67653a2ca130274fbcdbf89deb59" prot="protected" virt="non-virtual"><scope>QuantLib::DiscretizedOption</scope><name>isOnTime</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1ae0c6a088f8cc58ebed984450f39f1ad8" prot="protected" virt="non-virtual"><scope>QuantLib::DiscretizedOption</scope><name>latestPostAdjustment_</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1ab95e661a7352085a074d3661a52ea7fc" prot="protected" virt="non-virtual"><scope>QuantLib::DiscretizedOption</scope><name>latestPreAdjustment_</name></member>
      <member refid="class_quant_lib_1_1_discretized_option_1a9eca7fbea61dd9099ea7ff9c99111bf0" prot="public" virt="virtual"><scope>QuantLib::DiscretizedOption</scope><name>mandatoryTimes</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1ad935364d3ec309c5e37eb788452bdae8" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedOption</scope><name>method</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1ad04b429958ccf31ac1fd6979a10c96de" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedOption</scope><name>partialRollback</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1a0c3c8bdd418e754442145a8346bc0bce" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedOption</scope><name>postAdjustValues</name></member>
      <member refid="class_quant_lib_1_1_discretized_option_1a029f5811e35280143586dd0bbcbefd02" prot="protected" virt="virtual"><scope>QuantLib::DiscretizedOption</scope><name>postAdjustValuesImpl</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1af9d63f3511be393f92de7770fe2b058f" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedOption</scope><name>preAdjustValues</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1ae760c4f8673c95ebeda43f7bef83e12a" prot="protected" virt="virtual"><scope>QuantLib::DiscretizedOption</scope><name>preAdjustValuesImpl</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1a283876e01a0655203c2a330aa3a341ba" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedOption</scope><name>presentValue</name></member>
      <member refid="class_quant_lib_1_1_discretized_option_1ae5c07005ba73043492e1c9443d84c14e" prot="public" virt="virtual"><scope>QuantLib::DiscretizedOption</scope><name>reset</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1af0bfa673817053bb4f1446d4f32fe82b" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedOption</scope><name>rollback</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1a215f21f5e591f45567474858b12840aa" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedOption</scope><name>time</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1aad101d37f5bdf5fe80b36fac3f5516db" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedOption</scope><name>time</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1af428f43eab9a20010a9fb2b6e721a748" prot="protected" virt="non-virtual"><scope>QuantLib::DiscretizedOption</scope><name>time_</name></member>
      <member refid="class_quant_lib_1_1_discretized_option_1a09bf6b46486112672ca1be7983635562" prot="protected" virt="non-virtual"><scope>QuantLib::DiscretizedOption</scope><name>underlying_</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1a8289a365e5debed63c090767e0cb6c9e" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedOption</scope><name>values</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1a3728ab16b4936ae0a2d833256c55aec3" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedOption</scope><name>values</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1a63c3ec17cc95b8469ce9609a48d43221" prot="protected" virt="non-virtual"><scope>QuantLib::DiscretizedOption</scope><name>values_</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1a60cd28fb1233a4dd19e25b9a75d8f7be" prot="public" virt="virtual"><scope>QuantLib::DiscretizedOption</scope><name>~DiscretizedAsset</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

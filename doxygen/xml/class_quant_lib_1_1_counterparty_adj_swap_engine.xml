<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_counterparty_adj_swap_engine" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::CounterpartyAdjSwapEngine</compoundname>
    <basecompoundref prot="public" virt="non-virtual">VanillaSwap::engine</basecompoundref>
    <includes refid="cvaswapengine_8hpp" local="no">cvaswapengine.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Constructors</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_counterparty_adj_swap_engine_1a82a112748dd5f71d1e7179c6d8d83d50" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_pricing_engine" kindref="compound">PricingEngine</ref> &gt;</type>
        <definition>Handle&lt;PricingEngine&gt; QuantLib::CounterpartyAdjSwapEngine::baseSwapEngine_</definition>
        <argsstring></argsstring>
        <name>baseSwapEngine_</name>
        <qualifiedname>QuantLib::CounterpartyAdjSwapEngine::baseSwapEngine_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/swap/cvaswapengine.hpp" line="114" column="14" bodyfile="ql/pricingengines/swap/cvaswapengine.hpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_counterparty_adj_swap_engine_1a3af5933a24968f4888740c9023d14857" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_pricing_engine" kindref="compound">PricingEngine</ref> &gt;</type>
        <definition>Handle&lt;PricingEngine&gt; QuantLib::CounterpartyAdjSwapEngine::swaptionletEngine_</definition>
        <argsstring></argsstring>
        <name>swaptionletEngine_</name>
        <qualifiedname>QuantLib::CounterpartyAdjSwapEngine::swaptionletEngine_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/swap/cvaswapengine.hpp" line="115" column="14" bodyfile="ql/pricingengines/swap/cvaswapengine.hpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_counterparty_adj_swap_engine_1a965769d55a61f2e5fe308a69afd27cdf" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
        <definition>Handle&lt;YieldTermStructure&gt; QuantLib::CounterpartyAdjSwapEngine::discountCurve_</definition>
        <argsstring></argsstring>
        <name>discountCurve_</name>
        <qualifiedname>QuantLib::CounterpartyAdjSwapEngine::discountCurve_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/swap/cvaswapengine.hpp" line="116" column="14" bodyfile="ql/pricingengines/swap/cvaswapengine.hpp" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_counterparty_adj_swap_engine_1ace6bb44c12f565f862f9ae28a503493d" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_default_probability_term_structure" kindref="compound">DefaultProbabilityTermStructure</ref> &gt;</type>
        <definition>Handle&lt;DefaultProbabilityTermStructure&gt; QuantLib::CounterpartyAdjSwapEngine::defaultTS_</definition>
        <argsstring></argsstring>
        <name>defaultTS_</name>
        <qualifiedname>QuantLib::CounterpartyAdjSwapEngine::defaultTS_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/swap/cvaswapengine.hpp" line="117" column="14" bodyfile="ql/pricingengines/swap/cvaswapengine.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_counterparty_adj_swap_engine_1a390eadff4d2869fc4d7017cdddce10c4" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CounterpartyAdjSwapEngine::ctptyRecoveryRate_</definition>
        <argsstring></argsstring>
        <name>ctptyRecoveryRate_</name>
        <qualifiedname>QuantLib::CounterpartyAdjSwapEngine::ctptyRecoveryRate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/swap/cvaswapengine.hpp" line="118" column="12" bodyfile="ql/pricingengines/swap/cvaswapengine.hpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_counterparty_adj_swap_engine_1a3c9f4aec029c7c6b5de41de7850f8e0a" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_default_probability_term_structure" kindref="compound">DefaultProbabilityTermStructure</ref> &gt;</type>
        <definition>Handle&lt;DefaultProbabilityTermStructure&gt; QuantLib::CounterpartyAdjSwapEngine::invstDTS_</definition>
        <argsstring></argsstring>
        <name>invstDTS_</name>
        <qualifiedname>QuantLib::CounterpartyAdjSwapEngine::invstDTS_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/swap/cvaswapengine.hpp" line="119" column="14" bodyfile="ql/pricingengines/swap/cvaswapengine.hpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_counterparty_adj_swap_engine_1a8f42ad5180a539a4496b3e6198bd6343" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CounterpartyAdjSwapEngine::invstRecoveryRate_</definition>
        <argsstring></argsstring>
        <name>invstRecoveryRate_</name>
        <qualifiedname>QuantLib::CounterpartyAdjSwapEngine::invstRecoveryRate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/swap/cvaswapengine.hpp" line="120" column="12" bodyfile="ql/pricingengines/swap/cvaswapengine.hpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_counterparty_adj_swap_engine_1af06f7b0cada58431d88497f109112285" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::CounterpartyAdjSwapEngine::CounterpartyAdjSwapEngine</definition>
        <argsstring>(const Handle&lt; YieldTermStructure &gt; &amp;discountCurve, const Handle&lt; PricingEngine &gt; &amp;swaptionEngine, const Handle&lt; DefaultProbabilityTermStructure &gt; &amp;ctptyDTS, Real ctptyRecoveryRate, const Handle&lt; DefaultProbabilityTermStructure &gt; &amp;invstDTS=Handle&lt; DefaultProbabilityTermStructure &gt;(), Real invstRecoveryRate=0.999)</argsstring>
        <name>CounterpartyAdjSwapEngine</name>
        <qualifiedname>QuantLib::CounterpartyAdjSwapEngine::CounterpartyAdjSwapEngine</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>discountCurve</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_pricing_engine" kindref="compound">PricingEngine</ref> &gt; &amp;</type>
          <declname>swaptionEngine</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_default_probability_term_structure" kindref="compound">DefaultProbabilityTermStructure</ref> &gt; &amp;</type>
          <declname>ctptyDTS</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>ctptyRecoveryRate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_default_probability_term_structure" kindref="compound">DefaultProbabilityTermStructure</ref> &gt; &amp;</type>
          <declname>invstDTS</declname>
          <defval><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_default_probability_term_structure" kindref="compound">DefaultProbabilityTermStructure</ref> &gt;()</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>invstRecoveryRate</declname>
          <defval>0.999</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates the engine from an arbitrary swaption engine. If the investor default model is not given a default free one is assumed. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>discountCurve</parametername>
</parameternamelist>
<parameterdescription>
<para>Used in pricing. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>swaptionEngine</parametername>
</parameternamelist>
<parameterdescription>
<para>Determines the volatility and thus the exposure model. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctptyDTS</parametername>
</parameternamelist>
<parameterdescription>
<para>Counterparty default curve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctptyRecoveryRate</parametername>
</parameternamelist>
<parameterdescription>
<para>Counterparty recovey rate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>invstDTS</parametername>
</parameternamelist>
<parameterdescription>
<para>Investor (swap holder) default curve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>invstRecoveryRate</parametername>
</parameternamelist>
<parameterdescription>
<para>Investor recovery rate. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/swap/cvaswapengine.hpp" line="65" column="7" bodyfile="ql/pricingengines/swap/cvaswapengine.cpp" bodystart="33" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_counterparty_adj_swap_engine_1a1cd08102551d00439d4fe1110210efd5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::CounterpartyAdjSwapEngine::CounterpartyAdjSwapEngine</definition>
        <argsstring>(const Handle&lt; YieldTermStructure &gt; &amp;discountCurve, Volatility blackVol, const Handle&lt; DefaultProbabilityTermStructure &gt; &amp;ctptyDTS, Real ctptyRecoveryRate, const Handle&lt; DefaultProbabilityTermStructure &gt; &amp;invstDTS=Handle&lt; DefaultProbabilityTermStructure &gt;(), Real invstRecoveryRate=0.999)</argsstring>
        <name>CounterpartyAdjSwapEngine</name>
        <qualifiedname>QuantLib::CounterpartyAdjSwapEngine::CounterpartyAdjSwapEngine</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>discountCurve</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
          <declname>blackVol</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_default_probability_term_structure" kindref="compound">DefaultProbabilityTermStructure</ref> &gt; &amp;</type>
          <declname>ctptyDTS</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>ctptyRecoveryRate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_default_probability_term_structure" kindref="compound">DefaultProbabilityTermStructure</ref> &gt; &amp;</type>
          <declname>invstDTS</declname>
          <defval><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_default_probability_term_structure" kindref="compound">DefaultProbabilityTermStructure</ref> &gt;()</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>invstRecoveryRate</declname>
          <defval>0.999</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates an engine with a black volatility model for the exposure. If the investor default model is not given a default free one is assumed. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>discountCurve</parametername>
</parameternamelist>
<parameterdescription>
<para>Used in pricing. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blackVol</parametername>
</parameternamelist>
<parameterdescription>
<para>Black volatility used in the exposure model. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctptyDTS</parametername>
</parameternamelist>
<parameterdescription>
<para>Counterparty default curve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctptyRecoveryRate</parametername>
</parameternamelist>
<parameterdescription>
<para>Counterparty recovey rate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>invstDTS</parametername>
</parameternamelist>
<parameterdescription>
<para>Investor (swap holder) default curve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>invstRecoveryRate</parametername>
</parameternamelist>
<parameterdescription>
<para>Investor recovery rate. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/swap/cvaswapengine.hpp" line="84" column="7" bodyfile="ql/pricingengines/swap/cvaswapengine.cpp" bodystart="57" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_counterparty_adj_swap_engine_1a6ae2741f6f024ff28dfb66139551f45a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::CounterpartyAdjSwapEngine::CounterpartyAdjSwapEngine</definition>
        <argsstring>(const Handle&lt; YieldTermStructure &gt; &amp;discountCurve, const Handle&lt; Quote &gt; &amp;blackVol, const Handle&lt; DefaultProbabilityTermStructure &gt; &amp;ctptyDTS, Real ctptyRecoveryRate, const Handle&lt; DefaultProbabilityTermStructure &gt; &amp;invstDTS=Handle&lt; DefaultProbabilityTermStructure &gt;(), Real invstRecoveryRate=0.999)</argsstring>
        <name>CounterpartyAdjSwapEngine</name>
        <qualifiedname>QuantLib::CounterpartyAdjSwapEngine::CounterpartyAdjSwapEngine</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>discountCurve</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &amp;</type>
          <declname>blackVol</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_default_probability_term_structure" kindref="compound">DefaultProbabilityTermStructure</ref> &gt; &amp;</type>
          <declname>ctptyDTS</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>ctptyRecoveryRate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_default_probability_term_structure" kindref="compound">DefaultProbabilityTermStructure</ref> &gt; &amp;</type>
          <declname>invstDTS</declname>
          <defval><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_default_probability_term_structure" kindref="compound">DefaultProbabilityTermStructure</ref> &gt;()</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>invstRecoveryRate</declname>
          <defval>0.999</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates an engine with a black volatility model for the exposure. The volatility is given as a quote. If the investor default model is not given a default free one is assumed. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>discountCurve</parametername>
</parameternamelist>
<parameterdescription>
<para>Used in pricing. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blackVol</parametername>
</parameternamelist>
<parameterdescription>
<para>Black volatility used in the exposure model. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctptyDTS</parametername>
</parameternamelist>
<parameterdescription>
<para>Counterparty default curve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ctptyRecoveryRate</parametername>
</parameternamelist>
<parameterdescription>
<para>Counterparty recovey rate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>invstDTS</parametername>
</parameternamelist>
<parameterdescription>
<para>Investor (swap holder) default curve. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>invstRecoveryRate</parametername>
</parameternamelist>
<parameterdescription>
<para>Investor recovery rate. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/swap/cvaswapengine.hpp" line="102" column="7" bodyfile="ql/pricingengines/swap/cvaswapengine.cpp" bodystart="82" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_counterparty_adj_swap_engine_1a1b4015c86f56392381e6487d15c8a32b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::CounterpartyAdjSwapEngine::calculate</definition>
        <argsstring>() const override</argsstring>
        <name>calculate</name>
        <qualifiedname>QuantLib::CounterpartyAdjSwapEngine::calculate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/swap/cvaswapengine.hpp" line="111" column="12" bodyfile="ql/pricingengines/swap/cvaswapengine.cpp" bodystart="108" bodyend="216"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Bilateral (CVA and DVA) default adjusted vanilla swap pricing engine. Collateral is not considered. No wrong way risk is considered (rates and counterparty default are uncorrelated). Based on: Sorensen, E.H. and Bollier, T.F., Pricing swap default risk. Financial Analysts Journal, 1994, 50, 23–33 Also see sect. II-5 in: Risk Neutral Pricing of Counterparty Risk D. Brigo, M. Masetti, 2004 or in sections 3 and 4 of &quot;A Formula for Interest Rate Swaps 
  Valuation under Counterparty Risk in presence of Netting Agreements&quot; D. Brigo and M. Masetti; May 4, 2005</para>
<para>to do: Compute fair rate through iteration instead of the current approximation . to do: write <ref refid="class_quant_lib_1_1_issuer" kindref="compound">Issuer</ref> based constructors (event type) to do: Check consistency between option engine discount and the one given </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::CounterpartyAdjSwapEngine</label>
        <link refid="class_quant_lib_1_1_counterparty_adj_swap_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>VanillaSwap::engine</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::CounterpartyAdjSwapEngine</label>
        <link refid="class_quant_lib_1_1_counterparty_adj_swap_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>VanillaSwap::engine</label>
      </node>
    </collaborationgraph>
    <location file="ql/pricingengines/swap/cvaswapengine.hpp" line="49" column="3" bodyfile="ql/pricingengines/swap/cvaswapengine.hpp" bodystart="49" bodyend="121"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_counterparty_adj_swap_engine_1a82a112748dd5f71d1e7179c6d8d83d50" prot="private" virt="non-virtual"><scope>QuantLib::CounterpartyAdjSwapEngine</scope><name>baseSwapEngine_</name></member>
      <member refid="class_quant_lib_1_1_counterparty_adj_swap_engine_1a1b4015c86f56392381e6487d15c8a32b" prot="public" virt="non-virtual"><scope>QuantLib::CounterpartyAdjSwapEngine</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_counterparty_adj_swap_engine_1af06f7b0cada58431d88497f109112285" prot="public" virt="non-virtual"><scope>QuantLib::CounterpartyAdjSwapEngine</scope><name>CounterpartyAdjSwapEngine</name></member>
      <member refid="class_quant_lib_1_1_counterparty_adj_swap_engine_1a1cd08102551d00439d4fe1110210efd5" prot="public" virt="non-virtual"><scope>QuantLib::CounterpartyAdjSwapEngine</scope><name>CounterpartyAdjSwapEngine</name></member>
      <member refid="class_quant_lib_1_1_counterparty_adj_swap_engine_1a6ae2741f6f024ff28dfb66139551f45a" prot="public" virt="non-virtual"><scope>QuantLib::CounterpartyAdjSwapEngine</scope><name>CounterpartyAdjSwapEngine</name></member>
      <member refid="class_quant_lib_1_1_counterparty_adj_swap_engine_1a390eadff4d2869fc4d7017cdddce10c4" prot="private" virt="non-virtual"><scope>QuantLib::CounterpartyAdjSwapEngine</scope><name>ctptyRecoveryRate_</name></member>
      <member refid="class_quant_lib_1_1_counterparty_adj_swap_engine_1ace6bb44c12f565f862f9ae28a503493d" prot="private" virt="non-virtual"><scope>QuantLib::CounterpartyAdjSwapEngine</scope><name>defaultTS_</name></member>
      <member refid="class_quant_lib_1_1_counterparty_adj_swap_engine_1a965769d55a61f2e5fe308a69afd27cdf" prot="private" virt="non-virtual"><scope>QuantLib::CounterpartyAdjSwapEngine</scope><name>discountCurve_</name></member>
      <member refid="class_quant_lib_1_1_counterparty_adj_swap_engine_1a3c9f4aec029c7c6b5de41de7850f8e0a" prot="private" virt="non-virtual"><scope>QuantLib::CounterpartyAdjSwapEngine</scope><name>invstDTS_</name></member>
      <member refid="class_quant_lib_1_1_counterparty_adj_swap_engine_1a8f42ad5180a539a4496b3e6198bd6343" prot="private" virt="non-virtual"><scope>QuantLib::CounterpartyAdjSwapEngine</scope><name>invstRecoveryRate_</name></member>
      <member refid="class_quant_lib_1_1_counterparty_adj_swap_engine_1a3af5933a24968f4888740c9023d14857" prot="private" virt="non-virtual"><scope>QuantLib::CounterpartyAdjSwapEngine</scope><name>swaptionletEngine_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

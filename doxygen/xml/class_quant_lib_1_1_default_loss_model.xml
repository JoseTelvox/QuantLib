<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_default_loss_model" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::DefaultLossModel</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_observable" prot="public" virt="non-virtual">QuantLib::Observable</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_base_correlation_loss_model" prot="public" virt="non-virtual">QuantLib::BaseCorrelationLossModel&lt; GaussianLHPLossModel, BilinearInterpolation &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_binomial_loss_model" prot="public" virt="non-virtual">QuantLib::BinomialLossModel&lt; GaussianConstantLossLM &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_binomial_loss_model" prot="public" virt="non-virtual">QuantLib::BinomialLossModel&lt; TConstantLossLM &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_homogeneous_pool_loss_model" prot="public" virt="non-virtual">QuantLib::HomogeneousPoolLossModel&lt; GaussianCopulaPolicy &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_homogeneous_pool_loss_model" prot="public" virt="non-virtual">QuantLib::HomogeneousPoolLossModel&lt; TCopulaPolicy &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model" prot="public" virt="non-virtual">QuantLib::InhomogeneousPoolLossModel&lt; GaussianCopulaPolicy &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model" prot="public" virt="non-virtual">QuantLib::InhomogeneousPoolLossModel&lt; TCopulaPolicy &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_random_l_m" prot="public" virt="virtual">QuantLib::RandomLM&lt; RandomDefaultLM, copulaPolicy, SobolRsg &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_random_l_m" prot="public" virt="virtual">QuantLib::RandomLM&lt; RandomLossLM, copulaPolicy, SobolRsg &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_recursive_loss_model" prot="public" virt="non-virtual">QuantLib::RecursiveLossModel&lt; GaussianCopulaPolicy &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_base_correlation_loss_model" prot="public" virt="non-virtual">QuantLib::BaseCorrelationLossModel&lt; BaseModel_T, Corr2DInt_T &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_binomial_loss_model" prot="public" virt="non-virtual">QuantLib::BinomialLossModel&lt; LLM &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_constant_loss_model" prot="public" virt="virtual">QuantLib::ConstantLossModel&lt; copulaPolicy &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_gaussian_l_h_p_loss_model" prot="public" virt="non-virtual">QuantLib::GaussianLHPLossModel</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_homogeneous_pool_loss_model" prot="public" virt="non-virtual">QuantLib::HomogeneousPoolLossModel&lt; copulaPolicy &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model" prot="public" virt="non-virtual">QuantLib::InhomogeneousPoolLossModel&lt; copulaPolicy &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_random_l_m" prot="public" virt="virtual">QuantLib::RandomLM&lt; derivedRandomLM, copulaPolicy, USNG &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_recursive_loss_model" prot="public" virt="non-virtual">QuantLib::RecursiveLossModel&lt; copulaPolicy &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_saddle_point_loss_model" prot="public" virt="non-virtual">QuantLib::SaddlePointLossModel&lt; CP &gt;</derivedcompoundref>
    <includes refid="defaultlossmodel_8hpp" local="no">defaultlossmodel.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Statistics</header>
      <memberdef kind="function" id="class_quant_lib_1_1_default_loss_model_1a258763493804fe4c84b533716df00991" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::DefaultLossModel::expectedTrancheLoss</definition>
        <argsstring>(const Date &amp;d) const</argsstring>
        <name>expectedTrancheLoss</name>
        <qualifiedname>QuantLib::DefaultLossModel::expectedTrancheLoss</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_base_correlation_loss_model_1a38e71f9c1944eb5b7a4810014aa03c27">expectedTrancheLoss</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_base_correlation_loss_model_1a38e71f9c1944eb5b7a4810014aa03c27">expectedTrancheLoss</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_base_correlation_loss_model_1a38e71f9c1944eb5b7a4810014aa03c27">expectedTrancheLoss</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_binomial_loss_model_1a141deb0ff1392932b8e88075fd4d6448">expectedTrancheLoss</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_binomial_loss_model_1a141deb0ff1392932b8e88075fd4d6448">expectedTrancheLoss</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_binomial_loss_model_1a141deb0ff1392932b8e88075fd4d6448">expectedTrancheLoss</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_binomial_loss_model_1a141deb0ff1392932b8e88075fd4d6448">expectedTrancheLoss</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_binomial_loss_model_1a141deb0ff1392932b8e88075fd4d6448">expectedTrancheLoss</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_gaussian_l_h_p_loss_model_1a52591a79257a3edf2ec86f1893258503">expectedTrancheLoss</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_homogeneous_pool_loss_model_1a9c911f7f1be1d27ed205d250d4d99fb9">expectedTrancheLoss</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_homogeneous_pool_loss_model_1a9c911f7f1be1d27ed205d250d4d99fb9">expectedTrancheLoss</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_homogeneous_pool_loss_model_1a9c911f7f1be1d27ed205d250d4d99fb9">expectedTrancheLoss</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_homogeneous_pool_loss_model_1a9c911f7f1be1d27ed205d250d4d99fb9">expectedTrancheLoss</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_homogeneous_pool_loss_model_1a9c911f7f1be1d27ed205d250d4d99fb9">expectedTrancheLoss</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a053102c6a568fdb70903c10979e1586f">expectedTrancheLoss</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a053102c6a568fdb70903c10979e1586f">expectedTrancheLoss</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a053102c6a568fdb70903c10979e1586f">expectedTrancheLoss</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a053102c6a568fdb70903c10979e1586f">expectedTrancheLoss</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a053102c6a568fdb70903c10979e1586f">expectedTrancheLoss</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_l_m_1a517374354871d97b20e9c67b27d88e2a">expectedTrancheLoss</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_l_m_1a517374354871d97b20e9c67b27d88e2a">expectedTrancheLoss</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_l_m_1a517374354871d97b20e9c67b27d88e2a">expectedTrancheLoss</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_recursive_loss_model_1a8f7410ee19bc4b7f1967c5d2e905feee">expectedTrancheLoss</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_recursive_loss_model_1a8f7410ee19bc4b7f1967c5d2e905feee">expectedTrancheLoss</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_recursive_loss_model_1a8f7410ee19bc4b7f1967c5d2e905feee">expectedTrancheLoss</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_saddle_point_loss_model_1acbace87d9ac82ce8f9a9ed382640cebc">expectedTrancheLoss</reimplementedby>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultlossmodel.hpp" line="67" column="22" bodyfile="ql/experimental/credit/defaultlossmodel.hpp" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_default_loss_model_1a922ca5f0ea73b3a33420fbcfb2556e93" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1ac41728dd3be3e1869bbb9aec06a89d60" kindref="member">Probability</ref></type>
        <definition>virtual Probability QuantLib::DefaultLossModel::probOverLoss</definition>
        <argsstring>(const Date &amp;d, Real lossFraction) const</argsstring>
        <name>probOverLoss</name>
        <qualifiedname>QuantLib::DefaultLossModel::probOverLoss</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_gaussian_l_h_p_loss_model_1af7cbfe0087be4a3176cbcf4858abbb35">probOverLoss</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_saddle_point_loss_model_1ae04bf88e8206b128596094b62aa134b8">probOverLoss</reimplementedby>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>lossFraction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="namespace_quant_lib_1ac41728dd3be3e1869bbb9aec06a89d60" kindref="member">Probability</ref> of the tranche losing the same or more than the fractional amount given.</para>
<para>The passed lossFraction is a fraction of losses over the tranche notional (not the portfolio). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultlossmodel.hpp" line="76" column="29" bodyfile="ql/experimental/credit/defaultlossmodel.hpp" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_default_loss_model_1ac7142d4e72958aef5a602167a138973e" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::DefaultLossModel::percentile</definition>
        <argsstring>(const Date &amp;d, Real percentile) const</argsstring>
        <name>percentile</name>
        <qualifiedname>QuantLib::DefaultLossModel::percentile</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_binomial_loss_model_1abae597741e45adadae3180bd5a916302">percentile</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_binomial_loss_model_1abae597741e45adadae3180bd5a916302">percentile</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_binomial_loss_model_1abae597741e45adadae3180bd5a916302">percentile</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_binomial_loss_model_1abae597741e45adadae3180bd5a916302">percentile</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_binomial_loss_model_1abae597741e45adadae3180bd5a916302">percentile</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_gaussian_l_h_p_loss_model_1a4038f595a6bdac5f6820abe2f11a6bcb">percentile</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_homogeneous_pool_loss_model_1a45d1c40741d55333068662c3a8050899">percentile</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_homogeneous_pool_loss_model_1a45d1c40741d55333068662c3a8050899">percentile</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_homogeneous_pool_loss_model_1a45d1c40741d55333068662c3a8050899">percentile</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_homogeneous_pool_loss_model_1a45d1c40741d55333068662c3a8050899">percentile</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_homogeneous_pool_loss_model_1a45d1c40741d55333068662c3a8050899">percentile</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a9172ce4e691a49aeb93098c9305b749c">percentile</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a9172ce4e691a49aeb93098c9305b749c">percentile</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a9172ce4e691a49aeb93098c9305b749c">percentile</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a9172ce4e691a49aeb93098c9305b749c">percentile</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a9172ce4e691a49aeb93098c9305b749c">percentile</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_l_m_1ad81926f2a22d5555c4e9c6a1c4df4928">percentile</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_l_m_1ad81926f2a22d5555c4e9c6a1c4df4928">percentile</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_l_m_1ad81926f2a22d5555c4e9c6a1c4df4928">percentile</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_recursive_loss_model_1ae1eeb7e0d13a942f9ca0bc2740427941">percentile</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_recursive_loss_model_1ae1eeb7e0d13a942f9ca0bc2740427941">percentile</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_recursive_loss_model_1ae1eeb7e0d13a942f9ca0bc2740427941">percentile</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_saddle_point_loss_model_1a64178e1c5af0a8887ed3cd6d4948caa3">percentile</reimplementedby>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>percentile</declname>
        </param>
        <briefdescription>
<para>Value at Risk given a default loss percentile. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultlossmodel.hpp" line="81" column="22" bodyfile="ql/experimental/credit/defaultlossmodel.hpp" bodystart="81" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_default_loss_model_1a60bd1a166744f4de455cae1c1c83f6a1" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::DefaultLossModel::expectedShortfall</definition>
        <argsstring>(const Date &amp;d, Real percentile) const</argsstring>
        <name>expectedShortfall</name>
        <qualifiedname>QuantLib::DefaultLossModel::expectedShortfall</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_binomial_loss_model_1af54e0d8ea342d41e36301ee3b028fc99">expectedShortfall</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_binomial_loss_model_1af54e0d8ea342d41e36301ee3b028fc99">expectedShortfall</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_binomial_loss_model_1af54e0d8ea342d41e36301ee3b028fc99">expectedShortfall</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_binomial_loss_model_1af54e0d8ea342d41e36301ee3b028fc99">expectedShortfall</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_binomial_loss_model_1af54e0d8ea342d41e36301ee3b028fc99">expectedShortfall</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_gaussian_l_h_p_loss_model_1ac9bc74e6442c0793d204abca5f006ede">expectedShortfall</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_homogeneous_pool_loss_model_1aa9b71d1eefd33575ad6a98d421c946f0">expectedShortfall</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_homogeneous_pool_loss_model_1aa9b71d1eefd33575ad6a98d421c946f0">expectedShortfall</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_homogeneous_pool_loss_model_1aa9b71d1eefd33575ad6a98d421c946f0">expectedShortfall</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_homogeneous_pool_loss_model_1aa9b71d1eefd33575ad6a98d421c946f0">expectedShortfall</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_homogeneous_pool_loss_model_1aa9b71d1eefd33575ad6a98d421c946f0">expectedShortfall</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1ae84612645744d5b55b1818a00484256a">expectedShortfall</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1ae84612645744d5b55b1818a00484256a">expectedShortfall</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1ae84612645744d5b55b1818a00484256a">expectedShortfall</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1ae84612645744d5b55b1818a00484256a">expectedShortfall</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1ae84612645744d5b55b1818a00484256a">expectedShortfall</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_l_m_1a4d3026de4233c47b892cabda67feacea">expectedShortfall</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_l_m_1a4d3026de4233c47b892cabda67feacea">expectedShortfall</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_l_m_1a4d3026de4233c47b892cabda67feacea">expectedShortfall</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_recursive_loss_model_1a7fa9a5e7e3d183775eaf9d4da8a92447">expectedShortfall</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_recursive_loss_model_1a7fa9a5e7e3d183775eaf9d4da8a92447">expectedShortfall</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_recursive_loss_model_1a7fa9a5e7e3d183775eaf9d4da8a92447">expectedShortfall</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_saddle_point_loss_model_1ad951608b35188cfb419e1296fd4fa8b9">expectedShortfall</reimplementedby>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>percentile</declname>
        </param>
        <briefdescription>
<para>Expected shortfall given a default loss percentile. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultlossmodel.hpp" line="85" column="22" bodyfile="ql/experimental/credit/defaultlossmodel.hpp" bodystart="85" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_default_loss_model_1ab70b30442fcdda802730fd711c5348da" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>virtual std::vector&lt; Real &gt; QuantLib::DefaultLossModel::splitVaRLevel</definition>
        <argsstring>(const Date &amp;d, Real loss) const</argsstring>
        <name>splitVaRLevel</name>
        <qualifiedname>QuantLib::DefaultLossModel::splitVaRLevel</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_random_l_m_1a46f349953322fb99f243d90734cf2bbd">splitVaRLevel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_l_m_1a46f349953322fb99f243d90734cf2bbd">splitVaRLevel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_l_m_1a46f349953322fb99f243d90734cf2bbd">splitVaRLevel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_saddle_point_loss_model_1a043e0d936e5422163114204e5d3d15b4">splitVaRLevel</reimplementedby>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>loss</declname>
        </param>
        <briefdescription>
<para>Associated VaR fraction to each counterparty. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultlossmodel.hpp" line="89" column="29" bodyfile="ql/experimental/credit/defaultlossmodel.hpp" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_default_loss_model_1a467843d56b00359a8fa7d0a1017079a5" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>virtual std::vector&lt; Real &gt; QuantLib::DefaultLossModel::splitESFLevel</definition>
        <argsstring>(const Date &amp;d, Real loss) const</argsstring>
        <name>splitESFLevel</name>
        <qualifiedname>QuantLib::DefaultLossModel::splitESFLevel</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>loss</declname>
        </param>
        <briefdescription>
<para>Associated ESF fraction to each counterparty. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultlossmodel.hpp" line="93" column="29" bodyfile="ql/experimental/credit/defaultlossmodel.hpp" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_default_loss_model_1aeff66ecf317c1dc23713424daf563f88" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::map&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>, <ref refid="namespace_quant_lib_1ac41728dd3be3e1869bbb9aec06a89d60" kindref="member">Probability</ref> &gt;</type>
        <definition>virtual std::map&lt; Real, Probability &gt; QuantLib::DefaultLossModel::lossDistribution</definition>
        <argsstring>(const Date &amp;) const</argsstring>
        <name>lossDistribution</name>
        <qualifiedname>QuantLib::DefaultLossModel::lossDistribution</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_binomial_loss_model_1af33cc82a36f60038148aa0d8b9dcb10e">lossDistribution</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_binomial_loss_model_1af33cc82a36f60038148aa0d8b9dcb10e">lossDistribution</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_binomial_loss_model_1af33cc82a36f60038148aa0d8b9dcb10e">lossDistribution</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_binomial_loss_model_1af33cc82a36f60038148aa0d8b9dcb10e">lossDistribution</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_binomial_loss_model_1af33cc82a36f60038148aa0d8b9dcb10e">lossDistribution</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_l_m_1a07ceb3783bff4c2b911f853d39d66074">lossDistribution</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_l_m_1a07ceb3783bff4c2b911f853d39d66074">lossDistribution</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_l_m_1a07ceb3783bff4c2b911f853d39d66074">lossDistribution</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_recursive_loss_model_1a35437b7b452cc383d8e763480a171106">lossDistribution</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_recursive_loss_model_1a35437b7b452cc383d8e763480a171106">lossDistribution</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_recursive_loss_model_1a35437b7b452cc383d8e763480a171106">lossDistribution</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_saddle_point_loss_model_1a2971a952590ebd6e333834ded04117e0">lossDistribution</reimplementedby>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
        </param>
        <briefdescription>
<para>Full loss distribution. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultlossmodel.hpp" line="100" column="26" bodyfile="ql/experimental/credit/defaultlossmodel.hpp" bodystart="100" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_default_loss_model_1ab57e81d3fdd238c0cb19db2808bc5b59" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::DefaultLossModel::densityTrancheLoss</definition>
        <argsstring>(const Date &amp;d, Real lossFraction) const</argsstring>
        <name>densityTrancheLoss</name>
        <qualifiedname>QuantLib::DefaultLossModel::densityTrancheLoss</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>lossFraction</declname>
        </param>
        <briefdescription>
<para><ref refid="namespace_quant_lib_1ac41728dd3be3e1869bbb9aec06a89d60" kindref="member">Probability</ref> density of a given loss fraction of the basket notional. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultlossmodel.hpp" line="104" column="22" bodyfile="ql/experimental/credit/defaultlossmodel.hpp" bodystart="104" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_default_loss_model_1ab8053b0ecb53c758939cf5c7a33fb328" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1ac41728dd3be3e1869bbb9aec06a89d60" kindref="member">Probability</ref> &gt;</type>
        <definition>virtual std::vector&lt; Probability &gt; QuantLib::DefaultLossModel::probsBeingNthEvent</definition>
        <argsstring>(Size n, const Date &amp;d) const</argsstring>
        <name>probsBeingNthEvent</name>
        <qualifiedname>QuantLib::DefaultLossModel::probsBeingNthEvent</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_random_l_m_1a61f890c966b50d23efc6b7c231b7c1e2">probsBeingNthEvent</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_l_m_1a61f890c966b50d23efc6b7c231b7c1e2">probsBeingNthEvent</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_l_m_1a61f890c966b50d23efc6b7c231b7c1e2">probsBeingNthEvent</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Probabilities for each of the (remaining) basket elements in the pool to have defaulted by time d and at the same time be the Nth defaulting name to default in the basket. This method is oriented to default order dependent portfolio pricing (e.g. NTDs) The the probabilities ordering in the vector coincides with the pool order. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultlossmodel.hpp" line="115" column="29" bodyfile="ql/experimental/credit/defaultlossmodel.hpp" bodystart="115" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_default_loss_model_1a25ed3ba8a38c4afaca5dca5b8cfd1d7d" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::DefaultLossModel::defaultCorrelation</definition>
        <argsstring>(const Date &amp;d, Size iName, Size jName) const</argsstring>
        <name>defaultCorrelation</name>
        <qualifiedname>QuantLib::DefaultLossModel::defaultCorrelation</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_constant_loss_model_1a74d120cd6073910368151490081fedac">defaultCorrelation</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_l_m_1a65e1bf84cbd60eae162d99126abb1834">defaultCorrelation</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_l_m_1a65e1bf84cbd60eae162d99126abb1834">defaultCorrelation</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_l_m_1a65e1bf84cbd60eae162d99126abb1834">defaultCorrelation</reimplementedby>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>iName</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>jName</declname>
        </param>
        <briefdescription>
<para>Pearsons&apos; default probability correlation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultlossmodel.hpp" line="119" column="22" bodyfile="ql/experimental/credit/defaultlossmodel.hpp" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_default_loss_model_1ab46164d907ae7772c0a5f6788ce4568b" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1ac41728dd3be3e1869bbb9aec06a89d60" kindref="member">Probability</ref></type>
        <definition>virtual Probability QuantLib::DefaultLossModel::probAtLeastNEvents</definition>
        <argsstring>(Size n, const Date &amp;d) const</argsstring>
        <name>probAtLeastNEvents</name>
        <qualifiedname>QuantLib::DefaultLossModel::probAtLeastNEvents</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_constant_loss_model_1aa2cdc1e96a656e2a84db7ac855abf906">probAtLeastNEvents</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_l_m_1a4573522256974f56442feed91246249c">probAtLeastNEvents</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_l_m_1a4573522256974f56442feed91246249c">probAtLeastNEvents</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_l_m_1a4573522256974f56442feed91246249c">probAtLeastNEvents</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the probaility of having a given or larger number of defaults in the basket portfolio at a given time. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultlossmodel.hpp" line="126" column="29" bodyfile="ql/experimental/credit/defaultlossmodel.hpp" bodystart="126" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_default_loss_model_1afd0d4637df1423173d5efc758a16f354" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::DefaultLossModel::expectedRecovery</definition>
        <argsstring>(const Date &amp;, Size iName, const DefaultProbKey &amp;) const</argsstring>
        <name>expectedRecovery</name>
        <qualifiedname>QuantLib::DefaultLossModel::expectedRecovery</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_constant_loss_model_1a5197eb8424577e18f970a4764ca8f3dc">expectedRecovery</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_gaussian_l_h_p_loss_model_1a08280f18afc778b2861374ada981a5f6">expectedRecovery</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_default_l_m_1afeef248e85b2286a2b5494fc9beb73b5">expectedRecovery</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_default_l_m_1afeef248e85b2286a2b5494fc9beb73b5">expectedRecovery</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_default_l_m_1afeef248e85b2286a2b5494fc9beb73b5">expectedRecovery</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_default_l_m_1afeef248e85b2286a2b5494fc9beb73b5">expectedRecovery</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_default_l_m_1afeef248e85b2286a2b5494fc9beb73b5">expectedRecovery</reimplementedby>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>iName</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_default_prob_key" kindref="compound">DefaultProbKey</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Expected RR for name conditinal to default by that date. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultlossmodel.hpp" line="131" column="22" bodyfile="ql/experimental/credit/defaultlossmodel.hpp" bodystart="131" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_default_loss_model_1af053cb66fc8e99713ad25ced99f73cf6" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::DefaultLossModel::setBasket</definition>
        <argsstring>(Basket *bskt)</argsstring>
        <name>setBasket</name>
        <qualifiedname>QuantLib::DefaultLossModel::setBasket</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_basket" kindref="compound">Basket</ref> *</type>
          <declname>bskt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Send a reference to the basket to allow the model to read the problem arguments (contained in the basket) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultlossmodel.hpp" line="141" column="14" bodyfile="ql/experimental/credit/defaultlossmodel.hpp" bodystart="141" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_default_loss_model_1ac32cbab626c8ba8ebb0dcace3eed4a38" prot="private" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void QuantLib::DefaultLossModel::resetModel</definition>
        <argsstring>()=0</argsstring>
        <name>resetModel</name>
        <qualifiedname>QuantLib::DefaultLossModel::resetModel</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_base_correlation_loss_model_1a6144978356c09a0fc89754c22774a17c">resetModel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_base_correlation_loss_model_1a6144978356c09a0fc89754c22774a17c">resetModel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_base_correlation_loss_model_1a6144978356c09a0fc89754c22774a17c">resetModel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_binomial_loss_model_1a9bcd81141d5b8a2bb7b3cebe7d69f6b4">resetModel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_binomial_loss_model_1a9bcd81141d5b8a2bb7b3cebe7d69f6b4">resetModel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_binomial_loss_model_1a9bcd81141d5b8a2bb7b3cebe7d69f6b4">resetModel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_binomial_loss_model_1a9bcd81141d5b8a2bb7b3cebe7d69f6b4">resetModel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_binomial_loss_model_1a9bcd81141d5b8a2bb7b3cebe7d69f6b4">resetModel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_constant_loss_model_1aa1e0bee9a49468dffcb3a1ce13952558">resetModel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_gaussian_l_h_p_loss_model_1accfb739b053668c9a916b45dc50dbd78">resetModel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_homogeneous_pool_loss_model_1a6d614077156a82288626b268d133c081">resetModel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_homogeneous_pool_loss_model_1a6d614077156a82288626b268d133c081">resetModel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_homogeneous_pool_loss_model_1a6d614077156a82288626b268d133c081">resetModel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_homogeneous_pool_loss_model_1a6d614077156a82288626b268d133c081">resetModel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_homogeneous_pool_loss_model_1a6d614077156a82288626b268d133c081">resetModel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a8f7f6568e906e4b22baedebbd23b6834">resetModel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a8f7f6568e906e4b22baedebbd23b6834">resetModel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a8f7f6568e906e4b22baedebbd23b6834">resetModel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a8f7f6568e906e4b22baedebbd23b6834">resetModel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model_1a8f7f6568e906e4b22baedebbd23b6834">resetModel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_default_l_m_1ad7d71ea82ce38fb499258d3a7937facb">resetModel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_default_l_m_1ad7d71ea82ce38fb499258d3a7937facb">resetModel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_default_l_m_1ad7d71ea82ce38fb499258d3a7937facb">resetModel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_default_l_m_1ad7d71ea82ce38fb499258d3a7937facb">resetModel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_default_l_m_1ad7d71ea82ce38fb499258d3a7937facb">resetModel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_loss_l_m_1a0526443f95587a8d52d48acf4514c7e0">resetModel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_loss_l_m_1a0526443f95587a8d52d48acf4514c7e0">resetModel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_loss_l_m_1a0526443f95587a8d52d48acf4514c7e0">resetModel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_loss_l_m_1a0526443f95587a8d52d48acf4514c7e0">resetModel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_random_loss_l_m_1a0526443f95587a8d52d48acf4514c7e0">resetModel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_recursive_loss_model_1aa46f9ae4cb4dcab2caa11d5bff41b55b">resetModel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_recursive_loss_model_1aa46f9ae4cb4dcab2caa11d5bff41b55b">resetModel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_recursive_loss_model_1aa46f9ae4cb4dcab2caa11d5bff41b55b">resetModel</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_saddle_point_loss_model_1af0096807a2c39b6f1dfff8b22d052ab1">resetModel</reimplementedby>
        <briefdescription>
<para>Concrete models do now any updates/inits they need on basket reset. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultlossmodel.hpp" line="158" column="22"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_quant_lib_1_1_default_loss_model_1a553c0b0a31e8ddf782ad25f81bbcb355" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Basket</definition>
        <argsstring></argsstring>
        <name>Basket</name>
        <qualifiedname>QuantLib::DefaultLossModel::Basket</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_basket" kindref="compound">Basket</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultlossmodel.hpp" line="53" column="22" bodyfile="ql/experimental/credit/defaultlossmodel.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_default_loss_model_1ad2700ffb7198321f52fdeb42e9a8e043" prot="protected" static="no" mutable="yes">
        <type><ref refid="class_quant_lib_1_1_relinkable_handle" kindref="compound">RelinkableHandle</ref>&lt; <ref refid="class_quant_lib_1_1_basket" kindref="compound">Basket</ref> &gt;</type>
        <definition>RelinkableHandle&lt;Basket&gt; QuantLib::DefaultLossModel::basket_</definition>
        <argsstring></argsstring>
        <name>basket_</name>
        <qualifiedname>QuantLib::DefaultLossModel::basket_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultlossmodel.hpp" line="56" column="34" bodyfile="ql/experimental/credit/defaultlossmodel.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_default_loss_model_1ac51090f561e4372e495bfa9edee0000b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::DefaultLossModel::DefaultLossModel</definition>
        <argsstring>()=default</argsstring>
        <name>DefaultLossModel</name>
        <qualifiedname>QuantLib::DefaultLossModel::DefaultLossModel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/defaultlossmodel.hpp" line="58" column="9"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="struct_quant_lib_1_1_default" kindref="compound">Default</ref> loss model interface definition. Allows communication between the basket and specific algorithms. Intended to hold any kind of portfolio joint loss, latent models, top-down,....</para>
<para>An inconvenience of this design as opposed to the full arguments/results is that when pricing several derivatives instruments on the same basket not all the pricing engines would point to the same loss model; thus when pricing a set of such instruments there might be some switching on the basket loss models, which might require recalculations (of the basket) or not depending on the pricing order. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="15">
        <label>QuantLib::BaseCorrelationLossModel&lt; BaseModel_T, Corr2DInt_T &gt;</label>
        <link refid="class_quant_lib_1_1_base_correlation_loss_model"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::BaseCorrelationLossModel&lt; GaussianLHPLossModel, BilinearInterpolation &gt;</label>
        <link refid="class_quant_lib_1_1_base_correlation_loss_model"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>QuantLib::BinomialLossModel&lt; LLM &gt;</label>
        <link refid="class_quant_lib_1_1_binomial_loss_model"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::BinomialLossModel&lt; GaussianConstantLossLM &gt;</label>
        <link refid="class_quant_lib_1_1_binomial_loss_model"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::BinomialLossModel&lt; TConstantLossLM &gt;</label>
        <link refid="class_quant_lib_1_1_binomial_loss_model"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>QuantLib::ConstantLossModel&lt; copulaPolicy &gt;</label>
        <link refid="class_quant_lib_1_1_constant_loss_model"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::DefaultLossModel</label>
        <link refid="class_quant_lib_1_1_default_loss_model"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>QuantLib::GaussianLHPLossModel</label>
        <link refid="class_quant_lib_1_1_gaussian_l_h_p_loss_model"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>QuantLib::HomogeneousPoolLossModel&lt; copulaPolicy &gt;</label>
        <link refid="class_quant_lib_1_1_homogeneous_pool_loss_model"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::HomogeneousPoolLossModel&lt; GaussianCopulaPolicy &gt;</label>
        <link refid="class_quant_lib_1_1_homogeneous_pool_loss_model"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::HomogeneousPoolLossModel&lt; TCopulaPolicy &gt;</label>
        <link refid="class_quant_lib_1_1_homogeneous_pool_loss_model"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>QuantLib::InhomogeneousPoolLossModel&lt; copulaPolicy &gt;</label>
        <link refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::InhomogeneousPoolLossModel&lt; GaussianCopulaPolicy &gt;</label>
        <link refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QuantLib::InhomogeneousPoolLossModel&lt; TCopulaPolicy &gt;</label>
        <link refid="class_quant_lib_1_1_inhomogeneous_pool_loss_model"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="11">
        <label>QuantLib::RandomDefaultLM&lt; copulaPolicy, USNG &gt;</label>
        <link refid="class_quant_lib_1_1_random_default_l_m"/>
        <childnode refid="10" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>QuantLib::RandomDefaultLM&lt; GaussianCopulaPolicy &gt;</label>
        <link refid="class_quant_lib_1_1_random_default_l_m"/>
        <childnode refid="21" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>QuantLib::RandomDefaultLM&lt; TCopulaPolicy &gt;</label>
        <link refid="class_quant_lib_1_1_random_default_l_m"/>
        <childnode refid="21" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>QuantLib::RandomLM&lt; derivedRandomLM, copulaPolicy, USNG &gt;</label>
        <link refid="class_quant_lib_1_1_random_l_m"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QuantLib::RandomLM&lt; RandomDefaultLM, copulaPolicy, SobolRsg &gt;</label>
        <link refid="class_quant_lib_1_1_random_l_m"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>QuantLib::RandomLM&lt; RandomLossLM, copulaPolicy, SobolRsg &gt;</label>
        <link refid="class_quant_lib_1_1_random_l_m"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>QuantLib::RandomLossLM&lt; copulaPolicy, USNG &gt;</label>
        <link refid="class_quant_lib_1_1_random_loss_l_m"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="24">
        <label>QuantLib::RandomLossLM&lt; GaussianCopulaPolicy &gt;</label>
        <link refid="class_quant_lib_1_1_random_loss_l_m"/>
        <childnode refid="21" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25">
        <label>QuantLib::RandomLossLM&lt; TCopulaPolicy &gt;</label>
        <link refid="class_quant_lib_1_1_random_loss_l_m"/>
        <childnode refid="21" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26">
        <label>QuantLib::RecursiveLossModel&lt; copulaPolicy &gt;</label>
        <link refid="class_quant_lib_1_1_recursive_loss_model"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>QuantLib::RecursiveLossModel&lt; GaussianCopulaPolicy &gt;</label>
        <link refid="class_quant_lib_1_1_recursive_loss_model"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27">
        <label>QuantLib::SaddlePointLossModel&lt; CP &gt;</label>
        <link refid="class_quant_lib_1_1_saddle_point_loss_model"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::DefaultLossModel</label>
        <link refid="class_quant_lib_1_1_default_loss_model"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>basket_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Handle&lt; QuantLib::Basket &gt;</label>
        <link refid="class_quant_lib_1_1_handle"/>
      </node>
      <node id="2">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="3">
        <label>QuantLib::RelinkableHandle&lt; QuantLib::Basket &gt;</label>
        <link refid="class_quant_lib_1_1_relinkable_handle"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/credit/defaultlossmodel.hpp" line="48" column="5" bodyfile="ql/experimental/credit/defaultlossmodel.hpp" bodystart="48" bodyend="159"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_default_loss_model_1a553c0b0a31e8ddf782ad25f81bbcb355" prot="private" virt="non-virtual"><scope>QuantLib::DefaultLossModel</scope><name>Basket</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1ad2700ffb7198321f52fdeb42e9a8e043" prot="protected" virt="non-virtual"><scope>QuantLib::DefaultLossModel</scope><name>basket_</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1a25ed3ba8a38c4afaca5dca5b8cfd1d7d" prot="protected" virt="virtual"><scope>QuantLib::DefaultLossModel</scope><name>defaultCorrelation</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1ac51090f561e4372e495bfa9edee0000b" prot="protected" virt="non-virtual"><scope>QuantLib::DefaultLossModel</scope><name>DefaultLossModel</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1ab57e81d3fdd238c0cb19db2808bc5b59" prot="protected" virt="virtual"><scope>QuantLib::DefaultLossModel</scope><name>densityTrancheLoss</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1afd0d4637df1423173d5efc758a16f354" prot="protected" virt="virtual"><scope>QuantLib::DefaultLossModel</scope><name>expectedRecovery</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1a60bd1a166744f4de455cae1c1c83f6a1" prot="protected" virt="virtual"><scope>QuantLib::DefaultLossModel</scope><name>expectedShortfall</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1a258763493804fe4c84b533716df00991" prot="protected" virt="virtual"><scope>QuantLib::DefaultLossModel</scope><name>expectedTrancheLoss</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1aeff66ecf317c1dc23713424daf563f88" prot="protected" virt="virtual"><scope>QuantLib::DefaultLossModel</scope><name>lossDistribution</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::DefaultLossModel</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::DefaultLossModel</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::DefaultLossModel</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::DefaultLossModel</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual"><scope>QuantLib::DefaultLossModel</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual"><scope>QuantLib::DefaultLossModel</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1ac7142d4e72958aef5a602167a138973e" prot="protected" virt="virtual"><scope>QuantLib::DefaultLossModel</scope><name>percentile</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1ab46164d907ae7772c0a5f6788ce4568b" prot="protected" virt="virtual"><scope>QuantLib::DefaultLossModel</scope><name>probAtLeastNEvents</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1a922ca5f0ea73b3a33420fbcfb2556e93" prot="protected" virt="virtual"><scope>QuantLib::DefaultLossModel</scope><name>probOverLoss</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1ab8053b0ecb53c758939cf5c7a33fb328" prot="protected" virt="virtual"><scope>QuantLib::DefaultLossModel</scope><name>probsBeingNthEvent</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1ac32cbab626c8ba8ebb0dcace3eed4a38" prot="private" virt="pure-virtual"><scope>QuantLib::DefaultLossModel</scope><name>resetModel</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1af053cb66fc8e99713ad25ced99f73cf6" prot="private" virt="non-virtual"><scope>QuantLib::DefaultLossModel</scope><name>setBasket</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1a467843d56b00359a8fa7d0a1017079a5" prot="protected" virt="virtual"><scope>QuantLib::DefaultLossModel</scope><name>splitESFLevel</name></member>
      <member refid="class_quant_lib_1_1_default_loss_model_1ab70b30442fcdda802730fd711c5348da" prot="protected" virt="virtual"><scope>QuantLib::DefaultLossModel</scope><name>splitVaRLevel</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::DefaultLossModel</scope><name>~Observable</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_equity_cash_flow" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::EquityCashFlow</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_indexed_cash_flow" prot="public" virt="non-virtual">QuantLib::IndexedCashFlow</basecompoundref>
    <sectiondef kind="user-defined">
      <header>Visitability</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_equity_cash_flow_1afc162d1e8a841b26881fd8cc508c27a7" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_equity_cash_flow_pricer" kindref="compound">EquityCashFlowPricer</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;EquityCashFlowPricer&gt; QuantLib::EquityCashFlow::pricer_</definition>
        <argsstring></argsstring>
        <name>pricer_</name>
        <qualifiedname>QuantLib::EquityCashFlow::pricer_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/equitycashflow.hpp" line="57" column="25" bodyfile="ql/cashflows/equitycashflow.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_equity_cash_flow_1a2190145e42a0028b2c934a0f995b63be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::EquityCashFlow::accept</definition>
        <argsstring>(AcyclicVisitor &amp;) override</argsstring>
        <name>accept</name>
        <qualifiedname>QuantLib::EquityCashFlow::accept</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_cash_flow_1a2ee98a71e01a73026ed476a5fa40aa8c">accept</reimplements>
        <param>
          <type><ref refid="class_quant_lib_1_1_acyclic_visitor" kindref="compound">AcyclicVisitor</ref> &amp;</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/equitycashflow.hpp" line="51" column="14" bodyfile="ql/cashflows/equitycashflow.hpp" bodystart="60" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_equity_cash_flow_1a9075dade9d04574785a757f7fae45339" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::EquityCashFlow::setPricer</definition>
        <argsstring>(const ext::shared_ptr&lt; EquityCashFlowPricer &gt; &amp;)</argsstring>
        <name>setPricer</name>
        <qualifiedname>QuantLib::EquityCashFlow::setPricer</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_equity_cash_flow_pricer" kindref="compound">EquityCashFlowPricer</ref> &gt; &amp;</type>
          <defname>pricer</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/equitycashflow.hpp" line="53" column="14" bodyfile="ql/cashflows/equitycashflow.cpp" bodystart="61" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_equity_cash_flow_1afd5822016aad9458262326651f1fb323" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_equity_cash_flow_pricer" kindref="compound">EquityCashFlowPricer</ref> &gt; &amp;</type>
        <definition>const ext::shared_ptr&lt; EquityCashFlowPricer &gt; &amp; QuantLib::EquityCashFlow::pricer</definition>
        <argsstring>() const</argsstring>
        <name>pricer</name>
        <qualifiedname>QuantLib::EquityCashFlow::pricer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/equitycashflow.hpp" line="54" column="31" bodyfile="ql/cashflows/equitycashflow.hpp" bodystart="54" bodyend="54"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>CashFlow interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_equity_cash_flow_1afb8f88d629171d67403fcff0680700ab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::EquityCashFlow::amount</definition>
        <argsstring>() const override</argsstring>
        <name>amount</name>
        <qualifiedname>QuantLib::EquityCashFlow::amount</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_cash_flow_1a92962488f6a37dc8ea4ea49712a2c0c1">amount</reimplements>
        <briefdescription>
<para>returns the amount of the cash flow </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The amount is not discounted, i.e., it is the actual amount paid at the cash flow date. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/equitycashflow.hpp" line="47" column="14" bodyfile="ql/cashflows/equitycashflow.cpp" bodystart="70" bodyend="75"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_equity_cash_flow_1a0b50e3275bdd3cd1e4abcbb93bd6feb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::EquityCashFlow::EquityCashFlow</definition>
        <argsstring>(Real notional, ext::shared_ptr&lt; EquityIndex &gt; index, const Date &amp;baseDate, const Date &amp;fixingDate, const Date &amp;paymentDate, bool growthOnly=true)</argsstring>
        <name>EquityCashFlow</name>
        <qualifiedname>QuantLib::EquityCashFlow::EquityCashFlow</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>notional</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_equity_index" kindref="compound">EquityIndex</ref> &gt;</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>baseDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>fixingDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>paymentDate</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>growthOnly</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/equitycashflow.hpp" line="39" column="9" bodyfile="ql/cashflows/equitycashflow.cpp" bodystart="53" bodyend="59"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>QuantLib::CashFlow</label>
        <link refid="class_quant_lib_1_1_cash_flow"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::EquityCashFlow</label>
        <link refid="class_quant_lib_1_1_equity_cash_flow"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Event</label>
        <link refid="class_quant_lib_1_1_event"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::IndexedCashFlow</label>
        <link refid="class_quant_lib_1_1_indexed_cash_flow"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="7">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>QuantLib::CashFlow</label>
        <link refid="class_quant_lib_1_1_cash_flow"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::EquityCashFlow</label>
        <link refid="class_quant_lib_1_1_equity_cash_flow"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Event</label>
        <link refid="class_quant_lib_1_1_event"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::IndexedCashFlow</label>
        <link refid="class_quant_lib_1_1_indexed_cash_flow"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="7">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </collaborationgraph>
    <location file="ql/cashflows/equitycashflow.hpp" line="37" column="5" bodyfile="ql/cashflows/equitycashflow.hpp" bodystart="37" bodyend="58"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_equity_cash_flow_1a2190145e42a0028b2c934a0f995b63be" prot="public" virt="virtual"><scope>QuantLib::EquityCashFlow</scope><name>accept</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a02070ea7442d30625992c1711030d4b8" prot="protected" virt="non-virtual"><scope>QuantLib::EquityCashFlow</scope><name>alwaysForward_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a17c9433135a259e4776baec66204a484" prot="public" virt="non-virtual"><scope>QuantLib::EquityCashFlow</scope><name>alwaysForwardNotifications</name></member>
      <member refid="class_quant_lib_1_1_equity_cash_flow_1afb8f88d629171d67403fcff0680700ab" prot="public" virt="virtual"><scope>QuantLib::EquityCashFlow</scope><name>amount</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1ac9f0fbf5c3784063909ed9919d7c46f7" prot="protected" virt="non-virtual"><scope>QuantLib::EquityCashFlow</scope><name>amount_</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1ac82fecaaf732f0e5504e52176debb1f9" prot="public" virt="virtual"><scope>QuantLib::EquityCashFlow</scope><name>baseDate</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1a23aec750762a04270c5a1afff587313c" prot="public" virt="virtual"><scope>QuantLib::EquityCashFlow</scope><name>baseFixing</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a5244c7f83592375a0ea9048296435fd1" prot="protected" virt="virtual"><scope>QuantLib::EquityCashFlow</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a58b4986a80efa18634483a92c121e26e" prot="protected" virt="non-virtual"><scope>QuantLib::EquityCashFlow</scope><name>calculated_</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1a41e79ceab52210f131ad9ea7672da9a4" prot="public" virt="virtual"><scope>QuantLib::EquityCashFlow</scope><name>date</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::EquityCashFlow</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_equity_cash_flow_1a0b50e3275bdd3cd1e4abcbb93bd6feb5" prot="public" virt="non-virtual"><scope>QuantLib::EquityCashFlow</scope><name>EquityCashFlow</name></member>
      <member refid="class_quant_lib_1_1_cash_flow_1a235e2205946f507de2d3b2cbfaf8cd89" prot="public" virt="virtual"><scope>QuantLib::EquityCashFlow</scope><name>exCouponDate</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1a1fc1d31bccd62a14708904d24273417b" prot="public" virt="virtual"><scope>QuantLib::EquityCashFlow</scope><name>fixingDate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1afac6ee19c3107c453e1347dd8000e023" prot="public" virt="non-virtual"><scope>QuantLib::EquityCashFlow</scope><name>forwardFirstNotificationOnly</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7157f41e83f2c5d924f5c5bafda04d1d" prot="public" virt="non-virtual"><scope>QuantLib::EquityCashFlow</scope><name>freeze</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7bb721fe00c6854e602758aba629ab77" prot="protected" virt="non-virtual"><scope>QuantLib::EquityCashFlow</scope><name>frozen_</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1a66c2de51e1432baa466c614bf299f72e" prot="public" virt="virtual"><scope>QuantLib::EquityCashFlow</scope><name>growthOnly</name></member>
      <member refid="class_quant_lib_1_1_cash_flow_1a42691c396f43dde0b5ed37f4a014b0e8" prot="public" virt="virtual"><scope>QuantLib::EquityCashFlow</scope><name>hasOccurred</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1a73e1de9b0e5a46e0a30f73dbc95effb7" prot="public" virt="virtual"><scope>QuantLib::EquityCashFlow</scope><name>index</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1a8a9443cbe70325951952f5c73b8d85f7" prot="public" virt="non-virtual"><scope>QuantLib::EquityCashFlow</scope><name>IndexedCashFlow</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1abe47dfce66d72266875bd9326f6ed385" prot="public" virt="virtual"><scope>QuantLib::EquityCashFlow</scope><name>indexFixing</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a0a7c5d42815a4e16ee2158e24dbfc748" prot="public" virt="non-virtual"><scope>QuantLib::EquityCashFlow</scope><name>isCalculated</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::EquityCashFlow</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a26f18f4ff7faaaebd8eae50e064b493e" prot="public" virt="non-virtual"><scope>QuantLib::EquityCashFlow</scope><name>LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::EquityCashFlow</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1a5635a246bb3c3cd1084a28cc0adf8a4d" prot="public" virt="virtual"><scope>QuantLib::EquityCashFlow</scope><name>notional</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::EquityCashFlow</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Event::"><scope>QuantLib::EquityCashFlow</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Event::"><scope>QuantLib::EquityCashFlow</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::EquityCashFlow</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::EquityCashFlow</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::EquityCashFlow</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Event::"><scope>QuantLib::EquityCashFlow</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::QuantLib::Observer::"><scope>QuantLib::EquityCashFlow</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1ae06de86092a73f3f442f7df40a17cecd" prot="public" virt="virtual"><scope>QuantLib::EquityCashFlow</scope><name>performCalculations</name></member>
      <member refid="class_quant_lib_1_1_equity_cash_flow_1afd5822016aad9458262326651f1fb323" prot="public" virt="non-virtual"><scope>QuantLib::EquityCashFlow</scope><name>pricer</name></member>
      <member refid="class_quant_lib_1_1_equity_cash_flow_1afc162d1e8a841b26881fd8cc508c27a7" prot="private" virt="non-virtual"><scope>QuantLib::EquityCashFlow</scope><name>pricer_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a70c9b24e50132408d8d9ce4f6674662a" prot="public" virt="non-virtual"><scope>QuantLib::EquityCashFlow</scope><name>recalculate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::EquityCashFlow</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::EquityCashFlow</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_equity_cash_flow_1a9075dade9d04574785a757f7fae45339" prot="public" virt="non-virtual"><scope>QuantLib::EquityCashFlow</scope><name>setPricer</name></member>
      <member refid="class_quant_lib_1_1_cash_flow_1a103a14e1657bd2d7cb6574bf6dcf96d0" prot="public" virt="non-virtual"><scope>QuantLib::EquityCashFlow</scope><name>tradingExCoupon</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a2e0e4786666453024b9d4e0761f2770b" prot="public" virt="non-virtual"><scope>QuantLib::EquityCashFlow</scope><name>unfreeze</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::EquityCashFlow</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::EquityCashFlow</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1adee2bf49be5c4c78736be293321a856d" prot="public" virt="virtual"><scope>QuantLib::EquityCashFlow</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_cash_flow_1a4ac3d8fa6eeb8c307345ada96b25cecf" prot="public" virt="non-virtual"><scope>QuantLib::EquityCashFlow</scope><name>~CashFlow</name></member>
      <member refid="class_quant_lib_1_1_event_1a26cef5942731bfb52ed77e74abdcfe9f" prot="public" virt="non-virtual"><scope>QuantLib::EquityCashFlow</scope><name>~Event</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a9d719c43bb627177a90d7d12324a2d6e" prot="public" virt="non-virtual"><scope>QuantLib::EquityCashFlow</scope><name>~LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::EquityCashFlow</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::EquityCashFlow</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

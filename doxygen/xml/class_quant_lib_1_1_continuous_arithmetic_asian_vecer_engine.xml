<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_continuous_arithmetic_asian_vecer_engine" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::ContinuousArithmeticAsianVecerEngine</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_continuous_averaging_asian_option_1_1engine" prot="public" virt="non-virtual">QuantLib::ContinuousAveragingAsianOption::engine</basecompoundref>
    <includes refid="continuousarithmeticasianvecerengine_8hpp" local="no">continuousarithmeticasianvecerengine.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_continuous_arithmetic_asian_vecer_engine_1a6b86bd7db4cd0ea0aa4459596b86386b" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_generalized_black_scholes_process" kindref="compound">GeneralizedBlackScholesProcess</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;GeneralizedBlackScholesProcess&gt; QuantLib::ContinuousArithmeticAsianVecerEngine::process_</definition>
        <argsstring></argsstring>
        <name>process_</name>
        <qualifiedname>QuantLib::ContinuousArithmeticAsianVecerEngine::process_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.hpp" line="51" column="25" bodyfile="ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_continuous_arithmetic_asian_vecer_engine_1a71a611444ed0efaf4421447588ad0f2b" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
        <definition>Handle&lt;Quote&gt; QuantLib::ContinuousArithmeticAsianVecerEngine::currentAverage_</definition>
        <argsstring></argsstring>
        <name>currentAverage_</name>
        <qualifiedname>QuantLib::ContinuousArithmeticAsianVecerEngine::currentAverage_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.hpp" line="52" column="16" bodyfile="ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_continuous_arithmetic_asian_vecer_engine_1ae3cbdf51a2355c3eae7b09b0c7319f76" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::ContinuousArithmeticAsianVecerEngine::startDate_</definition>
        <argsstring></argsstring>
        <name>startDate_</name>
        <qualifiedname>QuantLib::ContinuousArithmeticAsianVecerEngine::startDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.hpp" line="53" column="14" bodyfile="ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_continuous_arithmetic_asian_vecer_engine_1ada4cbe719a47d46c6c52583ec604edd8" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ContinuousArithmeticAsianVecerEngine::z_min_</definition>
        <argsstring></argsstring>
        <name>z_min_</name>
        <qualifiedname>QuantLib::ContinuousArithmeticAsianVecerEngine::z_min_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.hpp" line="54" column="14" bodyfile="ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_continuous_arithmetic_asian_vecer_engine_1a2a9a6f832b4795fd4ca39c1e10ed229d" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ContinuousArithmeticAsianVecerEngine::z_max_</definition>
        <argsstring></argsstring>
        <name>z_max_</name>
        <qualifiedname>QuantLib::ContinuousArithmeticAsianVecerEngine::z_max_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.hpp" line="55" column="14" bodyfile="ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_continuous_arithmetic_asian_vecer_engine_1a00c83d1b132d77ca58a96b4947e66d69" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::ContinuousArithmeticAsianVecerEngine::timeSteps_</definition>
        <argsstring></argsstring>
        <name>timeSteps_</name>
        <qualifiedname>QuantLib::ContinuousArithmeticAsianVecerEngine::timeSteps_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.hpp" line="56" column="14" bodyfile="ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_continuous_arithmetic_asian_vecer_engine_1ae9850c66bb4a66bbf173ca7886658980" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::ContinuousArithmeticAsianVecerEngine::assetSteps_</definition>
        <argsstring></argsstring>
        <name>assetSteps_</name>
        <qualifiedname>QuantLib::ContinuousArithmeticAsianVecerEngine::assetSteps_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.hpp" line="57" column="14" bodyfile="ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_continuous_arithmetic_asian_vecer_engine_1a419cb059cfb3dcf39e5a1654eec94293" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ContinuousArithmeticAsianVecerEngine::ContinuousArithmeticAsianVecerEngine</definition>
        <argsstring>(ext::shared_ptr&lt; GeneralizedBlackScholesProcess &gt; process, Handle&lt; Quote &gt; currentAverage, Date startDate, Size timeSteps=100, Size assetSteps=100, Real z_min=-1.0, Real z_max=1.0)</argsstring>
        <name>ContinuousArithmeticAsianVecerEngine</name>
        <qualifiedname>QuantLib::ContinuousArithmeticAsianVecerEngine::ContinuousArithmeticAsianVecerEngine</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_generalized_black_scholes_process" kindref="compound">GeneralizedBlackScholesProcess</ref> &gt;</type>
          <declname>process</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
          <declname>currentAverage</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
          <declname>startDate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>timeSteps</declname>
          <defval>100</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>assetSteps</declname>
          <defval>100</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>z_min</declname>
          <defval>-1.0</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>z_max</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.hpp" line="37" column="9" bodyfile="ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.cpp" bodystart="35" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_continuous_arithmetic_asian_vecer_engine_1a696c45c81d4bb7e0a657bf70ca9897f6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::ContinuousArithmeticAsianVecerEngine::calculate</definition>
        <argsstring>() const override</argsstring>
        <name>calculate</name>
        <qualifiedname>QuantLib::ContinuousArithmeticAsianVecerEngine::calculate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_pricing_engine_1ad2be11cff80d9792f0cc8231711fcb06">calculate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.hpp" line="45" column="14" bodyfile="ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.cpp" bodystart="50" bodyend="207"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_continuous_arithmetic_asian_vecer_engine_1a3948017ca8ee59130aabca1336e4ba2e" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ContinuousArithmeticAsianVecerEngine::cont_strategy</definition>
        <argsstring>(Time t, Time T1, Time T2, Real v, Real r) const</argsstring>
        <name>cont_strategy</name>
        <qualifiedname>QuantLib::ContinuousArithmeticAsianVecerEngine::cont_strategy</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>T1</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>T2</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.hpp" line="49" column="14" bodyfile="ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.cpp" bodystart="210" bodyend="239"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Vecer engine for continuous-avaeraging Asian options. </para>
    </briefdescription>
    <detaileddescription>
<para>See <ulink url="http://www.stat.columbia.edu/~vecer/asian-vecer.pdf">http://www.stat.columbia.edu/~vecer/asian-vecer.pdf</ulink> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::ContinuousArithmeticAsianVecerEngine</label>
        <link refid="class_quant_lib_1_1_continuous_arithmetic_asian_vecer_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::ContinuousAveragingAsianOption::engine</label>
        <link refid="class_quant_lib_1_1_continuous_averaging_asian_option_1_1engine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::GenericEngine&lt; ContinuousAveragingAsianOption::arguments, ContinuousAveragingAsianOption::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_engine"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="4">
        <label>QuantLib::PricingEngine</label>
        <link refid="class_quant_lib_1_1_pricing_engine"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8">
        <label>OneAssetOption::arguments</label>
      </node>
      <node id="1">
        <label>QuantLib::ContinuousArithmeticAsianVecerEngine</label>
        <link refid="class_quant_lib_1_1_continuous_arithmetic_asian_vecer_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::ContinuousAveragingAsianOption::arguments</label>
        <link refid="class_quant_lib_1_1_continuous_averaging_asian_option_1_1arguments"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::ContinuousAveragingAsianOption::engine</label>
        <link refid="class_quant_lib_1_1_continuous_averaging_asian_option_1_1engine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::GenericEngine&lt; ContinuousAveragingAsianOption::arguments, ContinuousAveragingAsianOption::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_engine"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>arguments_</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="4">
        <label>QuantLib::PricingEngine</label>
        <link refid="class_quant_lib_1_1_pricing_engine"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.hpp" line="34" column="5" bodyfile="ql/experimental/exoticoptions/continuousarithmeticasianvecerengine.hpp" bodystart="35" bodyend="58"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_generic_engine_1ad2371cdbafa1989afb0e4733b1212c0d" prot="protected" virt="non-virtual"><scope>QuantLib::ContinuousArithmeticAsianVecerEngine</scope><name>arguments_</name></member>
      <member refid="class_quant_lib_1_1_continuous_arithmetic_asian_vecer_engine_1ae9850c66bb4a66bbf173ca7886658980" prot="private" virt="non-virtual"><scope>QuantLib::ContinuousArithmeticAsianVecerEngine</scope><name>assetSteps_</name></member>
      <member refid="class_quant_lib_1_1_continuous_arithmetic_asian_vecer_engine_1a696c45c81d4bb7e0a657bf70ca9897f6" prot="public" virt="virtual"><scope>QuantLib::ContinuousArithmeticAsianVecerEngine</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_continuous_arithmetic_asian_vecer_engine_1a3948017ca8ee59130aabca1336e4ba2e" prot="protected" virt="non-virtual"><scope>QuantLib::ContinuousArithmeticAsianVecerEngine</scope><name>cont_strategy</name></member>
      <member refid="class_quant_lib_1_1_continuous_arithmetic_asian_vecer_engine_1a419cb059cfb3dcf39e5a1654eec94293" prot="public" virt="non-virtual"><scope>QuantLib::ContinuousArithmeticAsianVecerEngine</scope><name>ContinuousArithmeticAsianVecerEngine</name></member>
      <member refid="class_quant_lib_1_1_continuous_arithmetic_asian_vecer_engine_1a71a611444ed0efaf4421447588ad0f2b" prot="private" virt="non-virtual"><scope>QuantLib::ContinuousArithmeticAsianVecerEngine</scope><name>currentAverage_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::ContinuousArithmeticAsianVecerEngine</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1ad9c6e8dc65ca072d5e6e17640d74db3e" prot="public" virt="virtual"><scope>QuantLib::ContinuousArithmeticAsianVecerEngine</scope><name>getArguments</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1aea8272ef6e5e0ea1cffadfed0454fa88" prot="public" virt="virtual"><scope>QuantLib::ContinuousArithmeticAsianVecerEngine</scope><name>getResults</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::ContinuousArithmeticAsianVecerEngine</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::ContinuousArithmeticAsianVecerEngine</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::ContinuousArithmeticAsianVecerEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::ContinuousArithmeticAsianVecerEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::ContinuousArithmeticAsianVecerEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::ContinuousArithmeticAsianVecerEngine</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::ContinuousArithmeticAsianVecerEngine</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::ContinuousArithmeticAsianVecerEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::ContinuousArithmeticAsianVecerEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::ContinuousArithmeticAsianVecerEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_continuous_arithmetic_asian_vecer_engine_1a6b86bd7db4cd0ea0aa4459596b86386b" prot="private" virt="non-virtual"><scope>QuantLib::ContinuousArithmeticAsianVecerEngine</scope><name>process_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::ContinuousArithmeticAsianVecerEngine</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::ContinuousArithmeticAsianVecerEngine</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1a81c5390ba1e713e57ca87d5f841d37f2" prot="public" virt="virtual"><scope>QuantLib::ContinuousArithmeticAsianVecerEngine</scope><name>reset</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1a41281f2ea4990dbce90be1f9f2e231f6" prot="protected" virt="non-virtual"><scope>QuantLib::ContinuousArithmeticAsianVecerEngine</scope><name>results_</name></member>
      <member refid="class_quant_lib_1_1_continuous_arithmetic_asian_vecer_engine_1ae3cbdf51a2355c3eae7b09b0c7319f76" prot="private" virt="non-virtual"><scope>QuantLib::ContinuousArithmeticAsianVecerEngine</scope><name>startDate_</name></member>
      <member refid="class_quant_lib_1_1_continuous_arithmetic_asian_vecer_engine_1a00c83d1b132d77ca58a96b4947e66d69" prot="private" virt="non-virtual"><scope>QuantLib::ContinuousArithmeticAsianVecerEngine</scope><name>timeSteps_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::ContinuousArithmeticAsianVecerEngine</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::ContinuousArithmeticAsianVecerEngine</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1aaf5ef54d9e1abf8b1b50b48804edf3dc" prot="public" virt="virtual"><scope>QuantLib::ContinuousArithmeticAsianVecerEngine</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_continuous_arithmetic_asian_vecer_engine_1a2a9a6f832b4795fd4ca39c1e10ed229d" prot="private" virt="non-virtual"><scope>QuantLib::ContinuousArithmeticAsianVecerEngine</scope><name>z_max_</name></member>
      <member refid="class_quant_lib_1_1_continuous_arithmetic_asian_vecer_engine_1ada4cbe719a47d46c6c52583ec604edd8" prot="private" virt="non-virtual"><scope>QuantLib::ContinuousArithmeticAsianVecerEngine</scope><name>z_min_</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::ContinuousArithmeticAsianVecerEngine</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::ContinuousArithmeticAsianVecerEngine</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_pricing_engine_1a66b279a54578cd7e60d402e5147eb526" prot="public" virt="non-virtual"><scope>QuantLib::ContinuousArithmeticAsianVecerEngine</scope><name>~PricingEngine</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

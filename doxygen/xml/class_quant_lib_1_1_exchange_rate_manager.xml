<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_exchange_rate_manager" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::ExchangeRateManager</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_singleton" prot="public" virt="non-virtual">QuantLib::Singleton&lt; ExchangeRateManager &gt;</basecompoundref>
    <includes refid="exchangeratemanager_8hpp" local="no">exchangeratemanager.hpp</includes>
    <innerclass refid="struct_quant_lib_1_1_exchange_rate_manager_1_1_entry" prot="public">QuantLib::ExchangeRateManager::Entry</innerclass>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_quant_lib_1_1_exchange_rate_manager_1a545c0584707d32ba5eb5bf4858ecfd0a" prot="private" static="no">
        <type><ref refid="namespace_quant_lib_1a8ee2a478658b664ea4ad96babd0ca719" kindref="member">BigInteger</ref></type>
        <definition>typedef BigInteger QuantLib::ExchangeRateManager::Key</definition>
        <argsstring></argsstring>
        <name>Key</name>
        <qualifiedname>QuantLib::ExchangeRateManager::Key</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/currencies/exchangeratemanager.hpp" line="81" column="28" bodyfile="ql/currencies/exchangeratemanager.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_quant_lib_1_1_exchange_rate_manager_1aaba78e362716d89d9d8bfa9f90b15a10" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class Singleton&lt; ExchangeRateManager &gt;</definition>
        <argsstring></argsstring>
        <name>Singleton&lt; ExchangeRateManager &gt;</name>
        <qualifiedname>QuantLib::ExchangeRateManager::Singleton&lt; ExchangeRateManager &gt;</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_singleton" kindref="compound">Singleton</ref>&lt; <ref refid="class_quant_lib_1_1_exchange_rate_manager" kindref="compound">ExchangeRateManager</ref> &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/currencies/exchangeratemanager.hpp" line="1" column="0" bodyfile="ql/currencies/exchangeratemanager.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_exchange_rate_manager_1a4715610bfade87f1a6f81e0fd9049e4a" prot="private" static="no" mutable="yes">
        <type>std::map&lt; Key, std::list&lt; <ref refid="struct_quant_lib_1_1_exchange_rate_manager_1_1_entry" kindref="compound">Entry</ref> &gt; &gt;</type>
        <definition>std::map&lt;Key, std::list&lt;Entry&gt; &gt; QuantLib::ExchangeRateManager::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <qualifiedname>QuantLib::ExchangeRateManager::data_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/currencies/exchangeratemanager.hpp" line="82" column="26" bodyfile="ql/currencies/exchangeratemanager.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_exchange_rate_manager_1a872a37b6ddcc5e337c723b26dfe8b560" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ExchangeRateManager::ExchangeRateManager</definition>
        <argsstring>()</argsstring>
        <name>ExchangeRateManager</name>
        <qualifiedname>QuantLib::ExchangeRateManager::ExchangeRateManager</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/currencies/exchangeratemanager.hpp" line="44" column="9" bodyfile="ql/currencies/exchangeratemanager.cpp" bodystart="41" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_exchange_rate_manager_1a3680e59efea042b4ee1c57084fd191c1" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Key</type>
        <definition>ExchangeRateManager::Key QuantLib::ExchangeRateManager::hash</definition>
        <argsstring>(const Currency &amp;, const Currency &amp;) const</argsstring>
        <name>hash</name>
        <qualifiedname>QuantLib::ExchangeRateManager::hash</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_currency" kindref="compound">Currency</ref> &amp;</type>
          <defname>c1</defname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_currency" kindref="compound">Currency</ref> &amp;</type>
          <defname>c2</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/currencies/exchangeratemanager.hpp" line="83" column="13" bodyfile="ql/currencies/exchangeratemanager.cpp" bodystart="89" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_exchange_rate_manager_1a4622812603f58beca71aa877483c51f0" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::ExchangeRateManager::hashes</definition>
        <argsstring>(Key, const Currency &amp;) const</argsstring>
        <name>hashes</name>
        <qualifiedname>QuantLib::ExchangeRateManager::hashes</qualifiedname>
        <param>
          <type>Key</type>
          <defname>k</defname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_currency" kindref="compound">Currency</ref> &amp;</type>
          <defname>c</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/currencies/exchangeratemanager.hpp" line="84" column="14" bodyfile="ql/currencies/exchangeratemanager.cpp" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_exchange_rate_manager_1a4440958e80dbea96699efa9aca51144c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::ExchangeRateManager::addKnownRates</definition>
        <argsstring>()</argsstring>
        <name>addKnownRates</name>
        <qualifiedname>QuantLib::ExchangeRateManager::addKnownRates</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/currencies/exchangeratemanager.hpp" line="85" column="14" bodyfile="ql/currencies/exchangeratemanager.cpp" bodystart="100" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_exchange_rate_manager_1af0795ab1bbbd8fae78d595a9ab3ace6e" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_exchange_rate" kindref="compound">ExchangeRate</ref></type>
        <definition>ExchangeRate QuantLib::ExchangeRateManager::directLookup</definition>
        <argsstring>(const Currency &amp;source, const Currency &amp;target, const Date &amp;date) const</argsstring>
        <name>directLookup</name>
        <qualifiedname>QuantLib::ExchangeRateManager::directLookup</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_currency" kindref="compound">Currency</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_currency" kindref="compound">Currency</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>date</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/currencies/exchangeratemanager.hpp" line="86" column="22" bodyfile="ql/currencies/exchangeratemanager.cpp" bodystart="137" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_exchange_rate_manager_1aca4116d247ec31181ac018cf3ced4480" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_exchange_rate" kindref="compound">ExchangeRate</ref></type>
        <definition>ExchangeRate QuantLib::ExchangeRateManager::smartLookup</definition>
        <argsstring>(const Currency &amp;source, const Currency &amp;target, const Date &amp;date, std::list&lt; Integer &gt; forbiddenCodes=std::list&lt; Integer &gt;()) const</argsstring>
        <name>smartLookup</name>
        <qualifiedname>QuantLib::ExchangeRateManager::smartLookup</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_currency" kindref="compound">Currency</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_currency" kindref="compound">Currency</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>date</declname>
        </param>
        <param>
          <type>std::list&lt; <ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref> &gt;</type>
          <declname>forbiddenCodes</declname>
          <defval>std::list&lt; <ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref> &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/currencies/exchangeratemanager.hpp" line="89" column="22" bodyfile="ql/currencies/exchangeratemanager.cpp" bodystart="148" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_exchange_rate_manager_1a4bbe3d15d45419240913ada496e14829" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_exchange_rate" kindref="compound">ExchangeRate</ref> *</type>
        <definition>const ExchangeRate * QuantLib::ExchangeRateManager::fetch</definition>
        <argsstring>(const Currency &amp;source, const Currency &amp;target, const Date &amp;date) const</argsstring>
        <name>fetch</name>
        <qualifiedname>QuantLib::ExchangeRateManager::fetch</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_currency" kindref="compound">Currency</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_currency" kindref="compound">Currency</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>date</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/currencies/exchangeratemanager.hpp" line="94" column="28" bodyfile="ql/currencies/exchangeratemanager.cpp" bodystart="194" bodyend="200"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_exchange_rate_manager_1adece9f8b727a060611c6b57c984721ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::ExchangeRateManager::add</definition>
        <argsstring>(const ExchangeRate &amp;, const Date &amp;startDate=Date::minDate(), const Date &amp;endDate=Date::maxDate())</argsstring>
        <name>add</name>
        <qualifiedname>QuantLib::ExchangeRateManager::add</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_exchange_rate" kindref="compound">ExchangeRate</ref> &amp;</type>
          <defname>rate</defname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>startDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date_1ab3e730da90778d2163d34719915efaed" kindref="member">Date::minDate</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>endDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date_1ad04a122553934667f47284aede26bde2" kindref="member">Date::maxDate</ref>()</defval>
        </param>
        <briefdescription>
<para>Add an exchange rate. </para>
        </briefdescription>
        <detaileddescription>
<para>The given rate is valid between the given dates.</para>
<para><simplesect kind="note"><para>If two rates are given between the same currencies and with overlapping date ranges, the latest one added takes precedence during lookup. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/currencies/exchangeratemanager.hpp" line="53" column="14" bodyfile="ql/currencies/exchangeratemanager.cpp" bodystart="45" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_exchange_rate_manager_1a93c3ac7ae2364fe84a75ab061ae90cfc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_exchange_rate" kindref="compound">ExchangeRate</ref></type>
        <definition>ExchangeRate QuantLib::ExchangeRateManager::lookup</definition>
        <argsstring>(const Currency &amp;source, const Currency &amp;target, Date date=Date(), ExchangeRate::Type type=ExchangeRate::Derived) const</argsstring>
        <name>lookup</name>
        <qualifiedname>QuantLib::ExchangeRateManager::lookup</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_currency" kindref="compound">Currency</ref> &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_currency" kindref="compound">Currency</ref> &amp;</type>
          <declname>target</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
          <declname>date</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_exchange_rate_1ace805d2933e7462f59d32d11c0985204" kindref="member">ExchangeRate::Type</ref></type>
          <declname>type</declname>
          <defval><ref refid="class_quant_lib_1_1_exchange_rate_1ace805d2933e7462f59d32d11c0985204ae2b3cc2bea04d5f25c52e9a9676a7278" kindref="member">ExchangeRate::Derived</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Lookup the exchange rate between two currencies at a given date. If the given type is Direct, only direct exchange rates will be returned if available; if Derived, direct rates are still preferred but derived rates are allowed.</para>
<para><simplesect kind="warning"><para>if two or more exchange-rate chains are possible which allow to specify a requested rate, it is unspecified which one is returned. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/currencies/exchangeratemanager.hpp" line="65" column="22" bodyfile="ql/currencies/exchangeratemanager.cpp" bodystart="52" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_exchange_rate_manager_1aa704d7b4f6bd9c15370dbcd6f645a911" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::ExchangeRateManager::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>QuantLib::ExchangeRateManager::clear</qualifiedname>
        <briefdescription>
<para>remove the added exchange rates </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/currencies/exchangeratemanager.hpp" line="71" column="14" bodyfile="ql/currencies/exchangeratemanager.cpp" bodystart="84" bodyend="87"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>exchange-rate repository </para>
    </briefdescription>
    <detaileddescription>
<para><xrefsect id="test_1_test000002"><xreftitle>Test</xreftitle><xrefdescription><para>lookup of direct, triangulated, and derived exchange rates is tested. </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::ExchangeRateManager</label>
        <link refid="class_quant_lib_1_1_exchange_rate_manager"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Singleton&lt; ExchangeRateManager &gt;</label>
        <link refid="class_quant_lib_1_1_singleton"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::ExchangeRateManager</label>
        <link refid="class_quant_lib_1_1_exchange_rate_manager"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Singleton&lt; ExchangeRateManager &gt;</label>
        <link refid="class_quant_lib_1_1_singleton"/>
      </node>
    </collaborationgraph>
    <location file="ql/currencies/exchangeratemanager.hpp" line="41" column="5" bodyfile="ql/currencies/exchangeratemanager.hpp" bodystart="41" bodyend="97"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_exchange_rate_manager_1adece9f8b727a060611c6b57c984721ec" prot="public" virt="non-virtual"><scope>QuantLib::ExchangeRateManager</scope><name>add</name></member>
      <member refid="class_quant_lib_1_1_exchange_rate_manager_1a4440958e80dbea96699efa9aca51144c" prot="private" virt="non-virtual"><scope>QuantLib::ExchangeRateManager</scope><name>addKnownRates</name></member>
      <member refid="class_quant_lib_1_1_exchange_rate_manager_1aa704d7b4f6bd9c15370dbcd6f645a911" prot="public" virt="non-virtual"><scope>QuantLib::ExchangeRateManager</scope><name>clear</name></member>
      <member refid="class_quant_lib_1_1_exchange_rate_manager_1a4715610bfade87f1a6f81e0fd9049e4a" prot="private" virt="non-virtual"><scope>QuantLib::ExchangeRateManager</scope><name>data_</name></member>
      <member refid="class_quant_lib_1_1_exchange_rate_manager_1af0795ab1bbbd8fae78d595a9ab3ace6e" prot="private" virt="non-virtual"><scope>QuantLib::ExchangeRateManager</scope><name>directLookup</name></member>
      <member refid="class_quant_lib_1_1_exchange_rate_manager_1a872a37b6ddcc5e337c723b26dfe8b560" prot="private" virt="non-virtual"><scope>QuantLib::ExchangeRateManager</scope><name>ExchangeRateManager</name></member>
      <member refid="class_quant_lib_1_1_exchange_rate_manager_1a4bbe3d15d45419240913ada496e14829" prot="private" virt="non-virtual"><scope>QuantLib::ExchangeRateManager</scope><name>fetch</name></member>
      <member refid="class_quant_lib_1_1_exchange_rate_manager_1a3680e59efea042b4ee1c57084fd191c1" prot="private" virt="non-virtual"><scope>QuantLib::ExchangeRateManager</scope><name>hash</name></member>
      <member refid="class_quant_lib_1_1_exchange_rate_manager_1a4622812603f58beca71aa877483c51f0" prot="private" virt="non-virtual"><scope>QuantLib::ExchangeRateManager</scope><name>hashes</name></member>
      <member refid="class_quant_lib_1_1_singleton_1ac412b7766b32f56372a3e966c5f3f386" prot="public" virt="non-virtual"><scope>QuantLib::ExchangeRateManager</scope><name>instance</name></member>
      <member refid="class_quant_lib_1_1_exchange_rate_manager_1a545c0584707d32ba5eb5bf4858ecfd0a" prot="private" virt="non-virtual"><scope>QuantLib::ExchangeRateManager</scope><name>Key</name></member>
      <member refid="class_quant_lib_1_1_exchange_rate_manager_1a93c3ac7ae2364fe84a75ab061ae90cfc" prot="public" virt="non-virtual"><scope>QuantLib::ExchangeRateManager</scope><name>lookup</name></member>
      <member refid="class_quant_lib_1_1_singleton_1a9d8c762b553192d479d7ff7edb20624d" prot="public" virt="non-virtual"><scope>QuantLib::ExchangeRateManager</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_singleton_1a87afbf4a53f4a13d2b64135656dc23ba" prot="public" virt="non-virtual"><scope>QuantLib::ExchangeRateManager</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_singleton_1aec6ad8083eb125b47049a296aa078da3" prot="public" virt="non-virtual"><scope>QuantLib::ExchangeRateManager</scope><name>Singleton</name></member>
      <member refid="class_quant_lib_1_1_singleton_1adba174550e55859f5a7cf6fc060c3b24" prot="public" virt="non-virtual"><scope>QuantLib::ExchangeRateManager</scope><name>Singleton</name></member>
      <member refid="class_quant_lib_1_1_singleton_1a711b37092c979a43c38a4ac40dadd4d3" prot="protected" virt="non-virtual"><scope>QuantLib::ExchangeRateManager</scope><name>Singleton</name></member>
      <member refid="class_quant_lib_1_1_exchange_rate_manager_1aaba78e362716d89d9d8bfa9f90b15a10" prot="private" virt="non-virtual"><scope>QuantLib::ExchangeRateManager</scope><name>Singleton&lt; ExchangeRateManager &gt;</name></member>
      <member refid="class_quant_lib_1_1_exchange_rate_manager_1aca4116d247ec31181ac018cf3ced4480" prot="private" virt="non-virtual"><scope>QuantLib::ExchangeRateManager</scope><name>smartLookup</name></member>
      <member refid="class_quant_lib_1_1_singleton_1ac8b95ca8ebb2759f6dda65e3c787bc99" prot="public" virt="non-virtual"><scope>QuantLib::ExchangeRateManager</scope><name>~Singleton</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_normal_fwd_rate_pc" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::NormalFwdRatePc</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_market_model_evolver" prot="public" virt="non-virtual">QuantLib::MarketModelEvolver</basecompoundref>
    <includes refid="normalfwdratepc_8hpp" local="no">normalfwdratepc.hpp</includes>
    <sectiondef kind="user-defined">
      <header>MarketModel interface</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_normal_fwd_rate_pc_1aa0e4c1c2c00f1661137e691c07861550" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_market_model" kindref="compound">MarketModel</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;MarketModel&gt; QuantLib::NormalFwdRatePc::marketModel_</definition>
        <argsstring></argsstring>
        <name>marketModel_</name>
        <qualifiedname>QuantLib::NormalFwdRatePc::marketModel_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" line="53" column="25" bodyfile="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_normal_fwd_rate_pc_1af426e8f0435eb4268c9ed01aba8d5aa4" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &gt;</type>
        <definition>std::vector&lt;Size&gt; QuantLib::NormalFwdRatePc::numeraires_</definition>
        <argsstring></argsstring>
        <name>numeraires_</name>
        <qualifiedname>QuantLib::NormalFwdRatePc::numeraires_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" line="54" column="21" bodyfile="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_normal_fwd_rate_pc_1a108f9e808aa3f0d9540ec0eb706f6664" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::NormalFwdRatePc::initialStep_</definition>
        <argsstring></argsstring>
        <name>initialStep_</name>
        <qualifiedname>QuantLib::NormalFwdRatePc::initialStep_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" line="55" column="14" bodyfile="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_normal_fwd_rate_pc_1a297ed8e826a325ead9536205286a19e0" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_brownian_generator" kindref="compound">BrownianGenerator</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;BrownianGenerator&gt; QuantLib::NormalFwdRatePc::generator_</definition>
        <argsstring></argsstring>
        <name>generator_</name>
        <qualifiedname>QuantLib::NormalFwdRatePc::generator_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" line="56" column="25" bodyfile="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_normal_fwd_rate_pc_1a38518e238cf18b3e03ea14cdfae82472" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::NormalFwdRatePc::numberOfRates_</definition>
        <argsstring></argsstring>
        <name>numberOfRates_</name>
        <qualifiedname>QuantLib::NormalFwdRatePc::numberOfRates_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" line="58" column="14" bodyfile="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_normal_fwd_rate_pc_1a158b723a8714a59cd15e4eab67f6a547" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::NormalFwdRatePc::numberOfFactors_</definition>
        <argsstring></argsstring>
        <name>numberOfFactors_</name>
        <qualifiedname>QuantLib::NormalFwdRatePc::numberOfFactors_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" line="58" column="29" bodyfile="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_normal_fwd_rate_pc_1a60c86ae0f33732fe1a94e41f1f643112" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_l_m_m_curve_state" kindref="compound">LMMCurveState</ref></type>
        <definition>LMMCurveState QuantLib::NormalFwdRatePc::curveState_</definition>
        <argsstring></argsstring>
        <name>curveState_</name>
        <qualifiedname>QuantLib::NormalFwdRatePc::curveState_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" line="59" column="23" bodyfile="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_normal_fwd_rate_pc_1afe02827f1577d7f87e57f8427b1fc05b" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::NormalFwdRatePc::currentStep_</definition>
        <argsstring></argsstring>
        <name>currentStep_</name>
        <qualifiedname>QuantLib::NormalFwdRatePc::currentStep_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" line="60" column="14" bodyfile="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_normal_fwd_rate_pc_1a5d0dc8aac16c9181146c3daffbf72253" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>std::vector&lt;Rate&gt; QuantLib::NormalFwdRatePc::forwards_</definition>
        <argsstring></argsstring>
        <name>forwards_</name>
        <qualifiedname>QuantLib::NormalFwdRatePc::forwards_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" line="61" column="21" bodyfile="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_normal_fwd_rate_pc_1a34f73a3781428cbba6c574c7590c2021" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>std::vector&lt;Rate&gt; QuantLib::NormalFwdRatePc::initialForwards_</definition>
        <argsstring></argsstring>
        <name>initialForwards_</name>
        <qualifiedname>QuantLib::NormalFwdRatePc::initialForwards_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" line="61" column="31" bodyfile="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_normal_fwd_rate_pc_1a70aa0aafb426633a6775cc6f627db388" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::NormalFwdRatePc::drifts1_</definition>
        <argsstring></argsstring>
        <name>drifts1_</name>
        <qualifiedname>QuantLib::NormalFwdRatePc::drifts1_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" line="62" column="21" bodyfile="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_normal_fwd_rate_pc_1a5ae72afc64c998cc0dafffebb7137836" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::NormalFwdRatePc::drifts2_</definition>
        <argsstring></argsstring>
        <name>drifts2_</name>
        <qualifiedname>QuantLib::NormalFwdRatePc::drifts2_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" line="62" column="30" bodyfile="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_normal_fwd_rate_pc_1a5e7e8e6756db9f5c6ace004ac26258e3" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::NormalFwdRatePc::initialDrifts_</definition>
        <argsstring></argsstring>
        <name>initialDrifts_</name>
        <qualifiedname>QuantLib::NormalFwdRatePc::initialDrifts_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" line="62" column="39" bodyfile="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_normal_fwd_rate_pc_1ac9f7311212f0f76740d4100b695ec0b7" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::NormalFwdRatePc::brownians_</definition>
        <argsstring></argsstring>
        <name>brownians_</name>
        <qualifiedname>QuantLib::NormalFwdRatePc::brownians_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" line="63" column="21" bodyfile="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_normal_fwd_rate_pc_1a2ca5e2f5f6cb13e29d21da44ba0d3862" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::NormalFwdRatePc::correlatedBrownians_</definition>
        <argsstring></argsstring>
        <name>correlatedBrownians_</name>
        <qualifiedname>QuantLib::NormalFwdRatePc::correlatedBrownians_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" line="63" column="32" bodyfile="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_normal_fwd_rate_pc_1a5680b580d8dd8c93b0300214d153387c" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &gt;</type>
        <definition>std::vector&lt;Size&gt; QuantLib::NormalFwdRatePc::alive_</definition>
        <argsstring></argsstring>
        <name>alive_</name>
        <qualifiedname>QuantLib::NormalFwdRatePc::alive_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" line="64" column="21" bodyfile="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_normal_fwd_rate_pc_1af451ad6ff6b615a539d190d36fe497b1" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_quant_lib_1_1_l_m_m_normal_drift_calculator" kindref="compound">LMMNormalDriftCalculator</ref> &gt;</type>
        <definition>std::vector&lt;LMMNormalDriftCalculator&gt; QuantLib::NormalFwdRatePc::calculators_</definition>
        <argsstring></argsstring>
        <name>calculators_</name>
        <qualifiedname>QuantLib::NormalFwdRatePc::calculators_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" line="66" column="21" bodyfile="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_normal_fwd_rate_pc_1a30021bf699e3aa05ad63bbd30ce838ec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const std::vector&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; Size &gt; &amp; QuantLib::NormalFwdRatePc::numeraires</definition>
        <argsstring>() const override</argsstring>
        <name>numeraires</name>
        <qualifiedname>QuantLib::NormalFwdRatePc::numeraires</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_market_model_evolver_1a2e1bd04073ea86eaaba5dce33054a8f3">numeraires</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" line="43" column="27" bodyfile="ql/models/marketmodels/evolvers/normalfwdratepc.cpp" bodystart="72" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_normal_fwd_rate_pc_1ab0dcd2d4fcbe0527f0269ca54c5ed72f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::NormalFwdRatePc::startNewPath</definition>
        <argsstring>() override</argsstring>
        <name>startNewPath</name>
        <qualifiedname>QuantLib::NormalFwdRatePc::startNewPath</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_market_model_evolver_1ac3e6d22e472d5c1c895d8f96be60560b">startNewPath</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" line="44" column="14" bodyfile="ql/models/marketmodels/evolvers/normalfwdratepc.cpp" bodystart="88" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_normal_fwd_rate_pc_1a2efdeaa93daa9cd242176f4425764849" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::NormalFwdRatePc::advanceStep</definition>
        <argsstring>() override</argsstring>
        <name>advanceStep</name>
        <qualifiedname>QuantLib::NormalFwdRatePc::advanceStep</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_market_model_evolver_1a90dd9c52516481852ab41fac2ff1f8ed">advanceStep</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" line="45" column="14" bodyfile="ql/models/marketmodels/evolvers/normalfwdratepc.cpp" bodystart="95" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_normal_fwd_rate_pc_1a8e4c76627ee93e760032f90f8a1ccdb5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::NormalFwdRatePc::currentStep</definition>
        <argsstring>() const override</argsstring>
        <name>currentStep</name>
        <qualifiedname>QuantLib::NormalFwdRatePc::currentStep</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_market_model_evolver_1a2be55f5ae47935053388065c4585d6ee">currentStep</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" line="46" column="14" bodyfile="ql/models/marketmodels/evolvers/normalfwdratepc.cpp" bodystart="135" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_normal_fwd_rate_pc_1a878b7ea24d8ee5e3ca3423f9a3ecaadb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="class_quant_lib_1_1_curve_state" kindref="compound">CurveState</ref> &amp;</type>
        <definition>const CurveState &amp; QuantLib::NormalFwdRatePc::currentState</definition>
        <argsstring>() const override</argsstring>
        <name>currentState</name>
        <qualifiedname>QuantLib::NormalFwdRatePc::currentState</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_market_model_evolver_1a85322ec6252a5431b2fa141f3fc4f976">currentState</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" line="47" column="26" bodyfile="ql/models/marketmodels/evolvers/normalfwdratepc.cpp" bodystart="139" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_normal_fwd_rate_pc_1acd036d600bbec440a66219f4da5a2aa5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::NormalFwdRatePc::setInitialState</definition>
        <argsstring>(const CurveState &amp;) override</argsstring>
        <name>setInitialState</name>
        <qualifiedname>QuantLib::NormalFwdRatePc::setInitialState</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_market_model_evolver_1a2252b21184f50dfd1c405ea8c156032f">setInitialState</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_curve_state" kindref="compound">CurveState</ref> &amp;</type>
          <defname>cs</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" line="48" column="14" bodyfile="ql/models/marketmodels/evolvers/normalfwdratepc.cpp" bodystart="84" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_normal_fwd_rate_pc_1ab8a6ead4345ab55dee2b791cce1eb08d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::NormalFwdRatePc::setForwards</definition>
        <argsstring>(const std::vector&lt; Real &gt; &amp;forwards)</argsstring>
        <name>setForwards</name>
        <qualifiedname>QuantLib::NormalFwdRatePc::setForwards</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>forwards</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" line="51" column="14" bodyfile="ql/models/marketmodels/evolvers/normalfwdratepc.cpp" bodystart="76" bodyend="82"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_normal_fwd_rate_pc_1ae81cefa08b720fdba7c24578b5511286" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::NormalFwdRatePc::NormalFwdRatePc</definition>
        <argsstring>(const ext::shared_ptr&lt; MarketModel &gt; &amp;, const BrownianGeneratorFactory &amp;, const std::vector&lt; Size &gt; &amp;numeraires, Size initialStep=0)</argsstring>
        <name>NormalFwdRatePc</name>
        <qualifiedname>QuantLib::NormalFwdRatePc::NormalFwdRatePc</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_market_model" kindref="compound">MarketModel</ref> &gt; &amp;</type>
          <defname>marketModel</defname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_brownian_generator_factory" kindref="compound">BrownianGeneratorFactory</ref> &amp;</type>
          <defname>factory</defname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &gt; &amp;</type>
          <declname>numeraires</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>initialStep</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" line="37" column="9" bodyfile="ql/models/marketmodels/evolvers/normalfwdratepc.cpp" bodystart="29" bodyend="70"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Predictor-Corrector. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::MarketModelEvolver</label>
        <link refid="class_quant_lib_1_1_market_model_evolver"/>
      </node>
      <node id="1">
        <label>QuantLib::NormalFwdRatePc</label>
        <link refid="class_quant_lib_1_1_normal_fwd_rate_pc"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::MarketModelEvolver</label>
        <link refid="class_quant_lib_1_1_market_model_evolver"/>
      </node>
      <node id="1">
        <label>QuantLib::NormalFwdRatePc</label>
        <link refid="class_quant_lib_1_1_normal_fwd_rate_pc"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" line="35" column="5" bodyfile="ql/models/marketmodels/evolvers/normalfwdratepc.hpp" bodystart="35" bodyend="67"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_normal_fwd_rate_pc_1a2efdeaa93daa9cd242176f4425764849" prot="public" virt="virtual"><scope>QuantLib::NormalFwdRatePc</scope><name>advanceStep</name></member>
      <member refid="class_quant_lib_1_1_normal_fwd_rate_pc_1a5680b580d8dd8c93b0300214d153387c" prot="private" virt="non-virtual"><scope>QuantLib::NormalFwdRatePc</scope><name>alive_</name></member>
      <member refid="class_quant_lib_1_1_normal_fwd_rate_pc_1ac9f7311212f0f76740d4100b695ec0b7" prot="private" virt="non-virtual"><scope>QuantLib::NormalFwdRatePc</scope><name>brownians_</name></member>
      <member refid="class_quant_lib_1_1_normal_fwd_rate_pc_1af451ad6ff6b615a539d190d36fe497b1" prot="private" virt="non-virtual"><scope>QuantLib::NormalFwdRatePc</scope><name>calculators_</name></member>
      <member refid="class_quant_lib_1_1_normal_fwd_rate_pc_1a2ca5e2f5f6cb13e29d21da44ba0d3862" prot="private" virt="non-virtual"><scope>QuantLib::NormalFwdRatePc</scope><name>correlatedBrownians_</name></member>
      <member refid="class_quant_lib_1_1_normal_fwd_rate_pc_1a878b7ea24d8ee5e3ca3423f9a3ecaadb" prot="public" virt="virtual"><scope>QuantLib::NormalFwdRatePc</scope><name>currentState</name></member>
      <member refid="class_quant_lib_1_1_normal_fwd_rate_pc_1a8e4c76627ee93e760032f90f8a1ccdb5" prot="public" virt="virtual"><scope>QuantLib::NormalFwdRatePc</scope><name>currentStep</name></member>
      <member refid="class_quant_lib_1_1_normal_fwd_rate_pc_1afe02827f1577d7f87e57f8427b1fc05b" prot="private" virt="non-virtual"><scope>QuantLib::NormalFwdRatePc</scope><name>currentStep_</name></member>
      <member refid="class_quant_lib_1_1_normal_fwd_rate_pc_1a60c86ae0f33732fe1a94e41f1f643112" prot="private" virt="non-virtual"><scope>QuantLib::NormalFwdRatePc</scope><name>curveState_</name></member>
      <member refid="class_quant_lib_1_1_normal_fwd_rate_pc_1a70aa0aafb426633a6775cc6f627db388" prot="private" virt="non-virtual"><scope>QuantLib::NormalFwdRatePc</scope><name>drifts1_</name></member>
      <member refid="class_quant_lib_1_1_normal_fwd_rate_pc_1a5ae72afc64c998cc0dafffebb7137836" prot="private" virt="non-virtual"><scope>QuantLib::NormalFwdRatePc</scope><name>drifts2_</name></member>
      <member refid="class_quant_lib_1_1_normal_fwd_rate_pc_1a5d0dc8aac16c9181146c3daffbf72253" prot="private" virt="non-virtual"><scope>QuantLib::NormalFwdRatePc</scope><name>forwards_</name></member>
      <member refid="class_quant_lib_1_1_normal_fwd_rate_pc_1a297ed8e826a325ead9536205286a19e0" prot="private" virt="non-virtual"><scope>QuantLib::NormalFwdRatePc</scope><name>generator_</name></member>
      <member refid="class_quant_lib_1_1_normal_fwd_rate_pc_1a5e7e8e6756db9f5c6ace004ac26258e3" prot="private" virt="non-virtual"><scope>QuantLib::NormalFwdRatePc</scope><name>initialDrifts_</name></member>
      <member refid="class_quant_lib_1_1_normal_fwd_rate_pc_1a34f73a3781428cbba6c574c7590c2021" prot="private" virt="non-virtual"><scope>QuantLib::NormalFwdRatePc</scope><name>initialForwards_</name></member>
      <member refid="class_quant_lib_1_1_normal_fwd_rate_pc_1a108f9e808aa3f0d9540ec0eb706f6664" prot="private" virt="non-virtual"><scope>QuantLib::NormalFwdRatePc</scope><name>initialStep_</name></member>
      <member refid="class_quant_lib_1_1_normal_fwd_rate_pc_1aa0e4c1c2c00f1661137e691c07861550" prot="private" virt="non-virtual"><scope>QuantLib::NormalFwdRatePc</scope><name>marketModel_</name></member>
      <member refid="class_quant_lib_1_1_normal_fwd_rate_pc_1ae81cefa08b720fdba7c24578b5511286" prot="public" virt="non-virtual"><scope>QuantLib::NormalFwdRatePc</scope><name>NormalFwdRatePc</name></member>
      <member refid="class_quant_lib_1_1_normal_fwd_rate_pc_1a158b723a8714a59cd15e4eab67f6a547" prot="private" virt="non-virtual"><scope>QuantLib::NormalFwdRatePc</scope><name>numberOfFactors_</name></member>
      <member refid="class_quant_lib_1_1_normal_fwd_rate_pc_1a38518e238cf18b3e03ea14cdfae82472" prot="private" virt="non-virtual"><scope>QuantLib::NormalFwdRatePc</scope><name>numberOfRates_</name></member>
      <member refid="class_quant_lib_1_1_normal_fwd_rate_pc_1a30021bf699e3aa05ad63bbd30ce838ec" prot="public" virt="virtual"><scope>QuantLib::NormalFwdRatePc</scope><name>numeraires</name></member>
      <member refid="class_quant_lib_1_1_normal_fwd_rate_pc_1af426e8f0435eb4268c9ed01aba8d5aa4" prot="private" virt="non-virtual"><scope>QuantLib::NormalFwdRatePc</scope><name>numeraires_</name></member>
      <member refid="class_quant_lib_1_1_normal_fwd_rate_pc_1ab8a6ead4345ab55dee2b791cce1eb08d" prot="private" virt="non-virtual"><scope>QuantLib::NormalFwdRatePc</scope><name>setForwards</name></member>
      <member refid="class_quant_lib_1_1_normal_fwd_rate_pc_1acd036d600bbec440a66219f4da5a2aa5" prot="public" virt="virtual"><scope>QuantLib::NormalFwdRatePc</scope><name>setInitialState</name></member>
      <member refid="class_quant_lib_1_1_normal_fwd_rate_pc_1ab0dcd2d4fcbe0527f0269ca54c5ed72f" prot="public" virt="virtual"><scope>QuantLib::NormalFwdRatePc</scope><name>startNewPath</name></member>
      <member refid="class_quant_lib_1_1_market_model_evolver_1a782e4b9aa708219798ec7a83de8bd84c" prot="public" virt="virtual"><scope>QuantLib::NormalFwdRatePc</scope><name>~MarketModelEvolver</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

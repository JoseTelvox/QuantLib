<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::FireflyAlgorithm::RandomWalk</compoundname>
    <derivedcompoundref refid="class_quant_lib_1_1_distribution_random_walk" prot="public" virt="non-virtual">QuantLib::DistributionRandomWalk&lt; std::normal_distribution&lt; QuantLib::Real &gt; &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_distribution_random_walk" prot="public" virt="non-virtual">QuantLib::DistributionRandomWalk&lt; LevyFlightDistribution &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_distribution_random_walk" prot="public" virt="non-virtual">QuantLib::DistributionRandomWalk&lt; Distribution &gt;</derivedcompoundref>
    <includes refid="fireflyalgorithm_8hpp" local="no">fireflyalgorithm.hpp</includes>
    <sectiondef kind="friend">
      <memberdef kind="friend" id="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk_1a786d525daec6dabd068a066f0b5557ab" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>class</type>
        <definition>friend class FireflyAlgorithm</definition>
        <argsstring></argsstring>
        <name>FireflyAlgorithm</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::RandomWalk::FireflyAlgorithm</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_firefly_algorithm" kindref="compound">FireflyAlgorithm</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="174" column="22" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="174" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk_1af539c9fc74ef3d334c2ac205efd83da7" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::FireflyAlgorithm::RandomWalk::Mfa_</definition>
        <argsstring></argsstring>
        <name>Mfa_</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::RandomWalk::Mfa_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="184" column="14" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk_1aa323e9b50b9c17a5b3ab514ec5ccb51d" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::FireflyAlgorithm::RandomWalk::N_</definition>
        <argsstring></argsstring>
        <name>N_</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::RandomWalk::N_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="184" column="19" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk_1a874fc53d85da5bb7fed68b71b642afd1" prot="protected" static="no" mutable="no">
        <type>const std::vector&lt; <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &gt; *</type>
        <definition>const std::vector&lt;Array&gt;* QuantLib::FireflyAlgorithm::RandomWalk::x_</definition>
        <argsstring></argsstring>
        <name>x_</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::RandomWalk::x_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="185" column="27" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk_1ab5d3a34c5569d8c379baeb29352e1dba" prot="protected" static="no" mutable="no">
        <type>const std::vector&lt; std::pair&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>, <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &gt; &gt; *</type>
        <definition>const std::vector&lt;std::pair&lt;Real, Size&gt; &gt;* QuantLib::FireflyAlgorithm::RandomWalk::values_</definition>
        <argsstring></argsstring>
        <name>values_</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::RandomWalk::values_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="186" column="27" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="186" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk_1a39c7932b597aca42c993fc08b55ccdde" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &gt; *</type>
        <definition>std::vector&lt;Array&gt;* QuantLib::FireflyAlgorithm::RandomWalk::xRW_</definition>
        <argsstring></argsstring>
        <name>xRW_</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::RandomWalk::xRW_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="187" column="21" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk_1a6b9209a244c6efb00e5ff642d7ac117c" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> *</type>
        <definition>Array* QuantLib::FireflyAlgorithm::RandomWalk::lX_</definition>
        <argsstring></argsstring>
        <name>lX_</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::RandomWalk::lX_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="188" column="15" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk_1a03bebd9542062e4ea67620fe99adcf4f" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> *</type>
        <definition>Array * QuantLib::FireflyAlgorithm::RandomWalk::uX_</definition>
        <argsstring></argsstring>
        <name>uX_</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::RandomWalk::uX_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="188" column="19" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="188" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk_1a33948be8f6665f2ebc8fd4a905e48f71" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual QuantLib::FireflyAlgorithm::RandomWalk::~RandomWalk</definition>
        <argsstring>()=default</argsstring>
        <name>~RandomWalk</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::RandomWalk::~RandomWalk</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="176" column="15"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk_1adb169853f01232d316b986f099e62d16" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::FireflyAlgorithm::RandomWalk::walk</definition>
        <argsstring>()</argsstring>
        <name>walk</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::RandomWalk::walk</qualifiedname>
        <briefdescription>
<para>perform random walk </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="178" column="12" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="178" bodyend="182"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk_1ade9601ee6ba1ae4fc8fb31d655df03ae" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void QuantLib::FireflyAlgorithm::RandomWalk::walkImpl</definition>
        <argsstring>(Array &amp;xRW)=0</argsstring>
        <name>walkImpl</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::RandomWalk::walkImpl</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_decreasing_gaussian_walk_1a442dd059e27043c9bbd0abf5ee5974e5">walkImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_distribution_random_walk_1a377cff24f6b5de8602c31dc17f33d111">walkImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_distribution_random_walk_1a377cff24f6b5de8602c31dc17f33d111">walkImpl</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_distribution_random_walk_1a377cff24f6b5de8602c31dc17f33d111">walkImpl</reimplementedby>
        <param>
          <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>xRW</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="190" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk_1ae3213c9f3a716687e18710e2618da6c5" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void QuantLib::FireflyAlgorithm::RandomWalk::init</definition>
        <argsstring>(FireflyAlgorithm *fa)</argsstring>
        <name>init</name>
        <qualifiedname>QuantLib::FireflyAlgorithm::RandomWalk::init</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_decreasing_gaussian_walk_1ad82f1329ce4171910a3f508877c8e682">init</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_distribution_random_walk_1a4bdab33f732218965bdaf4239df4a4d8">init</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_distribution_random_walk_1a4bdab33f732218965bdaf4239df4a4d8">init</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_distribution_random_walk_1a4bdab33f732218965bdaf4239df4a4d8">init</reimplementedby>
        <param>
          <type><ref refid="class_quant_lib_1_1_firefly_algorithm" kindref="compound">FireflyAlgorithm</ref> *</type>
          <declname>fa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/fireflyalgorithm.hpp" line="191" column="22" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="191" bodyend="199"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Base Random Walk class. </para>
    </briefdescription>
    <detaileddescription>
<para>Derived classes need to implement only walkImpl </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="4">
        <label>QuantLib::DecreasingGaussianWalk</label>
        <link refid="class_quant_lib_1_1_decreasing_gaussian_walk"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::DistributionRandomWalk&lt; Distribution &gt;</label>
        <link refid="class_quant_lib_1_1_distribution_random_walk"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::DistributionRandomWalk&lt; LevyFlightDistribution &gt;</label>
        <link refid="class_quant_lib_1_1_distribution_random_walk"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::DistributionRandomWalk&lt; std::normal_distribution&lt; QuantLib::Real &gt; &gt;</label>
        <link refid="class_quant_lib_1_1_distribution_random_walk"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::FireflyAlgorithm::RandomWalk</label>
        <link refid="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk"/>
      </node>
      <node id="3">
        <label>QuantLib::GaussianWalk</label>
        <link refid="class_quant_lib_1_1_gaussian_walk"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::LevyFlightWalk</label>
        <link refid="class_quant_lib_1_1_levy_flight_walk"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::Array</label>
        <link refid="class_quant_lib_1_1_array"/>
      </node>
      <node id="1">
        <label>QuantLib::FireflyAlgorithm::RandomWalk</label>
        <link refid="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk"/>
        <childnode refid="2" relation="usage">
          <edgelabel>lX_</edgelabel>
          <edgelabel>uX_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/math/fireflyalgorithm.hpp" line="173" column="5" bodyfile="ql/experimental/math/fireflyalgorithm.hpp" bodystart="173" bodyend="200"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk_1a786d525daec6dabd068a066f0b5557ab" prot="private" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm::RandomWalk</scope><name>FireflyAlgorithm</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk_1ae3213c9f3a716687e18710e2618da6c5" prot="protected" virt="virtual"><scope>QuantLib::FireflyAlgorithm::RandomWalk</scope><name>init</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk_1a6b9209a244c6efb00e5ff642d7ac117c" prot="protected" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm::RandomWalk</scope><name>lX_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk_1af539c9fc74ef3d334c2ac205efd83da7" prot="protected" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm::RandomWalk</scope><name>Mfa_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk_1aa323e9b50b9c17a5b3ab514ec5ccb51d" prot="protected" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm::RandomWalk</scope><name>N_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk_1a03bebd9542062e4ea67620fe99adcf4f" prot="protected" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm::RandomWalk</scope><name>uX_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk_1ab5d3a34c5569d8c379baeb29352e1dba" prot="protected" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm::RandomWalk</scope><name>values_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk_1adb169853f01232d316b986f099e62d16" prot="public" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm::RandomWalk</scope><name>walk</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk_1ade9601ee6ba1ae4fc8fb31d655df03ae" prot="protected" virt="pure-virtual"><scope>QuantLib::FireflyAlgorithm::RandomWalk</scope><name>walkImpl</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk_1a874fc53d85da5bb7fed68b71b642afd1" prot="protected" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm::RandomWalk</scope><name>x_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk_1a39c7932b597aca42c993fc08b55ccdde" prot="protected" virt="non-virtual"><scope>QuantLib::FireflyAlgorithm::RandomWalk</scope><name>xRW_</name></member>
      <member refid="class_quant_lib_1_1_firefly_algorithm_1_1_random_walk_1a33948be8f6665f2ebc8fd4a905e48f71" prot="public" virt="virtual"><scope>QuantLib::FireflyAlgorithm::RandomWalk</scope><name>~RandomWalk</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

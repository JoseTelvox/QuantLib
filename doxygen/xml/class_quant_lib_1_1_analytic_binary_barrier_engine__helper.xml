<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_analytic_binary_barrier_engine__helper" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::AnalyticBinaryBarrierEngine_helper</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_binary_barrier_engine__helper_1a4da845918ced3ad9d9b5f4d8cbb0f486" prot="private" static="no" mutable="no">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_generalized_black_scholes_process" kindref="compound">GeneralizedBlackScholesProcess</ref> &gt; &amp;</type>
        <definition>const ext::shared_ptr&lt;GeneralizedBlackScholesProcess&gt;&amp; QuantLib::AnalyticBinaryBarrierEngine_helper::process_</definition>
        <argsstring></argsstring>
        <name>process_</name>
        <qualifiedname>QuantLib::AnalyticBinaryBarrierEngine_helper::process_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/barrier/analyticbinarybarrierengine.cpp" line="48" column="31" bodyfile="ql/pricingengines/barrier/analyticbinarybarrierengine.cpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_binary_barrier_engine__helper_1ac0becbb7edc624367e198c3bafb8f843" prot="private" static="no" mutable="no">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_striked_type_payoff" kindref="compound">StrikedTypePayoff</ref> &gt; &amp;</type>
        <definition>const ext::shared_ptr&lt;StrikedTypePayoff&gt;&amp; QuantLib::AnalyticBinaryBarrierEngine_helper::payoff_</definition>
        <argsstring></argsstring>
        <name>payoff_</name>
        <qualifiedname>QuantLib::AnalyticBinaryBarrierEngine_helper::payoff_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/barrier/analyticbinarybarrierengine.cpp" line="49" column="31" bodyfile="ql/pricingengines/barrier/analyticbinarybarrierengine.cpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_binary_barrier_engine__helper_1a0dd0860640a2917070e985483da440fa" prot="private" static="no" mutable="no">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_american_exercise" kindref="compound">AmericanExercise</ref> &gt; &amp;</type>
        <definition>const ext::shared_ptr&lt;AmericanExercise&gt;&amp; QuantLib::AnalyticBinaryBarrierEngine_helper::exercise_</definition>
        <argsstring></argsstring>
        <name>exercise_</name>
        <qualifiedname>QuantLib::AnalyticBinaryBarrierEngine_helper::exercise_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/barrier/analyticbinarybarrierengine.cpp" line="50" column="31" bodyfile="ql/pricingengines/barrier/analyticbinarybarrierengine.cpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_binary_barrier_engine__helper_1aa02e18559cede3651c14da97d1951261" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_quant_lib_1_1_barrier_option_1_1arguments" kindref="compound">BarrierOption::arguments</ref> &amp;</type>
        <definition>const BarrierOption::arguments&amp; QuantLib::AnalyticBinaryBarrierEngine_helper::arguments_</definition>
        <argsstring></argsstring>
        <name>arguments_</name>
        <qualifiedname>QuantLib::AnalyticBinaryBarrierEngine_helper::arguments_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/barrier/analyticbinarybarrierengine.cpp" line="51" column="40" bodyfile="ql/pricingengines/barrier/analyticbinarybarrierengine.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_binary_barrier_engine__helper_1ab56cf5461e0e97a2ef6d098bac1564a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::AnalyticBinaryBarrierEngine_helper::AnalyticBinaryBarrierEngine_helper</definition>
        <argsstring>(const ext::shared_ptr&lt; GeneralizedBlackScholesProcess &gt; &amp;process, const ext::shared_ptr&lt; StrikedTypePayoff &gt; &amp;payoff, const ext::shared_ptr&lt; AmericanExercise &gt; &amp;exercise, const BarrierOption::arguments &amp;arguments)</argsstring>
        <name>AnalyticBinaryBarrierEngine_helper</name>
        <qualifiedname>QuantLib::AnalyticBinaryBarrierEngine_helper::AnalyticBinaryBarrierEngine_helper</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_generalized_black_scholes_process" kindref="compound">GeneralizedBlackScholesProcess</ref> &gt; &amp;</type>
          <declname>process</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_striked_type_payoff" kindref="compound">StrikedTypePayoff</ref> &gt; &amp;</type>
          <declname>payoff</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_american_exercise" kindref="compound">AmericanExercise</ref> &gt; &amp;</type>
          <declname>exercise</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_barrier_option_1_1arguments" kindref="compound">BarrierOption::arguments</ref> &amp;</type>
          <declname>arguments</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/barrier/analyticbinarybarrierengine.cpp" line="34" column="9" bodyfile="ql/pricingengines/barrier/analyticbinarybarrierengine.cpp" bodystart="34" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_binary_barrier_engine__helper_1a9956d7fc215cc3f3b0402d3ab6a6aac6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticBinaryBarrierEngine_helper::payoffAtExpiry</definition>
        <argsstring>(Real spot, Real variance, Real discount)</argsstring>
        <name>payoffAtExpiry</name>
        <qualifiedname>QuantLib::AnalyticBinaryBarrierEngine_helper::payoffAtExpiry</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>spot</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>variance</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>discount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/barrier/analyticbinarybarrierengine.cpp" line="46" column="14" bodyfile="ql/pricingengines/barrier/analyticbinarybarrierengine.cpp" bodystart="131" bodyend="319"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/pricingengines/barrier/analyticbinarybarrierengine.cpp" line="30" column="5" bodyfile="ql/pricingengines/barrier/analyticbinarybarrierengine.cpp" bodystart="31" bodyend="52"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_analytic_binary_barrier_engine__helper_1ab56cf5461e0e97a2ef6d098bac1564a0" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticBinaryBarrierEngine_helper</scope><name>AnalyticBinaryBarrierEngine_helper</name></member>
      <member refid="class_quant_lib_1_1_analytic_binary_barrier_engine__helper_1aa02e18559cede3651c14da97d1951261" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticBinaryBarrierEngine_helper</scope><name>arguments_</name></member>
      <member refid="class_quant_lib_1_1_analytic_binary_barrier_engine__helper_1a0dd0860640a2917070e985483da440fa" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticBinaryBarrierEngine_helper</scope><name>exercise_</name></member>
      <member refid="class_quant_lib_1_1_analytic_binary_barrier_engine__helper_1ac0becbb7edc624367e198c3bafb8f843" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticBinaryBarrierEngine_helper</scope><name>payoff_</name></member>
      <member refid="class_quant_lib_1_1_analytic_binary_barrier_engine__helper_1a9956d7fc215cc3f3b0402d3ab6a6aac6" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticBinaryBarrierEngine_helper</scope><name>payoffAtExpiry</name></member>
      <member refid="class_quant_lib_1_1_analytic_binary_barrier_engine__helper_1a4da845918ced3ad9d9b5f4d8cbb0f486" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticBinaryBarrierEngine_helper</scope><name>process_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

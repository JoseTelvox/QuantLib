<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_discretized_convertible" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::DiscretizedConvertible</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_discretized_asset" prot="public" virt="non-virtual">QuantLib::DiscretizedAsset</basecompoundref>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_discretized_convertible_1a0bdf5725ee938629becc638c6b4e9c58" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::DiscretizedConvertible::conversionProbability_</definition>
        <argsstring></argsstring>
        <name>conversionProbability_</name>
        <qualifiedname>QuantLib::DiscretizedConvertible::conversionProbability_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/bond/discretizedconvertible.hpp" line="68" column="15" bodyfile="ql/pricingengines/bond/discretizedconvertible.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_discretized_convertible_1a354a3d2df079861e4cecfe23697c5131" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::DiscretizedConvertible::spreadAdjustedRate_</definition>
        <argsstring></argsstring>
        <name>spreadAdjustedRate_</name>
        <qualifiedname>QuantLib::DiscretizedConvertible::spreadAdjustedRate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/bond/discretizedconvertible.hpp" line="68" column="38" bodyfile="ql/pricingengines/bond/discretizedconvertible.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_discretized_convertible_1a4355f0eb60be9e201ba1303cd8976aa1" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::DiscretizedConvertible::dividendValues_</definition>
        <argsstring></argsstring>
        <name>dividendValues_</name>
        <qualifiedname>QuantLib::DiscretizedConvertible::dividendValues_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/bond/discretizedconvertible.hpp" line="68" column="58" bodyfile="ql/pricingengines/bond/discretizedconvertible.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_discretized_convertible_1ae034bf0ae0ffc90c8b456b08214b3a8f" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_convertible_bond_1_1arguments" kindref="compound">ConvertibleBond::arguments</ref></type>
        <definition>ConvertibleBond::arguments QuantLib::DiscretizedConvertible::arguments_</definition>
        <argsstring></argsstring>
        <name>arguments_</name>
        <qualifiedname>QuantLib::DiscretizedConvertible::arguments_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/bond/discretizedconvertible.hpp" line="75" column="36" bodyfile="ql/pricingengines/bond/discretizedconvertible.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_discretized_convertible_1a6eca4f4098e5d1f9921f057838ab7d88" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_generalized_black_scholes_process" kindref="compound">GeneralizedBlackScholesProcess</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;GeneralizedBlackScholesProcess&gt; QuantLib::DiscretizedConvertible::process_</definition>
        <argsstring></argsstring>
        <name>process_</name>
        <qualifiedname>QuantLib::DiscretizedConvertible::process_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/bond/discretizedconvertible.hpp" line="76" column="25" bodyfile="ql/pricingengines/bond/discretizedconvertible.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_discretized_convertible_1ae3f03435443ee355c964c2bd6a32f1cd" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;</type>
        <definition>std::vector&lt;Time&gt; QuantLib::DiscretizedConvertible::stoppingTimes_</definition>
        <argsstring></argsstring>
        <name>stoppingTimes_</name>
        <qualifiedname>QuantLib::DiscretizedConvertible::stoppingTimes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/bond/discretizedconvertible.hpp" line="77" column="21" bodyfile="ql/pricingengines/bond/discretizedconvertible.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_discretized_convertible_1ab3d97c68f975f80c4c1d7ddf81162cf1" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;</type>
        <definition>std::vector&lt;Time&gt; QuantLib::DiscretizedConvertible::callabilityTimes_</definition>
        <argsstring></argsstring>
        <name>callabilityTimes_</name>
        <qualifiedname>QuantLib::DiscretizedConvertible::callabilityTimes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/bond/discretizedconvertible.hpp" line="78" column="21" bodyfile="ql/pricingengines/bond/discretizedconvertible.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_discretized_convertible_1ada5ff97ee298fd7b6f5265d60ee4a002" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;</type>
        <definition>std::vector&lt;Time&gt; QuantLib::DiscretizedConvertible::couponTimes_</definition>
        <argsstring></argsstring>
        <name>couponTimes_</name>
        <qualifiedname>QuantLib::DiscretizedConvertible::couponTimes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/bond/discretizedconvertible.hpp" line="79" column="21" bodyfile="ql/pricingengines/bond/discretizedconvertible.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_discretized_convertible_1ac353664421567ff873c21b041405039b" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::DiscretizedConvertible::couponAmounts_</definition>
        <argsstring></argsstring>
        <name>couponAmounts_</name>
        <qualifiedname>QuantLib::DiscretizedConvertible::couponAmounts_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/bond/discretizedconvertible.hpp" line="80" column="21" bodyfile="ql/pricingengines/bond/discretizedconvertible.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_discretized_convertible_1ac9fc5784f72e12b19f68187d719d2111" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;</type>
        <definition>std::vector&lt;Time&gt; QuantLib::DiscretizedConvertible::dividendTimes_</definition>
        <argsstring></argsstring>
        <name>dividendTimes_</name>
        <qualifiedname>QuantLib::DiscretizedConvertible::dividendTimes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/bond/discretizedconvertible.hpp" line="81" column="21" bodyfile="ql/pricingengines/bond/discretizedconvertible.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_discretized_convertible_1a46a322d314c11d09b3fb48abfcb4f424" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
        <definition>Handle&lt;Quote&gt; QuantLib::DiscretizedConvertible::creditSpread_</definition>
        <argsstring></argsstring>
        <name>creditSpread_</name>
        <qualifiedname>QuantLib::DiscretizedConvertible::creditSpread_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/bond/discretizedconvertible.hpp" line="82" column="16" bodyfile="ql/pricingengines/bond/discretizedconvertible.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_discretized_convertible_1a2274f745a5b19ecbacb918d729f6f170" prot="private" static="no" mutable="no">
        <type>DividendSchedule</type>
        <definition>DividendSchedule QuantLib::DiscretizedConvertible::dividends_</definition>
        <argsstring></argsstring>
        <name>dividends_</name>
        <qualifiedname>QuantLib::DiscretizedConvertible::dividends_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/bond/discretizedconvertible.hpp" line="83" column="26" bodyfile="ql/pricingengines/bond/discretizedconvertible.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_discretized_convertible_1aa9af9c8ae86e413c9dca1fd4b9bf77aa" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &gt;</type>
        <definition>std::vector&lt;Date&gt; QuantLib::DiscretizedConvertible::dividendDates_</definition>
        <argsstring></argsstring>
        <name>dividendDates_</name>
        <qualifiedname>QuantLib::DiscretizedConvertible::dividendDates_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/bond/discretizedconvertible.hpp" line="84" column="21" bodyfile="ql/pricingengines/bond/discretizedconvertible.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_convertible_1a514be4193337ea6be1a09df4d9fcf817" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::DiscretizedConvertible::DiscretizedConvertible</definition>
        <argsstring>(ConvertibleBond::arguments, ext::shared_ptr&lt; GeneralizedBlackScholesProcess &gt; process, DividendSchedule dividends, Handle&lt; Quote &gt; creditSpread, const TimeGrid &amp;grid=TimeGrid())</argsstring>
        <name>DiscretizedConvertible</name>
        <qualifiedname>QuantLib::DiscretizedConvertible::DiscretizedConvertible</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_convertible_bond_1_1arguments" kindref="compound">ConvertibleBond::arguments</ref></type>
          <defname>args</defname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_generalized_black_scholes_process" kindref="compound">GeneralizedBlackScholesProcess</ref> &gt;</type>
          <declname>process</declname>
        </param>
        <param>
          <type>DividendSchedule</type>
          <declname>dividends</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
          <declname>creditSpread</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_time_grid" kindref="compound">TimeGrid</ref> &amp;</type>
          <declname>grid</declname>
          <defval><ref refid="class_quant_lib_1_1_time_grid" kindref="compound">TimeGrid</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/bond/discretizedconvertible.hpp" line="36" column="9" bodyfile="ql/pricingengines/bond/discretizedconvertible.cpp" bodystart="28" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_convertible_1abfc864f5b65b05585147d311f463853a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::DiscretizedConvertible::reset</definition>
        <argsstring>(Size size) override</argsstring>
        <name>reset</name>
        <qualifiedname>QuantLib::DiscretizedConvertible::reset</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_discretized_asset_1a564cea41e833b0f86e4bbbfca26274bc">reset</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method should initialize the asset values to an <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> of the given size and with values depending on the particular asset. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/bond/discretizedconvertible.hpp" line="42" column="14" bodyfile="ql/pricingengines/bond/discretizedconvertible.cpp" bodystart="100" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_convertible_1a0759d05c6b2df0af7908bde6bb651c07" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
        <definition>const Array &amp; QuantLib::DiscretizedConvertible::conversionProbability</definition>
        <argsstring>() const</argsstring>
        <name>conversionProbability</name>
        <qualifiedname>QuantLib::DiscretizedConvertible::conversionProbability</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/bond/discretizedconvertible.hpp" line="44" column="21" bodyfile="ql/pricingengines/bond/discretizedconvertible.hpp" bodystart="44" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_convertible_1aeeaff07b3be9e58c46028fbe4b5185d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
        <definition>Array &amp; QuantLib::DiscretizedConvertible::conversionProbability</definition>
        <argsstring>()</argsstring>
        <name>conversionProbability</name>
        <qualifiedname>QuantLib::DiscretizedConvertible::conversionProbability</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/bond/discretizedconvertible.hpp" line="47" column="15" bodyfile="ql/pricingengines/bond/discretizedconvertible.hpp" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_convertible_1a621164fc8112ed6126d6a278e213c94a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
        <definition>const Array &amp; QuantLib::DiscretizedConvertible::spreadAdjustedRate</definition>
        <argsstring>() const</argsstring>
        <name>spreadAdjustedRate</name>
        <qualifiedname>QuantLib::DiscretizedConvertible::spreadAdjustedRate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/bond/discretizedconvertible.hpp" line="49" column="21" bodyfile="ql/pricingengines/bond/discretizedconvertible.hpp" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_convertible_1a029e07974647257e4bc167b7e52cec1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
        <definition>Array &amp; QuantLib::DiscretizedConvertible::spreadAdjustedRate</definition>
        <argsstring>()</argsstring>
        <name>spreadAdjustedRate</name>
        <qualifiedname>QuantLib::DiscretizedConvertible::spreadAdjustedRate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/bond/discretizedconvertible.hpp" line="50" column="15" bodyfile="ql/pricingengines/bond/discretizedconvertible.hpp" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_convertible_1a2c882912a9e43a4ee9b01d940d511f51" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
        <definition>const Array &amp; QuantLib::DiscretizedConvertible::dividendValues</definition>
        <argsstring>() const</argsstring>
        <name>dividendValues</name>
        <qualifiedname>QuantLib::DiscretizedConvertible::dividendValues</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/bond/discretizedconvertible.hpp" line="52" column="21" bodyfile="ql/pricingengines/bond/discretizedconvertible.hpp" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_convertible_1a9cd20e5bd557847d8428dbe0412d67c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
        <definition>Array &amp; QuantLib::DiscretizedConvertible::dividendValues</definition>
        <argsstring>()</argsstring>
        <name>dividendValues</name>
        <qualifiedname>QuantLib::DiscretizedConvertible::dividendValues</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/bond/discretizedconvertible.hpp" line="53" column="15" bodyfile="ql/pricingengines/bond/discretizedconvertible.hpp" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_convertible_1a751d8d61835969adff6af1d9299839d8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;</type>
        <definition>std::vector&lt; Time &gt; QuantLib::DiscretizedConvertible::mandatoryTimes</definition>
        <argsstring>() const override</argsstring>
        <name>mandatoryTimes</name>
        <qualifiedname>QuantLib::DiscretizedConvertible::mandatoryTimes</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_discretized_asset_1a387fb8413f6892687f001d0091fcc2ce">mandatoryTimes</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns the times at which the numerical method should stop while rolling back the asset. Typical examples include payment times, exercise times and such.</para>
<para><simplesect kind="note"><para>The returned values are not guaranteed to be sorted. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/bond/discretizedconvertible.hpp" line="55" column="21" bodyfile="ql/pricingengines/bond/discretizedconvertible.hpp" bodystart="55" bodyend="64"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_convertible_1aa63def87267cdcfe2c3bb0b5d3584550" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::DiscretizedConvertible::postAdjustValuesImpl</definition>
        <argsstring>() override</argsstring>
        <name>postAdjustValuesImpl</name>
        <qualifiedname>QuantLib::DiscretizedConvertible::postAdjustValuesImpl</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_discretized_asset_1a977eeb69773ccb7e8dc16fc7d61f678c">postAdjustValuesImpl</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method performs the actual post-adjustment </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/bond/discretizedconvertible.hpp" line="67" column="14" bodyfile="ql/pricingengines/bond/discretizedconvertible.cpp" bodystart="132" bodyend="166"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_convertible_1acf555f6db5db74efbe26fc30bbfe9fc4" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::DiscretizedConvertible::adjustedGrid</definition>
        <argsstring>() const</argsstring>
        <name>adjustedGrid</name>
        <qualifiedname>QuantLib::DiscretizedConvertible::adjustedGrid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/bond/discretizedconvertible.hpp" line="71" column="15" bodyfile="ql/pricingengines/bond/discretizedconvertible.cpp" bodystart="230" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_convertible_1a86bb0f0f165e490544015348b02b40ab" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::DiscretizedConvertible::applyConvertibility</definition>
        <argsstring>()</argsstring>
        <name>applyConvertibility</name>
        <qualifiedname>QuantLib::DiscretizedConvertible::applyConvertibility</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/bond/discretizedconvertible.hpp" line="72" column="14" bodyfile="ql/pricingengines/bond/discretizedconvertible.cpp" bodystart="168" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_convertible_1a5f5562ca91cdfce3040b2cdfb71d9dce" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::DiscretizedConvertible::applyCallability</definition>
        <argsstring>(Size, bool convertible)</argsstring>
        <name>applyCallability</name>
        <qualifiedname>QuantLib::DiscretizedConvertible::applyCallability</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <defname>i</defname>
        </param>
        <param>
          <type>bool</type>
          <declname>convertible</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/bond/discretizedconvertible.hpp" line="73" column="14" bodyfile="ql/pricingengines/bond/discretizedconvertible.cpp" bodystart="179" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_discretized_convertible_1aa1383150c8a7f636b43f5bd1c4b1332f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::DiscretizedConvertible::addCoupon</definition>
        <argsstring>(Size)</argsstring>
        <name>addCoupon</name>
        <qualifiedname>QuantLib::DiscretizedConvertible::addCoupon</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <defname>i</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/bond/discretizedconvertible.hpp" line="74" column="14" bodyfile="ql/pricingengines/bond/discretizedconvertible.cpp" bodystart="226" bodyend="228"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::DiscretizedAsset</label>
        <link refid="class_quant_lib_1_1_discretized_asset"/>
      </node>
      <node id="1">
        <label>QuantLib::DiscretizedConvertible</label>
        <link refid="class_quant_lib_1_1_discretized_convertible"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>QuantLib::Array</label>
        <link refid="class_quant_lib_1_1_array"/>
      </node>
      <node id="2">
        <label>QuantLib::DiscretizedAsset</label>
        <link refid="class_quant_lib_1_1_discretized_asset"/>
        <childnode refid="3" relation="usage">
          <edgelabel>values_</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::DiscretizedConvertible</label>
        <link refid="class_quant_lib_1_1_discretized_convertible"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>conversionProbability_</edgelabel>
          <edgelabel>dividendValues_</edgelabel>
          <edgelabel>spreadAdjustedRate_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/pricingengines/bond/discretizedconvertible.hpp" line="34" column="5" bodyfile="ql/pricingengines/bond/discretizedconvertible.hpp" bodystart="34" bodyend="85"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_discretized_convertible_1aa1383150c8a7f636b43f5bd1c4b1332f" prot="private" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>addCoupon</name></member>
      <member refid="class_quant_lib_1_1_discretized_convertible_1acf555f6db5db74efbe26fc30bbfe9fc4" prot="private" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>adjustedGrid</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1a35b681c10038f1f62bad25e9b4915c4b" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>adjustValues</name></member>
      <member refid="class_quant_lib_1_1_discretized_convertible_1a5f5562ca91cdfce3040b2cdfb71d9dce" prot="private" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>applyCallability</name></member>
      <member refid="class_quant_lib_1_1_discretized_convertible_1a86bb0f0f165e490544015348b02b40ab" prot="private" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>applyConvertibility</name></member>
      <member refid="class_quant_lib_1_1_discretized_convertible_1ae034bf0ae0ffc90c8b456b08214b3a8f" prot="private" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>arguments_</name></member>
      <member refid="class_quant_lib_1_1_discretized_convertible_1ab3d97c68f975f80c4c1d7ddf81162cf1" prot="private" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>callabilityTimes_</name></member>
      <member refid="class_quant_lib_1_1_discretized_convertible_1a0759d05c6b2df0af7908bde6bb651c07" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>conversionProbability</name></member>
      <member refid="class_quant_lib_1_1_discretized_convertible_1aeeaff07b3be9e58c46028fbe4b5185d9" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>conversionProbability</name></member>
      <member refid="class_quant_lib_1_1_discretized_convertible_1a0bdf5725ee938629becc638c6b4e9c58" prot="protected" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>conversionProbability_</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1ae818ed5af32e6c027454bcc19a4abb4f" prot="protected" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>CouponAdjustment</name></member>
      <member refid="class_quant_lib_1_1_discretized_convertible_1ac353664421567ff873c21b041405039b" prot="private" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>couponAmounts_</name></member>
      <member refid="class_quant_lib_1_1_discretized_convertible_1ada5ff97ee298fd7b6f5265d60ee4a002" prot="private" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>couponTimes_</name></member>
      <member refid="class_quant_lib_1_1_discretized_convertible_1a46a322d314c11d09b3fb48abfcb4f424" prot="private" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>creditSpread_</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1ad305192b76a41f7eedfa7d849c80fb14" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>DiscretizedAsset</name></member>
      <member refid="class_quant_lib_1_1_discretized_convertible_1a514be4193337ea6be1a09df4d9fcf817" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>DiscretizedConvertible</name></member>
      <member refid="class_quant_lib_1_1_discretized_convertible_1aa9af9c8ae86e413c9dca1fd4b9bf77aa" prot="private" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>dividendDates_</name></member>
      <member refid="class_quant_lib_1_1_discretized_convertible_1a2274f745a5b19ecbacb918d729f6f170" prot="private" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>dividends_</name></member>
      <member refid="class_quant_lib_1_1_discretized_convertible_1ac9fc5784f72e12b19f68187d719d2111" prot="private" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>dividendTimes_</name></member>
      <member refid="class_quant_lib_1_1_discretized_convertible_1a2c882912a9e43a4ee9b01d940d511f51" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>dividendValues</name></member>
      <member refid="class_quant_lib_1_1_discretized_convertible_1a9cd20e5bd557847d8428dbe0412d67c2" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>dividendValues</name></member>
      <member refid="class_quant_lib_1_1_discretized_convertible_1a4355f0eb60be9e201ba1303cd8976aa1" prot="protected" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>dividendValues_</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1a38a567d1a1efc9f3de789af08ccfd439" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>initialize</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1a36eb67653a2ca130274fbcdbf89deb59" prot="protected" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>isOnTime</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1ae0c6a088f8cc58ebed984450f39f1ad8" prot="protected" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>latestPostAdjustment_</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1ab95e661a7352085a074d3661a52ea7fc" prot="protected" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>latestPreAdjustment_</name></member>
      <member refid="class_quant_lib_1_1_discretized_convertible_1a751d8d61835969adff6af1d9299839d8" prot="public" virt="virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>mandatoryTimes</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1ad935364d3ec309c5e37eb788452bdae8" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>method</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1ad04b429958ccf31ac1fd6979a10c96de" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>partialRollback</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1a0c3c8bdd418e754442145a8346bc0bce" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>postAdjustValues</name></member>
      <member refid="class_quant_lib_1_1_discretized_convertible_1aa63def87267cdcfe2c3bb0b5d3584550" prot="protected" virt="virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>postAdjustValuesImpl</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1af9d63f3511be393f92de7770fe2b058f" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>preAdjustValues</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1ae760c4f8673c95ebeda43f7bef83e12a" prot="protected" virt="virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>preAdjustValuesImpl</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1a283876e01a0655203c2a330aa3a341ba" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>presentValue</name></member>
      <member refid="class_quant_lib_1_1_discretized_convertible_1a6eca4f4098e5d1f9921f057838ab7d88" prot="private" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>process_</name></member>
      <member refid="class_quant_lib_1_1_discretized_convertible_1abfc864f5b65b05585147d311f463853a" prot="public" virt="virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>reset</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1af0bfa673817053bb4f1446d4f32fe82b" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>rollback</name></member>
      <member refid="class_quant_lib_1_1_discretized_convertible_1a621164fc8112ed6126d6a278e213c94a" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>spreadAdjustedRate</name></member>
      <member refid="class_quant_lib_1_1_discretized_convertible_1a029e07974647257e4bc167b7e52cec1b" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>spreadAdjustedRate</name></member>
      <member refid="class_quant_lib_1_1_discretized_convertible_1a354a3d2df079861e4cecfe23697c5131" prot="protected" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>spreadAdjustedRate_</name></member>
      <member refid="class_quant_lib_1_1_discretized_convertible_1ae3f03435443ee355c964c2bd6a32f1cd" prot="private" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>stoppingTimes_</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1a215f21f5e591f45567474858b12840aa" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>time</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1aad101d37f5bdf5fe80b36fac3f5516db" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>time</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1af428f43eab9a20010a9fb2b6e721a748" prot="protected" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>time_</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1a8289a365e5debed63c090767e0cb6c9e" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>values</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1a3728ab16b4936ae0a2d833256c55aec3" prot="public" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>values</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1a63c3ec17cc95b8469ce9609a48d43221" prot="protected" virt="non-virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>values_</name></member>
      <member refid="class_quant_lib_1_1_discretized_asset_1a60cd28fb1233a4dd19e25b9a75d8f7be" prot="public" virt="virtual"><scope>QuantLib::DiscretizedConvertible</scope><name>~DiscretizedAsset</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

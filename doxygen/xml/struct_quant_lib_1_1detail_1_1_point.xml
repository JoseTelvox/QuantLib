<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="struct_quant_lib_1_1detail_1_1_point" kind="struct" language="C++" prot="public">
    <compoundname>QuantLib::detail::Point</compoundname>
    <templateparamlist>
      <param>
        <type>class X</type>
      </param>
      <param>
        <type>class Y</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_quant_lib_1_1detail_1_1_point_1a43fd5a0036a3ab093be1565b432b88a4" prot="public" static="no">
        <type>X</type>
        <definition>typedef X QuantLib::detail::Point&lt; X, Y &gt;::data_type</definition>
        <argsstring></argsstring>
        <name>data_type</name>
        <qualifiedname>QuantLib::detail::Point::data_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="123" column="23" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="123" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_quant_lib_1_1detail_1_1_point_1a237ddb980ed2d58c72d0a926dec18fa3" prot="public" static="no" mutable="no">
        <type>data_type</type>
        <definition>data_type QuantLib::detail::Point&lt; X, Y &gt;::first</definition>
        <argsstring></argsstring>
        <name>first</name>
        <qualifiedname>QuantLib::detail::Point::first</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="139" column="23" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_quant_lib_1_1detail_1_1_point_1a2d33470e53d23448e5ca8545f312f410" prot="public" static="no" mutable="no">
        <type>Y</type>
        <definition>Y QuantLib::detail::Point&lt; X, Y &gt;::second</definition>
        <argsstring></argsstring>
        <name>second</name>
        <qualifiedname>QuantLib::detail::Point::second</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="140" column="15" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="140" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_quant_lib_1_1detail_1_1_point_1ab2077dfce9e34eabe1143d407d372f8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::detail::Point&lt; X, Y &gt;::Point</definition>
        <argsstring>()</argsstring>
        <name>Point</name>
        <qualifiedname>QuantLib::detail::Point::Point</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="124" column="13" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="124" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1detail_1_1_point_1a305b055d69a2bf9a0fb747df15fbef11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::detail::Point&lt; X, Y &gt;::Point</definition>
        <argsstring>(const std::vector&lt; Real &gt;::const_iterator &amp;i)</argsstring>
        <name>Point</name>
        <qualifiedname>QuantLib::detail::Point::Point</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;::const_iterator &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="126" column="13" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="126" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1detail_1_1_point_1a52aa8479cb116f4c418aa458879c43c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::detail::Point&lt; X, Y &gt;::Point</definition>
        <argsstring>(const std::vector&lt; Real &gt; &amp;v)</argsstring>
        <name>Point</name>
        <qualifiedname>QuantLib::detail::Point::Point</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="128" column="13" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="128" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1detail_1_1_point_1a1b776564e148a2cd8ec867a551ca8563" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::detail::Point&lt; X, Y &gt;::Point</definition>
        <argsstring>(const SplineGrid::const_iterator &amp;i)</argsstring>
        <name>Point</name>
        <qualifiedname>QuantLib::detail::Point::Point</qualifiedname>
        <param>
          <type>const SplineGrid::const_iterator &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="130" column="13" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="130" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1detail_1_1_point_1afa9fce98798015d1c9a98cfaf1ed0406" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::detail::Point&lt; X, Y &gt;::Point</definition>
        <argsstring>(const SplineGrid &amp;grid)</argsstring>
        <name>Point</name>
        <qualifiedname>QuantLib::detail::Point::Point</qualifiedname>
        <param>
          <type>const SplineGrid &amp;</type>
          <declname>grid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="132" column="13" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="132" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1detail_1_1_point_1a10037cc0ea5976eceb4ada74fdece2ae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::detail::Point&lt; X, Y &gt;::operator data_type</definition>
        <argsstring>() const</argsstring>
        <name>operator data_type</name>
        <qualifiedname>QuantLib::detail::Point::operator data_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="134" column="13" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="134" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1detail_1_1_point_1a81ae0eb08b1a29c75db7c7e8f36ebdc8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>data_type</type>
        <definition>data_type QuantLib::detail::Point&lt; X, Y &gt;::operator[]</definition>
        <argsstring>(Size n) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>QuantLib::detail::Point::operator[]</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="137" column="23" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="137" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1detail_1_1_point_1adfcefcef7aa3145a3f79cf4155be7d6a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>data_type &amp;</type>
        <definition>data_type &amp; QuantLib::detail::Point&lt; X, Y &gt;::operator[]</definition>
        <argsstring>(Size n)</argsstring>
        <name>operator[]</name>
        <qualifiedname>QuantLib::detail::Point::operator[]</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="138" column="23" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="138" bodyend="138"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/math/interpolations/multicubicspline.hpp" line="122" column="21" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="122" bodyend="141"/>
    <listofallmembers>
      <member refid="struct_quant_lib_1_1detail_1_1_point_1a43fd5a0036a3ab093be1565b432b88a4" prot="public" virt="non-virtual"><scope>QuantLib::detail::Point</scope><name>data_type</name></member>
      <member refid="struct_quant_lib_1_1detail_1_1_point_1a237ddb980ed2d58c72d0a926dec18fa3" prot="public" virt="non-virtual"><scope>QuantLib::detail::Point</scope><name>first</name></member>
      <member refid="struct_quant_lib_1_1detail_1_1_point_1a10037cc0ea5976eceb4ada74fdece2ae" prot="public" virt="non-virtual"><scope>QuantLib::detail::Point</scope><name>operator data_type</name></member>
      <member refid="struct_quant_lib_1_1detail_1_1_point_1a81ae0eb08b1a29c75db7c7e8f36ebdc8" prot="public" virt="non-virtual"><scope>QuantLib::detail::Point</scope><name>operator[]</name></member>
      <member refid="struct_quant_lib_1_1detail_1_1_point_1adfcefcef7aa3145a3f79cf4155be7d6a" prot="public" virt="non-virtual"><scope>QuantLib::detail::Point</scope><name>operator[]</name></member>
      <member refid="struct_quant_lib_1_1detail_1_1_point_1ab2077dfce9e34eabe1143d407d372f8a" prot="public" virt="non-virtual"><scope>QuantLib::detail::Point</scope><name>Point</name></member>
      <member refid="struct_quant_lib_1_1detail_1_1_point_1a305b055d69a2bf9a0fb747df15fbef11" prot="public" virt="non-virtual"><scope>QuantLib::detail::Point</scope><name>Point</name></member>
      <member refid="struct_quant_lib_1_1detail_1_1_point_1a52aa8479cb116f4c418aa458879c43c5" prot="public" virt="non-virtual"><scope>QuantLib::detail::Point</scope><name>Point</name></member>
      <member refid="struct_quant_lib_1_1detail_1_1_point_1a1b776564e148a2cd8ec867a551ca8563" prot="public" virt="non-virtual"><scope>QuantLib::detail::Point</scope><name>Point</name></member>
      <member refid="struct_quant_lib_1_1detail_1_1_point_1afa9fce98798015d1c9a98cfaf1ed0406" prot="public" virt="non-virtual"><scope>QuantLib::detail::Point</scope><name>Point</name></member>
      <member refid="struct_quant_lib_1_1detail_1_1_point_1a2d33470e53d23448e5ca8545f312f410" prot="public" virt="non-virtual"><scope>QuantLib::detail::Point</scope><name>second</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_numeric_hagan_pricer_1_1_function" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::NumericHaganPricer::Function</compoundname>
    <derivedcompoundref refid="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand" prot="public" virt="non-virtual">QuantLib::NumericHaganPricer::ConundrumIntegrand</derivedcompoundref>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_numeric_hagan_pricer_1_1_function_1adaec69435ae5bc9698f7953d8cd5324f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual QuantLib::NumericHaganPricer::Function::~Function</definition>
        <argsstring>()=default</argsstring>
        <name>~Function</name>
        <qualifiedname>QuantLib::NumericHaganPricer::Function::~Function</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/conundrumpricer.hpp" line="265" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_numeric_hagan_pricer_1_1_function_1ad1340a2545b62ff00e52ece578e58da0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::NumericHaganPricer::Function::operator()</definition>
        <argsstring>(Real x) const =0</argsstring>
        <name>operator()</name>
        <qualifiedname>QuantLib::NumericHaganPricer::Function::operator()</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand_1ad49120efbd077666e54d919f656a5dc4">operator()</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/conundrumpricer.hpp" line="266" column="26"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::NumericHaganPricer::ConundrumIntegrand</label>
        <link refid="class_quant_lib_1_1_numeric_hagan_pricer_1_1_conundrum_integrand"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::NumericHaganPricer::Function</label>
        <link refid="class_quant_lib_1_1_numeric_hagan_pricer_1_1_function"/>
      </node>
    </inheritancegraph>
    <location file="ql/cashflows/conundrumpricer.hpp" line="263" column="9" bodyfile="ql/cashflows/conundrumpricer.hpp" bodystart="263" bodyend="267"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_numeric_hagan_pricer_1_1_function_1ad1340a2545b62ff00e52ece578e58da0" prot="public" virt="pure-virtual"><scope>QuantLib::NumericHaganPricer::Function</scope><name>operator()</name></member>
      <member refid="class_quant_lib_1_1_numeric_hagan_pricer_1_1_function_1adaec69435ae5bc9698f7953d8cd5324f" prot="public" virt="virtual"><scope>QuantLib::NumericHaganPricer::Function</scope><name>~Function</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

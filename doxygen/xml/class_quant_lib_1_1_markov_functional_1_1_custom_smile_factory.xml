<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_markov_functional_1_1_custom_smile_factory" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::MarkovFunctional::CustomSmileFactory</compoundname>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_markov_functional_1_1_custom_smile_factory_1aa865fa28f95be97156d13154278b551a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual QuantLib::MarkovFunctional::CustomSmileFactory::~CustomSmileFactory</definition>
        <argsstring>()=default</argsstring>
        <name>~CustomSmileFactory</name>
        <qualifiedname>QuantLib::MarkovFunctional::CustomSmileFactory::~CustomSmileFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/markovfunctional.hpp" line="110" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_markov_functional_1_1_custom_smile_factory_1a6c53c2ca3fca6262f2def2cd2d86c7e5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_markov_functional_1_1_custom_smile_section" kindref="compound">CustomSmileSection</ref> &gt;</type>
        <definition>virtual ext::shared_ptr&lt; CustomSmileSection &gt; QuantLib::MarkovFunctional::CustomSmileFactory::smileSection</definition>
        <argsstring>(const ext::shared_ptr&lt; SmileSection &gt; &amp;source, Real atm) const =0</argsstring>
        <name>smileSection</name>
        <qualifiedname>QuantLib::MarkovFunctional::CustomSmileFactory::smileSection</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_smile_section" kindref="compound">SmileSection</ref> &gt; &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>atm</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/markovfunctional.hpp" line="112" column="11"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/models/shortrate/onefactormodels/markovfunctional.hpp" line="108" column="9" bodyfile="ql/models/shortrate/onefactormodels/markovfunctional.hpp" bodystart="108" bodyend="113"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_markov_functional_1_1_custom_smile_factory_1a6c53c2ca3fca6262f2def2cd2d86c7e5" prot="public" virt="pure-virtual"><scope>QuantLib::MarkovFunctional::CustomSmileFactory</scope><name>smileSection</name></member>
      <member refid="class_quant_lib_1_1_markov_functional_1_1_custom_smile_factory_1aa865fa28f95be97156d13154278b551a" prot="public" virt="virtual"><scope>QuantLib::MarkovFunctional::CustomSmileFactory</scope><name>~CustomSmileFactory</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

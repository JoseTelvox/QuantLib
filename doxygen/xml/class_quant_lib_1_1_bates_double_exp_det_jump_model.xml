<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_bates_double_exp_det_jump_model" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::BatesDoubleExpDetJumpModel</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_bates_double_exp_model" prot="public" virt="non-virtual">QuantLib::BatesDoubleExpModel</basecompoundref>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_bates_double_exp_det_jump_model_1abb405e6ff2ddcd1873f67b32289868cb" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::BatesDoubleExpDetJumpModel::BatesDoubleExpDetJumpModel</definition>
        <argsstring>(const ext::shared_ptr&lt; HestonProcess &gt; &amp;process, Real lambda=0.1, Real nuUp=0.1, Real nuDown=0.1, Real p=0.5, Real kappaLambda=1.0, Real thetaLambda=0.1)</argsstring>
        <name>BatesDoubleExpDetJumpModel</name>
        <qualifiedname>QuantLib::BatesDoubleExpDetJumpModel::BatesDoubleExpDetJumpModel</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_heston_process" kindref="compound">HestonProcess</ref> &gt; &amp;</type>
          <declname>process</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>lambda</declname>
          <defval>0.1</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>nuUp</declname>
          <defval>0.1</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>nuDown</declname>
          <defval>0.1</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>p</declname>
          <defval>0.5</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>kappaLambda</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>thetaLambda</declname>
          <defval>0.1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/equity/batesmodel.hpp" line="82" column="18" bodyfile="ql/models/equity/batesmodel.cpp" bodystart="74" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_bates_double_exp_det_jump_model_1a7440dcc1bed96f38bc865d9d6ff82921" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::BatesDoubleExpDetJumpModel::kappaLambda</definition>
        <argsstring>() const</argsstring>
        <name>kappaLambda</name>
        <qualifiedname>QuantLib::BatesDoubleExpDetJumpModel::kappaLambda</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/equity/batesmodel.hpp" line="87" column="14" bodyfile="ql/models/equity/batesmodel.hpp" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_bates_double_exp_det_jump_model_1a02967cad538c0259bd29ee201c0ce728" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::BatesDoubleExpDetJumpModel::thetaLambda</definition>
        <argsstring>() const</argsstring>
        <name>thetaLambda</name>
        <qualifiedname>QuantLib::BatesDoubleExpDetJumpModel::thetaLambda</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/equity/batesmodel.hpp" line="88" column="14" bodyfile="ql/models/equity/batesmodel.hpp" bodystart="88" bodyend="88"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::BatesDoubleExpDetJumpModel</label>
        <link refid="class_quant_lib_1_1_bates_double_exp_det_jump_model"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::BatesDoubleExpModel</label>
        <link refid="class_quant_lib_1_1_bates_double_exp_model"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::CalibratedModel</label>
        <link refid="class_quant_lib_1_1_calibrated_model"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::HestonModel</label>
        <link refid="class_quant_lib_1_1_heston_model"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7">
        <label>QuantLib::Array</label>
        <link refid="class_quant_lib_1_1_array"/>
      </node>
      <node id="1">
        <label>QuantLib::BatesDoubleExpDetJumpModel</label>
        <link refid="class_quant_lib_1_1_bates_double_exp_det_jump_model"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::BatesDoubleExpModel</label>
        <link refid="class_quant_lib_1_1_bates_double_exp_model"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::CalibratedModel</label>
        <link refid="class_quant_lib_1_1_calibrated_model"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>problemValues_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::HestonModel</label>
        <link refid="class_quant_lib_1_1_heston_model"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </collaborationgraph>
    <location file="ql/models/equity/batesmodel.hpp" line="80" column="5" bodyfile="ql/models/equity/batesmodel.hpp" bodystart="80" bodyend="89"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_calibrated_model_1a063e96ccbf2ebbdb39341822083bd37c" prot="protected" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>arguments_</name></member>
      <member refid="class_quant_lib_1_1_bates_double_exp_det_jump_model_1abb405e6ff2ddcd1873f67b32289868cb" prot="public" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>BatesDoubleExpDetJumpModel</name></member>
      <member refid="class_quant_lib_1_1_bates_double_exp_model_1a3946ba16bb6b4dea9928b88477f5a77b" prot="public" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>BatesDoubleExpModel</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1af2776521b1584d547ec2440833508677" prot="public" virt="virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>calibrate</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a6368e7ce0867de464f64d7b104b79b85" prot="public" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>CalibratedModel</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a3b1198e322e93d700c2b48fe0cd888cf" prot="public" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>constraint</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1add85b46f3e818f3916bd30eb85d877ef" prot="protected" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>constraint_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a797a6b080b7a66d620758ff6fe34df39" prot="public" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>endCriteria</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a66027503e827f56c83a5a60f8f066d84" prot="public" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>functionEvaluation</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a6b9b9c042c526902626eead4de47e74c" prot="protected" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>functionEvaluation_</name></member>
      <member refid="class_quant_lib_1_1_heston_model_1a945dba621d223a719248cf5980eaff8e" prot="protected" virt="virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>generateArguments</name></member>
      <member refid="class_quant_lib_1_1_heston_model_1a3d1e27afe94593c2ed33a870ed28f02a" prot="public" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>HestonModel</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_heston_model_1a2f1c6d860d34a817843b0f82338d2b76" prot="public" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>kappa</name></member>
      <member refid="class_quant_lib_1_1_bates_double_exp_det_jump_model_1a7440dcc1bed96f38bc865d9d6ff82921" prot="public" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>kappaLambda</name></member>
      <member refid="class_quant_lib_1_1_bates_double_exp_model_1a663a43ce754abdeb37bfd9b7ef1eb2b3" prot="public" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>lambda</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_bates_double_exp_model_1ad260c172f409dac967baceb1380edd6a" prot="public" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>nuDown</name></member>
      <member refid="class_quant_lib_1_1_bates_double_exp_model_1af5de830fa202127711aae39f9b2aaa48" prot="public" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>nuUp</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::CalibratedModel::"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::CalibratedModel::"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::CalibratedModel::"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::CalibratedModel::QuantLib::Observable::"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_bates_double_exp_model_1ae7e23d86696d6f8b03cca2efffd8bcfb" prot="public" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>p</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1adae9352d30045e32f5382fa79a0bc88c" prot="public" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>params</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1ab7766a4e575c67e8f1e00f98bfe2e8c6" prot="public" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>problemValues</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a4341c3bd6dc46bc9380bb4d52c032d25" prot="protected" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>problemValues_</name></member>
      <member refid="class_quant_lib_1_1_heston_model_1a8f098990ebe9990210c05ae5495c1cd4" prot="public" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>process</name></member>
      <member refid="class_quant_lib_1_1_heston_model_1aaf81e2e3e3e7899a864255f97716ff73" prot="protected" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>process_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_heston_model_1ac67bd0c5085f78d5d9939109bac98da0" prot="public" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>rho</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a018930665d7468824b0f1800b7472eb6" prot="public" virt="virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>setParams</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a91f2d3c3d84fbe420b0d842de338037e" prot="protected" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>shortRateEndCriteria_</name></member>
      <member refid="class_quant_lib_1_1_heston_model_1a16335a6e6949f6f3ca2ae8f188098aa5" prot="public" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>sigma</name></member>
      <member refid="class_quant_lib_1_1_heston_model_1ab3de548898506dcf4b4a8489f4d40443" prot="public" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>theta</name></member>
      <member refid="class_quant_lib_1_1_bates_double_exp_det_jump_model_1a02967cad538c0259bd29ee201c0ce728" prot="public" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>thetaLambda</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a03d7cb63ca181a47a45994cfe448e42c" prot="public" virt="virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_heston_model_1aa1fe595488ccd3da85cabc20bfd8175e" prot="public" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>v0</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a2652178a7f9d28ca4e213f76b55c87e9" prot="public" virt="non-virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>value</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::BatesDoubleExpDetJumpModel</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

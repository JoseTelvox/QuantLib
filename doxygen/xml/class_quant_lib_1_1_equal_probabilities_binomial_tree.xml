<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_equal_probabilities_binomial_tree" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::EqualProbabilitiesBinomialTree</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_binomial_tree" prot="public" virt="non-virtual">QuantLib::BinomialTree&lt; T &gt;</basecompoundref>
    <includes refid="binomialtree_8hpp" local="no">binomialtree.hpp</includes>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_equal_probabilities_binomial_tree_1a2de08d9c1f7308a3e78bfc024a8f6f1c" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::EqualProbabilitiesBinomialTree&lt; T &gt;::up_</definition>
        <argsstring></argsstring>
        <name>up_</name>
        <qualifiedname>QuantLib::EqualProbabilitiesBinomialTree::up_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/binomialtree.hpp" line="77" column="14" bodyfile="ql/methods/lattices/binomialtree.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_equal_probabilities_binomial_tree_1a0b9ee8bd4f68bc6c3e42e2da5a1a6e00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::EqualProbabilitiesBinomialTree&lt; T &gt;::EqualProbabilitiesBinomialTree</definition>
        <argsstring>(const ext::shared_ptr&lt; StochasticProcess1D &gt; &amp;process, Time end, Size steps)</argsstring>
        <name>EqualProbabilitiesBinomialTree</name>
        <qualifiedname>QuantLib::EqualProbabilitiesBinomialTree::EqualProbabilitiesBinomialTree</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_stochastic_process1_d" kindref="compound">StochasticProcess1D</ref> &gt; &amp;</type>
          <declname>process</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>end</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/binomialtree.hpp" line="65" column="9" bodyfile="ql/methods/lattices/binomialtree.hpp" bodystart="65" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_equal_probabilities_binomial_tree_1a29db6a09421241692011351845dadd76" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::EqualProbabilitiesBinomialTree&lt; T &gt;::underlying</definition>
        <argsstring>(Size i, Size index) const</argsstring>
        <name>underlying</name>
        <qualifiedname>QuantLib::EqualProbabilitiesBinomialTree::underlying</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/binomialtree.hpp" line="70" column="14" bodyfile="ql/methods/lattices/binomialtree.hpp" bodystart="70" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_equal_probabilities_binomial_tree_1a8da56a9148c938a4afcd0de28bcf14a7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::EqualProbabilitiesBinomialTree&lt; T &gt;::probability</definition>
        <argsstring>(Size, Size, Size) const</argsstring>
        <name>probability</name>
        <qualifiedname>QuantLib::EqualProbabilitiesBinomialTree::probability</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/binomialtree.hpp" line="75" column="14" bodyfile="ql/methods/lattices/binomialtree.hpp" bodystart="75" bodyend="75"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Base class for equal probabilities binomial tree. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::BinomialTree&lt; T &gt;</label>
        <link refid="class_quant_lib_1_1_binomial_tree"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::CuriouslyRecurringTemplate&lt; T &gt;</label>
        <link refid="class_quant_lib_1_1_curiously_recurring_template"/>
      </node>
      <node id="1">
        <label>QuantLib::EqualProbabilitiesBinomialTree&lt; T &gt;</label>
        <link refid="class_quant_lib_1_1_equal_probabilities_binomial_tree"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Tree&lt; T &gt;</label>
        <link refid="class_quant_lib_1_1_tree"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::BinomialTree&lt; T &gt;</label>
        <link refid="class_quant_lib_1_1_binomial_tree"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::CuriouslyRecurringTemplate&lt; T &gt;</label>
        <link refid="class_quant_lib_1_1_curiously_recurring_template"/>
      </node>
      <node id="1">
        <label>QuantLib::EqualProbabilitiesBinomialTree&lt; T &gt;</label>
        <link refid="class_quant_lib_1_1_equal_probabilities_binomial_tree"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Tree&lt; T &gt;</label>
        <link refid="class_quant_lib_1_1_tree"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/methods/lattices/binomialtree.hpp" line="63" column="5" bodyfile="ql/methods/lattices/binomialtree.hpp" bodystart="63" bodyend="78"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_binomial_tree_1a76e8c8f9a83579b158add6aef4505c3c" prot="public" virt="non-virtual"><scope>QuantLib::EqualProbabilitiesBinomialTree</scope><name>BinomialTree</name></member>
      <member refid="class_quant_lib_1_1_binomial_tree_1abac51ac321edcf6705b9fd62e5d4f6e7" prot="public" virt="non-virtual"><scope>QuantLib::EqualProbabilitiesBinomialTree</scope><name>Branches</name></member>
      <member refid="class_quant_lib_1_1_binomial_tree_1abac51ac321edcf6705b9fd62e5d4f6e7ae76994f55191e538deb504d5fef1c481" prot="public" virt="non-virtual"><scope>QuantLib::EqualProbabilitiesBinomialTree</scope><name>branches</name></member>
      <member refid="class_quant_lib_1_1_tree_1ad67606506e0773cb697aa0826dd953b2" prot="public" virt="non-virtual"><scope>QuantLib::EqualProbabilitiesBinomialTree</scope><name>columns</name></member>
      <member refid="class_quant_lib_1_1_curiously_recurring_template_1ac51e69d7c3e616686e8777fcabebf954" prot="protected" virt="non-virtual"><scope>QuantLib::EqualProbabilitiesBinomialTree</scope><name>CuriouslyRecurringTemplate</name></member>
      <member refid="class_quant_lib_1_1_binomial_tree_1ae8d564f5802d362d6d9f9e972b642945" prot="public" virt="non-virtual"><scope>QuantLib::EqualProbabilitiesBinomialTree</scope><name>descendant</name></member>
      <member refid="class_quant_lib_1_1_binomial_tree_1a848c46504adda17faed1042b2210284e" prot="protected" virt="non-virtual"><scope>QuantLib::EqualProbabilitiesBinomialTree</scope><name>driftPerStep_</name></member>
      <member refid="class_quant_lib_1_1_binomial_tree_1abbad6eed306ff42cfa5a315a8024081b" prot="protected" virt="non-virtual"><scope>QuantLib::EqualProbabilitiesBinomialTree</scope><name>dt_</name></member>
      <member refid="class_quant_lib_1_1_equal_probabilities_binomial_tree_1a0b9ee8bd4f68bc6c3e42e2da5a1a6e00" prot="public" virt="non-virtual"><scope>QuantLib::EqualProbabilitiesBinomialTree</scope><name>EqualProbabilitiesBinomialTree</name></member>
      <member refid="class_quant_lib_1_1_curiously_recurring_template_1a72c11590c74c9d0085fd43f17cdfe96e" prot="protected" virt="non-virtual"><scope>QuantLib::EqualProbabilitiesBinomialTree</scope><name>impl</name></member>
      <member refid="class_quant_lib_1_1_curiously_recurring_template_1a9efaa4c38bfca1e148ed265a809ed220" prot="protected" virt="non-virtual"><scope>QuantLib::EqualProbabilitiesBinomialTree</scope><name>impl</name></member>
      <member refid="class_quant_lib_1_1_equal_probabilities_binomial_tree_1a8da56a9148c938a4afcd0de28bcf14a7" prot="public" virt="non-virtual"><scope>QuantLib::EqualProbabilitiesBinomialTree</scope><name>probability</name></member>
      <member refid="class_quant_lib_1_1_binomial_tree_1abb0476c508dbab415d267d36b0522383" prot="public" virt="non-virtual"><scope>QuantLib::EqualProbabilitiesBinomialTree</scope><name>size</name></member>
      <member refid="class_quant_lib_1_1_tree_1a50c9a44fb22df3c7d5916a8ff80d79b9" prot="public" virt="non-virtual"><scope>QuantLib::EqualProbabilitiesBinomialTree</scope><name>Tree</name></member>
      <member refid="class_quant_lib_1_1_equal_probabilities_binomial_tree_1a29db6a09421241692011351845dadd76" prot="public" virt="non-virtual"><scope>QuantLib::EqualProbabilitiesBinomialTree</scope><name>underlying</name></member>
      <member refid="class_quant_lib_1_1_equal_probabilities_binomial_tree_1a2de08d9c1f7308a3e78bfc024a8f6f1c" prot="protected" virt="non-virtual"><scope>QuantLib::EqualProbabilitiesBinomialTree</scope><name>up_</name></member>
      <member refid="class_quant_lib_1_1_binomial_tree_1a664b6476786a374e5f1805240528feda" prot="protected" virt="non-virtual"><scope>QuantLib::EqualProbabilitiesBinomialTree</scope><name>x0_</name></member>
      <member refid="class_quant_lib_1_1_curiously_recurring_template_1ae22b4353d3c05a5aad5f5b8769392b05" prot="protected" virt="non-virtual"><scope>QuantLib::EqualProbabilitiesBinomialTree</scope><name>~CuriouslyRecurringTemplate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

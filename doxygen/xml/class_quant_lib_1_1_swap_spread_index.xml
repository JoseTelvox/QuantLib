<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_swap_spread_index" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::SwapSpreadIndex</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_interest_rate_index" prot="public" virt="non-virtual">QuantLib::InterestRateIndex</basecompoundref>
    <includes refid="swapspreadindex_8hpp" local="no">swapspreadindex.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Inspectors</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_swap_spread_index_1a23870f6edcd65c96819d28d006db8670" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_swap_index" kindref="compound">SwapIndex</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;SwapIndex&gt; QuantLib::SwapSpreadIndex::swapIndex1_</definition>
        <argsstring></argsstring>
        <name>swapIndex1_</name>
        <qualifiedname>QuantLib::SwapSpreadIndex::swapIndex1_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/swapspreadindex.hpp" line="58" column="25" bodyfile="ql/experimental/coupons/swapspreadindex.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_swap_spread_index_1a4709deeb422d68d3dbd49afd36cd2c1b" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_swap_index" kindref="compound">SwapIndex</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;SwapIndex&gt; QuantLib::SwapSpreadIndex::swapIndex2_</definition>
        <argsstring></argsstring>
        <name>swapIndex2_</name>
        <qualifiedname>QuantLib::SwapSpreadIndex::swapIndex2_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/swapspreadindex.hpp" line="58" column="37" bodyfile="ql/experimental/coupons/swapspreadindex.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_swap_spread_index_1aedea56f86c1ce5a31d75dceb77e12fc0" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SwapSpreadIndex::gearing1_</definition>
        <argsstring></argsstring>
        <name>gearing1_</name>
        <qualifiedname>QuantLib::SwapSpreadIndex::gearing1_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/swapspreadindex.hpp" line="59" column="14" bodyfile="ql/experimental/coupons/swapspreadindex.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_swap_spread_index_1afd3dde7a1c2dc52723b3778ca24ecb0b" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SwapSpreadIndex::gearing2_</definition>
        <argsstring></argsstring>
        <name>gearing2_</name>
        <qualifiedname>QuantLib::SwapSpreadIndex::gearing2_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/swapspreadindex.hpp" line="59" column="24" bodyfile="ql/experimental/coupons/swapspreadindex.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swap_spread_index_1af0eaffbabf1f63782ff9db126ccde0ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_swap_index" kindref="compound">SwapIndex</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; SwapIndex &gt; QuantLib::SwapSpreadIndex::swapIndex1</definition>
        <argsstring>()</argsstring>
        <name>swapIndex1</name>
        <qualifiedname>QuantLib::SwapSpreadIndex::swapIndex1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/swapspreadindex.hpp" line="50" column="25" bodyfile="ql/experimental/coupons/swapspreadindex.hpp" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swap_spread_index_1a2aa39686f0ce712dad9391b5b93e2485" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_swap_index" kindref="compound">SwapIndex</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; SwapIndex &gt; QuantLib::SwapSpreadIndex::swapIndex2</definition>
        <argsstring>()</argsstring>
        <name>swapIndex2</name>
        <qualifiedname>QuantLib::SwapSpreadIndex::swapIndex2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/swapspreadindex.hpp" line="51" column="25" bodyfile="ql/experimental/coupons/swapspreadindex.hpp" bodystart="51" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swap_spread_index_1a548dc7b200dc61589b4d22205f8bbf43" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SwapSpreadIndex::gearing1</definition>
        <argsstring>() const</argsstring>
        <name>gearing1</name>
        <qualifiedname>QuantLib::SwapSpreadIndex::gearing1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/swapspreadindex.hpp" line="52" column="14" bodyfile="ql/experimental/coupons/swapspreadindex.hpp" bodystart="52" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swap_spread_index_1a62b53019f2cd4934d22b4cbe4fa419aa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SwapSpreadIndex::gearing2</definition>
        <argsstring>() const</argsstring>
        <name>gearing2</name>
        <qualifiedname>QuantLib::SwapSpreadIndex::gearing2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/swapspreadindex.hpp" line="53" column="14" bodyfile="ql/experimental/coupons/swapspreadindex.hpp" bodystart="53" bodyend="53"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>InterestRateIndex interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_swap_spread_index_1a8556633f65da659d3d91e8b375d65404" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::SwapSpreadIndex::maturityDate</definition>
        <argsstring>(const Date &amp;valueDate) const override</argsstring>
        <name>maturityDate</name>
        <qualifiedname>QuantLib::SwapSpreadIndex::maturityDate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_interest_rate_index_1a8ee3be0f32a22eaf0aa08f8a91b5713a">maturityDate</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>valueDate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/swapspreadindex.hpp" line="40" column="14" bodyfile="ql/experimental/coupons/swapspreadindex.hpp" bodystart="40" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swap_spread_index_1a0939483b56695aebd0442b25c5dbefb7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::SwapSpreadIndex::forecastFixing</definition>
        <argsstring>(const Date &amp;fixingDate) const override</argsstring>
        <name>forecastFixing</name>
        <qualifiedname>QuantLib::SwapSpreadIndex::forecastFixing</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_interest_rate_index_1a64cc6f54168eb4586f4eaeff90037fc3">forecastFixing</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>fixingDate</declname>
        </param>
        <briefdescription>
<para>It can be overridden to implement particular conventions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/swapspreadindex.hpp" line="43" column="14" bodyfile="ql/experimental/coupons/swapspreadindex.hpp" bodystart="63" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swap_spread_index_1af34dc51b22d445c2323f967ec2eaa715" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::SwapSpreadIndex::pastFixing</definition>
        <argsstring>(const Date &amp;fixingDate) const override</argsstring>
        <name>pastFixing</name>
        <qualifiedname>QuantLib::SwapSpreadIndex::pastFixing</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_index_1a56f55745a69269f98c5ccc9b7e94d90e">pastFixing</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>fixingDate</declname>
        </param>
        <briefdescription>
<para>returns a past fixing at the given date </para>
        </briefdescription>
        <detaileddescription>
<para>the date passed as arguments must be the actual calendar date of the fixing; no settlement days must be used. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/swapspreadindex.hpp" line="44" column="14" bodyfile="ql/experimental/coupons/swapspreadindex.hpp" bodystart="71" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_swap_spread_index_1af31956102550225d2c803acfffb821a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>bool QuantLib::SwapSpreadIndex::allowsNativeFixings</definition>
        <argsstring>() override</argsstring>
        <name>allowsNativeFixings</name>
        <qualifiedname>QuantLib::SwapSpreadIndex::allowsNativeFixings</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_index_1aedde403ec6db8211816d7d1d0a883155">allowsNativeFixings</reimplements>
        <briefdescription>
<para>check if index allows for native fixings. </para>
        </briefdescription>
        <detaileddescription>
<para>If this returns false, calls to addFixing and similar methods will raise an exception. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/swapspreadindex.hpp" line="45" column="14" bodyfile="ql/experimental/coupons/swapspreadindex.hpp" bodystart="45" bodyend="45"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_swap_spread_index_1a20a4dcb2dfed944b1dc460f9ceca2c84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::SwapSpreadIndex::SwapSpreadIndex</definition>
        <argsstring>(const std::string &amp;familyName, const ext::shared_ptr&lt; SwapIndex &gt; &amp;swapIndex1, ext::shared_ptr&lt; SwapIndex &gt; swapIndex2, Real gearing1=1.0, Real gearing2=-1.0)</argsstring>
        <name>SwapSpreadIndex</name>
        <qualifiedname>QuantLib::SwapSpreadIndex::SwapSpreadIndex</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>familyName</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_swap_index" kindref="compound">SwapIndex</ref> &gt; &amp;</type>
          <declname>swapIndex1</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_swap_index" kindref="compound">SwapIndex</ref> &gt;</type>
          <declname>swapIndex2</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>gearing1</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>gearing2</declname>
          <defval>-1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/swapspreadindex.hpp" line="32" column="9" bodyfile="ql/experimental/coupons/swapspreadindex.cpp" bodystart="25" bodyend="84"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>class for swap-rate spread indexes </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>QuantLib::Index</label>
        <link refid="class_quant_lib_1_1_index"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::InterestRateIndex</label>
        <link refid="class_quant_lib_1_1_interest_rate_index"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="1">
        <label>QuantLib::SwapSpreadIndex</label>
        <link refid="class_quant_lib_1_1_swap_spread_index"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="7">
        <label>QuantLib::Currency</label>
        <link refid="class_quant_lib_1_1_currency"/>
      </node>
      <node id="8">
        <label>QuantLib::DayCounter</label>
        <link refid="class_quant_lib_1_1_day_counter"/>
      </node>
      <node id="3">
        <label>QuantLib::Index</label>
        <link refid="class_quant_lib_1_1_index"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::InterestRateIndex</label>
        <link refid="class_quant_lib_1_1_interest_rate_index"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>tenor_</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>currency_</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>dayCounter_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="6">
        <label>QuantLib::Period</label>
        <link refid="class_quant_lib_1_1_period"/>
      </node>
      <node id="1">
        <label>QuantLib::SwapSpreadIndex</label>
        <link refid="class_quant_lib_1_1_swap_spread_index"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/coupons/swapspreadindex.hpp" line="30" column="5" bodyfile="ql/experimental/coupons/swapspreadindex.hpp" bodystart="30" bodyend="60"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_index_1a99d2677cae4cd185b34a170ee36eca9d" prot="public" virt="virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>addFixing</name></member>
      <member refid="class_quant_lib_1_1_index_1a91fce2b65887f04e2cbcae5d9ffcc15e" prot="public" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>addFixings</name></member>
      <member refid="class_quant_lib_1_1_index_1a46b3d6241bd06bd76a49123c5c0011cf" prot="public" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>addFixings</name></member>
      <member refid="class_quant_lib_1_1_swap_spread_index_1af31956102550225d2c803acfffb821a3" prot="public" virt="virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>allowsNativeFixings</name></member>
      <member refid="class_quant_lib_1_1_index_1a6ebd31a5c6890f2dc0b25fc7824c809c" prot="public" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>clearFixings</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_index_1aca07972dd06ccc847288e9178da5bb9d" prot="public" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>currency</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_index_1aaee9f066740ca44c28d17bf3e91d4eb2" prot="protected" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>currency_</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_index_1aaefd01a06bcac404367a49c13b5cc6ee" prot="public" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>dayCounter</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_index_1af5c8b54dc418eb729e3c1d0b2500506b" prot="protected" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>dayCounter_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_index_1a04393be3f78545a798ba8a0827a40057" prot="public" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>familyName</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_index_1a86463919bcb4d925443925508b588cea" prot="protected" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>familyName_</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_index_1a6b43e49133a6de954b1e1f5bfae290ca" prot="public" virt="virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>fixing</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_index_1a7d1f0d9b3146e03d1c24d31349664f94" prot="public" virt="virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>fixingCalendar</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_index_1abb96d719861f38d521270595c823f6bc" prot="public" virt="virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>fixingDate</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_index_1a4d63f8f06ea625150be8f893638fa4ac" prot="public" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>fixingDays</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_index_1a56256a03588b5ec880c7dd155dd1b2e7" prot="protected" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>fixingDays_</name></member>
      <member refid="class_quant_lib_1_1_swap_spread_index_1a0939483b56695aebd0442b25c5dbefb7" prot="public" virt="virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>forecastFixing</name></member>
      <member refid="class_quant_lib_1_1_swap_spread_index_1a548dc7b200dc61589b4d22205f8bbf43" prot="public" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>gearing1</name></member>
      <member refid="class_quant_lib_1_1_swap_spread_index_1aedea56f86c1ce5a31d75dceb77e12fc0" prot="private" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>gearing1_</name></member>
      <member refid="class_quant_lib_1_1_swap_spread_index_1a62b53019f2cd4934d22b4cbe4fa419aa" prot="public" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>gearing2</name></member>
      <member refid="class_quant_lib_1_1_swap_spread_index_1afd3dde7a1c2dc52723b3778ca24ecb0b" prot="private" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>gearing2_</name></member>
      <member refid="class_quant_lib_1_1_index_1a3ca2ef1910e74b22dd55c39013642a5c" prot="public" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>hasHistoricalFixing</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_index_1a03ad9af530f520f9f6236513c37e5393" prot="public" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>InterestRateIndex</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_index_1a3f9092374116cba7eaef47b7381fb3d0" prot="public" virt="virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>isValidFixingDate</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::SwapSpreadIndex</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_swap_spread_index_1a8556633f65da659d3d91e8b375d65404" prot="public" virt="virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>maturityDate</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_index_1a5666a75ccc5d78a4691790eb6fc4a3c7" prot="public" virt="virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>name</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_index_1a2c0b4ae2dbefe57327164cfbe843c5ab" prot="protected" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>name_</name></member>
      <member refid="class_quant_lib_1_1_index_1aa9172bf19d428e1d212ef2e331ad8785" prot="protected" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>notifier</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::SwapSpreadIndex</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::SwapSpreadIndex</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::SwapSpreadIndex</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::SwapSpreadIndex</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::SwapSpreadIndex</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_swap_spread_index_1af34dc51b22d445c2323f967ec2eaa715" prot="public" virt="virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>pastFixing</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_swap_spread_index_1af0eaffbabf1f63782ff9db126ccde0ba" prot="public" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>swapIndex1</name></member>
      <member refid="class_quant_lib_1_1_swap_spread_index_1a23870f6edcd65c96819d28d006db8670" prot="private" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>swapIndex1_</name></member>
      <member refid="class_quant_lib_1_1_swap_spread_index_1a2aa39686f0ce712dad9391b5b93e2485" prot="public" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>swapIndex2</name></member>
      <member refid="class_quant_lib_1_1_swap_spread_index_1a4709deeb422d68d3dbd49afd36cd2c1b" prot="private" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>swapIndex2_</name></member>
      <member refid="class_quant_lib_1_1_swap_spread_index_1a20a4dcb2dfed944b1dc460f9ceca2c84" prot="public" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>SwapSpreadIndex</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_index_1a3544330e6634316663404a04720191e3" prot="public" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>tenor</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_index_1aa8f8b81ecbad6053d3c5a65da6166327" prot="protected" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>tenor_</name></member>
      <member refid="class_quant_lib_1_1_index_1a373faa497820b43992d18ead1a8b87a8" prot="public" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>timeSeries</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_index_1a790ff8bc3caa48efbdb968f6fd23edf0" prot="public" virt="virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_index_1af2dc5c8f3ac8ba2fe3d0891ac81ab419" prot="public" virt="virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>valueDate</name></member>
      <member refid="class_quant_lib_1_1_index_1a5e8202e51d4c2053f61cb47d3f76b42f" prot="public" virt="non-virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>~Index</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::SwapSpreadIndex</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_fra_rate_helper" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::FraRateHelper</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_relative_date_bootstrap_helper" prot="public" virt="non-virtual">QuantLib::RelativeDateBootstrapHelper&lt; YieldTermStructure &gt;</basecompoundref>
    <includes refid="ratehelpers_8hpp" local="no">ratehelpers.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Visitability</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_fra_rate_helper_1ad9f8ba6e2347cb60980155f85ec2d365" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::FraRateHelper::fixingDate_</definition>
        <argsstring></argsstring>
        <name>fixingDate_</name>
        <qualifiedname>QuantLib::FraRateHelper::fixingDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/ratehelpers.hpp" line="255" column="14" bodyfile="ql/termstructures/yield/ratehelpers.hpp" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fra_rate_helper_1aab5d1d36d72f755b48fac2ca2f498a2f" prot="private" static="no" mutable="no">
        <type>ext::optional&lt; <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &gt;</type>
        <definition>ext::optional&lt;Period&gt; QuantLib::FraRateHelper::periodToStart_</definition>
        <argsstring></argsstring>
        <name>periodToStart_</name>
        <qualifiedname>QuantLib::FraRateHelper::periodToStart_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/ratehelpers.hpp" line="256" column="23" bodyfile="ql/termstructures/yield/ratehelpers.hpp" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fra_rate_helper_1afec03bfb176472183462e0a4fb885928" prot="private" static="no" mutable="no">
        <type>ext::optional&lt; <ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref> &gt;</type>
        <definition>ext::optional&lt;Natural&gt; QuantLib::FraRateHelper::immOffsetStart_</definition>
        <argsstring></argsstring>
        <name>immOffsetStart_</name>
        <qualifiedname>QuantLib::FraRateHelper::immOffsetStart_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/ratehelpers.hpp" line="257" column="23" bodyfile="ql/termstructures/yield/ratehelpers.hpp" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fra_rate_helper_1a0b1557b73a06f80765d9585e1b3057c1" prot="private" static="no" mutable="no">
        <type>ext::optional&lt; <ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref> &gt;</type>
        <definition>ext::optional&lt;Natural&gt; QuantLib::FraRateHelper::immOffsetEnd_</definition>
        <argsstring></argsstring>
        <name>immOffsetEnd_</name>
        <qualifiedname>QuantLib::FraRateHelper::immOffsetEnd_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/ratehelpers.hpp" line="257" column="39" bodyfile="ql/termstructures/yield/ratehelpers.hpp" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fra_rate_helper_1a3f68a68e56bb4bd6aefb2e4cf96ea95f" prot="private" static="no" mutable="no">
        <type><ref refid="struct_quant_lib_1_1_pillar_1a50e175c9dea105ebbceba3b70f807561" kindref="member">Pillar::Choice</ref></type>
        <definition>Pillar::Choice QuantLib::FraRateHelper::pillarChoice_</definition>
        <argsstring></argsstring>
        <name>pillarChoice_</name>
        <qualifiedname>QuantLib::FraRateHelper::pillarChoice_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/ratehelpers.hpp" line="258" column="24" bodyfile="ql/termstructures/yield/ratehelpers.hpp" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fra_rate_helper_1a3ef775f45398fd711cff2701027c42d6" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_ibor_index" kindref="compound">IborIndex</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;IborIndex&gt; QuantLib::FraRateHelper::iborIndex_</definition>
        <argsstring></argsstring>
        <name>iborIndex_</name>
        <qualifiedname>QuantLib::FraRateHelper::iborIndex_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/ratehelpers.hpp" line="259" column="25" bodyfile="ql/termstructures/yield/ratehelpers.hpp" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fra_rate_helper_1aab71eb2c980947f5954fcebce0f9f556" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_relinkable_handle" kindref="compound">RelinkableHandle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
        <definition>RelinkableHandle&lt;YieldTermStructure&gt; QuantLib::FraRateHelper::termStructureHandle_</definition>
        <argsstring></argsstring>
        <name>termStructureHandle_</name>
        <qualifiedname>QuantLib::FraRateHelper::termStructureHandle_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/ratehelpers.hpp" line="260" column="26" bodyfile="ql/termstructures/yield/ratehelpers.hpp" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fra_rate_helper_1a3f928db514f269393d32f17755c24e2c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::FraRateHelper::useIndexedCoupon_</definition>
        <argsstring></argsstring>
        <name>useIndexedCoupon_</name>
        <qualifiedname>QuantLib::FraRateHelper::useIndexedCoupon_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/ratehelpers.hpp" line="261" column="14" bodyfile="ql/termstructures/yield/ratehelpers.hpp" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fra_rate_helper_1a94374db38ca1a7fc13b16a46b448bd07" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::FraRateHelper::spanningTime_</definition>
        <argsstring></argsstring>
        <name>spanningTime_</name>
        <qualifiedname>QuantLib::FraRateHelper::spanningTime_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/ratehelpers.hpp" line="262" column="14" bodyfile="ql/termstructures/yield/ratehelpers.hpp" bodystart="262" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fra_rate_helper_1a80da2fc78f4d929597ba6e202450655b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::FraRateHelper::accept</definition>
        <argsstring>(AcyclicVisitor &amp;) override</argsstring>
        <name>accept</name>
        <qualifiedname>QuantLib::FraRateHelper::accept</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_bootstrap_helper_1a972d69e74106276b0fe15239047746b9">accept</reimplements>
        <param>
          <type><ref refid="class_quant_lib_1_1_acyclic_visitor" kindref="compound">AcyclicVisitor</ref> &amp;</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/ratehelpers.hpp" line="251" column="14" bodyfile="ql/termstructures/yield/ratehelpers.cpp" bodystart="548" bodyend="554"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fra_rate_helper_1a4764afed6cab34350775cef50075300e" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::FraRateHelper::initializeDates</definition>
        <argsstring>() override</argsstring>
        <name>initializeDates</name>
        <qualifiedname>QuantLib::FraRateHelper::initializeDates</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_relative_date_bootstrap_helper_1aa12d7f84217a8bb00db41dbaccd89099">initializeDates</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/ratehelpers.hpp" line="254" column="14" bodyfile="ql/termstructures/yield/ratehelpers.cpp" bodystart="488" bodyend="546"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>RateHelper interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_fra_rate_helper_1a65e182be109384bc9c668774dc27cacd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::FraRateHelper::impliedQuote</definition>
        <argsstring>() const override</argsstring>
        <name>impliedQuote</name>
        <qualifiedname>QuantLib::FraRateHelper::impliedQuote</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_bootstrap_helper_1a6a29e23cead4e1b1bda334f1de80b17d">impliedQuote</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/ratehelpers.hpp" line="246" column="14" bodyfile="ql/termstructures/yield/ratehelpers.cpp" bodystart="456" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fra_rate_helper_1af2c6d69c08a60867cf2a0d7389ba6c2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::FraRateHelper::setTermStructure</definition>
        <argsstring>(YieldTermStructure *) override</argsstring>
        <name>setTermStructure</name>
        <qualifiedname>QuantLib::FraRateHelper::setTermStructure</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_bootstrap_helper_1a1f17a55318c87b85475f7a0ace4881fc">setTermStructure</reimplements>
        <param>
          <type><ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> *</type>
        </param>
        <briefdescription>
<para>sets the term structure to be used for pricing </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>Being a pointer and not a shared_ptr, the term structure is not guaranteed to remain allocated for the whole life of the rate helper. It is responsibility of the programmer to ensure that the pointer remains valid. It is advised that this method is called only inside the term structure being bootstrapped, setting the pointer to <bold>this</bold>, i.e., the term structure itself. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/ratehelpers.hpp" line="247" column="14" bodyfile="ql/termstructures/yield/ratehelpers.cpp" bodystart="467" bodyend="476"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_fra_rate_helper_1af7093b50970ea2466b652433113e6d36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FraRateHelper::FraRateHelper</definition>
        <argsstring>(const Handle&lt; Quote &gt; &amp;rate, Natural monthsToStart, Natural monthsToEnd, Natural fixingDays, const Calendar &amp;calendar, BusinessDayConvention convention, bool endOfMonth, const DayCounter &amp;dayCounter, Pillar::Choice pillar=Pillar::LastRelevantDate, Date customPillarDate=Date(), bool useIndexedCoupon=true)</argsstring>
        <name>FraRateHelper</name>
        <qualifiedname>QuantLib::FraRateHelper::FraRateHelper</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &amp;</type>
          <declname>rate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>monthsToStart</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>monthsToEnd</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>fixingDays</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>calendar</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
          <declname>convention</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>endOfMonth</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
        </param>
        <param>
          <type><ref refid="struct_quant_lib_1_1_pillar_1a50e175c9dea105ebbceba3b70f807561" kindref="member">Pillar::Choice</ref></type>
          <declname>pillar</declname>
          <defval><ref refid="struct_quant_lib_1_1_pillar_1a50e175c9dea105ebbceba3b70f807561a35cd4b72a32ba5ec61d472aa16279c8b" kindref="member">Pillar::LastRelevantDate</ref></defval>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
          <declname>customPillarDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>useIndexedCoupon</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/ratehelpers.hpp" line="155" column="9" bodyfile="ql/termstructures/yield/ratehelpers.cpp" bodystart="293" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fra_rate_helper_1a8ca3321f424bc62aa65e3be55da74b0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FraRateHelper::FraRateHelper</definition>
        <argsstring>(Rate rate, Natural monthsToStart, Natural monthsToEnd, Natural fixingDays, const Calendar &amp;calendar, BusinessDayConvention convention, bool endOfMonth, const DayCounter &amp;dayCounter, Pillar::Choice pillar=Pillar::LastRelevantDate, Date customPillarDate=Date(), bool useIndexedCoupon=true)</argsstring>
        <name>FraRateHelper</name>
        <qualifiedname>QuantLib::FraRateHelper::FraRateHelper</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>rate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>monthsToStart</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>monthsToEnd</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>fixingDays</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>calendar</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
          <declname>convention</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>endOfMonth</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
        </param>
        <param>
          <type><ref refid="struct_quant_lib_1_1_pillar_1a50e175c9dea105ebbceba3b70f807561" kindref="member">Pillar::Choice</ref></type>
          <declname>pillar</declname>
          <defval><ref refid="struct_quant_lib_1_1_pillar_1a50e175c9dea105ebbceba3b70f807561a35cd4b72a32ba5ec61d472aa16279c8b" kindref="member">Pillar::LastRelevantDate</ref></defval>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
          <declname>customPillarDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>useIndexedCoupon</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/ratehelpers.hpp" line="166" column="9" bodyfile="ql/termstructures/yield/ratehelpers.cpp" bodystart="312" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fra_rate_helper_1a0c64b7c6b0061ded11c6c7f3f10fdfc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FraRateHelper::FraRateHelper</definition>
        <argsstring>(const Handle&lt; Quote &gt; &amp;rate, Natural monthsToStart, const ext::shared_ptr&lt; IborIndex &gt; &amp;iborIndex, Pillar::Choice pillar=Pillar::LastRelevantDate, Date customPillarDate=Date(), bool useIndexedCoupon=true)</argsstring>
        <name>FraRateHelper</name>
        <qualifiedname>QuantLib::FraRateHelper::FraRateHelper</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &amp;</type>
          <declname>rate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>monthsToStart</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_ibor_index" kindref="compound">IborIndex</ref> &gt; &amp;</type>
          <declname>iborIndex</declname>
        </param>
        <param>
          <type><ref refid="struct_quant_lib_1_1_pillar_1a50e175c9dea105ebbceba3b70f807561" kindref="member">Pillar::Choice</ref></type>
          <declname>pillar</declname>
          <defval><ref refid="struct_quant_lib_1_1_pillar_1a50e175c9dea105ebbceba3b70f807561a35cd4b72a32ba5ec61d472aa16279c8b" kindref="member">Pillar::LastRelevantDate</ref></defval>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
          <declname>customPillarDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>useIndexedCoupon</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/ratehelpers.hpp" line="177" column="9" bodyfile="ql/termstructures/yield/ratehelpers.cpp" bodystart="326" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fra_rate_helper_1a15f15415e9e4cef1673b1b08eb2dbe66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FraRateHelper::FraRateHelper</definition>
        <argsstring>(Rate rate, Natural monthsToStart, const ext::shared_ptr&lt; IborIndex &gt; &amp;iborIndex, Pillar::Choice pillar=Pillar::LastRelevantDate, Date customPillarDate=Date(), bool useIndexedCoupon=true)</argsstring>
        <name>FraRateHelper</name>
        <qualifiedname>QuantLib::FraRateHelper::FraRateHelper</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>rate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>monthsToStart</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_ibor_index" kindref="compound">IborIndex</ref> &gt; &amp;</type>
          <declname>iborIndex</declname>
        </param>
        <param>
          <type><ref refid="struct_quant_lib_1_1_pillar_1a50e175c9dea105ebbceba3b70f807561" kindref="member">Pillar::Choice</ref></type>
          <declname>pillar</declname>
          <defval><ref refid="struct_quant_lib_1_1_pillar_1a50e175c9dea105ebbceba3b70f807561a35cd4b72a32ba5ec61d472aa16279c8b" kindref="member">Pillar::LastRelevantDate</ref></defval>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
          <declname>customPillarDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>useIndexedCoupon</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/ratehelpers.hpp" line="183" column="9" bodyfile="ql/termstructures/yield/ratehelpers.cpp" bodystart="335" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fra_rate_helper_1a06fdf90d97b95288819a4e3166940880" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FraRateHelper::FraRateHelper</definition>
        <argsstring>(const Handle&lt; Quote &gt; &amp;rate, Period periodToStart, Natural lengthInMonths, Natural fixingDays, const Calendar &amp;calendar, BusinessDayConvention convention, bool endOfMonth, const DayCounter &amp;dayCounter, Pillar::Choice pillar=Pillar::LastRelevantDate, Date customPillarDate=Date(), bool useIndexedCoupon=true)</argsstring>
        <name>FraRateHelper</name>
        <qualifiedname>QuantLib::FraRateHelper::FraRateHelper</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &amp;</type>
          <declname>rate</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref></type>
          <declname>periodToStart</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>lengthInMonths</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>fixingDays</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>calendar</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
          <declname>convention</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>endOfMonth</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
        </param>
        <param>
          <type><ref refid="struct_quant_lib_1_1_pillar_1a50e175c9dea105ebbceba3b70f807561" kindref="member">Pillar::Choice</ref></type>
          <declname>pillar</declname>
          <defval><ref refid="struct_quant_lib_1_1_pillar_1a50e175c9dea105ebbceba3b70f807561a35cd4b72a32ba5ec61d472aa16279c8b" kindref="member">Pillar::LastRelevantDate</ref></defval>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
          <declname>customPillarDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>useIndexedCoupon</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/ratehelpers.hpp" line="189" column="9" bodyfile="ql/termstructures/yield/ratehelpers.cpp" bodystart="343" bodyend="365"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fra_rate_helper_1a1934798e5d256772725a58478c20f4db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FraRateHelper::FraRateHelper</definition>
        <argsstring>(Rate rate, Period periodToStart, Natural lengthInMonths, Natural fixingDays, const Calendar &amp;calendar, BusinessDayConvention convention, bool endOfMonth, const DayCounter &amp;dayCounter, Pillar::Choice pillar=Pillar::LastRelevantDate, Date customPillarDate=Date(), bool useIndexedCoupon=true)</argsstring>
        <name>FraRateHelper</name>
        <qualifiedname>QuantLib::FraRateHelper::FraRateHelper</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>rate</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref></type>
          <declname>periodToStart</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>lengthInMonths</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>fixingDays</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>calendar</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
          <declname>convention</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>endOfMonth</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
        </param>
        <param>
          <type><ref refid="struct_quant_lib_1_1_pillar_1a50e175c9dea105ebbceba3b70f807561" kindref="member">Pillar::Choice</ref></type>
          <declname>pillar</declname>
          <defval><ref refid="struct_quant_lib_1_1_pillar_1a50e175c9dea105ebbceba3b70f807561a35cd4b72a32ba5ec61d472aa16279c8b" kindref="member">Pillar::LastRelevantDate</ref></defval>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
          <declname>customPillarDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>useIndexedCoupon</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/ratehelpers.hpp" line="200" column="9" bodyfile="ql/termstructures/yield/ratehelpers.cpp" bodystart="367" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fra_rate_helper_1a7d16c9a89f1c76ee346fe49bea0251b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FraRateHelper::FraRateHelper</definition>
        <argsstring>(const Handle&lt; Quote &gt; &amp;rate, Period periodToStart, const ext::shared_ptr&lt; IborIndex &gt; &amp;iborIndex, Pillar::Choice pillar=Pillar::LastRelevantDate, Date customPillarDate=Date(), bool useIndexedCoupon=true)</argsstring>
        <name>FraRateHelper</name>
        <qualifiedname>QuantLib::FraRateHelper::FraRateHelper</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &amp;</type>
          <declname>rate</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref></type>
          <declname>periodToStart</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_ibor_index" kindref="compound">IborIndex</ref> &gt; &amp;</type>
          <declname>iborIndex</declname>
        </param>
        <param>
          <type><ref refid="struct_quant_lib_1_1_pillar_1a50e175c9dea105ebbceba3b70f807561" kindref="member">Pillar::Choice</ref></type>
          <declname>pillar</declname>
          <defval><ref refid="struct_quant_lib_1_1_pillar_1a50e175c9dea105ebbceba3b70f807561a35cd4b72a32ba5ec61d472aa16279c8b" kindref="member">Pillar::LastRelevantDate</ref></defval>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
          <declname>customPillarDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>useIndexedCoupon</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/ratehelpers.hpp" line="211" column="9" bodyfile="ql/termstructures/yield/ratehelpers.cpp" bodystart="381" bodyend="398"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fra_rate_helper_1a82fbfa1370d23bc4bcba8d2b36bf9009" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FraRateHelper::FraRateHelper</definition>
        <argsstring>(Rate rate, Period periodToStart, const ext::shared_ptr&lt; IborIndex &gt; &amp;iborIndex, Pillar::Choice pillar=Pillar::LastRelevantDate, Date customPillarDate=Date(), bool useIndexedCoupon=true)</argsstring>
        <name>FraRateHelper</name>
        <qualifiedname>QuantLib::FraRateHelper::FraRateHelper</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>rate</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref></type>
          <declname>periodToStart</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_ibor_index" kindref="compound">IborIndex</ref> &gt; &amp;</type>
          <declname>iborIndex</declname>
        </param>
        <param>
          <type><ref refid="struct_quant_lib_1_1_pillar_1a50e175c9dea105ebbceba3b70f807561" kindref="member">Pillar::Choice</ref></type>
          <declname>pillar</declname>
          <defval><ref refid="struct_quant_lib_1_1_pillar_1a50e175c9dea105ebbceba3b70f807561a35cd4b72a32ba5ec61d472aa16279c8b" kindref="member">Pillar::LastRelevantDate</ref></defval>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
          <declname>customPillarDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>useIndexedCoupon</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/ratehelpers.hpp" line="217" column="9" bodyfile="ql/termstructures/yield/ratehelpers.cpp" bodystart="400" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fra_rate_helper_1aac60736ac35ee62f11b42e02c9750723" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FraRateHelper::FraRateHelper</definition>
        <argsstring>(const Handle&lt; Quote &gt; &amp;rate, Natural immOffsetStart, Natural immOffsetEnd, const ext::shared_ptr&lt; IborIndex &gt; &amp;iborIndex, Pillar::Choice pillar=Pillar::LastRelevantDate, Date customPillarDate=Date(), bool useIndexedCoupon=true)</argsstring>
        <name>FraRateHelper</name>
        <qualifiedname>QuantLib::FraRateHelper::FraRateHelper</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &amp;</type>
          <declname>rate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>immOffsetStart</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>immOffsetEnd</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_ibor_index" kindref="compound">IborIndex</ref> &gt; &amp;</type>
          <declname>iborIndex</declname>
        </param>
        <param>
          <type><ref refid="struct_quant_lib_1_1_pillar_1a50e175c9dea105ebbceba3b70f807561" kindref="member">Pillar::Choice</ref></type>
          <declname>pillar</declname>
          <defval><ref refid="struct_quant_lib_1_1_pillar_1a50e175c9dea105ebbceba3b70f807561a35cd4b72a32ba5ec61d472aa16279c8b" kindref="member">Pillar::LastRelevantDate</ref></defval>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
          <declname>customPillarDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>useIndexedCoupon</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/ratehelpers.hpp" line="223" column="9" bodyfile="ql/termstructures/yield/ratehelpers.cpp" bodystart="408" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fra_rate_helper_1a571fb333c0e5db655db7a9327ed3a5e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FraRateHelper::FraRateHelper</definition>
        <argsstring>(Rate rate, Natural immOffsetStart, Natural immOffsetEnd, const ext::shared_ptr&lt; IborIndex &gt; &amp;iborIndex, Pillar::Choice pillar=Pillar::LastRelevantDate, Date customPillarDate=Date(), bool useIndexedCoupon=true)</argsstring>
        <name>FraRateHelper</name>
        <qualifiedname>QuantLib::FraRateHelper::FraRateHelper</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>rate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>immOffsetStart</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>immOffsetEnd</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_ibor_index" kindref="compound">IborIndex</ref> &gt; &amp;</type>
          <declname>iborIndex</declname>
        </param>
        <param>
          <type><ref refid="struct_quant_lib_1_1_pillar_1a50e175c9dea105ebbceba3b70f807561" kindref="member">Pillar::Choice</ref></type>
          <declname>pillar</declname>
          <defval><ref refid="struct_quant_lib_1_1_pillar_1a50e175c9dea105ebbceba3b70f807561a35cd4b72a32ba5ec61d472aa16279c8b" kindref="member">Pillar::LastRelevantDate</ref></defval>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
          <declname>customPillarDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>useIndexedCoupon</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/ratehelpers.hpp" line="230" column="9" bodyfile="ql/termstructures/yield/ratehelpers.cpp" bodystart="426" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fra_rate_helper_1a8332e6fba695f6e741172002a7577ecf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FraRateHelper::FraRateHelper</definition>
        <argsstring>(const Handle&lt; Quote &gt; &amp;rate, Date startDate, Date endDate, const ext::shared_ptr&lt; IborIndex &gt; &amp;iborIndex, Pillar::Choice pillar=Pillar::LastRelevantDate, Date customPillarDate=Date(), bool useIndexedCoupon=true)</argsstring>
        <name>FraRateHelper</name>
        <qualifiedname>QuantLib::FraRateHelper::FraRateHelper</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &amp;</type>
          <declname>rate</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
          <declname>startDate</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
          <declname>endDate</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_ibor_index" kindref="compound">IborIndex</ref> &gt; &amp;</type>
          <declname>iborIndex</declname>
        </param>
        <param>
          <type><ref refid="struct_quant_lib_1_1_pillar_1a50e175c9dea105ebbceba3b70f807561" kindref="member">Pillar::Choice</ref></type>
          <declname>pillar</declname>
          <defval><ref refid="struct_quant_lib_1_1_pillar_1a50e175c9dea105ebbceba3b70f807561a35cd4b72a32ba5ec61d472aa16279c8b" kindref="member">Pillar::LastRelevantDate</ref></defval>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
          <declname>customPillarDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>useIndexedCoupon</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/ratehelpers.hpp" line="237" column="9" bodyfile="ql/termstructures/yield/ratehelpers.cpp" bodystart="436" bodyend="454"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> helper for bootstrapping over FRA rates. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>QuantLib::BootstrapHelper&lt; YieldTermStructure &gt;</label>
        <link refid="class_quant_lib_1_1_bootstrap_helper"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::FraRateHelper</label>
        <link refid="class_quant_lib_1_1_fra_rate_helper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>RelativeDateRateHelper</label>
        <link refid="class_quant_lib_1_1_relative_date_bootstrap_helper"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>QuantLib::BootstrapHelper&lt; YieldTermStructure &gt;</label>
        <link refid="class_quant_lib_1_1_bootstrap_helper"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::FraRateHelper</label>
        <link refid="class_quant_lib_1_1_fra_rate_helper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="4">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>RelativeDateRateHelper</label>
        <link refid="class_quant_lib_1_1_relative_date_bootstrap_helper"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/termstructures/yield/ratehelpers.hpp" line="153" column="5" bodyfile="ql/termstructures/yield/ratehelpers.hpp" bodystart="153" bodyend="263"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_fra_rate_helper_1a80da2fc78f4d929597ba6e202450655b" prot="public" virt="virtual"><scope>QuantLib::FraRateHelper</scope><name>accept</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a6e05e5d944839468441bca22c133d65a" prot="public" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>BootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a30a010aae5e4cc54d38457de4aa39c7e" prot="public" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>BootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a6e05e5d944839468441bca22c133d65a" prot="public" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>BootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a30a010aae5e4cc54d38457de4aa39c7e" prot="public" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>BootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::FraRateHelper</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a1ca284f9f4ade8b17be1f5c284b1cfb2" prot="public" virt="virtual"><scope>QuantLib::FraRateHelper</scope><name>earliestDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a1ca284f9f4ade8b17be1f5c284b1cfb2" prot="public" virt="virtual"><scope>QuantLib::FraRateHelper</scope><name>earliestDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a3f5c545866d04dc90e2c3aec44974e08" prot="protected" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>earliestDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a3f5c545866d04dc90e2c3aec44974e08" prot="protected" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>earliestDate_</name></member>
      <member refid="class_quant_lib_1_1_relative_date_bootstrap_helper_1af7bdb39c6fd9c90a70af730244021a6d" prot="protected" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>evaluationDate_</name></member>
      <member refid="class_quant_lib_1_1_relative_date_bootstrap_helper_1af7bdb39c6fd9c90a70af730244021a6d" prot="protected" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>evaluationDate_</name></member>
      <member refid="class_quant_lib_1_1_fra_rate_helper_1ad9f8ba6e2347cb60980155f85ec2d365" prot="private" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>fixingDate_</name></member>
      <member refid="class_quant_lib_1_1_fra_rate_helper_1af7093b50970ea2466b652433113e6d36" prot="public" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>FraRateHelper</name></member>
      <member refid="class_quant_lib_1_1_fra_rate_helper_1a8ca3321f424bc62aa65e3be55da74b0f" prot="public" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>FraRateHelper</name></member>
      <member refid="class_quant_lib_1_1_fra_rate_helper_1a0c64b7c6b0061ded11c6c7f3f10fdfc1" prot="public" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>FraRateHelper</name></member>
      <member refid="class_quant_lib_1_1_fra_rate_helper_1a15f15415e9e4cef1673b1b08eb2dbe66" prot="public" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>FraRateHelper</name></member>
      <member refid="class_quant_lib_1_1_fra_rate_helper_1a06fdf90d97b95288819a4e3166940880" prot="public" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>FraRateHelper</name></member>
      <member refid="class_quant_lib_1_1_fra_rate_helper_1a1934798e5d256772725a58478c20f4db" prot="public" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>FraRateHelper</name></member>
      <member refid="class_quant_lib_1_1_fra_rate_helper_1a7d16c9a89f1c76ee346fe49bea0251b9" prot="public" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>FraRateHelper</name></member>
      <member refid="class_quant_lib_1_1_fra_rate_helper_1a82fbfa1370d23bc4bcba8d2b36bf9009" prot="public" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>FraRateHelper</name></member>
      <member refid="class_quant_lib_1_1_fra_rate_helper_1aac60736ac35ee62f11b42e02c9750723" prot="public" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>FraRateHelper</name></member>
      <member refid="class_quant_lib_1_1_fra_rate_helper_1a571fb333c0e5db655db7a9327ed3a5e9" prot="public" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>FraRateHelper</name></member>
      <member refid="class_quant_lib_1_1_fra_rate_helper_1a8332e6fba695f6e741172002a7577ecf" prot="public" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>FraRateHelper</name></member>
      <member refid="class_quant_lib_1_1_fra_rate_helper_1a3ef775f45398fd711cff2701027c42d6" prot="private" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>iborIndex_</name></member>
      <member refid="class_quant_lib_1_1_fra_rate_helper_1a0b1557b73a06f80765d9585e1b3057c1" prot="private" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>immOffsetEnd_</name></member>
      <member refid="class_quant_lib_1_1_fra_rate_helper_1afec03bfb176472183462e0a4fb885928" prot="private" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>immOffsetStart_</name></member>
      <member refid="class_quant_lib_1_1_fra_rate_helper_1a65e182be109384bc9c668774dc27cacd" prot="public" virt="virtual"><scope>QuantLib::FraRateHelper</scope><name>impliedQuote</name></member>
      <member refid="class_quant_lib_1_1_fra_rate_helper_1a4764afed6cab34350775cef50075300e" prot="private" virt="virtual"><scope>QuantLib::FraRateHelper</scope><name>initializeDates</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::FraRateHelper</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a7b21f7d30980757a9721ef13ad7979af" prot="public" virt="virtual"><scope>QuantLib::FraRateHelper</scope><name>latestDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a7b21f7d30980757a9721ef13ad7979af" prot="public" virt="virtual"><scope>QuantLib::FraRateHelper</scope><name>latestDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a73a413539e8d6a526e8cc29f928f976c" prot="protected" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>latestDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a73a413539e8d6a526e8cc29f928f976c" prot="protected" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>latestDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1afc339bcd0b9d3029c20dfacaac5adf52" prot="public" virt="virtual"><scope>QuantLib::FraRateHelper</scope><name>latestRelevantDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1afc339bcd0b9d3029c20dfacaac5adf52" prot="public" virt="virtual"><scope>QuantLib::FraRateHelper</scope><name>latestRelevantDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a06f481f14c2b2b0624f2e0f8967353b0" prot="protected" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>latestRelevantDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a06f481f14c2b2b0624f2e0f8967353b0" prot="protected" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>latestRelevantDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1ad74f6e8a3c4f734a83edacaeb6fe53e0" prot="public" virt="virtual"><scope>QuantLib::FraRateHelper</scope><name>maturityDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1ad74f6e8a3c4f734a83edacaeb6fe53e0" prot="public" virt="virtual"><scope>QuantLib::FraRateHelper</scope><name>maturityDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1aa79e8a482771bdf0656a7afa4c557118" prot="protected" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>maturityDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1aa79e8a482771bdf0656a7afa4c557118" prot="protected" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>maturityDate_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::FraRateHelper</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::FraRateHelper</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::FraRateHelper</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::FraRateHelper</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::FraRateHelper</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_fra_rate_helper_1aab5d1d36d72f755b48fac2ca2f498a2f" prot="private" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>periodToStart_</name></member>
      <member refid="class_quant_lib_1_1_fra_rate_helper_1a3f68a68e56bb4bd6aefb2e4cf96ea95f" prot="private" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>pillarChoice_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a00496ecfac2fb317e435a6fe48c5c267" prot="public" virt="virtual"><scope>QuantLib::FraRateHelper</scope><name>pillarDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a00496ecfac2fb317e435a6fe48c5c267" prot="public" virt="virtual"><scope>QuantLib::FraRateHelper</scope><name>pillarDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1aa1aa18bed40139d0dae5e0df17968255" prot="protected" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>pillarDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1aa1aa18bed40139d0dae5e0df17968255" prot="protected" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>pillarDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a9e9a17bde5f762d0f75305310a84ae4d" prot="public" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>quote</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a9e9a17bde5f762d0f75305310a84ae4d" prot="public" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>quote</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a8480a30335c8da30122287bf782bc4b3" prot="protected" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>quote_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a8480a30335c8da30122287bf782bc4b3" prot="protected" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>quote_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a9bd06175fab6b2b4326c36b7e0f18007" prot="public" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>quoteError</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a9bd06175fab6b2b4326c36b7e0f18007" prot="public" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>quoteError</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_relative_date_bootstrap_helper_1aeefd88603a3b1d911fc9aad76a67b065" prot="public" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>RelativeDateBootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_relative_date_bootstrap_helper_1a6375d375c4eab6ed86c0d1bee5394e41" prot="public" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>RelativeDateBootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_relative_date_bootstrap_helper_1aeefd88603a3b1d911fc9aad76a67b065" prot="public" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>RelativeDateBootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_relative_date_bootstrap_helper_1a6375d375c4eab6ed86c0d1bee5394e41" prot="public" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>RelativeDateBootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_fra_rate_helper_1af2c6d69c08a60867cf2a0d7389ba6c2b" prot="public" virt="virtual"><scope>QuantLib::FraRateHelper</scope><name>setTermStructure</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a1f17a55318c87b85475f7a0ace4881fc" prot="public" virt="virtual" ambiguityscope="QuantLib::RelativeDateBootstrapHelper&lt; YieldTermStructure &gt;::"><scope>QuantLib::FraRateHelper</scope><name>setTermStructure</name></member>
      <member refid="class_quant_lib_1_1_fra_rate_helper_1a94374db38ca1a7fc13b16a46b448bd07" prot="private" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>spanningTime_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a45322b36556492c6e52e1c64ebc8668e" prot="protected" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>termStructure_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a45322b36556492c6e52e1c64ebc8668e" prot="protected" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>termStructure_</name></member>
      <member refid="class_quant_lib_1_1_fra_rate_helper_1aab71eb2c980947f5954fcebce0f9f556" prot="private" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>termStructureHandle_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_relative_date_bootstrap_helper_1a3d3ea6859e64e392e78a8fbbe36f182f" prot="public" virt="virtual"><scope>QuantLib::FraRateHelper</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_relative_date_bootstrap_helper_1a3d3ea6859e64e392e78a8fbbe36f182f" prot="public" virt="virtual"><scope>QuantLib::FraRateHelper</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_relative_date_bootstrap_helper_1a248333b3e87cfcbfeca52f97cca368b0" prot="protected" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>updateDates_</name></member>
      <member refid="class_quant_lib_1_1_relative_date_bootstrap_helper_1a248333b3e87cfcbfeca52f97cca368b0" prot="protected" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>updateDates_</name></member>
      <member refid="class_quant_lib_1_1_fra_rate_helper_1a3f928db514f269393d32f17755c24e2c" prot="private" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>useIndexedCoupon_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a950cc899a68be0a5f04119edd931bd1d" prot="public" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>~BootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a950cc899a68be0a5f04119edd931bd1d" prot="public" virt="non-virtual"><scope>QuantLib::FraRateHelper</scope><name>~BootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::FraRateHelper</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::FraRateHelper</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

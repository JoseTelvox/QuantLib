<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_fdm_v_p_p_start_limit_step_condition" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::FdmVPPStartLimitStepCondition</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_fdm_v_p_p_step_condition" prot="public" virt="non-virtual">QuantLib::FdmVPPStepCondition</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_v_p_p_start_limit_step_condition_1a77e5f664cf84e8b3617ffee63d1b87fd" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>const Size QuantLib::FdmVPPStartLimitStepCondition::nStarts_</definition>
        <argsstring></argsstring>
        <name>nStarts_</name>
        <qualifiedname>QuantLib::FdmVPPStartLimitStepCondition::nStarts_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.hpp" line="48" column="20" bodyfile="ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_v_p_p_start_limit_step_condition_1a25010c689cdad1e143e3265cd7688760" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FdmVPPStartLimitStepCondition::FdmVPPStartLimitStepCondition</definition>
        <argsstring>(const FdmVPPStepConditionParams &amp;params, Size nStarts, const FdmVPPStepConditionMesher &amp;mesh, const ext::shared_ptr&lt; FdmInnerValueCalculator &gt; &amp;gasPrice, const ext::shared_ptr&lt; FdmInnerValueCalculator &gt; &amp;sparkSpreadPrice)</argsstring>
        <name>FdmVPPStartLimitStepCondition</name>
        <qualifiedname>QuantLib::FdmVPPStartLimitStepCondition::FdmVPPStartLimitStepCondition</qualifiedname>
        <param>
          <type>const <ref refid="struct_quant_lib_1_1_fdm_v_p_p_step_condition_params" kindref="compound">FdmVPPStepConditionParams</ref> &amp;</type>
          <declname>params</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>nStarts</declname>
        </param>
        <param>
          <type>const <ref refid="struct_quant_lib_1_1_fdm_v_p_p_step_condition_mesher" kindref="compound">FdmVPPStepConditionMesher</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_fdm_inner_value_calculator" kindref="compound">FdmInnerValueCalculator</ref> &gt; &amp;</type>
          <declname>gasPrice</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_fdm_inner_value_calculator" kindref="compound">FdmInnerValueCalculator</ref> &gt; &amp;</type>
          <declname>sparkSpreadPrice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.hpp" line="35" column="9" bodyfile="ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.cpp" bodystart="33" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_v_p_p_start_limit_step_condition_1a8c6f7977e9bf8417f607d1522e98cd3e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::FdmVPPStartLimitStepCondition::maxValue</definition>
        <argsstring>(const Array &amp;states) const override</argsstring>
        <name>maxValue</name>
        <qualifiedname>QuantLib::FdmVPPStartLimitStepCondition::maxValue</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_v_p_p_step_condition_1a6c18b11743fb94caa089d2f6bc87bf6a">maxValue</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>states</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.hpp" line="43" column="14" bodyfile="ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.cpp" bodystart="95" bodyend="97"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_v_p_p_start_limit_step_condition_1acef9b852fbd767389a7bacd52cbfc088" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::FdmVPPStartLimitStepCondition::nStates</definition>
        <argsstring>(Size tMinUp, Size tMinDown, Size nStarts)</argsstring>
        <name>nStates</name>
        <qualifiedname>QuantLib::FdmVPPStartLimitStepCondition::nStates</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>tMinUp</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>tMinDown</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>nStarts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.hpp" line="42" column="21" bodyfile="ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.cpp" bodystart="90" bodyend="93"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_v_p_p_start_limit_step_condition_1a7dc722f1cd10eb88129e02bde8a899eb" prot="private" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FdmVPPStartLimitStepCondition::changeState</definition>
        <argsstring>(Real gasPrice, const Array &amp;state, Time t) const override</argsstring>
        <name>changeState</name>
        <qualifiedname>QuantLib::FdmVPPStartLimitStepCondition::changeState</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_v_p_p_step_condition_1a1678446e709898ac14a9b351a89b69a6">changeState</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>gasPrice</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.hpp" line="46" column="15" bodyfile="ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.cpp" bodystart="47" bodyend="88"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::FdmVPPStartLimitStepCondition</label>
        <link refid="class_quant_lib_1_1_fdm_v_p_p_start_limit_step_condition"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::FdmVPPStepCondition</label>
        <link refid="class_quant_lib_1_1_fdm_v_p_p_step_condition"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::StepCondition&lt; Array &gt;</label>
        <link refid="class_quant_lib_1_1_step_condition"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::FdmVPPStartLimitStepCondition</label>
        <link refid="class_quant_lib_1_1_fdm_v_p_p_start_limit_step_condition"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::FdmVPPStepCondition</label>
        <link refid="class_quant_lib_1_1_fdm_v_p_p_step_condition"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::StepCondition&lt; Array &gt;</label>
        <link refid="class_quant_lib_1_1_step_condition"/>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.hpp" line="33" column="5" bodyfile="ql/experimental/finitedifferences/fdmvppstartlimitstepcondition.hpp" bodystart="33" bodyend="49"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_fdm_v_p_p_step_condition_1a8e93d362a1345988d389f9bde9365fbe" prot="public" virt="virtual"><scope>QuantLib::FdmVPPStartLimitStepCondition</scope><name>applyTo</name></member>
      <member refid="class_quant_lib_1_1_fdm_v_p_p_start_limit_step_condition_1a7dc722f1cd10eb88129e02bde8a899eb" prot="private" virt="virtual"><scope>QuantLib::FdmVPPStartLimitStepCondition</scope><name>changeState</name></member>
      <member refid="class_quant_lib_1_1_fdm_v_p_p_step_condition_1a6355b05b1f5e49686dafc4a1ee7872a9" prot="protected" virt="non-virtual"><scope>QuantLib::FdmVPPStartLimitStepCondition</scope><name>evolve</name></member>
      <member refid="class_quant_lib_1_1_fdm_v_p_p_step_condition_1a2fcb38729f64fde00cd8055823351857" prot="protected" virt="non-virtual"><scope>QuantLib::FdmVPPStartLimitStepCondition</scope><name>evolveAtPMax</name></member>
      <member refid="class_quant_lib_1_1_fdm_v_p_p_step_condition_1aebea3de6dd8cadc00a992f4f7ba5c409" prot="protected" virt="non-virtual"><scope>QuantLib::FdmVPPStartLimitStepCondition</scope><name>evolveAtPMin</name></member>
      <member refid="class_quant_lib_1_1_fdm_v_p_p_start_limit_step_condition_1a25010c689cdad1e143e3265cd7688760" prot="public" virt="non-virtual"><scope>QuantLib::FdmVPPStartLimitStepCondition</scope><name>FdmVPPStartLimitStepCondition</name></member>
      <member refid="class_quant_lib_1_1_fdm_v_p_p_step_condition_1aed748781708721b0182f2c70a9a8c405" prot="public" virt="non-virtual"><scope>QuantLib::FdmVPPStartLimitStepCondition</scope><name>FdmVPPStepCondition</name></member>
      <member refid="class_quant_lib_1_1_fdm_v_p_p_step_condition_1a1974c904735a2348091171d64833aa06" prot="protected" virt="non-virtual"><scope>QuantLib::FdmVPPStartLimitStepCondition</scope><name>fuelCostAddon_</name></member>
      <member refid="class_quant_lib_1_1_fdm_v_p_p_step_condition_1a71f67df7486d3afcb3888a342c08b9d1" prot="protected" virt="non-virtual"><scope>QuantLib::FdmVPPStartLimitStepCondition</scope><name>gasPrice_</name></member>
      <member refid="class_quant_lib_1_1_fdm_v_p_p_step_condition_1abac0febcd55c637b44b1b4ea5f2c2aef" prot="protected" virt="non-virtual"><scope>QuantLib::FdmVPPStartLimitStepCondition</scope><name>heatRate_</name></member>
      <member refid="class_quant_lib_1_1_fdm_v_p_p_start_limit_step_condition_1a8c6f7977e9bf8417f607d1522e98cd3e" prot="public" virt="virtual"><scope>QuantLib::FdmVPPStartLimitStepCondition</scope><name>maxValue</name></member>
      <member refid="class_quant_lib_1_1_fdm_v_p_p_step_condition_1ae32fefad1be0c376fc5350003123b15b" prot="protected" virt="non-virtual"><scope>QuantLib::FdmVPPStartLimitStepCondition</scope><name>mesher_</name></member>
      <member refid="class_quant_lib_1_1_fdm_v_p_p_start_limit_step_condition_1a77e5f664cf84e8b3617ffee63d1b87fd" prot="private" virt="non-virtual"><scope>QuantLib::FdmVPPStartLimitStepCondition</scope><name>nStarts_</name></member>
      <member refid="class_quant_lib_1_1_fdm_v_p_p_start_limit_step_condition_1acef9b852fbd767389a7bacd52cbfc088" prot="public" virt="non-virtual"><scope>QuantLib::FdmVPPStartLimitStepCondition</scope><name>nStates</name></member>
      <member refid="class_quant_lib_1_1_fdm_v_p_p_step_condition_1a5d73196da4e1dcf0e5bc9d1fc7d8bdb9" prot="public" virt="non-virtual" ambiguityscope="QuantLib::FdmVPPStepCondition::"><scope>QuantLib::FdmVPPStartLimitStepCondition</scope><name>nStates</name></member>
      <member refid="class_quant_lib_1_1_fdm_v_p_p_step_condition_1ade694a68079c1edbbdd2fcfa5f36477e" prot="protected" virt="non-virtual"><scope>QuantLib::FdmVPPStartLimitStepCondition</scope><name>nStates_</name></member>
      <member refid="class_quant_lib_1_1_fdm_v_p_p_step_condition_1a762185c7f385848060098d929d18c129" prot="protected" virt="non-virtual"><scope>QuantLib::FdmVPPStartLimitStepCondition</scope><name>pMax_</name></member>
      <member refid="class_quant_lib_1_1_fdm_v_p_p_step_condition_1aeeeeec9f84ee9c0c562067ef8a478a26" prot="protected" virt="non-virtual"><scope>QuantLib::FdmVPPStartLimitStepCondition</scope><name>pMin_</name></member>
      <member refid="class_quant_lib_1_1_fdm_v_p_p_step_condition_1a6c0731bae228c51616fdcab9ea872cb9" prot="protected" virt="non-virtual"><scope>QuantLib::FdmVPPStartLimitStepCondition</scope><name>sparkSpreadPrice_</name></member>
      <member refid="class_quant_lib_1_1_fdm_v_p_p_step_condition_1adeb60998359e793abf94ce8a7d5f5fc5" prot="protected" virt="non-virtual"><scope>QuantLib::FdmVPPStartLimitStepCondition</scope><name>startUpFixCost_</name></member>
      <member refid="class_quant_lib_1_1_fdm_v_p_p_step_condition_1a1fbedf7b0f712091c075fe59b78d9ee0" prot="protected" virt="non-virtual"><scope>QuantLib::FdmVPPStartLimitStepCondition</scope><name>startUpFuel_</name></member>
      <member refid="class_quant_lib_1_1_fdm_v_p_p_step_condition_1aba2aab62d712a89c1b8d37a8bb4c0a02" prot="protected" virt="non-virtual"><scope>QuantLib::FdmVPPStartLimitStepCondition</scope><name>stateDirection_</name></member>
      <member refid="class_quant_lib_1_1_fdm_v_p_p_step_condition_1a9ca34b677a3022fb1d858260f9f6a100" prot="protected" virt="non-virtual"><scope>QuantLib::FdmVPPStartLimitStepCondition</scope><name>stateEvolveFcts_</name></member>
      <member refid="class_quant_lib_1_1_fdm_v_p_p_step_condition_1a0d353dfd46c7d170a478038c3a685f82" prot="protected" virt="non-virtual"><scope>QuantLib::FdmVPPStartLimitStepCondition</scope><name>tMinDown_</name></member>
      <member refid="class_quant_lib_1_1_fdm_v_p_p_step_condition_1aa679ddcbebd434dc860897d70dc9e75f" prot="protected" virt="non-virtual"><scope>QuantLib::FdmVPPStartLimitStepCondition</scope><name>tMinUp_</name></member>
      <member refid="class_quant_lib_1_1_step_condition_1a0867129678b1b4ae02e4d5630ee598ac" prot="public" virt="virtual"><scope>QuantLib::FdmVPPStartLimitStepCondition</scope><name>~StepCondition</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

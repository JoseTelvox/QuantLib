<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_futures_rate_helper" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::FuturesRateHelper</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_bootstrap_helper" prot="public" virt="non-virtual">QuantLib::BootstrapHelper&lt; YieldTermStructure &gt;</basecompoundref>
    <includes refid="ratehelpers_8hpp" local="no">ratehelpers.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Visitability</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_futures_rate_helper_1a20c089f5d41391f7bcb570a0865cc435" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>Time QuantLib::FuturesRateHelper::yearFraction_</definition>
        <argsstring></argsstring>
        <name>yearFraction_</name>
        <qualifiedname>QuantLib::FuturesRateHelper::yearFraction_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/ratehelpers.hpp" line="106" column="14" bodyfile="ql/termstructures/yield/ratehelpers.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_futures_rate_helper_1ac02a9fea1eeda48c4c0eb91c292c51ca" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
        <definition>Handle&lt;Quote&gt; QuantLib::FuturesRateHelper::convAdj_</definition>
        <argsstring></argsstring>
        <name>convAdj_</name>
        <qualifiedname>QuantLib::FuturesRateHelper::convAdj_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/ratehelpers.hpp" line="107" column="16" bodyfile="ql/termstructures/yield/ratehelpers.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_futures_rate_helper_1a9f913caa2cff8cc06e04a8d2d5b3f552" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::FuturesRateHelper::accept</definition>
        <argsstring>(AcyclicVisitor &amp;) override</argsstring>
        <name>accept</name>
        <qualifiedname>QuantLib::FuturesRateHelper::accept</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_bootstrap_helper_1a972d69e74106276b0fe15239047746b9">accept</reimplements>
        <param>
          <type><ref refid="class_quant_lib_1_1_acyclic_visitor" kindref="compound">AcyclicVisitor</ref> &amp;</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/ratehelpers.hpp" line="103" column="14" bodyfile="ql/termstructures/yield/ratehelpers.cpp" bodystart="199" bodyend="205"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>RateHelper interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_futures_rate_helper_1adde4db3dd0f33c0cdd89843a66538182" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::FuturesRateHelper::impliedQuote</definition>
        <argsstring>() const override</argsstring>
        <name>impliedQuote</name>
        <qualifiedname>QuantLib::FuturesRateHelper::impliedQuote</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_bootstrap_helper_1a6a29e23cead4e1b1bda334f1de80b17d">impliedQuote</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/ratehelpers.hpp" line="95" column="14" bodyfile="ql/termstructures/yield/ratehelpers.cpp" bodystart="184" bodyend="193"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>FuturesRateHelper inspectors</header>
      <memberdef kind="function" id="class_quant_lib_1_1_futures_rate_helper_1a7c2b3df403d2e41d81caa331a3432d17" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::FuturesRateHelper::convexityAdjustment</definition>
        <argsstring>() const</argsstring>
        <name>convexityAdjustment</name>
        <qualifiedname>QuantLib::FuturesRateHelper::convexityAdjustment</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/ratehelpers.hpp" line="99" column="14" bodyfile="ql/termstructures/yield/ratehelpers.cpp" bodystart="195" bodyend="197"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_futures_rate_helper_1a7e8b970e9fc897b1e33d0aab80540950" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FuturesRateHelper::FuturesRateHelper</definition>
        <argsstring>(const Handle&lt; Quote &gt; &amp;price, const Date &amp;iborStartDate, Natural lengthInMonths, const Calendar &amp;calendar, BusinessDayConvention convention, bool endOfMonth, const DayCounter &amp;dayCounter, Handle&lt; Quote &gt; convexityAdjustment={}, Futures::Type type=Futures::IMM)</argsstring>
        <name>FuturesRateHelper</name>
        <qualifiedname>QuantLib::FuturesRateHelper::FuturesRateHelper</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &amp;</type>
          <declname>price</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>iborStartDate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>lengthInMonths</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>calendar</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
          <declname>convention</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>endOfMonth</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
          <declname>convexityAdjustment</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="struct_quant_lib_1_1_futures_1ac63abccb416c6a9aa3f0d607289afac0" kindref="member">Futures::Type</ref></type>
          <declname>type</declname>
          <defval><ref refid="struct_quant_lib_1_1_futures_1ac63abccb416c6a9aa3f0d607289afac0aad545e52cb158bc1f7459160090b53e9" kindref="member">Futures::IMM</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/ratehelpers.hpp" line="53" column="9" bodyfile="ql/termstructures/yield/ratehelpers.cpp" bodystart="69" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_futures_rate_helper_1a2d0a0266a28ef3206c17101514a2a303" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FuturesRateHelper::FuturesRateHelper</definition>
        <argsstring>(Real price, const Date &amp;iborStartDate, Natural lengthInMonths, const Calendar &amp;calendar, BusinessDayConvention convention, bool endOfMonth, const DayCounter &amp;dayCounter, Rate convexityAdjustment=0.0, Futures::Type type=Futures::IMM)</argsstring>
        <name>FuturesRateHelper</name>
        <qualifiedname>QuantLib::FuturesRateHelper::FuturesRateHelper</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>price</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>iborStartDate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>lengthInMonths</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>calendar</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
          <declname>convention</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>endOfMonth</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>convexityAdjustment</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type><ref refid="struct_quant_lib_1_1_futures_1ac63abccb416c6a9aa3f0d607289afac0" kindref="member">Futures::Type</ref></type>
          <declname>type</declname>
          <defval><ref refid="struct_quant_lib_1_1_futures_1ac63abccb416c6a9aa3f0d607289afac0aad545e52cb158bc1f7459160090b53e9" kindref="member">Futures::IMM</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/ratehelpers.hpp" line="62" column="9" bodyfile="ql/termstructures/yield/ratehelpers.cpp" bodystart="90" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_futures_rate_helper_1a364c75bbbd76224184890dfe4d90f8e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FuturesRateHelper::FuturesRateHelper</definition>
        <argsstring>(const Handle&lt; Quote &gt; &amp;price, const Date &amp;iborStartDate, const Date &amp;iborEndDate, const DayCounter &amp;dayCounter, Handle&lt; Quote &gt; convexityAdjustment={}, Futures::Type type=Futures::IMM)</argsstring>
        <name>FuturesRateHelper</name>
        <qualifiedname>QuantLib::FuturesRateHelper::FuturesRateHelper</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &amp;</type>
          <declname>price</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>iborStartDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>iborEndDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
          <declname>convexityAdjustment</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="struct_quant_lib_1_1_futures_1ac63abccb416c6a9aa3f0d607289afac0" kindref="member">Futures::Type</ref></type>
          <declname>type</declname>
          <defval><ref refid="struct_quant_lib_1_1_futures_1ac63abccb416c6a9aa3f0d607289afac0aad545e52cb158bc1f7459160090b53e9" kindref="member">Futures::IMM</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/ratehelpers.hpp" line="71" column="9" bodyfile="ql/termstructures/yield/ratehelpers.cpp" bodystart="102" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_futures_rate_helper_1a22e5f76799af61b67a6caf28aeb53fee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FuturesRateHelper::FuturesRateHelper</definition>
        <argsstring>(Real price, const Date &amp;iborStartDate, const Date &amp;endDate, const DayCounter &amp;dayCounter, Rate convexityAdjustment=0.0, Futures::Type type=Futures::IMM)</argsstring>
        <name>FuturesRateHelper</name>
        <qualifiedname>QuantLib::FuturesRateHelper::FuturesRateHelper</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>price</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>iborStartDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>endDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>convexityAdjustment</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type><ref refid="struct_quant_lib_1_1_futures_1ac63abccb416c6a9aa3f0d607289afac0" kindref="member">Futures::Type</ref></type>
          <declname>type</declname>
          <defval><ref refid="struct_quant_lib_1_1_futures_1ac63abccb416c6a9aa3f0d607289afac0aad545e52cb158bc1f7459160090b53e9" kindref="member">Futures::IMM</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/ratehelpers.hpp" line="77" column="9" bodyfile="ql/termstructures/yield/ratehelpers.cpp" bodystart="150" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_futures_rate_helper_1a36ede964a6b3b9242f54e5b2050d9f9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FuturesRateHelper::FuturesRateHelper</definition>
        <argsstring>(const Handle&lt; Quote &gt; &amp;price, const Date &amp;iborStartDate, const ext::shared_ptr&lt; IborIndex &gt; &amp;iborIndex, Handle&lt; Quote &gt; convexityAdjustment={}, Futures::Type type=Futures::IMM)</argsstring>
        <name>FuturesRateHelper</name>
        <qualifiedname>QuantLib::FuturesRateHelper::FuturesRateHelper</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &amp;</type>
          <declname>price</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>iborStartDate</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_ibor_index" kindref="compound">IborIndex</ref> &gt; &amp;</type>
          <declname>iborIndex</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
          <declname>convexityAdjustment</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type><ref refid="struct_quant_lib_1_1_futures_1ac63abccb416c6a9aa3f0d607289afac0" kindref="member">Futures::Type</ref></type>
          <declname>type</declname>
          <defval><ref refid="struct_quant_lib_1_1_futures_1ac63abccb416c6a9aa3f0d607289afac0aad545e52cb158bc1f7459160090b53e9" kindref="member">Futures::IMM</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/ratehelpers.hpp" line="83" column="9" bodyfile="ql/termstructures/yield/ratehelpers.cpp" bodystart="159" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_futures_rate_helper_1a60887d903813da9aefeb4c13c65ba965" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FuturesRateHelper::FuturesRateHelper</definition>
        <argsstring>(Real price, const Date &amp;iborStartDate, const ext::shared_ptr&lt; IborIndex &gt; &amp;iborIndex, Rate convexityAdjustment=0.0, Futures::Type type=Futures::IMM)</argsstring>
        <name>FuturesRateHelper</name>
        <qualifiedname>QuantLib::FuturesRateHelper::FuturesRateHelper</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>price</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>iborStartDate</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_ibor_index" kindref="compound">IborIndex</ref> &gt; &amp;</type>
          <declname>iborIndex</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>convexityAdjustment</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type><ref refid="struct_quant_lib_1_1_futures_1ac63abccb416c6a9aa3f0d607289afac0" kindref="member">Futures::Type</ref></type>
          <declname>type</declname>
          <defval><ref refid="struct_quant_lib_1_1_futures_1ac63abccb416c6a9aa3f0d607289afac0aad545e52cb158bc1f7459160090b53e9" kindref="member">Futures::IMM</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/yield/ratehelpers.hpp" line="88" column="9" bodyfile="ql/termstructures/yield/ratehelpers.cpp" bodystart="177" bodyend="182"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> helper for bootstrapping over <ref refid="class_quant_lib_1_1_ibor_index" kindref="compound">IborIndex</ref> futures prices. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::FuturesRateHelper</label>
        <link refid="class_quant_lib_1_1_futures_rate_helper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="3">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>RateHelper</label>
        <link refid="class_quant_lib_1_1_bootstrap_helper"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::FuturesRateHelper</label>
        <link refid="class_quant_lib_1_1_futures_rate_helper"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="3">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>RateHelper</label>
        <link refid="class_quant_lib_1_1_bootstrap_helper"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/termstructures/yield/ratehelpers.hpp" line="51" column="5" bodyfile="ql/termstructures/yield/ratehelpers.hpp" bodystart="51" bodyend="108"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_futures_rate_helper_1a9f913caa2cff8cc06e04a8d2d5b3f552" prot="public" virt="virtual"><scope>QuantLib::FuturesRateHelper</scope><name>accept</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a6e05e5d944839468441bca22c133d65a" prot="public" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>BootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a30a010aae5e4cc54d38457de4aa39c7e" prot="public" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>BootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a6e05e5d944839468441bca22c133d65a" prot="public" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>BootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a30a010aae5e4cc54d38457de4aa39c7e" prot="public" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>BootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_futures_rate_helper_1ac02a9fea1eeda48c4c0eb91c292c51ca" prot="private" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>convAdj_</name></member>
      <member refid="class_quant_lib_1_1_futures_rate_helper_1a7c2b3df403d2e41d81caa331a3432d17" prot="public" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>convexityAdjustment</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::FuturesRateHelper</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a1ca284f9f4ade8b17be1f5c284b1cfb2" prot="public" virt="virtual"><scope>QuantLib::FuturesRateHelper</scope><name>earliestDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a1ca284f9f4ade8b17be1f5c284b1cfb2" prot="public" virt="virtual"><scope>QuantLib::FuturesRateHelper</scope><name>earliestDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a3f5c545866d04dc90e2c3aec44974e08" prot="protected" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>earliestDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a3f5c545866d04dc90e2c3aec44974e08" prot="protected" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>earliestDate_</name></member>
      <member refid="class_quant_lib_1_1_futures_rate_helper_1a7e8b970e9fc897b1e33d0aab80540950" prot="public" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>FuturesRateHelper</name></member>
      <member refid="class_quant_lib_1_1_futures_rate_helper_1a2d0a0266a28ef3206c17101514a2a303" prot="public" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>FuturesRateHelper</name></member>
      <member refid="class_quant_lib_1_1_futures_rate_helper_1a364c75bbbd76224184890dfe4d90f8e3" prot="public" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>FuturesRateHelper</name></member>
      <member refid="class_quant_lib_1_1_futures_rate_helper_1a22e5f76799af61b67a6caf28aeb53fee" prot="public" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>FuturesRateHelper</name></member>
      <member refid="class_quant_lib_1_1_futures_rate_helper_1a36ede964a6b3b9242f54e5b2050d9f9e" prot="public" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>FuturesRateHelper</name></member>
      <member refid="class_quant_lib_1_1_futures_rate_helper_1a60887d903813da9aefeb4c13c65ba965" prot="public" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>FuturesRateHelper</name></member>
      <member refid="class_quant_lib_1_1_futures_rate_helper_1adde4db3dd0f33c0cdd89843a66538182" prot="public" virt="virtual"><scope>QuantLib::FuturesRateHelper</scope><name>impliedQuote</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::FuturesRateHelper</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a7b21f7d30980757a9721ef13ad7979af" prot="public" virt="virtual"><scope>QuantLib::FuturesRateHelper</scope><name>latestDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a7b21f7d30980757a9721ef13ad7979af" prot="public" virt="virtual"><scope>QuantLib::FuturesRateHelper</scope><name>latestDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a73a413539e8d6a526e8cc29f928f976c" prot="protected" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>latestDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a73a413539e8d6a526e8cc29f928f976c" prot="protected" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>latestDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1afc339bcd0b9d3029c20dfacaac5adf52" prot="public" virt="virtual"><scope>QuantLib::FuturesRateHelper</scope><name>latestRelevantDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1afc339bcd0b9d3029c20dfacaac5adf52" prot="public" virt="virtual"><scope>QuantLib::FuturesRateHelper</scope><name>latestRelevantDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a06f481f14c2b2b0624f2e0f8967353b0" prot="protected" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>latestRelevantDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a06f481f14c2b2b0624f2e0f8967353b0" prot="protected" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>latestRelevantDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1ad74f6e8a3c4f734a83edacaeb6fe53e0" prot="public" virt="virtual"><scope>QuantLib::FuturesRateHelper</scope><name>maturityDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1ad74f6e8a3c4f734a83edacaeb6fe53e0" prot="public" virt="virtual"><scope>QuantLib::FuturesRateHelper</scope><name>maturityDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1aa79e8a482771bdf0656a7afa4c557118" prot="protected" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>maturityDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1aa79e8a482771bdf0656a7afa4c557118" prot="protected" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>maturityDate_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::FuturesRateHelper</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::FuturesRateHelper</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::FuturesRateHelper</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::FuturesRateHelper</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::FuturesRateHelper</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a00496ecfac2fb317e435a6fe48c5c267" prot="public" virt="virtual"><scope>QuantLib::FuturesRateHelper</scope><name>pillarDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a00496ecfac2fb317e435a6fe48c5c267" prot="public" virt="virtual"><scope>QuantLib::FuturesRateHelper</scope><name>pillarDate</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1aa1aa18bed40139d0dae5e0df17968255" prot="protected" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>pillarDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1aa1aa18bed40139d0dae5e0df17968255" prot="protected" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>pillarDate_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a9e9a17bde5f762d0f75305310a84ae4d" prot="public" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>quote</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a9e9a17bde5f762d0f75305310a84ae4d" prot="public" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>quote</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a8480a30335c8da30122287bf782bc4b3" prot="protected" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>quote_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a8480a30335c8da30122287bf782bc4b3" prot="protected" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>quote_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a9bd06175fab6b2b4326c36b7e0f18007" prot="public" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>quoteError</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a9bd06175fab6b2b4326c36b7e0f18007" prot="public" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>quoteError</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a1f17a55318c87b85475f7a0ace4881fc" prot="public" virt="virtual"><scope>QuantLib::FuturesRateHelper</scope><name>setTermStructure</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a1f17a55318c87b85475f7a0ace4881fc" prot="public" virt="virtual"><scope>QuantLib::FuturesRateHelper</scope><name>setTermStructure</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a45322b36556492c6e52e1c64ebc8668e" prot="protected" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>termStructure_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a45322b36556492c6e52e1c64ebc8668e" prot="protected" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>termStructure_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a29362a38767e0231afc9430c8039cf42" prot="public" virt="virtual"><scope>QuantLib::FuturesRateHelper</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a29362a38767e0231afc9430c8039cf42" prot="public" virt="virtual"><scope>QuantLib::FuturesRateHelper</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_futures_rate_helper_1a20c089f5d41391f7bcb570a0865cc435" prot="private" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>yearFraction_</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a950cc899a68be0a5f04119edd931bd1d" prot="public" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>~BootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_bootstrap_helper_1a950cc899a68be0a5f04119edd931bd1d" prot="public" virt="non-virtual"><scope>QuantLib::FuturesRateHelper</scope><name>~BootstrapHelper</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::FuturesRateHelper</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::FuturesRateHelper</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

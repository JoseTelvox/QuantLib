<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_fdm_c_i_r_op" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::FdmCIROp</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_fdm_linear_op_composite" prot="public" virt="non-virtual">QuantLib::FdmLinearOpComposite</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_c_i_r_op_1aabf9ad9965c2bdf51a5a54e6653d78c7" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_fdm_c_i_r_equity_part" kindref="compound">FdmCIREquityPart</ref></type>
        <definition>FdmCIREquityPart QuantLib::FdmCIROp::dxMap_</definition>
        <argsstring></argsstring>
        <name>dxMap_</name>
        <qualifiedname>QuantLib::FdmCIROp::dxMap_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmcirop.hpp" line="117" column="26" bodyfile="ql/methods/finitedifferences/operators/fdmcirop.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_c_i_r_op_1af3eb52fbe1827ed31c4b9732ccc3cb5b" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_fdm_c_i_r_rates_part" kindref="compound">FdmCIRRatesPart</ref></type>
        <definition>FdmCIRRatesPart QuantLib::FdmCIROp::dyMap_</definition>
        <argsstring></argsstring>
        <name>dyMap_</name>
        <qualifiedname>QuantLib::FdmCIROp::dyMap_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmcirop.hpp" line="118" column="25" bodyfile="ql/methods/finitedifferences/operators/fdmcirop.hpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fdm_c_i_r_op_1a8cecf66da37b7a7c5ee85b90149e9486" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_fdm_c_i_r_mixed_part" kindref="compound">FdmCIRMixedPart</ref></type>
        <definition>FdmCIRMixedPart QuantLib::FdmCIROp::dzMap_</definition>
        <argsstring></argsstring>
        <name>dzMap_</name>
        <qualifiedname>QuantLib::FdmCIROp::dzMap_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmcirop.hpp" line="119" column="25" bodyfile="ql/methods/finitedifferences/operators/fdmcirop.hpp" bodystart="119" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_c_i_r_op_1a0d236d0681214277e21d96c1a5830085" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FdmCIROp::FdmCIROp</definition>
        <argsstring>(const ext::shared_ptr&lt; FdmMesher &gt; &amp;mesher, const ext::shared_ptr&lt; CoxIngersollRossProcess &gt; &amp;cirProcess, const ext::shared_ptr&lt; GeneralizedBlackScholesProcess &gt; &amp;bsProcess, Real rho, Real strike)</argsstring>
        <name>FdmCIROp</name>
        <qualifiedname>QuantLib::FdmCIROp::FdmCIROp</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_fdm_mesher" kindref="compound">FdmMesher</ref> &gt; &amp;</type>
          <declname>mesher</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_cox_ingersoll_ross_process" kindref="compound">CoxIngersollRossProcess</ref> &gt; &amp;</type>
          <declname>cirProcess</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_generalized_black_scholes_process" kindref="compound">GeneralizedBlackScholesProcess</ref> &gt; &amp;</type>
          <declname>bsProcess</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>rho</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>strike</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmcirop.hpp" line="98" column="9" bodyfile="ql/methods/finitedifferences/operators/fdmcirop.cpp" bodystart="98" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_c_i_r_op_1a52231f1a9ec9cf23fa0690ed2d44b7e3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::FdmCIROp::size</definition>
        <argsstring>() const override</argsstring>
        <name>size</name>
        <qualifiedname>QuantLib::FdmCIROp::size</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1aea89ff84d04c901c37823de66b392018">size</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmcirop.hpp" line="104" column="14" bodyfile="ql/methods/finitedifferences/operators/fdmcirop.cpp" bodystart="125" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_c_i_r_op_1abe78f491291dd1a132afe35f4dfcf11d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::FdmCIROp::setTime</definition>
        <argsstring>(Time t1, Time t2) override</argsstring>
        <name>setTime</name>
        <qualifiedname>QuantLib::FdmCIROp::setTime</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1ab635911759d6a1bde11c501d15515872">setTime</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t1</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t2</declname>
        </param>
        <briefdescription>
<para><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> <formula id="385">$t1 &lt;= t2$</formula> is required. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmcirop.hpp" line="105" column="14" bodyfile="ql/methods/finitedifferences/operators/fdmcirop.cpp" bodystart="119" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_c_i_r_op_1a62bcf61eed562f7ef302cac6f19fad4b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FdmCIROp::apply</definition>
        <argsstring>(const Array &amp;r) const override</argsstring>
        <name>apply</name>
        <qualifiedname>QuantLib::FdmCIROp::apply</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_1a9d59d8bb3597206db60f61c3f448c211">apply</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmcirop.hpp" line="107" column="15" bodyfile="ql/methods/finitedifferences/operators/fdmcirop.cpp" bodystart="129" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_c_i_r_op_1ac0d52da087e01bfbbaf2a8552aa65bb9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FdmCIROp::apply_mixed</definition>
        <argsstring>(const Array &amp;r) const override</argsstring>
        <name>apply_mixed</name>
        <qualifiedname>QuantLib::FdmCIROp::apply_mixed</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1a162fe1437fb3060475f7824d73b72ff7">apply_mixed</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmcirop.hpp" line="108" column="15" bodyfile="ql/methods/finitedifferences/operators/fdmcirop.cpp" bodystart="147" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_c_i_r_op_1aa49307a6319aa6874eee3effcfabb280" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FdmCIROp::apply_direction</definition>
        <argsstring>(Size direction, const Array &amp;r) const override</argsstring>
        <name>apply_direction</name>
        <qualifiedname>QuantLib::FdmCIROp::apply_direction</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1aa9f8c9bcd1596637b3eaaa74c64ad83c">apply_direction</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmcirop.hpp" line="110" column="15" bodyfile="ql/methods/finitedifferences/operators/fdmcirop.cpp" bodystart="137" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_c_i_r_op_1a82a6a4370e812d6724d66da8abedcb88" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FdmCIROp::solve_splitting</definition>
        <argsstring>(Size direction, const Array &amp;r, Real s) const override</argsstring>
        <name>solve_splitting</name>
        <qualifiedname>QuantLib::FdmCIROp::solve_splitting</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1a1ea6ebafd3a36a95a6acb6e1c189e21f">solve_splitting</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>direction</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmcirop.hpp" line="111" column="15" bodyfile="ql/methods/finitedifferences/operators/fdmcirop.cpp" bodystart="151" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_c_i_r_op_1a00dbf6ec60b2b6c0f50cf91495dffccb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::FdmCIROp::preconditioner</definition>
        <argsstring>(const Array &amp;r, Real s) const override</argsstring>
        <name>preconditioner</name>
        <qualifiedname>QuantLib::FdmCIROp::preconditioner</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1a3122983a62d53799ffd1c03922660e6c">preconditioner</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmcirop.hpp" line="112" column="15" bodyfile="ql/methods/finitedifferences/operators/fdmcirop.cpp" bodystart="163" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_c_i_r_op_1a151dd3de59616d0b0f757ffab60f84c3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; SparseMatrix &gt;</type>
        <definition>std::vector&lt; SparseMatrix &gt; QuantLib::FdmCIROp::toMatrixDecomp</definition>
        <argsstring>() const override</argsstring>
        <name>toMatrixDecomp</name>
        <qualifiedname>QuantLib::FdmCIROp::toMatrixDecomp</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_fdm_linear_op_composite_1aae06b697cc0d041a8cbdd9b259ec34b9">toMatrixDecomp</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmcirop.hpp" line="114" column="21" bodyfile="ql/methods/finitedifferences/operators/fdmcirop.cpp" bodystart="167" bodyend="173"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::FdmCIROp</label>
        <link refid="class_quant_lib_1_1_fdm_c_i_r_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::FdmLinearOp</label>
        <link refid="class_quant_lib_1_1_fdm_linear_op"/>
      </node>
      <node id="2">
        <label>QuantLib::FdmLinearOpComposite</label>
        <link refid="class_quant_lib_1_1_fdm_linear_op_composite"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::FdmCIROp</label>
        <link refid="class_quant_lib_1_1_fdm_c_i_r_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::FdmLinearOp</label>
        <link refid="class_quant_lib_1_1_fdm_linear_op"/>
      </node>
      <node id="2">
        <label>QuantLib::FdmLinearOpComposite</label>
        <link refid="class_quant_lib_1_1_fdm_linear_op_composite"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/methods/finitedifferences/operators/fdmcirop.hpp" line="96" column="5" bodyfile="ql/methods/finitedifferences/operators/fdmcirop.hpp" bodystart="96" bodyend="120"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_fdm_c_i_r_op_1a62bcf61eed562f7ef302cac6f19fad4b" prot="public" virt="virtual"><scope>QuantLib::FdmCIROp</scope><name>apply</name></member>
      <member refid="class_quant_lib_1_1_fdm_c_i_r_op_1aa49307a6319aa6874eee3effcfabb280" prot="public" virt="virtual"><scope>QuantLib::FdmCIROp</scope><name>apply_direction</name></member>
      <member refid="class_quant_lib_1_1_fdm_c_i_r_op_1ac0d52da087e01bfbbaf2a8552aa65bb9" prot="public" virt="virtual"><scope>QuantLib::FdmCIROp</scope><name>apply_mixed</name></member>
      <member refid="class_quant_lib_1_1_fdm_linear_op_1af55693593c0cf7e885c67fd848f76e49" prot="public" virt="non-virtual"><scope>QuantLib::FdmCIROp</scope><name>array_type</name></member>
      <member refid="class_quant_lib_1_1_fdm_c_i_r_op_1aabf9ad9965c2bdf51a5a54e6653d78c7" prot="private" virt="non-virtual"><scope>QuantLib::FdmCIROp</scope><name>dxMap_</name></member>
      <member refid="class_quant_lib_1_1_fdm_c_i_r_op_1af3eb52fbe1827ed31c4b9732ccc3cb5b" prot="private" virt="non-virtual"><scope>QuantLib::FdmCIROp</scope><name>dyMap_</name></member>
      <member refid="class_quant_lib_1_1_fdm_c_i_r_op_1a8cecf66da37b7a7c5ee85b90149e9486" prot="private" virt="non-virtual"><scope>QuantLib::FdmCIROp</scope><name>dzMap_</name></member>
      <member refid="class_quant_lib_1_1_fdm_c_i_r_op_1a0d236d0681214277e21d96c1a5830085" prot="public" virt="non-virtual"><scope>QuantLib::FdmCIROp</scope><name>FdmCIROp</name></member>
      <member refid="class_quant_lib_1_1_fdm_c_i_r_op_1a00dbf6ec60b2b6c0f50cf91495dffccb" prot="public" virt="virtual"><scope>QuantLib::FdmCIROp</scope><name>preconditioner</name></member>
      <member refid="class_quant_lib_1_1_fdm_c_i_r_op_1abe78f491291dd1a132afe35f4dfcf11d" prot="public" virt="virtual"><scope>QuantLib::FdmCIROp</scope><name>setTime</name></member>
      <member refid="class_quant_lib_1_1_fdm_c_i_r_op_1a52231f1a9ec9cf23fa0690ed2d44b7e3" prot="public" virt="virtual"><scope>QuantLib::FdmCIROp</scope><name>size</name></member>
      <member refid="class_quant_lib_1_1_fdm_c_i_r_op_1a82a6a4370e812d6724d66da8abedcb88" prot="public" virt="virtual"><scope>QuantLib::FdmCIROp</scope><name>solve_splitting</name></member>
      <member refid="class_quant_lib_1_1_fdm_linear_op_composite_1abca0364ae63b5b0e714fcd3ac9e8a73b" prot="public" virt="virtual"><scope>QuantLib::FdmCIROp</scope><name>toMatrix</name></member>
      <member refid="class_quant_lib_1_1_fdm_c_i_r_op_1a151dd3de59616d0b0f757ffab60f84c3" prot="public" virt="virtual"><scope>QuantLib::FdmCIROp</scope><name>toMatrixDecomp</name></member>
      <member refid="class_quant_lib_1_1_fdm_linear_op_1aa6f29eb6144a1848c73c21e392f023e4" prot="public" virt="virtual"><scope>QuantLib::FdmCIROp</scope><name>~FdmLinearOp</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

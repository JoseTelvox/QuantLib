<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_loss_dist_homogeneous" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::LossDistHomogeneous</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_loss_dist" prot="public" virt="non-virtual">QuantLib::LossDist</basecompoundref>
    <includes refid="lossdistribution_8hpp" local="no">lossdistribution.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_loss_dist_homogeneous_1a649dd36fb4997ec9971f1764fa13e26b" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::LossDistHomogeneous::nBuckets_</definition>
        <argsstring></argsstring>
        <name>nBuckets_</name>
        <qualifiedname>QuantLib::LossDistHomogeneous::nBuckets_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/lossdistribution.hpp" line="151" column="14" bodyfile="ql/experimental/credit/lossdistribution.hpp" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_loss_dist_homogeneous_1aa2159c49e48fa2c590083d7043c2fbdb" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::LossDistHomogeneous::maximum_</definition>
        <argsstring></argsstring>
        <name>maximum_</name>
        <qualifiedname>QuantLib::LossDistHomogeneous::maximum_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/lossdistribution.hpp" line="152" column="14" bodyfile="ql/experimental/credit/lossdistribution.hpp" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_loss_dist_homogeneous_1a83dab1f49522a231a944a0f5bc198863" prot="private" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::LossDistHomogeneous::n_</definition>
        <argsstring></argsstring>
        <name>n_</name>
        <qualifiedname>QuantLib::LossDistHomogeneous::n_</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/lossdistribution.hpp" line="153" column="22" bodyfile="ql/experimental/credit/lossdistribution.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_loss_dist_homogeneous_1a90988ce384d5b50933ba854f8d50b53a" prot="private" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::LossDistHomogeneous::volume_</definition>
        <argsstring></argsstring>
        <name>volume_</name>
        <qualifiedname>QuantLib::LossDistHomogeneous::volume_</qualifiedname>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/lossdistribution.hpp" line="154" column="22" bodyfile="ql/experimental/credit/lossdistribution.hpp" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_loss_dist_homogeneous_1a521c11a2f6b11166543ddcf81dc8cfb0" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::LossDistHomogeneous::probability_</definition>
        <argsstring></argsstring>
        <name>probability_</name>
        <qualifiedname>QuantLib::LossDistHomogeneous::probability_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/lossdistribution.hpp" line="155" column="29" bodyfile="ql/experimental/credit/lossdistribution.hpp" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_loss_dist_homogeneous_1abd39b5ecca5ff9c2ef27937e7554a1de" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::LossDistHomogeneous::excessProbability_</definition>
        <argsstring></argsstring>
        <name>excessProbability_</name>
        <qualifiedname>QuantLib::LossDistHomogeneous::excessProbability_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/lossdistribution.hpp" line="156" column="29" bodyfile="ql/experimental/credit/lossdistribution.hpp" bodystart="156" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_loss_dist_homogeneous_1af2208081aa5c93638f1bb035d124a544" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::LossDistHomogeneous::LossDistHomogeneous</definition>
        <argsstring>(Size nBuckets, Real maximum)</argsstring>
        <name>LossDistHomogeneous</name>
        <qualifiedname>QuantLib::LossDistHomogeneous::LossDistHomogeneous</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>nBuckets</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>maximum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/lossdistribution.hpp" line="140" column="7" bodyfile="ql/experimental/credit/lossdistribution.hpp" bodystart="140" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_loss_dist_homogeneous_1a5bbbd308535bcb3329ac864173e91e73" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_distribution" kindref="compound">Distribution</ref></type>
        <definition>Distribution QuantLib::LossDistHomogeneous::operator()</definition>
        <argsstring>(Real volume, const std::vector&lt; Real &gt; &amp;probabilities) const</argsstring>
        <name>operator()</name>
        <qualifiedname>QuantLib::LossDistHomogeneous::operator()</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>volume</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>probabilities</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/lossdistribution.hpp" line="141" column="20"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_loss_dist_homogeneous_1ad8317aa34911ed334771d1c0580f8e05" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_distribution" kindref="compound">Distribution</ref></type>
        <definition>Distribution QuantLib::LossDistHomogeneous::operator()</definition>
        <argsstring>(const std::vector&lt; Real &gt; &amp;volumes, const std::vector&lt; Real &gt; &amp;probabilities) const override</argsstring>
        <name>operator()</name>
        <qualifiedname>QuantLib::LossDistHomogeneous::operator()</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_loss_dist_1ae7a8a47c84b11e3536851b85bf324752">operator()</reimplements>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>volumes</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>probabilities</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/lossdistribution.hpp" line="142" column="20"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_loss_dist_homogeneous_1a1992b4aa3f1876ce4a701c6850c9fb7b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::LossDistHomogeneous::buckets</definition>
        <argsstring>() const override</argsstring>
        <name>buckets</name>
        <qualifiedname>QuantLib::LossDistHomogeneous::buckets</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_loss_dist_1aaf99a092c5bd885e8e8b1f5930a0e2aa">buckets</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/lossdistribution.hpp" line="144" column="12" bodyfile="ql/experimental/credit/lossdistribution.hpp" bodystart="144" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_loss_dist_homogeneous_1af0959b255ba460839fcf1a8550406e05" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::LossDistHomogeneous::maximum</definition>
        <argsstring>() const override</argsstring>
        <name>maximum</name>
        <qualifiedname>QuantLib::LossDistHomogeneous::maximum</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_loss_dist_1ae18fe2d871e5409706965ca7f60a3371">maximum</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/lossdistribution.hpp" line="145" column="12" bodyfile="ql/experimental/credit/lossdistribution.hpp" bodystart="145" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_loss_dist_homogeneous_1af202d9184800c28eaf0040a6f6dad3fa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::LossDistHomogeneous::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>QuantLib::LossDistHomogeneous::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/lossdistribution.hpp" line="146" column="12" bodyfile="ql/experimental/credit/lossdistribution.hpp" bodystart="146" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_loss_dist_homogeneous_1a4fa8b90b68a9fcb8cfcf9761c06afb99" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::LossDistHomogeneous::volume</definition>
        <argsstring>() const</argsstring>
        <name>volume</name>
        <qualifiedname>QuantLib::LossDistHomogeneous::volume</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/lossdistribution.hpp" line="147" column="12" bodyfile="ql/experimental/credit/lossdistribution.hpp" bodystart="147" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_loss_dist_homogeneous_1a386247573303878715684376d60f5eaf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt; Real &gt; QuantLib::LossDistHomogeneous::probability</definition>
        <argsstring>() const</argsstring>
        <name>probability</name>
        <qualifiedname>QuantLib::LossDistHomogeneous::probability</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/lossdistribution.hpp" line="148" column="19" bodyfile="ql/experimental/credit/lossdistribution.hpp" bodystart="148" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_loss_dist_homogeneous_1a28fd09d904dad8c23161dea3f82f0d05" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt; Real &gt; QuantLib::LossDistHomogeneous::excessProbability</definition>
        <argsstring>() const</argsstring>
        <name>excessProbability</name>
        <qualifiedname>QuantLib::LossDistHomogeneous::excessProbability</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/lossdistribution.hpp" line="149" column="19" bodyfile="ql/experimental/credit/lossdistribution.hpp" bodystart="149" bodyend="149"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para><ref refid="class_quant_lib_1_1_loss" kindref="compound">Loss</ref> <ref refid="class_quant_lib_1_1_distribution" kindref="compound">Distribution</ref> for Homogeneous <ref refid="class_quant_lib_1_1_pool" kindref="compound">Pool</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para><ref refid="class_quant_lib_1_1_loss" kindref="compound">Loss</ref> <ref refid="class_quant_lib_1_1_distribution" kindref="compound">Distribution</ref> for Homogeneous <ref refid="class_quant_lib_1_1_pool" kindref="compound">Pool</ref></para>
<para><ref refid="class_quant_lib_1_1_loss" kindref="compound">Loss</ref> distribution for equal volumes but varying probabilities of default.</para>
<para>The method builds the exact loss distribution for a homogeneous pool of underlyings iteratively by computing the convolution of the given loss distribution with the &quot;loss distribution&quot; of an additional credit following</para>
<para>Xiaofong Ma, &quot;Numerical Methods for the Valuation of Synthetic
Collateralized Debt Obligations&quot;, PhD Thesis, Graduate Department of Computer Science, University of Toronto, 2007 <linebreak/>
 <ulink url="http://www.cs.toronto.edu/pub/reports/na/ma-07-phd.pdf">http://www.cs.toronto.edu/pub/reports/na/ma-07-phd.pdf</ulink> (formula 2.1)</para>
<para>avoiding numerical instability of the algorithm by</para>
<para>John Hull and Alan White, &quot;Valuation of a CDO and nth to default CDS 
without Monte Carlo simulation&quot;, Journal of Derivatives 12, 2, 2004 </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::LossDist</label>
        <link refid="class_quant_lib_1_1_loss_dist"/>
      </node>
      <node id="1">
        <label>QuantLib::LossDistHomogeneous</label>
        <link refid="class_quant_lib_1_1_loss_dist_homogeneous"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::LossDist</label>
        <link refid="class_quant_lib_1_1_loss_dist"/>
      </node>
      <node id="1">
        <label>QuantLib::LossDistHomogeneous</label>
        <link refid="class_quant_lib_1_1_loss_dist_homogeneous"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/credit/lossdistribution.hpp" line="138" column="5" bodyfile="ql/experimental/credit/lossdistribution.hpp" bodystart="138" bodyend="157"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_loss_dist_1a8c77b060ce7166827d98de461fa2f01b" prot="public" virt="non-virtual"><scope>QuantLib::LossDistHomogeneous</scope><name>binomialProbabilityOfAtLeastNEvents</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_1acb7afb5f155bca79ca5875c078c088a5" prot="public" virt="non-virtual"><scope>QuantLib::LossDistHomogeneous</scope><name>binomialProbabilityOfNEvents</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_homogeneous_1a1992b4aa3f1876ce4a701c6850c9fb7b" prot="public" virt="virtual"><scope>QuantLib::LossDistHomogeneous</scope><name>buckets</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_homogeneous_1a28fd09d904dad8c23161dea3f82f0d05" prot="public" virt="non-virtual"><scope>QuantLib::LossDistHomogeneous</scope><name>excessProbability</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_homogeneous_1abd39b5ecca5ff9c2ef27937e7554a1de" prot="private" virt="non-virtual"><scope>QuantLib::LossDistHomogeneous</scope><name>excessProbability_</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_1a2f119d845cb95500cb1d6ccdada4d7ab" prot="public" virt="non-virtual"><scope>QuantLib::LossDistHomogeneous</scope><name>LossDist</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_homogeneous_1af2208081aa5c93638f1bb035d124a544" prot="public" virt="non-virtual"><scope>QuantLib::LossDistHomogeneous</scope><name>LossDistHomogeneous</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_homogeneous_1af0959b255ba460839fcf1a8550406e05" prot="public" virt="virtual"><scope>QuantLib::LossDistHomogeneous</scope><name>maximum</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_homogeneous_1aa2159c49e48fa2c590083d7043c2fbdb" prot="private" virt="non-virtual"><scope>QuantLib::LossDistHomogeneous</scope><name>maximum_</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_homogeneous_1a83dab1f49522a231a944a0f5bc198863" prot="private" virt="non-virtual"><scope>QuantLib::LossDistHomogeneous</scope><name>n_</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_homogeneous_1a649dd36fb4997ec9971f1764fa13e26b" prot="private" virt="non-virtual"><scope>QuantLib::LossDistHomogeneous</scope><name>nBuckets_</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_homogeneous_1a5bbbd308535bcb3329ac864173e91e73" prot="public" virt="non-virtual"><scope>QuantLib::LossDistHomogeneous</scope><name>operator()</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_homogeneous_1ad8317aa34911ed334771d1c0580f8e05" prot="public" virt="virtual"><scope>QuantLib::LossDistHomogeneous</scope><name>operator()</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_homogeneous_1a386247573303878715684376d60f5eaf" prot="public" virt="non-virtual"><scope>QuantLib::LossDistHomogeneous</scope><name>probability</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_homogeneous_1a521c11a2f6b11166543ddcf81dc8cfb0" prot="private" virt="non-virtual"><scope>QuantLib::LossDistHomogeneous</scope><name>probability_</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_1a49f3e025f1385e01cef46caa4671ecbb" prot="public" virt="non-virtual"><scope>QuantLib::LossDistHomogeneous</scope><name>probabilityOfAtLeastNEvents</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_1afb8d56a8594b6bb78d95a4d60338212c" prot="public" virt="non-virtual"><scope>QuantLib::LossDistHomogeneous</scope><name>probabilityOfNEvents</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_1a0957a883f318510faaa60118f67a850b" prot="public" virt="non-virtual"><scope>QuantLib::LossDistHomogeneous</scope><name>probabilityOfNEvents</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_homogeneous_1af202d9184800c28eaf0040a6f6dad3fa" prot="public" virt="non-virtual"><scope>QuantLib::LossDistHomogeneous</scope><name>size</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_homogeneous_1a4fa8b90b68a9fcb8cfcf9761c06afb99" prot="public" virt="non-virtual"><scope>QuantLib::LossDistHomogeneous</scope><name>volume</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_homogeneous_1a90988ce384d5b50933ba854f8d50b53a" prot="private" virt="non-virtual"><scope>QuantLib::LossDistHomogeneous</scope><name>volume_</name></member>
      <member refid="class_quant_lib_1_1_loss_dist_1a5c956aeba78889d83882e4cc28e950d6" prot="public" virt="virtual"><scope>QuantLib::LossDistHomogeneous</scope><name>~LossDist</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

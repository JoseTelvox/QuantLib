<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_unit_of_measure" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::UnitOfMeasure</compoundname>
    <derivedcompoundref refid="class_quant_lib_1_1_barrel_unit_of_measure" prot="public" virt="non-virtual">QuantLib::BarrelUnitOfMeasure</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_gallon_unit_of_measure" prot="public" virt="non-virtual">QuantLib::GallonUnitOfMeasure</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_kilolitre_unit_of_measure" prot="public" virt="non-virtual">QuantLib::KilolitreUnitOfMeasure</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_litre_unit_of_measure" prot="public" virt="non-virtual">QuantLib::LitreUnitOfMeasure</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_lot_unit_of_measure" prot="public" virt="non-virtual">QuantLib::LotUnitOfMeasure</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_m_b_unit_of_measure" prot="public" virt="non-virtual">QuantLib::MBUnitOfMeasure</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_m_t_unit_of_measure" prot="public" virt="non-virtual">QuantLib::MTUnitOfMeasure</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_tokyo_kilolitre_unit_of_measure" prot="public" virt="non-virtual">QuantLib::TokyoKilolitreUnitOfMeasure</derivedcompoundref>
    <includes refid="unitofmeasure_8hpp" local="no">unitofmeasure.hpp</includes>
    <innerclass refid="struct_quant_lib_1_1_unit_of_measure_1_1_data" prot="public">QuantLib::UnitOfMeasure::Data</innerclass>
    <sectiondef kind="user-defined">
      <header>Other information</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_unit_of_measure_1ae447908c6fa928e34d67d4659568e716" prot="protected" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="struct_quant_lib_1_1_unit_of_measure_1_1_data" kindref="compound">Data</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;Data&gt; QuantLib::UnitOfMeasure::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <qualifiedname>QuantLib::UnitOfMeasure::data_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/unitofmeasure.hpp" line="70" column="25" bodyfile="ql/experimental/commodities/unitofmeasure.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_unit_of_measure_1a9683cfffe42bc06f05c5619ab500fddb" prot="private" static="yes" mutable="no">
        <type>std::map&lt; std::string, ext::shared_ptr&lt; <ref refid="struct_quant_lib_1_1_unit_of_measure_1_1_data" kindref="compound">UnitOfMeasure::Data</ref> &gt; &gt;</type>
        <definition>std::map&lt; std::string, ext::shared_ptr&lt; UnitOfMeasure::Data &gt; &gt; QuantLib::UnitOfMeasure::unitsOfMeasure_</definition>
        <argsstring></argsstring>
        <name>unitsOfMeasure_</name>
        <qualifiedname>QuantLib::UnitOfMeasure::unitsOfMeasure_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/unitofmeasure.hpp" line="73" column="9" bodyfile="ql/experimental/commodities/unitofmeasure.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_unit_of_measure_1adb8ca1680d668caf77720dd360f8ef53" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::UnitOfMeasure::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <qualifiedname>QuantLib::UnitOfMeasure::empty</qualifiedname>
        <briefdescription>
<para>is this a usable instance? </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/unitofmeasure.hpp" line="62" column="14" bodyfile="ql/experimental/commodities/unitofmeasure.hpp" bodystart="121" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_unit_of_measure_1aa451c7badcd1f367101fc15b8d8c335e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_rounding" kindref="compound">Rounding</ref> &amp;</type>
        <definition>const Rounding &amp; QuantLib::UnitOfMeasure::rounding</definition>
        <argsstring>() const</argsstring>
        <name>rounding</name>
        <qualifiedname>QuantLib::UnitOfMeasure::rounding</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/unitofmeasure.hpp" line="64" column="24" bodyfile="ql/experimental/commodities/unitofmeasure.hpp" bodystart="117" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_unit_of_measure_1afbe52f494bfddfbc1d1d5270b2a992f0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_unit_of_measure" kindref="compound">UnitOfMeasure</ref> &amp;</type>
        <definition>const UnitOfMeasure &amp; QuantLib::UnitOfMeasure::triangulationUnitOfMeasure</definition>
        <argsstring>() const</argsstring>
        <name>triangulationUnitOfMeasure</name>
        <qualifiedname>QuantLib::UnitOfMeasure::triangulationUnitOfMeasure</qualifiedname>
        <briefdescription>
<para>unit used for triangulation when required </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/unitofmeasure.hpp" line="66" column="29" bodyfile="ql/experimental/commodities/unitofmeasure.hpp" bodystart="126" bodyend="128"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Inspectors</header>
      <memberdef kind="function" id="class_quant_lib_1_1_unit_of_measure_1a5f6be51aef0516fa2849844b86245baf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; QuantLib::UnitOfMeasure::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <qualifiedname>QuantLib::UnitOfMeasure::name</qualifiedname>
        <briefdescription>
<para>name, e.g, &quot;Barrels&quot; </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/unitofmeasure.hpp" line="53" column="27" bodyfile="ql/experimental/commodities/unitofmeasure.hpp" bodystart="105" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_unit_of_measure_1a88ec649d3e896dfb86f4cac7dee90e46" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; QuantLib::UnitOfMeasure::code</definition>
        <argsstring>() const</argsstring>
        <name>code</name>
        <qualifiedname>QuantLib::UnitOfMeasure::code</qualifiedname>
        <briefdescription>
<para>code, e.g, &quot;BBL&quot;, &quot;MT&quot; </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/unitofmeasure.hpp" line="55" column="27" bodyfile="ql/experimental/commodities/unitofmeasure.hpp" bodystart="109" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_unit_of_measure_1a075ec47827fe7b7b826ad08edcb0b3d6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Type</type>
        <definition>UnitOfMeasure::Type QuantLib::UnitOfMeasure::unitType</definition>
        <argsstring>() const</argsstring>
        <name>unitType</name>
        <qualifiedname>QuantLib::UnitOfMeasure::unitType</qualifiedname>
        <briefdescription>
<para>unit type (mass, volume...) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/unitofmeasure.hpp" line="57" column="14" bodyfile="ql/experimental/commodities/unitofmeasure.hpp" bodystart="113" bodyend="115"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_quant_lib_1_1_unit_of_measure_1a174ae23448d646825889a023a089822b" prot="public" static="no" strong="no">
        <type></type>
        <name>Type</name>
        <qualifiedname>QuantLib::UnitOfMeasure::Type</qualifiedname>
        <enumvalue id="class_quant_lib_1_1_unit_of_measure_1a174ae23448d646825889a023a089822ba2bff77d4fb51fc6effe3c0c81579c9a7" prot="public">
          <name>Mass</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_unit_of_measure_1a174ae23448d646825889a023a089822ba3a1f96f32b35d4728813cbc486c0b2a8" prot="public">
          <name>Volume</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_unit_of_measure_1a174ae23448d646825889a023a089822ba15a97d2c74103cb73832c5f09936c0f6" prot="public">
          <name>Energy</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_unit_of_measure_1a174ae23448d646825889a023a089822ba623ad0050959404a512ebb24a88b9cc6" prot="public">
          <name>Quantity</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/unitofmeasure.hpp" line="39" column="9" bodyfile="ql/experimental/commodities/unitofmeasure.hpp" bodystart="39" bodyend="39"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_unit_of_measure_1a008da945a34c8a9376ee4bf5f13a2f2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::UnitOfMeasure::UnitOfMeasure</definition>
        <argsstring>()=default</argsstring>
        <name>UnitOfMeasure</name>
        <qualifiedname>QuantLib::UnitOfMeasure::UnitOfMeasure</qualifiedname>
        <briefdescription>
<para>default constructor </para>
        </briefdescription>
        <detaileddescription>
<para>Instances built via this constructor have undefined behavior. Such instances can only act as placeholders and must be reassigned to a valid currency before being used. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/unitofmeasure.hpp" line="46" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_unit_of_measure_1a0d5b0b010020b7e66453f8055338c559" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::UnitOfMeasure::UnitOfMeasure</definition>
        <argsstring>(const std::string &amp;name, const std::string &amp;code, Type unitType)</argsstring>
        <name>UnitOfMeasure</name>
        <qualifiedname>QuantLib::UnitOfMeasure::UnitOfMeasure</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>code</declname>
        </param>
        <param>
          <type>Type</type>
          <declname>unitType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/unitofmeasure.hpp" line="47" column="9" bodyfile="ql/experimental/commodities/unitofmeasure.cpp" bodystart="37" bodyend="49"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="related">
      <memberdef kind="function" id="class_quant_lib_1_1_unit_of_measure_1a93b0e3b06bb3eff2e7f80864d32101b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const UnitOfMeasure &amp;, const UnitOfMeasure &amp;)</argsstring>
        <name>operator==</name>
        <qualifiedname>QuantLib::UnitOfMeasure::operator==</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_unit_of_measure" kindref="compound">UnitOfMeasure</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_unit_of_measure" kindref="compound">UnitOfMeasure</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/unitofmeasure.hpp" line="91" column="10" bodyfile="ql/experimental/commodities/unitofmeasure.hpp" bodystart="130" bodyend="132" declfile="ql/experimental/commodities/unitofmeasure.hpp" declline="91" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_unit_of_measure_1a7b072a8434094fec0d21f53346581ee4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const UnitOfMeasure &amp;, const UnitOfMeasure &amp;)</argsstring>
        <name>operator!=</name>
        <qualifiedname>QuantLib::UnitOfMeasure::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_unit_of_measure" kindref="compound">UnitOfMeasure</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_unit_of_measure" kindref="compound">UnitOfMeasure</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/unitofmeasure.hpp" line="95" column="10" bodyfile="ql/experimental/commodities/unitofmeasure.hpp" bodystart="134" bodyend="136" declfile="ql/experimental/commodities/unitofmeasure.hpp" declline="95" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_unit_of_measure_1a5dc130ad7da6f32ebcc08e2018fe9f22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const UnitOfMeasure &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>QuantLib::UnitOfMeasure::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_unit_of_measure" kindref="compound">UnitOfMeasure</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/unitofmeasure.hpp" line="99" column="5" bodyfile="ql/experimental/commodities/unitofmeasure.cpp" bodystart="26" bodyend="31" declfile="ql/experimental/commodities/unitofmeasure.hpp" declline="99" declcolumn="5"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Unit of measure specification </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::BarrelUnitOfMeasure</label>
        <link refid="class_quant_lib_1_1_barrel_unit_of_measure"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::GallonUnitOfMeasure</label>
        <link refid="class_quant_lib_1_1_gallon_unit_of_measure"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::KilolitreUnitOfMeasure</label>
        <link refid="class_quant_lib_1_1_kilolitre_unit_of_measure"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::LitreUnitOfMeasure</label>
        <link refid="class_quant_lib_1_1_litre_unit_of_measure"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::LotUnitOfMeasure</label>
        <link refid="class_quant_lib_1_1_lot_unit_of_measure"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::MBUnitOfMeasure</label>
        <link refid="class_quant_lib_1_1_m_b_unit_of_measure"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::MTUnitOfMeasure</label>
        <link refid="class_quant_lib_1_1_m_t_unit_of_measure"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QuantLib::TokyoKilolitreUnitOfMeasure</label>
        <link refid="class_quant_lib_1_1_tokyo_kilolitre_unit_of_measure"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::UnitOfMeasure</label>
        <link refid="class_quant_lib_1_1_unit_of_measure"/>
      </node>
    </inheritancegraph>
    <location file="ql/experimental/commodities/unitofmeasure.hpp" line="37" column="5" bodyfile="ql/experimental/commodities/unitofmeasure.hpp" bodystart="37" bodyend="74"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_unit_of_measure_1a88ec649d3e896dfb86f4cac7dee90e46" prot="public" virt="non-virtual"><scope>QuantLib::UnitOfMeasure</scope><name>code</name></member>
      <member refid="class_quant_lib_1_1_unit_of_measure_1ae447908c6fa928e34d67d4659568e716" prot="protected" virt="non-virtual"><scope>QuantLib::UnitOfMeasure</scope><name>data_</name></member>
      <member refid="class_quant_lib_1_1_unit_of_measure_1adb8ca1680d668caf77720dd360f8ef53" prot="public" virt="non-virtual"><scope>QuantLib::UnitOfMeasure</scope><name>empty</name></member>
      <member refid="class_quant_lib_1_1_unit_of_measure_1a174ae23448d646825889a023a089822ba15a97d2c74103cb73832c5f09936c0f6" prot="public" virt="non-virtual"><scope>QuantLib::UnitOfMeasure</scope><name>Energy</name></member>
      <member refid="class_quant_lib_1_1_unit_of_measure_1a174ae23448d646825889a023a089822ba2bff77d4fb51fc6effe3c0c81579c9a7" prot="public" virt="non-virtual"><scope>QuantLib::UnitOfMeasure</scope><name>Mass</name></member>
      <member refid="class_quant_lib_1_1_unit_of_measure_1a5f6be51aef0516fa2849844b86245baf" prot="public" virt="non-virtual"><scope>QuantLib::UnitOfMeasure</scope><name>name</name></member>
      <member refid="class_quant_lib_1_1_unit_of_measure_1a7b072a8434094fec0d21f53346581ee4" prot="public" virt="non-virtual"><scope>QuantLib::UnitOfMeasure</scope><name>operator!=</name></member>
      <member refid="class_quant_lib_1_1_unit_of_measure_1a5dc130ad7da6f32ebcc08e2018fe9f22" prot="public" virt="non-virtual"><scope>QuantLib::UnitOfMeasure</scope><name>operator&lt;&lt;</name></member>
      <member refid="class_quant_lib_1_1_unit_of_measure_1a93b0e3b06bb3eff2e7f80864d32101b2" prot="public" virt="non-virtual"><scope>QuantLib::UnitOfMeasure</scope><name>operator==</name></member>
      <member refid="class_quant_lib_1_1_unit_of_measure_1a174ae23448d646825889a023a089822ba623ad0050959404a512ebb24a88b9cc6" prot="public" virt="non-virtual"><scope>QuantLib::UnitOfMeasure</scope><name>Quantity</name></member>
      <member refid="class_quant_lib_1_1_unit_of_measure_1aa451c7badcd1f367101fc15b8d8c335e" prot="public" virt="non-virtual"><scope>QuantLib::UnitOfMeasure</scope><name>rounding</name></member>
      <member refid="class_quant_lib_1_1_unit_of_measure_1afbe52f494bfddfbc1d1d5270b2a992f0" prot="public" virt="non-virtual"><scope>QuantLib::UnitOfMeasure</scope><name>triangulationUnitOfMeasure</name></member>
      <member refid="class_quant_lib_1_1_unit_of_measure_1a174ae23448d646825889a023a089822b" prot="public" virt="non-virtual"><scope>QuantLib::UnitOfMeasure</scope><name>Type</name></member>
      <member refid="class_quant_lib_1_1_unit_of_measure_1a008da945a34c8a9376ee4bf5f13a2f2d" prot="public" virt="non-virtual"><scope>QuantLib::UnitOfMeasure</scope><name>UnitOfMeasure</name></member>
      <member refid="class_quant_lib_1_1_unit_of_measure_1a0d5b0b010020b7e66453f8055338c559" prot="public" virt="non-virtual"><scope>QuantLib::UnitOfMeasure</scope><name>UnitOfMeasure</name></member>
      <member refid="class_quant_lib_1_1_unit_of_measure_1a9683cfffe42bc06f05c5619ab500fddb" prot="private" virt="non-virtual"><scope>QuantLib::UnitOfMeasure</scope><name>unitsOfMeasure_</name></member>
      <member refid="class_quant_lib_1_1_unit_of_measure_1a075ec47827fe7b7b826ad08edcb0b3d6" prot="public" virt="non-virtual"><scope>QuantLib::UnitOfMeasure</scope><name>unitType</name></member>
      <member refid="class_quant_lib_1_1_unit_of_measure_1a174ae23448d646825889a023a089822ba3a1f96f32b35d4728813cbc486c0b2a8" prot="public" virt="non-virtual"><scope>QuantLib::UnitOfMeasure</scope><name>Volume</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

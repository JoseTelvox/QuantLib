<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_trinomial_tree_1_1_branching" kind="class" language="C++" prot="private">
    <compoundname>QuantLib::TrinomialTree::Branching</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_trinomial_tree_1_1_branching_1a8e70f04d5af7da61f6153ed70a8e6ba2" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref> &gt;</type>
        <definition>std::vector&lt;Integer&gt; QuantLib::TrinomialTree::Branching::k_</definition>
        <argsstring></argsstring>
        <name>k_</name>
        <qualifiedname>QuantLib::TrinomialTree::Branching::k_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/trinomialtree.hpp" line="76" column="25" bodyfile="ql/methods/lattices/trinomialtree.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_trinomial_tree_1_1_branching_1ae24a5a53384de44d7b1caa3860942a51" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;Real&gt; &gt; QuantLib::TrinomialTree::Branching::probs_</definition>
        <argsstring></argsstring>
        <name>probs_</name>
        <qualifiedname>QuantLib::TrinomialTree::Branching::probs_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/trinomialtree.hpp" line="77" column="25" bodyfile="ql/methods/lattices/trinomialtree.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_trinomial_tree_1_1_branching_1ac1c651e8200106b57a76224a2452e282" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
        <definition>Integer QuantLib::TrinomialTree::Branching::kMin_</definition>
        <argsstring></argsstring>
        <name>kMin_</name>
        <qualifiedname>QuantLib::TrinomialTree::Branching::kMin_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/trinomialtree.hpp" line="78" column="21" bodyfile="ql/methods/lattices/trinomialtree.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_trinomial_tree_1_1_branching_1adcf42b8dad8734ad20533b0ac76cce96" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
        <definition>Integer QuantLib::TrinomialTree::Branching::jMin_</definition>
        <argsstring></argsstring>
        <name>jMin_</name>
        <qualifiedname>QuantLib::TrinomialTree::Branching::jMin_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/trinomialtree.hpp" line="78" column="27" bodyfile="ql/methods/lattices/trinomialtree.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_trinomial_tree_1_1_branching_1ad9f4ef35e13d64f0c40815a366638d13" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
        <definition>Integer QuantLib::TrinomialTree::Branching::kMax_</definition>
        <argsstring></argsstring>
        <name>kMax_</name>
        <qualifiedname>QuantLib::TrinomialTree::Branching::kMax_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/trinomialtree.hpp" line="78" column="33" bodyfile="ql/methods/lattices/trinomialtree.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_trinomial_tree_1_1_branching_1a467196fd2114011446d0d7b891eb2603" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
        <definition>Integer QuantLib::TrinomialTree::Branching::jMax_</definition>
        <argsstring></argsstring>
        <name>jMax_</name>
        <qualifiedname>QuantLib::TrinomialTree::Branching::jMax_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/trinomialtree.hpp" line="78" column="39" bodyfile="ql/methods/lattices/trinomialtree.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_trinomial_tree_1_1_branching_1a202b22add44e6e0ce8f9eeac07eebd92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::TrinomialTree::Branching::Branching</definition>
        <argsstring>()</argsstring>
        <name>Branching</name>
        <qualifiedname>QuantLib::TrinomialTree::Branching::Branching</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/trinomialtree.hpp" line="68" column="13" bodyfile="ql/methods/lattices/trinomialtree.hpp" bodystart="105" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_trinomial_tree_1_1_branching_1a40a9ef4204ffef571498b7fb95c4b001" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::TrinomialTree::Branching::descendant</definition>
        <argsstring>(Size index, Size branch) const</argsstring>
        <name>descendant</name>
        <qualifiedname>QuantLib::TrinomialTree::Branching::descendant</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>branch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/trinomialtree.hpp" line="69" column="18" bodyfile="ql/methods/lattices/trinomialtree.hpp" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_trinomial_tree_1_1_branching_1a22ae9769c695b1a9f7f0da5392fe308d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::TrinomialTree::Branching::probability</definition>
        <argsstring>(Size index, Size branch) const</argsstring>
        <name>probability</name>
        <qualifiedname>QuantLib::TrinomialTree::Branching::probability</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>branch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/trinomialtree.hpp" line="70" column="18" bodyfile="ql/methods/lattices/trinomialtree.hpp" bodystart="114" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_trinomial_tree_1_1_branching_1ad5035f3b05b211d388a11d396fb1ab0f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::TrinomialTree::Branching::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>QuantLib::TrinomialTree::Branching::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/trinomialtree.hpp" line="71" column="18" bodyfile="ql/methods/lattices/trinomialtree.hpp" bodystart="119" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_trinomial_tree_1_1_branching_1ae5a078c1a0d22fd614491ea8d0c8fb1b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
        <definition>Integer QuantLib::TrinomialTree::Branching::jMin</definition>
        <argsstring>() const</argsstring>
        <name>jMin</name>
        <qualifiedname>QuantLib::TrinomialTree::Branching::jMin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/trinomialtree.hpp" line="72" column="21" bodyfile="ql/methods/lattices/trinomialtree.hpp" bodystart="123" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_trinomial_tree_1_1_branching_1a39cc4d908248ea118bf8599fc0391afd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
        <definition>Integer QuantLib::TrinomialTree::Branching::jMax</definition>
        <argsstring>() const</argsstring>
        <name>jMax</name>
        <qualifiedname>QuantLib::TrinomialTree::Branching::jMax</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/trinomialtree.hpp" line="73" column="21" bodyfile="ql/methods/lattices/trinomialtree.hpp" bodystart="127" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_trinomial_tree_1_1_branching_1a19d4688dc23ff6bb7da57cf108051cfc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::TrinomialTree::Branching::add</definition>
        <argsstring>(Integer k, Real p1, Real p2, Real p3)</argsstring>
        <name>add</name>
        <qualifiedname>QuantLib::TrinomialTree::Branching::add</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
          <declname>k</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>p1</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>p2</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>p3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/trinomialtree.hpp" line="74" column="18" bodyfile="ql/methods/lattices/trinomialtree.hpp" bodystart="131" bodyend="143"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/methods/lattices/trinomialtree.hpp" line="66" column="9" bodyfile="ql/methods/lattices/trinomialtree.hpp" bodystart="66" bodyend="79"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_trinomial_tree_1_1_branching_1a19d4688dc23ff6bb7da57cf108051cfc" prot="public" virt="non-virtual"><scope>QuantLib::TrinomialTree::Branching</scope><name>add</name></member>
      <member refid="class_quant_lib_1_1_trinomial_tree_1_1_branching_1a202b22add44e6e0ce8f9eeac07eebd92" prot="public" virt="non-virtual"><scope>QuantLib::TrinomialTree::Branching</scope><name>Branching</name></member>
      <member refid="class_quant_lib_1_1_trinomial_tree_1_1_branching_1a40a9ef4204ffef571498b7fb95c4b001" prot="public" virt="non-virtual"><scope>QuantLib::TrinomialTree::Branching</scope><name>descendant</name></member>
      <member refid="class_quant_lib_1_1_trinomial_tree_1_1_branching_1a39cc4d908248ea118bf8599fc0391afd" prot="public" virt="non-virtual"><scope>QuantLib::TrinomialTree::Branching</scope><name>jMax</name></member>
      <member refid="class_quant_lib_1_1_trinomial_tree_1_1_branching_1a467196fd2114011446d0d7b891eb2603" prot="private" virt="non-virtual"><scope>QuantLib::TrinomialTree::Branching</scope><name>jMax_</name></member>
      <member refid="class_quant_lib_1_1_trinomial_tree_1_1_branching_1ae5a078c1a0d22fd614491ea8d0c8fb1b" prot="public" virt="non-virtual"><scope>QuantLib::TrinomialTree::Branching</scope><name>jMin</name></member>
      <member refid="class_quant_lib_1_1_trinomial_tree_1_1_branching_1adcf42b8dad8734ad20533b0ac76cce96" prot="private" virt="non-virtual"><scope>QuantLib::TrinomialTree::Branching</scope><name>jMin_</name></member>
      <member refid="class_quant_lib_1_1_trinomial_tree_1_1_branching_1a8e70f04d5af7da61f6153ed70a8e6ba2" prot="private" virt="non-virtual"><scope>QuantLib::TrinomialTree::Branching</scope><name>k_</name></member>
      <member refid="class_quant_lib_1_1_trinomial_tree_1_1_branching_1ad9f4ef35e13d64f0c40815a366638d13" prot="private" virt="non-virtual"><scope>QuantLib::TrinomialTree::Branching</scope><name>kMax_</name></member>
      <member refid="class_quant_lib_1_1_trinomial_tree_1_1_branching_1ac1c651e8200106b57a76224a2452e282" prot="private" virt="non-virtual"><scope>QuantLib::TrinomialTree::Branching</scope><name>kMin_</name></member>
      <member refid="class_quant_lib_1_1_trinomial_tree_1_1_branching_1a22ae9769c695b1a9f7f0da5392fe308d" prot="public" virt="non-virtual"><scope>QuantLib::TrinomialTree::Branching</scope><name>probability</name></member>
      <member refid="class_quant_lib_1_1_trinomial_tree_1_1_branching_1ae24a5a53384de44d7b1caa3860942a51" prot="private" virt="non-virtual"><scope>QuantLib::TrinomialTree::Branching</scope><name>probs_</name></member>
      <member refid="class_quant_lib_1_1_trinomial_tree_1_1_branching_1ad5035f3b05b211d388a11d396fb1ab0f" prot="public" virt="non-virtual"><scope>QuantLib::TrinomialTree::Branching</scope><name>size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

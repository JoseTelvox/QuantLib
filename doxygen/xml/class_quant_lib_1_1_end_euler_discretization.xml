<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_end_euler_discretization" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::EndEulerDiscretization</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_stochastic_process_1_1discretization" prot="public" virt="non-virtual">QuantLib::StochasticProcess::discretization</basecompoundref>
    <basecompoundref refid="class_quant_lib_1_1_stochastic_process1_d_1_1discretization" prot="public" virt="non-virtual">QuantLib::StochasticProcess1D::discretization</basecompoundref>
    <includes refid="endeulerdiscretization_8hpp" local="no">endeulerdiscretization.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_end_euler_discretization_1a89f9704894a33ee3389ed9c219dd9889" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::EndEulerDiscretization::drift</definition>
        <argsstring>(const StochasticProcess &amp;, Time t0, const Array &amp;x0, Time dt) const override</argsstring>
        <name>drift</name>
        <qualifiedname>QuantLib::EndEulerDiscretization::drift</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process_1_1discretization_1ac8ed03c4cd480745617c9e81722e75d0">drift</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_stochastic_process" kindref="compound">StochasticProcess</ref> &amp;</type>
          <defname>process</defname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t0</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>x0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns an approximation of the drift defined as <formula id="448">$ \mu(t_0 + \Delta t, \mathbf{x}_0) \Delta t $</formula>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/endeulerdiscretization.hpp" line="41" column="15" bodyfile="ql/processes/endeulerdiscretization.cpp" bodystart="24" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_end_euler_discretization_1a176e3e390959b15325b33016ba995ef3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::EndEulerDiscretization::drift</definition>
        <argsstring>(const StochasticProcess1D &amp;, Time t0, Real x0, Time dt) const override</argsstring>
        <name>drift</name>
        <qualifiedname>QuantLib::EndEulerDiscretization::drift</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process1_d_1_1discretization_1a545721dad2755b82ace41c1f1465afa7">drift</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_stochastic_process1_d" kindref="compound">StochasticProcess1D</ref> &amp;</type>
          <defname>process</defname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns an approximation of the drift defined as <formula id="449">$ \mu(t_0 + \Delta t, x_0) \Delta t $</formula>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/endeulerdiscretization.hpp" line="45" column="14" bodyfile="ql/processes/endeulerdiscretization.cpp" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_end_euler_discretization_1aa047f2a98962ac5ab9474433fd904ad8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::EndEulerDiscretization::diffusion</definition>
        <argsstring>(const StochasticProcess &amp;, Time t0, const Array &amp;x0, Time dt) const override</argsstring>
        <name>diffusion</name>
        <qualifiedname>QuantLib::EndEulerDiscretization::diffusion</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process_1_1discretization_1a4821bafa47faf65751bb4d4ac2f66294">diffusion</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_stochastic_process" kindref="compound">StochasticProcess</ref> &amp;</type>
          <defname>process</defname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t0</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>x0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns an approximation of the diffusion defined as <formula id="450">$ \sigma(t_0 + \Delta t, \mathbf{x}_0) \sqrt{\Delta t} $</formula>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/endeulerdiscretization.hpp" line="50" column="16" bodyfile="ql/processes/endeulerdiscretization.cpp" bodystart="35" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_end_euler_discretization_1acf3e234993cd29f0b77b425cce68f8cb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::EndEulerDiscretization::diffusion</definition>
        <argsstring>(const StochasticProcess1D &amp;, Time t0, Real x0, Time dt) const override</argsstring>
        <name>diffusion</name>
        <qualifiedname>QuantLib::EndEulerDiscretization::diffusion</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process1_d_1_1discretization_1aed9d1d6d06a43f5f2e1436fe2a62df94">diffusion</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_stochastic_process1_d" kindref="compound">StochasticProcess1D</ref> &amp;</type>
          <defname>process</defname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns an approximation of the diffusion defined as <formula id="451">$ \sigma(t_0 + \Delta t, x_0) \sqrt{\Delta t} $</formula>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/endeulerdiscretization.hpp" line="54" column="14" bodyfile="ql/processes/endeulerdiscretization.cpp" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_end_euler_discretization_1a3151cc4ac8287bc0fe64877a7ce1a833" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::EndEulerDiscretization::covariance</definition>
        <argsstring>(const StochasticProcess &amp;, Time t0, const Array &amp;x0, Time dt) const override</argsstring>
        <name>covariance</name>
        <qualifiedname>QuantLib::EndEulerDiscretization::covariance</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process_1_1discretization_1a60f914aef023e2047667dd1476505203">covariance</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_stochastic_process" kindref="compound">StochasticProcess</ref> &amp;</type>
          <defname>process</defname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t0</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>x0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns an approximation of the covariance defined as <formula id="452">$ \sigma(t_0 + \Delta t, \mathbf{x}_0)^2 \Delta t $</formula>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/endeulerdiscretization.hpp" line="59" column="16" bodyfile="ql/processes/endeulerdiscretization.cpp" bodystart="47" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_end_euler_discretization_1a4307a13cfb4fffe86474370bc6de4b2f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::EndEulerDiscretization::variance</definition>
        <argsstring>(const StochasticProcess1D &amp;, Time t0, Real x0, Time dt) const override</argsstring>
        <name>variance</name>
        <qualifiedname>QuantLib::EndEulerDiscretization::variance</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_stochastic_process1_d_1_1discretization_1a0c27252f7798f60909e8375cc4bf0bd7">variance</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_stochastic_process1_d" kindref="compound">StochasticProcess1D</ref> &amp;</type>
          <defname>process</defname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns an approximation of the variance defined as <formula id="453">$ \sigma(t_0 + \Delta t, x_0)^2 \Delta t $</formula>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/processes/endeulerdiscretization.hpp" line="63" column="14" bodyfile="ql/processes/endeulerdiscretization.cpp" bodystart="56" bodyend="60"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Euler end-point discretization for stochastic processes. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::EndEulerDiscretization</label>
        <link refid="class_quant_lib_1_1_end_euler_discretization"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::StochasticProcess1D::discretization</label>
        <link refid="class_quant_lib_1_1_stochastic_process1_d_1_1discretization"/>
      </node>
      <node id="2">
        <label>QuantLib::StochasticProcess::discretization</label>
        <link refid="class_quant_lib_1_1_stochastic_process_1_1discretization"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::EndEulerDiscretization</label>
        <link refid="class_quant_lib_1_1_end_euler_discretization"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::StochasticProcess1D::discretization</label>
        <link refid="class_quant_lib_1_1_stochastic_process1_d_1_1discretization"/>
      </node>
      <node id="2">
        <label>QuantLib::StochasticProcess::discretization</label>
        <link refid="class_quant_lib_1_1_stochastic_process_1_1discretization"/>
      </node>
    </collaborationgraph>
    <location file="ql/processes/endeulerdiscretization.hpp" line="33" column="5" bodyfile="ql/processes/endeulerdiscretization.hpp" bodystart="35" bodyend="64"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_end_euler_discretization_1a3151cc4ac8287bc0fe64877a7ce1a833" prot="public" virt="virtual"><scope>QuantLib::EndEulerDiscretization</scope><name>covariance</name></member>
      <member refid="class_quant_lib_1_1_end_euler_discretization_1aa047f2a98962ac5ab9474433fd904ad8" prot="public" virt="virtual"><scope>QuantLib::EndEulerDiscretization</scope><name>diffusion</name></member>
      <member refid="class_quant_lib_1_1_end_euler_discretization_1acf3e234993cd29f0b77b425cce68f8cb" prot="public" virt="virtual"><scope>QuantLib::EndEulerDiscretization</scope><name>diffusion</name></member>
      <member refid="class_quant_lib_1_1_end_euler_discretization_1a89f9704894a33ee3389ed9c219dd9889" prot="public" virt="virtual"><scope>QuantLib::EndEulerDiscretization</scope><name>drift</name></member>
      <member refid="class_quant_lib_1_1_end_euler_discretization_1a176e3e390959b15325b33016ba995ef3" prot="public" virt="virtual"><scope>QuantLib::EndEulerDiscretization</scope><name>drift</name></member>
      <member refid="class_quant_lib_1_1_end_euler_discretization_1a4307a13cfb4fffe86474370bc6de4b2f" prot="public" virt="virtual"><scope>QuantLib::EndEulerDiscretization</scope><name>variance</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process_1_1discretization_1a263d5f1fc5ce5fc7dd908f6656919e33" prot="public" virt="virtual" ambiguityscope="QuantLib::"><scope>QuantLib::EndEulerDiscretization</scope><name>~discretization</name></member>
      <member refid="class_quant_lib_1_1_stochastic_process1_d_1_1discretization_1a74bd4a65170a1aacdc5407cd458a1b4e" prot="public" virt="virtual" ambiguityscope="QuantLib::StochasticProcess1D::discretization::"><scope>QuantLib::EndEulerDiscretization</scope><name>~discretization</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

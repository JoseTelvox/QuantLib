<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_forward_rate_agreement" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::ForwardRateAgreement</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_instrument" prot="public" virt="non-virtual">QuantLib::Instrument</basecompoundref>
    <includes refid="forwardrateagreement_8hpp" local="no">forwardrateagreement.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Calculations</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_rate_agreement_1ad4d9eeedb20548b734fbf2fc899d05cb" prot="protected" static="no" mutable="no">
        <type>Position::Type</type>
        <definition>Position::Type QuantLib::ForwardRateAgreement::fraType_</definition>
        <argsstring></argsstring>
        <name>fraType_</name>
        <qualifiedname>QuantLib::ForwardRateAgreement::fraType_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forwardrateagreement.hpp" line="117" column="24" bodyfile="ql/instruments/forwardrateagreement.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_rate_agreement_1aca36714874768c18f1a5097d7cd0e1c5" prot="protected" static="no" mutable="yes">
        <type><ref refid="class_quant_lib_1_1_interest_rate" kindref="compound">InterestRate</ref></type>
        <definition>InterestRate QuantLib::ForwardRateAgreement::forwardRate_</definition>
        <argsstring></argsstring>
        <name>forwardRate_</name>
        <qualifiedname>QuantLib::ForwardRateAgreement::forwardRate_</qualifiedname>
        <briefdescription>
<para>aka FRA rate (the market forward rate) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forwardrateagreement.hpp" line="119" column="30" bodyfile="ql/instruments/forwardrateagreement.hpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_rate_agreement_1aa88c543f95ea0b8c0b969694d487e600" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_interest_rate" kindref="compound">InterestRate</ref></type>
        <definition>InterestRate QuantLib::ForwardRateAgreement::strikeForwardRate_</definition>
        <argsstring></argsstring>
        <name>strikeForwardRate_</name>
        <qualifiedname>QuantLib::ForwardRateAgreement::strikeForwardRate_</qualifiedname>
        <briefdescription>
<para>aka FRA fixing rate, contract rate </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forwardrateagreement.hpp" line="121" column="22" bodyfile="ql/instruments/forwardrateagreement.hpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_rate_agreement_1a35f0b90c800531e3177f17962ae1024d" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ForwardRateAgreement::notionalAmount_</definition>
        <argsstring></argsstring>
        <name>notionalAmount_</name>
        <qualifiedname>QuantLib::ForwardRateAgreement::notionalAmount_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forwardrateagreement.hpp" line="122" column="14" bodyfile="ql/instruments/forwardrateagreement.hpp" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_rate_agreement_1a5e77d7ac884570e43f39277504e9b9d8" prot="protected" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_ibor_index" kindref="compound">IborIndex</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;IborIndex&gt; QuantLib::ForwardRateAgreement::index_</definition>
        <argsstring></argsstring>
        <name>index_</name>
        <qualifiedname>QuantLib::ForwardRateAgreement::index_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forwardrateagreement.hpp" line="123" column="25" bodyfile="ql/instruments/forwardrateagreement.hpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_rate_agreement_1a09a59a69c449aeef90ceaca060439d33" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::ForwardRateAgreement::useIndexedCoupon_</definition>
        <argsstring></argsstring>
        <name>useIndexedCoupon_</name>
        <qualifiedname>QuantLib::ForwardRateAgreement::useIndexedCoupon_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forwardrateagreement.hpp" line="124" column="14" bodyfile="ql/instruments/forwardrateagreement.hpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_rate_agreement_1ab0f08437038eebab54045a09966b07de" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref></type>
        <definition>DayCounter QuantLib::ForwardRateAgreement::dayCounter_</definition>
        <argsstring></argsstring>
        <name>dayCounter_</name>
        <qualifiedname>QuantLib::ForwardRateAgreement::dayCounter_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forwardrateagreement.hpp" line="126" column="20" bodyfile="ql/instruments/forwardrateagreement.hpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_rate_agreement_1a556c7c643a9c826e4c282dab9e428a12" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref></type>
        <definition>Calendar QuantLib::ForwardRateAgreement::calendar_</definition>
        <argsstring></argsstring>
        <name>calendar_</name>
        <qualifiedname>QuantLib::ForwardRateAgreement::calendar_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forwardrateagreement.hpp" line="127" column="18" bodyfile="ql/instruments/forwardrateagreement.hpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_rate_agreement_1a2e36f8015bdfe8b739608eac3d7cdaed" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
        <definition>BusinessDayConvention QuantLib::ForwardRateAgreement::businessDayConvention_</definition>
        <argsstring></argsstring>
        <name>businessDayConvention_</name>
        <qualifiedname>QuantLib::ForwardRateAgreement::businessDayConvention_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forwardrateagreement.hpp" line="128" column="31" bodyfile="ql/instruments/forwardrateagreement.hpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_rate_agreement_1a8319f80d24409665861109e4a4d0c859" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::ForwardRateAgreement::valueDate_</definition>
        <argsstring></argsstring>
        <name>valueDate_</name>
        <qualifiedname>QuantLib::ForwardRateAgreement::valueDate_</qualifiedname>
        <briefdescription>
<para>the valueDate is the date the underlying index starts accruing and the FRA is settled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forwardrateagreement.hpp" line="131" column="14" bodyfile="ql/instruments/forwardrateagreement.hpp" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_rate_agreement_1a6a183df974f469ad3de2e3e7e59d21a1" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::ForwardRateAgreement::maturityDate_</definition>
        <argsstring></argsstring>
        <name>maturityDate_</name>
        <qualifiedname>QuantLib::ForwardRateAgreement::maturityDate_</qualifiedname>
        <briefdescription>
<para>maturityDate of the underlying index; not the date the FRA is settled. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forwardrateagreement.hpp" line="133" column="14" bodyfile="ql/instruments/forwardrateagreement.hpp" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_rate_agreement_1a3bc328d8288044adb183572eabc44dd8" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
        <definition>Handle&lt;YieldTermStructure&gt; QuantLib::ForwardRateAgreement::discountCurve_</definition>
        <argsstring></argsstring>
        <name>discountCurve_</name>
        <qualifiedname>QuantLib::ForwardRateAgreement::discountCurve_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forwardrateagreement.hpp" line="134" column="16" bodyfile="ql/instruments/forwardrateagreement.hpp" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_forward_rate_agreement_1a3679e699d1eea9de27154c4905dd38b1" prot="private" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ForwardRateAgreement::amount_</definition>
        <argsstring></argsstring>
        <name>amount_</name>
        <qualifiedname>QuantLib::ForwardRateAgreement::amount_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forwardrateagreement.hpp" line="139" column="22" bodyfile="ql/instruments/forwardrateagreement.hpp" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_rate_agreement_1a96d3a5f60b655c2535faf7b25b478f2e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QuantLib::ForwardRateAgreement::isExpired</definition>
        <argsstring>() const override</argsstring>
        <name>isExpired</name>
        <qualifiedname>QuantLib::ForwardRateAgreement::isExpired</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_instrument_1a121a2a929b179900744a58272d46aefe">isExpired</reimplements>
        <briefdescription>
<para>A FRA expires/settles on the value date. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forwardrateagreement.hpp" line="98" column="14" bodyfile="ql/instruments/forwardrateagreement.cpp" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_rate_agreement_1a7daa70c52af8bf6407ed8f240e53b23c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::ForwardRateAgreement::amount</definition>
        <argsstring>() const</argsstring>
        <name>amount</name>
        <qualifiedname>QuantLib::ForwardRateAgreement::amount</qualifiedname>
        <briefdescription>
<para>The payoff on the value date. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forwardrateagreement.hpp" line="100" column="14" bodyfile="ql/instruments/forwardrateagreement.cpp" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_rate_agreement_1aaf3e585cbc27b07306dbbbfbf5b485c9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
        <definition>const Calendar &amp; QuantLib::ForwardRateAgreement::calendar</definition>
        <argsstring>() const</argsstring>
        <name>calendar</name>
        <qualifiedname>QuantLib::ForwardRateAgreement::calendar</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forwardrateagreement.hpp" line="102" column="24" bodyfile="ql/instruments/forwardrateagreement.hpp" bodystart="142" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_rate_agreement_1ac26ddae4a341861e29e8b8a41d57b921" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
        <definition>BusinessDayConvention QuantLib::ForwardRateAgreement::businessDayConvention</definition>
        <argsstring>() const</argsstring>
        <name>businessDayConvention</name>
        <qualifiedname>QuantLib::ForwardRateAgreement::businessDayConvention</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forwardrateagreement.hpp" line="103" column="31" bodyfile="ql/instruments/forwardrateagreement.hpp" bodystart="144" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_rate_agreement_1a69a48a551f2fa2818a1dfa166c5ae170" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
        <definition>const DayCounter &amp; QuantLib::ForwardRateAgreement::dayCounter</definition>
        <argsstring>() const</argsstring>
        <name>dayCounter</name>
        <qualifiedname>QuantLib::ForwardRateAgreement::dayCounter</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forwardrateagreement.hpp" line="104" column="26" bodyfile="ql/instruments/forwardrateagreement.hpp" bodystart="148" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_rate_agreement_1a39277d75a3b6b8830d74d298df0134c0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
        <definition>Handle&lt; YieldTermStructure &gt; QuantLib::ForwardRateAgreement::discountCurve</definition>
        <argsstring>() const</argsstring>
        <name>discountCurve</name>
        <qualifiedname>QuantLib::ForwardRateAgreement::discountCurve</qualifiedname>
        <briefdescription>
<para>term structure relevant to the contract (e.g. repo curve) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forwardrateagreement.hpp" line="106" column="16" bodyfile="ql/instruments/forwardrateagreement.hpp" bodystart="150" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_rate_agreement_1a29429d1312a80ab1cbecb5010098a572" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::ForwardRateAgreement::fixingDate</definition>
        <argsstring>() const</argsstring>
        <name>fixingDate</name>
        <qualifiedname>QuantLib::ForwardRateAgreement::fixingDate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forwardrateagreement.hpp" line="108" column="14" bodyfile="ql/instruments/forwardrateagreement.cpp" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_rate_agreement_1a53d48c6add58d69d63227d962a77449d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_interest_rate" kindref="compound">InterestRate</ref></type>
        <definition>InterestRate QuantLib::ForwardRateAgreement::forwardRate</definition>
        <argsstring>() const</argsstring>
        <name>forwardRate</name>
        <qualifiedname>QuantLib::ForwardRateAgreement::forwardRate</qualifiedname>
        <briefdescription>
<para>Returns the relevant forward rate associated with the FRA term. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forwardrateagreement.hpp" line="111" column="22" bodyfile="ql/instruments/forwardrateagreement.cpp" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_rate_agreement_1abc19ac4ab8228f89dd22004381e9df70" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::ForwardRateAgreement::setupExpired</definition>
        <argsstring>() const override</argsstring>
        <name>setupExpired</name>
        <qualifiedname>QuantLib::ForwardRateAgreement::setupExpired</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_instrument_1a73d90597fcd3ff52a8aed674393ab574">setupExpired</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must leave the instrument in a consistent state when the expiration condition is met. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forwardrateagreement.hpp" line="115" column="14" bodyfile="ql/instruments/forwardrateagreement.cpp" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_rate_agreement_1ad4368c25ac7c431588e0f29a7e4c4876" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::ForwardRateAgreement::performCalculations</definition>
        <argsstring>() const override</argsstring>
        <name>performCalculations</name>
        <qualifiedname>QuantLib::ForwardRateAgreement::performCalculations</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_lazy_object_1aafa5583a3743d9f93fa40da5b62e1ff8">performCalculations</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must implement any calculations which must be (re)done in order to calculate the desired results. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forwardrateagreement.hpp" line="116" column="14" bodyfile="ql/instruments/forwardrateagreement.cpp" bodystart="89" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_rate_agreement_1a4ab38bf6d1837a96b6f6e1f53a1b2a1a" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::ForwardRateAgreement::calculateForwardRate</definition>
        <argsstring>() const</argsstring>
        <name>calculateForwardRate</name>
        <qualifiedname>QuantLib::ForwardRateAgreement::calculateForwardRate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forwardrateagreement.hpp" line="137" column="14" bodyfile="ql/instruments/forwardrateagreement.cpp" bodystart="96" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_rate_agreement_1a007624e56f547836437030bdc643e930" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::ForwardRateAgreement::calculateAmount</definition>
        <argsstring>() const</argsstring>
        <name>calculateAmount</name>
        <qualifiedname>QuantLib::ForwardRateAgreement::calculateAmount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forwardrateagreement.hpp" line="138" column="14" bodyfile="ql/instruments/forwardrateagreement.cpp" bodystart="110" bodyend="117"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_forward_rate_agreement_1a66aff9442cc13a2c7618eccb1e859ff5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ForwardRateAgreement::ForwardRateAgreement</definition>
        <argsstring>(const ext::shared_ptr&lt; IborIndex &gt; &amp;index, const Date &amp;valueDate, Position::Type type, Rate strikeForwardRate, Real notionalAmount, Handle&lt; YieldTermStructure &gt; discountCurve={})</argsstring>
        <name>ForwardRateAgreement</name>
        <qualifiedname>QuantLib::ForwardRateAgreement::ForwardRateAgreement</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_ibor_index" kindref="compound">IborIndex</ref> &gt; &amp;</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>valueDate</declname>
        </param>
        <param>
          <type>Position::Type</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strikeForwardRate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>notionalAmount</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
          <declname>discountCurve</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>When using this constructor, the forward rate will be forecast by the passed index. This corresponds to useIndexedCoupon=true in the <ref refid="class_quant_lib_1_1_fra_rate_helper" kindref="compound">FraRateHelper</ref> class. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forwardrateagreement.hpp" line="72" column="9" bodyfile="ql/instruments/forwardrateagreement.cpp" bodystart="28" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_forward_rate_agreement_1a7c6ff15e4ed889e03990d04ec795a054" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ForwardRateAgreement::ForwardRateAgreement</definition>
        <argsstring>(const ext::shared_ptr&lt; IborIndex &gt; &amp;index, const Date &amp;valueDate, const Date &amp;maturityDate, Position::Type type, Rate strikeForwardRate, Real notionalAmount, Handle&lt; YieldTermStructure &gt; discountCurve={})</argsstring>
        <name>ForwardRateAgreement</name>
        <qualifiedname>QuantLib::ForwardRateAgreement::ForwardRateAgreement</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_ibor_index" kindref="compound">IborIndex</ref> &gt; &amp;</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>valueDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>maturityDate</declname>
        </param>
        <param>
          <type>Position::Type</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strikeForwardRate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>notionalAmount</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
          <declname>discountCurve</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>When using this constructor, a par-rate approximation will be used, i.e., the forward rate will be forecast from value date to maturity date by the forecast curve contained in the index. This corresponds to useIndexedCoupon=false in the <ref refid="class_quant_lib_1_1_fra_rate_helper" kindref="compound">FraRateHelper</ref> class. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/forwardrateagreement.hpp" line="86" column="9" bodyfile="ql/instruments/forwardrateagreement.cpp" bodystart="39" bodyend="64"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Forward rate agreement (FRA) class </para>
    </briefdescription>
    <detaileddescription>
<para><orderedlist>
<listitem><para>Unlike the forward contract conventions on carryable financial assets (stocks, bonds, commodities), the valueDate for a FRA is taken to be the day when the forward loan or deposit begins and when full settlement takes place (based on the NPV of the contract on that date). maturityDate is the date when the forward loan or deposit ends. In fact, the FRA settles and expires on the valueDate, not on the (later) maturityDate. It follows that (maturityDate - valueDate) is the tenor/term of the underlying loan or deposit</para>
</listitem><listitem><para>Choose position type = Long for an &quot;FRA purchase&quot; (future long loan, short deposit [borrower])</para>
</listitem><listitem><para>Choose position type = Short for an &quot;FRA sale&quot; (future short loan, long deposit [lender])</para>
</listitem></orderedlist>
</para>
<para><bold>Example: </bold> <ref refid="" kindref="compound">valuation of a forward-rate agreement </ref></para>
<para><xrefsect id="todo_1_todo000042"><xreftitle>Todo</xreftitle><xrefdescription><para>Add preconditions and tests</para>
</xrefdescription></xrefsect></para>
<para><xrefsect id="todo_1_todo000043"><xreftitle>Todo</xreftitle><xrefdescription><para>Differentiate between BBA (British)/AFB (French) [assumed here] and ABA (Australian) banker conventions in the calculations.</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="warning"><para>This class still needs to be rigorously tested </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::ForwardRateAgreement</label>
        <link refid="class_quant_lib_1_1_forward_rate_agreement"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Instrument</label>
        <link refid="class_quant_lib_1_1_instrument"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9">
        <label>QuantLib::Calendar</label>
        <link refid="class_quant_lib_1_1_calendar"/>
      </node>
      <node id="6">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="8">
        <label>QuantLib::DayCounter</label>
        <link refid="class_quant_lib_1_1_day_counter"/>
      </node>
      <node id="1">
        <label>QuantLib::ForwardRateAgreement</label>
        <link refid="class_quant_lib_1_1_forward_rate_agreement"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>forwardRate_</edgelabel>
          <edgelabel>strikeForwardRate_</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>dayCounter_</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>calendar_</edgelabel>
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>maturityDate_</edgelabel>
          <edgelabel>valueDate_</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>discountCurve_</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>QuantLib::Handle&lt; QuantLib::YieldTermStructure &gt;</label>
        <link refid="class_quant_lib_1_1_handle"/>
      </node>
      <node id="2">
        <label>QuantLib::Instrument</label>
        <link refid="class_quant_lib_1_1_instrument"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>valuationDate_</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::InterestRate</label>
        <link refid="class_quant_lib_1_1_interest_rate"/>
      </node>
      <node id="3">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </collaborationgraph>
    <location file="ql/instruments/forwardrateagreement.hpp" line="66" column="5" bodyfile="ql/instruments/forwardrateagreement.hpp" bodystart="66" bodyend="140"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_instrument_1a468edb294da268b097c91bf821084c07" prot="public" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>additionalResults</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a57d2b34e8625ab3d9ffa50c0c7931099" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>additionalResults_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a02070ea7442d30625992c1711030d4b8" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>alwaysForward_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a17c9433135a259e4776baec66204a484" prot="public" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>alwaysForwardNotifications</name></member>
      <member refid="class_quant_lib_1_1_forward_rate_agreement_1a7daa70c52af8bf6407ed8f240e53b23c" prot="public" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>amount</name></member>
      <member refid="class_quant_lib_1_1_forward_rate_agreement_1a3679e699d1eea9de27154c4905dd38b1" prot="private" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>amount_</name></member>
      <member refid="class_quant_lib_1_1_forward_rate_agreement_1ac26ddae4a341861e29e8b8a41d57b921" prot="public" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>businessDayConvention</name></member>
      <member refid="class_quant_lib_1_1_forward_rate_agreement_1a2e36f8015bdfe8b739608eac3d7cdaed" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>businessDayConvention_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a4c573c48f7eaead5042864ac0eb5b025" prot="protected" virt="virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_forward_rate_agreement_1a007624e56f547836437030bdc643e930" prot="private" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>calculateAmount</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a58b4986a80efa18634483a92c121e26e" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>calculated_</name></member>
      <member refid="class_quant_lib_1_1_forward_rate_agreement_1a4ab38bf6d1837a96b6f6e1f53a1b2a1a" prot="private" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>calculateForwardRate</name></member>
      <member refid="class_quant_lib_1_1_forward_rate_agreement_1aaf3e585cbc27b07306dbbbfbf5b485c9" prot="public" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>calendar</name></member>
      <member refid="class_quant_lib_1_1_forward_rate_agreement_1a556c7c643a9c826e4c282dab9e428a12" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>calendar_</name></member>
      <member refid="class_quant_lib_1_1_forward_rate_agreement_1a69a48a551f2fa2818a1dfa166c5ae170" prot="public" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>dayCounter</name></member>
      <member refid="class_quant_lib_1_1_forward_rate_agreement_1ab0f08437038eebab54045a09966b07de" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>dayCounter_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_forward_rate_agreement_1a39277d75a3b6b8830d74d298df0134c0" prot="public" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>discountCurve</name></member>
      <member refid="class_quant_lib_1_1_forward_rate_agreement_1a3bc328d8288044adb183572eabc44dd8" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>discountCurve_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1ac548cb61c864779db09bd0fac6ae7c81" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>engine_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a03502fb6c606b262c25acd94ff4c1e52" prot="public" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>errorEstimate</name></member>
      <member refid="class_quant_lib_1_1_instrument_1abb8f4cfa7346fab7a2f3a8c8b4da30f3" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>errorEstimate_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1aebe809131db2941325d037c031bbf41b" prot="public" virt="virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>fetchResults</name></member>
      <member refid="class_quant_lib_1_1_forward_rate_agreement_1a29429d1312a80ab1cbecb5010098a572" prot="public" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>fixingDate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1afac6ee19c3107c453e1347dd8000e023" prot="public" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>forwardFirstNotificationOnly</name></member>
      <member refid="class_quant_lib_1_1_forward_rate_agreement_1a53d48c6add58d69d63227d962a77449d" prot="public" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>forwardRate</name></member>
      <member refid="class_quant_lib_1_1_forward_rate_agreement_1aca36714874768c18f1a5097d7cd0e1c5" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>forwardRate_</name></member>
      <member refid="class_quant_lib_1_1_forward_rate_agreement_1a66aff9442cc13a2c7618eccb1e859ff5" prot="public" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>ForwardRateAgreement</name></member>
      <member refid="class_quant_lib_1_1_forward_rate_agreement_1a7c6ff15e4ed889e03990d04ec795a054" prot="public" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>ForwardRateAgreement</name></member>
      <member refid="class_quant_lib_1_1_forward_rate_agreement_1ad4d9eeedb20548b734fbf2fc899d05cb" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>fraType_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7157f41e83f2c5d924f5c5bafda04d1d" prot="public" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>freeze</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7bb721fe00c6854e602758aba629ab77" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>frozen_</name></member>
      <member refid="class_quant_lib_1_1_forward_rate_agreement_1a5e77d7ac884570e43f39277504e9b9d8" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>index_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a5e4c746cbf7999c83dc57f87e241f1cc" prot="public" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>Instrument</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a0a7c5d42815a4e16ee2158e24dbfc748" prot="public" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>isCalculated</name></member>
      <member refid="class_quant_lib_1_1_forward_rate_agreement_1a96d3a5f60b655c2535faf7b25b478f2e" prot="public" virt="virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>isExpired</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a26f18f4ff7faaaebd8eae50e064b493e" prot="public" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>LazyObject</name></member>
      <member refid="class_quant_lib_1_1_forward_rate_agreement_1a6a183df974f469ad3de2e3e7e59d21a1" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>maturityDate_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_forward_rate_agreement_1a35f0b90c800531e3177f17962ae1024d" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>notionalAmount_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a5afdd9698267cd30ddd10cf01f3487b0" prot="public" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>NPV</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a997663780100d30ae59b14ac0285322d" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>NPV_</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::ForwardRateAgreement</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::ForwardRateAgreement</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::ForwardRateAgreement</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::ForwardRateAgreement</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::ForwardRateAgreement</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::QuantLib::Observer::"><scope>QuantLib::ForwardRateAgreement</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_forward_rate_agreement_1ad4368c25ac7c431588e0f29a7e4c4876" prot="protected" virt="virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>performCalculations</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a70c9b24e50132408d8d9ce4f6674662a" prot="public" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>recalculate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a266c15a12160a89f4f9707db85f9fa27" prot="public" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>result</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a3444386491f179f64f4f0aac24997071" prot="public" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>setPricingEngine</name></member>
      <member refid="class_quant_lib_1_1_instrument_1af7344eebc48a1a361386e5c5a90a8fcc" prot="public" virt="virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>setupArguments</name></member>
      <member refid="class_quant_lib_1_1_forward_rate_agreement_1abc19ac4ab8228f89dd22004381e9df70" prot="protected" virt="virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>setupExpired</name></member>
      <member refid="class_quant_lib_1_1_forward_rate_agreement_1aa88c543f95ea0b8c0b969694d487e600" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>strikeForwardRate_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a2e0e4786666453024b9d4e0761f2770b" prot="public" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>unfreeze</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1adee2bf49be5c4c78736be293321a856d" prot="public" virt="virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_forward_rate_agreement_1a09a59a69c449aeef90ceaca060439d33" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>useIndexedCoupon_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a53a0fc1adc70b73387ad53009725835d" prot="public" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>valuationDate</name></member>
      <member refid="class_quant_lib_1_1_instrument_1aa60b558fc82f022e13535360ac4a6fed" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>valuationDate_</name></member>
      <member refid="class_quant_lib_1_1_forward_rate_agreement_1a8319f80d24409665861109e4a4d0c859" prot="protected" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>valueDate_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a9d719c43bb627177a90d7d12324a2d6e" prot="public" virt="non-virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>~LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::ForwardRateAgreement</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

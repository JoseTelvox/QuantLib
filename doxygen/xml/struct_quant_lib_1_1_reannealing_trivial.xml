<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="struct_quant_lib_1_1_reannealing_trivial" kind="struct" language="C++" prot="public">
    <compoundname>QuantLib::ReannealingTrivial</compoundname>
    <includes refid="hybridsimulatedannealingfunctors_8hpp" local="no">hybridsimulatedannealingfunctors.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_quant_lib_1_1_reannealing_trivial_1a56de77a898711ab7dfa7f921547d75cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ReannealingTrivial::ReannealingTrivial</definition>
        <argsstring>()=default</argsstring>
        <name>ReannealingTrivial</name>
        <qualifiedname>QuantLib::ReannealingTrivial::ReannealingTrivial</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" line="343" column="9"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1_reannealing_trivial_1a9435a7ae52bb608f47e14daa301409d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::ReannealingTrivial::setProblem</definition>
        <argsstring>(Problem &amp;P)</argsstring>
        <name>setProblem</name>
        <qualifiedname>QuantLib::ReannealingTrivial::setProblem</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_problem" kindref="compound">Problem</ref> &amp;</type>
          <declname>P</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" line="345" column="14" bodyfile="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" bodystart="345" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1_reannealing_trivial_1ac7c15dde8f6c39420fa9bf75c0aae475" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::ReannealingTrivial::operator()</definition>
        <argsstring>(Array &amp;steps, const Array &amp;currentPoint, Real aCurrentValue, const Array &amp;currTemp)</argsstring>
        <name>operator()</name>
        <qualifiedname>QuantLib::ReannealingTrivial::operator()</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>steps</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>currentPoint</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>aCurrentValue</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>currTemp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" line="346" column="14" bodyfile="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" bodystart="346" bodyend="347"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Reannealing Trivial. </para>
    </briefdescription>
    <detaileddescription>
<para>No reannealing is performed </para>
    </detaileddescription>
    <location file="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" line="342" column="5" bodyfile="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" bodystart="342" bodyend="348"/>
    <listofallmembers>
      <member refid="struct_quant_lib_1_1_reannealing_trivial_1ac7c15dde8f6c39420fa9bf75c0aae475" prot="public" virt="non-virtual"><scope>QuantLib::ReannealingTrivial</scope><name>operator()</name></member>
      <member refid="struct_quant_lib_1_1_reannealing_trivial_1a56de77a898711ab7dfa7f921547d75cd" prot="public" virt="non-virtual"><scope>QuantLib::ReannealingTrivial</scope><name>ReannealingTrivial</name></member>
      <member refid="struct_quant_lib_1_1_reannealing_trivial_1a9435a7ae52bb608f47e14daa301409d8" prot="public" virt="non-virtual"><scope>QuantLib::ReannealingTrivial</scope><name>setProblem</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

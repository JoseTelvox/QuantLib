<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_no_arb_sabr_interpolation" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::NoArbSabrInterpolation</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_interpolation" prot="public" virt="non-virtual">QuantLib::Interpolation</basecompoundref>
    <includes refid="noarbsabrinterpolation_8hpp" local="no">noarbsabrinterpolation.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_no_arb_sabr_interpolation_1ae0fd6924d406e0855f18333dcc174bb4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class I1</type>
          </param>
          <param>
            <type>class I2</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>QuantLib::NoArbSabrInterpolation::NoArbSabrInterpolation</definition>
        <argsstring>(const I1 &amp;xBegin, const I1 &amp;xEnd, const I2 &amp;yBegin, Time t, const Real &amp;forward, Real alpha, Real beta, Real nu, Real rho, bool alphaIsFixed, bool betaIsFixed, bool nuIsFixed, bool rhoIsFixed, bool vegaWeighted=true, const ext::shared_ptr&lt; EndCriteria &gt; &amp;endCriteria=ext::shared_ptr&lt; EndCriteria &gt;(), const ext::shared_ptr&lt; OptimizationMethod &gt; &amp;optMethod=ext::shared_ptr&lt; OptimizationMethod &gt;(), const Real errorAccept=0.0020, const bool useMaxError=false, const Size maxGuesses=50, const Real shift=0.0)</argsstring>
        <name>NoArbSabrInterpolation</name>
        <qualifiedname>QuantLib::NoArbSabrInterpolation::NoArbSabrInterpolation</qualifiedname>
        <param>
          <type>const I1 &amp;</type>
          <declname>xBegin</declname>
        </param>
        <param>
          <type>const I1 &amp;</type>
          <declname>xEnd</declname>
        </param>
        <param>
          <type>const I2 &amp;</type>
          <declname>yBegin</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &amp;</type>
          <declname>forward</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>alpha</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>beta</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>nu</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>rho</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>alphaIsFixed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>betaIsFixed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>nuIsFixed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>rhoIsFixed</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>vegaWeighted</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_end_criteria" kindref="compound">EndCriteria</ref> &gt; &amp;</type>
          <declname>endCriteria</declname>
          <defval>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_end_criteria" kindref="compound">EndCriteria</ref> &gt;()</defval>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_optimization_method" kindref="compound">OptimizationMethod</ref> &gt; &amp;</type>
          <declname>optMethod</declname>
          <defval>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_optimization_method" kindref="compound">OptimizationMethod</ref> &gt;()</defval>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>errorAccept</declname>
          <defval>0.0020</defval>
        </param>
        <param>
          <type>const bool</type>
          <declname>useMaxError</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>maxGuesses</declname>
          <defval>50</defval>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>shift</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/noarbsabrinterpolation.hpp" line="197" column="5" bodyfile="ql/experimental/volatility/noarbsabrinterpolation.hpp" bodystart="197" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_no_arb_sabr_interpolation_1a410094ca696162e9df7d5f9aee3ce2de" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::NoArbSabrInterpolation::expiry</definition>
        <argsstring>() const</argsstring>
        <name>expiry</name>
        <qualifiedname>QuantLib::NoArbSabrInterpolation::expiry</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/noarbsabrinterpolation.hpp" line="221" column="10" bodyfile="ql/experimental/volatility/noarbsabrinterpolation.hpp" bodystart="221" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_no_arb_sabr_interpolation_1a700648c96311aa222c1b492a6d9963f1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::NoArbSabrInterpolation::forward</definition>
        <argsstring>() const</argsstring>
        <name>forward</name>
        <qualifiedname>QuantLib::NoArbSabrInterpolation::forward</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/noarbsabrinterpolation.hpp" line="222" column="10" bodyfile="ql/experimental/volatility/noarbsabrinterpolation.hpp" bodystart="222" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_no_arb_sabr_interpolation_1a18fca572d5093e60a0b23ce77583f54f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::NoArbSabrInterpolation::alpha</definition>
        <argsstring>() const</argsstring>
        <name>alpha</name>
        <qualifiedname>QuantLib::NoArbSabrInterpolation::alpha</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/noarbsabrinterpolation.hpp" line="223" column="10" bodyfile="ql/experimental/volatility/noarbsabrinterpolation.hpp" bodystart="223" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_no_arb_sabr_interpolation_1a7a98874386720b9072421584667af6de" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::NoArbSabrInterpolation::beta</definition>
        <argsstring>() const</argsstring>
        <name>beta</name>
        <qualifiedname>QuantLib::NoArbSabrInterpolation::beta</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/noarbsabrinterpolation.hpp" line="224" column="10" bodyfile="ql/experimental/volatility/noarbsabrinterpolation.hpp" bodystart="224" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_no_arb_sabr_interpolation_1a017fd8ce8dfa851cc8fc68b563b9465b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::NoArbSabrInterpolation::nu</definition>
        <argsstring>() const</argsstring>
        <name>nu</name>
        <qualifiedname>QuantLib::NoArbSabrInterpolation::nu</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/noarbsabrinterpolation.hpp" line="225" column="10" bodyfile="ql/experimental/volatility/noarbsabrinterpolation.hpp" bodystart="225" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_no_arb_sabr_interpolation_1aac92f07b87552494c110f33bd15135ac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::NoArbSabrInterpolation::rho</definition>
        <argsstring>() const</argsstring>
        <name>rho</name>
        <qualifiedname>QuantLib::NoArbSabrInterpolation::rho</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/noarbsabrinterpolation.hpp" line="226" column="10" bodyfile="ql/experimental/volatility/noarbsabrinterpolation.hpp" bodystart="226" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_no_arb_sabr_interpolation_1a38d120c0e4161b901e199272aaae23c2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::NoArbSabrInterpolation::rmsError</definition>
        <argsstring>() const</argsstring>
        <name>rmsError</name>
        <qualifiedname>QuantLib::NoArbSabrInterpolation::rmsError</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/noarbsabrinterpolation.hpp" line="227" column="10" bodyfile="ql/experimental/volatility/noarbsabrinterpolation.hpp" bodystart="227" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_no_arb_sabr_interpolation_1ad8e884c94bf1fd61271e38fb8665e9d8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::NoArbSabrInterpolation::maxError</definition>
        <argsstring>() const</argsstring>
        <name>maxError</name>
        <qualifiedname>QuantLib::NoArbSabrInterpolation::maxError</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/noarbsabrinterpolation.hpp" line="228" column="10" bodyfile="ql/experimental/volatility/noarbsabrinterpolation.hpp" bodystart="228" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_no_arb_sabr_interpolation_1a8dc3e22c5c0cd107bffaf6028291341f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; Real &gt; &amp; QuantLib::NoArbSabrInterpolation::interpolationWeights</definition>
        <argsstring>() const</argsstring>
        <name>interpolationWeights</name>
        <qualifiedname>QuantLib::NoArbSabrInterpolation::interpolationWeights</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/noarbsabrinterpolation.hpp" line="229" column="23" bodyfile="ql/experimental/volatility/noarbsabrinterpolation.hpp" bodystart="229" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_no_arb_sabr_interpolation_1a94dfdd751bd82d49d634d89a62695a48" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>EndCriteria::Type</type>
        <definition>EndCriteria::Type QuantLib::NoArbSabrInterpolation::endCriteria</definition>
        <argsstring>()</argsstring>
        <name>endCriteria</name>
        <qualifiedname>QuantLib::NoArbSabrInterpolation::endCriteria</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/noarbsabrinterpolation.hpp" line="232" column="23" bodyfile="ql/experimental/volatility/noarbsabrinterpolation.hpp" bodystart="232" bodyend="232"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_no_arb_sabr_interpolation_1a3e66e6bf61b4b4119efbbf4498daa164" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1detail_1_1_x_a_b_r_coeff_holder" kindref="compound">detail::XABRCoeffHolder</ref>&lt; <ref refid="struct_quant_lib_1_1detail_1_1_no_arb_sabr_specs" kindref="compound">detail::NoArbSabrSpecs</ref> &gt; &amp;</type>
        <definition>const detail::XABRCoeffHolder&lt; detail::NoArbSabrSpecs &gt; &amp; QuantLib::NoArbSabrInterpolation::coeffs</definition>
        <argsstring>() const</argsstring>
        <name>coeffs</name>
        <qualifiedname>QuantLib::NoArbSabrInterpolation::coeffs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/volatility/noarbsabrinterpolation.hpp" line="235" column="35" bodyfile="ql/experimental/volatility/noarbsabrinterpolation.hpp" bodystart="235" bodyend="237"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>no arbitrage sabr smile interpolation between discrete volatility points. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>QuantLib::Extrapolator</label>
        <link refid="class_quant_lib_1_1_extrapolator"/>
      </node>
      <node id="2">
        <label>QuantLib::Interpolation</label>
        <link refid="class_quant_lib_1_1_interpolation"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::NoArbSabrInterpolation</label>
        <link refid="class_quant_lib_1_1_no_arb_sabr_interpolation"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>QuantLib::Extrapolator</label>
        <link refid="class_quant_lib_1_1_extrapolator"/>
      </node>
      <node id="2">
        <label>QuantLib::Interpolation</label>
        <link refid="class_quant_lib_1_1_interpolation"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::NoArbSabrInterpolation</label>
        <link refid="class_quant_lib_1_1_no_arb_sabr_interpolation"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/volatility/noarbsabrinterpolation.hpp" line="194" column="1" bodyfile="ql/experimental/volatility/noarbsabrinterpolation.hpp" bodystart="194" bodyend="238"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_extrapolator_1ab3936a9b5b5c163d3e511437c16c1d9e" prot="public" virt="non-virtual"><scope>QuantLib::NoArbSabrInterpolation</scope><name>allowsExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_no_arb_sabr_interpolation_1a18fca572d5093e60a0b23ce77583f54f" prot="public" virt="non-virtual"><scope>QuantLib::NoArbSabrInterpolation</scope><name>alpha</name></member>
      <member refid="class_quant_lib_1_1_no_arb_sabr_interpolation_1a7a98874386720b9072421584667af6de" prot="public" virt="non-virtual"><scope>QuantLib::NoArbSabrInterpolation</scope><name>beta</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1ab682157f4f0585bc28beefc6c22c8ba8" prot="protected" virt="non-virtual"><scope>QuantLib::NoArbSabrInterpolation</scope><name>checkRange</name></member>
      <member refid="class_quant_lib_1_1_no_arb_sabr_interpolation_1a3e66e6bf61b4b4119efbbf4498daa164" prot="private" virt="non-virtual"><scope>QuantLib::NoArbSabrInterpolation</scope><name>coeffs</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1ab52a971431083a0a474266d6cdc9f936" prot="public" virt="non-virtual"><scope>QuantLib::NoArbSabrInterpolation</scope><name>derivative</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1a6af69387d5cae0fe84d6a0c858406218" prot="public" virt="non-virtual"><scope>QuantLib::NoArbSabrInterpolation</scope><name>disableExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1aca518c22ea0e7c6a410757877f11756c" prot="public" virt="non-virtual"><scope>QuantLib::NoArbSabrInterpolation</scope><name>empty</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1a5f7b5650a44d6c63095bc739470c8bfb" prot="public" virt="non-virtual"><scope>QuantLib::NoArbSabrInterpolation</scope><name>enableExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_no_arb_sabr_interpolation_1a94dfdd751bd82d49d634d89a62695a48" prot="public" virt="non-virtual"><scope>QuantLib::NoArbSabrInterpolation</scope><name>endCriteria</name></member>
      <member refid="class_quant_lib_1_1_no_arb_sabr_interpolation_1a410094ca696162e9df7d5f9aee3ce2de" prot="public" virt="non-virtual"><scope>QuantLib::NoArbSabrInterpolation</scope><name>expiry</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1af1c3adaccdfaf07d3d07edaa234444f7" prot="public" virt="non-virtual"><scope>QuantLib::NoArbSabrInterpolation</scope><name>Extrapolator</name></member>
      <member refid="class_quant_lib_1_1_no_arb_sabr_interpolation_1a700648c96311aa222c1b492a6d9963f1" prot="public" virt="non-virtual"><scope>QuantLib::NoArbSabrInterpolation</scope><name>forward</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1aef7940748a211476a0ed80e3a6ca9b9b" prot="protected" virt="non-virtual"><scope>QuantLib::NoArbSabrInterpolation</scope><name>impl_</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1a3357fa39f1e41da02be1792133f6d622" prot="public" virt="non-virtual"><scope>QuantLib::NoArbSabrInterpolation</scope><name>Interpolation</name></member>
      <member refid="class_quant_lib_1_1_no_arb_sabr_interpolation_1a8dc3e22c5c0cd107bffaf6028291341f" prot="public" virt="non-virtual"><scope>QuantLib::NoArbSabrInterpolation</scope><name>interpolationWeights</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1af0892ba060b7b7d58943718b074f079a" prot="public" virt="non-virtual"><scope>QuantLib::NoArbSabrInterpolation</scope><name>isInRange</name></member>
      <member refid="class_quant_lib_1_1_no_arb_sabr_interpolation_1ad8e884c94bf1fd61271e38fb8665e9d8" prot="public" virt="non-virtual"><scope>QuantLib::NoArbSabrInterpolation</scope><name>maxError</name></member>
      <member refid="class_quant_lib_1_1_no_arb_sabr_interpolation_1ae0fd6924d406e0855f18333dcc174bb4" prot="public" virt="non-virtual"><scope>QuantLib::NoArbSabrInterpolation</scope><name>NoArbSabrInterpolation</name></member>
      <member refid="class_quant_lib_1_1_no_arb_sabr_interpolation_1a017fd8ce8dfa851cc8fc68b563b9465b" prot="public" virt="non-virtual"><scope>QuantLib::NoArbSabrInterpolation</scope><name>nu</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1a9e0ba688e60feed84158204bf22b678d" prot="public" virt="non-virtual"><scope>QuantLib::NoArbSabrInterpolation</scope><name>operator()</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1a5b8ec18bc4927757f4a04967f13b271c" prot="public" virt="non-virtual"><scope>QuantLib::NoArbSabrInterpolation</scope><name>primitive</name></member>
      <member refid="class_quant_lib_1_1_no_arb_sabr_interpolation_1aac92f07b87552494c110f33bd15135ac" prot="public" virt="non-virtual"><scope>QuantLib::NoArbSabrInterpolation</scope><name>rho</name></member>
      <member refid="class_quant_lib_1_1_no_arb_sabr_interpolation_1a38d120c0e4161b901e199272aaae23c2" prot="public" virt="non-virtual"><scope>QuantLib::NoArbSabrInterpolation</scope><name>rmsError</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1afab97bcd82695d553682b5f6eebb1718" prot="public" virt="non-virtual"><scope>QuantLib::NoArbSabrInterpolation</scope><name>secondDerivative</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1a56cfc87cb5966ee36d72e5ffc7b1ff5c" prot="public" virt="non-virtual"><scope>QuantLib::NoArbSabrInterpolation</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1a12711f5ec2e165fdb5104f3979855cc4" prot="public" virt="non-virtual"><scope>QuantLib::NoArbSabrInterpolation</scope><name>xMax</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1afc10233f6b565f10e291389631e5ea1f" prot="public" virt="non-virtual"><scope>QuantLib::NoArbSabrInterpolation</scope><name>xMin</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1af0ca0156436ffbce159183198eb27e2e" prot="public" virt="virtual"><scope>QuantLib::NoArbSabrInterpolation</scope><name>~Extrapolator</name></member>
      <member refid="class_quant_lib_1_1_interpolation_1a2b6d1246d8676354fb8f1efb03c9852f" prot="public" virt="non-virtual"><scope>QuantLib::NoArbSabrInterpolation</scope><name>~Interpolation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

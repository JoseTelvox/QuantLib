<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::FdHestonHullWhiteVanillaEngine</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_generic_model_engine" prot="public" virt="non-virtual">QuantLib::GenericModelEngine&lt; HestonModel, VanillaOption::arguments, VanillaOption::results &gt;</basecompoundref>
    <includes refid="fdhestonhullwhitevanillaengine_8hpp" local="no">fdhestonhullwhitevanillaengine.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine_1a72c89085a2242aa910e9903fbe352618" prot="private" static="no" mutable="no">
        <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_hull_white_process" kindref="compound">HullWhiteProcess</ref> &gt;</type>
        <definition>const ext::shared_ptr&lt;HullWhiteProcess&gt; QuantLib::FdHestonHullWhiteVanillaEngine::hwProcess_</definition>
        <argsstring></argsstring>
        <name>hwProcess_</name>
        <qualifiedname>QuantLib::FdHestonHullWhiteVanillaEngine::hwProcess_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp" line="80" column="31" bodyfile="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine_1a45bcf415c1b10f7ea9cf6a0a29403a6a" prot="private" static="no" mutable="no">
        <type>DividendSchedule</type>
        <definition>DividendSchedule QuantLib::FdHestonHullWhiteVanillaEngine::dividends_</definition>
        <argsstring></argsstring>
        <name>dividends_</name>
        <qualifiedname>QuantLib::FdHestonHullWhiteVanillaEngine::dividends_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp" line="81" column="26" bodyfile="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine_1abe95b599b5d8fccc38b0c03ed7712305" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>const Real QuantLib::FdHestonHullWhiteVanillaEngine::corrEquityShortRate_</definition>
        <argsstring></argsstring>
        <name>corrEquityShortRate_</name>
        <qualifiedname>QuantLib::FdHestonHullWhiteVanillaEngine::corrEquityShortRate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp" line="82" column="20" bodyfile="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine_1a08cb379ed360b1bf0d017499ed215eed" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>const Size QuantLib::FdHestonHullWhiteVanillaEngine::tGrid_</definition>
        <argsstring></argsstring>
        <name>tGrid_</name>
        <qualifiedname>QuantLib::FdHestonHullWhiteVanillaEngine::tGrid_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp" line="83" column="20" bodyfile="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine_1a5bcaa5d2ba36f4b2f9a1484406dd1278" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>const Size QuantLib::FdHestonHullWhiteVanillaEngine::xGrid_</definition>
        <argsstring></argsstring>
        <name>xGrid_</name>
        <qualifiedname>QuantLib::FdHestonHullWhiteVanillaEngine::xGrid_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp" line="83" column="27" bodyfile="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine_1aee970144944916961396abaf89405c35" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>const Size QuantLib::FdHestonHullWhiteVanillaEngine::vGrid_</definition>
        <argsstring></argsstring>
        <name>vGrid_</name>
        <qualifiedname>QuantLib::FdHestonHullWhiteVanillaEngine::vGrid_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp" line="83" column="34" bodyfile="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine_1a34c6f501b8a80fa49b723e1836b43186" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>const Size QuantLib::FdHestonHullWhiteVanillaEngine::rGrid_</definition>
        <argsstring></argsstring>
        <name>rGrid_</name>
        <qualifiedname>QuantLib::FdHestonHullWhiteVanillaEngine::rGrid_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp" line="83" column="41" bodyfile="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine_1aca783b879abf890f0ce0153ea3550a19" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>const Size QuantLib::FdHestonHullWhiteVanillaEngine::dampingSteps_</definition>
        <argsstring></argsstring>
        <name>dampingSteps_</name>
        <qualifiedname>QuantLib::FdHestonHullWhiteVanillaEngine::dampingSteps_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp" line="84" column="20" bodyfile="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine_1ac2d39ee1b2d52d38956313e2096a5a21" prot="private" static="no" mutable="no">
        <type>const <ref refid="struct_quant_lib_1_1_fdm_scheme_desc" kindref="compound">FdmSchemeDesc</ref></type>
        <definition>const FdmSchemeDesc QuantLib::FdHestonHullWhiteVanillaEngine::schemeDesc_</definition>
        <argsstring></argsstring>
        <name>schemeDesc_</name>
        <qualifiedname>QuantLib::FdHestonHullWhiteVanillaEngine::schemeDesc_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp" line="85" column="29" bodyfile="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine_1aa7721f9450979f7c3f5a3bf226e6bdbd" prot="private" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool QuantLib::FdHestonHullWhiteVanillaEngine::controlVariate_</definition>
        <argsstring></argsstring>
        <name>controlVariate_</name>
        <qualifiedname>QuantLib::FdHestonHullWhiteVanillaEngine::controlVariate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp" line="86" column="20" bodyfile="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine_1ac0f72f94888808777a53066408671914" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::FdHestonHullWhiteVanillaEngine::strikes_</definition>
        <argsstring></argsstring>
        <name>strikes_</name>
        <qualifiedname>QuantLib::FdHestonHullWhiteVanillaEngine::strikes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp" line="88" column="21" bodyfile="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine_1afdc161ec225a1c83719628bedd6d1dce" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; std::pair&lt; <ref refid="class_quant_lib_1_1_option_1_1arguments" kindref="compound">VanillaOption::arguments</ref>, <ref refid="class_quant_lib_1_1_instrument_1_1results" kindref="compound">VanillaOption::results</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::pair&lt;VanillaOption::arguments, VanillaOption::results&gt; &gt; QuantLib::FdHestonHullWhiteVanillaEngine::cachedArgs2results_</definition>
        <argsstring></argsstring>
        <name>cachedArgs2results_</name>
        <qualifiedname>QuantLib::FdHestonHullWhiteVanillaEngine::cachedArgs2results_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp" line="91" column="61" bodyfile="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine_1a2b24515857a6a77a6db09f936dd4519e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FdHestonHullWhiteVanillaEngine::FdHestonHullWhiteVanillaEngine</definition>
        <argsstring>(const ext::shared_ptr&lt; HestonModel &gt; &amp;model, ext::shared_ptr&lt; HullWhiteProcess &gt; hwProcess, Real corrEquityShortRate, Size tGrid=50, Size xGrid=100, Size vGrid=40, Size rGrid=20, Size dampingSteps=0, bool controlVariate=true, const FdmSchemeDesc &amp;schemeDesc=FdmSchemeDesc::Hundsdorfer())</argsstring>
        <name>FdHestonHullWhiteVanillaEngine</name>
        <qualifiedname>QuantLib::FdHestonHullWhiteVanillaEngine::FdHestonHullWhiteVanillaEngine</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_heston_model" kindref="compound">HestonModel</ref> &gt; &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_hull_white_process" kindref="compound">HullWhiteProcess</ref> &gt;</type>
          <declname>hwProcess</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>corrEquityShortRate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>tGrid</declname>
          <defval>50</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>xGrid</declname>
          <defval>100</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>vGrid</declname>
          <defval>40</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>rGrid</declname>
          <defval>20</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>dampingSteps</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>controlVariate</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>const <ref refid="struct_quant_lib_1_1_fdm_scheme_desc" kindref="compound">FdmSchemeDesc</ref> &amp;</type>
          <declname>schemeDesc</declname>
          <defval>FdmSchemeDesc::Hundsdorfer()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp" line="48" column="9" bodyfile="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.cpp" bodystart="36" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine_1aa80ee3eeb0925f56486cb1daa1eea348" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FdHestonHullWhiteVanillaEngine::FdHestonHullWhiteVanillaEngine</definition>
        <argsstring>(const ext::shared_ptr&lt; HestonModel &gt; &amp;model, ext::shared_ptr&lt; HullWhiteProcess &gt; hwProcess, DividendSchedule dividends, Real corrEquityShortRate, Size tGrid=50, Size xGrid=100, Size vGrid=40, Size rGrid=20, Size dampingSteps=0, bool controlVariate=true, const FdmSchemeDesc &amp;schemeDesc=FdmSchemeDesc::Hundsdorfer())</argsstring>
        <name>FdHestonHullWhiteVanillaEngine</name>
        <qualifiedname>QuantLib::FdHestonHullWhiteVanillaEngine::FdHestonHullWhiteVanillaEngine</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_heston_model" kindref="compound">HestonModel</ref> &gt; &amp;</type>
          <declname>model</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_hull_white_process" kindref="compound">HullWhiteProcess</ref> &gt;</type>
          <declname>hwProcess</declname>
        </param>
        <param>
          <type>DividendSchedule</type>
          <declname>dividends</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>corrEquityShortRate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>tGrid</declname>
          <defval>50</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>xGrid</declname>
          <defval>100</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>vGrid</declname>
          <defval>40</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>rGrid</declname>
          <defval>20</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>dampingSteps</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>controlVariate</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>const <ref refid="struct_quant_lib_1_1_fdm_scheme_desc" kindref="compound">FdmSchemeDesc</ref> &amp;</type>
          <declname>schemeDesc</declname>
          <defval>FdmSchemeDesc::Hundsdorfer()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp" line="60" column="9" bodyfile="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.cpp" bodystart="55" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine_1aea8ea3e9c80492ee68a7d50b6255244e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::FdHestonHullWhiteVanillaEngine::calculate</definition>
        <argsstring>() const override</argsstring>
        <name>calculate</name>
        <qualifiedname>QuantLib::FdHestonHullWhiteVanillaEngine::calculate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_pricing_engine_1ad2be11cff80d9792f0cc8231711fcb06">calculate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp" line="73" column="14" bodyfile="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.cpp" bodystart="75" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine_1aef5d89d81a6f4287d37d445bd7b9caf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::FdHestonHullWhiteVanillaEngine::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <qualifiedname>QuantLib::FdHestonHullWhiteVanillaEngine::update</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_observer_1a07905c55dca858470fcf4a1aea0005aa">update</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must be implemented in derived classes. An instance of Observer does not call this method directly: instead, it will be called by the observables the instance registered with when they need to notify any changes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp" line="76" column="14" bodyfile="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.cpp" bodystart="232" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine_1aa9a3603ffc91754d7707253e670a72a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::FdHestonHullWhiteVanillaEngine::enableMultipleStrikesCaching</definition>
        <argsstring>(const std::vector&lt; Real &gt; &amp;strikes)</argsstring>
        <name>enableMultipleStrikesCaching</name>
        <qualifiedname>QuantLib::FdHestonHullWhiteVanillaEngine::enableMultipleStrikesCaching</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>strikes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp" line="77" column="14" bodyfile="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.cpp" bodystart="239" bodyend="243"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Finite-differences Heston Hull-White vanilla option engine. </para>
    </briefdescription>
    <detaileddescription>
<para><xrefsect id="test_1_test000152"><xreftitle>Test</xreftitle><xrefdescription><para>the correctness of the returned value is tested by reproducing results available in web/literature and comparison with Black/Heston pricing. </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::FdHestonHullWhiteVanillaEngine</label>
        <link refid="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::GenericEngine&lt; VanillaOption::arguments, VanillaOption::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_engine"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::GenericModelEngine&lt; HestonModel, VanillaOption::arguments, VanillaOption::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_model_engine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="4">
        <label>QuantLib::PricingEngine</label>
        <link refid="class_quant_lib_1_1_pricing_engine"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::FdHestonHullWhiteVanillaEngine</label>
        <link refid="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::GenericEngine&lt; VanillaOption::arguments, VanillaOption::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_engine"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::GenericModelEngine&lt; HestonModel, VanillaOption::arguments, VanillaOption::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_model_engine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>model_</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::Handle&lt; HestonModel &gt;</label>
        <link refid="class_quant_lib_1_1_handle"/>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="4">
        <label>QuantLib::PricingEngine</label>
        <link refid="class_quant_lib_1_1_pricing_engine"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp" line="43" column="5" bodyfile="ql/pricingengines/vanilla/fdhestonhullwhitevanillaengine.hpp" bodystart="46" bodyend="92"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_generic_engine_1ad2371cdbafa1989afb0e4733b1212c0d" prot="protected" virt="non-virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>arguments_</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine_1afdc161ec225a1c83719628bedd6d1dce" prot="private" virt="non-virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>cachedArgs2results_</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine_1aea8ea3e9c80492ee68a7d50b6255244e" prot="public" virt="virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine_1aa7721f9450979f7c3f5a3bf226e6bdbd" prot="private" virt="non-virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>controlVariate_</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine_1abe95b599b5d8fccc38b0c03ed7712305" prot="private" virt="non-virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>corrEquityShortRate_</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine_1aca783b879abf890f0ce0153ea3550a19" prot="private" virt="non-virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>dampingSteps_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine_1a45bcf415c1b10f7ea9cf6a0a29403a6a" prot="private" virt="non-virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>dividends_</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine_1aa9a3603ffc91754d7707253e670a72a3" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>enableMultipleStrikesCaching</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine_1a2b24515857a6a77a6db09f936dd4519e" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>FdHestonHullWhiteVanillaEngine</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine_1aa80ee3eeb0925f56486cb1daa1eea348" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>FdHestonHullWhiteVanillaEngine</name></member>
      <member refid="class_quant_lib_1_1_generic_model_engine_1ab8c094dbe99234f8aa9dc0a92e0e5fd1" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>GenericModelEngine</name></member>
      <member refid="class_quant_lib_1_1_generic_model_engine_1a8ab246499452beddca7225a2c63f8549" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>GenericModelEngine</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1ad9c6e8dc65ca072d5e6e17640d74db3e" prot="public" virt="virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>getArguments</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1aea8272ef6e5e0ea1cffadfed0454fa88" prot="public" virt="virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>getResults</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine_1a72c89085a2242aa910e9903fbe352618" prot="private" virt="non-virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>hwProcess_</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_generic_model_engine_1a48733a3abfeb33214816709c9c5c6b62" prot="protected" virt="non-virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>model_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1a81c5390ba1e713e57ca87d5f841d37f2" prot="public" virt="virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>reset</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1a41281f2ea4990dbce90be1f9f2e231f6" prot="protected" virt="non-virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>results_</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine_1a34c6f501b8a80fa49b723e1836b43186" prot="private" virt="non-virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>rGrid_</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine_1ac2d39ee1b2d52d38956313e2096a5a21" prot="private" virt="non-virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>schemeDesc_</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine_1ac0f72f94888808777a53066408671914" prot="private" virt="non-virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>strikes_</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine_1a08cb379ed360b1bf0d017499ed215eed" prot="private" virt="non-virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>tGrid_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine_1aef5d89d81a6f4287d37d445bd7b9caf8" prot="public" virt="virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine_1aee970144944916961396abaf89405c35" prot="private" virt="non-virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>vGrid_</name></member>
      <member refid="class_quant_lib_1_1_fd_heston_hull_white_vanilla_engine_1a5bcaa5d2ba36f4b2f9a1484406dd1278" prot="private" virt="non-virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>xGrid_</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_pricing_engine_1a66b279a54578cd7e60d402e5147eb526" prot="public" virt="non-virtual"><scope>QuantLib::FdHestonHullWhiteVanillaEngine</scope><name>~PricingEngine</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

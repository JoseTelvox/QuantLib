<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_end_criteria" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::EndCriteria</compoundname>
    <includes refid="endcriteria_8hpp" local="no">endcriteria.hpp</includes>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_quant_lib_1_1_end_criteria_1aa338799214a20227a4d11a4219b66a66" prot="public" static="no" strong="no">
        <type></type>
        <name>Type</name>
        <qualifiedname>QuantLib::EndCriteria::Type</qualifiedname>
        <enumvalue id="class_quant_lib_1_1_end_criteria_1aa338799214a20227a4d11a4219b66a66af41a6f8c565cac2ac627e6eaca4047b3" prot="public">
          <name>None</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_end_criteria_1aa338799214a20227a4d11a4219b66a66a97f2895132f7056fed2af932086a8207" prot="public">
          <name>MaxIterations</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_end_criteria_1aa338799214a20227a4d11a4219b66a66a68933faf8034d7e4f63aa6742fe9190d" prot="public">
          <name>StationaryPoint</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_end_criteria_1aa338799214a20227a4d11a4219b66a66a8726f3d060ca63730a7b4012876220a7" prot="public">
          <name>StationaryFunctionValue</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_end_criteria_1aa338799214a20227a4d11a4219b66a66ae0bde2f825bc6d0b932b05402f8ead15" prot="public">
          <name>StationaryFunctionAccuracy</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_end_criteria_1aa338799214a20227a4d11a4219b66a66a06ffef2952cc55c9eebc9b93af343002" prot="public">
          <name>ZeroGradientNorm</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_end_criteria_1aa338799214a20227a4d11a4219b66a66a866dcae6f12bc96d3c65a21f0908ac71" prot="public">
          <name>FunctionEpsilonTooSmall</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_end_criteria_1aa338799214a20227a4d11a4219b66a66a6898c6b67b553f6200b98717577abcef" prot="public">
          <name>Unknown</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/endcriteria.hpp" line="42" column="9" bodyfile="ql/math/optimization/endcriteria.hpp" bodystart="42" bodyend="49"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_end_criteria_1a45df85b95f9612d61ed06da275383896" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::EndCriteria::maxIterations_</definition>
        <argsstring></argsstring>
        <name>maxIterations_</name>
        <qualifiedname>QuantLib::EndCriteria::maxIterations_</qualifiedname>
        <briefdescription>
<para>Maximum number of iterations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/endcriteria.hpp" line="102" column="14" bodyfile="ql/math/optimization/endcriteria.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_end_criteria_1ac0b5c1d8823614c758d26716f9aecb80" prot="protected" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::EndCriteria::maxStationaryStateIterations_</definition>
        <argsstring></argsstring>
        <name>maxStationaryStateIterations_</name>
        <qualifiedname>QuantLib::EndCriteria::maxStationaryStateIterations_</qualifiedname>
        <briefdescription>
<para>Maximun number of iterations in stationary state. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/endcriteria.hpp" line="104" column="22" bodyfile="ql/math/optimization/endcriteria.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_end_criteria_1ab411ebb55dc945661d6f5d4609cf4ed2" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::EndCriteria::rootEpsilon_</definition>
        <argsstring></argsstring>
        <name>rootEpsilon_</name>
        <qualifiedname>QuantLib::EndCriteria::rootEpsilon_</qualifiedname>
        <briefdescription>
<para>root, function and gradient epsilons </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/endcriteria.hpp" line="106" column="14" bodyfile="ql/math/optimization/endcriteria.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_end_criteria_1afbda7b6e2638688aa1c824d334774cb3" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::EndCriteria::functionEpsilon_</definition>
        <argsstring></argsstring>
        <name>functionEpsilon_</name>
        <qualifiedname>QuantLib::EndCriteria::functionEpsilon_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/endcriteria.hpp" line="106" column="27" bodyfile="ql/math/optimization/endcriteria.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_end_criteria_1a8d67379c3c74c9cb36c68dc3bcec2bc0" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::EndCriteria::gradientNormEpsilon_</definition>
        <argsstring></argsstring>
        <name>gradientNormEpsilon_</name>
        <qualifiedname>QuantLib::EndCriteria::gradientNormEpsilon_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/endcriteria.hpp" line="106" column="44" bodyfile="ql/math/optimization/endcriteria.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_end_criteria_1ae35a2f1db5ffb5c84f54d2498f3793c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::EndCriteria::EndCriteria</definition>
        <argsstring>(Size maxIterations, Size maxStationaryStateIterations, Real rootEpsilon, Real functionEpsilon, Real gradientNormEpsilon)</argsstring>
        <name>EndCriteria</name>
        <qualifiedname>QuantLib::EndCriteria::EndCriteria</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>maxIterations</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>maxStationaryStateIterations</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>rootEpsilon</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>functionEpsilon</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>gradientNormEpsilon</declname>
        </param>
        <briefdescription>
<para>Initialization constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/endcriteria.hpp" line="52" column="9" bodyfile="ql/math/optimization/endcriteria.cpp" bodystart="29" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_end_criteria_1ac12c06499b53957920ee306ca3d52729" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::EndCriteria::maxIterations</definition>
        <argsstring>() const</argsstring>
        <name>maxIterations</name>
        <qualifiedname>QuantLib::EndCriteria::maxIterations</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/endcriteria.hpp" line="59" column="14" bodyfile="ql/math/optimization/endcriteria.cpp" bodystart="141" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_end_criteria_1a6dcd96d666cd1c0c18197bc434c8e6a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::EndCriteria::maxStationaryStateIterations</definition>
        <argsstring>() const</argsstring>
        <name>maxStationaryStateIterations</name>
        <qualifiedname>QuantLib::EndCriteria::maxStationaryStateIterations</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/endcriteria.hpp" line="60" column="14" bodyfile="ql/math/optimization/endcriteria.cpp" bodystart="145" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_end_criteria_1a3c04ad6197d113845b6e1c2445c8034d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::EndCriteria::rootEpsilon</definition>
        <argsstring>() const</argsstring>
        <name>rootEpsilon</name>
        <qualifiedname>QuantLib::EndCriteria::rootEpsilon</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/endcriteria.hpp" line="61" column="14" bodyfile="ql/math/optimization/endcriteria.cpp" bodystart="149" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_end_criteria_1abfbd5defc2d92ceed24112eedb9f0039" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::EndCriteria::functionEpsilon</definition>
        <argsstring>() const</argsstring>
        <name>functionEpsilon</name>
        <qualifiedname>QuantLib::EndCriteria::functionEpsilon</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/endcriteria.hpp" line="62" column="14" bodyfile="ql/math/optimization/endcriteria.cpp" bodystart="153" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_end_criteria_1aeb9d7ac8a2f3cbc194805518af3d4901" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::EndCriteria::gradientNormEpsilon</definition>
        <argsstring>() const</argsstring>
        <name>gradientNormEpsilon</name>
        <qualifiedname>QuantLib::EndCriteria::gradientNormEpsilon</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/endcriteria.hpp" line="63" column="14" bodyfile="ql/math/optimization/endcriteria.cpp" bodystart="157" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_end_criteria_1adfbdf10d86c6079b2002f18f49ad2b32" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::EndCriteria::operator()</definition>
        <argsstring>(Size iteration, Size &amp;statState, bool positiveOptimization, Real fold, Real normgold, Real fnew, Real normgnew, EndCriteria::Type &amp;ecType) const</argsstring>
        <name>operator()</name>
        <qualifiedname>QuantLib::EndCriteria::operator()</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>iteration</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &amp;</type>
          <declname>statState</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>positiveOptimization</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>fold</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>normgold</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>fnew</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>normgnew</declname>
        </param>
        <param>
          <type>EndCriteria::Type &amp;</type>
          <declname>ecType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test if the number of iterations is not too big and if a minimum point is not reached </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/endcriteria.hpp" line="67" column="14" bodyfile="ql/math/optimization/endcriteria.cpp" bodystart="125" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_end_criteria_1a4fa7ee8e84307e9be5686d86ba61249e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::EndCriteria::checkMaxIterations</definition>
        <argsstring>(Size iteration, EndCriteria::Type &amp;ecType) const</argsstring>
        <name>checkMaxIterations</name>
        <qualifiedname>QuantLib::EndCriteria::checkMaxIterations</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>iteration</declname>
        </param>
        <param>
          <type>EndCriteria::Type &amp;</type>
          <declname>ecType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test if the number of iteration is below MaxIterations </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/endcriteria.hpp" line="77" column="14" bodyfile="ql/math/optimization/endcriteria.cpp" bodystart="56" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_end_criteria_1a3db596f2cbbfe5c8b4861fdd311d6f27" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::EndCriteria::checkStationaryPoint</definition>
        <argsstring>(Real xOld, Real xNew, Size &amp;statStateIterations, EndCriteria::Type &amp;ecType) const</argsstring>
        <name>checkStationaryPoint</name>
        <qualifiedname>QuantLib::EndCriteria::checkStationaryPoint</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>xOld</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>xNew</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &amp;</type>
          <declname>statStateIterations</declname>
        </param>
        <param>
          <type>EndCriteria::Type &amp;</type>
          <declname>ecType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test if the root variation is below rootEpsilon </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/endcriteria.hpp" line="79" column="14" bodyfile="ql/math/optimization/endcriteria.cpp" bodystart="64" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_end_criteria_1aec2fbaaaf0d0a61df24681b7344ce215" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::EndCriteria::checkStationaryFunctionValue</definition>
        <argsstring>(Real fxOld, Real fxNew, Size &amp;statStateIterations, EndCriteria::Type &amp;ecType) const</argsstring>
        <name>checkStationaryFunctionValue</name>
        <qualifiedname>QuantLib::EndCriteria::checkStationaryFunctionValue</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>fxOld</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>fxNew</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &amp;</type>
          <declname>statStateIterations</declname>
        </param>
        <param>
          <type>EndCriteria::Type &amp;</type>
          <declname>ecType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test if the function variation is below functionEpsilon </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/endcriteria.hpp" line="84" column="14" bodyfile="ql/math/optimization/endcriteria.cpp" bodystart="79" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_end_criteria_1ab997db641965b722b8ef4625dcb0d131" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::EndCriteria::checkStationaryFunctionAccuracy</definition>
        <argsstring>(Real f, bool positiveOptimization, EndCriteria::Type &amp;ecType) const</argsstring>
        <name>checkStationaryFunctionAccuracy</name>
        <qualifiedname>QuantLib::EndCriteria::checkStationaryFunctionAccuracy</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>f</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>positiveOptimization</declname>
        </param>
        <param>
          <type>EndCriteria::Type &amp;</type>
          <declname>ecType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test if the function value is below functionEpsilon </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/endcriteria.hpp" line="89" column="14" bodyfile="ql/math/optimization/endcriteria.cpp" bodystart="95" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_end_criteria_1a1760a40e645b466c67f2ee73a41e699f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::EndCriteria::checkZeroGradientNorm</definition>
        <argsstring>(Real gNorm, EndCriteria::Type &amp;ecType) const</argsstring>
        <name>checkZeroGradientNorm</name>
        <qualifiedname>QuantLib::EndCriteria::checkZeroGradientNorm</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>gNorm</declname>
        </param>
        <param>
          <type>EndCriteria::Type &amp;</type>
          <declname>ecType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Test if the gradient norm variation is below gradientNormEpsilon</para>
<para>Test if the gradient norm value is below gradientNormEpsilon </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/endcriteria.hpp" line="97" column="14" bodyfile="ql/math/optimization/endcriteria.cpp" bodystart="117" bodyend="123"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_quant_lib_1_1_end_criteria_1aa6b9cac4c1eec58e78ae6831f868b31b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::EndCriteria::succeeded</definition>
        <argsstring>(EndCriteria::Type ecType)</argsstring>
        <name>succeeded</name>
        <qualifiedname>QuantLib::EndCriteria::succeeded</qualifiedname>
        <param>
          <type>EndCriteria::Type</type>
          <declname>ecType</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/endcriteria.hpp" line="99" column="21" bodyfile="ql/math/optimization/endcriteria.cpp" bodystart="161" bodyend="165"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Criteria to end optimization process: </para>
    </briefdescription>
    <detaileddescription>
<para><itemizedlist>
<listitem><para>maximum number of iterations AND minimum number of iterations around stationary point</para>
</listitem><listitem><para>x (independent variable) stationary point</para>
</listitem><listitem><para>y=f(x) (dependent variable) stationary point</para>
</listitem><listitem><para>stationary gradient </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <location file="ql/math/optimization/endcriteria.hpp" line="40" column="5" bodyfile="ql/math/optimization/endcriteria.hpp" bodystart="40" bodyend="108"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_end_criteria_1a4fa7ee8e84307e9be5686d86ba61249e" prot="public" virt="non-virtual"><scope>QuantLib::EndCriteria</scope><name>checkMaxIterations</name></member>
      <member refid="class_quant_lib_1_1_end_criteria_1ab997db641965b722b8ef4625dcb0d131" prot="public" virt="non-virtual"><scope>QuantLib::EndCriteria</scope><name>checkStationaryFunctionAccuracy</name></member>
      <member refid="class_quant_lib_1_1_end_criteria_1aec2fbaaaf0d0a61df24681b7344ce215" prot="public" virt="non-virtual"><scope>QuantLib::EndCriteria</scope><name>checkStationaryFunctionValue</name></member>
      <member refid="class_quant_lib_1_1_end_criteria_1a3db596f2cbbfe5c8b4861fdd311d6f27" prot="public" virt="non-virtual"><scope>QuantLib::EndCriteria</scope><name>checkStationaryPoint</name></member>
      <member refid="class_quant_lib_1_1_end_criteria_1a1760a40e645b466c67f2ee73a41e699f" prot="public" virt="non-virtual"><scope>QuantLib::EndCriteria</scope><name>checkZeroGradientNorm</name></member>
      <member refid="class_quant_lib_1_1_end_criteria_1ae35a2f1db5ffb5c84f54d2498f3793c8" prot="public" virt="non-virtual"><scope>QuantLib::EndCriteria</scope><name>EndCriteria</name></member>
      <member refid="class_quant_lib_1_1_end_criteria_1abfbd5defc2d92ceed24112eedb9f0039" prot="public" virt="non-virtual"><scope>QuantLib::EndCriteria</scope><name>functionEpsilon</name></member>
      <member refid="class_quant_lib_1_1_end_criteria_1afbda7b6e2638688aa1c824d334774cb3" prot="protected" virt="non-virtual"><scope>QuantLib::EndCriteria</scope><name>functionEpsilon_</name></member>
      <member refid="class_quant_lib_1_1_end_criteria_1aa338799214a20227a4d11a4219b66a66a866dcae6f12bc96d3c65a21f0908ac71" prot="public" virt="non-virtual"><scope>QuantLib::EndCriteria</scope><name>FunctionEpsilonTooSmall</name></member>
      <member refid="class_quant_lib_1_1_end_criteria_1aeb9d7ac8a2f3cbc194805518af3d4901" prot="public" virt="non-virtual"><scope>QuantLib::EndCriteria</scope><name>gradientNormEpsilon</name></member>
      <member refid="class_quant_lib_1_1_end_criteria_1a8d67379c3c74c9cb36c68dc3bcec2bc0" prot="protected" virt="non-virtual"><scope>QuantLib::EndCriteria</scope><name>gradientNormEpsilon_</name></member>
      <member refid="class_quant_lib_1_1_end_criteria_1aa338799214a20227a4d11a4219b66a66a97f2895132f7056fed2af932086a8207" prot="public" virt="non-virtual"><scope>QuantLib::EndCriteria</scope><name>MaxIterations</name></member>
      <member refid="class_quant_lib_1_1_end_criteria_1ac12c06499b53957920ee306ca3d52729" prot="public" virt="non-virtual"><scope>QuantLib::EndCriteria</scope><name>maxIterations</name></member>
      <member refid="class_quant_lib_1_1_end_criteria_1a45df85b95f9612d61ed06da275383896" prot="protected" virt="non-virtual"><scope>QuantLib::EndCriteria</scope><name>maxIterations_</name></member>
      <member refid="class_quant_lib_1_1_end_criteria_1a6dcd96d666cd1c0c18197bc434c8e6a6" prot="public" virt="non-virtual"><scope>QuantLib::EndCriteria</scope><name>maxStationaryStateIterations</name></member>
      <member refid="class_quant_lib_1_1_end_criteria_1ac0b5c1d8823614c758d26716f9aecb80" prot="protected" virt="non-virtual"><scope>QuantLib::EndCriteria</scope><name>maxStationaryStateIterations_</name></member>
      <member refid="class_quant_lib_1_1_end_criteria_1aa338799214a20227a4d11a4219b66a66af41a6f8c565cac2ac627e6eaca4047b3" prot="public" virt="non-virtual"><scope>QuantLib::EndCriteria</scope><name>None</name></member>
      <member refid="class_quant_lib_1_1_end_criteria_1adfbdf10d86c6079b2002f18f49ad2b32" prot="public" virt="non-virtual"><scope>QuantLib::EndCriteria</scope><name>operator()</name></member>
      <member refid="class_quant_lib_1_1_end_criteria_1a3c04ad6197d113845b6e1c2445c8034d" prot="public" virt="non-virtual"><scope>QuantLib::EndCriteria</scope><name>rootEpsilon</name></member>
      <member refid="class_quant_lib_1_1_end_criteria_1ab411ebb55dc945661d6f5d4609cf4ed2" prot="protected" virt="non-virtual"><scope>QuantLib::EndCriteria</scope><name>rootEpsilon_</name></member>
      <member refid="class_quant_lib_1_1_end_criteria_1aa338799214a20227a4d11a4219b66a66ae0bde2f825bc6d0b932b05402f8ead15" prot="public" virt="non-virtual"><scope>QuantLib::EndCriteria</scope><name>StationaryFunctionAccuracy</name></member>
      <member refid="class_quant_lib_1_1_end_criteria_1aa338799214a20227a4d11a4219b66a66a8726f3d060ca63730a7b4012876220a7" prot="public" virt="non-virtual"><scope>QuantLib::EndCriteria</scope><name>StationaryFunctionValue</name></member>
      <member refid="class_quant_lib_1_1_end_criteria_1aa338799214a20227a4d11a4219b66a66a68933faf8034d7e4f63aa6742fe9190d" prot="public" virt="non-virtual"><scope>QuantLib::EndCriteria</scope><name>StationaryPoint</name></member>
      <member refid="class_quant_lib_1_1_end_criteria_1aa6b9cac4c1eec58e78ae6831f868b31b" prot="public" virt="non-virtual"><scope>QuantLib::EndCriteria</scope><name>succeeded</name></member>
      <member refid="class_quant_lib_1_1_end_criteria_1aa338799214a20227a4d11a4219b66a66" prot="public" virt="non-virtual"><scope>QuantLib::EndCriteria</scope><name>Type</name></member>
      <member refid="class_quant_lib_1_1_end_criteria_1aa338799214a20227a4d11a4219b66a66a6898c6b67b553f6200b98717577abcef" prot="public" virt="non-virtual"><scope>QuantLib::EndCriteria</scope><name>Unknown</name></member>
      <member refid="class_quant_lib_1_1_end_criteria_1aa338799214a20227a4d11a4219b66a66a06ffef2952cc55c9eebc9b93af343002" prot="public" virt="non-virtual"><scope>QuantLib::EndCriteria</scope><name>ZeroGradientNorm</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_deng_li_zhou_basket_engine" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::DengLiZhouBasketEngine</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_basket_option_1_1engine" prot="public" virt="non-virtual">QuantLib::BasketOption::engine</basecompoundref>
    <includes refid="denglizhoubasketengine_8hpp" local="no">denglizhoubasketengine.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_deng_li_zhou_basket_engine_1a9845e8465ed50e0134018dc91c425e68" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>const Size QuantLib::DengLiZhouBasketEngine::n_</definition>
        <argsstring></argsstring>
        <name>n_</name>
        <qualifiedname>QuantLib::DengLiZhouBasketEngine::n_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/denglizhoubasketengine.hpp" line="69" column="20" bodyfile="ql/pricingengines/basket/denglizhoubasketengine.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_deng_li_zhou_basket_engine_1a114769351ae2e2f02888587d1ec05d18" prot="private" static="no" mutable="no">
        <type>const std::vector&lt; ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_generalized_black_scholes_process" kindref="compound">GeneralizedBlackScholesProcess</ref> &gt; &gt;</type>
        <definition>const std::vector&lt;ext::shared_ptr&lt;GeneralizedBlackScholesProcess&gt; &gt; QuantLib::DengLiZhouBasketEngine::processes_</definition>
        <argsstring></argsstring>
        <name>processes_</name>
        <qualifiedname>QuantLib::DengLiZhouBasketEngine::processes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/denglizhoubasketengine.hpp" line="70" column="27" bodyfile="ql/pricingengines/basket/denglizhoubasketengine.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_deng_li_zhou_basket_engine_1ad7d65f0eaa744d1b7a3131300932000e" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>const Matrix QuantLib::DengLiZhouBasketEngine::rho_</definition>
        <argsstring></argsstring>
        <name>rho_</name>
        <qualifiedname>QuantLib::DengLiZhouBasketEngine::rho_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/denglizhoubasketengine.hpp" line="71" column="22" bodyfile="ql/pricingengines/basket/denglizhoubasketengine.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_deng_li_zhou_basket_engine_1a6da1db707f100ab5a72e9983deb33fae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::DengLiZhouBasketEngine::DengLiZhouBasketEngine</definition>
        <argsstring>(std::vector&lt; ext::shared_ptr&lt; GeneralizedBlackScholesProcess &gt; &gt; processes, Matrix rho)</argsstring>
        <name>DengLiZhouBasketEngine</name>
        <qualifiedname>QuantLib::DengLiZhouBasketEngine::DengLiZhouBasketEngine</qualifiedname>
        <param>
          <type>std::vector&lt; ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_generalized_black_scholes_process" kindref="compound">GeneralizedBlackScholesProcess</ref> &gt; &gt;</type>
          <declname>processes</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
          <declname>rho</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/denglizhoubasketengine.hpp" line="56" column="9" bodyfile="ql/pricingengines/basket/denglizhoubasketengine.cpp" bodystart="31" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_deng_li_zhou_basket_engine_1a8eb2daa2e7e5c5bf678912f569a68c4d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::DengLiZhouBasketEngine::calculate</definition>
        <argsstring>() const override</argsstring>
        <name>calculate</name>
        <qualifiedname>QuantLib::DengLiZhouBasketEngine::calculate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_pricing_engine_1ad2be11cff80d9792f0cc8231711fcb06">calculate</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/denglizhoubasketengine.hpp" line="60" column="14" bodyfile="ql/pricingengines/basket/denglizhoubasketengine.cpp" bodystart="46" bodyend="180"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_quant_lib_1_1_deng_li_zhou_basket_engine_1a3daca52160afe133c01b0b391b384c24" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::DengLiZhouBasketEngine::calculate_vanilla_call</definition>
        <argsstring>(const Array &amp;s, DiscountFactor dr, const Array &amp;dq, const Array &amp;v, const Matrix &amp;rho, Time T)</argsstring>
        <name>calculate_vanilla_call</name>
        <qualifiedname>QuantLib::DengLiZhouBasketEngine::calculate_vanilla_call</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a05e8e288a4bdedfe5b4e16d8cec14f1c" kindref="member">DiscountFactor</ref></type>
          <declname>dr</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>dq</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>rho</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>T</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/denglizhoubasketengine.hpp" line="63" column="21" bodyfile="ql/pricingengines/basket/denglizhoubasketengine.cpp" bodystart="207" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_deng_li_zhou_basket_engine_1aac2a0f31a5e944eb92100eae7e449c75" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::DengLiZhouBasketEngine::I</definition>
        <argsstring>(Real u, Real tF2, const Matrix &amp;D, const Matrix &amp;DF, Size i)</argsstring>
        <name>I</name>
        <qualifiedname>QuantLib::DengLiZhouBasketEngine::I</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>u</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>tF2</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>D</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>DF</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/basket/denglizhoubasketengine.hpp" line="67" column="21" bodyfile="ql/pricingengines/basket/denglizhoubasketengine.cpp" bodystart="182" bodyend="205"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Pricing engine for basket option on multiple underlyings. </para>
    </briefdescription>
    <detaileddescription>
<para>This class implements the pricing formula from &quot;Multi-asset Spread Option Pricing and Hedging&quot;, S. Deng, M. Li, J.Zhou, 2008 <ulink url="https://mpra.ub.uni-muenchen.de/8259/1/MPRA_paper_8259.pdf">https://mpra.ub.uni-muenchen.de/8259/1/MPRA_paper_8259.pdf</ulink></para>
<para>The typo in formula (37) for J^2 is corrected</para>
<para>This pricing formula only works if exactly one asset weight is positive. If more than one weight is positive then a mapping of the sum of correlated log-normal processes onto one log-normal process has to be carried out. This implementation is using: &quot;WKB Approximation for the Sum of Two Correlated Lognormal Random Variables&quot;, C.F. Lo 2013 <ulink url="https://www.m-hikari.com/ams/ams-2013/ams-125-128-2013/loAMS125-128-2013.pdf">https://www.m-hikari.com/ams/ams-2013/ams-125-128-2013/loAMS125-128-2013.pdf</ulink> for this task.</para>
<para><xrefsect id="test_1_test000111"><xreftitle>Test</xreftitle><xrefdescription><para>the correctness of the returned value is tested by reproducing results available in literature. </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::BasketOption::engine</label>
        <link refid="class_quant_lib_1_1_basket_option_1_1engine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::DengLiZhouBasketEngine</label>
        <link refid="class_quant_lib_1_1_deng_li_zhou_basket_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::GenericEngine&lt; BasketOption::arguments, BasketOption::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_engine"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="4">
        <label>QuantLib::PricingEngine</label>
        <link refid="class_quant_lib_1_1_pricing_engine"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::BasketOption::engine</label>
        <link refid="class_quant_lib_1_1_basket_option_1_1engine"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::DengLiZhouBasketEngine</label>
        <link refid="class_quant_lib_1_1_deng_li_zhou_basket_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::GenericEngine&lt; BasketOption::arguments, BasketOption::results &gt;</label>
        <link refid="class_quant_lib_1_1_generic_engine"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="4">
        <label>QuantLib::PricingEngine</label>
        <link refid="class_quant_lib_1_1_pricing_engine"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/pricingengines/basket/denglizhoubasketengine.hpp" line="54" column="5" bodyfile="ql/pricingengines/basket/denglizhoubasketengine.hpp" bodystart="54" bodyend="72"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_generic_engine_1ad2371cdbafa1989afb0e4733b1212c0d" prot="protected" virt="non-virtual"><scope>QuantLib::DengLiZhouBasketEngine</scope><name>arguments_</name></member>
      <member refid="class_quant_lib_1_1_deng_li_zhou_basket_engine_1a8eb2daa2e7e5c5bf678912f569a68c4d" prot="public" virt="virtual"><scope>QuantLib::DengLiZhouBasketEngine</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_deng_li_zhou_basket_engine_1a3daca52160afe133c01b0b391b384c24" prot="private" virt="non-virtual"><scope>QuantLib::DengLiZhouBasketEngine</scope><name>calculate_vanilla_call</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::DengLiZhouBasketEngine</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_deng_li_zhou_basket_engine_1a6da1db707f100ab5a72e9983deb33fae" prot="public" virt="non-virtual"><scope>QuantLib::DengLiZhouBasketEngine</scope><name>DengLiZhouBasketEngine</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1ad9c6e8dc65ca072d5e6e17640d74db3e" prot="public" virt="virtual"><scope>QuantLib::DengLiZhouBasketEngine</scope><name>getArguments</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1aea8272ef6e5e0ea1cffadfed0454fa88" prot="public" virt="virtual"><scope>QuantLib::DengLiZhouBasketEngine</scope><name>getResults</name></member>
      <member refid="class_quant_lib_1_1_deng_li_zhou_basket_engine_1aac2a0f31a5e944eb92100eae7e449c75" prot="private" virt="non-virtual"><scope>QuantLib::DengLiZhouBasketEngine</scope><name>I</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::DengLiZhouBasketEngine</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_deng_li_zhou_basket_engine_1a9845e8465ed50e0134018dc91c425e68" prot="private" virt="non-virtual"><scope>QuantLib::DengLiZhouBasketEngine</scope><name>n_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::DengLiZhouBasketEngine</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::DengLiZhouBasketEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::DengLiZhouBasketEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::DengLiZhouBasketEngine</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::DengLiZhouBasketEngine</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::DengLiZhouBasketEngine</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::DengLiZhouBasketEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::DengLiZhouBasketEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::DengLiZhouBasketEngine</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_deng_li_zhou_basket_engine_1a114769351ae2e2f02888587d1ec05d18" prot="private" virt="non-virtual"><scope>QuantLib::DengLiZhouBasketEngine</scope><name>processes_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::DengLiZhouBasketEngine</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::DengLiZhouBasketEngine</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1a81c5390ba1e713e57ca87d5f841d37f2" prot="public" virt="virtual"><scope>QuantLib::DengLiZhouBasketEngine</scope><name>reset</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1a41281f2ea4990dbce90be1f9f2e231f6" prot="protected" virt="non-virtual"><scope>QuantLib::DengLiZhouBasketEngine</scope><name>results_</name></member>
      <member refid="class_quant_lib_1_1_deng_li_zhou_basket_engine_1ad7d65f0eaa744d1b7a3131300932000e" prot="private" virt="non-virtual"><scope>QuantLib::DengLiZhouBasketEngine</scope><name>rho_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::DengLiZhouBasketEngine</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::DengLiZhouBasketEngine</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_generic_engine_1aaf5ef54d9e1abf8b1b50b48804edf3dc" prot="public" virt="virtual"><scope>QuantLib::DengLiZhouBasketEngine</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::DengLiZhouBasketEngine</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::DengLiZhouBasketEngine</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_pricing_engine_1a66b279a54578cd7e60d402e5147eb526" prot="public" virt="non-virtual"><scope>QuantLib::DengLiZhouBasketEngine</scope><name>~PricingEngine</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

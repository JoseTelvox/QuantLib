<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_analytic_digital_american_engine" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::AnalyticDigitalAmericanEngine</compoundname>
    <basecompoundref prot="public" virt="non-virtual">VanillaOption::engine</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_analytic_digital_american_k_o_engine" prot="public" virt="non-virtual">QuantLib::AnalyticDigitalAmericanKOEngine</derivedcompoundref>
    <includes refid="analyticdigitalamericanengine_8hpp" local="no">analyticdigitalamericanengine.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_digital_american_engine_1a9135c6e6e72f771e077f08b00d04f152" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_generalized_black_scholes_process" kindref="compound">GeneralizedBlackScholesProcess</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;GeneralizedBlackScholesProcess&gt; QuantLib::AnalyticDigitalAmericanEngine::process_</definition>
        <argsstring></argsstring>
        <name>process_</name>
        <qualifiedname>QuantLib::AnalyticDigitalAmericanEngine::process_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analyticdigitalamericanengine.hpp" line="63" column="25" bodyfile="ql/pricingengines/vanilla/analyticdigitalamericanengine.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_digital_american_engine_1a820fa7279b9b7fa7ebd6c658a899abee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::AnalyticDigitalAmericanEngine::AnalyticDigitalAmericanEngine</definition>
        <argsstring>(ext::shared_ptr&lt; GeneralizedBlackScholesProcess &gt;)</argsstring>
        <name>AnalyticDigitalAmericanEngine</name>
        <qualifiedname>QuantLib::AnalyticDigitalAmericanEngine::AnalyticDigitalAmericanEngine</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_generalized_black_scholes_process" kindref="compound">GeneralizedBlackScholesProcess</ref> &gt;</type>
          <defname>process</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analyticdigitalamericanengine.hpp" line="57" column="9" bodyfile="ql/pricingengines/vanilla/analyticdigitalamericanengine.cpp" bodystart="30" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_digital_american_engine_1a739e88991df9cfb8e5dbdd5a4359c8ba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::AnalyticDigitalAmericanEngine::calculate</definition>
        <argsstring>() const override</argsstring>
        <name>calculate</name>
        <qualifiedname>QuantLib::AnalyticDigitalAmericanEngine::calculate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analyticdigitalamericanengine.hpp" line="58" column="14" bodyfile="ql/pricingengines/vanilla/analyticdigitalamericanengine.cpp" bodystart="36" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_digital_american_engine_1a6123f450a03ba1aef4ea07e100efdf23" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool QuantLib::AnalyticDigitalAmericanEngine::knock_in</definition>
        <argsstring>() const</argsstring>
        <name>knock_in</name>
        <qualifiedname>QuantLib::AnalyticDigitalAmericanEngine::knock_in</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_analytic_digital_american_k_o_engine_1aebf2a844ab8139026ec844b6952bda36">knock_in</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/analyticdigitalamericanengine.hpp" line="59" column="22" bodyfile="ql/pricingengines/vanilla/analyticdigitalamericanengine.hpp" bodystart="59" bodyend="61"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Analytic pricing engine for American vanilla options with digital payoff. </para>
    </briefdescription>
    <detaileddescription>
<para><xrefsect id="todo_1_todo000064"><xreftitle>Todo</xreftitle><xrefdescription><para>add more greeks (as of now only delta and rho available)</para>
</xrefdescription></xrefsect></para>
<para><xrefsect id="test_1_test000137"><xreftitle>Test</xreftitle><xrefdescription><para><itemizedlist>
<listitem><para>the correctness of the returned value in case of cash-or-nothing at-hit digital payoff is tested by reproducing results available in literature.</para>
</listitem><listitem><para>the correctness of the returned value in case of asset-or-nothing at-hit digital payoff is tested by reproducing results available in literature.</para>
</listitem><listitem><para>the correctness of the returned value in case of cash-or-nothing at-expiry digital payoff is tested by reproducing results available in literature.</para>
</listitem><listitem><para>the correctness of the returned value in case of asset-or-nothing at-expiry digital payoff is tested by reproducing results available in literature.</para>
</listitem><listitem><para>the correctness of the returned greeks in case of cash-or-nothing at-hit digital payoff is tested by reproducing numerical derivatives. </para>
</listitem></itemizedlist>
</para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::AnalyticDigitalAmericanEngine</label>
        <link refid="class_quant_lib_1_1_analytic_digital_american_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::AnalyticDigitalAmericanKOEngine</label>
        <link refid="class_quant_lib_1_1_analytic_digital_american_k_o_engine"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>VanillaOption::engine</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::AnalyticDigitalAmericanEngine</label>
        <link refid="class_quant_lib_1_1_analytic_digital_american_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>VanillaOption::engine</label>
      </node>
    </collaborationgraph>
    <location file="ql/pricingengines/vanilla/analyticdigitalamericanengine.hpp" line="55" column="5" bodyfile="ql/pricingengines/vanilla/analyticdigitalamericanengine.hpp" bodystart="55" bodyend="64"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_analytic_digital_american_engine_1a820fa7279b9b7fa7ebd6c658a899abee" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticDigitalAmericanEngine</scope><name>AnalyticDigitalAmericanEngine</name></member>
      <member refid="class_quant_lib_1_1_analytic_digital_american_engine_1a739e88991df9cfb8e5dbdd5a4359c8ba" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticDigitalAmericanEngine</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_analytic_digital_american_engine_1a6123f450a03ba1aef4ea07e100efdf23" prot="public" virt="virtual"><scope>QuantLib::AnalyticDigitalAmericanEngine</scope><name>knock_in</name></member>
      <member refid="class_quant_lib_1_1_analytic_digital_american_engine_1a9135c6e6e72f771e077f08b00d04f152" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticDigitalAmericanEngine</scope><name>process_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_log_normal_fwd_rate_pc" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::LogNormalFwdRatePc</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_market_model_evolver" prot="public" virt="non-virtual">QuantLib::MarketModelEvolver</basecompoundref>
    <includes refid="lognormalfwdratepc_8hpp" local="no">lognormalfwdratepc.hpp</includes>
    <sectiondef kind="user-defined">
      <header>MarketModel interface</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_log_normal_fwd_rate_pc_1a794251e494b5c28c5ca05d9f8f79cc37" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_market_model" kindref="compound">MarketModel</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;MarketModel&gt; QuantLib::LogNormalFwdRatePc::marketModel_</definition>
        <argsstring></argsstring>
        <name>marketModel_</name>
        <qualifiedname>QuantLib::LogNormalFwdRatePc::marketModel_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" line="53" column="25" bodyfile="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_log_normal_fwd_rate_pc_1af5151d2a41f82970e2f3b8d56b9b2102" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &gt;</type>
        <definition>std::vector&lt;Size&gt; QuantLib::LogNormalFwdRatePc::numeraires_</definition>
        <argsstring></argsstring>
        <name>numeraires_</name>
        <qualifiedname>QuantLib::LogNormalFwdRatePc::numeraires_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" line="54" column="21" bodyfile="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_log_normal_fwd_rate_pc_1a8a51e8264192d293fa4417535b010cbf" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::LogNormalFwdRatePc::initialStep_</definition>
        <argsstring></argsstring>
        <name>initialStep_</name>
        <qualifiedname>QuantLib::LogNormalFwdRatePc::initialStep_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" line="55" column="14" bodyfile="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_log_normal_fwd_rate_pc_1a4280f59346fbee8c1d2e87846c009c2a" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_brownian_generator" kindref="compound">BrownianGenerator</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;BrownianGenerator&gt; QuantLib::LogNormalFwdRatePc::generator_</definition>
        <argsstring></argsstring>
        <name>generator_</name>
        <qualifiedname>QuantLib::LogNormalFwdRatePc::generator_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" line="56" column="25" bodyfile="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_log_normal_fwd_rate_pc_1ac1ca373f5a1627ad5cd12c0f2bcaf187" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;Real&gt; &gt; QuantLib::LogNormalFwdRatePc::fixedDrifts_</definition>
        <argsstring></argsstring>
        <name>fixedDrifts_</name>
        <qualifiedname>QuantLib::LogNormalFwdRatePc::fixedDrifts_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" line="58" column="21" bodyfile="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_log_normal_fwd_rate_pc_1adbd884350cb0714b0df79822cf94d055" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::LogNormalFwdRatePc::numberOfRates_</definition>
        <argsstring></argsstring>
        <name>numberOfRates_</name>
        <qualifiedname>QuantLib::LogNormalFwdRatePc::numberOfRates_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" line="60" column="14" bodyfile="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_log_normal_fwd_rate_pc_1ae47b068ae28cf3cf127d645a9d862e4d" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::LogNormalFwdRatePc::numberOfFactors_</definition>
        <argsstring></argsstring>
        <name>numberOfFactors_</name>
        <qualifiedname>QuantLib::LogNormalFwdRatePc::numberOfFactors_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" line="60" column="29" bodyfile="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_log_normal_fwd_rate_pc_1a42d0223228ec6678ae256bb5c36597d1" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_l_m_m_curve_state" kindref="compound">LMMCurveState</ref></type>
        <definition>LMMCurveState QuantLib::LogNormalFwdRatePc::curveState_</definition>
        <argsstring></argsstring>
        <name>curveState_</name>
        <qualifiedname>QuantLib::LogNormalFwdRatePc::curveState_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" line="61" column="23" bodyfile="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_log_normal_fwd_rate_pc_1aaaa5f148488141583542cbb07ec35480" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::LogNormalFwdRatePc::currentStep_</definition>
        <argsstring></argsstring>
        <name>currentStep_</name>
        <qualifiedname>QuantLib::LogNormalFwdRatePc::currentStep_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" line="62" column="14" bodyfile="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_log_normal_fwd_rate_pc_1a46325c1a39f1ac8b0c7b237ad4c125ca" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>std::vector&lt;Rate&gt; QuantLib::LogNormalFwdRatePc::forwards_</definition>
        <argsstring></argsstring>
        <name>forwards_</name>
        <qualifiedname>QuantLib::LogNormalFwdRatePc::forwards_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" line="63" column="21" bodyfile="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_log_normal_fwd_rate_pc_1abb5e6a08089ca07f891d5de92d4dc00a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>std::vector&lt;Rate&gt; QuantLib::LogNormalFwdRatePc::displacements_</definition>
        <argsstring></argsstring>
        <name>displacements_</name>
        <qualifiedname>QuantLib::LogNormalFwdRatePc::displacements_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" line="63" column="31" bodyfile="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_log_normal_fwd_rate_pc_1a66f2815b42b5b2045e429f8b1b3202d0" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>std::vector&lt;Rate&gt; QuantLib::LogNormalFwdRatePc::logForwards_</definition>
        <argsstring></argsstring>
        <name>logForwards_</name>
        <qualifiedname>QuantLib::LogNormalFwdRatePc::logForwards_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" line="63" column="46" bodyfile="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_log_normal_fwd_rate_pc_1ab42fa3176abb011a4b0ec4922f0f3815" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>std::vector&lt;Rate&gt; QuantLib::LogNormalFwdRatePc::initialLogForwards_</definition>
        <argsstring></argsstring>
        <name>initialLogForwards_</name>
        <qualifiedname>QuantLib::LogNormalFwdRatePc::initialLogForwards_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" line="63" column="59" bodyfile="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_log_normal_fwd_rate_pc_1a08c2d51684294d0b57489a0baed3b27b" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::LogNormalFwdRatePc::drifts1_</definition>
        <argsstring></argsstring>
        <name>drifts1_</name>
        <qualifiedname>QuantLib::LogNormalFwdRatePc::drifts1_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" line="64" column="21" bodyfile="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_log_normal_fwd_rate_pc_1ac44478925502a50700779c7511577b7d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::LogNormalFwdRatePc::drifts2_</definition>
        <argsstring></argsstring>
        <name>drifts2_</name>
        <qualifiedname>QuantLib::LogNormalFwdRatePc::drifts2_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" line="64" column="30" bodyfile="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_log_normal_fwd_rate_pc_1af8deabd974f446f4ee76cbe688ad5da1" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::LogNormalFwdRatePc::initialDrifts_</definition>
        <argsstring></argsstring>
        <name>initialDrifts_</name>
        <qualifiedname>QuantLib::LogNormalFwdRatePc::initialDrifts_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" line="64" column="39" bodyfile="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_log_normal_fwd_rate_pc_1aecd9f28cc2787fbfa1643314bea05b13" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::LogNormalFwdRatePc::brownians_</definition>
        <argsstring></argsstring>
        <name>brownians_</name>
        <qualifiedname>QuantLib::LogNormalFwdRatePc::brownians_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" line="65" column="21" bodyfile="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_log_normal_fwd_rate_pc_1a3d8f03c1f266acc753388548ec967981" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::LogNormalFwdRatePc::correlatedBrownians_</definition>
        <argsstring></argsstring>
        <name>correlatedBrownians_</name>
        <qualifiedname>QuantLib::LogNormalFwdRatePc::correlatedBrownians_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" line="65" column="32" bodyfile="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_log_normal_fwd_rate_pc_1a9ee939ff514c93a6487a70c4c98bfa06" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &gt;</type>
        <definition>std::vector&lt;Size&gt; QuantLib::LogNormalFwdRatePc::alive_</definition>
        <argsstring></argsstring>
        <name>alive_</name>
        <qualifiedname>QuantLib::LogNormalFwdRatePc::alive_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" line="66" column="21" bodyfile="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_log_normal_fwd_rate_pc_1a28adcb046c47ee0eea3a4a6ed13f8ea7" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_quant_lib_1_1_l_m_m_drift_calculator" kindref="compound">LMMDriftCalculator</ref> &gt;</type>
        <definition>std::vector&lt;LMMDriftCalculator&gt; QuantLib::LogNormalFwdRatePc::calculators_</definition>
        <argsstring></argsstring>
        <name>calculators_</name>
        <qualifiedname>QuantLib::LogNormalFwdRatePc::calculators_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" line="68" column="21" bodyfile="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_log_normal_fwd_rate_pc_1a9c88bb3bce577ec020969a04ca43004a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const std::vector&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; Size &gt; &amp; QuantLib::LogNormalFwdRatePc::numeraires</definition>
        <argsstring>() const override</argsstring>
        <name>numeraires</name>
        <qualifiedname>QuantLib::LogNormalFwdRatePc::numeraires</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_market_model_evolver_1a2e1bd04073ea86eaaba5dce33054a8f3">numeraires</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" line="43" column="27" bodyfile="ql/models/marketmodels/evolvers/lognormalfwdratepc.cpp" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_log_normal_fwd_rate_pc_1a300b75a855cb105f65102bee3b63fe6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::LogNormalFwdRatePc::startNewPath</definition>
        <argsstring>() override</argsstring>
        <name>startNewPath</name>
        <qualifiedname>QuantLib::LogNormalFwdRatePc::startNewPath</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_market_model_evolver_1ac3e6d22e472d5c1c895d8f96be60560b">startNewPath</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" line="44" column="14" bodyfile="ql/models/marketmodels/evolvers/lognormalfwdratepc.cpp" bodystart="93" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_log_normal_fwd_rate_pc_1a3c4658a921bb33a39e91974f7444b923" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::LogNormalFwdRatePc::advanceStep</definition>
        <argsstring>() override</argsstring>
        <name>advanceStep</name>
        <qualifiedname>QuantLib::LogNormalFwdRatePc::advanceStep</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_market_model_evolver_1a90dd9c52516481852ab41fac2ff1f8ed">advanceStep</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" line="45" column="14" bodyfile="ql/models/marketmodels/evolvers/lognormalfwdratepc.cpp" bodystart="100" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_log_normal_fwd_rate_pc_1a0b6beb1ceeb64b410143aa68018edb50" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::LogNormalFwdRatePc::currentStep</definition>
        <argsstring>() const override</argsstring>
        <name>currentStep</name>
        <qualifiedname>QuantLib::LogNormalFwdRatePc::currentStep</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_market_model_evolver_1a2be55f5ae47935053388065c4585d6ee">currentStep</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" line="46" column="14" bodyfile="ql/models/marketmodels/evolvers/lognormalfwdratepc.cpp" bodystart="143" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_log_normal_fwd_rate_pc_1adde6bc328142e19a3534cee2101b226d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>const <ref refid="class_quant_lib_1_1_curve_state" kindref="compound">CurveState</ref> &amp;</type>
        <definition>const CurveState &amp; QuantLib::LogNormalFwdRatePc::currentState</definition>
        <argsstring>() const override</argsstring>
        <name>currentState</name>
        <qualifiedname>QuantLib::LogNormalFwdRatePc::currentState</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_market_model_evolver_1a85322ec6252a5431b2fa141f3fc4f976">currentState</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" line="47" column="26" bodyfile="ql/models/marketmodels/evolvers/lognormalfwdratepc.cpp" bodystart="147" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_log_normal_fwd_rate_pc_1aa4d85163613ad90f8cd5132baf15f47a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::LogNormalFwdRatePc::setInitialState</definition>
        <argsstring>(const CurveState &amp;) override</argsstring>
        <name>setInitialState</name>
        <qualifiedname>QuantLib::LogNormalFwdRatePc::setInitialState</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_market_model_evolver_1a2252b21184f50dfd1c405ea8c156032f">setInitialState</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_curve_state" kindref="compound">CurveState</ref> &amp;</type>
          <defname>cs</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" line="48" column="14" bodyfile="ql/models/marketmodels/evolvers/lognormalfwdratepc.cpp" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_log_normal_fwd_rate_pc_1ad982602ea72739f8f030ce0b5f8fa908" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::LogNormalFwdRatePc::setForwards</definition>
        <argsstring>(const std::vector&lt; Real &gt; &amp;forwards)</argsstring>
        <name>setForwards</name>
        <qualifiedname>QuantLib::LogNormalFwdRatePc::setForwards</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>forwards</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" line="51" column="14" bodyfile="ql/models/marketmodels/evolvers/lognormalfwdratepc.cpp" bodystart="79" bodyend="87"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_log_normal_fwd_rate_pc_1ac09ccd3fcbda052a893c93d32c2f166f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::LogNormalFwdRatePc::LogNormalFwdRatePc</definition>
        <argsstring>(const ext::shared_ptr&lt; MarketModel &gt; &amp;, const BrownianGeneratorFactory &amp;, const std::vector&lt; Size &gt; &amp;numeraires, Size initialStep=0)</argsstring>
        <name>LogNormalFwdRatePc</name>
        <qualifiedname>QuantLib::LogNormalFwdRatePc::LogNormalFwdRatePc</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_market_model" kindref="compound">MarketModel</ref> &gt; &amp;</type>
          <defname>marketModel</defname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_brownian_generator_factory" kindref="compound">BrownianGeneratorFactory</ref> &amp;</type>
          <defname>factory</defname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &gt; &amp;</type>
          <declname>numeraires</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>initialStep</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" line="37" column="9" bodyfile="ql/models/marketmodels/evolvers/lognormalfwdratepc.cpp" bodystart="29" bodyend="73"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Predictor-Corrector. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::LogNormalFwdRatePc</label>
        <link refid="class_quant_lib_1_1_log_normal_fwd_rate_pc"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::MarketModelEvolver</label>
        <link refid="class_quant_lib_1_1_market_model_evolver"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::LogNormalFwdRatePc</label>
        <link refid="class_quant_lib_1_1_log_normal_fwd_rate_pc"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::MarketModelEvolver</label>
        <link refid="class_quant_lib_1_1_market_model_evolver"/>
      </node>
    </collaborationgraph>
    <location file="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" line="35" column="5" bodyfile="ql/models/marketmodels/evolvers/lognormalfwdratepc.hpp" bodystart="35" bodyend="69"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_log_normal_fwd_rate_pc_1a3c4658a921bb33a39e91974f7444b923" prot="public" virt="virtual"><scope>QuantLib::LogNormalFwdRatePc</scope><name>advanceStep</name></member>
      <member refid="class_quant_lib_1_1_log_normal_fwd_rate_pc_1a9ee939ff514c93a6487a70c4c98bfa06" prot="private" virt="non-virtual"><scope>QuantLib::LogNormalFwdRatePc</scope><name>alive_</name></member>
      <member refid="class_quant_lib_1_1_log_normal_fwd_rate_pc_1aecd9f28cc2787fbfa1643314bea05b13" prot="private" virt="non-virtual"><scope>QuantLib::LogNormalFwdRatePc</scope><name>brownians_</name></member>
      <member refid="class_quant_lib_1_1_log_normal_fwd_rate_pc_1a28adcb046c47ee0eea3a4a6ed13f8ea7" prot="private" virt="non-virtual"><scope>QuantLib::LogNormalFwdRatePc</scope><name>calculators_</name></member>
      <member refid="class_quant_lib_1_1_log_normal_fwd_rate_pc_1a3d8f03c1f266acc753388548ec967981" prot="private" virt="non-virtual"><scope>QuantLib::LogNormalFwdRatePc</scope><name>correlatedBrownians_</name></member>
      <member refid="class_quant_lib_1_1_log_normal_fwd_rate_pc_1adde6bc328142e19a3534cee2101b226d" prot="public" virt="virtual"><scope>QuantLib::LogNormalFwdRatePc</scope><name>currentState</name></member>
      <member refid="class_quant_lib_1_1_log_normal_fwd_rate_pc_1a0b6beb1ceeb64b410143aa68018edb50" prot="public" virt="virtual"><scope>QuantLib::LogNormalFwdRatePc</scope><name>currentStep</name></member>
      <member refid="class_quant_lib_1_1_log_normal_fwd_rate_pc_1aaaa5f148488141583542cbb07ec35480" prot="private" virt="non-virtual"><scope>QuantLib::LogNormalFwdRatePc</scope><name>currentStep_</name></member>
      <member refid="class_quant_lib_1_1_log_normal_fwd_rate_pc_1a42d0223228ec6678ae256bb5c36597d1" prot="private" virt="non-virtual"><scope>QuantLib::LogNormalFwdRatePc</scope><name>curveState_</name></member>
      <member refid="class_quant_lib_1_1_log_normal_fwd_rate_pc_1abb5e6a08089ca07f891d5de92d4dc00a" prot="private" virt="non-virtual"><scope>QuantLib::LogNormalFwdRatePc</scope><name>displacements_</name></member>
      <member refid="class_quant_lib_1_1_log_normal_fwd_rate_pc_1a08c2d51684294d0b57489a0baed3b27b" prot="private" virt="non-virtual"><scope>QuantLib::LogNormalFwdRatePc</scope><name>drifts1_</name></member>
      <member refid="class_quant_lib_1_1_log_normal_fwd_rate_pc_1ac44478925502a50700779c7511577b7d" prot="private" virt="non-virtual"><scope>QuantLib::LogNormalFwdRatePc</scope><name>drifts2_</name></member>
      <member refid="class_quant_lib_1_1_log_normal_fwd_rate_pc_1ac1ca373f5a1627ad5cd12c0f2bcaf187" prot="private" virt="non-virtual"><scope>QuantLib::LogNormalFwdRatePc</scope><name>fixedDrifts_</name></member>
      <member refid="class_quant_lib_1_1_log_normal_fwd_rate_pc_1a46325c1a39f1ac8b0c7b237ad4c125ca" prot="private" virt="non-virtual"><scope>QuantLib::LogNormalFwdRatePc</scope><name>forwards_</name></member>
      <member refid="class_quant_lib_1_1_log_normal_fwd_rate_pc_1a4280f59346fbee8c1d2e87846c009c2a" prot="private" virt="non-virtual"><scope>QuantLib::LogNormalFwdRatePc</scope><name>generator_</name></member>
      <member refid="class_quant_lib_1_1_log_normal_fwd_rate_pc_1af8deabd974f446f4ee76cbe688ad5da1" prot="private" virt="non-virtual"><scope>QuantLib::LogNormalFwdRatePc</scope><name>initialDrifts_</name></member>
      <member refid="class_quant_lib_1_1_log_normal_fwd_rate_pc_1ab42fa3176abb011a4b0ec4922f0f3815" prot="private" virt="non-virtual"><scope>QuantLib::LogNormalFwdRatePc</scope><name>initialLogForwards_</name></member>
      <member refid="class_quant_lib_1_1_log_normal_fwd_rate_pc_1a8a51e8264192d293fa4417535b010cbf" prot="private" virt="non-virtual"><scope>QuantLib::LogNormalFwdRatePc</scope><name>initialStep_</name></member>
      <member refid="class_quant_lib_1_1_log_normal_fwd_rate_pc_1a66f2815b42b5b2045e429f8b1b3202d0" prot="private" virt="non-virtual"><scope>QuantLib::LogNormalFwdRatePc</scope><name>logForwards_</name></member>
      <member refid="class_quant_lib_1_1_log_normal_fwd_rate_pc_1ac09ccd3fcbda052a893c93d32c2f166f" prot="public" virt="non-virtual"><scope>QuantLib::LogNormalFwdRatePc</scope><name>LogNormalFwdRatePc</name></member>
      <member refid="class_quant_lib_1_1_log_normal_fwd_rate_pc_1a794251e494b5c28c5ca05d9f8f79cc37" prot="private" virt="non-virtual"><scope>QuantLib::LogNormalFwdRatePc</scope><name>marketModel_</name></member>
      <member refid="class_quant_lib_1_1_log_normal_fwd_rate_pc_1ae47b068ae28cf3cf127d645a9d862e4d" prot="private" virt="non-virtual"><scope>QuantLib::LogNormalFwdRatePc</scope><name>numberOfFactors_</name></member>
      <member refid="class_quant_lib_1_1_log_normal_fwd_rate_pc_1adbd884350cb0714b0df79822cf94d055" prot="private" virt="non-virtual"><scope>QuantLib::LogNormalFwdRatePc</scope><name>numberOfRates_</name></member>
      <member refid="class_quant_lib_1_1_log_normal_fwd_rate_pc_1a9c88bb3bce577ec020969a04ca43004a" prot="public" virt="virtual"><scope>QuantLib::LogNormalFwdRatePc</scope><name>numeraires</name></member>
      <member refid="class_quant_lib_1_1_log_normal_fwd_rate_pc_1af5151d2a41f82970e2f3b8d56b9b2102" prot="private" virt="non-virtual"><scope>QuantLib::LogNormalFwdRatePc</scope><name>numeraires_</name></member>
      <member refid="class_quant_lib_1_1_log_normal_fwd_rate_pc_1ad982602ea72739f8f030ce0b5f8fa908" prot="private" virt="non-virtual"><scope>QuantLib::LogNormalFwdRatePc</scope><name>setForwards</name></member>
      <member refid="class_quant_lib_1_1_log_normal_fwd_rate_pc_1aa4d85163613ad90f8cd5132baf15f47a" prot="public" virt="virtual"><scope>QuantLib::LogNormalFwdRatePc</scope><name>setInitialState</name></member>
      <member refid="class_quant_lib_1_1_log_normal_fwd_rate_pc_1a300b75a855cb105f65102bee3b63fe6d" prot="public" virt="virtual"><scope>QuantLib::LogNormalFwdRatePc</scope><name>startNewPath</name></member>
      <member refid="class_quant_lib_1_1_market_model_evolver_1a782e4b9aa708219798ec7a83de8bd84c" prot="public" virt="virtual"><scope>QuantLib::LogNormalFwdRatePc</scope><name>~MarketModelEvolver</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

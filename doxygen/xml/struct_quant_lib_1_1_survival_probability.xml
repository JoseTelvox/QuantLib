<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="struct_quant_lib_1_1_survival_probability" kind="struct" language="C++" prot="public">
    <compoundname>QuantLib::SurvivalProbability</compoundname>
    <includes refid="probabilitytraits_8hpp" local="no">probabilitytraits.hpp</includes>
    <innerclass refid="struct_quant_lib_1_1_survival_probability_1_1curve" prot="public">QuantLib::SurvivalProbability::curve</innerclass>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_quant_lib_1_1_survival_probability_1a1fac1cbdd6fc87e5e9a3cd024be633aa" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1_bootstrap_helper" kindref="compound">BootstrapHelper</ref>&lt; <ref refid="class_quant_lib_1_1_default_probability_term_structure" kindref="compound">DefaultProbabilityTermStructure</ref> &gt;</type>
        <definition>typedef BootstrapHelper&lt;DefaultProbabilityTermStructure&gt; QuantLib::SurvivalProbability::helper</definition>
        <argsstring></argsstring>
        <name>helper</name>
        <qualifiedname>QuantLib::SurvivalProbability::helper</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/credit/probabilitytraits.hpp" line="51" column="33" bodyfile="ql/termstructures/credit/probabilitytraits.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_quant_lib_1_1_survival_probability_1afd8cdc028a2c9e13800c5d01568f91aa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>static Date QuantLib::SurvivalProbability::initialDate</definition>
        <argsstring>(const DefaultProbabilityTermStructure *c)</argsstring>
        <name>initialDate</name>
        <qualifiedname>QuantLib::SurvivalProbability::initialDate</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_default_probability_term_structure" kindref="compound">DefaultProbabilityTermStructure</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/credit/probabilitytraits.hpp" line="54" column="21" bodyfile="ql/termstructures/credit/probabilitytraits.hpp" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1_survival_probability_1a9d9835281be91ce96dcb09368ba39b9c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>static Real QuantLib::SurvivalProbability::initialValue</definition>
        <argsstring>(const DefaultProbabilityTermStructure *)</argsstring>
        <name>initialValue</name>
        <qualifiedname>QuantLib::SurvivalProbability::initialValue</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_default_probability_term_structure" kindref="compound">DefaultProbabilityTermStructure</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/credit/probabilitytraits.hpp" line="58" column="21" bodyfile="ql/termstructures/credit/probabilitytraits.hpp" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1_survival_probability_1ae5fcf53e4afb45e818898c0ac7ba3b9f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class C</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>static Real QuantLib::SurvivalProbability::guess</definition>
        <argsstring>(Size i, const C *c, bool validData, Size)</argsstring>
        <name>guess</name>
        <qualifiedname>QuantLib::SurvivalProbability::guess</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>const C *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>validData</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/credit/probabilitytraits.hpp" line="64" column="21" bodyfile="ql/termstructures/credit/probabilitytraits.hpp" bodystart="64" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1_survival_probability_1ae2f2f03c8bc84f82868935b618922ca4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class C</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>static Real QuantLib::SurvivalProbability::minValueAfter</definition>
        <argsstring>(Size i, const C *c, bool validData, Size)</argsstring>
        <name>minValueAfter</name>
        <qualifiedname>QuantLib::SurvivalProbability::minValueAfter</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>const C *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>validData</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/credit/probabilitytraits.hpp" line="81" column="21" bodyfile="ql/termstructures/credit/probabilitytraits.hpp" bodystart="81" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1_survival_probability_1aa4261feb3d339ef7fa3dd413578c0150" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class C</type>
          </param>
        </templateparamlist>
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>static Real QuantLib::SurvivalProbability::maxValueAfter</definition>
        <argsstring>(Size i, const C *c, bool validData, Size)</argsstring>
        <name>maxValueAfter</name>
        <qualifiedname>QuantLib::SurvivalProbability::maxValueAfter</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>const C *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>validData</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/credit/probabilitytraits.hpp" line="93" column="21" bodyfile="ql/termstructures/credit/probabilitytraits.hpp" bodystart="93" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1_survival_probability_1aee3c6f2637ff305a9b1d2d0ed14f1840" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void QuantLib::SurvivalProbability::updateGuess</definition>
        <argsstring>(std::vector&lt; Real &gt; &amp;data, Probability p, Size i)</argsstring>
        <name>updateGuess</name>
        <qualifiedname>QuantLib::SurvivalProbability::updateGuess</qualifiedname>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ac41728dd3be3e1869bbb9aec06a89d60" kindref="member">Probability</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/credit/probabilitytraits.hpp" line="103" column="21" bodyfile="ql/termstructures/credit/probabilitytraits.hpp" bodystart="103" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1_survival_probability_1afead4139401e45cda96d5e188c712381" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>static Size QuantLib::SurvivalProbability::maxIterations</definition>
        <argsstring>()</argsstring>
        <name>maxIterations</name>
        <qualifiedname>QuantLib::SurvivalProbability::maxIterations</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/credit/probabilitytraits.hpp" line="109" column="21" bodyfile="ql/termstructures/credit/probabilitytraits.hpp" bodystart="109" bodyend="109"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Survival-Probability-curve traits. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/termstructures/credit/probabilitytraits.hpp" line="44" column="5" bodyfile="ql/termstructures/credit/probabilitytraits.hpp" bodystart="44" bodyend="110"/>
    <listofallmembers>
      <member refid="struct_quant_lib_1_1_survival_probability_1ae5fcf53e4afb45e818898c0ac7ba3b9f" prot="public" virt="non-virtual"><scope>QuantLib::SurvivalProbability</scope><name>guess</name></member>
      <member refid="struct_quant_lib_1_1_survival_probability_1a1fac1cbdd6fc87e5e9a3cd024be633aa" prot="public" virt="non-virtual"><scope>QuantLib::SurvivalProbability</scope><name>helper</name></member>
      <member refid="struct_quant_lib_1_1_survival_probability_1afd8cdc028a2c9e13800c5d01568f91aa" prot="public" virt="non-virtual"><scope>QuantLib::SurvivalProbability</scope><name>initialDate</name></member>
      <member refid="struct_quant_lib_1_1_survival_probability_1a9d9835281be91ce96dcb09368ba39b9c" prot="public" virt="non-virtual"><scope>QuantLib::SurvivalProbability</scope><name>initialValue</name></member>
      <member refid="struct_quant_lib_1_1_survival_probability_1afead4139401e45cda96d5e188c712381" prot="public" virt="non-virtual"><scope>QuantLib::SurvivalProbability</scope><name>maxIterations</name></member>
      <member refid="struct_quant_lib_1_1_survival_probability_1aa4261feb3d339ef7fa3dd413578c0150" prot="public" virt="non-virtual"><scope>QuantLib::SurvivalProbability</scope><name>maxValueAfter</name></member>
      <member refid="struct_quant_lib_1_1_survival_probability_1ae2f2f03c8bc84f82868935b618922ca4" prot="public" virt="non-virtual"><scope>QuantLib::SurvivalProbability</scope><name>minValueAfter</name></member>
      <member refid="struct_quant_lib_1_1_survival_probability_1aee3c6f2637ff305a9b1d2d0ed14f1840" prot="public" virt="non-virtual"><scope>QuantLib::SurvivalProbability</scope><name>updateGuess</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_simple_quote_variables" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::SimpleQuoteVariables</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_additional_bootstrap_variables" prot="public" virt="non-virtual">QuantLib::AdditionalBootstrapVariables</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_simple_quote_variables_1a03e7292a8241096d0c46023b1f9c57be" prot="private" static="no" mutable="no">
        <type>std::vector&lt; ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_simple_quote" kindref="compound">SimpleQuote</ref> &gt; &gt;</type>
        <definition>std::vector&lt;ext::shared_ptr&lt;SimpleQuote&gt; &gt; QuantLib::SimpleQuoteVariables::quotes_</definition>
        <argsstring></argsstring>
        <name>quotes_</name>
        <qualifiedname>QuantLib::SimpleQuoteVariables::quotes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/globalbootstrapvars.hpp" line="26" column="17" bodyfile="ql/termstructures/globalbootstrapvars.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_simple_quote_variables_1aae6823a7308d9fc7445147f1f9b8f6a0" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::SimpleQuoteVariables::initialGuesses_</definition>
        <argsstring></argsstring>
        <name>initialGuesses_</name>
        <qualifiedname>QuantLib::SimpleQuoteVariables::initialGuesses_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/globalbootstrapvars.hpp" line="27" column="17" bodyfile="ql/termstructures/globalbootstrapvars.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_simple_quote_variables_1a39e370a8eb39927fd951ea0f59436bf8" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::SimpleQuoteVariables::lowerBounds_</definition>
        <argsstring></argsstring>
        <name>lowerBounds_</name>
        <qualifiedname>QuantLib::SimpleQuoteVariables::lowerBounds_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/globalbootstrapvars.hpp" line="27" column="33" bodyfile="ql/termstructures/globalbootstrapvars.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_simple_quote_variables_1a6ea56b6d508b45469ab73c132cc27712" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::SimpleQuoteVariables::SimpleQuoteVariables</definition>
        <argsstring>(std::vector&lt; ext::shared_ptr&lt; SimpleQuote &gt; &gt; quotes, std::vector&lt; Real &gt; initialGuesses={}, std::vector&lt; Real &gt; lowerBounds={})</argsstring>
        <name>SimpleQuoteVariables</name>
        <qualifiedname>QuantLib::SimpleQuoteVariables::SimpleQuoteVariables</qualifiedname>
        <param>
          <type>std::vector&lt; ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_simple_quote" kindref="compound">SimpleQuote</ref> &gt; &gt;</type>
          <declname>quotes</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
          <declname>initialGuesses</declname>
          <defval>{}</defval>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
          <declname>lowerBounds</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/globalbootstrapvars.hpp" line="14" column="14" bodyfile="ql/termstructures/globalbootstrapvars.cpp" bodystart="10" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_simple_quote_variables_1a8f8fb64b0ff9d2cceb144aec72847fd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::SimpleQuoteVariables::initialize</definition>
        <argsstring>(bool validData) override</argsstring>
        <name>initialize</name>
        <qualifiedname>QuantLib::SimpleQuoteVariables::initialize</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_additional_bootstrap_variables_1a0e7c6fecd47f32739124bce06829bd56">initialize</reimplements>
        <param>
          <type>bool</type>
          <declname>validData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/globalbootstrapvars.hpp" line="19" column="11" bodyfile="ql/termstructures/globalbootstrapvars.cpp" bodystart="19" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_simple_quote_variables_1ac87e13ade115c4e832e03e9219d9824f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::SimpleQuoteVariables::update</definition>
        <argsstring>(const Array &amp;x) override</argsstring>
        <name>update</name>
        <qualifiedname>QuantLib::SimpleQuoteVariables::update</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_additional_bootstrap_variables_1a3fc4194c15a45a0d19eb0b681ab4c4a4">update</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/globalbootstrapvars.hpp" line="20" column="10" bodyfile="ql/termstructures/globalbootstrapvars.cpp" bodystart="34" bodyend="38"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_simple_quote_variables_1ae673ea4596e9cfbe200e8a73979124d6" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SimpleQuoteVariables::transformDirect</definition>
        <argsstring>(Real x, Size i) const</argsstring>
        <name>transformDirect</name>
        <qualifiedname>QuantLib::SimpleQuoteVariables::transformDirect</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/globalbootstrapvars.hpp" line="23" column="10" bodyfile="ql/termstructures/globalbootstrapvars.cpp" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_simple_quote_variables_1abb3cb21791cf8421be166cd740249205" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SimpleQuoteVariables::transformInverse</definition>
        <argsstring>(Real x, Size i) const</argsstring>
        <name>transformInverse</name>
        <qualifiedname>QuantLib::SimpleQuoteVariables::transformInverse</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/globalbootstrapvars.hpp" line="24" column="10" bodyfile="ql/termstructures/globalbootstrapvars.cpp" bodystart="45" bodyend="48"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::AdditionalBootstrapVariables</label>
        <link refid="class_quant_lib_1_1_additional_bootstrap_variables"/>
      </node>
      <node id="1">
        <label>QuantLib::SimpleQuoteVariables</label>
        <link refid="class_quant_lib_1_1_simple_quote_variables"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::AdditionalBootstrapVariables</label>
        <link refid="class_quant_lib_1_1_additional_bootstrap_variables"/>
      </node>
      <node id="1">
        <label>QuantLib::SimpleQuoteVariables</label>
        <link refid="class_quant_lib_1_1_simple_quote_variables"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/termstructures/globalbootstrapvars.hpp" line="12" column="1" bodyfile="ql/termstructures/globalbootstrapvars.hpp" bodystart="12" bodyend="28"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_simple_quote_variables_1aae6823a7308d9fc7445147f1f9b8f6a0" prot="private" virt="non-virtual"><scope>QuantLib::SimpleQuoteVariables</scope><name>initialGuesses_</name></member>
      <member refid="class_quant_lib_1_1_simple_quote_variables_1a8f8fb64b0ff9d2cceb144aec72847fd8" prot="public" virt="virtual"><scope>QuantLib::SimpleQuoteVariables</scope><name>initialize</name></member>
      <member refid="class_quant_lib_1_1_simple_quote_variables_1a39e370a8eb39927fd951ea0f59436bf8" prot="private" virt="non-virtual"><scope>QuantLib::SimpleQuoteVariables</scope><name>lowerBounds_</name></member>
      <member refid="class_quant_lib_1_1_simple_quote_variables_1a03e7292a8241096d0c46023b1f9c57be" prot="private" virt="non-virtual"><scope>QuantLib::SimpleQuoteVariables</scope><name>quotes_</name></member>
      <member refid="class_quant_lib_1_1_simple_quote_variables_1a6ea56b6d508b45469ab73c132cc27712" prot="public" virt="non-virtual"><scope>QuantLib::SimpleQuoteVariables</scope><name>SimpleQuoteVariables</name></member>
      <member refid="class_quant_lib_1_1_simple_quote_variables_1ae673ea4596e9cfbe200e8a73979124d6" prot="private" virt="non-virtual"><scope>QuantLib::SimpleQuoteVariables</scope><name>transformDirect</name></member>
      <member refid="class_quant_lib_1_1_simple_quote_variables_1abb3cb21791cf8421be166cd740249205" prot="private" virt="non-virtual"><scope>QuantLib::SimpleQuoteVariables</scope><name>transformInverse</name></member>
      <member refid="class_quant_lib_1_1_simple_quote_variables_1ac87e13ade115c4e832e03e9219d9824f" prot="public" virt="virtual"><scope>QuantLib::SimpleQuoteVariables</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_additional_bootstrap_variables_1ae7af897164c23a0c7682a65cdb3a1d0c" prot="public" virt="virtual"><scope>QuantLib::SimpleQuoteVariables</scope><name>~AdditionalBootstrapVariables</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

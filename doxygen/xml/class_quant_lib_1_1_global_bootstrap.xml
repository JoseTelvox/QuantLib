<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_global_bootstrap" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::GlobalBootstrap</compoundname>
    <includes refid="globalbootstrap_8hpp" local="no">globalbootstrap.hpp</includes>
    <templateparamlist>
      <param>
        <type>class Curve</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_quant_lib_1_1_global_bootstrap_1a93b1a8ec4c78aa2bebc862c1bc2bbf26" prot="private" static="no">
        <type>Curve::traits_type</type>
        <definition>typedef Curve::traits_type QuantLib::GlobalBootstrap&lt; Curve &gt;::Traits</definition>
        <argsstring></argsstring>
        <name>Traits</name>
        <qualifiedname>QuantLib::GlobalBootstrap::Traits</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/globalbootstrap.hpp" line="75" column="41" bodyfile="ql/termstructures/globalbootstrap.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_quant_lib_1_1_global_bootstrap_1a5fecc4b7889f13d4511a06f27a866a7b" prot="private" static="no">
        <type>Curve::interpolator_type</type>
        <definition>typedef Curve::interpolator_type QuantLib::GlobalBootstrap&lt; Curve &gt;::Interpolator</definition>
        <argsstring></argsstring>
        <name>Interpolator</name>
        <qualifiedname>QuantLib::GlobalBootstrap::Interpolator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/globalbootstrap.hpp" line="76" column="47" bodyfile="ql/termstructures/globalbootstrap.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_quant_lib_1_1_global_bootstrap_1a23ce439704961dbe19740124214e6df8" prot="private" static="no">
        <type>std::function&lt; <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref>(const std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt; &amp;, const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;)&gt;</type>
        <definition>typedef std::function&lt;Array(const std::vector&lt;Time&gt;&amp;, const std::vector&lt;Real&gt;&amp;)&gt; QuantLib::GlobalBootstrap&lt; Curve &gt;::AdditionalPenalties</definition>
        <argsstring></argsstring>
        <name>AdditionalPenalties</name>
        <qualifiedname>QuantLib::GlobalBootstrap::AdditionalPenalties</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/globalbootstrap.hpp" line="78" column="9" bodyfile="ql/termstructures/globalbootstrap.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_global_bootstrap_1a7fac032759a0a1f93bd8df26e50fc484" prot="private" static="no" mutable="no">
        <type>Curve *</type>
        <definition>Curve* QuantLib::GlobalBootstrap&lt; Curve &gt;::ts_</definition>
        <argsstring></argsstring>
        <name>ts_</name>
        <qualifiedname>QuantLib::GlobalBootstrap::ts_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/globalbootstrap.hpp" line="103" column="11" bodyfile="ql/termstructures/globalbootstrap.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_global_bootstrap_1a81e75f76acd5f431a6f61af20e54c17f" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::GlobalBootstrap&lt; Curve &gt;::accuracy_</definition>
        <argsstring></argsstring>
        <name>accuracy_</name>
        <qualifiedname>QuantLib::GlobalBootstrap::accuracy_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/globalbootstrap.hpp" line="104" column="10" bodyfile="ql/termstructures/globalbootstrap.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_global_bootstrap_1a80e1de05d8d807a209d5156ca6ee7ab8" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_optimization_method" kindref="compound">OptimizationMethod</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;OptimizationMethod&gt; QuantLib::GlobalBootstrap&lt; Curve &gt;::optimizer_</definition>
        <argsstring></argsstring>
        <name>optimizer_</name>
        <qualifiedname>QuantLib::GlobalBootstrap::optimizer_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/globalbootstrap.hpp" line="105" column="21" bodyfile="ql/termstructures/globalbootstrap.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_global_bootstrap_1af860cf6d0136fad1dc4c9f19f757a90c" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_end_criteria" kindref="compound">EndCriteria</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;EndCriteria&gt; QuantLib::GlobalBootstrap&lt; Curve &gt;::endCriteria_</definition>
        <argsstring></argsstring>
        <name>endCriteria_</name>
        <qualifiedname>QuantLib::GlobalBootstrap::endCriteria_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/globalbootstrap.hpp" line="106" column="21" bodyfile="ql/termstructures/globalbootstrap.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_global_bootstrap_1adc76158ff1c7b916467d924c0f94ed0c" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; ext::shared_ptr&lt; typename Traits::helper &gt; &gt;</type>
        <definition>std::vector&lt;ext::shared_ptr&lt;typename Traits::helper&gt; &gt; QuantLib::GlobalBootstrap&lt; Curve &gt;::additionalHelpers_</definition>
        <argsstring></argsstring>
        <name>additionalHelpers_</name>
        <qualifiedname>QuantLib::GlobalBootstrap::additionalHelpers_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/globalbootstrap.hpp" line="107" column="25" bodyfile="ql/termstructures/globalbootstrap.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_global_bootstrap_1a2f4883c4a1f6e121b41e5b0f774e75e7" prot="private" static="no" mutable="no">
        <type>std::function&lt; std::vector&lt; <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &gt;()&gt;</type>
        <definition>std::function&lt;std::vector&lt;Date&gt;()&gt; QuantLib::GlobalBootstrap&lt; Curve &gt;::additionalDates_</definition>
        <argsstring></argsstring>
        <name>additionalDates_</name>
        <qualifiedname>QuantLib::GlobalBootstrap::additionalDates_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/globalbootstrap.hpp" line="108" column="21" bodyfile="ql/termstructures/globalbootstrap.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_global_bootstrap_1afd20340edb9c72e142ca95ecd0a80de5" prot="private" static="no" mutable="no">
        <type>AdditionalPenalties</type>
        <definition>AdditionalPenalties QuantLib::GlobalBootstrap&lt; Curve &gt;::additionalPenalties_</definition>
        <argsstring></argsstring>
        <name>additionalPenalties_</name>
        <qualifiedname>QuantLib::GlobalBootstrap::additionalPenalties_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/globalbootstrap.hpp" line="109" column="25" bodyfile="ql/termstructures/globalbootstrap.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_global_bootstrap_1a2b2a43cb0a218520e43a5ed69a2c603e" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_additional_bootstrap_variables" kindref="compound">AdditionalBootstrapVariables</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;AdditionalBootstrapVariables&gt; QuantLib::GlobalBootstrap&lt; Curve &gt;::additionalVariables_</definition>
        <argsstring></argsstring>
        <name>additionalVariables_</name>
        <qualifiedname>QuantLib::GlobalBootstrap::additionalVariables_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/globalbootstrap.hpp" line="110" column="21" bodyfile="ql/termstructures/globalbootstrap.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_global_bootstrap_1abbc7b01fc6fd0cc7f7447de0e1dfa40f" prot="private" static="no" mutable="yes">
        <type>bool</type>
        <definition>bool QuantLib::GlobalBootstrap&lt; Curve &gt;::initialized_</definition>
        <argsstring></argsstring>
        <name>initialized_</name>
        <qualifiedname>QuantLib::GlobalBootstrap::initialized_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/globalbootstrap.hpp" line="111" column="18" bodyfile="ql/termstructures/globalbootstrap.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_global_bootstrap_1ae490f9d6724a71d56f7919bb9a33f919" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::GlobalBootstrap&lt; Curve &gt;::validCurve_</definition>
        <argsstring></argsstring>
        <name>validCurve_</name>
        <qualifiedname>QuantLib::GlobalBootstrap::validCurve_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/globalbootstrap.hpp" line="111" column="32" bodyfile="ql/termstructures/globalbootstrap.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_global_bootstrap_1ab1ae7b68af8c988974bdd4010d531d03" prot="private" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::GlobalBootstrap&lt; Curve &gt;::firstHelper_</definition>
        <argsstring></argsstring>
        <name>firstHelper_</name>
        <qualifiedname>QuantLib::GlobalBootstrap::firstHelper_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/globalbootstrap.hpp" line="112" column="18" bodyfile="ql/termstructures/globalbootstrap.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_global_bootstrap_1a98dd9dfb4b5c53f08b9972045e01500f" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::GlobalBootstrap&lt; Curve &gt;::numberHelpers_</definition>
        <argsstring></argsstring>
        <name>numberHelpers_</name>
        <qualifiedname>QuantLib::GlobalBootstrap::numberHelpers_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/globalbootstrap.hpp" line="112" column="31" bodyfile="ql/termstructures/globalbootstrap.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_global_bootstrap_1a59f7d602182f363941f9035d5729cfc0" prot="private" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::GlobalBootstrap&lt; Curve &gt;::firstAdditionalHelper_</definition>
        <argsstring></argsstring>
        <name>firstAdditionalHelper_</name>
        <qualifiedname>QuantLib::GlobalBootstrap::firstAdditionalHelper_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/globalbootstrap.hpp" line="113" column="18" bodyfile="ql/termstructures/globalbootstrap.hpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_global_bootstrap_1a5c8bd0d5cf948e15c356aaddcd5d3bd4" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::GlobalBootstrap&lt; Curve &gt;::numberAdditionalHelpers_</definition>
        <argsstring></argsstring>
        <name>numberAdditionalHelpers_</name>
        <qualifiedname>QuantLib::GlobalBootstrap::numberAdditionalHelpers_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/globalbootstrap.hpp" line="113" column="41" bodyfile="ql/termstructures/globalbootstrap.hpp" bodystart="113" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_global_bootstrap_1a4140c8cb73bb564ebdead2366a83f0ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::GlobalBootstrap&lt; Curve &gt;::GlobalBootstrap</definition>
        <argsstring>(Real accuracy=Null&lt; Real &gt;(), ext::shared_ptr&lt; OptimizationMethod &gt; optimizer=nullptr, ext::shared_ptr&lt; EndCriteria &gt; endCriteria=nullptr)</argsstring>
        <name>GlobalBootstrap</name>
        <qualifiedname>QuantLib::GlobalBootstrap::GlobalBootstrap</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>accuracy</declname>
          <defval><ref refid="class_quant_lib_1_1_null" kindref="compound">Null</ref>&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;()</defval>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_optimization_method" kindref="compound">OptimizationMethod</ref> &gt;</type>
          <declname>optimizer</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_end_criteria" kindref="compound">EndCriteria</ref> &gt;</type>
          <declname>endCriteria</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/globalbootstrap.hpp" line="81" column="5" bodyfile="ql/termstructures/globalbootstrap.hpp" bodystart="119" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_global_bootstrap_1a7500e4eb2f65b9f6a18213829cf4d1dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::GlobalBootstrap&lt; Curve &gt;::GlobalBootstrap</definition>
        <argsstring>(std::vector&lt; ext::shared_ptr&lt; typename Traits::helper &gt; &gt; additionalHelpers, std::function&lt; std::vector&lt; Date &gt;()&gt; additionalDates, AdditionalPenalties additionalPenalties, Real accuracy=Null&lt; Real &gt;(), ext::shared_ptr&lt; OptimizationMethod &gt; optimizer=nullptr, ext::shared_ptr&lt; EndCriteria &gt; endCriteria=nullptr, ext::shared_ptr&lt; AdditionalBootstrapVariables &gt; additionalVariables=nullptr)</argsstring>
        <name>GlobalBootstrap</name>
        <qualifiedname>QuantLib::GlobalBootstrap::GlobalBootstrap</qualifiedname>
        <param>
          <type>std::vector&lt; ext::shared_ptr&lt; typename Traits::helper &gt; &gt;</type>
          <declname>additionalHelpers</declname>
        </param>
        <param>
          <type>std::function&lt; std::vector&lt; <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &gt;()&gt;</type>
          <declname>additionalDates</declname>
        </param>
        <param>
          <type>AdditionalPenalties</type>
          <declname>additionalPenalties</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>accuracy</declname>
          <defval><ref refid="class_quant_lib_1_1_null" kindref="compound">Null</ref>&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;()</defval>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_optimization_method" kindref="compound">OptimizationMethod</ref> &gt;</type>
          <declname>optimizer</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_end_criteria" kindref="compound">EndCriteria</ref> &gt;</type>
          <declname>endCriteria</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_additional_bootstrap_variables" kindref="compound">AdditionalBootstrapVariables</ref> &gt;</type>
          <declname>additionalVariables</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/globalbootstrap.hpp" line="84" column="5" bodyfile="ql/termstructures/globalbootstrap.hpp" bodystart="127" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_global_bootstrap_1a1018f7ff4ccde34e2590b54972ad97e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::GlobalBootstrap&lt; Curve &gt;::GlobalBootstrap</definition>
        <argsstring>(std::vector&lt; ext::shared_ptr&lt; typename Traits::helper &gt; &gt; additionalHelpers, std::function&lt; std::vector&lt; Date &gt;()&gt; additionalDates, std::function&lt; Array()&gt; additionalPenalties, Real accuracy=Null&lt; Real &gt;(), ext::shared_ptr&lt; OptimizationMethod &gt; optimizer=nullptr, ext::shared_ptr&lt; EndCriteria &gt; endCriteria=nullptr, ext::shared_ptr&lt; AdditionalBootstrapVariables &gt; additionalVariables=nullptr)</argsstring>
        <name>GlobalBootstrap</name>
        <qualifiedname>QuantLib::GlobalBootstrap::GlobalBootstrap</qualifiedname>
        <param>
          <type>std::vector&lt; ext::shared_ptr&lt; typename Traits::helper &gt; &gt;</type>
          <declname>additionalHelpers</declname>
        </param>
        <param>
          <type>std::function&lt; std::vector&lt; <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &gt;()&gt;</type>
          <declname>additionalDates</declname>
        </param>
        <param>
          <type>std::function&lt; <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref>()&gt;</type>
          <declname>additionalPenalties</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>accuracy</declname>
          <defval><ref refid="class_quant_lib_1_1_null" kindref="compound">Null</ref>&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;()</defval>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_optimization_method" kindref="compound">OptimizationMethod</ref> &gt;</type>
          <declname>optimizer</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_end_criteria" kindref="compound">EndCriteria</ref> &gt;</type>
          <declname>endCriteria</declname>
          <defval>nullptr</defval>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_additional_bootstrap_variables" kindref="compound">AdditionalBootstrapVariables</ref> &gt;</type>
          <declname>additionalVariables</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/globalbootstrap.hpp" line="91" column="5" bodyfile="ql/termstructures/globalbootstrap.hpp" bodystart="141" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_global_bootstrap_1a63b6799f89903d32eeb8fb38fde33bb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::GlobalBootstrap&lt; Curve &gt;::setup</definition>
        <argsstring>(Curve *ts)</argsstring>
        <name>setup</name>
        <qualifiedname>QuantLib::GlobalBootstrap::setup</qualifiedname>
        <param>
          <type>Curve *</type>
          <declname>ts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/globalbootstrap.hpp" line="98" column="10" bodyfile="ql/termstructures/globalbootstrap.hpp" bodystart="158" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_global_bootstrap_1a200d3849c748c20511e64551d4ae45a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::GlobalBootstrap&lt; Curve &gt;::calculate</definition>
        <argsstring>() const</argsstring>
        <name>calculate</name>
        <qualifiedname>QuantLib::GlobalBootstrap::calculate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/globalbootstrap.hpp" line="99" column="10" bodyfile="ql/termstructures/globalbootstrap.hpp" bodystart="258" bodyend="350"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_global_bootstrap_1a549c286b1f3e13f3d6867d954e06e652" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::GlobalBootstrap&lt; Curve &gt;::initialize</definition>
        <argsstring>() const</argsstring>
        <name>initialize</name>
        <qualifiedname>QuantLib::GlobalBootstrap::initialize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/globalbootstrap.hpp" line="102" column="10" bodyfile="ql/termstructures/globalbootstrap.hpp" bodystart="178" bodyend="256"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Global boostrapper, with additional restrictions</para>
<para>The additionalDates functor must return a set of additional dates to add to the interpolation grid. These dates must only depend on the global evaluation date.</para>
<para>The additionalPenalties functor must yield at least as many values such that</para>
<para>number of (usual, alive) rate helpers + number of additional values &gt;= number of data points - 1</para>
<para>(note that the data points contain t=0). These values are treated as additional error terms in the optimization. The usual rate helpers return quoteError here. All error terms are equally weighted.</para>
<para>The additionalHelpers are registered with the curve like the usual rate helpers, but no pillar dates or error terms are added for them. Pillars and error terms have to be added by additionalDates and additionalPenalties.</para>
<para>The additionalVariables interface manages a set of additional variables to add to the optimization. This is useful to optimize model parameters used by rate helpers, for example, convexity adjustments for futures. See <ref refid="class_quant_lib_1_1_simple_quote_variables" kindref="compound">SimpleQuoteVariables</ref> for a concrete implementation of this interface.</para>
<para>WARNING: This class is known to work with Traits <ref refid="struct_quant_lib_1_1_discount" kindref="compound">Discount</ref>, <ref refid="struct_quant_lib_1_1_zero_yield" kindref="compound">ZeroYield</ref>, <ref refid="class_quant_lib_1_1_forward" kindref="compound">Forward</ref>, i.e. the usual IR curves traits in QL. It requires Traits::transformDirect() and Traits::transformInverse() to be implemented. Also, check the usage of Traits::updateGuess(), Traits::guess() in this class. </para>
    </detaileddescription>
    <location file="ql/termstructures/globalbootstrap.hpp" line="74" column="12" bodyfile="ql/termstructures/globalbootstrap.hpp" bodystart="74" bodyend="114"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_global_bootstrap_1a81e75f76acd5f431a6f61af20e54c17f" prot="private" virt="non-virtual"><scope>QuantLib::GlobalBootstrap</scope><name>accuracy_</name></member>
      <member refid="class_quant_lib_1_1_global_bootstrap_1a2f4883c4a1f6e121b41e5b0f774e75e7" prot="private" virt="non-virtual"><scope>QuantLib::GlobalBootstrap</scope><name>additionalDates_</name></member>
      <member refid="class_quant_lib_1_1_global_bootstrap_1adc76158ff1c7b916467d924c0f94ed0c" prot="private" virt="non-virtual"><scope>QuantLib::GlobalBootstrap</scope><name>additionalHelpers_</name></member>
      <member refid="class_quant_lib_1_1_global_bootstrap_1a23ce439704961dbe19740124214e6df8" prot="private" virt="non-virtual"><scope>QuantLib::GlobalBootstrap</scope><name>AdditionalPenalties</name></member>
      <member refid="class_quant_lib_1_1_global_bootstrap_1afd20340edb9c72e142ca95ecd0a80de5" prot="private" virt="non-virtual"><scope>QuantLib::GlobalBootstrap</scope><name>additionalPenalties_</name></member>
      <member refid="class_quant_lib_1_1_global_bootstrap_1a2b2a43cb0a218520e43a5ed69a2c603e" prot="private" virt="non-virtual"><scope>QuantLib::GlobalBootstrap</scope><name>additionalVariables_</name></member>
      <member refid="class_quant_lib_1_1_global_bootstrap_1a200d3849c748c20511e64551d4ae45a6" prot="public" virt="non-virtual"><scope>QuantLib::GlobalBootstrap</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_global_bootstrap_1af860cf6d0136fad1dc4c9f19f757a90c" prot="private" virt="non-virtual"><scope>QuantLib::GlobalBootstrap</scope><name>endCriteria_</name></member>
      <member refid="class_quant_lib_1_1_global_bootstrap_1a59f7d602182f363941f9035d5729cfc0" prot="private" virt="non-virtual"><scope>QuantLib::GlobalBootstrap</scope><name>firstAdditionalHelper_</name></member>
      <member refid="class_quant_lib_1_1_global_bootstrap_1ab1ae7b68af8c988974bdd4010d531d03" prot="private" virt="non-virtual"><scope>QuantLib::GlobalBootstrap</scope><name>firstHelper_</name></member>
      <member refid="class_quant_lib_1_1_global_bootstrap_1a4140c8cb73bb564ebdead2366a83f0ce" prot="public" virt="non-virtual"><scope>QuantLib::GlobalBootstrap</scope><name>GlobalBootstrap</name></member>
      <member refid="class_quant_lib_1_1_global_bootstrap_1a7500e4eb2f65b9f6a18213829cf4d1dd" prot="public" virt="non-virtual"><scope>QuantLib::GlobalBootstrap</scope><name>GlobalBootstrap</name></member>
      <member refid="class_quant_lib_1_1_global_bootstrap_1a1018f7ff4ccde34e2590b54972ad97e9" prot="public" virt="non-virtual"><scope>QuantLib::GlobalBootstrap</scope><name>GlobalBootstrap</name></member>
      <member refid="class_quant_lib_1_1_global_bootstrap_1a549c286b1f3e13f3d6867d954e06e652" prot="private" virt="non-virtual"><scope>QuantLib::GlobalBootstrap</scope><name>initialize</name></member>
      <member refid="class_quant_lib_1_1_global_bootstrap_1abbc7b01fc6fd0cc7f7447de0e1dfa40f" prot="private" virt="non-virtual"><scope>QuantLib::GlobalBootstrap</scope><name>initialized_</name></member>
      <member refid="class_quant_lib_1_1_global_bootstrap_1a5fecc4b7889f13d4511a06f27a866a7b" prot="private" virt="non-virtual"><scope>QuantLib::GlobalBootstrap</scope><name>Interpolator</name></member>
      <member refid="class_quant_lib_1_1_global_bootstrap_1a5c8bd0d5cf948e15c356aaddcd5d3bd4" prot="private" virt="non-virtual"><scope>QuantLib::GlobalBootstrap</scope><name>numberAdditionalHelpers_</name></member>
      <member refid="class_quant_lib_1_1_global_bootstrap_1a98dd9dfb4b5c53f08b9972045e01500f" prot="private" virt="non-virtual"><scope>QuantLib::GlobalBootstrap</scope><name>numberHelpers_</name></member>
      <member refid="class_quant_lib_1_1_global_bootstrap_1a80e1de05d8d807a209d5156ca6ee7ab8" prot="private" virt="non-virtual"><scope>QuantLib::GlobalBootstrap</scope><name>optimizer_</name></member>
      <member refid="class_quant_lib_1_1_global_bootstrap_1a63b6799f89903d32eeb8fb38fde33bb0" prot="public" virt="non-virtual"><scope>QuantLib::GlobalBootstrap</scope><name>setup</name></member>
      <member refid="class_quant_lib_1_1_global_bootstrap_1a93b1a8ec4c78aa2bebc862c1bc2bbf26" prot="private" virt="non-virtual"><scope>QuantLib::GlobalBootstrap</scope><name>Traits</name></member>
      <member refid="class_quant_lib_1_1_global_bootstrap_1a7fac032759a0a1f93bd8df26e50fc484" prot="private" virt="non-virtual"><scope>QuantLib::GlobalBootstrap</scope><name>ts_</name></member>
      <member refid="class_quant_lib_1_1_global_bootstrap_1ae490f9d6724a71d56f7919bb9a33f919" prot="private" virt="non-virtual"><scope>QuantLib::GlobalBootstrap</scope><name>validCurve_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

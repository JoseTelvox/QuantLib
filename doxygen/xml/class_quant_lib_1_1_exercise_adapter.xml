<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_exercise_adapter" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::ExerciseAdapter</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_multi_product_multi_step" prot="public" virt="non-virtual">QuantLib::MultiProductMultiStep</basecompoundref>
    <sectiondef kind="user-defined">
      <header>inspectors</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_exercise_adapter_1a99c3c7ada896c299b2a0958169e106b3" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_clone" kindref="compound">Clone</ref>&lt; <ref refid="class_quant_lib_1_1_market_model_exercise_value" kindref="compound">MarketModelExerciseValue</ref> &gt;</type>
        <definition>Clone&lt;MarketModelExerciseValue&gt; QuantLib::ExerciseAdapter::exercise_</definition>
        <argsstring></argsstring>
        <name>exercise_</name>
        <qualifiedname>QuantLib::ExerciseAdapter::exercise_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/products/multistep/exerciseadapter.hpp" line="51" column="15" bodyfile="ql/models/marketmodels/products/multistep/exerciseadapter.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_exercise_adapter_1a161919b5db26dbedb4c0bc79444493f9" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::ExerciseAdapter::numberOfProducts_</definition>
        <argsstring></argsstring>
        <name>numberOfProducts_</name>
        <qualifiedname>QuantLib::ExerciseAdapter::numberOfProducts_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/products/multistep/exerciseadapter.hpp" line="52" column="14" bodyfile="ql/models/marketmodels/products/multistep/exerciseadapter.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_exercise_adapter_1af1d29fa62b4c5f62cf410810390b4e79" prot="private" static="no" mutable="no">
        <type>std::valarray&lt; bool &gt;</type>
        <definition>std::valarray&lt;bool&gt; QuantLib::ExerciseAdapter::isExerciseTime_</definition>
        <argsstring></argsstring>
        <name>isExerciseTime_</name>
        <qualifiedname>QuantLib::ExerciseAdapter::isExerciseTime_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/products/multistep/exerciseadapter.hpp" line="53" column="23" bodyfile="ql/models/marketmodels/products/multistep/exerciseadapter.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_exercise_adapter_1a77dab761e77e917d7625293e93f8f5f9" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::ExerciseAdapter::currentIndex_</definition>
        <argsstring></argsstring>
        <name>currentIndex_</name>
        <qualifiedname>QuantLib::ExerciseAdapter::currentIndex_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/products/multistep/exerciseadapter.hpp" line="54" column="14" bodyfile="ql/models/marketmodels/products/multistep/exerciseadapter.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_exercise_adapter_1a6eb5acca512410102dd231e84d7ee56b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_market_model_exercise_value" kindref="compound">MarketModelExerciseValue</ref> &amp;</type>
        <definition>const MarketModelExerciseValue &amp; QuantLib::ExerciseAdapter::exerciseValue</definition>
        <argsstring>() const</argsstring>
        <name>exerciseValue</name>
        <qualifiedname>QuantLib::ExerciseAdapter::exerciseValue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/products/multistep/exerciseadapter.hpp" line="48" column="40" bodyfile="ql/models/marketmodels/products/multistep/exerciseadapter.hpp" bodystart="83" bodyend="85"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>MarketModelMultiProduct interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_exercise_adapter_1ae9d510f9f28fc68380df47fa464e54dc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;</type>
        <definition>std::vector&lt; Time &gt; QuantLib::ExerciseAdapter::possibleCashFlowTimes</definition>
        <argsstring>() const override</argsstring>
        <name>possibleCashFlowTimes</name>
        <qualifiedname>QuantLib::ExerciseAdapter::possibleCashFlowTimes</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_market_model_multi_product_1aa259aa618047ab435766e71eb43f41a7">possibleCashFlowTimes</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/products/multistep/exerciseadapter.hpp" line="36" column="21" bodyfile="ql/models/marketmodels/products/multistep/exerciseadapter.hpp" bodystart="60" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_exercise_adapter_1aaccab7cb949a181c1af0717ec760bc21" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::ExerciseAdapter::numberOfProducts</definition>
        <argsstring>() const override</argsstring>
        <name>numberOfProducts</name>
        <qualifiedname>QuantLib::ExerciseAdapter::numberOfProducts</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_market_model_multi_product_1a2dede52d7bff85221b39246ac4b2b08f">numberOfProducts</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/products/multistep/exerciseadapter.hpp" line="37" column="14" bodyfile="ql/models/marketmodels/products/multistep/exerciseadapter.hpp" bodystart="64" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_exercise_adapter_1aa37d6e42099e14bcb701327a40505806" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="class_quant_lib_1_1_evolution_description" kindref="compound">EvolutionDescription</ref> &amp;</type>
        <definition>const EvolutionDescription &amp; QuantLib::ExerciseAdapter::evolution</definition>
        <argsstring>() const override</argsstring>
        <name>evolution</name>
        <qualifiedname>QuantLib::ExerciseAdapter::evolution</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_market_model_multi_product_1a7aea4bb45405d468cda5739f4d63da8b">evolution</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/products/multistep/exerciseadapter.hpp" line="38" column="36" bodyfile="ql/models/marketmodels/products/multistep/exerciseadapter.hpp" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_exercise_adapter_1acc5ce1b4769290d0f0c529fff5359782" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::ExerciseAdapter::maxNumberOfCashFlowsPerProductPerStep</definition>
        <argsstring>() const override</argsstring>
        <name>maxNumberOfCashFlowsPerProductPerStep</name>
        <qualifiedname>QuantLib::ExerciseAdapter::maxNumberOfCashFlowsPerProductPerStep</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_market_model_multi_product_1a12e6d1142856abb37586473cbcd2d4a1">maxNumberOfCashFlowsPerProductPerStep</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/products/multistep/exerciseadapter.hpp" line="39" column="14" bodyfile="ql/models/marketmodels/products/multistep/exerciseadapter.hpp" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_exercise_adapter_1a50dbd67224a687e96f0121f6c1fbfd0c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::ExerciseAdapter::reset</definition>
        <argsstring>() override</argsstring>
        <name>reset</name>
        <qualifiedname>QuantLib::ExerciseAdapter::reset</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_market_model_multi_product_1a1f1a0d792039158a3d70f79baa20e020">reset</reimplements>
        <briefdescription>
<para>during simulation put product at start of path </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/products/multistep/exerciseadapter.hpp" line="40" column="14" bodyfile="ql/models/marketmodels/products/multistep/exerciseadapter.hpp" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_exercise_adapter_1abdd9bf4240701d7b65509b04510d281f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QuantLib::ExerciseAdapter::nextTimeStep</definition>
        <argsstring>(const CurveState &amp;, std::vector&lt; Size &gt; &amp;, std::vector&lt; std::vector&lt; CashFlow &gt; &gt; &amp;) override</argsstring>
        <name>nextTimeStep</name>
        <qualifiedname>QuantLib::ExerciseAdapter::nextTimeStep</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_market_model_multi_product_1a4f02e7bcdb5c23c431183fb3a499ca28">nextTimeStep</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_curve_state" kindref="compound">CurveState</ref> &amp;</type>
          <declname>currentState</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &gt; &amp;</type>
          <declname>numberCashFlowsThisStep</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; <ref refid="struct_quant_lib_1_1_market_model_multi_product_1_1_cash_flow" kindref="compound">CashFlow</ref> &gt; &gt; &amp;</type>
          <declname>cashFlowsGenerated</declname>
        </param>
        <briefdescription>
<para>return value indicates whether path is finished, TRUE means done </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/products/multistep/exerciseadapter.hpp" line="41" column="14" bodyfile="ql/models/marketmodels/products/multistep/exerciseadapter.cpp" bodystart="31" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_exercise_adapter_1ae8f60796194b4e376d1410cb5a8c82c4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::unique_ptr&lt; <ref refid="class_quant_lib_1_1_market_model_multi_product" kindref="compound">MarketModelMultiProduct</ref> &gt;</type>
        <definition>std::unique_ptr&lt; MarketModelMultiProduct &gt; QuantLib::ExerciseAdapter::clone</definition>
        <argsstring>() const override</argsstring>
        <name>clone</name>
        <qualifiedname>QuantLib::ExerciseAdapter::clone</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_market_model_multi_product_1ad4ded115a66268f3e9d92efebbda6ba1">clone</reimplements>
        <briefdescription>
<para>returns a newly-allocated copy of itself </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/products/multistep/exerciseadapter.hpp" line="44" column="25" bodyfile="ql/models/marketmodels/products/multistep/exerciseadapter.cpp" bodystart="53" bodyend="55"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_exercise_adapter_1a1c375e48a2903fb405e548539d690e6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::ExerciseAdapter::ExerciseAdapter</definition>
        <argsstring>(const Clone&lt; MarketModelExerciseValue &gt; &amp;exercise, Size numberOfProducts=1)</argsstring>
        <name>ExerciseAdapter</name>
        <qualifiedname>QuantLib::ExerciseAdapter::ExerciseAdapter</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_clone" kindref="compound">Clone</ref>&lt; <ref refid="class_quant_lib_1_1_market_model_exercise_value" kindref="compound">MarketModelExerciseValue</ref> &gt; &amp;</type>
          <declname>exercise</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>numberOfProducts</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/products/multistep/exerciseadapter.hpp" line="32" column="9" bodyfile="ql/models/marketmodels/products/multistep/exerciseadapter.cpp" bodystart="24" bodyend="29"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::ExerciseAdapter</label>
        <link refid="class_quant_lib_1_1_exercise_adapter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::MarketModelMultiProduct</label>
        <link refid="class_quant_lib_1_1_market_model_multi_product"/>
      </node>
      <node id="2">
        <label>QuantLib::MultiProductMultiStep</label>
        <link refid="class_quant_lib_1_1_multi_product_multi_step"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>QuantLib::EvolutionDescription</label>
        <link refid="class_quant_lib_1_1_evolution_description"/>
      </node>
      <node id="1">
        <label>QuantLib::ExerciseAdapter</label>
        <link refid="class_quant_lib_1_1_exercise_adapter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::MarketModelMultiProduct</label>
        <link refid="class_quant_lib_1_1_market_model_multi_product"/>
      </node>
      <node id="2">
        <label>QuantLib::MultiProductMultiStep</label>
        <link refid="class_quant_lib_1_1_multi_product_multi_step"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>evolution_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/models/marketmodels/products/multistep/exerciseadapter.hpp" line="30" column="5" bodyfile="ql/models/marketmodels/products/multistep/exerciseadapter.hpp" bodystart="30" bodyend="55"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_exercise_adapter_1ae8f60796194b4e376d1410cb5a8c82c4" prot="public" virt="virtual"><scope>QuantLib::ExerciseAdapter</scope><name>clone</name></member>
      <member refid="class_quant_lib_1_1_exercise_adapter_1a77dab761e77e917d7625293e93f8f5f9" prot="private" virt="non-virtual"><scope>QuantLib::ExerciseAdapter</scope><name>currentIndex_</name></member>
      <member refid="class_quant_lib_1_1_exercise_adapter_1aa37d6e42099e14bcb701327a40505806" prot="public" virt="virtual"><scope>QuantLib::ExerciseAdapter</scope><name>evolution</name></member>
      <member refid="class_quant_lib_1_1_multi_product_multi_step_1af75d7d4da12f35a270d14728c935a3a1" prot="protected" virt="non-virtual"><scope>QuantLib::ExerciseAdapter</scope><name>evolution_</name></member>
      <member refid="class_quant_lib_1_1_exercise_adapter_1a99c3c7ada896c299b2a0958169e106b3" prot="private" virt="non-virtual"><scope>QuantLib::ExerciseAdapter</scope><name>exercise_</name></member>
      <member refid="class_quant_lib_1_1_exercise_adapter_1a1c375e48a2903fb405e548539d690e6c" prot="public" virt="non-virtual"><scope>QuantLib::ExerciseAdapter</scope><name>ExerciseAdapter</name></member>
      <member refid="class_quant_lib_1_1_exercise_adapter_1a6eb5acca512410102dd231e84d7ee56b" prot="public" virt="non-virtual"><scope>QuantLib::ExerciseAdapter</scope><name>exerciseValue</name></member>
      <member refid="class_quant_lib_1_1_exercise_adapter_1af1d29fa62b4c5f62cf410810390b4e79" prot="private" virt="non-virtual"><scope>QuantLib::ExerciseAdapter</scope><name>isExerciseTime_</name></member>
      <member refid="class_quant_lib_1_1_exercise_adapter_1acc5ce1b4769290d0f0c529fff5359782" prot="public" virt="virtual"><scope>QuantLib::ExerciseAdapter</scope><name>maxNumberOfCashFlowsPerProductPerStep</name></member>
      <member refid="class_quant_lib_1_1_multi_product_multi_step_1a0e4d1487944182e90e9d08be0a6aef5a" prot="public" virt="non-virtual"><scope>QuantLib::ExerciseAdapter</scope><name>MultiProductMultiStep</name></member>
      <member refid="class_quant_lib_1_1_exercise_adapter_1abdd9bf4240701d7b65509b04510d281f" prot="public" virt="virtual"><scope>QuantLib::ExerciseAdapter</scope><name>nextTimeStep</name></member>
      <member refid="class_quant_lib_1_1_exercise_adapter_1aaccab7cb949a181c1af0717ec760bc21" prot="public" virt="virtual"><scope>QuantLib::ExerciseAdapter</scope><name>numberOfProducts</name></member>
      <member refid="class_quant_lib_1_1_exercise_adapter_1a161919b5db26dbedb4c0bc79444493f9" prot="private" virt="non-virtual"><scope>QuantLib::ExerciseAdapter</scope><name>numberOfProducts_</name></member>
      <member refid="class_quant_lib_1_1_exercise_adapter_1ae9d510f9f28fc68380df47fa464e54dc" prot="public" virt="virtual"><scope>QuantLib::ExerciseAdapter</scope><name>possibleCashFlowTimes</name></member>
      <member refid="class_quant_lib_1_1_multi_product_multi_step_1a36189032c62a857a24ee0bc3a35daac5" prot="protected" virt="non-virtual"><scope>QuantLib::ExerciseAdapter</scope><name>rateTimes_</name></member>
      <member refid="class_quant_lib_1_1_exercise_adapter_1a50dbd67224a687e96f0121f6c1fbfd0c" prot="public" virt="virtual"><scope>QuantLib::ExerciseAdapter</scope><name>reset</name></member>
      <member refid="class_quant_lib_1_1_multi_product_multi_step_1ab20a909104c9dac4ea6c9ea459c785bd" prot="public" virt="virtual"><scope>QuantLib::ExerciseAdapter</scope><name>suggestedNumeraires</name></member>
      <member refid="class_quant_lib_1_1_market_model_multi_product_1ac7c964a1ca915e17b72f560e1dc52883" prot="public" virt="virtual"><scope>QuantLib::ExerciseAdapter</scope><name>~MarketModelMultiProduct</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

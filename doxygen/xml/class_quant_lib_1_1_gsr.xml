<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_gsr" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::Gsr</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_gaussian1d_model" prot="public" virt="non-virtual">QuantLib::Gaussian1dModel</basecompoundref>
    <basecompoundref refid="class_quant_lib_1_1_calibrated_model" prot="public" virt="non-virtual">QuantLib::CalibratedModel</basecompoundref>
    <includes refid="gsr_8hpp" local="no">gsr.hpp</includes>
    <innerclass refid="struct_quant_lib_1_1_gsr_1_1_reversion_observer" prot="private">QuantLib::Gsr::ReversionObserver</innerclass>
    <innerclass refid="struct_quant_lib_1_1_gsr_1_1_volatility_observer" prot="private">QuantLib::Gsr::VolatilityObserver</innerclass>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_gsr_1afd15f13f343d374a968bc04b3cb312a5" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_parameter" kindref="compound">Parameter</ref> &amp;</type>
        <definition>Parameter&amp; QuantLib::Gsr::reversion_</definition>
        <argsstring></argsstring>
        <name>reversion_</name>
        <qualifiedname>QuantLib::Gsr::reversion_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gsr.hpp" line="163" column="15" bodyfile="ql/models/shortrate/onefactormodels/gsr.hpp" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_gsr_1a34e773902096b4ba0f30e7f26f449716" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_parameter" kindref="compound">Parameter</ref> &amp;</type>
        <definition>Parameter &amp; QuantLib::Gsr::sigma_</definition>
        <argsstring></argsstring>
        <name>sigma_</name>
        <qualifiedname>QuantLib::Gsr::sigma_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gsr.hpp" line="163" column="26" bodyfile="ql/models/shortrate/onefactormodels/gsr.hpp" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_gsr_1a28654cbe5bc876d129b78f753af4d6c8" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &gt;</type>
        <definition>std::vector&lt;Handle&lt;Quote&gt; &gt; QuantLib::Gsr::volatilities_</definition>
        <argsstring></argsstring>
        <name>volatilities_</name>
        <qualifiedname>QuantLib::Gsr::volatilities_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gsr.hpp" line="165" column="17" bodyfile="ql/models/shortrate/onefactormodels/gsr.hpp" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_gsr_1ac5d432cb690ce5dae461f50e9d8bdd16" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &gt;</type>
        <definition>std::vector&lt;Handle&lt;Quote&gt; &gt; QuantLib::Gsr::reversions_</definition>
        <argsstring></argsstring>
        <name>reversions_</name>
        <qualifiedname>QuantLib::Gsr::reversions_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gsr.hpp" line="166" column="17" bodyfile="ql/models/shortrate/onefactormodels/gsr.hpp" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_gsr_1a0811c6663445527b2aafb3de0b39e86b" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &gt;</type>
        <definition>std::vector&lt;Date&gt; QuantLib::Gsr::volstepdates_</definition>
        <argsstring></argsstring>
        <name>volstepdates_</name>
        <qualifiedname>QuantLib::Gsr::volstepdates_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gsr.hpp" line="167" column="17" bodyfile="ql/models/shortrate/onefactormodels/gsr.hpp" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_gsr_1a89f03e74cf0fe043e73e3cd78b425a9e" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;</type>
        <definition>std::vector&lt;Time&gt; QuantLib::Gsr::volsteptimes_</definition>
        <argsstring></argsstring>
        <name>volsteptimes_</name>
        <qualifiedname>QuantLib::Gsr::volsteptimes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gsr.hpp" line="170" column="25" bodyfile="ql/models/shortrate/onefactormodels/gsr.hpp" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_gsr_1a88d3024a7f29b8a89b1f19be22efb887" prot="private" static="no" mutable="yes">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::Gsr::volsteptimesArray_</definition>
        <argsstring></argsstring>
        <name>volsteptimesArray_</name>
        <qualifiedname>QuantLib::Gsr::volsteptimesArray_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gsr.hpp" line="171" column="19" bodyfile="ql/models/shortrate/onefactormodels/gsr.hpp" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_gsr_1a2eddb9028383c27f8de855d46c663671" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; VolatilityObserver &gt;</type>
        <definition>ext::shared_ptr&lt;VolatilityObserver&gt; QuantLib::Gsr::volatilityObserver_</definition>
        <argsstring></argsstring>
        <name>volatilityObserver_</name>
        <qualifiedname>QuantLib::Gsr::volatilityObserver_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gsr.hpp" line="185" column="21" bodyfile="ql/models/shortrate/onefactormodels/gsr.hpp" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_gsr_1a51dbe6e7eec287f2e5398569517d4999" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; ReversionObserver &gt;</type>
        <definition>ext::shared_ptr&lt;ReversionObserver&gt; QuantLib::Gsr::reversionObserver_</definition>
        <argsstring></argsstring>
        <name>reversionObserver_</name>
        <qualifiedname>QuantLib::Gsr::reversionObserver_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gsr.hpp" line="186" column="21" bodyfile="ql/models/shortrate/onefactormodels/gsr.hpp" bodystart="186" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_1a90031dd0d909a09b4e6a352144106c0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Gsr::Gsr</definition>
        <argsstring>(const Handle&lt; YieldTermStructure &gt; &amp;termStructure, std::vector&lt; Date &gt; volstepdates, const std::vector&lt; Real &gt; &amp;volatilities, Real reversion, Real T=60.0)</argsstring>
        <name>Gsr</name>
        <qualifiedname>QuantLib::Gsr::Gsr</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>termStructure</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &gt;</type>
          <declname>volstepdates</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>volatilities</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>reversion</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>T</declname>
          <defval>60.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gsr.hpp" line="38" column="5" bodyfile="ql/models/shortrate/onefactormodels/gsr.cpp" bodystart="26" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_1a8650f3024d4da8c7709e2c669b5e1008" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Gsr::Gsr</definition>
        <argsstring>(const Handle&lt; YieldTermStructure &gt; &amp;termStructure, std::vector&lt; Date &gt; volstepdates, const std::vector&lt; Real &gt; &amp;volatilities, const std::vector&lt; Real &gt; &amp;reversions, Real T=60.0)</argsstring>
        <name>Gsr</name>
        <qualifiedname>QuantLib::Gsr::Gsr</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>termStructure</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &gt;</type>
          <declname>volstepdates</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>volatilities</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>reversions</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>T</declname>
          <defval>60.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gsr.hpp" line="44" column="5" bodyfile="ql/models/shortrate/onefactormodels/gsr.cpp" bodystart="45" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_1a65d3adc6b5aae29c37bf2bf136d40c2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Gsr::Gsr</definition>
        <argsstring>(const Handle&lt; YieldTermStructure &gt; &amp;termStructure, std::vector&lt; Date &gt; volstepdates, std::vector&lt; Handle&lt; Quote &gt; &gt; volatilities, const Handle&lt; Quote &gt; &amp;reversion, Real T=60.0)</argsstring>
        <name>Gsr</name>
        <qualifiedname>QuantLib::Gsr::Gsr</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>termStructure</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &gt;</type>
          <declname>volstepdates</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &gt;</type>
          <declname>volatilities</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &amp;</type>
          <declname>reversion</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>T</declname>
          <defval>60.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gsr.hpp" line="50" column="5" bodyfile="ql/models/shortrate/onefactormodels/gsr.cpp" bodystart="65" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_1a99a490e9acf1971286963dc75af5080c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Gsr::Gsr</definition>
        <argsstring>(const Handle&lt; YieldTermStructure &gt; &amp;termStructure, std::vector&lt; Date &gt; volstepdates, std::vector&lt; Handle&lt; Quote &gt; &gt; volatilities, std::vector&lt; Handle&lt; Quote &gt; &gt; reversions, Real T=60.0)</argsstring>
        <name>Gsr</name>
        <qualifiedname>QuantLib::Gsr::Gsr</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>termStructure</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &gt;</type>
          <declname>volstepdates</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &gt;</type>
          <declname>volatilities</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt; &gt;</type>
          <declname>reversions</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>T</declname>
          <defval>60.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gsr.hpp" line="56" column="5" bodyfile="ql/models/shortrate/onefactormodels/gsr.cpp" bodystart="79" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_1a6373f1f8dabce3161ee63e30313c771f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Gsr::numeraireTime</definition>
        <argsstring>() const</argsstring>
        <name>numeraireTime</name>
        <qualifiedname>QuantLib::Gsr::numeraireTime</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gsr.hpp" line="62" column="10" bodyfile="ql/models/shortrate/onefactormodels/gsr.hpp" bodystart="189" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_1ae9590b2578d914dc9a1512464540b73d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::Gsr::numeraireTime</definition>
        <argsstring>(Real T)</argsstring>
        <name>numeraireTime</name>
        <qualifiedname>QuantLib::Gsr::numeraireTime</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>T</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gsr.hpp" line="63" column="10" bodyfile="ql/models/shortrate/onefactormodels/gsr.hpp" bodystart="194" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_1a2c83f0f3ad9941f35225bd615242a7cb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
        <definition>const Array &amp; QuantLib::Gsr::reversion</definition>
        <argsstring>() const</argsstring>
        <name>reversion</name>
        <qualifiedname>QuantLib::Gsr::reversion</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gsr.hpp" line="65" column="17" bodyfile="ql/models/shortrate/onefactormodels/gsr.hpp" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_1ab008502641a6f234288d778088de7416" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
        <definition>const Array &amp; QuantLib::Gsr::volatility</definition>
        <argsstring>() const</argsstring>
        <name>volatility</name>
        <qualifiedname>QuantLib::Gsr::volatility</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gsr.hpp" line="66" column="17" bodyfile="ql/models/shortrate/onefactormodels/gsr.hpp" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_1a8b04b0bfc767768fa3cb3877138c8344" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt; bool &gt; QuantLib::Gsr::FixedReversions</definition>
        <argsstring>()</argsstring>
        <name>FixedReversions</name>
        <qualifiedname>QuantLib::Gsr::FixedReversions</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gsr.hpp" line="71" column="17" bodyfile="ql/models/shortrate/onefactormodels/gsr.hpp" bodystart="71" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_1a9154dcd7a5ca97c64d1a4642c037e325" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt; bool &gt; QuantLib::Gsr::FixedVolatilities</definition>
        <argsstring>()</argsstring>
        <name>FixedVolatilities</name>
        <qualifiedname>QuantLib::Gsr::FixedVolatilities</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gsr.hpp" line="79" column="17" bodyfile="ql/models/shortrate/onefactormodels/gsr.hpp" bodystart="79" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_1a24f17db21cf3df4ae80bbc90dde1009e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt; bool &gt; QuantLib::Gsr::MoveVolatility</definition>
        <argsstring>(Size i)</argsstring>
        <name>MoveVolatility</name>
        <qualifiedname>QuantLib::Gsr::MoveVolatility</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gsr.hpp" line="86" column="17" bodyfile="ql/models/shortrate/onefactormodels/gsr.hpp" bodystart="86" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_1a765fd4491d800f0ccd10831ac9445981" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt; bool &gt; QuantLib::Gsr::MoveReversion</definition>
        <argsstring>(Size i)</argsstring>
        <name>MoveReversion</name>
        <qualifiedname>QuantLib::Gsr::MoveReversion</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gsr.hpp" line="95" column="17" bodyfile="ql/models/shortrate/onefactormodels/gsr.hpp" bodystart="95" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_1ac06e1241a0124aaf3dbb4c21497be461" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::Gsr::calibrateVolatilitiesIterative</definition>
        <argsstring>(const std::vector&lt; ext::shared_ptr&lt; BlackCalibrationHelper &gt; &gt; &amp;helpers, OptimizationMethod &amp;method, const EndCriteria &amp;endCriteria, const Constraint &amp;constraint=Constraint(), const std::vector&lt; Real &gt; &amp;weights=std::vector&lt; Real &gt;())</argsstring>
        <name>calibrateVolatilitiesIterative</name>
        <qualifiedname>QuantLib::Gsr::calibrateVolatilitiesIterative</qualifiedname>
        <param>
          <type>const std::vector&lt; ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_black_calibration_helper" kindref="compound">BlackCalibrationHelper</ref> &gt; &gt; &amp;</type>
          <declname>helpers</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_optimization_method" kindref="compound">OptimizationMethod</ref> &amp;</type>
          <declname>method</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_end_criteria" kindref="compound">EndCriteria</ref> &amp;</type>
          <declname>endCriteria</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_constraint" kindref="compound">Constraint</ref> &amp;</type>
          <declname>constraint</declname>
          <defval><ref refid="class_quant_lib_1_1_constraint" kindref="compound">Constraint</ref>()</defval>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>weights</declname>
          <defval>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gsr.hpp" line="110" column="10" bodyfile="ql/models/shortrate/onefactormodels/gsr.hpp" bodystart="110" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_1a1f2c4d8f0d5823320a2f3229b5360b81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::Gsr::calibrateReversionsIterative</definition>
        <argsstring>(const std::vector&lt; ext::shared_ptr&lt; BlackCalibrationHelper &gt; &gt; &amp;helpers, OptimizationMethod &amp;method, const EndCriteria &amp;endCriteria, const Constraint &amp;constraint=Constraint(), const std::vector&lt; Real &gt; &amp;weights=std::vector&lt; Real &gt;())</argsstring>
        <name>calibrateReversionsIterative</name>
        <qualifiedname>QuantLib::Gsr::calibrateReversionsIterative</qualifiedname>
        <param>
          <type>const std::vector&lt; ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_black_calibration_helper" kindref="compound">BlackCalibrationHelper</ref> &gt; &gt; &amp;</type>
          <declname>helpers</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_optimization_method" kindref="compound">OptimizationMethod</ref> &amp;</type>
          <declname>method</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_end_criteria" kindref="compound">EndCriteria</ref> &amp;</type>
          <declname>endCriteria</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_constraint" kindref="compound">Constraint</ref> &amp;</type>
          <declname>constraint</declname>
          <defval><ref refid="class_quant_lib_1_1_constraint" kindref="compound">Constraint</ref>()</defval>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>weights</declname>
          <defval>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gsr.hpp" line="126" column="10" bodyfile="ql/models/shortrate/onefactormodels/gsr.hpp" bodystart="126" bodyend="137"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_1af520ad3118a7f4f93a9af15dcf42b2d9" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Gsr::numeraireImpl</definition>
        <argsstring>(Time t, Real y, const Handle&lt; YieldTermStructure &gt; &amp;yts) const override</argsstring>
        <name>numeraireImpl</name>
        <qualifiedname>QuantLib::Gsr::numeraireImpl</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_gaussian1d_model_1a51ca3a99898a9fabda8fe8a9b0de22cf">numeraireImpl</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>yts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gsr.hpp" line="140" column="10" bodyfile="ql/models/shortrate/onefactormodels/gsr.cpp" bodystart="204" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_1a7714ff28614ec8eec923cb65bae435a6" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::Gsr::zerobondImpl</definition>
        <argsstring>(Time T, Time t, Real y, const Handle&lt; YieldTermStructure &gt; &amp;yts) const override</argsstring>
        <name>zerobondImpl</name>
        <qualifiedname>QuantLib::Gsr::zerobondImpl</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_gaussian1d_model_1a08f011ee1847db6713b20f4b1cc2d08d">zerobondImpl</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>T</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &amp;</type>
          <declname>yts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gsr.hpp" line="142" column="10" bodyfile="ql/models/shortrate/onefactormodels/gsr.cpp" bodystart="180" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_1a02c295f6587d60028a66b3d180a8b361" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::Gsr::generateArguments</definition>
        <argsstring>() override</argsstring>
        <name>generateArguments</name>
        <qualifiedname>QuantLib::Gsr::generateArguments</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_calibrated_model_1a9282281fe5c1dbc558462648b72b6e18">generateArguments</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gsr.hpp" line="144" column="10" bodyfile="ql/models/shortrate/onefactormodels/gsr.hpp" bodystart="144" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_1aeab33a390e5811f180d68296aa38668e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::Gsr::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <qualifiedname>QuantLib::Gsr::update</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_observer_1a07905c55dca858470fcf4a1aea0005aa">update</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must be implemented in derived classes. An instance of Observer does not call this method directly: instead, it will be called by the observables the instance registered with when they need to notify any changes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gsr.hpp" line="149" column="10" bodyfile="ql/models/shortrate/onefactormodels/gsr.cpp" bodystart="92" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_1a6727fcb92ae273e667aaed986e9cd082" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::Gsr::performCalculations</definition>
        <argsstring>() const override</argsstring>
        <name>performCalculations</name>
        <qualifiedname>QuantLib::Gsr::performCalculations</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_gaussian1d_model_1ac299fb9c82685759700edcadc84b9f4c">performCalculations</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must implement any calculations which must be (re)done in order to calculate the desired results. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gsr.hpp" line="151" column="10" bodyfile="ql/models/shortrate/onefactormodels/gsr.hpp" bodystart="151" bodyend="154"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_1ab20d56030adacbbaa13802e499b0414d" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::Gsr::updateTimes</definition>
        <argsstring>() const</argsstring>
        <name>updateTimes</name>
        <qualifiedname>QuantLib::Gsr::updateTimes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gsr.hpp" line="157" column="10" bodyfile="ql/models/shortrate/onefactormodels/gsr.cpp" bodystart="98" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_1ab769e6cdc38822fbe6548acebdc917fa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::Gsr::updateVolatility</definition>
        <argsstring>()</argsstring>
        <name>updateVolatility</name>
        <qualifiedname>QuantLib::Gsr::updateVolatility</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gsr.hpp" line="158" column="10" bodyfile="ql/models/shortrate/onefactormodels/gsr.cpp" bodystart="117" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_1a897bbec026a873ebfd060478e199af8c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::Gsr::updateReversion</definition>
        <argsstring>()</argsstring>
        <name>updateReversion</name>
        <qualifiedname>QuantLib::Gsr::updateReversion</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gsr.hpp" line="159" column="10" bodyfile="ql/models/shortrate/onefactormodels/gsr.cpp" bodystart="124" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_gsr_1a877db11a808de85ed61550a94235ab8e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::Gsr::initialize</definition>
        <argsstring>(Real)</argsstring>
        <name>initialize</name>
        <qualifiedname>QuantLib::Gsr::initialize</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <defname>T</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/shortrate/onefactormodels/gsr.hpp" line="161" column="10" bodyfile="ql/models/shortrate/onefactormodels/gsr.cpp" bodystart="131" bodyend="178"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>One factor gsr model, formulation is in forward measure. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="7">
        <label>QuantLib::CalibratedModel</label>
        <link refid="class_quant_lib_1_1_calibrated_model"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::Gaussian1dModel</label>
        <link refid="class_quant_lib_1_1_gaussian1d_model"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::Gsr</label>
        <link refid="class_quant_lib_1_1_gsr"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="3">
        <label>QuantLib::TermStructureConsistentModel</label>
        <link refid="class_quant_lib_1_1_term_structure_consistent_model"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="9">
        <label>QuantLib::Array</label>
        <link refid="class_quant_lib_1_1_array"/>
      </node>
      <node id="8">
        <label>QuantLib::CalibratedModel</label>
        <link refid="class_quant_lib_1_1_calibrated_model"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>problemValues_</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="2">
        <label>QuantLib::Gaussian1dModel</label>
        <link refid="class_quant_lib_1_1_gaussian1d_model"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>evaluationDate_</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::Gsr</label>
        <link refid="class_quant_lib_1_1_gsr"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="3">
        <label>QuantLib::TermStructureConsistentModel</label>
        <link refid="class_quant_lib_1_1_term_structure_consistent_model"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/models/shortrate/onefactormodels/gsr.hpp" line="34" column="1" bodyfile="ql/models/shortrate/onefactormodels/gsr.hpp" bodystart="34" bodyend="187"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_lazy_object_1a02070ea7442d30625992c1711030d4b8" prot="protected" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>alwaysForward_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a17c9433135a259e4776baec66204a484" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>alwaysForwardNotifications</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a063e96ccbf2ebbdb39341822083bd37c" prot="protected" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>arguments_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a5244c7f83592375a0ea9048296435fd1" prot="protected" virt="virtual"><scope>QuantLib::Gsr</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a58b4986a80efa18634483a92c121e26e" prot="protected" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>calculated_</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1af2776521b1584d547ec2440833508677" prot="public" virt="virtual"><scope>QuantLib::Gsr</scope><name>calibrate</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a6368e7ce0867de464f64d7b104b79b85" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>CalibratedModel</name></member>
      <member refid="class_quant_lib_1_1_gsr_1a1f2c4d8f0d5823320a2f3229b5360b81" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>calibrateReversionsIterative</name></member>
      <member refid="class_quant_lib_1_1_gsr_1ac06e1241a0124aaf3dbb4c21497be461" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>calibrateVolatilitiesIterative</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a3b1198e322e93d700c2b48fe0cd888cf" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>constraint</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1add85b46f3e818f3916bd30eb85d877ef" prot="protected" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>constraint_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::Gsr</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a797a6b080b7a66d620758ff6fe34df39" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>endCriteria</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1a4191c13114b4c255bd15023fda112bb7" prot="protected" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>enforcesTodaysHistoricFixings_</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1a1a79a7d006514bc879b829fb7cce0b32" prot="protected" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>evaluationDate_</name></member>
      <member refid="class_quant_lib_1_1_gsr_1a8b04b0bfc767768fa3cb3877138c8344" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>FixedReversions</name></member>
      <member refid="class_quant_lib_1_1_gsr_1a9154dcd7a5ca97c64d1a4642c037e325" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>FixedVolatilities</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1afac6ee19c3107c453e1347dd8000e023" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>forwardFirstNotificationOnly</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1ab08758ac455bee935c59b26181a86307" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>forwardRate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7157f41e83f2c5d924f5c5bafda04d1d" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>freeze</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7bb721fe00c6854e602758aba629ab77" prot="protected" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>frozen_</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a66027503e827f56c83a5a60f8f066d84" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>functionEvaluation</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a6b9b9c042c526902626eead4de47e74c" prot="protected" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>functionEvaluation_</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1a48cf24f80b90b6f508f466b77fb2cc5b" prot="protected" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>Gaussian1dModel</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1a2606237f8756ca69c5206f5d8d1cd607" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>gaussianPolynomialIntegral</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1a9dc6c696de6c09d568fb612210771168" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>gaussianShiftedPolynomialIntegral</name></member>
      <member refid="class_quant_lib_1_1_gsr_1a02c295f6587d60028a66b3d180a8b361" prot="protected" virt="virtual"><scope>QuantLib::Gsr</scope><name>generateArguments</name></member>
      <member refid="class_quant_lib_1_1_gsr_1a90031dd0d909a09b4e6a352144106c0a" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>Gsr</name></member>
      <member refid="class_quant_lib_1_1_gsr_1a8650f3024d4da8c7709e2c669b5e1008" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>Gsr</name></member>
      <member refid="class_quant_lib_1_1_gsr_1a65d3adc6b5aae29c37bf2bf136d40c2e" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>Gsr</name></member>
      <member refid="class_quant_lib_1_1_gsr_1a99a490e9acf1971286963dc75af5080c" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>Gsr</name></member>
      <member refid="class_quant_lib_1_1_gsr_1a877db11a808de85ed61550a94235ab8e" prot="private" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>initialize</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a0a7c5d42815a4e16ee2158e24dbfc748" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>isCalculated</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a26f18f4ff7faaaebd8eae50e064b493e" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>LazyObject</name></member>
      <member refid="class_quant_lib_1_1_gsr_1a765fd4491d800f0ccd10831ac9445981" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>MoveReversion</name></member>
      <member refid="class_quant_lib_1_1_gsr_1a24f17db21cf3df4ae80bbc90dde1009e" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>MoveVolatility</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1a8a1a2254ee3af1847f4834502fe633da" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>numeraire</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1a8dee7c5e3980bd1705ca37be7bfcdf20" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>numeraire</name></member>
      <member refid="class_quant_lib_1_1_gsr_1af520ad3118a7f4f93a9af15dcf42b2d9" prot="protected" virt="virtual"><scope>QuantLib::Gsr</scope><name>numeraireImpl</name></member>
      <member refid="class_quant_lib_1_1_gsr_1a6373f1f8dabce3161ee63e30313c771f" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>numeraireTime</name></member>
      <member refid="class_quant_lib_1_1_gsr_1ae9590b2578d914dc9a1512464540b73d" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>numeraireTime</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructureConsistentModel::"><scope>QuantLib::Gsr</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructureConsistentModel::"><scope>QuantLib::Gsr</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::Gsr</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::Gsr</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructureConsistentModel::"><scope>QuantLib::Gsr</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::QuantLib::Observer::"><scope>QuantLib::Gsr</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1adae9352d30045e32f5382fa79a0bc88c" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>params</name></member>
      <member refid="class_quant_lib_1_1_gsr_1a6727fcb92ae273e667aaed986e9cd082" prot="protected" virt="virtual"><scope>QuantLib::Gsr</scope><name>performCalculations</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1ab7766a4e575c67e8f1e00f98bfe2e8c6" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>problemValues</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a4341c3bd6dc46bc9380bb4d52c032d25" prot="protected" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>problemValues_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a70c9b24e50132408d8d9ce4f6674662a" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>recalculate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_gsr_1a2c83f0f3ad9941f35225bd615242a7cb" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>reversion</name></member>
      <member refid="class_quant_lib_1_1_gsr_1afd15f13f343d374a968bc04b3cb312a5" prot="private" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>reversion_</name></member>
      <member refid="class_quant_lib_1_1_gsr_1a51dbe6e7eec287f2e5398569517d4999" prot="private" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>reversionObserver_</name></member>
      <member refid="class_quant_lib_1_1_gsr_1ac5d432cb690ce5dae461f50e9d8bdd16" prot="private" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>reversions_</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a018930665d7468824b0f1800b7472eb6" prot="public" virt="virtual"><scope>QuantLib::Gsr</scope><name>setParams</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a91f2d3c3d84fbe420b0d842de338037e" prot="protected" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>shortRateEndCriteria_</name></member>
      <member refid="class_quant_lib_1_1_gsr_1a34e773902096b4ba0f30e7f26f449716" prot="private" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>sigma_</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1a18b9a69958760d4d8c4e5b8c1aa33672" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>stateProcess</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1a230e77edf5f6c60a01a15ea37d822b8c" prot="protected" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>stateProcess_</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1a36a5a83c73650f95f1f98df1578c8f51" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>swapAnnuity</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1a09972042f535a7f5f1245064970e80b0" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>swapRate</name></member>
      <member refid="class_quant_lib_1_1_term_structure_consistent_model_1a3035748f8b1b618e13a45428e3f55f90" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>termStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_consistent_model_1a20d3cd0bfeafc1ed325eb7e5747943a7" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>TermStructureConsistentModel</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1adf55b7dbb1184a0383d61c7a61c9474c" prot="protected" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>underlyingSwap</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a2e0e4786666453024b9d4e0761f2770b" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>unfreeze</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_gsr_1aeab33a390e5811f180d68296aa38668e" prot="protected" virt="virtual"><scope>QuantLib::Gsr</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_gsr_1a897bbec026a873ebfd060478e199af8c" prot="private" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>updateReversion</name></member>
      <member refid="class_quant_lib_1_1_gsr_1ab20d56030adacbbaa13802e499b0414d" prot="private" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>updateTimes</name></member>
      <member refid="class_quant_lib_1_1_gsr_1ab769e6cdc38822fbe6548acebdc917fa" prot="private" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>updateVolatility</name></member>
      <member refid="class_quant_lib_1_1_calibrated_model_1a2652178a7f9d28ca4e213f76b55c87e9" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>value</name></member>
      <member refid="class_quant_lib_1_1_gsr_1a28654cbe5bc876d129b78f753af4d6c8" prot="private" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>volatilities_</name></member>
      <member refid="class_quant_lib_1_1_gsr_1ab008502641a6f234288d778088de7416" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>volatility</name></member>
      <member refid="class_quant_lib_1_1_gsr_1a2eddb9028383c27f8de855d46c663671" prot="private" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>volatilityObserver_</name></member>
      <member refid="class_quant_lib_1_1_gsr_1a0811c6663445527b2aafb3de0b39e86b" prot="private" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>volstepdates_</name></member>
      <member refid="class_quant_lib_1_1_gsr_1a89f03e74cf0fe043e73e3cd78b425a9e" prot="private" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>volsteptimes_</name></member>
      <member refid="class_quant_lib_1_1_gsr_1a88d3024a7f29b8a89b1f19be22efb887" prot="private" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>volsteptimesArray_</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1af03811fbee0d8d4e91790a76a8a862a0" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>yGrid</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1ace852a9cba4468245c8132631d6355d7" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>zerobond</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1a971e93d2e7dc87a72828ecdba8ad47f8" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>zerobond</name></member>
      <member refid="class_quant_lib_1_1_gsr_1a7714ff28614ec8eec923cb65bae435a6" prot="protected" virt="virtual"><scope>QuantLib::Gsr</scope><name>zerobondImpl</name></member>
      <member refid="class_quant_lib_1_1_gaussian1d_model_1a3d5903550581a1ed1705aebbf548a251" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>zerobondOption</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a9d719c43bb627177a90d7d12324a2d6e" prot="public" virt="non-virtual"><scope>QuantLib::Gsr</scope><name>~LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::Gsr</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::Gsr</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

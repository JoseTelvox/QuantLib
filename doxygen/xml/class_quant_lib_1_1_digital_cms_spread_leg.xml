<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_digital_cms_spread_leg" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::DigitalCmsSpreadLeg</compoundname>
    <includes refid="digitalcmsspreadcoupon_8hpp" local="no">digitalcmsspreadcoupon.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_digital_cms_spread_leg_1a42577cca22de7f418cd7e1fe6d297877" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_schedule" kindref="compound">Schedule</ref></type>
        <definition>Schedule QuantLib::DigitalCmsSpreadLeg::schedule_</definition>
        <argsstring></argsstring>
        <name>schedule_</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::schedule_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="88" column="18" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_digital_cms_spread_leg_1ada288a4baa5e269fb2d141c8a215ff2a" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_swap_spread_index" kindref="compound">SwapSpreadIndex</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;SwapSpreadIndex&gt; QuantLib::DigitalCmsSpreadLeg::index_</definition>
        <argsstring></argsstring>
        <name>index_</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::index_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="89" column="25" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_digital_cms_spread_leg_1a364689325faa79c62985d5c8c6fd0868" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::DigitalCmsSpreadLeg::notionals_</definition>
        <argsstring></argsstring>
        <name>notionals_</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::notionals_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="90" column="21" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_digital_cms_spread_leg_1acf88a995176be8b14f3ad6db537ec6f2" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref></type>
        <definition>DayCounter QuantLib::DigitalCmsSpreadLeg::paymentDayCounter_</definition>
        <argsstring></argsstring>
        <name>paymentDayCounter_</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::paymentDayCounter_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="91" column="20" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_digital_cms_spread_leg_1ad3517f7cd84d01eb65573011556ab7f0" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
        <definition>BusinessDayConvention QuantLib::DigitalCmsSpreadLeg::paymentAdjustment_</definition>
        <argsstring></argsstring>
        <name>paymentAdjustment_</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::paymentAdjustment_</qualifiedname>
        <initializer>= <ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881ad881bac893a17d75191f0041eefda956" kindref="member">Following</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="92" column="31" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_digital_cms_spread_leg_1a6db17480646128cea83f359f9b67d51b" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref> &gt;</type>
        <definition>std::vector&lt;Natural&gt; QuantLib::DigitalCmsSpreadLeg::fixingDays_</definition>
        <argsstring></argsstring>
        <name>fixingDays_</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::fixingDays_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="93" column="21" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_digital_cms_spread_leg_1a7f88dcb19baf2245c2bdc05b6c8659b5" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::DigitalCmsSpreadLeg::gearings_</definition>
        <argsstring></argsstring>
        <name>gearings_</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::gearings_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="94" column="21" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_digital_cms_spread_leg_1ae632e6770be160efc9a9e5e7c603b3f6" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1ad61d2e1a3f01154233de0d5fbb85177c" kindref="member">Spread</ref> &gt;</type>
        <definition>std::vector&lt;Spread&gt; QuantLib::DigitalCmsSpreadLeg::spreads_</definition>
        <argsstring></argsstring>
        <name>spreads_</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::spreads_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="95" column="21" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_digital_cms_spread_leg_1a13f537e9ae4183d7e0cf8fceee508963" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::DigitalCmsSpreadLeg::inArrears_</definition>
        <argsstring></argsstring>
        <name>inArrears_</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::inArrears_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="96" column="14" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_digital_cms_spread_leg_1a27c367889e617e96c31c552a73eb8664" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>std::vector&lt;Rate&gt; QuantLib::DigitalCmsSpreadLeg::callStrikes_</definition>
        <argsstring></argsstring>
        <name>callStrikes_</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::callStrikes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="97" column="21" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_digital_cms_spread_leg_1a534203ab172f7a9eb897cdeeda5669b0" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>std::vector&lt;Rate&gt; QuantLib::DigitalCmsSpreadLeg::callPayoffs_</definition>
        <argsstring></argsstring>
        <name>callPayoffs_</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::callPayoffs_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="97" column="34" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_digital_cms_spread_leg_1ad9c51951bafa8e9e8772015331d53c9c" prot="private" static="no" mutable="no">
        <type>Position::Type</type>
        <definition>Position::Type QuantLib::DigitalCmsSpreadLeg::longCallOption_</definition>
        <argsstring></argsstring>
        <name>longCallOption_</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::longCallOption_</qualifiedname>
        <initializer>= Position::Long</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="98" column="24" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_digital_cms_spread_leg_1a28fbcf71c3398121ea7ac47c242cf546" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::DigitalCmsSpreadLeg::callATM_</definition>
        <argsstring></argsstring>
        <name>callATM_</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::callATM_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="99" column="14" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_digital_cms_spread_leg_1a87d1222e6bc83d62ffcd98c58922d289" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>std::vector&lt;Rate&gt; QuantLib::DigitalCmsSpreadLeg::putStrikes_</definition>
        <argsstring></argsstring>
        <name>putStrikes_</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::putStrikes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="100" column="21" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_digital_cms_spread_leg_1ac7eb12c51ed72261808fbc3a8ae451c9" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>std::vector&lt;Rate&gt; QuantLib::DigitalCmsSpreadLeg::putPayoffs_</definition>
        <argsstring></argsstring>
        <name>putPayoffs_</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::putPayoffs_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="100" column="33" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_digital_cms_spread_leg_1ad5d97555e8f428f191b54c1ed78d6a05" prot="private" static="no" mutable="no">
        <type>Position::Type</type>
        <definition>Position::Type QuantLib::DigitalCmsSpreadLeg::longPutOption_</definition>
        <argsstring></argsstring>
        <name>longPutOption_</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::longPutOption_</qualifiedname>
        <initializer>= Position::Long</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="101" column="24" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_digital_cms_spread_leg_1a2235b7196c2e94496c7c2a7c8695acb7" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::DigitalCmsSpreadLeg::putATM_</definition>
        <argsstring></argsstring>
        <name>putATM_</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::putATM_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="102" column="14" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_digital_cms_spread_leg_1a53b2c86e096162c2fedd9f21dcb2c3f0" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_digital_replication" kindref="compound">DigitalReplication</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;DigitalReplication&gt; QuantLib::DigitalCmsSpreadLeg::replication_</definition>
        <argsstring></argsstring>
        <name>replication_</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::replication_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="103" column="25" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_digital_cms_spread_leg_1ac181579baffa88808288f2083b1fb4f3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::DigitalCmsSpreadLeg::nakedOption_</definition>
        <argsstring></argsstring>
        <name>nakedOption_</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::nakedOption_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="104" column="14" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_digital_cms_spread_leg_1a0b33a22784bbd623ea2c422f3b5fbf55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::DigitalCmsSpreadLeg::DigitalCmsSpreadLeg</definition>
        <argsstring>(Schedule schedule, ext::shared_ptr&lt; SwapSpreadIndex &gt; index)</argsstring>
        <name>DigitalCmsSpreadLeg</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::DigitalCmsSpreadLeg</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_schedule" kindref="compound">Schedule</ref></type>
          <declname>schedule</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_swap_spread_index" kindref="compound">SwapSpreadIndex</ref> &gt;</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="59" column="9" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.cpp" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_digital_cms_spread_leg_1a888785dc26e8efe34a38679ae74949be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_digital_cms_spread_leg" kindref="compound">DigitalCmsSpreadLeg</ref> &amp;</type>
        <definition>DigitalCmsSpreadLeg &amp; QuantLib::DigitalCmsSpreadLeg::withNotionals</definition>
        <argsstring>(Real notional)</argsstring>
        <name>withNotionals</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::withNotionals</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>notional</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="60" column="29" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.cpp" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_digital_cms_spread_leg_1a85fa8378cf9824e7813615d780917f7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_digital_cms_spread_leg" kindref="compound">DigitalCmsSpreadLeg</ref> &amp;</type>
        <definition>DigitalCmsSpreadLeg &amp; QuantLib::DigitalCmsSpreadLeg::withNotionals</definition>
        <argsstring>(const std::vector&lt; Real &gt; &amp;notionals)</argsstring>
        <name>withNotionals</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::withNotionals</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>notionals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="61" column="29" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.cpp" bodystart="61" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_digital_cms_spread_leg_1a88c59e173bafef728d9b2ea0f32f2e0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_digital_cms_spread_leg" kindref="compound">DigitalCmsSpreadLeg</ref> &amp;</type>
        <definition>DigitalCmsSpreadLeg &amp; QuantLib::DigitalCmsSpreadLeg::withPaymentDayCounter</definition>
        <argsstring>(const DayCounter &amp;)</argsstring>
        <name>withPaymentDayCounter</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::withPaymentDayCounter</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <defname>dayCounter</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="62" column="29" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.cpp" bodystart="67" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_digital_cms_spread_leg_1ac6bc13154b3dc7ae79d3ae1001412971" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_digital_cms_spread_leg" kindref="compound">DigitalCmsSpreadLeg</ref> &amp;</type>
        <definition>DigitalCmsSpreadLeg &amp; QuantLib::DigitalCmsSpreadLeg::withPaymentAdjustment</definition>
        <argsstring>(BusinessDayConvention)</argsstring>
        <name>withPaymentAdjustment</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::withPaymentAdjustment</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
          <defname>convention</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="63" column="29" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.cpp" bodystart="73" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_digital_cms_spread_leg_1a44c033a3322eae22fc93a0a98f3e3a05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_digital_cms_spread_leg" kindref="compound">DigitalCmsSpreadLeg</ref> &amp;</type>
        <definition>DigitalCmsSpreadLeg &amp; QuantLib::DigitalCmsSpreadLeg::withFixingDays</definition>
        <argsstring>(Natural fixingDays)</argsstring>
        <name>withFixingDays</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::withFixingDays</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>fixingDays</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="64" column="29" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.cpp" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_digital_cms_spread_leg_1ab2488e3adfceea6d90aa54bca4d13374" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_digital_cms_spread_leg" kindref="compound">DigitalCmsSpreadLeg</ref> &amp;</type>
        <definition>DigitalCmsSpreadLeg &amp; QuantLib::DigitalCmsSpreadLeg::withFixingDays</definition>
        <argsstring>(const std::vector&lt; Natural &gt; &amp;fixingDays)</argsstring>
        <name>withFixingDays</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::withFixingDays</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref> &gt; &amp;</type>
          <declname>fixingDays</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="65" column="29" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.cpp" bodystart="84" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_digital_cms_spread_leg_1aef72c99a385e6737fb68513dd5ba6be4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_digital_cms_spread_leg" kindref="compound">DigitalCmsSpreadLeg</ref> &amp;</type>
        <definition>DigitalCmsSpreadLeg &amp; QuantLib::DigitalCmsSpreadLeg::withGearings</definition>
        <argsstring>(Real gearing)</argsstring>
        <name>withGearings</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::withGearings</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>gearing</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="66" column="29" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.cpp" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_digital_cms_spread_leg_1ab8ef63efb35ab9731118f1f2d2775738" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_digital_cms_spread_leg" kindref="compound">DigitalCmsSpreadLeg</ref> &amp;</type>
        <definition>DigitalCmsSpreadLeg &amp; QuantLib::DigitalCmsSpreadLeg::withGearings</definition>
        <argsstring>(const std::vector&lt; Real &gt; &amp;gearings)</argsstring>
        <name>withGearings</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::withGearings</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>gearings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="67" column="29" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.cpp" bodystart="95" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_digital_cms_spread_leg_1af7bae87a0d3fbdf55c9a1b28f4e1b9b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_digital_cms_spread_leg" kindref="compound">DigitalCmsSpreadLeg</ref> &amp;</type>
        <definition>DigitalCmsSpreadLeg &amp; QuantLib::DigitalCmsSpreadLeg::withSpreads</definition>
        <argsstring>(Spread spread)</argsstring>
        <name>withSpreads</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::withSpreads</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1ad61d2e1a3f01154233de0d5fbb85177c" kindref="member">Spread</ref></type>
          <declname>spread</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="68" column="29" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.cpp" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_digital_cms_spread_leg_1a594e83058ef0118198f27251f878f8bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_digital_cms_spread_leg" kindref="compound">DigitalCmsSpreadLeg</ref> &amp;</type>
        <definition>DigitalCmsSpreadLeg &amp; QuantLib::DigitalCmsSpreadLeg::withSpreads</definition>
        <argsstring>(const std::vector&lt; Spread &gt; &amp;spreads)</argsstring>
        <name>withSpreads</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::withSpreads</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1ad61d2e1a3f01154233de0d5fbb85177c" kindref="member">Spread</ref> &gt; &amp;</type>
          <declname>spreads</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="69" column="29" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.cpp" bodystart="106" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_digital_cms_spread_leg_1a80193bfdb4ef73d05f17056f5b032dc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_digital_cms_spread_leg" kindref="compound">DigitalCmsSpreadLeg</ref> &amp;</type>
        <definition>DigitalCmsSpreadLeg &amp; QuantLib::DigitalCmsSpreadLeg::inArrears</definition>
        <argsstring>(bool flag=true)</argsstring>
        <name>inArrears</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::inArrears</qualifiedname>
        <param>
          <type>bool</type>
          <declname>flag</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="70" column="29" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.cpp" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_digital_cms_spread_leg_1aa750d07455fc437e4594d9e9b5b9a4a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_digital_cms_spread_leg" kindref="compound">DigitalCmsSpreadLeg</ref> &amp;</type>
        <definition>DigitalCmsSpreadLeg &amp; QuantLib::DigitalCmsSpreadLeg::withCallStrikes</definition>
        <argsstring>(Rate strike)</argsstring>
        <name>withCallStrikes</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::withCallStrikes</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="71" column="29" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.cpp" bodystart="117" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_digital_cms_spread_leg_1a397a4f208a23ab38517168ff060e9b52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_digital_cms_spread_leg" kindref="compound">DigitalCmsSpreadLeg</ref> &amp;</type>
        <definition>DigitalCmsSpreadLeg &amp; QuantLib::DigitalCmsSpreadLeg::withCallStrikes</definition>
        <argsstring>(const std::vector&lt; Rate &gt; &amp;strikes)</argsstring>
        <name>withCallStrikes</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::withCallStrikes</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
          <declname>strikes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="72" column="29" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.cpp" bodystart="122" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_digital_cms_spread_leg_1ac781ebc1163036a25b076335ce8c51da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_digital_cms_spread_leg" kindref="compound">DigitalCmsSpreadLeg</ref> &amp;</type>
        <definition>DigitalCmsSpreadLeg &amp; QuantLib::DigitalCmsSpreadLeg::withLongCallOption</definition>
        <argsstring>(Position::Type)</argsstring>
        <name>withLongCallOption</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::withLongCallOption</qualifiedname>
        <param>
          <type>Position::Type</type>
          <defname>type</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="73" column="29" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.cpp" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_digital_cms_spread_leg_1a24b982091ca25b6815f85e7303ecf442" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_digital_cms_spread_leg" kindref="compound">DigitalCmsSpreadLeg</ref> &amp;</type>
        <definition>DigitalCmsSpreadLeg &amp; QuantLib::DigitalCmsSpreadLeg::withCallATM</definition>
        <argsstring>(bool flag=true)</argsstring>
        <name>withCallATM</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::withCallATM</qualifiedname>
        <param>
          <type>bool</type>
          <declname>flag</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="74" column="29" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.cpp" bodystart="133" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_digital_cms_spread_leg_1aee517309afff094b190a58c66e44b2cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_digital_cms_spread_leg" kindref="compound">DigitalCmsSpreadLeg</ref> &amp;</type>
        <definition>DigitalCmsSpreadLeg &amp; QuantLib::DigitalCmsSpreadLeg::withCallPayoffs</definition>
        <argsstring>(Rate payoff)</argsstring>
        <name>withCallPayoffs</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::withCallPayoffs</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>payoff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="75" column="29" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.cpp" bodystart="138" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_digital_cms_spread_leg_1a2537be2ce057c36d6154a60d91fed504" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_digital_cms_spread_leg" kindref="compound">DigitalCmsSpreadLeg</ref> &amp;</type>
        <definition>DigitalCmsSpreadLeg &amp; QuantLib::DigitalCmsSpreadLeg::withCallPayoffs</definition>
        <argsstring>(const std::vector&lt; Rate &gt; &amp;payoffs)</argsstring>
        <name>withCallPayoffs</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::withCallPayoffs</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
          <declname>payoffs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="76" column="29" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.cpp" bodystart="143" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_digital_cms_spread_leg_1a25e6681375d1d2210f90975909fc5697" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_digital_cms_spread_leg" kindref="compound">DigitalCmsSpreadLeg</ref> &amp;</type>
        <definition>DigitalCmsSpreadLeg &amp; QuantLib::DigitalCmsSpreadLeg::withPutStrikes</definition>
        <argsstring>(Rate strike)</argsstring>
        <name>withPutStrikes</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::withPutStrikes</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>strike</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="77" column="29" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.cpp" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_digital_cms_spread_leg_1a5ae9fc1c1d2ecbe875aa67061ab1d3c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_digital_cms_spread_leg" kindref="compound">DigitalCmsSpreadLeg</ref> &amp;</type>
        <definition>DigitalCmsSpreadLeg &amp; QuantLib::DigitalCmsSpreadLeg::withPutStrikes</definition>
        <argsstring>(const std::vector&lt; Rate &gt; &amp;strikes)</argsstring>
        <name>withPutStrikes</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::withPutStrikes</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
          <declname>strikes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="78" column="29" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.cpp" bodystart="154" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_digital_cms_spread_leg_1a46660beb4edbd0ee124feb45c5bd2d79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_digital_cms_spread_leg" kindref="compound">DigitalCmsSpreadLeg</ref> &amp;</type>
        <definition>DigitalCmsSpreadLeg &amp; QuantLib::DigitalCmsSpreadLeg::withLongPutOption</definition>
        <argsstring>(Position::Type)</argsstring>
        <name>withLongPutOption</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::withLongPutOption</qualifiedname>
        <param>
          <type>Position::Type</type>
          <defname>type</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="79" column="29" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.cpp" bodystart="160" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_digital_cms_spread_leg_1af16e3171a67da47ac80657f1620bd729" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_digital_cms_spread_leg" kindref="compound">DigitalCmsSpreadLeg</ref> &amp;</type>
        <definition>DigitalCmsSpreadLeg &amp; QuantLib::DigitalCmsSpreadLeg::withPutATM</definition>
        <argsstring>(bool flag=true)</argsstring>
        <name>withPutATM</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::withPutATM</qualifiedname>
        <param>
          <type>bool</type>
          <declname>flag</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="80" column="29" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.cpp" bodystart="165" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_digital_cms_spread_leg_1afb3bd1ed875b157f0639f6427df76883" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_digital_cms_spread_leg" kindref="compound">DigitalCmsSpreadLeg</ref> &amp;</type>
        <definition>DigitalCmsSpreadLeg &amp; QuantLib::DigitalCmsSpreadLeg::withPutPayoffs</definition>
        <argsstring>(Rate payoff)</argsstring>
        <name>withPutPayoffs</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::withPutPayoffs</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>payoff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="81" column="29" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.cpp" bodystart="170" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_digital_cms_spread_leg_1a536814ef5b723cad95ace666066446aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_digital_cms_spread_leg" kindref="compound">DigitalCmsSpreadLeg</ref> &amp;</type>
        <definition>DigitalCmsSpreadLeg &amp; QuantLib::DigitalCmsSpreadLeg::withPutPayoffs</definition>
        <argsstring>(const std::vector&lt; Rate &gt; &amp;payoffs)</argsstring>
        <name>withPutPayoffs</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::withPutPayoffs</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
          <declname>payoffs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="82" column="29" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.cpp" bodystart="175" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_digital_cms_spread_leg_1ac1717e8ba884e89ff08a99432d2ebf6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_digital_cms_spread_leg" kindref="compound">DigitalCmsSpreadLeg</ref> &amp;</type>
        <definition>DigitalCmsSpreadLeg &amp; QuantLib::DigitalCmsSpreadLeg::withReplication</definition>
        <argsstring>(const ext::shared_ptr&lt; DigitalReplication &gt; &amp;)</argsstring>
        <name>withReplication</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::withReplication</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_digital_replication" kindref="compound">DigitalReplication</ref> &gt; &amp;</type>
          <defname>replication</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="83" column="29" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.cpp" bodystart="181" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_digital_cms_spread_leg_1a3143394199e04e1f25965efcfe5c5e14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_digital_cms_spread_leg" kindref="compound">DigitalCmsSpreadLeg</ref> &amp;</type>
        <definition>DigitalCmsSpreadLeg &amp; QuantLib::DigitalCmsSpreadLeg::withNakedOption</definition>
        <argsstring>(bool nakedOption=true)</argsstring>
        <name>withNakedOption</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::withNakedOption</qualifiedname>
        <param>
          <type>bool</type>
          <declname>nakedOption</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="84" column="29" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.cpp" bodystart="187" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_digital_cms_spread_leg_1a4236a3ab0b6c4143bfa779a44af56209" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::DigitalCmsSpreadLeg::operator Leg</definition>
        <argsstring>() const</argsstring>
        <name>operator Leg</name>
        <qualifiedname>QuantLib::DigitalCmsSpreadLeg::operator Leg</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="86" column="9" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.cpp" bodystart="192" bodyend="202"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>helper class building a sequence of digital ibor-rate coupons </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" line="57" column="5" bodyfile="ql/experimental/coupons/digitalcmsspreadcoupon.hpp" bodystart="57" bodyend="105"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1a28fbcf71c3398121ea7ac47c242cf546" prot="private" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>callATM_</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1a534203ab172f7a9eb897cdeeda5669b0" prot="private" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>callPayoffs_</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1a27c367889e617e96c31c552a73eb8664" prot="private" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>callStrikes_</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1a0b33a22784bbd623ea2c422f3b5fbf55" prot="public" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>DigitalCmsSpreadLeg</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1a6db17480646128cea83f359f9b67d51b" prot="private" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>fixingDays_</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1a7f88dcb19baf2245c2bdc05b6c8659b5" prot="private" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>gearings_</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1a80193bfdb4ef73d05f17056f5b032dc9" prot="public" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>inArrears</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1a13f537e9ae4183d7e0cf8fceee508963" prot="private" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>inArrears_</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1ada288a4baa5e269fb2d141c8a215ff2a" prot="private" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>index_</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1ad9c51951bafa8e9e8772015331d53c9c" prot="private" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>longCallOption_</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1ad5d97555e8f428f191b54c1ed78d6a05" prot="private" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>longPutOption_</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1ac181579baffa88808288f2083b1fb4f3" prot="private" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>nakedOption_</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1a364689325faa79c62985d5c8c6fd0868" prot="private" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>notionals_</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1a4236a3ab0b6c4143bfa779a44af56209" prot="public" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>operator Leg</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1ad3517f7cd84d01eb65573011556ab7f0" prot="private" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>paymentAdjustment_</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1acf88a995176be8b14f3ad6db537ec6f2" prot="private" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>paymentDayCounter_</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1a2235b7196c2e94496c7c2a7c8695acb7" prot="private" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>putATM_</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1ac7eb12c51ed72261808fbc3a8ae451c9" prot="private" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>putPayoffs_</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1a87d1222e6bc83d62ffcd98c58922d289" prot="private" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>putStrikes_</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1a53b2c86e096162c2fedd9f21dcb2c3f0" prot="private" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>replication_</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1a42577cca22de7f418cd7e1fe6d297877" prot="private" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>schedule_</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1ae632e6770be160efc9a9e5e7c603b3f6" prot="private" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>spreads_</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1a24b982091ca25b6815f85e7303ecf442" prot="public" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>withCallATM</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1aee517309afff094b190a58c66e44b2cd" prot="public" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>withCallPayoffs</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1a2537be2ce057c36d6154a60d91fed504" prot="public" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>withCallPayoffs</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1aa750d07455fc437e4594d9e9b5b9a4a7" prot="public" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>withCallStrikes</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1a397a4f208a23ab38517168ff060e9b52" prot="public" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>withCallStrikes</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1a44c033a3322eae22fc93a0a98f3e3a05" prot="public" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>withFixingDays</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1ab2488e3adfceea6d90aa54bca4d13374" prot="public" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>withFixingDays</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1aef72c99a385e6737fb68513dd5ba6be4" prot="public" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>withGearings</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1ab8ef63efb35ab9731118f1f2d2775738" prot="public" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>withGearings</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1ac781ebc1163036a25b076335ce8c51da" prot="public" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>withLongCallOption</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1a46660beb4edbd0ee124feb45c5bd2d79" prot="public" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>withLongPutOption</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1a3143394199e04e1f25965efcfe5c5e14" prot="public" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>withNakedOption</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1a888785dc26e8efe34a38679ae74949be" prot="public" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>withNotionals</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1a85fa8378cf9824e7813615d780917f7f" prot="public" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>withNotionals</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1ac6bc13154b3dc7ae79d3ae1001412971" prot="public" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>withPaymentAdjustment</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1a88c59e173bafef728d9b2ea0f32f2e0a" prot="public" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>withPaymentDayCounter</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1af16e3171a67da47ac80657f1620bd729" prot="public" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>withPutATM</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1afb3bd1ed875b157f0639f6427df76883" prot="public" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>withPutPayoffs</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1a536814ef5b723cad95ace666066446aa" prot="public" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>withPutPayoffs</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1a25e6681375d1d2210f90975909fc5697" prot="public" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>withPutStrikes</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1a5ae9fc1c1d2ecbe875aa67061ab1d3c6" prot="public" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>withPutStrikes</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1ac1717e8ba884e89ff08a99432d2ebf6e" prot="public" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>withReplication</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1af7bae87a0d3fbdf55c9a1b28f4e1b9b3" prot="public" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>withSpreads</name></member>
      <member refid="class_quant_lib_1_1_digital_cms_spread_leg_1a594e83058ef0118198f27251f878f8bd" prot="public" virt="non-virtual"><scope>QuantLib::DigitalCmsSpreadLeg</scope><name>withSpreads</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

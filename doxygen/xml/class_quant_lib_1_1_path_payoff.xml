<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_path_payoff" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::PathPayoff</compoundname>
    <derivedcompoundref refid="class_quant_lib_1_1_adapted_path_payoff" prot="public" virt="non-virtual">QuantLib::AdaptedPathPayoff</derivedcompoundref>
    <includes refid="pathpayoff_8hpp" local="no">pathpayoff.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Payoff interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_path_payoff_1a5f80b3f28c9ab16267aa017dfaf463e3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string QuantLib::PathPayoff::name</definition>
        <argsstring>() const =0</argsstring>
        <name>name</name>
        <qualifiedname>QuantLib::PathPayoff::name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="warning"><para>This method is used for output and comparison between payoffs. It is <bold>not</bold> meant to be used for writing switch-on-type code. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/pathpayoff.hpp" line="45" column="29"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_path_payoff_1a7fb09497250b929502c175ff2d6d29c2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string QuantLib::PathPayoff::description</definition>
        <argsstring>() const =0</argsstring>
        <name>description</name>
        <qualifiedname>QuantLib::PathPayoff::description</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/pathpayoff.hpp" line="46" column="29"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_path_payoff_1a11c4029518bb309bf04bf0510f1ab8fe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void QuantLib::PathPayoff::value</definition>
        <argsstring>(const Matrix &amp;path, const std::vector&lt; Handle&lt; YieldTermStructure &gt; &gt; &amp;forwardTermStructures, Array &amp;payments, Array &amp;exercises, std::vector&lt; Array &gt; &amp;states) const =0</argsstring>
        <name>value</name>
        <qualifiedname>QuantLib::PathPayoff::value</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_adapted_path_payoff_1a29796f11f6f4b5670f0f6b2c2a9d2124">value</reimplementedby>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt; &gt; &amp;</type>
          <declname>forwardTermStructures</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>payments</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>exercises</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &gt; &amp;</type>
          <declname>states</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/pathpayoff.hpp" line="61" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_path_payoff_1a5a715c52b72f166b5f7570434cf8259f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>virtual Size QuantLib::PathPayoff::basisSystemDimension</definition>
        <argsstring>() const =0</argsstring>
        <name>basisSystemDimension</name>
        <qualifiedname>QuantLib::PathPayoff::basisSystemDimension</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/pathpayoff.hpp" line="72" column="22"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Visitability</header>
      <memberdef kind="function" id="class_quant_lib_1_1_path_payoff_1a3d8581999f74e28916a6b7b05b6e67bb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::PathPayoff::accept</definition>
        <argsstring>(AcyclicVisitor &amp;)</argsstring>
        <name>accept</name>
        <qualifiedname>QuantLib::PathPayoff::accept</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_acyclic_visitor" kindref="compound">AcyclicVisitor</ref> &amp;</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/pathpayoff.hpp" line="77" column="22" bodyfile="ql/experimental/mcbasket/pathpayoff.hpp" bodystart="84" bodyend="90"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_path_payoff_1a0584ec00e50e0391f5bb7471be435040" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual QuantLib::PathPayoff::~PathPayoff</definition>
        <argsstring>()=default</argsstring>
        <name>~PathPayoff</name>
        <qualifiedname>QuantLib::PathPayoff::~PathPayoff</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/mcbasket/pathpayoff.hpp" line="38" column="17"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Abstract base class for path-dependent option payoffs. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::AdaptedPathPayoff</label>
        <link refid="class_quant_lib_1_1_adapted_path_payoff"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::PathPayoff</label>
        <link refid="class_quant_lib_1_1_path_payoff"/>
      </node>
    </inheritancegraph>
    <location file="ql/experimental/mcbasket/pathpayoff.hpp" line="36" column="5" bodyfile="ql/experimental/mcbasket/pathpayoff.hpp" bodystart="36" bodyend="79"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_path_payoff_1a3d8581999f74e28916a6b7b05b6e67bb" prot="public" virt="virtual"><scope>QuantLib::PathPayoff</scope><name>accept</name></member>
      <member refid="class_quant_lib_1_1_path_payoff_1a5a715c52b72f166b5f7570434cf8259f" prot="public" virt="pure-virtual"><scope>QuantLib::PathPayoff</scope><name>basisSystemDimension</name></member>
      <member refid="class_quant_lib_1_1_path_payoff_1a7fb09497250b929502c175ff2d6d29c2" prot="public" virt="pure-virtual"><scope>QuantLib::PathPayoff</scope><name>description</name></member>
      <member refid="class_quant_lib_1_1_path_payoff_1a5f80b3f28c9ab16267aa017dfaf463e3" prot="public" virt="pure-virtual"><scope>QuantLib::PathPayoff</scope><name>name</name></member>
      <member refid="class_quant_lib_1_1_path_payoff_1a11c4029518bb309bf04bf0510f1ab8fe" prot="public" virt="pure-virtual"><scope>QuantLib::PathPayoff</scope><name>value</name></member>
      <member refid="class_quant_lib_1_1_path_payoff_1a0584ec00e50e0391f5bb7471be435040" prot="public" virt="virtual"><scope>QuantLib::PathPayoff</scope><name>~PathPayoff</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

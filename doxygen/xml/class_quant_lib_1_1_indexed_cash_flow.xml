<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_indexed_cash_flow" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::IndexedCashFlow</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_cash_flow" prot="public" virt="non-virtual">QuantLib::CashFlow</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_c_p_i_cash_flow" prot="public" virt="non-virtual">QuantLib::CPICashFlow</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_equity_cash_flow" prot="public" virt="non-virtual">QuantLib::EquityCashFlow</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_zero_inflation_cash_flow" prot="public" virt="non-virtual">QuantLib::ZeroInflationCashFlow</derivedcompoundref>
    <includes refid="indexedcashflow_8hpp" local="no">indexedcashflow.hpp</includes>
    <sectiondef kind="user-defined">
      <header>LazyObject interface</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_indexed_cash_flow_1ac9f0fbf5c3784063909ed9919d7c46f7" prot="protected" static="no" mutable="yes">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::IndexedCashFlow::amount_</definition>
        <argsstring></argsstring>
        <name>amount_</name>
        <qualifiedname>QuantLib::IndexedCashFlow::amount_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/indexedcashflow.hpp" line="77" column="22" bodyfile="ql/cashflows/indexedcashflow.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_indexed_cash_flow_1aecf18ff094fc0cc64e3788f741bdb9f6" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::IndexedCashFlow::notional_</definition>
        <argsstring></argsstring>
        <name>notional_</name>
        <qualifiedname>QuantLib::IndexedCashFlow::notional_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/indexedcashflow.hpp" line="79" column="14" bodyfile="ql/cashflows/indexedcashflow.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_indexed_cash_flow_1a6be18c1d5a2800b95b210c53543fe48d" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_index" kindref="compound">Index</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;Index&gt; QuantLib::IndexedCashFlow::index_</definition>
        <argsstring></argsstring>
        <name>index_</name>
        <qualifiedname>QuantLib::IndexedCashFlow::index_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/indexedcashflow.hpp" line="80" column="25" bodyfile="ql/cashflows/indexedcashflow.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_indexed_cash_flow_1a41651eb428280e436b5654b6844b418c" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::IndexedCashFlow::baseDate_</definition>
        <argsstring></argsstring>
        <name>baseDate_</name>
        <qualifiedname>QuantLib::IndexedCashFlow::baseDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/indexedcashflow.hpp" line="81" column="14" bodyfile="ql/cashflows/indexedcashflow.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_indexed_cash_flow_1a9f21e693b3de4e45f9db4a1723b21c2a" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::IndexedCashFlow::fixingDate_</definition>
        <argsstring></argsstring>
        <name>fixingDate_</name>
        <qualifiedname>QuantLib::IndexedCashFlow::fixingDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/indexedcashflow.hpp" line="81" column="24" bodyfile="ql/cashflows/indexedcashflow.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_indexed_cash_flow_1af87adb82756f4dc6472a8bba54b2bc2f" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::IndexedCashFlow::paymentDate_</definition>
        <argsstring></argsstring>
        <name>paymentDate_</name>
        <qualifiedname>QuantLib::IndexedCashFlow::paymentDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/indexedcashflow.hpp" line="81" column="36" bodyfile="ql/cashflows/indexedcashflow.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_indexed_cash_flow_1a2032324830be3b93a62aba7274347663" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::IndexedCashFlow::growthOnly_</definition>
        <argsstring></argsstring>
        <name>growthOnly_</name>
        <qualifiedname>QuantLib::IndexedCashFlow::growthOnly_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/indexedcashflow.hpp" line="82" column="14" bodyfile="ql/cashflows/indexedcashflow.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_indexed_cash_flow_1ae06de86092a73f3f442f7df40a17cecd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::IndexedCashFlow::performCalculations</definition>
        <argsstring>() const override</argsstring>
        <name>performCalculations</name>
        <qualifiedname>QuantLib::IndexedCashFlow::performCalculations</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_cash_flow_1af9cd641e3841cdcf5aba9c8d5121ce91">performCalculations</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must implement any calculations which must be (re)done in order to calculate the desired results. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/indexedcashflow.hpp" line="74" column="14" bodyfile="ql/cashflows/indexedcashflow.cpp" bodystart="43" bodyend="51"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Event interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_indexed_cash_flow_1a41e79ceab52210f131ad9ea7672da9a4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::IndexedCashFlow::date</definition>
        <argsstring>() const override</argsstring>
        <name>date</name>
        <qualifiedname>QuantLib::IndexedCashFlow::date</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_cash_flow_1a71b50b96effa6166e09f0f8e25dd8d9b">date</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This is inherited from the event class </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/indexedcashflow.hpp" line="55" column="14" bodyfile="ql/cashflows/indexedcashflow.hpp" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_indexed_cash_flow_1a5635a246bb3c3cd1084a28cc0adf8a4d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::IndexedCashFlow::notional</definition>
        <argsstring>() const</argsstring>
        <name>notional</name>
        <qualifiedname>QuantLib::IndexedCashFlow::notional</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/indexedcashflow.hpp" line="57" column="22" bodyfile="ql/cashflows/indexedcashflow.hpp" bodystart="57" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_indexed_cash_flow_1ac82fecaaf732f0e5504e52176debb1f9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>virtual Date QuantLib::IndexedCashFlow::baseDate</definition>
        <argsstring>() const</argsstring>
        <name>baseDate</name>
        <qualifiedname>QuantLib::IndexedCashFlow::baseDate</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_c_p_i_cash_flow_1a61787081ce9b207f3a7965ec59fcc6b4">baseDate</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/indexedcashflow.hpp" line="58" column="22" bodyfile="ql/cashflows/indexedcashflow.hpp" bodystart="58" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_indexed_cash_flow_1a1fc1d31bccd62a14708904d24273417b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>virtual Date QuantLib::IndexedCashFlow::fixingDate</definition>
        <argsstring>() const</argsstring>
        <name>fixingDate</name>
        <qualifiedname>QuantLib::IndexedCashFlow::fixingDate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/indexedcashflow.hpp" line="59" column="22" bodyfile="ql/cashflows/indexedcashflow.hpp" bodystart="59" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_indexed_cash_flow_1a73e1de9b0e5a46e0a30f73dbc95effb7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_index" kindref="compound">Index</ref> &gt;</type>
        <definition>virtual ext::shared_ptr&lt; Index &gt; QuantLib::IndexedCashFlow::index</definition>
        <argsstring>() const</argsstring>
        <name>index</name>
        <qualifiedname>QuantLib::IndexedCashFlow::index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/indexedcashflow.hpp" line="60" column="33" bodyfile="ql/cashflows/indexedcashflow.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_indexed_cash_flow_1a66c2de51e1432baa466c614bf299f72e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool QuantLib::IndexedCashFlow::growthOnly</definition>
        <argsstring>() const</argsstring>
        <name>growthOnly</name>
        <qualifiedname>QuantLib::IndexedCashFlow::growthOnly</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/indexedcashflow.hpp" line="61" column="22" bodyfile="ql/cashflows/indexedcashflow.hpp" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_indexed_cash_flow_1a23aec750762a04270c5a1afff587313c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::IndexedCashFlow::baseFixing</definition>
        <argsstring>() const</argsstring>
        <name>baseFixing</name>
        <qualifiedname>QuantLib::IndexedCashFlow::baseFixing</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_c_p_i_cash_flow_1abf5b01f3efb4c3edc903a5e1eebed972">baseFixing</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_zero_inflation_cash_flow_1abbb93781262160d8a8b819085916374a">baseFixing</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/indexedcashflow.hpp" line="62" column="22" bodyfile="ql/cashflows/indexedcashflow.hpp" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_indexed_cash_flow_1abe47dfce66d72266875bd9326f6ed385" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::IndexedCashFlow::indexFixing</definition>
        <argsstring>() const</argsstring>
        <name>indexFixing</name>
        <qualifiedname>QuantLib::IndexedCashFlow::indexFixing</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_c_p_i_cash_flow_1adb463ff41d7c70ee7c457c3f497ea060">indexFixing</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_zero_inflation_cash_flow_1a61717e13e199fd8393758a341e5adc90">indexFixing</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/indexedcashflow.hpp" line="63" column="22" bodyfile="ql/cashflows/indexedcashflow.hpp" bodystart="63" bodyend="63"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>CashFlow interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_indexed_cash_flow_1ac5ae99e49a30c4468b6aba96768e4aa7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::IndexedCashFlow::amount</definition>
        <argsstring>() const override</argsstring>
        <name>amount</name>
        <qualifiedname>QuantLib::IndexedCashFlow::amount</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_cash_flow_1a92962488f6a37dc8ea4ea49712a2c0c1">amount</reimplements>
        <briefdescription>
<para>returns the amount of the cash flow </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The amount is not discounted, i.e., it is the actual amount paid at the cash flow date. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/indexedcashflow.hpp" line="66" column="14" bodyfile="ql/cashflows/indexedcashflow.cpp" bodystart="38" bodyend="41"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Visitability</header>
      <memberdef kind="function" id="class_quant_lib_1_1_indexed_cash_flow_1af4573744d8fb85d793f765ef20626f5e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::IndexedCashFlow::accept</definition>
        <argsstring>(AcyclicVisitor &amp;) override</argsstring>
        <name>accept</name>
        <qualifiedname>QuantLib::IndexedCashFlow::accept</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_cash_flow_1a2ee98a71e01a73026ed476a5fa40aa8c">accept</reimplements>
        <reimplementedby refid="class_quant_lib_1_1_zero_inflation_cash_flow_1a9b8b66d6119b1549a344b305c21d9cf0">accept</reimplementedby>
        <param>
          <type><ref refid="class_quant_lib_1_1_acyclic_visitor" kindref="compound">AcyclicVisitor</ref> &amp;</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/indexedcashflow.hpp" line="70" column="14" bodyfile="ql/cashflows/indexedcashflow.hpp" bodystart="88" bodyend="94"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_indexed_cash_flow_1a8a9443cbe70325951952f5c73b8d85f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::IndexedCashFlow::IndexedCashFlow</definition>
        <argsstring>(Real notional, ext::shared_ptr&lt; Index &gt; index, const Date &amp;baseDate, const Date &amp;fixingDate, const Date &amp;paymentDate, bool growthOnly=false)</argsstring>
        <name>IndexedCashFlow</name>
        <qualifiedname>QuantLib::IndexedCashFlow::IndexedCashFlow</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>notional</declname>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_index" kindref="compound">Index</ref> &gt;</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>baseDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>fixingDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>paymentDate</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>growthOnly</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/indexedcashflow.hpp" line="47" column="9" bodyfile="ql/cashflows/indexedcashflow.cpp" bodystart="26" bodyend="36"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Cash flow dependent on an index ratio. </para>
    </briefdescription>
    <detaileddescription>
<para>This cash flow is not a coupon, i.e., there&apos;s no accrual. The amount is either i(T)/i(0) or i(T)/i(0) - 1, depending on the growthOnly parameter.</para>
<para>We expect this to be used inside an instrument that does all the date adjustment etc., so this takes just dates and does not change them. growthOnly = false means i(T)/i(0), which is a bond-type setting. growthOnly = true means i(T)/i(0) - 1, which is a swap-type setting. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="7">
        <label>QuantLib::CPICashFlow</label>
        <link refid="class_quant_lib_1_1_c_p_i_cash_flow"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::CashFlow</label>
        <link refid="class_quant_lib_1_1_cash_flow"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::EquityCashFlow</label>
        <link refid="class_quant_lib_1_1_equity_cash_flow"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Event</label>
        <link refid="class_quant_lib_1_1_event"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::IndexedCashFlow</label>
        <link refid="class_quant_lib_1_1_indexed_cash_flow"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="9">
        <label>QuantLib::ZeroInflationCashFlow</label>
        <link refid="class_quant_lib_1_1_zero_inflation_cash_flow"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::CashFlow</label>
        <link refid="class_quant_lib_1_1_cash_flow"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Event</label>
        <link refid="class_quant_lib_1_1_event"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::IndexedCashFlow</label>
        <link refid="class_quant_lib_1_1_indexed_cash_flow"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </collaborationgraph>
    <location file="ql/cashflows/indexedcashflow.hpp" line="45" column="5" bodyfile="ql/cashflows/indexedcashflow.hpp" bodystart="45" bodyend="83"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1af4573744d8fb85d793f765ef20626f5e" prot="public" virt="virtual"><scope>QuantLib::IndexedCashFlow</scope><name>accept</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a02070ea7442d30625992c1711030d4b8" prot="protected" virt="non-virtual"><scope>QuantLib::IndexedCashFlow</scope><name>alwaysForward_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a17c9433135a259e4776baec66204a484" prot="public" virt="non-virtual"><scope>QuantLib::IndexedCashFlow</scope><name>alwaysForwardNotifications</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1ac5ae99e49a30c4468b6aba96768e4aa7" prot="public" virt="virtual"><scope>QuantLib::IndexedCashFlow</scope><name>amount</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1ac9f0fbf5c3784063909ed9919d7c46f7" prot="protected" virt="non-virtual"><scope>QuantLib::IndexedCashFlow</scope><name>amount_</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1ac82fecaaf732f0e5504e52176debb1f9" prot="public" virt="virtual"><scope>QuantLib::IndexedCashFlow</scope><name>baseDate</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1a41651eb428280e436b5654b6844b418c" prot="private" virt="non-virtual"><scope>QuantLib::IndexedCashFlow</scope><name>baseDate_</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1a23aec750762a04270c5a1afff587313c" prot="public" virt="virtual"><scope>QuantLib::IndexedCashFlow</scope><name>baseFixing</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a5244c7f83592375a0ea9048296435fd1" prot="protected" virt="virtual"><scope>QuantLib::IndexedCashFlow</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a58b4986a80efa18634483a92c121e26e" prot="protected" virt="non-virtual"><scope>QuantLib::IndexedCashFlow</scope><name>calculated_</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1a41e79ceab52210f131ad9ea7672da9a4" prot="public" virt="virtual"><scope>QuantLib::IndexedCashFlow</scope><name>date</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::IndexedCashFlow</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_cash_flow_1a235e2205946f507de2d3b2cbfaf8cd89" prot="public" virt="virtual"><scope>QuantLib::IndexedCashFlow</scope><name>exCouponDate</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1a1fc1d31bccd62a14708904d24273417b" prot="public" virt="virtual"><scope>QuantLib::IndexedCashFlow</scope><name>fixingDate</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1a9f21e693b3de4e45f9db4a1723b21c2a" prot="private" virt="non-virtual"><scope>QuantLib::IndexedCashFlow</scope><name>fixingDate_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1afac6ee19c3107c453e1347dd8000e023" prot="public" virt="non-virtual"><scope>QuantLib::IndexedCashFlow</scope><name>forwardFirstNotificationOnly</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7157f41e83f2c5d924f5c5bafda04d1d" prot="public" virt="non-virtual"><scope>QuantLib::IndexedCashFlow</scope><name>freeze</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7bb721fe00c6854e602758aba629ab77" prot="protected" virt="non-virtual"><scope>QuantLib::IndexedCashFlow</scope><name>frozen_</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1a66c2de51e1432baa466c614bf299f72e" prot="public" virt="virtual"><scope>QuantLib::IndexedCashFlow</scope><name>growthOnly</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1a2032324830be3b93a62aba7274347663" prot="private" virt="non-virtual"><scope>QuantLib::IndexedCashFlow</scope><name>growthOnly_</name></member>
      <member refid="class_quant_lib_1_1_cash_flow_1a42691c396f43dde0b5ed37f4a014b0e8" prot="public" virt="virtual"><scope>QuantLib::IndexedCashFlow</scope><name>hasOccurred</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1a73e1de9b0e5a46e0a30f73dbc95effb7" prot="public" virt="virtual"><scope>QuantLib::IndexedCashFlow</scope><name>index</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1a6be18c1d5a2800b95b210c53543fe48d" prot="private" virt="non-virtual"><scope>QuantLib::IndexedCashFlow</scope><name>index_</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1a8a9443cbe70325951952f5c73b8d85f7" prot="public" virt="non-virtual"><scope>QuantLib::IndexedCashFlow</scope><name>IndexedCashFlow</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1abe47dfce66d72266875bd9326f6ed385" prot="public" virt="virtual"><scope>QuantLib::IndexedCashFlow</scope><name>indexFixing</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a0a7c5d42815a4e16ee2158e24dbfc748" prot="public" virt="non-virtual"><scope>QuantLib::IndexedCashFlow</scope><name>isCalculated</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::IndexedCashFlow</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a26f18f4ff7faaaebd8eae50e064b493e" prot="public" virt="non-virtual"><scope>QuantLib::IndexedCashFlow</scope><name>LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::IndexedCashFlow</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1a5635a246bb3c3cd1084a28cc0adf8a4d" prot="public" virt="virtual"><scope>QuantLib::IndexedCashFlow</scope><name>notional</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1aecf18ff094fc0cc64e3788f741bdb9f6" prot="private" virt="non-virtual"><scope>QuantLib::IndexedCashFlow</scope><name>notional_</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::IndexedCashFlow</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Event::"><scope>QuantLib::IndexedCashFlow</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Event::"><scope>QuantLib::IndexedCashFlow</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::IndexedCashFlow</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::IndexedCashFlow</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::IndexedCashFlow</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Event::"><scope>QuantLib::IndexedCashFlow</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::QuantLib::Observer::"><scope>QuantLib::IndexedCashFlow</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1af87adb82756f4dc6472a8bba54b2bc2f" prot="private" virt="non-virtual"><scope>QuantLib::IndexedCashFlow</scope><name>paymentDate_</name></member>
      <member refid="class_quant_lib_1_1_indexed_cash_flow_1ae06de86092a73f3f442f7df40a17cecd" prot="public" virt="virtual"><scope>QuantLib::IndexedCashFlow</scope><name>performCalculations</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a70c9b24e50132408d8d9ce4f6674662a" prot="public" virt="non-virtual"><scope>QuantLib::IndexedCashFlow</scope><name>recalculate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::IndexedCashFlow</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::IndexedCashFlow</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_cash_flow_1a103a14e1657bd2d7cb6574bf6dcf96d0" prot="public" virt="non-virtual"><scope>QuantLib::IndexedCashFlow</scope><name>tradingExCoupon</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a2e0e4786666453024b9d4e0761f2770b" prot="public" virt="non-virtual"><scope>QuantLib::IndexedCashFlow</scope><name>unfreeze</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::IndexedCashFlow</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::IndexedCashFlow</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1adee2bf49be5c4c78736be293321a856d" prot="public" virt="virtual"><scope>QuantLib::IndexedCashFlow</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_cash_flow_1a4ac3d8fa6eeb8c307345ada96b25cecf" prot="public" virt="non-virtual"><scope>QuantLib::IndexedCashFlow</scope><name>~CashFlow</name></member>
      <member refid="class_quant_lib_1_1_event_1a26cef5942731bfb52ed77e74abdcfe9f" prot="public" virt="non-virtual"><scope>QuantLib::IndexedCashFlow</scope><name>~Event</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a9d719c43bb627177a90d7d12324a2d6e" prot="public" virt="non-virtual"><scope>QuantLib::IndexedCashFlow</scope><name>~LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::IndexedCashFlow</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::IndexedCashFlow</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

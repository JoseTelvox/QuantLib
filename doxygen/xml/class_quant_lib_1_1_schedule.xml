<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_schedule" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::Schedule</compoundname>
    <includes refid="schedule_8hpp" local="no">schedule.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Iterators</header>
      <memberdef kind="typedef" id="class_quant_lib_1_1_schedule_1a022ab82e2d6ed92e9f38054ac22ed16f" prot="public" static="no">
        <type>std::vector&lt; <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &gt;::const_iterator</type>
        <definition>typedef std::vector&lt;Date&gt;::const_iterator QuantLib::Schedule::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <qualifiedname>QuantLib::Schedule::const_iterator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="100" column="46" bodyfile="ql/time/schedule.hpp" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_schedule_1a208b38f937589a7ed7caaaf5b8df11e3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator QuantLib::Schedule::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <qualifiedname>QuantLib::Schedule::begin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="101" column="24" bodyfile="ql/time/schedule.hpp" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_schedule_1ab1e3d1b78ed10bfc24cc3099bbd82099" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_iterator</type>
        <definition>const_iterator QuantLib::Schedule::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <qualifiedname>QuantLib::Schedule::end</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="102" column="24" bodyfile="ql/time/schedule.hpp" bodystart="102" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_schedule_1a859eab466c0dae6659cbef0460be5b1d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const_iterator</type>
        <definition>std::vector&lt; Date &gt;::const_iterator QuantLib::Schedule::lower_bound</definition>
        <argsstring>(const Date &amp;d=Date()) const</argsstring>
        <name>lower_bound</name>
        <qualifiedname>QuantLib::Schedule::lower_bound</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="103" column="24" bodyfile="ql/time/schedule.cpp" bodystart="488" bodyend="493"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Utilities</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_schedule_1a20071192c96eaf8de8690ae0f908b4a5" prot="private" static="no" mutable="no">
        <type>ext::optional&lt; <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &gt;</type>
        <definition>ext::optional&lt;Period&gt; QuantLib::Schedule::tenor_</definition>
        <argsstring></argsstring>
        <name>tenor_</name>
        <qualifiedname>QuantLib::Schedule::tenor_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="112" column="23" bodyfile="ql/time/schedule.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_schedule_1a788f47f210615e00ded30677af7b5d7f" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref></type>
        <definition>Calendar QuantLib::Schedule::calendar_</definition>
        <argsstring></argsstring>
        <name>calendar_</name>
        <qualifiedname>QuantLib::Schedule::calendar_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="113" column="18" bodyfile="ql/time/schedule.hpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_schedule_1adc6caef85ccb5a79f8d173bdeb7e0e10" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
        <definition>BusinessDayConvention QuantLib::Schedule::convention_</definition>
        <argsstring></argsstring>
        <name>convention_</name>
        <qualifiedname>QuantLib::Schedule::convention_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="114" column="31" bodyfile="ql/time/schedule.hpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_schedule_1acd95a53cce99ee7349127ef461953375" prot="private" static="no" mutable="no">
        <type>ext::optional&lt; <ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref> &gt;</type>
        <definition>ext::optional&lt;BusinessDayConvention&gt; QuantLib::Schedule::terminationDateConvention_</definition>
        <argsstring></argsstring>
        <name>terminationDateConvention_</name>
        <qualifiedname>QuantLib::Schedule::terminationDateConvention_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="115" column="23" bodyfile="ql/time/schedule.hpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_schedule_1a1d12687e8a18bab6372c48155a5507e9" prot="private" static="no" mutable="no">
        <type>ext::optional&lt; <ref refid="struct_quant_lib_1_1_date_generation_1a3fee9b3c834b0d3be240d05886ac2f6e" kindref="member">DateGeneration::Rule</ref> &gt;</type>
        <definition>ext::optional&lt;DateGeneration::Rule&gt; QuantLib::Schedule::rule_</definition>
        <argsstring></argsstring>
        <name>rule_</name>
        <qualifiedname>QuantLib::Schedule::rule_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="116" column="23" bodyfile="ql/time/schedule.hpp" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_schedule_1a99b14a1ecd0be806d702f0c7e0a603ca" prot="private" static="no" mutable="no">
        <type>ext::optional&lt; bool &gt;</type>
        <definition>ext::optional&lt;bool&gt; QuantLib::Schedule::endOfMonth_</definition>
        <argsstring></argsstring>
        <name>endOfMonth_</name>
        <qualifiedname>QuantLib::Schedule::endOfMonth_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="117" column="23" bodyfile="ql/time/schedule.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_schedule_1a072c049a9633c6e3ca33ce51c793fc45" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::Schedule::firstDate_</definition>
        <argsstring></argsstring>
        <name>firstDate_</name>
        <qualifiedname>QuantLib::Schedule::firstDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="118" column="14" bodyfile="ql/time/schedule.hpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_schedule_1a1f6385d624de7461cc4770b175b1c7ab" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::Schedule::nextToLastDate_</definition>
        <argsstring></argsstring>
        <name>nextToLastDate_</name>
        <qualifiedname>QuantLib::Schedule::nextToLastDate_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="118" column="25" bodyfile="ql/time/schedule.hpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_schedule_1a230ae5c8fdcec46f0eac5680e36129c8" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &gt;</type>
        <definition>std::vector&lt;Date&gt; QuantLib::Schedule::dates_</definition>
        <argsstring></argsstring>
        <name>dates_</name>
        <qualifiedname>QuantLib::Schedule::dates_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="119" column="21" bodyfile="ql/time/schedule.hpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_schedule_1af1f95183965d2c940236dac1570c4e2c" prot="private" static="no" mutable="no">
        <type>std::vector&lt; bool &gt;</type>
        <definition>std::vector&lt;bool&gt; QuantLib::Schedule::isRegular_</definition>
        <argsstring></argsstring>
        <name>isRegular_</name>
        <qualifiedname>QuantLib::Schedule::isRegular_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="120" column="21" bodyfile="ql/time/schedule.hpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_schedule_1a5dc6bde426254268e8858266ec065b29" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_schedule" kindref="compound">Schedule</ref></type>
        <definition>Schedule QuantLib::Schedule::after</definition>
        <argsstring>(const Date &amp;truncationDate) const</argsstring>
        <name>after</name>
        <qualifiedname>QuantLib::Schedule::after</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>truncationDate</declname>
        </param>
        <briefdescription>
<para>truncated schedule </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="108" column="18" bodyfile="ql/time/schedule.cpp" bodystart="420" bodyend="452"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_schedule_1ac477d3ede95b4adb84163272da8ff836" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_schedule" kindref="compound">Schedule</ref></type>
        <definition>Schedule QuantLib::Schedule::until</definition>
        <argsstring>(const Date &amp;truncationDate) const</argsstring>
        <name>until</name>
        <qualifiedname>QuantLib::Schedule::until</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>truncationDate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="109" column="18" bodyfile="ql/time/schedule.cpp" bodystart="454" bodyend="485"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Element access</header>
      <memberdef kind="function" id="class_quant_lib_1_1_schedule_1a079c656fa64ed4b49854a0894c44d3e4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::Schedule::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>QuantLib::Schedule::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="69" column="14" bodyfile="ql/time/schedule.hpp" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_schedule_1a5c7cc31348b7b9cb6afc60afa623850c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
        <definition>const Date &amp; QuantLib::Schedule::operator[]</definition>
        <argsstring>(Size i) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>QuantLib::Schedule::operator[]</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="70" column="20" bodyfile="ql/time/schedule.hpp" bodystart="166" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_schedule_1a655cf93be82f0c824a8ffaab2d007120" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
        <definition>const Date &amp; QuantLib::Schedule::at</definition>
        <argsstring>(Size i) const</argsstring>
        <name>at</name>
        <qualifiedname>QuantLib::Schedule::at</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="71" column="20" bodyfile="ql/time/schedule.hpp" bodystart="174" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_schedule_1a6360bb754cb8d1a4fd30bc257bcae9d9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
        <definition>const Date &amp; QuantLib::Schedule::date</definition>
        <argsstring>(Size i) const</argsstring>
        <name>date</name>
        <qualifiedname>QuantLib::Schedule::date</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="72" column="20" bodyfile="ql/time/schedule.hpp" bodystart="162" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_schedule_1ad596c65791c5a50648098c60c23f2747" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; Date &gt; &amp; QuantLib::Schedule::dates</definition>
        <argsstring>() const</argsstring>
        <name>dates</name>
        <qualifiedname>QuantLib::Schedule::dates</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="73" column="27" bodyfile="ql/time/schedule.hpp" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_schedule_1a2065d7bb1701257cc4cb5439d4d97d77" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::Schedule::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <qualifiedname>QuantLib::Schedule::empty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="74" column="14" bodyfile="ql/time/schedule.hpp" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_schedule_1a4d5ff0c36fac20c5375b5475f14d5538" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
        <definition>const Date &amp; QuantLib::Schedule::front</definition>
        <argsstring>() const</argsstring>
        <name>front</name>
        <qualifiedname>QuantLib::Schedule::front</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="75" column="20" bodyfile="ql/time/schedule.hpp" bodystart="178" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_schedule_1a0ae14ba530e721771f849d39c8a6effb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
        <definition>const Date &amp; QuantLib::Schedule::back</definition>
        <argsstring>() const</argsstring>
        <name>back</name>
        <qualifiedname>QuantLib::Schedule::back</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="76" column="20" bodyfile="ql/time/schedule.hpp" bodystart="183" bodyend="186"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Other inspectors</header>
      <memberdef kind="function" id="class_quant_lib_1_1_schedule_1abd528b297a63ccbf01396dd3089fa2c0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::Schedule::previousDate</definition>
        <argsstring>(const Date &amp;refDate) const</argsstring>
        <name>previousDate</name>
        <qualifiedname>QuantLib::Schedule::previousDate</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>refDate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="80" column="14" bodyfile="ql/time/schedule.cpp" bodystart="503" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_schedule_1a48fc0d50ad73298836fad42a6f0878a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::Schedule::nextDate</definition>
        <argsstring>(const Date &amp;refDate) const</argsstring>
        <name>nextDate</name>
        <qualifiedname>QuantLib::Schedule::nextDate</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>refDate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="81" column="14" bodyfile="ql/time/schedule.cpp" bodystart="495" bodyend="501"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_schedule_1a668255e41dd00b96806b1ecc078e9a72" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::Schedule::hasIsRegular</definition>
        <argsstring>() const</argsstring>
        <name>hasIsRegular</name>
        <qualifiedname>QuantLib::Schedule::hasIsRegular</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="82" column="14" bodyfile="ql/time/schedule.cpp" bodystart="511" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_schedule_1a58939652f6e9bdd740d1fa14dc7957b9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::Schedule::isRegular</definition>
        <argsstring>(Size i) const</argsstring>
        <name>isRegular</name>
        <qualifiedname>QuantLib::Schedule::isRegular</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="83" column="14" bodyfile="ql/time/schedule.cpp" bodystart="513" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_schedule_1a58eb6c32ee70f0d2a82991043e19ac7c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; bool &gt; &amp;</type>
        <definition>const std::vector&lt; bool &gt; &amp; QuantLib::Schedule::isRegular</definition>
        <argsstring>() const</argsstring>
        <name>isRegular</name>
        <qualifiedname>QuantLib::Schedule::isRegular</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="84" column="27" bodyfile="ql/time/schedule.cpp" bodystart="522" bodyend="525"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_schedule_1ac04bfbf6697b36bbe8cb6b98f7523dcc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
        <definition>const Calendar &amp; QuantLib::Schedule::calendar</definition>
        <argsstring>() const</argsstring>
        <name>calendar</name>
        <qualifiedname>QuantLib::Schedule::calendar</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="85" column="24" bodyfile="ql/time/schedule.hpp" bodystart="188" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_schedule_1ac0119e806e0dbbfef93377730ae1a954" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
        <definition>const Date &amp; QuantLib::Schedule::startDate</definition>
        <argsstring>() const</argsstring>
        <name>startDate</name>
        <qualifiedname>QuantLib::Schedule::startDate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="86" column="20" bodyfile="ql/time/schedule.hpp" bodystart="192" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_schedule_1aae16d941ae173f658b71672e67b9ccea" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
        <definition>const Date &amp; QuantLib::Schedule::endDate</definition>
        <argsstring>() const</argsstring>
        <name>endDate</name>
        <qualifiedname>QuantLib::Schedule::endDate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="87" column="20" bodyfile="ql/time/schedule.hpp" bodystart="196" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_schedule_1a5f0fe2b352ecd9d03b8b4a15aade3c42" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::Schedule::hasTenor</definition>
        <argsstring>() const</argsstring>
        <name>hasTenor</name>
        <qualifiedname>QuantLib::Schedule::hasTenor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="88" column="14" bodyfile="ql/time/schedule.hpp" bodystart="198" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_schedule_1a769471babeb063caf6ccdf83a43f10db" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
        <definition>const Period &amp; QuantLib::Schedule::tenor</definition>
        <argsstring>() const</argsstring>
        <name>tenor</name>
        <qualifiedname>QuantLib::Schedule::tenor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="89" column="22" bodyfile="ql/time/schedule.hpp" bodystart="202" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_schedule_1a147b478c65d04bedc6fdab7707453875" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
        <definition>BusinessDayConvention QuantLib::Schedule::businessDayConvention</definition>
        <argsstring>() const</argsstring>
        <name>businessDayConvention</name>
        <qualifiedname>QuantLib::Schedule::businessDayConvention</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="90" column="31" bodyfile="ql/time/schedule.hpp" bodystart="208" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_schedule_1a551f4965fc6cdd8ae73822ba94f37816" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::Schedule::hasTerminationDateBusinessDayConvention</definition>
        <argsstring>() const</argsstring>
        <name>hasTerminationDateBusinessDayConvention</name>
        <qualifiedname>QuantLib::Schedule::hasTerminationDateBusinessDayConvention</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="91" column="14" bodyfile="ql/time/schedule.hpp" bodystart="213" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_schedule_1a1dbf0494c72e1bed82377180953e950b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
        <definition>BusinessDayConvention QuantLib::Schedule::terminationDateBusinessDayConvention</definition>
        <argsstring>() const</argsstring>
        <name>terminationDateBusinessDayConvention</name>
        <qualifiedname>QuantLib::Schedule::terminationDateBusinessDayConvention</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="92" column="31" bodyfile="ql/time/schedule.hpp" bodystart="218" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_schedule_1a3f727ea5b657eca594631dbff08536b3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::Schedule::hasRule</definition>
        <argsstring>() const</argsstring>
        <name>hasRule</name>
        <qualifiedname>QuantLib::Schedule::hasRule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="93" column="14" bodyfile="ql/time/schedule.hpp" bodystart="224" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_schedule_1a751d30bfbd4c397f14654bef994c768d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_quant_lib_1_1_date_generation_1a3fee9b3c834b0d3be240d05886ac2f6e" kindref="member">DateGeneration::Rule</ref></type>
        <definition>DateGeneration::Rule QuantLib::Schedule::rule</definition>
        <argsstring>() const</argsstring>
        <name>rule</name>
        <qualifiedname>QuantLib::Schedule::rule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="94" column="30" bodyfile="ql/time/schedule.hpp" bodystart="228" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_schedule_1aee71fbad216ae4aac591bc0cc3033704" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::Schedule::hasEndOfMonth</definition>
        <argsstring>() const</argsstring>
        <name>hasEndOfMonth</name>
        <qualifiedname>QuantLib::Schedule::hasEndOfMonth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="95" column="14" bodyfile="ql/time/schedule.hpp" bodystart="233" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_schedule_1aa203a966915d9ef020cbe772054e1cfa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::Schedule::endOfMonth</definition>
        <argsstring>() const</argsstring>
        <name>endOfMonth</name>
        <qualifiedname>QuantLib::Schedule::endOfMonth</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="96" column="14" bodyfile="ql/time/schedule.hpp" bodystart="237" bodyend="241"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_schedule_1a1a113bffa9fadb7529ffefd556d1cacb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Schedule::Schedule</definition>
        <argsstring>(const std::vector&lt; Date &gt; &amp;, Calendar calendar=NullCalendar(), BusinessDayConvention convention=Unadjusted, const ext::optional&lt; BusinessDayConvention &gt; &amp;terminationDateConvention=ext::nullopt, const ext::optional&lt; Period &gt; &amp;tenor=ext::nullopt, const ext::optional&lt; DateGeneration::Rule &gt; &amp;rule=ext::nullopt, const ext::optional&lt; bool &gt; &amp;endOfMonth=ext::nullopt, std::vector&lt; bool &gt; isRegular=std::vector&lt; bool &gt;(0))</argsstring>
        <name>Schedule</name>
        <qualifiedname>QuantLib::Schedule::Schedule</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &gt; &amp;</type>
          <defname>dates</defname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref></type>
          <declname>calendar</declname>
          <defval><ref refid="class_quant_lib_1_1_null_calendar" kindref="compound">NullCalendar</ref>()</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
          <declname>convention</declname>
          <defval><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881a6a9f8f55985b149ed0c336c23bf03667" kindref="member">Unadjusted</ref></defval>
        </param>
        <param>
          <type>const ext::optional&lt; <ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref> &gt; &amp;</type>
          <declname>terminationDateConvention</declname>
          <defval>ext::nullopt</defval>
        </param>
        <param>
          <type>const ext::optional&lt; <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &gt; &amp;</type>
          <declname>tenor</declname>
          <defval>ext::nullopt</defval>
        </param>
        <param>
          <type>const ext::optional&lt; <ref refid="struct_quant_lib_1_1_date_generation_1a3fee9b3c834b0d3be240d05886ac2f6e" kindref="member">DateGeneration::Rule</ref> &gt; &amp;</type>
          <declname>rule</declname>
          <defval>ext::nullopt</defval>
        </param>
        <param>
          <type>const ext::optional&lt; bool &gt; &amp;</type>
          <declname>endOfMonth</declname>
          <defval>ext::nullopt</defval>
        </param>
        <param>
          <type>std::vector&lt; bool &gt;</type>
          <declname>isRegular</declname>
          <defval>std::vector&lt; bool &gt;(0)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>constructor that takes any list of dates, and optionally meta information that can be used by client classes. Note that neither the list of dates nor the meta information is checked for plausibility in any sense. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="46" column="9" bodyfile="ql/time/schedule.cpp" bodystart="58" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_schedule_1a1d3cff2a17d01e042e0605a24c4722ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Schedule::Schedule</definition>
        <argsstring>(Date effectiveDate, const Date &amp;terminationDate, const Period &amp;tenor, Calendar calendar, BusinessDayConvention convention, BusinessDayConvention terminationDateConvention, DateGeneration::Rule rule, bool endOfMonth, const Date &amp;firstDate=Date(), const Date &amp;nextToLastDate=Date())</argsstring>
        <name>Schedule</name>
        <qualifiedname>QuantLib::Schedule::Schedule</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
          <declname>effectiveDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>terminationDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>tenor</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref></type>
          <declname>calendar</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
          <declname>convention</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
          <declname>terminationDateConvention</declname>
        </param>
        <param>
          <type><ref refid="struct_quant_lib_1_1_date_generation_1a3fee9b3c834b0d3be240d05886ac2f6e" kindref="member">DateGeneration::Rule</ref></type>
          <declname>rule</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>endOfMonth</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>firstDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>nextToLastDate</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>rule based constructor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="56" column="9" bodyfile="ql/time/schedule.cpp" bodystart="81" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_schedule_1a5eb4061a2bc5d00a25bcb59bbadb0797" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::Schedule::Schedule</definition>
        <argsstring>()=default</argsstring>
        <name>Schedule</name>
        <qualifiedname>QuantLib::Schedule::Schedule</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/time/schedule.hpp" line="66" column="9"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Payment schedule. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/time/schedule.hpp" line="40" column="5" bodyfile="ql/time/schedule.hpp" bodystart="40" bodyend="121"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_schedule_1a5dc6bde426254268e8858266ec065b29" prot="public" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>after</name></member>
      <member refid="class_quant_lib_1_1_schedule_1a655cf93be82f0c824a8ffaab2d007120" prot="public" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>at</name></member>
      <member refid="class_quant_lib_1_1_schedule_1a0ae14ba530e721771f849d39c8a6effb" prot="public" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>back</name></member>
      <member refid="class_quant_lib_1_1_schedule_1a208b38f937589a7ed7caaaf5b8df11e3" prot="public" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>begin</name></member>
      <member refid="class_quant_lib_1_1_schedule_1a147b478c65d04bedc6fdab7707453875" prot="public" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>businessDayConvention</name></member>
      <member refid="class_quant_lib_1_1_schedule_1ac04bfbf6697b36bbe8cb6b98f7523dcc" prot="public" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>calendar</name></member>
      <member refid="class_quant_lib_1_1_schedule_1a788f47f210615e00ded30677af7b5d7f" prot="private" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>calendar_</name></member>
      <member refid="class_quant_lib_1_1_schedule_1a022ab82e2d6ed92e9f38054ac22ed16f" prot="public" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>const_iterator</name></member>
      <member refid="class_quant_lib_1_1_schedule_1adc6caef85ccb5a79f8d173bdeb7e0e10" prot="private" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>convention_</name></member>
      <member refid="class_quant_lib_1_1_schedule_1a6360bb754cb8d1a4fd30bc257bcae9d9" prot="public" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>date</name></member>
      <member refid="class_quant_lib_1_1_schedule_1ad596c65791c5a50648098c60c23f2747" prot="public" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>dates</name></member>
      <member refid="class_quant_lib_1_1_schedule_1a230ae5c8fdcec46f0eac5680e36129c8" prot="private" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>dates_</name></member>
      <member refid="class_quant_lib_1_1_schedule_1a2065d7bb1701257cc4cb5439d4d97d77" prot="public" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>empty</name></member>
      <member refid="class_quant_lib_1_1_schedule_1ab1e3d1b78ed10bfc24cc3099bbd82099" prot="public" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>end</name></member>
      <member refid="class_quant_lib_1_1_schedule_1aae16d941ae173f658b71672e67b9ccea" prot="public" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>endDate</name></member>
      <member refid="class_quant_lib_1_1_schedule_1aa203a966915d9ef020cbe772054e1cfa" prot="public" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>endOfMonth</name></member>
      <member refid="class_quant_lib_1_1_schedule_1a99b14a1ecd0be806d702f0c7e0a603ca" prot="private" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>endOfMonth_</name></member>
      <member refid="class_quant_lib_1_1_schedule_1a072c049a9633c6e3ca33ce51c793fc45" prot="private" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>firstDate_</name></member>
      <member refid="class_quant_lib_1_1_schedule_1a4d5ff0c36fac20c5375b5475f14d5538" prot="public" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>front</name></member>
      <member refid="class_quant_lib_1_1_schedule_1aee71fbad216ae4aac591bc0cc3033704" prot="public" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>hasEndOfMonth</name></member>
      <member refid="class_quant_lib_1_1_schedule_1a668255e41dd00b96806b1ecc078e9a72" prot="public" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>hasIsRegular</name></member>
      <member refid="class_quant_lib_1_1_schedule_1a3f727ea5b657eca594631dbff08536b3" prot="public" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>hasRule</name></member>
      <member refid="class_quant_lib_1_1_schedule_1a5f0fe2b352ecd9d03b8b4a15aade3c42" prot="public" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>hasTenor</name></member>
      <member refid="class_quant_lib_1_1_schedule_1a551f4965fc6cdd8ae73822ba94f37816" prot="public" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>hasTerminationDateBusinessDayConvention</name></member>
      <member refid="class_quant_lib_1_1_schedule_1a58939652f6e9bdd740d1fa14dc7957b9" prot="public" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>isRegular</name></member>
      <member refid="class_quant_lib_1_1_schedule_1a58eb6c32ee70f0d2a82991043e19ac7c" prot="public" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>isRegular</name></member>
      <member refid="class_quant_lib_1_1_schedule_1af1f95183965d2c940236dac1570c4e2c" prot="private" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>isRegular_</name></member>
      <member refid="class_quant_lib_1_1_schedule_1a859eab466c0dae6659cbef0460be5b1d" prot="public" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>lower_bound</name></member>
      <member refid="class_quant_lib_1_1_schedule_1a48fc0d50ad73298836fad42a6f0878a2" prot="public" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>nextDate</name></member>
      <member refid="class_quant_lib_1_1_schedule_1a1f6385d624de7461cc4770b175b1c7ab" prot="private" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>nextToLastDate_</name></member>
      <member refid="class_quant_lib_1_1_schedule_1a5c7cc31348b7b9cb6afc60afa623850c" prot="public" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>operator[]</name></member>
      <member refid="class_quant_lib_1_1_schedule_1abd528b297a63ccbf01396dd3089fa2c0" prot="public" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>previousDate</name></member>
      <member refid="class_quant_lib_1_1_schedule_1a751d30bfbd4c397f14654bef994c768d" prot="public" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>rule</name></member>
      <member refid="class_quant_lib_1_1_schedule_1a1d12687e8a18bab6372c48155a5507e9" prot="private" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>rule_</name></member>
      <member refid="class_quant_lib_1_1_schedule_1a1a113bffa9fadb7529ffefd556d1cacb" prot="public" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>Schedule</name></member>
      <member refid="class_quant_lib_1_1_schedule_1a1d3cff2a17d01e042e0605a24c4722ad" prot="public" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>Schedule</name></member>
      <member refid="class_quant_lib_1_1_schedule_1a5eb4061a2bc5d00a25bcb59bbadb0797" prot="public" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>Schedule</name></member>
      <member refid="class_quant_lib_1_1_schedule_1a079c656fa64ed4b49854a0894c44d3e4" prot="public" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>size</name></member>
      <member refid="class_quant_lib_1_1_schedule_1ac0119e806e0dbbfef93377730ae1a954" prot="public" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>startDate</name></member>
      <member refid="class_quant_lib_1_1_schedule_1a769471babeb063caf6ccdf83a43f10db" prot="public" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>tenor</name></member>
      <member refid="class_quant_lib_1_1_schedule_1a20071192c96eaf8de8690ae0f908b4a5" prot="private" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>tenor_</name></member>
      <member refid="class_quant_lib_1_1_schedule_1a1dbf0494c72e1bed82377180953e950b" prot="public" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>terminationDateBusinessDayConvention</name></member>
      <member refid="class_quant_lib_1_1_schedule_1acd95a53cce99ee7349127ef461953375" prot="private" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>terminationDateConvention_</name></member>
      <member refid="class_quant_lib_1_1_schedule_1ac477d3ede95b4adb84163272da8ff836" prot="public" virt="non-virtual"><scope>QuantLib::Schedule</scope><name>until</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

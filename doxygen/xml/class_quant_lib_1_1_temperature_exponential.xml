<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_temperature_exponential" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::TemperatureExponential</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_temperature_exponential_1a1f03674df7ab3b47121d726ab194b949" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::TemperatureExponential::initialTemp_</definition>
        <argsstring></argsstring>
        <name>initialTemp_</name>
        <qualifiedname>QuantLib::TemperatureExponential::initialTemp_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" line="314" column="15" bodyfile="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_temperature_exponential_1aef36dd308bb18f16abc4decf75410da8" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::TemperatureExponential::power_</definition>
        <argsstring></argsstring>
        <name>power_</name>
        <qualifiedname>QuantLib::TemperatureExponential::power_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" line="315" column="14" bodyfile="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" bodystart="315" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_temperature_exponential_1a147bca2f79a4bee1da1c028ba5478c63" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::TemperatureExponential::TemperatureExponential</definition>
        <argsstring>(Real initialTemp, Size dimension, Real power=0.95)</argsstring>
        <name>TemperatureExponential</name>
        <qualifiedname>QuantLib::TemperatureExponential::TemperatureExponential</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>initialTemp</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>dimension</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>power</declname>
          <defval>0.95</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" line="305" column="9" bodyfile="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" bodystart="305" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_temperature_exponential_1a0b6c2095d6e0f27e3d972ea397dcd9e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::TemperatureExponential::operator()</definition>
        <argsstring>(Array &amp;newTemp, const Array &amp;currTemp, const Array &amp;steps)</argsstring>
        <name>operator()</name>
        <qualifiedname>QuantLib::TemperatureExponential::operator()</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>newTemp</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>currTemp</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" line="307" column="14" bodyfile="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" bodystart="307" bodyend="312"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" line="303" column="5" bodyfile="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" bodystart="303" bodyend="316"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_temperature_exponential_1a1f03674df7ab3b47121d726ab194b949" prot="private" virt="non-virtual"><scope>QuantLib::TemperatureExponential</scope><name>initialTemp_</name></member>
      <member refid="class_quant_lib_1_1_temperature_exponential_1a0b6c2095d6e0f27e3d972ea397dcd9e1" prot="public" virt="non-virtual"><scope>QuantLib::TemperatureExponential</scope><name>operator()</name></member>
      <member refid="class_quant_lib_1_1_temperature_exponential_1aef36dd308bb18f16abc4decf75410da8" prot="private" virt="non-virtual"><scope>QuantLib::TemperatureExponential</scope><name>power_</name></member>
      <member refid="class_quant_lib_1_1_temperature_exponential_1a147bca2f79a4bee1da1c028ba5478c63" prot="public" virt="non-virtual"><scope>QuantLib::TemperatureExponential</scope><name>TemperatureExponential</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_smile_section_utils" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::SmileSectionUtils</compoundname>
    <includes refid="smilesectionutils_8hpp" local="no">smilesectionutils.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_smile_section_utils_1a76a4c93d4b7bca635ff5601aa8419efc" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::SmileSectionUtils::m_</definition>
        <argsstring></argsstring>
        <name>m_</name>
        <qualifiedname>QuantLib::SmileSectionUtils::m_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesectionutils.hpp" line="52" column="21" bodyfile="ql/termstructures/volatility/smilesectionutils.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_smile_section_utils_1ac00cd4860f091552dcb0400a20af8cf7" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::SmileSectionUtils::c_</definition>
        <argsstring></argsstring>
        <name>c_</name>
        <qualifiedname>QuantLib::SmileSectionUtils::c_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesectionutils.hpp" line="52" column="24" bodyfile="ql/termstructures/volatility/smilesectionutils.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_smile_section_utils_1af63150d983416987c4f7e28ece797146" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::SmileSectionUtils::k_</definition>
        <argsstring></argsstring>
        <name>k_</name>
        <qualifiedname>QuantLib::SmileSectionUtils::k_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesectionutils.hpp" line="52" column="27" bodyfile="ql/termstructures/volatility/smilesectionutils.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_smile_section_utils_1ad81b8849c9806c7ed5bbd4c927041e3a" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::SmileSectionUtils::leftIndex_</definition>
        <argsstring></argsstring>
        <name>leftIndex_</name>
        <qualifiedname>QuantLib::SmileSectionUtils::leftIndex_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesectionutils.hpp" line="53" column="14" bodyfile="ql/termstructures/volatility/smilesectionutils.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_smile_section_utils_1a999e15db4e173a43a0a772909cf15e15" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::SmileSectionUtils::rightIndex_</definition>
        <argsstring></argsstring>
        <name>rightIndex_</name>
        <qualifiedname>QuantLib::SmileSectionUtils::rightIndex_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesectionutils.hpp" line="53" column="25" bodyfile="ql/termstructures/volatility/smilesectionutils.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_smile_section_utils_1ac063a1ed0e1880a535d3fcd2a2b8daea" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SmileSectionUtils::f_</definition>
        <argsstring></argsstring>
        <name>f_</name>
        <qualifiedname>QuantLib::SmileSectionUtils::f_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesectionutils.hpp" line="54" column="14" bodyfile="ql/termstructures/volatility/smilesectionutils.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_smile_section_utils_1a8b36916a80e3ba7b87b578cc269ba4aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::SmileSectionUtils::SmileSectionUtils</definition>
        <argsstring>(const SmileSection &amp;section, const std::vector&lt; Real &gt; &amp;moneynessGrid=std::vector&lt; Real &gt;(), Real atm=Null&lt; Real &gt;(), bool deleteArbitragePoints=false)</argsstring>
        <name>SmileSectionUtils</name>
        <qualifiedname>QuantLib::SmileSectionUtils::SmileSectionUtils</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_smile_section" kindref="compound">SmileSection</ref> &amp;</type>
          <declname>section</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>moneynessGrid</declname>
          <defval>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;()</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>atm</declname>
          <defval><ref refid="class_quant_lib_1_1_null" kindref="compound">Null</ref>&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>deleteArbitragePoints</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesectionutils.hpp" line="38" column="9" bodyfile="ql/termstructures/volatility/smilesectionutils.cpp" bodystart="26" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_smile_section_utils_1a45a63a23c4d8db2e466d1e87871c4ecb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>, <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::pair&lt; Real, Real &gt; QuantLib::SmileSectionUtils::arbitragefreeRegion</definition>
        <argsstring>() const</argsstring>
        <name>arbitragefreeRegion</name>
        <qualifiedname>QuantLib::SmileSectionUtils::arbitragefreeRegion</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesectionutils.hpp" line="43" column="19" bodyfile="ql/termstructures/volatility/smilesectionutils.cpp" bodystart="197" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_smile_section_utils_1afd28fd3887707ba8225aa591da051535" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref>, <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &gt;</type>
        <definition>std::pair&lt; Size, Size &gt; QuantLib::SmileSectionUtils::arbitragefreeIndices</definition>
        <argsstring>() const</argsstring>
        <name>arbitragefreeIndices</name>
        <qualifiedname>QuantLib::SmileSectionUtils::arbitragefreeIndices</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesectionutils.hpp" line="44" column="19" bodyfile="ql/termstructures/volatility/smilesectionutils.cpp" bodystart="201" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_smile_section_utils_1a43b7b4ca590c8cbf41eb3d920e495b2b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; Real &gt; &amp; QuantLib::SmileSectionUtils::moneyGrid</definition>
        <argsstring>() const</argsstring>
        <name>moneyGrid</name>
        <qualifiedname>QuantLib::SmileSectionUtils::moneyGrid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesectionutils.hpp" line="45" column="27" bodyfile="ql/termstructures/volatility/smilesectionutils.hpp" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_smile_section_utils_1a9916123412e1034059b0ccb302e7c113" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; Real &gt; &amp; QuantLib::SmileSectionUtils::strikeGrid</definition>
        <argsstring>() const</argsstring>
        <name>strikeGrid</name>
        <qualifiedname>QuantLib::SmileSectionUtils::strikeGrid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesectionutils.hpp" line="46" column="27" bodyfile="ql/termstructures/volatility/smilesectionutils.hpp" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_smile_section_utils_1a87cc4a13d151771629f67cfefbde900a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; Real &gt; &amp; QuantLib::SmileSectionUtils::callPrices</definition>
        <argsstring>() const</argsstring>
        <name>callPrices</name>
        <qualifiedname>QuantLib::SmileSectionUtils::callPrices</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesectionutils.hpp" line="47" column="27" bodyfile="ql/termstructures/volatility/smilesectionutils.hpp" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_smile_section_utils_1afe73899566374489787cb64546ad2c39" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SmileSectionUtils::atmLevel</definition>
        <argsstring>() const</argsstring>
        <name>atmLevel</name>
        <qualifiedname>QuantLib::SmileSectionUtils::atmLevel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesectionutils.hpp" line="48" column="14" bodyfile="ql/termstructures/volatility/smilesectionutils.hpp" bodystart="48" bodyend="48"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_smile_section_utils_1ac8ecaf0ff268057a3d0c3f1fa2650196" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::SmileSectionUtils::af</definition>
        <argsstring>(Size i0, Size i, Size i1) const</argsstring>
        <name>af</name>
        <qualifiedname>QuantLib::SmileSectionUtils::af</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i0</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/termstructures/volatility/smilesectionutils.hpp" line="51" column="14" bodyfile="ql/termstructures/volatility/smilesectionutils.cpp" bodystart="205" bodyend="217"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>smile-section utilities, the moneyness is expressed in<itemizedlist>
<listitem><para>absolute terms for normal</para>
</listitem><listitem><para>relative terms for shifted lognormal volatility smile sections </para>
</listitem></itemizedlist>
</para>
    </detaileddescription>
    <location file="ql/termstructures/volatility/smilesectionutils.hpp" line="36" column="5" bodyfile="ql/termstructures/volatility/smilesectionutils.hpp" bodystart="36" bodyend="55"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_smile_section_utils_1ac8ecaf0ff268057a3d0c3f1fa2650196" prot="private" virt="non-virtual"><scope>QuantLib::SmileSectionUtils</scope><name>af</name></member>
      <member refid="class_quant_lib_1_1_smile_section_utils_1afd28fd3887707ba8225aa591da051535" prot="public" virt="non-virtual"><scope>QuantLib::SmileSectionUtils</scope><name>arbitragefreeIndices</name></member>
      <member refid="class_quant_lib_1_1_smile_section_utils_1a45a63a23c4d8db2e466d1e87871c4ecb" prot="public" virt="non-virtual"><scope>QuantLib::SmileSectionUtils</scope><name>arbitragefreeRegion</name></member>
      <member refid="class_quant_lib_1_1_smile_section_utils_1afe73899566374489787cb64546ad2c39" prot="public" virt="non-virtual"><scope>QuantLib::SmileSectionUtils</scope><name>atmLevel</name></member>
      <member refid="class_quant_lib_1_1_smile_section_utils_1ac00cd4860f091552dcb0400a20af8cf7" prot="private" virt="non-virtual"><scope>QuantLib::SmileSectionUtils</scope><name>c_</name></member>
      <member refid="class_quant_lib_1_1_smile_section_utils_1a87cc4a13d151771629f67cfefbde900a" prot="public" virt="non-virtual"><scope>QuantLib::SmileSectionUtils</scope><name>callPrices</name></member>
      <member refid="class_quant_lib_1_1_smile_section_utils_1ac063a1ed0e1880a535d3fcd2a2b8daea" prot="private" virt="non-virtual"><scope>QuantLib::SmileSectionUtils</scope><name>f_</name></member>
      <member refid="class_quant_lib_1_1_smile_section_utils_1af63150d983416987c4f7e28ece797146" prot="private" virt="non-virtual"><scope>QuantLib::SmileSectionUtils</scope><name>k_</name></member>
      <member refid="class_quant_lib_1_1_smile_section_utils_1ad81b8849c9806c7ed5bbd4c927041e3a" prot="private" virt="non-virtual"><scope>QuantLib::SmileSectionUtils</scope><name>leftIndex_</name></member>
      <member refid="class_quant_lib_1_1_smile_section_utils_1a76a4c93d4b7bca635ff5601aa8419efc" prot="private" virt="non-virtual"><scope>QuantLib::SmileSectionUtils</scope><name>m_</name></member>
      <member refid="class_quant_lib_1_1_smile_section_utils_1a43b7b4ca590c8cbf41eb3d920e495b2b" prot="public" virt="non-virtual"><scope>QuantLib::SmileSectionUtils</scope><name>moneyGrid</name></member>
      <member refid="class_quant_lib_1_1_smile_section_utils_1a999e15db4e173a43a0a772909cf15e15" prot="private" virt="non-virtual"><scope>QuantLib::SmileSectionUtils</scope><name>rightIndex_</name></member>
      <member refid="class_quant_lib_1_1_smile_section_utils_1a8b36916a80e3ba7b87b578cc269ba4aa" prot="public" virt="non-virtual"><scope>QuantLib::SmileSectionUtils</scope><name>SmileSectionUtils</name></member>
      <member refid="class_quant_lib_1_1_smile_section_utils_1a9916123412e1034059b0ccb302e7c113" prot="public" virt="non-virtual"><scope>QuantLib::SmileSectionUtils</scope><name>strikeGrid</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

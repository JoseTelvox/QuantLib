<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_b_m_a_index" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::BMAIndex</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_interest_rate_index" prot="public" virt="non-virtual">QuantLib::InterestRateIndex</basecompoundref>
    <includes refid="bmaindex_8hpp" local="no">bmaindex.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Date calculations</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_b_m_a_index_1a5bd7067de324c9a72cec1d6aa85daa0d" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
        <definition>Handle&lt;YieldTermStructure&gt; QuantLib::BMAIndex::termStructure_</definition>
        <argsstring></argsstring>
        <name>termStructure_</name>
        <qualifiedname>QuantLib::BMAIndex::termStructure_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/bmaindex.hpp" line="64" column="16" bodyfile="ql/indexes/bmaindex.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_b_m_a_index_1a373d27d5cd0da31b9b0684cb6a9a3ed4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::BMAIndex::maturityDate</definition>
        <argsstring>(const Date &amp;valueDate) const override</argsstring>
        <name>maturityDate</name>
        <qualifiedname>QuantLib::BMAIndex::maturityDate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_interest_rate_index_1a8ee3be0f32a22eaf0aa08f8a91b5713a">maturityDate</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>valueDate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/bmaindex.hpp" line="55" column="14" bodyfile="ql/indexes/bmaindex.cpp" bodystart="71" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_b_m_a_index_1ab63a347dc9a457f5ed996d22d43d2e66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_schedule" kindref="compound">Schedule</ref></type>
        <definition>Schedule QuantLib::BMAIndex::fixingSchedule</definition>
        <argsstring>(const Date &amp;start, const Date &amp;end)</argsstring>
        <name>fixingSchedule</name>
        <qualifiedname>QuantLib::BMAIndex::fixingSchedule</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>start</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method returns a schedule of fixing dates between start and end. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/bmaindex.hpp" line="59" column="18" bodyfile="ql/indexes/bmaindex.cpp" bodystart="78" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_b_m_a_index_1aaa0d7b640e1c40041ddb320b4a381142" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::BMAIndex::forecastFixing</definition>
        <argsstring>(const Date &amp;fixingDate) const override</argsstring>
        <name>forecastFixing</name>
        <qualifiedname>QuantLib::BMAIndex::forecastFixing</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_interest_rate_index_1a64cc6f54168eb4586f4eaeff90037fc3">forecastFixing</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>fixingDate</declname>
        </param>
        <briefdescription>
<para>It can be overridden to implement particular conventions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/bmaindex.hpp" line="63" column="14" bodyfile="ql/indexes/bmaindex.cpp" bodystart="87" bodyend="95"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Index interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_b_m_a_index_1a42bf158b6e837d114beb3e48303a227c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QuantLib::BMAIndex::isValidFixingDate</definition>
        <argsstring>(const Date &amp;fixingDate) const override</argsstring>
        <name>isValidFixingDate</name>
        <qualifiedname>QuantLib::BMAIndex::isValidFixingDate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_index_1a9c26de5ae6c178fff2d898660e777b2a">isValidFixingDate</reimplements>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>fixingDate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>BMA is fixed weekly on Wednesdays. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/bmaindex.hpp" line="47" column="14" bodyfile="ql/indexes/bmaindex.cpp" bodystart="54" bodyend="65"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Inspectors</header>
      <memberdef kind="function" id="class_quant_lib_1_1_b_m_a_index_1a3d205126f516e211eb8ee08c42284d98" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
        <definition>Handle&lt; YieldTermStructure &gt; QuantLib::BMAIndex::forwardingTermStructure</definition>
        <argsstring>() const</argsstring>
        <name>forwardingTermStructure</name>
        <qualifiedname>QuantLib::BMAIndex::forwardingTermStructure</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/bmaindex.hpp" line="51" column="16" bodyfile="ql/indexes/bmaindex.cpp" bodystart="67" bodyend="69"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_b_m_a_index_1a38952a3e76325552093731cc9da8d352" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::BMAIndex::BMAIndex</definition>
        <argsstring>(Handle&lt; YieldTermStructure &gt; h={})</argsstring>
        <name>BMAIndex</name>
        <qualifiedname>QuantLib::BMAIndex::BMAIndex</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
          <declname>h</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/indexes/bmaindex.hpp" line="42" column="18" bodyfile="ql/indexes/bmaindex.cpp" bodystart="43" bodyend="52"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para><ref refid="class_quant_lib_1_1_bond" kindref="compound">Bond</ref> Market Association index. </para>
    </briefdescription>
    <detaileddescription>
<para>The BMA index is the short-term tax-exempt reference index of the <ref refid="class_quant_lib_1_1_bond" kindref="compound">Bond</ref> Market Association. It has tenor one week, is fixed weekly on Wednesdays and is applied with a one-day&apos;s fixing gap from Thursdays on for one week. It is the tax-exempt correspondent of the 1M USD-Libor. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::BMAIndex</label>
        <link refid="class_quant_lib_1_1_b_m_a_index"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Index</label>
        <link refid="class_quant_lib_1_1_index"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::InterestRateIndex</label>
        <link refid="class_quant_lib_1_1_interest_rate_index"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::BMAIndex</label>
        <link refid="class_quant_lib_1_1_b_m_a_index"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>termStructure_</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::Currency</label>
        <link refid="class_quant_lib_1_1_currency"/>
      </node>
      <node id="8">
        <label>QuantLib::DayCounter</label>
        <link refid="class_quant_lib_1_1_day_counter"/>
      </node>
      <node id="9">
        <label>QuantLib::Handle&lt; QuantLib::YieldTermStructure &gt;</label>
        <link refid="class_quant_lib_1_1_handle"/>
      </node>
      <node id="3">
        <label>QuantLib::Index</label>
        <link refid="class_quant_lib_1_1_index"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::InterestRateIndex</label>
        <link refid="class_quant_lib_1_1_interest_rate_index"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>tenor_</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>currency_</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>dayCounter_</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="6">
        <label>QuantLib::Period</label>
        <link refid="class_quant_lib_1_1_period"/>
      </node>
    </collaborationgraph>
    <location file="ql/indexes/bmaindex.hpp" line="40" column="5" bodyfile="ql/indexes/bmaindex.hpp" bodystart="40" bodyend="65"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_index_1a99d2677cae4cd185b34a170ee36eca9d" prot="public" virt="virtual"><scope>QuantLib::BMAIndex</scope><name>addFixing</name></member>
      <member refid="class_quant_lib_1_1_index_1a91fce2b65887f04e2cbcae5d9ffcc15e" prot="public" virt="non-virtual"><scope>QuantLib::BMAIndex</scope><name>addFixings</name></member>
      <member refid="class_quant_lib_1_1_index_1a46b3d6241bd06bd76a49123c5c0011cf" prot="public" virt="non-virtual"><scope>QuantLib::BMAIndex</scope><name>addFixings</name></member>
      <member refid="class_quant_lib_1_1_index_1aedde403ec6db8211816d7d1d0a883155" prot="public" virt="virtual"><scope>QuantLib::BMAIndex</scope><name>allowsNativeFixings</name></member>
      <member refid="class_quant_lib_1_1_b_m_a_index_1a38952a3e76325552093731cc9da8d352" prot="public" virt="non-virtual"><scope>QuantLib::BMAIndex</scope><name>BMAIndex</name></member>
      <member refid="class_quant_lib_1_1_index_1a6ebd31a5c6890f2dc0b25fc7824c809c" prot="public" virt="non-virtual"><scope>QuantLib::BMAIndex</scope><name>clearFixings</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_index_1aca07972dd06ccc847288e9178da5bb9d" prot="public" virt="non-virtual"><scope>QuantLib::BMAIndex</scope><name>currency</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_index_1aaee9f066740ca44c28d17bf3e91d4eb2" prot="protected" virt="non-virtual"><scope>QuantLib::BMAIndex</scope><name>currency_</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_index_1aaefd01a06bcac404367a49c13b5cc6ee" prot="public" virt="non-virtual"><scope>QuantLib::BMAIndex</scope><name>dayCounter</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_index_1af5c8b54dc418eb729e3c1d0b2500506b" prot="protected" virt="non-virtual"><scope>QuantLib::BMAIndex</scope><name>dayCounter_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::BMAIndex</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_index_1a04393be3f78545a798ba8a0827a40057" prot="public" virt="non-virtual"><scope>QuantLib::BMAIndex</scope><name>familyName</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_index_1a86463919bcb4d925443925508b588cea" prot="protected" virt="non-virtual"><scope>QuantLib::BMAIndex</scope><name>familyName_</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_index_1a6b43e49133a6de954b1e1f5bfae290ca" prot="public" virt="virtual"><scope>QuantLib::BMAIndex</scope><name>fixing</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_index_1a7d1f0d9b3146e03d1c24d31349664f94" prot="public" virt="virtual"><scope>QuantLib::BMAIndex</scope><name>fixingCalendar</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_index_1abb96d719861f38d521270595c823f6bc" prot="public" virt="virtual"><scope>QuantLib::BMAIndex</scope><name>fixingDate</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_index_1a4d63f8f06ea625150be8f893638fa4ac" prot="public" virt="non-virtual"><scope>QuantLib::BMAIndex</scope><name>fixingDays</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_index_1a56256a03588b5ec880c7dd155dd1b2e7" prot="protected" virt="non-virtual"><scope>QuantLib::BMAIndex</scope><name>fixingDays_</name></member>
      <member refid="class_quant_lib_1_1_b_m_a_index_1ab63a347dc9a457f5ed996d22d43d2e66" prot="public" virt="non-virtual"><scope>QuantLib::BMAIndex</scope><name>fixingSchedule</name></member>
      <member refid="class_quant_lib_1_1_b_m_a_index_1aaa0d7b640e1c40041ddb320b4a381142" prot="protected" virt="virtual"><scope>QuantLib::BMAIndex</scope><name>forecastFixing</name></member>
      <member refid="class_quant_lib_1_1_b_m_a_index_1a3d205126f516e211eb8ee08c42284d98" prot="public" virt="non-virtual"><scope>QuantLib::BMAIndex</scope><name>forwardingTermStructure</name></member>
      <member refid="class_quant_lib_1_1_index_1a3ca2ef1910e74b22dd55c39013642a5c" prot="public" virt="non-virtual"><scope>QuantLib::BMAIndex</scope><name>hasHistoricalFixing</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_index_1a03ad9af530f520f9f6236513c37e5393" prot="public" virt="non-virtual"><scope>QuantLib::BMAIndex</scope><name>InterestRateIndex</name></member>
      <member refid="class_quant_lib_1_1_b_m_a_index_1a42bf158b6e837d114beb3e48303a227c" prot="public" virt="virtual"><scope>QuantLib::BMAIndex</scope><name>isValidFixingDate</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::BMAIndex</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_b_m_a_index_1a373d27d5cd0da31b9b0684cb6a9a3ed4" prot="public" virt="virtual"><scope>QuantLib::BMAIndex</scope><name>maturityDate</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_index_1a5666a75ccc5d78a4691790eb6fc4a3c7" prot="public" virt="virtual"><scope>QuantLib::BMAIndex</scope><name>name</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_index_1a2c0b4ae2dbefe57327164cfbe843c5ab" prot="protected" virt="non-virtual"><scope>QuantLib::BMAIndex</scope><name>name_</name></member>
      <member refid="class_quant_lib_1_1_index_1aa9172bf19d428e1d212ef2e331ad8785" prot="protected" virt="non-virtual"><scope>QuantLib::BMAIndex</scope><name>notifier</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::BMAIndex</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::BMAIndex</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual"><scope>QuantLib::BMAIndex</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual"><scope>QuantLib::BMAIndex</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::BMAIndex</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::BMAIndex</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::BMAIndex</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::BMAIndex</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::BMAIndex</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_index_1a56f55745a69269f98c5ccc9b7e94d90e" prot="public" virt="virtual"><scope>QuantLib::BMAIndex</scope><name>pastFixing</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::BMAIndex</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::BMAIndex</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_index_1a3544330e6634316663404a04720191e3" prot="public" virt="non-virtual"><scope>QuantLib::BMAIndex</scope><name>tenor</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_index_1aa8f8b81ecbad6053d3c5a65da6166327" prot="protected" virt="non-virtual"><scope>QuantLib::BMAIndex</scope><name>tenor_</name></member>
      <member refid="class_quant_lib_1_1_b_m_a_index_1a5bd7067de324c9a72cec1d6aa85daa0d" prot="protected" virt="non-virtual"><scope>QuantLib::BMAIndex</scope><name>termStructure_</name></member>
      <member refid="class_quant_lib_1_1_index_1a373faa497820b43992d18ead1a8b87a8" prot="public" virt="non-virtual"><scope>QuantLib::BMAIndex</scope><name>timeSeries</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::BMAIndex</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::BMAIndex</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_index_1a790ff8bc3caa48efbdb968f6fd23edf0" prot="public" virt="virtual"><scope>QuantLib::BMAIndex</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_interest_rate_index_1af2dc5c8f3ac8ba2fe3d0891ac81ab419" prot="public" virt="virtual"><scope>QuantLib::BMAIndex</scope><name>valueDate</name></member>
      <member refid="class_quant_lib_1_1_index_1a5e8202e51d4c2053f61cb47d3f76b42f" prot="public" virt="non-virtual"><scope>QuantLib::BMAIndex</scope><name>~Index</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::BMAIndex</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::BMAIndex</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

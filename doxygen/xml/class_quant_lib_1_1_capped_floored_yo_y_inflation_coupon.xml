<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::CappedFlooredYoYInflationCoupon</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_yo_y_inflation_coupon" prot="public" virt="non-virtual">QuantLib::YoYInflationCoupon</basecompoundref>
    <includes refid="capflooredinflationcoupon_8hpp" local="no">capflooredinflationcoupon.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Visitability</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1a0c7205ca08129540e7720f54f06d88b5" prot="protected" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_yo_y_inflation_coupon" kindref="compound">YoYInflationCoupon</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;YoYInflationCoupon&gt; QuantLib::CappedFlooredYoYInflationCoupon::underlying_</definition>
        <argsstring></argsstring>
        <name>underlying_</name>
        <qualifiedname>QuantLib::CappedFlooredYoYInflationCoupon::underlying_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/capflooredinflationcoupon.hpp" line="156" column="25" bodyfile="ql/cashflows/capflooredinflationcoupon.hpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1a26df051bf2cd36460b9eaaef8d4f31fa" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::CappedFlooredYoYInflationCoupon::isFloored_</definition>
        <argsstring></argsstring>
        <name>isFloored_</name>
        <qualifiedname>QuantLib::CappedFlooredYoYInflationCoupon::isFloored_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/capflooredinflationcoupon.hpp" line="157" column="14" bodyfile="ql/cashflows/capflooredinflationcoupon.hpp" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1aa9f6b01bac5f9046e8077220a076645e" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::CappedFlooredYoYInflationCoupon::isCapped_</definition>
        <argsstring></argsstring>
        <name>isCapped_</name>
        <qualifiedname>QuantLib::CappedFlooredYoYInflationCoupon::isCapped_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/capflooredinflationcoupon.hpp" line="157" column="25" bodyfile="ql/cashflows/capflooredinflationcoupon.hpp" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1af484403ae50ba3c5e0aa1261236f75ac" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::CappedFlooredYoYInflationCoupon::cap_</definition>
        <argsstring></argsstring>
        <name>cap_</name>
        <qualifiedname>QuantLib::CappedFlooredYoYInflationCoupon::cap_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/capflooredinflationcoupon.hpp" line="158" column="14" bodyfile="ql/cashflows/capflooredinflationcoupon.hpp" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1a1355ba2c6d11a1c297635fa6e7ff0b37" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::CappedFlooredYoYInflationCoupon::floor_</definition>
        <argsstring></argsstring>
        <name>floor_</name>
        <qualifiedname>QuantLib::CappedFlooredYoYInflationCoupon::floor_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/capflooredinflationcoupon.hpp" line="158" column="19" bodyfile="ql/cashflows/capflooredinflationcoupon.hpp" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1acd2ee77497206318e8bc02950f33eeaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::CappedFlooredYoYInflationCoupon::accept</definition>
        <argsstring>(AcyclicVisitor &amp;v) override</argsstring>
        <name>accept</name>
        <qualifiedname>QuantLib::CappedFlooredYoYInflationCoupon::accept</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_event_1a572b6e63554be33515e60185aa8d1499">accept</reimplements>
        <param>
          <type><ref refid="class_quant_lib_1_1_acyclic_visitor" kindref="compound">AcyclicVisitor</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/capflooredinflationcoupon.hpp" line="142" column="14" bodyfile="ql/cashflows/capflooredinflationcoupon.cpp" bodystart="141" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1a176fb1df6c2bf6c44c1c0d60f7f2eda1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::CappedFlooredYoYInflationCoupon::underlyingRate</definition>
        <argsstring>() const</argsstring>
        <name>underlyingRate</name>
        <qualifiedname>QuantLib::CappedFlooredYoYInflationCoupon::underlyingRate</qualifiedname>
        <briefdescription>
<para>this returns the expected rate before cap and floor are applied </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/capflooredinflationcoupon.hpp" line="146" column="14" bodyfile="ql/cashflows/capflooredinflationcoupon.cpp" bodystart="88" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1a7029452929f48b43fc53d9c5779b81cb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::CappedFlooredYoYInflationCoupon::isCapped</definition>
        <argsstring>() const</argsstring>
        <name>isCapped</name>
        <qualifiedname>QuantLib::CappedFlooredYoYInflationCoupon::isCapped</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/capflooredinflationcoupon.hpp" line="148" column="14" bodyfile="ql/cashflows/capflooredinflationcoupon.hpp" bodystart="148" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1ae97936bac18aff7f8be1a86508b07a62" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::CappedFlooredYoYInflationCoupon::isFloored</definition>
        <argsstring>() const</argsstring>
        <name>isFloored</name>
        <qualifiedname>QuantLib::CappedFlooredYoYInflationCoupon::isFloored</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/capflooredinflationcoupon.hpp" line="149" column="14" bodyfile="ql/cashflows/capflooredinflationcoupon.hpp" bodystart="149" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1a3370adeb858a8cd5a0605b1d393b38b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::CappedFlooredYoYInflationCoupon::setPricer</definition>
        <argsstring>(const ext::shared_ptr&lt; YoYInflationCouponPricer &gt; &amp;)</argsstring>
        <name>setPricer</name>
        <qualifiedname>QuantLib::CappedFlooredYoYInflationCoupon::setPricer</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_yo_y_inflation_coupon_pricer" kindref="compound">YoYInflationCouponPricer</ref> &gt; &amp;</type>
          <defname>pricer</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/capflooredinflationcoupon.hpp" line="151" column="14" bodyfile="ql/cashflows/capflooredinflationcoupon.cpp" bodystart="79" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1acbf1aeb294961bb565d3de9d18141fab" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::CappedFlooredYoYInflationCoupon::setCommon</definition>
        <argsstring>(Rate cap, Rate floor)</argsstring>
        <name>setCommon</name>
        <qualifiedname>QuantLib::CappedFlooredYoYInflationCoupon::setCommon</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>cap</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>floor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/capflooredinflationcoupon.hpp" line="160" column="14" bodyfile="ql/cashflows/capflooredinflationcoupon.cpp" bodystart="25" bodyend="54"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>augmented Coupon interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1a79971fe0616d6ad36e479a68277137c2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::CappedFlooredYoYInflationCoupon::rate</definition>
        <argsstring>() const override</argsstring>
        <name>rate</name>
        <qualifiedname>QuantLib::CappedFlooredYoYInflationCoupon::rate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_coupon_1aa8ab475c56252328a30b4dc2181bfae5">rate</reimplements>
        <briefdescription>
<para>swap(let) rate </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/capflooredinflationcoupon.hpp" line="124" column="14" bodyfile="ql/cashflows/capflooredinflationcoupon.cpp" bodystart="92" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1ac7cd19488a8b73a547b6d11d8c1895e7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::CappedFlooredYoYInflationCoupon::cap</definition>
        <argsstring>() const</argsstring>
        <name>cap</name>
        <qualifiedname>QuantLib::CappedFlooredYoYInflationCoupon::cap</qualifiedname>
        <briefdescription>
<para>cap </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/capflooredinflationcoupon.hpp" line="126" column="14" bodyfile="ql/cashflows/capflooredinflationcoupon.cpp" bodystart="108" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1a90924ed63e1a99f777db769d4b37d650" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::CappedFlooredYoYInflationCoupon::floor</definition>
        <argsstring>() const</argsstring>
        <name>floor</name>
        <qualifiedname>QuantLib::CappedFlooredYoYInflationCoupon::floor</qualifiedname>
        <briefdescription>
<para>floor </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/capflooredinflationcoupon.hpp" line="128" column="14" bodyfile="ql/cashflows/capflooredinflationcoupon.cpp" bodystart="117" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1a12b46cad541787699d59867ca998f430" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::CappedFlooredYoYInflationCoupon::effectiveCap</definition>
        <argsstring>() const</argsstring>
        <name>effectiveCap</name>
        <qualifiedname>QuantLib::CappedFlooredYoYInflationCoupon::effectiveCap</qualifiedname>
        <briefdescription>
<para>effective cap of fixing </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/capflooredinflationcoupon.hpp" line="130" column="14" bodyfile="ql/cashflows/capflooredinflationcoupon.cpp" bodystart="126" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1ab147a716f7bfcd29ea7ab62a5a47ca13" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::CappedFlooredYoYInflationCoupon::effectiveFloor</definition>
        <argsstring>() const</argsstring>
        <name>effectiveFloor</name>
        <qualifiedname>QuantLib::CappedFlooredYoYInflationCoupon::effectiveFloor</qualifiedname>
        <briefdescription>
<para>effective floor of fixing </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/capflooredinflationcoupon.hpp" line="132" column="14" bodyfile="ql/cashflows/capflooredinflationcoupon.cpp" bodystart="131" bodyend="133"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Observer interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1a96872a60aaf5d12b5bafc2d7ef61e20b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::CappedFlooredYoYInflationCoupon::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <qualifiedname>QuantLib::CappedFlooredYoYInflationCoupon::update</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_observer_1a07905c55dca858470fcf4a1aea0005aa">update</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This method must be implemented in derived classes. An instance of Observer does not call this method directly: instead, it will be called by the observables the instance registered with when they need to notify any changes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/capflooredinflationcoupon.hpp" line="137" column="14" bodyfile="ql/cashflows/capflooredinflationcoupon.cpp" bodystart="136" bodyend="138"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1a5914a37bb462f6f4890e9d8f454333d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::CappedFlooredYoYInflationCoupon::CappedFlooredYoYInflationCoupon</definition>
        <argsstring>(const ext::shared_ptr&lt; YoYInflationCoupon &gt; &amp;underlying, Rate cap=Null&lt; Rate &gt;(), Rate floor=Null&lt; Rate &gt;())</argsstring>
        <name>CappedFlooredYoYInflationCoupon</name>
        <qualifiedname>QuantLib::CappedFlooredYoYInflationCoupon::CappedFlooredYoYInflationCoupon</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_yo_y_inflation_coupon" kindref="compound">YoYInflationCoupon</ref> &gt; &amp;</type>
          <declname>underlying</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>cap</declname>
          <defval><ref refid="class_quant_lib_1_1_null" kindref="compound">Null</ref>&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;()</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>floor</declname>
          <defval><ref refid="class_quant_lib_1_1_null" kindref="compound">Null</ref>&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/capflooredinflationcoupon.hpp" line="69" column="9" bodyfile="ql/cashflows/capflooredinflationcoupon.cpp" bodystart="57" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1a6e65635c1fb45ab2b3a8018b3216181b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::CappedFlooredYoYInflationCoupon::CappedFlooredYoYInflationCoupon</definition>
        <argsstring>(const Date &amp;paymentDate, Real nominal, const Date &amp;startDate, const Date &amp;endDate, Natural fixingDays, const ext::shared_ptr&lt; YoYInflationIndex &gt; &amp;index, const Period &amp;observationLag, const CPI::InterpolationType interpolation, const DayCounter &amp;dayCounter, Real gearing=1.0, Spread spread=0.0, const Rate cap=Null&lt; Rate &gt;(), const Rate floor=Null&lt; Rate &gt;(), const Date &amp;refPeriodStart=Date(), const Date &amp;refPeriodEnd=Date())</argsstring>
        <name>CappedFlooredYoYInflationCoupon</name>
        <qualifiedname>QuantLib::CappedFlooredYoYInflationCoupon::CappedFlooredYoYInflationCoupon</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>paymentDate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>nominal</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>startDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>endDate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>fixingDays</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_yo_y_inflation_index" kindref="compound">YoYInflationIndex</ref> &gt; &amp;</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>observationLag</declname>
        </param>
        <param>
          <type>const <ref refid="struct_quant_lib_1_1_c_p_i_1adaf018681fd1d9478c984348c82c9013" kindref="member">CPI::InterpolationType</ref></type>
          <declname>interpolation</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>gearing</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ad61d2e1a3f01154233de0d5fbb85177c" kindref="member">Spread</ref></type>
          <declname>spread</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>cap</declname>
          <defval><ref refid="class_quant_lib_1_1_null" kindref="compound">Null</ref>&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;()</defval>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>floor</declname>
          <defval><ref refid="class_quant_lib_1_1_null" kindref="compound">Null</ref>&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;()</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>refPeriodStart</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>refPeriodEnd</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/capflooredinflationcoupon.hpp" line="75" column="9" bodyfile="ql/cashflows/capflooredinflationcoupon.hpp" bodystart="75" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1a48a38ea490b903df192fe31131113e58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::CappedFlooredYoYInflationCoupon::CappedFlooredYoYInflationCoupon</definition>
        <argsstring>(const Date &amp;paymentDate, Real nominal, const Date &amp;startDate, const Date &amp;endDate, Natural fixingDays, const ext::shared_ptr&lt; YoYInflationIndex &gt; &amp;index, const Period &amp;observationLag, const DayCounter &amp;dayCounter, Real gearing=1.0, Spread spread=0.0, const Rate cap=Null&lt; Rate &gt;(), const Rate floor=Null&lt; Rate &gt;(), const Date &amp;refPeriodStart=Date(), const Date &amp;refPeriodEnd=Date())</argsstring>
        <name>CappedFlooredYoYInflationCoupon</name>
        <qualifiedname>QuantLib::CappedFlooredYoYInflationCoupon::CappedFlooredYoYInflationCoupon</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>paymentDate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>nominal</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>startDate</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>endDate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>fixingDays</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_yo_y_inflation_index" kindref="compound">YoYInflationIndex</ref> &gt; &amp;</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>observationLag</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dayCounter</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>gearing</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ad61d2e1a3f01154233de0d5fbb85177c" kindref="member">Spread</ref></type>
          <declname>spread</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>cap</declname>
          <defval><ref refid="class_quant_lib_1_1_null" kindref="compound">Null</ref>&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;()</defval>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>floor</declname>
          <defval><ref refid="class_quant_lib_1_1_null" kindref="compound">Null</ref>&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;()</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>refPeriodStart</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>refPeriodEnd</declname>
          <defval><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000001"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use the overload that passes an interpolation type instead. Deprecated in version 1.36. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/cashflows/capflooredinflationcoupon.hpp" line="102" column="9" bodyfile="ql/cashflows/capflooredinflationcoupon.hpp" bodystart="102" bodyend="119"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Capped or floored inflation coupon. </para>
    </briefdescription>
    <detaileddescription>
<para>Essentially a copy of the nominal version but taking a different index and a set of pricers (not just one).</para>
<para>The payoff <formula id="0">$ P $</formula> of a capped inflation-rate coupon with paysWithin = true is:</para>
<para><formula id="1">\[ P = N \times T \times \min(a L + b, C). \]</formula></para>
<para>where <formula id="4">$ N $</formula> is the notional, <formula id="5">$ T $</formula> is the accrual time, <formula id="6">$ L $</formula> is the inflation rate, <formula id="7">$ a $</formula> is its gearing, <formula id="8">$ b $</formula> is the spread, and <formula id="9">$ C $</formula> and <formula id="10">$ F $</formula> the strikes.</para>
<para>The payoff of a floored inflation-rate coupon is:</para>
<para><formula id="2">\[ P = N \times T \times \max(a L + b, F). \]</formula></para>
<para>The payoff of a collared inflation-rate coupon is:</para>
<para><formula id="3">\[ P = N \times T \times \min(\max(a L + b, F), C). \]</formula></para>
<para>If paysWithin = false then the inverse is returned (this provides for instrument cap and caplet prices).</para>
<para>They can be decomposed in the following manner. Decomposition of a capped floating rate coupon when paysWithin = true:   <formula id="11">\[R = \min(a L + b, C) = (a L + b) + \min(C - b - \xi |a| L, 0)
\]</formula> where <formula id="12">$ \xi = sgn(a) $</formula>. Then:   <formula id="13">\[R = (a L + b) + |a| \min(\frac{C - b}{|a|} - \xi L, 0)
\]</formula> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::CappedFlooredYoYInflationCoupon</label>
        <link refid="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::CashFlow</label>
        <link refid="class_quant_lib_1_1_cash_flow"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Coupon</label>
        <link refid="class_quant_lib_1_1_coupon"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::Event</label>
        <link refid="class_quant_lib_1_1_event"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::InflationCoupon</label>
        <link refid="class_quant_lib_1_1_inflation_coupon"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="9">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>QuantLib::YoYInflationCoupon</label>
        <link refid="class_quant_lib_1_1_yo_y_inflation_coupon"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::CappedFlooredYoYInflationCoupon</label>
        <link refid="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::CashFlow</label>
        <link refid="class_quant_lib_1_1_cash_flow"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Coupon</label>
        <link refid="class_quant_lib_1_1_coupon"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>accrualEndDate_</edgelabel>
          <edgelabel>accrualStartDate_</edgelabel>
          <edgelabel>exCouponDate_</edgelabel>
          <edgelabel>paymentDate_</edgelabel>
          <edgelabel>refPeriodEnd_</edgelabel>
          <edgelabel>refPeriodStart_</edgelabel>
        </childnode>
      </node>
      <node id="10">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="12">
        <label>QuantLib::DayCounter</label>
        <link refid="class_quant_lib_1_1_day_counter"/>
      </node>
      <node id="6">
        <label>QuantLib::Event</label>
        <link refid="class_quant_lib_1_1_event"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::InflationCoupon</label>
        <link refid="class_quant_lib_1_1_inflation_coupon"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>observationLag_</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>dayCounter_</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="9" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="9">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="11">
        <label>QuantLib::Period</label>
        <link refid="class_quant_lib_1_1_period"/>
      </node>
      <node id="2">
        <label>QuantLib::YoYInflationCoupon</label>
        <link refid="class_quant_lib_1_1_yo_y_inflation_coupon"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/cashflows/capflooredinflationcoupon.hpp" line="66" column="5" bodyfile="ql/cashflows/capflooredinflationcoupon.hpp" bodystart="66" bodyend="161"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1acd2ee77497206318e8bc02950f33eeaf" prot="public" virt="virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>accept</name></member>
      <member refid="class_quant_lib_1_1_coupon_1ae6b211492a4610a3e2fec3f2f430247a" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>accrualDays</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a5808fa2cd843a929bb14427b16dd3bde" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>accrualEndDate</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a58c14a6e0a6cc20165ff4a5289a72d41" prot="protected" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>accrualEndDate_</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a971dd3951a6fca68e16d4c00fccd2eab" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>accrualPeriod</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a1fc9f110182c5f201069dc3053f73deb" prot="protected" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>accrualPeriod_</name></member>
      <member refid="class_quant_lib_1_1_coupon_1aa063dce446a588713d94746a80cd0746" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>accrualStartDate</name></member>
      <member refid="class_quant_lib_1_1_coupon_1adb4da57a28a92b2a1a341f0c586aded0" prot="protected" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>accrualStartDate_</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a2641c2c53ba1d879be5ea0ab4ec00b27" prot="public" virt="virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>accruedAmount</name></member>
      <member refid="class_quant_lib_1_1_coupon_1acee86a8c573d57b79971329275682a29" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>accruedDays</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a67ff3181d3f3c078d193c9383f7cf51b" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>accruedPeriod</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_coupon_1a87308ac667fb2155fdc0c1c2a51d7d44" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>adjustedFixing</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a02070ea7442d30625992c1711030d4b8" prot="protected" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>alwaysForward_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a17c9433135a259e4776baec66204a484" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>alwaysForwardNotifications</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1af471b62dc88d979a3d24db1996cb84db" prot="public" virt="virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>amount</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a5244c7f83592375a0ea9048296435fd1" prot="protected" virt="virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a58b4986a80efa18634483a92c121e26e" prot="protected" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>calculated_</name></member>
      <member refid="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1ac7cd19488a8b73a547b6d11d8c1895e7" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>cap</name></member>
      <member refid="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1af484403ae50ba3c5e0aa1261236f75ac" prot="protected" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>cap_</name></member>
      <member refid="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1a5914a37bb462f6f4890e9d8f454333d7" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>CappedFlooredYoYInflationCoupon</name></member>
      <member refid="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1a6e65635c1fb45ab2b3a8018b3216181b" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>CappedFlooredYoYInflationCoupon</name></member>
      <member refid="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1a48a38ea490b903df192fe31131113e58" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>CappedFlooredYoYInflationCoupon</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_coupon_1a979ce21c54ddd63af12d1e3d32a52e55" prot="protected" virt="virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>checkPricerImpl</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a37d50b6041a918e6422a0e0e9974ab05" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>Coupon</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a36b31db67e84b7858c23b134c3ed9a42" prot="public" virt="virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>date</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a68ebb497c1a0e62cf4097ff804d954bc" prot="public" virt="virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>dayCounter</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a140b39f6353bdb146426da543fd85bbd" prot="protected" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>dayCounter_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1a12b46cad541787699d59867ca998f430" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>effectiveCap</name></member>
      <member refid="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1ab147a716f7bfcd29ea7ab62a5a47ca13" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>effectiveFloor</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a6278162ff5d79ca19655c7fbc4b702ca" prot="public" virt="virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>exCouponDate</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a9edde82b0183dc0b0138baa423c7097e" prot="protected" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>exCouponDate_</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1ad269d6a037445b03efcf0ff099fbd7df" prot="public" virt="virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>fixingDate</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a0e67390d5065280adea4c197d34cf464" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>fixingDays</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1ac1ded4d90bf71cc63f58bc05e52eda04" prot="protected" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>fixingDays_</name></member>
      <member refid="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1a90924ed63e1a99f777db769d4b37d650" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>floor</name></member>
      <member refid="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1a1355ba2c6d11a1c297635fa6e7ff0b37" prot="protected" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>floor_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1afac6ee19c3107c453e1347dd8000e023" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>forwardFirstNotificationOnly</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7157f41e83f2c5d924f5c5bafda04d1d" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>freeze</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7bb721fe00c6854e602758aba629ab77" prot="protected" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>frozen_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_coupon_1a4f0ef5809aca526e2f3cb486f894b5ba" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>gearing</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_coupon_1a54c294bca9f342fe0e732c6c72ba1aad" prot="protected" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>gearing_</name></member>
      <member refid="class_quant_lib_1_1_cash_flow_1a42691c396f43dde0b5ed37f4a014b0e8" prot="public" virt="virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>hasOccurred</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a245ccc1b7c2bfcb897af546dd613e09a" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>index</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1ad908b80564765674274971e32ae1cf87" prot="protected" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>index_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_coupon_1a65df65973a957b19a0eaa31e6b164a21" prot="public" virt="virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>indexFixing</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a098ce17748f32863f9ae8659c7dd1716" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>InflationCoupon</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_coupon_1a9174e133bd13a0f0597ad7e542fb694b" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>interpolation</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a0a7c5d42815a4e16ee2158e24dbfc748" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>isCalculated</name></member>
      <member refid="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1a7029452929f48b43fc53d9c5779b81cb" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>isCapped</name></member>
      <member refid="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1aa9f6b01bac5f9046e8077220a076645e" prot="protected" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>isCapped_</name></member>
      <member refid="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1ae97936bac18aff7f8be1a86508b07a62" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>isFloored</name></member>
      <member refid="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1a26df051bf2cd36460b9eaaef8d4f31fa" prot="protected" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>isFloored_</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a26f18f4ff7faaaebd8eae50e064b493e" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>LazyObject</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a579b9d1341796c612126053722928bb3" prot="public" virt="virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>nominal</name></member>
      <member refid="class_quant_lib_1_1_coupon_1aed38f11424938b0a46bb5a0b3db94a75" prot="protected" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>nominal_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Event::"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Event::"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a787bb517a1a463b36d97b55bd81a1b9b" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>observationLag</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1aad1ef78f2192653441dd99cd13e7b453" prot="protected" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>observationLag_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Event::"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::QuantLib::Observer::"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a27eb1806820783a5a1f8dbefa18f4c56" prot="protected" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>paymentDate_</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a574b65622bdf3af2888a06b011778df9" prot="public" virt="virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>performCalculations</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a8229837a6730de9eec1987394de9d2da" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>price</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a553c98b098e7ec17f25c9f11a0a18269" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>pricer</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a5eaa3988faec3edb68cb73fb54481e31" prot="protected" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>pricer_</name></member>
      <member refid="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1a79971fe0616d6ad36e479a68277137c2" prot="public" virt="virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>rate</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1aa74373af3d3e154b872f54319e339f7b" prot="protected" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>rate_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a70c9b24e50132408d8d9ce4f6674662a" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>recalculate</name></member>
      <member refid="class_quant_lib_1_1_coupon_1ad261da91ac390a467e20f48a01d29465" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>referencePeriodEnd</name></member>
      <member refid="class_quant_lib_1_1_coupon_1aa3c229434f73d8ab9e26eb70a609c0f5" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>referencePeriodStart</name></member>
      <member refid="class_quant_lib_1_1_coupon_1ae4af1ed468e66e946eda0b9026fa9e76" prot="protected" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>refPeriodEnd_</name></member>
      <member refid="class_quant_lib_1_1_coupon_1a208f7f13571a5b93f2436ceb7e0b669f" prot="protected" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>refPeriodStart_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1acbf1aeb294961bb565d3de9d18141fab" prot="private" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>setCommon</name></member>
      <member refid="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1a3370adeb858a8cd5a0605b1d393b38b7" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>setPricer</name></member>
      <member refid="class_quant_lib_1_1_inflation_coupon_1a512b8cf2f8daa10ba4a71c8d574a05a9" prot="public" virt="non-virtual" ambiguityscope="QuantLib::YoYInflationCoupon::"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>setPricer</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_coupon_1a3c437f8c6f0e49f807f8ae196ed54ef1" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>spread</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_coupon_1a2b6f762bb98c4d66efc21e137e83b459" prot="protected" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>spread_</name></member>
      <member refid="class_quant_lib_1_1_cash_flow_1a103a14e1657bd2d7cb6574bf6dcf96d0" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>tradingExCoupon</name></member>
      <member refid="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1a0c7205ca08129540e7720f54f06d88b5" prot="protected" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>underlying_</name></member>
      <member refid="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1a176fb1df6c2bf6c44c1c0d60f7f2eda1" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>underlyingRate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a2e0e4786666453024b9d4e0761f2770b" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>unfreeze</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_capped_floored_yo_y_inflation_coupon_1a96872a60aaf5d12b5bafc2d7ef61e20b" prot="public" virt="virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_coupon_1a3df6574985b665510df2a4a72b4ec537" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>yoyIndex</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_coupon_1a845c6d2c6690a26f6a6ef08d06852d63" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>YoYInflationCoupon</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_coupon_1af0ae0cdca51e5b20e1d545dc84c6a2c0" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>YoYInflationCoupon</name></member>
      <member refid="class_quant_lib_1_1_cash_flow_1a4ac3d8fa6eeb8c307345ada96b25cecf" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>~CashFlow</name></member>
      <member refid="class_quant_lib_1_1_event_1a26cef5942731bfb52ed77e74abdcfe9f" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>~Event</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a9d719c43bb627177a90d7d12324a2d6e" prot="public" virt="non-virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>~LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::CappedFlooredYoYInflationCoupon</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

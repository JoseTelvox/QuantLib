<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_commodity_cash_flow" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::CommodityCashFlow</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_cash_flow" prot="public" virt="non-virtual">QuantLib::CashFlow</basecompoundref>
    <sectiondef kind="user-defined">
      <header>Visitability</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_commodity_cash_flow_1adcfa5fb32ecfdc098c8b29c6a9b69e42" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::CommodityCashFlow::date_</definition>
        <argsstring></argsstring>
        <name>date_</name>
        <qualifiedname>QuantLib::CommodityCashFlow::date_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/commoditycashflow.hpp" line="79" column="14" bodyfile="ql/experimental/commodities/commoditycashflow.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_commodity_cash_flow_1aacbd4189d7ac49ff1c7e70bc211eb116" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_money" kindref="compound">Money</ref></type>
        <definition>Money QuantLib::CommodityCashFlow::discountedAmount_</definition>
        <argsstring></argsstring>
        <name>discountedAmount_</name>
        <qualifiedname>QuantLib::CommodityCashFlow::discountedAmount_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/commoditycashflow.hpp" line="80" column="15" bodyfile="ql/experimental/commodities/commoditycashflow.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_commodity_cash_flow_1a97d5a7f38a5e050789af9dce2b68eb3e" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_money" kindref="compound">Money</ref></type>
        <definition>Money QuantLib::CommodityCashFlow::undiscountedAmount_</definition>
        <argsstring></argsstring>
        <name>undiscountedAmount_</name>
        <qualifiedname>QuantLib::CommodityCashFlow::undiscountedAmount_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/commoditycashflow.hpp" line="80" column="33" bodyfile="ql/experimental/commodities/commoditycashflow.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_commodity_cash_flow_1ab7fc6ca81d5a8a4afe113d06179be930" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_money" kindref="compound">Money</ref></type>
        <definition>Money QuantLib::CommodityCashFlow::discountedPaymentAmount_</definition>
        <argsstring></argsstring>
        <name>discountedPaymentAmount_</name>
        <qualifiedname>QuantLib::CommodityCashFlow::discountedPaymentAmount_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/commoditycashflow.hpp" line="81" column="15" bodyfile="ql/experimental/commodities/commoditycashflow.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_commodity_cash_flow_1a366b0b69516a4acdd7d04ab08253eb4a" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_money" kindref="compound">Money</ref></type>
        <definition>Money QuantLib::CommodityCashFlow::undiscountedPaymentAmount_</definition>
        <argsstring></argsstring>
        <name>undiscountedPaymentAmount_</name>
        <qualifiedname>QuantLib::CommodityCashFlow::undiscountedPaymentAmount_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/commoditycashflow.hpp" line="81" column="40" bodyfile="ql/experimental/commodities/commoditycashflow.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_commodity_cash_flow_1acbcf3b94f36ac1aaf08c958e80372e3e" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CommodityCashFlow::discountFactor_</definition>
        <argsstring></argsstring>
        <name>discountFactor_</name>
        <qualifiedname>QuantLib::CommodityCashFlow::discountFactor_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/commoditycashflow.hpp" line="82" column="14" bodyfile="ql/experimental/commodities/commoditycashflow.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_commodity_cash_flow_1ab8655a74c5dd876e80c6eda1b5383e15" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CommodityCashFlow::paymentDiscountFactor_</definition>
        <argsstring></argsstring>
        <name>paymentDiscountFactor_</name>
        <qualifiedname>QuantLib::CommodityCashFlow::paymentDiscountFactor_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/commoditycashflow.hpp" line="82" column="30" bodyfile="ql/experimental/commodities/commoditycashflow.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_commodity_cash_flow_1a20d91f7f2f755257367a2698913a4549" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::CommodityCashFlow::finalized_</definition>
        <argsstring></argsstring>
        <name>finalized_</name>
        <qualifiedname>QuantLib::CommodityCashFlow::finalized_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/commoditycashflow.hpp" line="83" column="14" bodyfile="ql/experimental/commodities/commoditycashflow.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_commodity_cash_flow_1a5bcc1e5af6a5acf1c339416c5e18daa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::CommodityCashFlow::accept</definition>
        <argsstring>(AcyclicVisitor &amp;) override</argsstring>
        <name>accept</name>
        <qualifiedname>QuantLib::CommodityCashFlow::accept</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_cash_flow_1a2ee98a71e01a73026ed476a5fa40aa8c">accept</reimplements>
        <param>
          <type><ref refid="class_quant_lib_1_1_acyclic_visitor" kindref="compound">AcyclicVisitor</ref> &amp;</type>
          <defname>v</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/commoditycashflow.hpp" line="76" column="14" bodyfile="ql/experimental/commodities/commoditycashflow.cpp" bodystart="26" bodyend="32"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Event interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_commodity_cash_flow_1a4188cf1f1f3227cf61daa36ae5d0fa3f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::CommodityCashFlow::date</definition>
        <argsstring>() const override</argsstring>
        <name>date</name>
        <qualifiedname>QuantLib::CommodityCashFlow::date</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_cash_flow_1a71b50b96effa6166e09f0f8e25dd8d9b">date</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This is inherited from the event class </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/commoditycashflow.hpp" line="52" column="14" bodyfile="ql/experimental/commodities/commoditycashflow.hpp" bodystart="52" bodyend="52"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>CashFlow interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_commodity_cash_flow_1a127f322b6bf0e655a4cbfae05332de24" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CommodityCashFlow::amount</definition>
        <argsstring>() const override</argsstring>
        <name>amount</name>
        <qualifiedname>QuantLib::CommodityCashFlow::amount</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_cash_flow_1a92962488f6a37dc8ea4ea49712a2c0c1">amount</reimplements>
        <briefdescription>
<para>returns the amount of the cash flow </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The amount is not discounted, i.e., it is the actual amount paid at the cash flow date. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/commoditycashflow.hpp" line="56" column="14" bodyfile="ql/experimental/commodities/commoditycashflow.hpp" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_commodity_cash_flow_1a37ce73b4e2863f7756cbbbc234538d4e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_currency" kindref="compound">Currency</ref> &amp;</type>
        <definition>const Currency &amp; QuantLib::CommodityCashFlow::currency</definition>
        <argsstring>() const</argsstring>
        <name>currency</name>
        <qualifiedname>QuantLib::CommodityCashFlow::currency</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/commoditycashflow.hpp" line="58" column="24" bodyfile="ql/experimental/commodities/commoditycashflow.hpp" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_commodity_cash_flow_1a7257f6d20048e3d3f39a1a21f66c417b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_money" kindref="compound">Money</ref> &amp;</type>
        <definition>const Money &amp; QuantLib::CommodityCashFlow::discountedAmount</definition>
        <argsstring>() const</argsstring>
        <name>discountedAmount</name>
        <qualifiedname>QuantLib::CommodityCashFlow::discountedAmount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/commoditycashflow.hpp" line="62" column="21" bodyfile="ql/experimental/commodities/commoditycashflow.hpp" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_commodity_cash_flow_1a56306549e2f64e32b302f9717777b6ab" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_money" kindref="compound">Money</ref> &amp;</type>
        <definition>const Money &amp; QuantLib::CommodityCashFlow::undiscountedAmount</definition>
        <argsstring>() const</argsstring>
        <name>undiscountedAmount</name>
        <qualifiedname>QuantLib::CommodityCashFlow::undiscountedAmount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/commoditycashflow.hpp" line="63" column="21" bodyfile="ql/experimental/commodities/commoditycashflow.hpp" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_commodity_cash_flow_1a7daafca3c11ae72fb4e14a168c5f9577" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_money" kindref="compound">Money</ref> &amp;</type>
        <definition>const Money &amp; QuantLib::CommodityCashFlow::discountedPaymentAmount</definition>
        <argsstring>() const</argsstring>
        <name>discountedPaymentAmount</name>
        <qualifiedname>QuantLib::CommodityCashFlow::discountedPaymentAmount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/commoditycashflow.hpp" line="64" column="21" bodyfile="ql/experimental/commodities/commoditycashflow.hpp" bodystart="64" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_commodity_cash_flow_1a534083350d5336e1596494d23b7cd13f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_money" kindref="compound">Money</ref> &amp;</type>
        <definition>const Money &amp; QuantLib::CommodityCashFlow::undiscountedPaymentAmount</definition>
        <argsstring>() const</argsstring>
        <name>undiscountedPaymentAmount</name>
        <qualifiedname>QuantLib::CommodityCashFlow::undiscountedPaymentAmount</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/commoditycashflow.hpp" line="67" column="21" bodyfile="ql/experimental/commodities/commoditycashflow.hpp" bodystart="67" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_commodity_cash_flow_1a03130c88fdcdcffe57ee3530c973c72f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CommodityCashFlow::discountFactor</definition>
        <argsstring>() const</argsstring>
        <name>discountFactor</name>
        <qualifiedname>QuantLib::CommodityCashFlow::discountFactor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/commoditycashflow.hpp" line="70" column="14" bodyfile="ql/experimental/commodities/commoditycashflow.hpp" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_commodity_cash_flow_1aabed7ac9391fdca757951fa75bca9851" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::CommodityCashFlow::paymentDiscountFactor</definition>
        <argsstring>() const</argsstring>
        <name>paymentDiscountFactor</name>
        <qualifiedname>QuantLib::CommodityCashFlow::paymentDiscountFactor</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/commoditycashflow.hpp" line="71" column="14" bodyfile="ql/experimental/commodities/commoditycashflow.hpp" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_commodity_cash_flow_1ae42d5e060bdd0a5e579c370f7b4e3114" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::CommodityCashFlow::finalized</definition>
        <argsstring>() const</argsstring>
        <name>finalized</name>
        <qualifiedname>QuantLib::CommodityCashFlow::finalized</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/commoditycashflow.hpp" line="72" column="14" bodyfile="ql/experimental/commodities/commoditycashflow.hpp" bodystart="72" bodyend="72"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_commodity_cash_flow_1aceef54b1dc91b4b3d47bd81a93871c19" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::CommodityCashFlow::CommodityCashFlow</definition>
        <argsstring>(const Date &amp;date, Money discountedAmount, Money undiscountedAmount, Money discountedPaymentAmount, Money undiscountedPaymentAmount, Real discountFactor, Real paymentDiscountFactor, bool finalized)</argsstring>
        <name>CommodityCashFlow</name>
        <qualifiedname>QuantLib::CommodityCashFlow::CommodityCashFlow</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>date</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_money" kindref="compound">Money</ref></type>
          <declname>discountedAmount</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_money" kindref="compound">Money</ref></type>
          <declname>undiscountedAmount</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_money" kindref="compound">Money</ref></type>
          <declname>discountedPaymentAmount</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_money" kindref="compound">Money</ref></type>
          <declname>undiscountedPaymentAmount</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>discountFactor</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>paymentDiscountFactor</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>finalized</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/commoditycashflow.hpp" line="36" column="9" bodyfile="ql/experimental/commodities/commoditycashflow.hpp" bodystart="36" bodyend="49"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::CashFlow</label>
        <link refid="class_quant_lib_1_1_cash_flow"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::CommodityCashFlow</label>
        <link refid="class_quant_lib_1_1_commodity_cash_flow"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Event</label>
        <link refid="class_quant_lib_1_1_event"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::CashFlow</label>
        <link refid="class_quant_lib_1_1_cash_flow"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::CommodityCashFlow</label>
        <link refid="class_quant_lib_1_1_commodity_cash_flow"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::Event</label>
        <link refid="class_quant_lib_1_1_event"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="6">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/commodities/commoditycashflow.hpp" line="34" column="5" bodyfile="ql/experimental/commodities/commoditycashflow.hpp" bodystart="34" bodyend="84"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_commodity_cash_flow_1a5bcc1e5af6a5acf1c339416c5e18daa9" prot="public" virt="virtual"><scope>QuantLib::CommodityCashFlow</scope><name>accept</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a02070ea7442d30625992c1711030d4b8" prot="protected" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>alwaysForward_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a17c9433135a259e4776baec66204a484" prot="public" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>alwaysForwardNotifications</name></member>
      <member refid="class_quant_lib_1_1_commodity_cash_flow_1a127f322b6bf0e655a4cbfae05332de24" prot="public" virt="virtual"><scope>QuantLib::CommodityCashFlow</scope><name>amount</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a5244c7f83592375a0ea9048296435fd1" prot="protected" virt="virtual"><scope>QuantLib::CommodityCashFlow</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a58b4986a80efa18634483a92c121e26e" prot="protected" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>calculated_</name></member>
      <member refid="class_quant_lib_1_1_commodity_cash_flow_1aceef54b1dc91b4b3d47bd81a93871c19" prot="public" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>CommodityCashFlow</name></member>
      <member refid="class_quant_lib_1_1_commodity_cash_flow_1a37ce73b4e2863f7756cbbbc234538d4e" prot="public" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>currency</name></member>
      <member refid="class_quant_lib_1_1_commodity_cash_flow_1a4188cf1f1f3227cf61daa36ae5d0fa3f" prot="public" virt="virtual"><scope>QuantLib::CommodityCashFlow</scope><name>date</name></member>
      <member refid="class_quant_lib_1_1_commodity_cash_flow_1adcfa5fb32ecfdc098c8b29c6a9b69e42" prot="private" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>date_</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::CommodityCashFlow</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_commodity_cash_flow_1a7257f6d20048e3d3f39a1a21f66c417b" prot="public" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>discountedAmount</name></member>
      <member refid="class_quant_lib_1_1_commodity_cash_flow_1aacbd4189d7ac49ff1c7e70bc211eb116" prot="private" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>discountedAmount_</name></member>
      <member refid="class_quant_lib_1_1_commodity_cash_flow_1a7daafca3c11ae72fb4e14a168c5f9577" prot="public" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>discountedPaymentAmount</name></member>
      <member refid="class_quant_lib_1_1_commodity_cash_flow_1ab7fc6ca81d5a8a4afe113d06179be930" prot="private" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>discountedPaymentAmount_</name></member>
      <member refid="class_quant_lib_1_1_commodity_cash_flow_1a03130c88fdcdcffe57ee3530c973c72f" prot="public" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>discountFactor</name></member>
      <member refid="class_quant_lib_1_1_commodity_cash_flow_1acbcf3b94f36ac1aaf08c958e80372e3e" prot="private" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>discountFactor_</name></member>
      <member refid="class_quant_lib_1_1_cash_flow_1a235e2205946f507de2d3b2cbfaf8cd89" prot="public" virt="virtual"><scope>QuantLib::CommodityCashFlow</scope><name>exCouponDate</name></member>
      <member refid="class_quant_lib_1_1_commodity_cash_flow_1ae42d5e060bdd0a5e579c370f7b4e3114" prot="public" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>finalized</name></member>
      <member refid="class_quant_lib_1_1_commodity_cash_flow_1a20d91f7f2f755257367a2698913a4549" prot="private" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>finalized_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1afac6ee19c3107c453e1347dd8000e023" prot="public" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>forwardFirstNotificationOnly</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7157f41e83f2c5d924f5c5bafda04d1d" prot="public" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>freeze</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7bb721fe00c6854e602758aba629ab77" prot="protected" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>frozen_</name></member>
      <member refid="class_quant_lib_1_1_cash_flow_1a42691c396f43dde0b5ed37f4a014b0e8" prot="public" virt="virtual"><scope>QuantLib::CommodityCashFlow</scope><name>hasOccurred</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a0a7c5d42815a4e16ee2158e24dbfc748" prot="public" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>isCalculated</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a26f18f4ff7faaaebd8eae50e064b493e" prot="public" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Event::"><scope>QuantLib::CommodityCashFlow</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Event::"><scope>QuantLib::CommodityCashFlow</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::CommodityCashFlow</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::CommodityCashFlow</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Event::"><scope>QuantLib::CommodityCashFlow</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::QuantLib::Observer::"><scope>QuantLib::CommodityCashFlow</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_commodity_cash_flow_1aabed7ac9391fdca757951fa75bca9851" prot="public" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>paymentDiscountFactor</name></member>
      <member refid="class_quant_lib_1_1_commodity_cash_flow_1ab8655a74c5dd876e80c6eda1b5383e15" prot="private" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>paymentDiscountFactor_</name></member>
      <member refid="class_quant_lib_1_1_cash_flow_1af9cd641e3841cdcf5aba9c8d5121ce91" prot="public" virt="virtual"><scope>QuantLib::CommodityCashFlow</scope><name>performCalculations</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a70c9b24e50132408d8d9ce4f6674662a" prot="public" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>recalculate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_cash_flow_1a103a14e1657bd2d7cb6574bf6dcf96d0" prot="public" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>tradingExCoupon</name></member>
      <member refid="class_quant_lib_1_1_commodity_cash_flow_1a56306549e2f64e32b302f9717777b6ab" prot="public" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>undiscountedAmount</name></member>
      <member refid="class_quant_lib_1_1_commodity_cash_flow_1a97d5a7f38a5e050789af9dce2b68eb3e" prot="private" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>undiscountedAmount_</name></member>
      <member refid="class_quant_lib_1_1_commodity_cash_flow_1a534083350d5336e1596494d23b7cd13f" prot="public" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>undiscountedPaymentAmount</name></member>
      <member refid="class_quant_lib_1_1_commodity_cash_flow_1a366b0b69516a4acdd7d04ab08253eb4a" prot="private" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>undiscountedPaymentAmount_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a2e0e4786666453024b9d4e0761f2770b" prot="public" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>unfreeze</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1adee2bf49be5c4c78736be293321a856d" prot="public" virt="virtual"><scope>QuantLib::CommodityCashFlow</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_cash_flow_1a4ac3d8fa6eeb8c307345ada96b25cecf" prot="public" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>~CashFlow</name></member>
      <member refid="class_quant_lib_1_1_event_1a26cef5942731bfb52ed77e74abdcfe9f" prot="public" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>~Event</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a9d719c43bb627177a90d7d12324a2d6e" prot="public" virt="non-virtual"><scope>QuantLib::CommodityCashFlow</scope><name>~LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::CommodityCashFlow</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::CommodityCashFlow</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

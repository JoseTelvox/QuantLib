<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::MakeMCDiscreteArithmeticAPEngine</compoundname>
    <templateparamlist>
      <param>
        <type>class RNG</type>
        <defval><ref refid="namespace_quant_lib_1a68b9aaf5f0c17983506b1a1db8575ab0" kindref="member">PseudoRandom</ref></defval>
      </param>
      <param>
        <type>class S</type>
        <defval><ref refid="namespace_quant_lib_1ae2e788da35d2b866040a03b96227ee6e" kindref="member">Statistics</ref></defval>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine_1a8a0ddd47b8acd328f63e4cc5e431b827" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_generalized_black_scholes_process" kindref="compound">GeneralizedBlackScholesProcess</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;GeneralizedBlackScholesProcess&gt; QuantLib::MakeMCDiscreteArithmeticAPEngine&lt; RNG, S &gt;::process_</definition>
        <argsstring></argsstring>
        <name>process_</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPEngine::process_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" line="202" column="25" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine_1a07780be0b8a549d7020fa9611b49077b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::MakeMCDiscreteArithmeticAPEngine&lt; RNG, S &gt;::antithetic_</definition>
        <argsstring></argsstring>
        <name>antithetic_</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPEngine::antithetic_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" line="203" column="14" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine_1a28cc00ad5b3e728cd30dda2c62911f1e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::MakeMCDiscreteArithmeticAPEngine&lt; RNG, S &gt;::controlVariate_</definition>
        <argsstring></argsstring>
        <name>controlVariate_</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPEngine::controlVariate_</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" line="203" column="27" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine_1a1c3749ca09e8eda4fdabfa79adfc2c90" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCDiscreteArithmeticAPEngine&lt; RNG, S &gt;::samples_</definition>
        <argsstring></argsstring>
        <name>samples_</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPEngine::samples_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" line="204" column="14" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine_1a8ed2e54dfc09b541be0b6bb685aafd5b" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MakeMCDiscreteArithmeticAPEngine&lt; RNG, S &gt;::maxSamples_</definition>
        <argsstring></argsstring>
        <name>maxSamples_</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPEngine::maxSamples_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" line="204" column="23" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine_1a6df8d217cd9f65dfae2ab17ab8592562" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::MakeMCDiscreteArithmeticAPEngine&lt; RNG, S &gt;::tolerance_</definition>
        <argsstring></argsstring>
        <name>tolerance_</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPEngine::tolerance_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" line="205" column="14" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine_1a5b97f4e503bb82d9d918de1f87521778" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::MakeMCDiscreteArithmeticAPEngine&lt; RNG, S &gt;::brownianBridge_</definition>
        <argsstring></argsstring>
        <name>brownianBridge_</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPEngine::brownianBridge_</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" line="206" column="14" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine_1af5b114fb01e799e34defb0f4f8873c90" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
        <definition>BigNatural QuantLib::MakeMCDiscreteArithmeticAPEngine&lt; RNG, S &gt;::seed_</definition>
        <argsstring></argsstring>
        <name>seed_</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPEngine::seed_</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" line="207" column="20" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" bodystart="207" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine_1ab33762f1e0e24912c04675a5dde6aa7c" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::MakeMCDiscreteArithmeticAPEngine&lt; RNG, S &gt;::MakeMCDiscreteArithmeticAPEngine</definition>
        <argsstring>(ext::shared_ptr&lt; GeneralizedBlackScholesProcess &gt; process)</argsstring>
        <name>MakeMCDiscreteArithmeticAPEngine</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPEngine::MakeMCDiscreteArithmeticAPEngine</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_generalized_black_scholes_process" kindref="compound">GeneralizedBlackScholesProcess</ref> &gt;</type>
          <declname>process</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" line="189" column="18" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" bodystart="211" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine_1a8fa064ffe302326854c59cc727e79f82" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine" kindref="compound">MakeMCDiscreteArithmeticAPEngine</ref> &amp;</type>
        <definition>MakeMCDiscreteArithmeticAPEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCDiscreteArithmeticAPEngine&lt; RNG, S &gt;::withBrownianBridge</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>withBrownianBridge</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPEngine::withBrownianBridge</qualifiedname>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" line="192" column="42" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" bodystart="254" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine_1a0ee51017d3a259c113c01761d9662ef3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine" kindref="compound">MakeMCDiscreteArithmeticAPEngine</ref> &amp;</type>
        <definition>MakeMCDiscreteArithmeticAPEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCDiscreteArithmeticAPEngine&lt; RNG, S &gt;::withSamples</definition>
        <argsstring>(Size samples)</argsstring>
        <name>withSamples</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPEngine::withSamples</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" line="193" column="42" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" bodystart="218" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine_1a882467ede2d40a3b4c4dcc1f31f93f69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine" kindref="compound">MakeMCDiscreteArithmeticAPEngine</ref> &amp;</type>
        <definition>MakeMCDiscreteArithmeticAPEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCDiscreteArithmeticAPEngine&lt; RNG, S &gt;::withAbsoluteTolerance</definition>
        <argsstring>(Real tolerance)</argsstring>
        <name>withAbsoluteTolerance</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPEngine::withAbsoluteTolerance</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>tolerance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" line="194" column="42" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" bodystart="227" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine_1a9ca8f6d10030d47aa358234ff86beaf2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine" kindref="compound">MakeMCDiscreteArithmeticAPEngine</ref> &amp;</type>
        <definition>MakeMCDiscreteArithmeticAPEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCDiscreteArithmeticAPEngine&lt; RNG, S &gt;::withMaxSamples</definition>
        <argsstring>(Size samples)</argsstring>
        <name>withMaxSamples</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPEngine::withMaxSamples</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>samples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" line="195" column="42" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" bodystart="240" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine_1a31df61ff8554e3110a7a02719475e793" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine" kindref="compound">MakeMCDiscreteArithmeticAPEngine</ref> &amp;</type>
        <definition>MakeMCDiscreteArithmeticAPEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCDiscreteArithmeticAPEngine&lt; RNG, S &gt;::withSeed</definition>
        <argsstring>(BigNatural seed)</argsstring>
        <name>withSeed</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPEngine::withSeed</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" line="196" column="42" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" bodystart="247" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine_1acc0d1c59224b0ed81d9c29b4d3cc9f2c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine" kindref="compound">MakeMCDiscreteArithmeticAPEngine</ref> &amp;</type>
        <definition>MakeMCDiscreteArithmeticAPEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCDiscreteArithmeticAPEngine&lt; RNG, S &gt;::withAntitheticVariate</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>withAntitheticVariate</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPEngine::withAntitheticVariate</qualifiedname>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" line="197" column="42" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" bodystart="261" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine_1aa10185513c93942c67921b0999022ac3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine" kindref="compound">MakeMCDiscreteArithmeticAPEngine</ref> &amp;</type>
        <definition>MakeMCDiscreteArithmeticAPEngine&lt; RNG, S &gt; &amp; QuantLib::MakeMCDiscreteArithmeticAPEngine&lt; RNG, S &gt;::withControlVariate</definition>
        <argsstring>(bool b=true)</argsstring>
        <name>withControlVariate</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPEngine::withControlVariate</qualifiedname>
        <param>
          <type>bool</type>
          <declname>b</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" line="198" column="42" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" bodystart="268" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine_1af04c3d6469ab048cdf517332d04902e7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::MakeMCDiscreteArithmeticAPEngine&lt; RNG, S &gt;::operator ext::shared_ptr&lt; PricingEngine &gt;</definition>
        <argsstring>() const</argsstring>
        <name>operator ext::shared_ptr&lt; PricingEngine &gt;</name>
        <qualifiedname>QuantLib::MakeMCDiscreteArithmeticAPEngine::shared_ptr&lt; PricingEngine &gt;</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" line="200" column="9" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" bodystart="275" bodyend="284"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" line="187" column="5" bodyfile="ql/pricingengines/asian/mc_discr_arith_av_price.hpp" bodystart="187" bodyend="208"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine_1a07780be0b8a549d7020fa9611b49077b" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPEngine</scope><name>antithetic_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine_1a5b97f4e503bb82d9d918de1f87521778" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPEngine</scope><name>brownianBridge_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine_1a28cc00ad5b3e728cd30dda2c62911f1e" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPEngine</scope><name>controlVariate_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine_1ab33762f1e0e24912c04675a5dde6aa7c" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPEngine</scope><name>MakeMCDiscreteArithmeticAPEngine</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine_1a8ed2e54dfc09b541be0b6bb685aafd5b" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPEngine</scope><name>maxSamples_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine_1af04c3d6469ab048cdf517332d04902e7" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPEngine</scope><name>operator ext::shared_ptr&lt; PricingEngine &gt;</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine_1a8a0ddd47b8acd328f63e4cc5e431b827" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPEngine</scope><name>process_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine_1a1c3749ca09e8eda4fdabfa79adfc2c90" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPEngine</scope><name>samples_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine_1af5b114fb01e799e34defb0f4f8873c90" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPEngine</scope><name>seed_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine_1a6df8d217cd9f65dfae2ab17ab8592562" prot="private" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPEngine</scope><name>tolerance_</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine_1a882467ede2d40a3b4c4dcc1f31f93f69" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPEngine</scope><name>withAbsoluteTolerance</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine_1acc0d1c59224b0ed81d9c29b4d3cc9f2c" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPEngine</scope><name>withAntitheticVariate</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine_1a8fa064ffe302326854c59cc727e79f82" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPEngine</scope><name>withBrownianBridge</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine_1aa10185513c93942c67921b0999022ac3" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPEngine</scope><name>withControlVariate</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine_1a9ca8f6d10030d47aa358234ff86beaf2" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPEngine</scope><name>withMaxSamples</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine_1a0ee51017d3a259c113c01761d9662ef3" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPEngine</scope><name>withSamples</name></member>
      <member refid="class_quant_lib_1_1_make_m_c_discrete_arithmetic_a_p_engine_1a31df61ff8554e3110a7a02719475e793" prot="public" virt="non-virtual"><scope>QuantLib::MakeMCDiscreteArithmeticAPEngine</scope><name>withSeed</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

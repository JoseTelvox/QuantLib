<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_yo_y_inflation_cap_floor" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::YoYInflationCapFloor</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_instrument" prot="public" virt="non-virtual">QuantLib::Instrument</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_yo_y_inflation_cap" prot="public" virt="non-virtual">QuantLib::YoYInflationCap</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_yo_y_inflation_collar" prot="public" virt="non-virtual">QuantLib::YoYInflationCollar</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_yo_y_inflation_floor" prot="public" virt="non-virtual">QuantLib::YoYInflationFloor</derivedcompoundref>
    <includes refid="inflationcapfloor_8hpp" local="no">inflationcapfloor.hpp</includes>
    <innerclass refid="class_quant_lib_1_1_yo_y_inflation_cap_floor_1_1arguments" prot="public">QuantLib::YoYInflationCapFloor::arguments</innerclass>
    <innerclass refid="class_quant_lib_1_1_yo_y_inflation_cap_floor_1_1engine" prot="public">QuantLib::YoYInflationCapFloor::engine</innerclass>
    <sectiondef kind="user-defined">
      <header>Inspectors</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_yo_y_inflation_cap_floor_1aaf695929073f0dd314f791f68a9d058b" prot="private" static="no" mutable="no">
        <type>Type</type>
        <definition>Type QuantLib::YoYInflationCapFloor::type_</definition>
        <argsstring></argsstring>
        <name>type_</name>
        <qualifiedname>QuantLib::YoYInflationCapFloor::type_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/inflationcapfloor.hpp" line="94" column="14" bodyfile="ql/instruments/inflationcapfloor.hpp" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_yo_y_inflation_cap_floor_1a2afb0e4e26429d466e55a153e4b8ab56" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a14f786c47ee979097c448d96b2defaab" kindref="member">Leg</ref></type>
        <definition>Leg QuantLib::YoYInflationCapFloor::yoyLeg_</definition>
        <argsstring></argsstring>
        <name>yoyLeg_</name>
        <qualifiedname>QuantLib::YoYInflationCapFloor::yoyLeg_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/inflationcapfloor.hpp" line="95" column="13" bodyfile="ql/instruments/inflationcapfloor.hpp" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_yo_y_inflation_cap_floor_1ad5615ed3218b0ba6d951755dc3590bc1" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>std::vector&lt;Rate&gt; QuantLib::YoYInflationCapFloor::capRates_</definition>
        <argsstring></argsstring>
        <name>capRates_</name>
        <qualifiedname>QuantLib::YoYInflationCapFloor::capRates_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/inflationcapfloor.hpp" line="96" column="21" bodyfile="ql/instruments/inflationcapfloor.hpp" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_yo_y_inflation_cap_floor_1ae669af2bbaccd8032dd058e26f4ff05d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>std::vector&lt;Rate&gt; QuantLib::YoYInflationCapFloor::floorRates_</definition>
        <argsstring></argsstring>
        <name>floorRates_</name>
        <qualifiedname>QuantLib::YoYInflationCapFloor::floorRates_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/inflationcapfloor.hpp" line="97" column="21" bodyfile="ql/instruments/inflationcapfloor.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_cap_floor_1a515d4b08a88dd2451dc2e228f99f2695" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Type</type>
        <definition>Type QuantLib::YoYInflationCapFloor::type</definition>
        <argsstring>() const</argsstring>
        <name>type</name>
        <qualifiedname>QuantLib::YoYInflationCapFloor::type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/inflationcapfloor.hpp" line="72" column="14" bodyfile="ql/instruments/inflationcapfloor.hpp" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_cap_floor_1aac94a23341ae47ac79c3d1fbfeb34be9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; Rate &gt; &amp; QuantLib::YoYInflationCapFloor::capRates</definition>
        <argsstring>() const</argsstring>
        <name>capRates</name>
        <qualifiedname>QuantLib::YoYInflationCapFloor::capRates</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/inflationcapfloor.hpp" line="73" column="27" bodyfile="ql/instruments/inflationcapfloor.hpp" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_cap_floor_1a751500e7deed44f965ad8833b895e6f2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; Rate &gt; &amp; QuantLib::YoYInflationCapFloor::floorRates</definition>
        <argsstring>() const</argsstring>
        <name>floorRates</name>
        <qualifiedname>QuantLib::YoYInflationCapFloor::floorRates</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/inflationcapfloor.hpp" line="74" column="27" bodyfile="ql/instruments/inflationcapfloor.hpp" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_cap_floor_1a6409b8a0decb45100b2e2a1ce5714bee" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespace_quant_lib_1a14f786c47ee979097c448d96b2defaab" kindref="member">Leg</ref> &amp;</type>
        <definition>const Leg &amp; QuantLib::YoYInflationCapFloor::yoyLeg</definition>
        <argsstring>() const</argsstring>
        <name>yoyLeg</name>
        <qualifiedname>QuantLib::YoYInflationCapFloor::yoyLeg</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/inflationcapfloor.hpp" line="75" column="19" bodyfile="ql/instruments/inflationcapfloor.hpp" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_cap_floor_1a00cad7ebed68ddb32793c877e9ae87ce" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::YoYInflationCapFloor::startDate</definition>
        <argsstring>() const</argsstring>
        <name>startDate</name>
        <qualifiedname>QuantLib::YoYInflationCapFloor::startDate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/inflationcapfloor.hpp" line="77" column="14" bodyfile="ql/instruments/inflationcapfloor.cpp" bodystart="101" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_cap_floor_1a6c53d1b93116bf3462aa2ff302a35033" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::YoYInflationCapFloor::maturityDate</definition>
        <argsstring>() const</argsstring>
        <name>maturityDate</name>
        <qualifiedname>QuantLib::YoYInflationCapFloor::maturityDate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/inflationcapfloor.hpp" line="78" column="14" bodyfile="ql/instruments/inflationcapfloor.cpp" bodystart="105" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_cap_floor_1a1033914713415b1c9eab4fac514fc829" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_yo_y_inflation_coupon" kindref="compound">YoYInflationCoupon</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; YoYInflationCoupon &gt; QuantLib::YoYInflationCapFloor::lastYoYInflationCoupon</definition>
        <argsstring>() const</argsstring>
        <name>lastYoYInflationCoupon</name>
        <qualifiedname>QuantLib::YoYInflationCapFloor::lastYoYInflationCoupon</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/inflationcapfloor.hpp" line="79" column="25" bodyfile="ql/instruments/inflationcapfloor.cpp" bodystart="110" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_cap_floor_1a68c2a74d90973bc93039438dc3698d38" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_yo_y_inflation_cap_floor" kindref="compound">YoYInflationCapFloor</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; YoYInflationCapFloor &gt; QuantLib::YoYInflationCapFloor::optionlet</definition>
        <argsstring>(Size n) const</argsstring>
        <name>optionlet</name>
        <qualifiedname>QuantLib::YoYInflationCapFloor::optionlet</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Returns the n-th optionlet as a cap/floor with only one cash flow. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/inflationcapfloor.hpp" line="81" column="25" bodyfile="ql/instruments/inflationcapfloor.cpp" bodystart="117" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_cap_floor_1a2fc1f3a1c6d080ae93bdd9ce8a375443" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::YoYInflationCapFloor::atmRate</definition>
        <argsstring>(const YieldTermStructure &amp;discountCurve) const</argsstring>
        <name>atmRate</name>
        <qualifiedname>QuantLib::YoYInflationCapFloor::atmRate</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &amp;</type>
          <declname>discountCurve</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/inflationcapfloor.hpp" line="83" column="22" bodyfile="ql/instruments/inflationcapfloor.cpp" bodystart="214" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_cap_floor_1a837338f8068e92ac652c2ea6747a33dc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
        <definition>Volatility QuantLib::YoYInflationCapFloor::impliedVolatility</definition>
        <argsstring>(Real price, const Handle&lt; YoYInflationTermStructure &gt; &amp;yoyCurve, Volatility guess, Real accuracy=1.0e-4, Natural maxEvaluations=100, Volatility minVol=1.0e-7, Volatility maxVol=4.0) const</argsstring>
        <name>impliedVolatility</name>
        <qualifiedname>QuantLib::YoYInflationCapFloor::impliedVolatility</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>price</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yo_y_inflation_term_structure" kindref="compound">YoYInflationTermStructure</ref> &gt; &amp;</type>
          <declname>yoyCurve</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
          <declname>guess</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>accuracy</declname>
          <defval>1.0e-4</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>maxEvaluations</declname>
          <defval>100</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
          <declname>minVol</declname>
          <defval>1.0e-7</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1ae3abfa256de5aa2b506ab6bda014e4dc" kindref="member">Volatility</ref></type>
          <declname>maxVol</declname>
          <defval>4.0</defval>
        </param>
        <briefdescription>
<para>implied term volatility </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/inflationcapfloor.hpp" line="85" column="28" bodyfile="ql/instruments/inflationcapfloor.hpp" bodystart="161" bodyend="170"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Instrument interface</header>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_cap_floor_1a6f91807c6578fbe9fae6ad5eea3cfe4f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool QuantLib::YoYInflationCapFloor::isExpired</definition>
        <argsstring>() const override</argsstring>
        <name>isExpired</name>
        <qualifiedname>QuantLib::YoYInflationCapFloor::isExpired</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_instrument_1a121a2a929b179900744a58272d46aefe">isExpired</reimplements>
        <briefdescription>
<para>returns whether the instrument might have value greater than zero. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/inflationcapfloor.hpp" line="67" column="14" bodyfile="ql/instruments/inflationcapfloor.cpp" bodystart="94" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_cap_floor_1a5c4716e634356f9bcbb76b0effa9b67b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void QuantLib::YoYInflationCapFloor::setupArguments</definition>
        <argsstring>(PricingEngine::arguments *) const override</argsstring>
        <name>setupArguments</name>
        <qualifiedname>QuantLib::YoYInflationCapFloor::setupArguments</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_instrument_1af7344eebc48a1a361386e5c5a90a8fcc">setupArguments</reimplements>
        <param>
          <type><ref refid="class_quant_lib_1_1_pricing_engine_1_1arguments" kindref="compound">PricingEngine::arguments</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>When a derived argument structure is defined for an instrument, this method should be overridden to fill it. This is mandatory in case a pricing engine is used. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/inflationcapfloor.hpp" line="68" column="14" bodyfile="ql/instruments/inflationcapfloor.cpp" bodystart="133" bodyend="179"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_quant_lib_1_1_yo_y_inflation_cap_floor_1af28f0f172a2f11bf7a06b4779fe9f05a" prot="public" static="no" strong="no">
        <type></type>
        <name>Type</name>
        <qualifiedname>QuantLib::YoYInflationCapFloor::Type</qualifiedname>
        <enumvalue id="class_quant_lib_1_1_yo_y_inflation_cap_floor_1af28f0f172a2f11bf7a06b4779fe9f05aa15a61f8bd400305f8eea9bbf03ffb2c4" prot="public">
          <name>Cap</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_yo_y_inflation_cap_floor_1af28f0f172a2f11bf7a06b4779fe9f05aa21c66ef4536ff0bcabe8e4a2feb647b2" prot="public">
          <name>Floor</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_yo_y_inflation_cap_floor_1af28f0f172a2f11bf7a06b4779fe9f05aafd53910e171e235244c847057fcce59b" prot="public">
          <name>Collar</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/inflationcapfloor.hpp" line="57" column="9" bodyfile="ql/instruments/inflationcapfloor.hpp" bodystart="57" bodyend="57"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_cap_floor_1a94827409639cb42eaf7d84a0ad51c0bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::YoYInflationCapFloor::YoYInflationCapFloor</definition>
        <argsstring>(Type type, Leg yoyLeg, std::vector&lt; Rate &gt; capRates, std::vector&lt; Rate &gt; floorRates)</argsstring>
        <name>YoYInflationCapFloor</name>
        <qualifiedname>QuantLib::YoYInflationCapFloor::YoYInflationCapFloor</qualifiedname>
        <param>
          <type>Type</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a14f786c47ee979097c448d96b2defaab" kindref="member">Leg</ref></type>
          <declname>yoyLeg</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
          <declname>capRates</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
          <declname>floorRates</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/inflationcapfloor.hpp" line="60" column="9" bodyfile="ql/instruments/inflationcapfloor.cpp" bodystart="44" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_inflation_cap_floor_1a9f3ebdbd57cd8e8dfe85b368954c59b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::YoYInflationCapFloor::YoYInflationCapFloor</definition>
        <argsstring>(Type type, Leg yoyLeg, const std::vector&lt; Rate &gt; &amp;strikes)</argsstring>
        <name>YoYInflationCapFloor</name>
        <qualifiedname>QuantLib::YoYInflationCapFloor::YoYInflationCapFloor</qualifiedname>
        <param>
          <type>Type</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a14f786c47ee979097c448d96b2defaab" kindref="member">Leg</ref></type>
          <declname>yoyLeg</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
          <declname>strikes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/instruments/inflationcapfloor.hpp" line="64" column="9" bodyfile="ql/instruments/inflationcapfloor.cpp" bodystart="69" bodyend="92"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Base class for yoy inflation cap-like instruments. </para>
    </briefdescription>
    <detaileddescription>
<para>Note that the standard YoY inflation cap/floor defined here is different from nominal, because in nominal world standard cap/floors do not have the first optionlet. This is because they set in advance so there is no point. However, yoy inflation generally sets (effectively) in arrears, (actually in arrears vs lag of a few months) thus the first optionlet is relevant. Hence we can do a parity test without a special definition of the YoY cap/floor instrument.</para>
<para><xrefsect id="test_1_test000024"><xreftitle>Test</xreftitle><xrefdescription><para><itemizedlist>
<listitem><para>the relationship between the values of caps, floors and the resulting collars is checked.</para>
</listitem><listitem><para>the put-call parity between the values of caps, floors and swaps is checked.</para>
</listitem><listitem><para>the correctness of the returned value is tested by checking it against a known good value. </para>
</listitem></itemizedlist>
</para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::Instrument</label>
        <link refid="class_quant_lib_1_1_instrument"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="6">
        <label>QuantLib::YoYInflationCap</label>
        <link refid="class_quant_lib_1_1_yo_y_inflation_cap"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::YoYInflationCapFloor</label>
        <link refid="class_quant_lib_1_1_yo_y_inflation_cap_floor"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::YoYInflationCollar</label>
        <link refid="class_quant_lib_1_1_yo_y_inflation_collar"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::YoYInflationFloor</label>
        <link refid="class_quant_lib_1_1_yo_y_inflation_floor"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>QuantLib::Date</label>
        <link refid="class_quant_lib_1_1_date"/>
      </node>
      <node id="2">
        <label>QuantLib::Instrument</label>
        <link refid="class_quant_lib_1_1_instrument"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>valuationDate_</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::LazyObject</label>
        <link refid="class_quant_lib_1_1_lazy_object"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="1">
        <label>QuantLib::YoYInflationCapFloor</label>
        <link refid="class_quant_lib_1_1_yo_y_inflation_cap_floor"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/instruments/inflationcapfloor.hpp" line="55" column="5" bodyfile="ql/instruments/inflationcapfloor.hpp" bodystart="55" bodyend="98"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_instrument_1a468edb294da268b097c91bf821084c07" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>additionalResults</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a57d2b34e8625ab3d9ffa50c0c7931099" prot="protected" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>additionalResults_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a02070ea7442d30625992c1711030d4b8" prot="protected" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>alwaysForward_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a17c9433135a259e4776baec66204a484" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>alwaysForwardNotifications</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_cap_floor_1a2fc1f3a1c6d080ae93bdd9ce8a375443" prot="public" virt="virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>atmRate</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a4c573c48f7eaead5042864ac0eb5b025" prot="protected" virt="virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a58b4986a80efa18634483a92c121e26e" prot="protected" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>calculated_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_cap_floor_1af28f0f172a2f11bf7a06b4779fe9f05aa15a61f8bd400305f8eea9bbf03ffb2c4" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>Cap</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_cap_floor_1aac94a23341ae47ac79c3d1fbfeb34be9" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>capRates</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_cap_floor_1ad5615ed3218b0ba6d951755dc3590bc1" prot="private" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>capRates_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_cap_floor_1af28f0f172a2f11bf7a06b4779fe9f05aafd53910e171e235244c847057fcce59b" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>Collar</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_instrument_1ac548cb61c864779db09bd0fac6ae7c81" prot="protected" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>engine_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a03502fb6c606b262c25acd94ff4c1e52" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>errorEstimate</name></member>
      <member refid="class_quant_lib_1_1_instrument_1abb8f4cfa7346fab7a2f3a8c8b4da30f3" prot="protected" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>errorEstimate_</name></member>
      <member refid="class_quant_lib_1_1_instrument_1aebe809131db2941325d037c031bbf41b" prot="public" virt="virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>fetchResults</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_cap_floor_1af28f0f172a2f11bf7a06b4779fe9f05aa21c66ef4536ff0bcabe8e4a2feb647b2" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>Floor</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_cap_floor_1a751500e7deed44f965ad8833b895e6f2" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>floorRates</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_cap_floor_1ae669af2bbaccd8032dd058e26f4ff05d" prot="private" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>floorRates_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1afac6ee19c3107c453e1347dd8000e023" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>forwardFirstNotificationOnly</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7157f41e83f2c5d924f5c5bafda04d1d" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>freeze</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a7bb721fe00c6854e602758aba629ab77" prot="protected" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>frozen_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_cap_floor_1a837338f8068e92ac652c2ea6747a33dc" prot="public" virt="virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>impliedVolatility</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a5e4c746cbf7999c83dc57f87e241f1cc" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>Instrument</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a0a7c5d42815a4e16ee2158e24dbfc748" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>isCalculated</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_cap_floor_1a6f91807c6578fbe9fae6ad5eea3cfe4f" prot="public" virt="virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>isExpired</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_cap_floor_1a1033914713415b1c9eab4fac514fc829" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>lastYoYInflationCoupon</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a26f18f4ff7faaaebd8eae50e064b493e" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>LazyObject</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_cap_floor_1a6c53d1b93116bf3462aa2ff302a35033" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>maturityDate</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a5afdd9698267cd30ddd10cf01f3487b0" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>NPV</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a997663780100d30ae59b14ac0285322d" prot="protected" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>NPV_</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::YoYInflationCapFloor</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::YoYInflationCapFloor</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observer::"><scope>QuantLib::YoYInflationCapFloor</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::YoYInflationCapFloor</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::"><scope>QuantLib::YoYInflationCapFloor</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::LazyObject::QuantLib::Observer::"><scope>QuantLib::YoYInflationCapFloor</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_cap_floor_1a68c2a74d90973bc93039438dc3698d38" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>optionlet</name></member>
      <member refid="class_quant_lib_1_1_instrument_1aad23f546bbca156a49a95ca2bee124c4" prot="protected" virt="virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>performCalculations</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a70c9b24e50132408d8d9ce4f6674662a" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>recalculate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a266c15a12160a89f4f9707db85f9fa27" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>result</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a3444386491f179f64f4f0aac24997071" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>setPricingEngine</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_cap_floor_1a5c4716e634356f9bcbb76b0effa9b67b" prot="public" virt="virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>setupArguments</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a73d90597fcd3ff52a8aed674393ab574" prot="protected" virt="virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>setupExpired</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_cap_floor_1a00cad7ebed68ddb32793c877e9ae87ce" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>startDate</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_cap_floor_1af28f0f172a2f11bf7a06b4779fe9f05a" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>Type</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_cap_floor_1a515d4b08a88dd2451dc2e228f99f2695" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>type</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_cap_floor_1aaf695929073f0dd314f791f68a9d058b" prot="private" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>type_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a2e0e4786666453024b9d4e0761f2770b" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>unfreeze</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1adee2bf49be5c4c78736be293321a856d" prot="public" virt="virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_instrument_1a53a0fc1adc70b73387ad53009725835d" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>valuationDate</name></member>
      <member refid="class_quant_lib_1_1_instrument_1aa60b558fc82f022e13535360ac4a6fed" prot="protected" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>valuationDate_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_cap_floor_1a94827409639cb42eaf7d84a0ad51c0bf" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>YoYInflationCapFloor</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_cap_floor_1a9f3ebdbd57cd8e8dfe85b368954c59b7" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>YoYInflationCapFloor</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_cap_floor_1a6409b8a0decb45100b2e2a1ce5714bee" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>yoyLeg</name></member>
      <member refid="class_quant_lib_1_1_yo_y_inflation_cap_floor_1a2afb0e4e26429d466e55a153e4b8ab56" prot="private" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>yoyLeg_</name></member>
      <member refid="class_quant_lib_1_1_lazy_object_1a9d719c43bb627177a90d7d12324a2d6e" prot="public" virt="non-virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>~LazyObject</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::YoYInflationCapFloor</scope><name>~Observer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_parametric_exercise" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::ParametricExercise</compoundname>
    <derivedcompoundref refid="class_quant_lib_1_1_market_model_parametric_exercise" prot="public" virt="non-virtual">QuantLib::MarketModelParametricExercise</derivedcompoundref>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_parametric_exercise_1af8d269019204c88e9fa4ecdd097e8aa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual QuantLib::ParametricExercise::~ParametricExercise</definition>
        <argsstring>()=default</argsstring>
        <name>~ParametricExercise</name>
        <qualifiedname>QuantLib::ParametricExercise::~ParametricExercise</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/montecarlo/parametricexercise.hpp" line="31" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_parametric_exercise_1a86921329eebd55f0e5143ce2120a40f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &gt;</type>
        <definition>virtual std::vector&lt; Size &gt; QuantLib::ParametricExercise::numberOfVariables</definition>
        <argsstring>() const =0</argsstring>
        <name>numberOfVariables</name>
        <qualifiedname>QuantLib::ParametricExercise::numberOfVariables</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_triggered_swap_exercise_1a861fec566df713505268c33fd35d26f1">numberOfVariables</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/montecarlo/parametricexercise.hpp" line="33" column="29"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_parametric_exercise_1a8d9e5e1c76e7b8bb9ad3b2392eb935c3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &gt;</type>
        <definition>virtual std::vector&lt; Size &gt; QuantLib::ParametricExercise::numberOfParameters</definition>
        <argsstring>() const =0</argsstring>
        <name>numberOfParameters</name>
        <qualifiedname>QuantLib::ParametricExercise::numberOfParameters</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_triggered_swap_exercise_1ae0e0227e4ccffa314aad28c296196138">numberOfParameters</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/montecarlo/parametricexercise.hpp" line="34" column="29"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_parametric_exercise_1a8d6dbe155fc506e88ca1d355257e96f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool QuantLib::ParametricExercise::exercise</definition>
        <argsstring>(Size exerciseNumber, const std::vector&lt; Real &gt; &amp;parameters, const std::vector&lt; Real &gt; &amp;variables) const =0</argsstring>
        <name>exercise</name>
        <qualifiedname>QuantLib::ParametricExercise::exercise</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_triggered_swap_exercise_1a7acd016aa967accacdc5866031c9c4b0">exercise</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>exerciseNumber</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>parameters</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>variables</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/montecarlo/parametricexercise.hpp" line="35" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_parametric_exercise_1a17606dda6e5c418155982267942d2bee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void QuantLib::ParametricExercise::guess</definition>
        <argsstring>(Size exerciseNumber, std::vector&lt; Real &gt; &amp;parameters) const =0</argsstring>
        <name>guess</name>
        <qualifiedname>QuantLib::ParametricExercise::guess</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_triggered_swap_exercise_1a4c4411ffe237e0b9e8856afa95b900fa">guess</reimplementedby>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>exerciseNumber</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>parameters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/montecarlo/parametricexercise.hpp" line="38" column="22"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::MarketModelParametricExercise</label>
        <link refid="class_quant_lib_1_1_market_model_parametric_exercise"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::ParametricExercise</label>
        <link refid="class_quant_lib_1_1_parametric_exercise"/>
      </node>
      <node id="3">
        <label>QuantLib::TriggeredSwapExercise</label>
        <link refid="class_quant_lib_1_1_triggered_swap_exercise"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="ql/methods/montecarlo/parametricexercise.hpp" line="29" column="5" bodyfile="ql/methods/montecarlo/parametricexercise.hpp" bodystart="29" bodyend="40"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_parametric_exercise_1a8d6dbe155fc506e88ca1d355257e96f5" prot="public" virt="pure-virtual"><scope>QuantLib::ParametricExercise</scope><name>exercise</name></member>
      <member refid="class_quant_lib_1_1_parametric_exercise_1a17606dda6e5c418155982267942d2bee" prot="public" virt="pure-virtual"><scope>QuantLib::ParametricExercise</scope><name>guess</name></member>
      <member refid="class_quant_lib_1_1_parametric_exercise_1a8d9e5e1c76e7b8bb9ad3b2392eb935c3" prot="public" virt="pure-virtual"><scope>QuantLib::ParametricExercise</scope><name>numberOfParameters</name></member>
      <member refid="class_quant_lib_1_1_parametric_exercise_1a86921329eebd55f0e5143ce2120a40f1" prot="public" virt="pure-virtual"><scope>QuantLib::ParametricExercise</scope><name>numberOfVariables</name></member>
      <member refid="class_quant_lib_1_1_parametric_exercise_1af8d269019204c88e9fa4ecdd097e8aa1" prot="public" virt="virtual"><scope>QuantLib::ParametricExercise</scope><name>~ParametricExercise</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

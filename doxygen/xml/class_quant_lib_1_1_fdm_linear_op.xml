<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_fdm_linear_op" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::FdmLinearOp</compoundname>
    <derivedcompoundref refid="class_quant_lib_1_1_fdm_linear_op_composite" prot="public" virt="non-virtual">QuantLib::FdmLinearOpComposite</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_nine_point_linear_op" prot="public" virt="non-virtual">QuantLib::NinePointLinearOp</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_nth_order_derivative_op" prot="public" virt="non-virtual">QuantLib::NthOrderDerivativeOp</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_triple_band_linear_op" prot="public" virt="non-virtual">QuantLib::TripleBandLinearOp</derivedcompoundref>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_quant_lib_1_1_fdm_linear_op_1af55693593c0cf7e885c67fd848f76e49" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>typedef Array QuantLib::FdmLinearOp::array_type</definition>
        <argsstring></argsstring>
        <name>array_type</name>
        <qualifiedname>QuantLib::FdmLinearOp::array_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmlinearop.hpp" line="36" column="23" bodyfile="ql/methods/finitedifferences/operators/fdmlinearop.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_linear_op_1aa6f29eb6144a1848c73c21e392f023e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual QuantLib::FdmLinearOp::~FdmLinearOp</definition>
        <argsstring>()=default</argsstring>
        <name>~FdmLinearOp</name>
        <qualifiedname>QuantLib::FdmLinearOp::~FdmLinearOp</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmlinearop.hpp" line="37" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_linear_op_1a9d59d8bb3597206db60f61c3f448c211" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">array_type</ref></type>
        <definition>virtual array_type QuantLib::FdmLinearOp::apply</definition>
        <argsstring>(const array_type &amp;r) const =0</argsstring>
        <name>apply</name>
        <qualifiedname>QuantLib::FdmLinearOp::apply</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_fdm2d_black_scholes_op_1a114b33454793001e431c3c1cbbb44ebe">apply</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_bates_op_1a1db22001f23ec24701097ea11231218e">apply</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_black_scholes_fwd_op_1a557c032477d223a5ce9c43b0a34d3656">apply</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_black_scholes_op_1af3981f4cc21489f14657e8366b88e1ef">apply</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_c_e_v_op_1a26b05abb1ab95de38bc236aa30c1b7bf">apply</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_c_i_r_op_1a62bcf61eed562f7ef302cac6f19fad4b">apply</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_dupire1d_op_1a8baf8088e17e896ddb102390d168e4c7">apply</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_extended_ornstein_uhlenbeck_op_1aaf5e33455d744753ed63f02e95e5b56e">apply</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_ext_o_u_jump_op_1afa3d573486ef9192cbc7089a7f18bc0b">apply</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_g2_op_1ab373a7d73dfd0fa5c83f1a7593549111">apply</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_heston_fwd_op_1ac70f691de285e3212a550b2e3e351470">apply</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_heston_hull_white_op_1a85e2a9addd235119f13cb933c434069b">apply</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_heston_op_1a3af43a02d8df3f9ad249f62df4b77f79">apply</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_hull_white_op_1a039473fef545a07c8e4305d08626420e">apply</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_kluge_ext_o_u_op_1af992240c830f61f10bd859c6adbd0655">apply</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_local_vol_fwd_op_1a76a8029cea9ef05beef26a61133a2bfb">apply</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_ornstein_uhlenbeck_op_1a391c1ab43fb3e8a09215f2c65b95a53c">apply</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_sabr_op_1a57b467d262afb279d5d791706b7d50f3">apply</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_square_root_fwd_op_1aab2d385a4bcd15b89db1c8df6a4deb11">apply</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_wiener_op_1a8eda8f65d6276f3fe127fcc89174bd11">apply</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_fdm_zabr_op_1a183370caf07f6f4fba8fcad97cd54616">apply</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_nine_point_linear_op_1aa26fc3c95da19792955a1f5f4bc6ff3e">apply</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_nth_order_derivative_op_1a21c4310ae87f5b9970190fd66bafa83e">apply</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_triple_band_linear_op_1ac88145891f92b2e962c2e231bdc592d5">apply</reimplementedby>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">array_type</ref> &amp;</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmlinearop.hpp" line="38" column="28"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fdm_linear_op_1a32b6761dc11909646700747d33ef710c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>SparseMatrix</type>
        <definition>virtual SparseMatrix QuantLib::FdmLinearOp::toMatrix</definition>
        <argsstring>() const =0</argsstring>
        <name>toMatrix</name>
        <qualifiedname>QuantLib::FdmLinearOp::toMatrix</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_fdm_linear_op_composite_1abca0364ae63b5b0e714fcd3ac9e8a73b">toMatrix</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_nine_point_linear_op_1ac57c75b36c1a7db4fb8b8c0cfe539c19">toMatrix</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_nth_order_derivative_op_1a0ef86470b8e06a2c678a3d7e07583c96">toMatrix</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_triple_band_linear_op_1a49b67b45b712d6943f22d5c54ef78576">toMatrix</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/finitedifferences/operators/fdmlinearop.hpp" line="40" column="30"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>QuantLib::Fdm2dBlackScholesOp</label>
        <link refid="class_quant_lib_1_1_fdm2d_black_scholes_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::FdmBatesOp</label>
        <link refid="class_quant_lib_1_1_fdm_bates_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>QuantLib::FdmBlackScholesFwdOp</label>
        <link refid="class_quant_lib_1_1_fdm_black_scholes_fwd_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::FdmBlackScholesOp</label>
        <link refid="class_quant_lib_1_1_fdm_black_scholes_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::FdmCEVOp</label>
        <link refid="class_quant_lib_1_1_fdm_c_e_v_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>QuantLib::FdmCIROp</label>
        <link refid="class_quant_lib_1_1_fdm_c_i_r_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>QuantLib::FdmDupire1dOp</label>
        <link refid="class_quant_lib_1_1_fdm_dupire1d_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10">
        <label>QuantLib::FdmExtOUJumpOp</label>
        <link refid="class_quant_lib_1_1_fdm_ext_o_u_jump_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="11">
        <label>QuantLib::FdmExtendedOrnsteinUhlenbeckOp</label>
        <link refid="class_quant_lib_1_1_fdm_extended_ornstein_uhlenbeck_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>QuantLib::FdmG2Op</label>
        <link refid="class_quant_lib_1_1_fdm_g2_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>QuantLib::FdmHestonFwdOp</label>
        <link refid="class_quant_lib_1_1_fdm_heston_fwd_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="14">
        <label>QuantLib::FdmHestonHullWhiteOp</label>
        <link refid="class_quant_lib_1_1_fdm_heston_hull_white_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>QuantLib::FdmHestonOp</label>
        <link refid="class_quant_lib_1_1_fdm_heston_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="16">
        <label>QuantLib::FdmHullWhiteOp</label>
        <link refid="class_quant_lib_1_1_fdm_hull_white_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="17">
        <label>QuantLib::FdmKlugeExtOUOp</label>
        <link refid="class_quant_lib_1_1_fdm_kluge_ext_o_u_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::FdmLinearOp</label>
        <link refid="class_quant_lib_1_1_fdm_linear_op"/>
      </node>
      <node id="2">
        <label>QuantLib::FdmLinearOpComposite</label>
        <link refid="class_quant_lib_1_1_fdm_linear_op_composite"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="18">
        <label>QuantLib::FdmLocalVolFwdOp</label>
        <link refid="class_quant_lib_1_1_fdm_local_vol_fwd_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>QuantLib::FdmOrnsteinUhlenbeckOp</label>
        <link refid="class_quant_lib_1_1_fdm_ornstein_uhlenbeck_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="20">
        <label>QuantLib::FdmSabrOp</label>
        <link refid="class_quant_lib_1_1_fdm_sabr_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>QuantLib::FdmSquareRootFwdOp</label>
        <link refid="class_quant_lib_1_1_fdm_square_root_fwd_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="22">
        <label>QuantLib::FdmWienerOp</label>
        <link refid="class_quant_lib_1_1_fdm_wiener_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>QuantLib::FdmZabrOp</label>
        <link refid="class_quant_lib_1_1_fdm_zabr_op"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="28">
        <label>QuantLib::FirstDerivativeOp</label>
        <link refid="class_quant_lib_1_1_first_derivative_op"/>
        <childnode refid="27" relation="public-inheritance">
        </childnode>
      </node>
      <node id="29">
        <label>QuantLib::ModTripleBandLinearOp</label>
        <link refid="class_quant_lib_1_1_mod_triple_band_linear_op"/>
        <childnode refid="27" relation="public-inheritance">
        </childnode>
      </node>
      <node id="24">
        <label>QuantLib::NinePointLinearOp</label>
        <link refid="class_quant_lib_1_1_nine_point_linear_op"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="26">
        <label>QuantLib::NthOrderDerivativeOp</label>
        <link refid="class_quant_lib_1_1_nth_order_derivative_op"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="30">
        <label>QuantLib::SecondDerivativeOp</label>
        <link refid="class_quant_lib_1_1_second_derivative_op"/>
        <childnode refid="27" relation="public-inheritance">
        </childnode>
      </node>
      <node id="25">
        <label>QuantLib::SecondOrderMixedDerivativeOp</label>
        <link refid="class_quant_lib_1_1_second_order_mixed_derivative_op"/>
        <childnode refid="24" relation="public-inheritance">
        </childnode>
      </node>
      <node id="27">
        <label>QuantLib::TripleBandLinearOp</label>
        <link refid="class_quant_lib_1_1_triple_band_linear_op"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="ql/methods/finitedifferences/operators/fdmlinearop.hpp" line="34" column="5" bodyfile="ql/methods/finitedifferences/operators/fdmlinearop.hpp" bodystart="34" bodyend="41"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_fdm_linear_op_1a9d59d8bb3597206db60f61c3f448c211" prot="public" virt="pure-virtual"><scope>QuantLib::FdmLinearOp</scope><name>apply</name></member>
      <member refid="class_quant_lib_1_1_fdm_linear_op_1af55693593c0cf7e885c67fd848f76e49" prot="public" virt="non-virtual"><scope>QuantLib::FdmLinearOp</scope><name>array_type</name></member>
      <member refid="class_quant_lib_1_1_fdm_linear_op_1a32b6761dc11909646700747d33ef710c" prot="public" virt="pure-virtual"><scope>QuantLib::FdmLinearOp</scope><name>toMatrix</name></member>
      <member refid="class_quant_lib_1_1_fdm_linear_op_1aa6f29eb6144a1848c73c21e392f023e4" prot="public" virt="virtual"><scope>QuantLib::FdmLinearOp</scope><name>~FdmLinearOp</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

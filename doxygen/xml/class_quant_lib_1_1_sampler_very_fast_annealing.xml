<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_sampler_very_fast_annealing" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::SamplerVeryFastAnnealing</compoundname>
    <includes refid="hybridsimulatedannealingfunctors_8hpp" local="no">hybridsimulatedannealingfunctors.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_sampler_very_fast_annealing_1a2f04268877698b7ccf9fdd3245c4f400" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::SamplerVeryFastAnnealing::lower_</definition>
        <argsstring></argsstring>
        <name>lower_</name>
        <qualifiedname>QuantLib::SamplerVeryFastAnnealing::lower_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" line="202" column="15" bodyfile="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_sampler_very_fast_annealing_1ab2d6b48011d2e4a5bb8a1278361cb3ff" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::SamplerVeryFastAnnealing::upper_</definition>
        <argsstring></argsstring>
        <name>upper_</name>
        <qualifiedname>QuantLib::SamplerVeryFastAnnealing::upper_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" line="202" column="22" bodyfile="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_sampler_very_fast_annealing_1ad55750ed6be572d7d881177459a1957e" prot="private" static="no" mutable="no">
        <type>std::mt19937</type>
        <definition>std::mt19937 QuantLib::SamplerVeryFastAnnealing::generator_</definition>
        <argsstring></argsstring>
        <name>generator_</name>
        <qualifiedname>QuantLib::SamplerVeryFastAnnealing::generator_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" line="203" column="22" bodyfile="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_sampler_very_fast_annealing_1a4d6495159212b64c6d2a3a1d0146eaa0" prot="private" static="no" mutable="no">
        <type>std::uniform_real_distribution&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::uniform_real_distribution&lt;Real&gt; QuantLib::SamplerVeryFastAnnealing::distribution_</definition>
        <argsstring></argsstring>
        <name>distribution_</name>
        <qualifiedname>QuantLib::SamplerVeryFastAnnealing::distribution_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" line="204" column="40" bodyfile="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" bodystart="204" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_sampler_very_fast_annealing_1a1ef186a97dc4635a4b1fc06615fb7e35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::SamplerVeryFastAnnealing::SamplerVeryFastAnnealing</definition>
        <argsstring>(Array lower, Array upper, unsigned long seed=SeedGenerator::instance().get())</argsstring>
        <name>SamplerVeryFastAnnealing</name>
        <qualifiedname>QuantLib::SamplerVeryFastAnnealing::SamplerVeryFastAnnealing</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
          <declname>lower</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
          <declname>upper</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>seed</declname>
          <defval><ref refid="class_quant_lib_1_1_singleton_1ac412b7766b32f56372a3e966c5f3f386" kindref="member">SeedGenerator::instance</ref>().get()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" line="179" column="7" bodyfile="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" bodystart="179" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_sampler_very_fast_annealing_1aded2635f6da78f72db2ceb2d8e5268c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::SamplerVeryFastAnnealing::operator()</definition>
        <argsstring>(Array &amp;newPoint, const Array &amp;currentPoint, const Array &amp;temp)</argsstring>
        <name>operator()</name>
        <qualifiedname>QuantLib::SamplerVeryFastAnnealing::operator()</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>newPoint</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>currentPoint</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>temp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" line="186" column="14" bodyfile="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" bodystart="186" bodyend="200"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Very Fast Annealing Sampler. </para>
    </briefdescription>
    <detaileddescription>
<para>For consistency should be used with <ref refid="class_quant_lib_1_1_temperature_very_fast_annealing" kindref="compound">TemperatureVeryFastAnnealing</ref>. Requires that the parameter space be bounded above and below. </para>
    </detaileddescription>
    <location file="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" line="176" column="5" bodyfile="ql/experimental/math/hybridsimulatedannealingfunctors.hpp" bodystart="177" bodyend="205"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_sampler_very_fast_annealing_1a4d6495159212b64c6d2a3a1d0146eaa0" prot="private" virt="non-virtual"><scope>QuantLib::SamplerVeryFastAnnealing</scope><name>distribution_</name></member>
      <member refid="class_quant_lib_1_1_sampler_very_fast_annealing_1ad55750ed6be572d7d881177459a1957e" prot="private" virt="non-virtual"><scope>QuantLib::SamplerVeryFastAnnealing</scope><name>generator_</name></member>
      <member refid="class_quant_lib_1_1_sampler_very_fast_annealing_1a2f04268877698b7ccf9fdd3245c4f400" prot="private" virt="non-virtual"><scope>QuantLib::SamplerVeryFastAnnealing</scope><name>lower_</name></member>
      <member refid="class_quant_lib_1_1_sampler_very_fast_annealing_1aded2635f6da78f72db2ceb2d8e5268c0" prot="public" virt="non-virtual"><scope>QuantLib::SamplerVeryFastAnnealing</scope><name>operator()</name></member>
      <member refid="class_quant_lib_1_1_sampler_very_fast_annealing_1a1ef186a97dc4635a4b1fc06615fb7e35" prot="public" virt="non-virtual"><scope>QuantLib::SamplerVeryFastAnnealing</scope><name>SamplerVeryFastAnnealing</name></member>
      <member refid="class_quant_lib_1_1_sampler_very_fast_annealing_1ab2d6b48011d2e4a5bb8a1278361cb3ff" prot="private" virt="non-virtual"><scope>QuantLib::SamplerVeryFastAnnealing</scope><name>upper_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

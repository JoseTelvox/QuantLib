<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_multi_dim_gaussian_integration" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::MultiDimGaussianIntegration</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_multi_dim_gaussian_integration_1a5c811d4ad4018ed747af3e2a8619e936" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref></type>
        <definition>Array QuantLib::MultiDimGaussianIntegration::weights_</definition>
        <argsstring></argsstring>
        <name>weights_</name>
        <qualifiedname>QuantLib::MultiDimGaussianIntegration::weights_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/integrals/gaussianquadratures.hpp" line="91" column="15" bodyfile="ql/math/integrals/gaussianquadratures.hpp" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_multi_dim_gaussian_integration_1ad725cfdde9092088cf4ca78eef85ba83" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &gt;</type>
        <definition>std::vector&lt;Array&gt; QuantLib::MultiDimGaussianIntegration::x_</definition>
        <argsstring></argsstring>
        <name>x_</name>
        <qualifiedname>QuantLib::MultiDimGaussianIntegration::x_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/integrals/gaussianquadratures.hpp" line="92" column="21" bodyfile="ql/math/integrals/gaussianquadratures.hpp" bodystart="92" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_multi_dim_gaussian_integration_1a135d8184e066a4542a5197a39a5870a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::MultiDimGaussianIntegration::MultiDimGaussianIntegration</definition>
        <argsstring>(const std::vector&lt; Size &gt; &amp;ns, const std::function&lt; ext::shared_ptr&lt; GaussianQuadrature &gt;(Size)&gt; &amp;genQuad)</argsstring>
        <name>MultiDimGaussianIntegration</name>
        <qualifiedname>QuantLib::MultiDimGaussianIntegration::MultiDimGaussianIntegration</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &gt; &amp;</type>
          <declname>ns</declname>
        </param>
        <param>
          <type>const std::function&lt; ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_gaussian_quadrature" kindref="compound">GaussianQuadrature</ref> &gt;(<ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref>)&gt; &amp;</type>
          <declname>genQuad</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/integrals/gaussianquadratures.hpp" line="81" column="9" bodyfile="ql/math/integrals/gaussianquadratures.cpp" bodystart="64" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_multi_dim_gaussian_integration_1a44a3545d11f41841aff7f5056be439ec" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::MultiDimGaussianIntegration::operator()</definition>
        <argsstring>(const std::function&lt; Real(Array)&gt; &amp;f) const</argsstring>
        <name>operator()</name>
        <qualifiedname>QuantLib::MultiDimGaussianIntegration::operator()</qualifiedname>
        <param>
          <type>const std::function&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>(<ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref>)&gt; &amp;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/integrals/gaussianquadratures.hpp" line="85" column="14" bodyfile="ql/math/integrals/gaussianquadratures.cpp" bodystart="96" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_multi_dim_gaussian_integration_1ab7f34f97d1fd7b833af90726d2207601" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
        <definition>const Array &amp; QuantLib::MultiDimGaussianIntegration::weights</definition>
        <argsstring>() const</argsstring>
        <name>weights</name>
        <qualifiedname>QuantLib::MultiDimGaussianIntegration::weights</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/integrals/gaussianquadratures.hpp" line="87" column="21" bodyfile="ql/math/integrals/gaussianquadratures.hpp" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_multi_dim_gaussian_integration_1acfa4098e9f9af3c37046be9c97060269" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; Array &gt; &amp; QuantLib::MultiDimGaussianIntegration::x</definition>
        <argsstring>() const</argsstring>
        <name>x</name>
        <qualifiedname>QuantLib::MultiDimGaussianIntegration::x</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/integrals/gaussianquadratures.hpp" line="88" column="27" bodyfile="ql/math/integrals/gaussianquadratures.hpp" bodystart="88" bodyend="88"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/math/integrals/gaussianquadratures.hpp" line="79" column="5" bodyfile="ql/math/integrals/gaussianquadratures.hpp" bodystart="79" bodyend="93"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_multi_dim_gaussian_integration_1a135d8184e066a4542a5197a39a5870a5" prot="public" virt="non-virtual"><scope>QuantLib::MultiDimGaussianIntegration</scope><name>MultiDimGaussianIntegration</name></member>
      <member refid="class_quant_lib_1_1_multi_dim_gaussian_integration_1a44a3545d11f41841aff7f5056be439ec" prot="public" virt="non-virtual"><scope>QuantLib::MultiDimGaussianIntegration</scope><name>operator()</name></member>
      <member refid="class_quant_lib_1_1_multi_dim_gaussian_integration_1ab7f34f97d1fd7b833af90726d2207601" prot="public" virt="non-virtual"><scope>QuantLib::MultiDimGaussianIntegration</scope><name>weights</name></member>
      <member refid="class_quant_lib_1_1_multi_dim_gaussian_integration_1a5c811d4ad4018ed747af3e2a8619e936" prot="private" virt="non-virtual"><scope>QuantLib::MultiDimGaussianIntegration</scope><name>weights_</name></member>
      <member refid="class_quant_lib_1_1_multi_dim_gaussian_integration_1acfa4098e9f9af3c37046be9c97060269" prot="public" virt="non-virtual"><scope>QuantLib::MultiDimGaussianIntegration</scope><name>x</name></member>
      <member refid="class_quant_lib_1_1_multi_dim_gaussian_integration_1ad725cfdde9092088cf4ca78eef85ba83" prot="private" virt="non-virtual"><scope>QuantLib::MultiDimGaussianIntegration</scope><name>x_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

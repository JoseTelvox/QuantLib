<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_spreaded_hazard_rate_curve" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::SpreadedHazardRateCurve</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_hazard_rate_structure" prot="public" virt="non-virtual">QuantLib::HazardRateStructure</basecompoundref>
    <includes refid="spreadedhazardratecurve_8hpp" local="no">spreadedhazardratecurve.hpp</includes>
    <sectiondef kind="user-defined">
      <header>DefaultProbabilityTermStructure interface</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_spreaded_hazard_rate_curve_1a87af6510899164b45237d8353240976d" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_default_probability_term_structure" kindref="compound">DefaultProbabilityTermStructure</ref> &gt;</type>
        <definition>Handle&lt;DefaultProbabilityTermStructure&gt; QuantLib::SpreadedHazardRateCurve::originalCurve_</definition>
        <argsstring></argsstring>
        <name>originalCurve_</name>
        <qualifiedname>QuantLib::SpreadedHazardRateCurve::originalCurve_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/spreadedhazardratecurve.hpp" line="58" column="16" bodyfile="ql/experimental/credit/spreadedhazardratecurve.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_spreaded_hazard_rate_curve_1ab616332ef4c455f0d043e67daf16cb18" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
        <definition>Handle&lt;Quote&gt; QuantLib::SpreadedHazardRateCurve::spread_</definition>
        <argsstring></argsstring>
        <name>spread_</name>
        <qualifiedname>QuantLib::SpreadedHazardRateCurve::spread_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/spreadedhazardratecurve.hpp" line="59" column="16" bodyfile="ql/experimental/credit/spreadedhazardratecurve.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_spreaded_hazard_rate_curve_1ab76c6e147f69d1d8a575e1227e7cbc1f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref></type>
        <definition>DayCounter QuantLib::SpreadedHazardRateCurve::dayCounter</definition>
        <argsstring>() const override</argsstring>
        <name>dayCounter</name>
        <qualifiedname>QuantLib::SpreadedHazardRateCurve::dayCounter</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_term_structure_1ac03e725e4e0685b209caa626b00924ca">dayCounter</reimplements>
        <briefdescription>
<para>the day counter used for date/time conversion </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/spreadedhazardratecurve.hpp" line="46" column="20" bodyfile="ql/experimental/credit/spreadedhazardratecurve.hpp" bodystart="72" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_spreaded_hazard_rate_curve_1ad8b755361ce34a9efc67e56da3d08a18" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref></type>
        <definition>Calendar QuantLib::SpreadedHazardRateCurve::calendar</definition>
        <argsstring>() const override</argsstring>
        <name>calendar</name>
        <qualifiedname>QuantLib::SpreadedHazardRateCurve::calendar</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_term_structure_1ac4ea5cbce495c9a47a44eeaedf7a9d45">calendar</reimplements>
        <briefdescription>
<para>the calendar used for reference and/or option date calculation </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/spreadedhazardratecurve.hpp" line="47" column="18" bodyfile="ql/experimental/credit/spreadedhazardratecurve.hpp" bodystart="76" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_spreaded_hazard_rate_curve_1a1406c5ed97035f0d3c689b1785727465" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
        <definition>const Date &amp; QuantLib::SpreadedHazardRateCurve::referenceDate</definition>
        <argsstring>() const override</argsstring>
        <name>referenceDate</name>
        <qualifiedname>QuantLib::SpreadedHazardRateCurve::referenceDate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_term_structure_1accbf3d4af41db0333d456eb5616c4e1e">referenceDate</reimplements>
        <briefdescription>
<para>the date at which discount = 1.0 and/or variance = 0.0 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/spreadedhazardratecurve.hpp" line="48" column="20" bodyfile="ql/experimental/credit/spreadedhazardratecurve.hpp" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_spreaded_hazard_rate_curve_1af46ac4d7aa233324a03ec3f7f13d2c28" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::SpreadedHazardRateCurve::maxDate</definition>
        <argsstring>() const override</argsstring>
        <name>maxDate</name>
        <qualifiedname>QuantLib::SpreadedHazardRateCurve::maxDate</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_term_structure_1ae9af756bbddc15962711f77f514f08fa">maxDate</reimplements>
        <briefdescription>
<para>the latest date for which the curve can return values </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/spreadedhazardratecurve.hpp" line="49" column="14" bodyfile="ql/experimental/credit/spreadedhazardratecurve.hpp" bodystart="84" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_spreaded_hazard_rate_curve_1aaf1e99a02411185fd11daf858e3481fc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        <definition>Time QuantLib::SpreadedHazardRateCurve::maxTime</definition>
        <argsstring>() const override</argsstring>
        <name>maxTime</name>
        <qualifiedname>QuantLib::SpreadedHazardRateCurve::maxTime</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_term_structure_1a2f820c32e198e1046d97ca3dd9a807c5">maxTime</reimplements>
        <briefdescription>
<para>the latest time for which the curve can return values </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/spreadedhazardratecurve.hpp" line="50" column="14" bodyfile="ql/experimental/credit/spreadedhazardratecurve.hpp" bodystart="88" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_spreaded_hazard_rate_curve_1ac7d06ef44d3404e1b4649f504bc692e2" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::SpreadedHazardRateCurve::hazardRateImpl</definition>
        <argsstring>(Time t) const override</argsstring>
        <name>hazardRateImpl</name>
        <qualifiedname>QuantLib::SpreadedHazardRateCurve::hazardRateImpl</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_hazard_rate_structure_1a54ab66312dda719c022efeb35f670523">hazardRateImpl</reimplements>
        <param>
          <type><ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref></type>
        </param>
        <briefdescription>
<para>hazard rate calculation </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/spreadedhazardratecurve.hpp" line="55" column="14" bodyfile="ql/experimental/credit/spreadedhazardratecurve.hpp" bodystart="92" bodyend="94"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_spreaded_hazard_rate_curve_1a63a3be2d6dd70bbba86f199d054c271b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::SpreadedHazardRateCurve::SpreadedHazardRateCurve</definition>
        <argsstring>(Handle&lt; DefaultProbabilityTermStructure &gt; originalCurve, Handle&lt; Quote &gt; spread)</argsstring>
        <name>SpreadedHazardRateCurve</name>
        <qualifiedname>QuantLib::SpreadedHazardRateCurve::SpreadedHazardRateCurve</qualifiedname>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_default_probability_term_structure" kindref="compound">DefaultProbabilityTermStructure</ref> &gt;</type>
          <declname>originalCurve</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_quote" kindref="compound">Quote</ref> &gt;</type>
          <declname>spread</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/credit/spreadedhazardratecurve.hpp" line="42" column="9" bodyfile="ql/experimental/credit/spreadedhazardratecurve.hpp" bodystart="65" bodyend="70"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Default-probability structure with an additive spread on hazard rates. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>This term structure will remain linked to the original structure, i.e., any changes in the latter will be reflected in this structure as well. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>QuantLib::DefaultProbabilityTermStructure</label>
        <link refid="class_quant_lib_1_1_default_probability_term_structure"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::Extrapolator</label>
        <link refid="class_quant_lib_1_1_extrapolator"/>
      </node>
      <node id="2">
        <label>QuantLib::HazardRateStructure</label>
        <link refid="class_quant_lib_1_1_hazard_rate_structure"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="1">
        <label>QuantLib::SpreadedHazardRateCurve</label>
        <link refid="class_quant_lib_1_1_spreaded_hazard_rate_curve"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::TermStructure</label>
        <link refid="class_quant_lib_1_1_term_structure"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="8">
        <label>QuantLib::Calendar</label>
        <link refid="class_quant_lib_1_1_calendar"/>
      </node>
      <node id="3">
        <label>QuantLib::DefaultProbabilityTermStructure</label>
        <link refid="class_quant_lib_1_1_default_probability_term_structure"/>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>QuantLib::Extrapolator</label>
        <link refid="class_quant_lib_1_1_extrapolator"/>
      </node>
      <node id="2">
        <label>QuantLib::HazardRateStructure</label>
        <link refid="class_quant_lib_1_1_hazard_rate_structure"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="5">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="1">
        <label>QuantLib::SpreadedHazardRateCurve</label>
        <link refid="class_quant_lib_1_1_spreaded_hazard_rate_curve"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::TermStructure</label>
        <link refid="class_quant_lib_1_1_term_structure"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="public-inheritance">
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>calendar_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/credit/spreadedhazardratecurve.hpp" line="40" column="5" bodyfile="ql/experimental/credit/spreadedhazardratecurve.hpp" bodystart="40" bodyend="60"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_extrapolator_1ab3936a9b5b5c163d3e511437c16c1d9e" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>allowsExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_spreaded_hazard_rate_curve_1ad8b755361ce34a9efc67e56da3d08a18" prot="public" virt="virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>calendar</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a0a09e3fa8cdfbc9aa9685da0c35ccb90" prot="protected" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>calendar_</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1aa7297742ffbeeb0c7611f90a0f7d15bf" prot="protected" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>checkRange</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a4d246bcb13b7518a75088bf7cf01ea75" prot="protected" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>checkRange</name></member>
      <member refid="class_quant_lib_1_1_spreaded_hazard_rate_curve_1ab76c6e147f69d1d8a575e1227e7cbc1f" prot="public" virt="virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>dayCounter</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_default_probability_term_structure_1a2a64c69647782ccb93fcae8fd01f4f09" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>defaultDensity</name></member>
      <member refid="class_quant_lib_1_1_default_probability_term_structure_1a485232da71dad0064bd935fa4a3e194a" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>defaultDensity</name></member>
      <member refid="class_quant_lib_1_1_hazard_rate_structure_1ab6222d00a246f3d6ab56f37202a67ffc" prot="protected" virt="virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>defaultDensityImpl</name></member>
      <member refid="class_quant_lib_1_1_default_probability_term_structure_1ad227f187cd055b79ce2f762267dba742" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>defaultProbability</name></member>
      <member refid="class_quant_lib_1_1_default_probability_term_structure_1a52bd07aee5c775b9b656c1e2450f7af2" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>defaultProbability</name></member>
      <member refid="class_quant_lib_1_1_default_probability_term_structure_1abd9c7a3fcf2783e143128a3213de7e7e" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>defaultProbability</name></member>
      <member refid="class_quant_lib_1_1_default_probability_term_structure_1a1aaa2eb79380d798d312569cc215b81c" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>defaultProbability</name></member>
      <member refid="class_quant_lib_1_1_default_probability_term_structure_1a5772031aaac117d4316b13a64dd36e1c" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>DefaultProbabilityTermStructure</name></member>
      <member refid="class_quant_lib_1_1_default_probability_term_structure_1a35659d03c3c241136ccd3704beac62e3" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>DefaultProbabilityTermStructure</name></member>
      <member refid="class_quant_lib_1_1_default_probability_term_structure_1a100590357dde200e0714e494675ca6db" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>DefaultProbabilityTermStructure</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1a6af69387d5cae0fe84d6a0c858406218" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>disableExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1a5f7b5650a44d6c63095bc739470c8bfb" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>enableExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1af1c3adaccdfaf07d3d07edaa234444f7" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>Extrapolator</name></member>
      <member refid="class_quant_lib_1_1_default_probability_term_structure_1a34185683a296917b42ed3e6b6f158758" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>hazardRate</name></member>
      <member refid="class_quant_lib_1_1_default_probability_term_structure_1acf7225aed2a92e1d7ae1b357f2d8df96" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>hazardRate</name></member>
      <member refid="class_quant_lib_1_1_spreaded_hazard_rate_curve_1ac7d06ef44d3404e1b4649f504bc692e2" prot="protected" virt="virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>hazardRateImpl</name></member>
      <member refid="class_quant_lib_1_1_hazard_rate_structure_1a3ee963c0938cd05e4c0d2615cd394f78" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>HazardRateStructure</name></member>
      <member refid="class_quant_lib_1_1_hazard_rate_structure_1a17a42097e854b0e5c29ac460bbafd2d8" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>HazardRateStructure</name></member>
      <member refid="class_quant_lib_1_1_hazard_rate_structure_1a3893bf347983f36b63fc38ca32a21442" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>HazardRateStructure</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_default_probability_term_structure_1ae52f8ae2d71c17d3bab2899e21550be5" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>jumpDates</name></member>
      <member refid="class_quant_lib_1_1_default_probability_term_structure_1a3fd8ffc1dcea0a75c9f21eecb805a999" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>jumpTimes</name></member>
      <member refid="class_quant_lib_1_1_spreaded_hazard_rate_curve_1af46ac4d7aa233324a03ec3f7f13d2c28" prot="public" virt="virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>maxDate</name></member>
      <member refid="class_quant_lib_1_1_spreaded_hazard_rate_curve_1aaf1e99a02411185fd11daf858e3481fc" prot="public" virt="virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>maxTime</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a8319e5c2c37b09a825d61210c9cb8e2a" prot="protected" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>moving_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::QuantLib::Observable::"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_spreaded_hazard_rate_curve_1a87af6510899164b45237d8353240976d" prot="private" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>originalCurve_</name></member>
      <member refid="class_quant_lib_1_1_spreaded_hazard_rate_curve_1a1406c5ed97035f0d3c689b1785727465" prot="public" virt="virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>referenceDate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1abeb79eefda70a9414f206ca9e70ced0f" prot="public" virt="virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>settlementDays</name></member>
      <member refid="class_quant_lib_1_1_spreaded_hazard_rate_curve_1ab616332ef4c455f0d043e67daf16cb18" prot="private" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>spread_</name></member>
      <member refid="class_quant_lib_1_1_spreaded_hazard_rate_curve_1a63a3be2d6dd70bbba86f199d054c271b" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>SpreadedHazardRateCurve</name></member>
      <member refid="class_quant_lib_1_1_default_probability_term_structure_1aaf62e7c72afb270890984b4e129e29fa" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>survivalProbability</name></member>
      <member refid="class_quant_lib_1_1_default_probability_term_structure_1a9d2c4949bb2b66ebfef34e986cc50f4f" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>survivalProbability</name></member>
      <member refid="class_quant_lib_1_1_hazard_rate_structure_1aa5e90da86c9290f755b6ed456d786134" prot="protected" virt="virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>survivalProbabilityImpl</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac8365997e6d41134b4e0998fe6b4e949" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>TermStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a95764a49e0368b653eadbe619d9ef334" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>TermStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1aab73d2acafdc8fbdf9336e7084bd88a1" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>TermStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac8da61eb0f06ae07a35e8e4bbe7146b0" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>timeFromReference</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_default_probability_term_structure_1ad5e8ad7630b7b90f32b3f56659c82e23" prot="public" virt="virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a2fcf1c78e57786ad5c123f52dbf619e8" prot="protected" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>updated_</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1af0ca0156436ffbce159183198eb27e2e" prot="public" virt="virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>~Extrapolator</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ad202ddcc14fc4a6c16686d6164d7b36c" prot="public" virt="non-virtual"><scope>QuantLib::SpreadedHazardRateCurve</scope><name>~TermStructure</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_trinomial_tree" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::TrinomialTree</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_tree" prot="public" virt="non-virtual">QuantLib::Tree&lt; TrinomialTree &gt;</basecompoundref>
    <includes refid="trinomialtree_8hpp" local="no">trinomialtree.hpp</includes>
    <innerclass refid="class_quant_lib_1_1_trinomial_tree_1_1_branching" prot="private">QuantLib::TrinomialTree::Branching</innerclass>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_quant_lib_1_1_trinomial_tree_1accb41d064f2f5b6b40f633b76c3e9020" prot="public" static="no" strong="no">
        <type></type>
        <name>Branches</name>
        <qualifiedname>QuantLib::TrinomialTree::Branches</qualifiedname>
        <enumvalue id="class_quant_lib_1_1_trinomial_tree_1accb41d064f2f5b6b40f633b76c3e9020a5fff19366cd0b5415f021caafa3d4279" prot="public">
          <name>branches</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/trinomialtree.hpp" line="44" column="9" bodyfile="ql/methods/lattices/trinomialtree.hpp" bodystart="44" bodyend="44"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_trinomial_tree_1a0ee96790f6a17f3c32d20dcba90968c3" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; Branching &gt;</type>
        <definition>std::vector&lt;Branching&gt; QuantLib::TrinomialTree::branchings_</definition>
        <argsstring></argsstring>
        <name>branchings_</name>
        <qualifiedname>QuantLib::TrinomialTree::branchings_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/trinomialtree.hpp" line="57" column="21" bodyfile="ql/methods/lattices/trinomialtree.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_trinomial_tree_1a33b1175804dc2078fdd30b54a258daa1" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::TrinomialTree::x0_</definition>
        <argsstring></argsstring>
        <name>x0_</name>
        <qualifiedname>QuantLib::TrinomialTree::x0_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/trinomialtree.hpp" line="58" column="14" bodyfile="ql/methods/lattices/trinomialtree.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_trinomial_tree_1af7c4a59ad6a03541b7d90f02135acbd6" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::TrinomialTree::dx_</definition>
        <argsstring></argsstring>
        <name>dx_</name>
        <qualifiedname>QuantLib::TrinomialTree::dx_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/trinomialtree.hpp" line="59" column="21" bodyfile="ql/methods/lattices/trinomialtree.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_trinomial_tree_1af7a2691ebe65cc42b02f196488952bff" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_time_grid" kindref="compound">TimeGrid</ref></type>
        <definition>TimeGrid QuantLib::TrinomialTree::timeGrid_</definition>
        <argsstring></argsstring>
        <name>timeGrid_</name>
        <qualifiedname>QuantLib::TrinomialTree::timeGrid_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/trinomialtree.hpp" line="60" column="18" bodyfile="ql/methods/lattices/trinomialtree.hpp" bodystart="60" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_trinomial_tree_1a2f06aa2df15d27ae413ddf854e639912" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::TrinomialTree::TrinomialTree</definition>
        <argsstring>(const ext::shared_ptr&lt; StochasticProcess1D &gt; &amp;process, const TimeGrid &amp;timeGrid, bool isPositive=false)</argsstring>
        <name>TrinomialTree</name>
        <qualifiedname>QuantLib::TrinomialTree::TrinomialTree</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_stochastic_process1_d" kindref="compound">StochasticProcess1D</ref> &gt; &amp;</type>
          <declname>process</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_time_grid" kindref="compound">TimeGrid</ref> &amp;</type>
          <declname>timeGrid</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>isPositive</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/trinomialtree.hpp" line="45" column="9" bodyfile="ql/methods/lattices/trinomialtree.cpp" bodystart="26" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_trinomial_tree_1a64f54aa60a593333eeb26e4705910326" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::TrinomialTree::dx</definition>
        <argsstring>(Size i) const</argsstring>
        <name>dx</name>
        <qualifiedname>QuantLib::TrinomialTree::dx</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/trinomialtree.hpp" line="48" column="14" bodyfile="ql/methods/lattices/trinomialtree.hpp" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_trinomial_tree_1a8dffdc4580411a638f60cc7c9a933d32" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_time_grid" kindref="compound">TimeGrid</ref> &amp;</type>
        <definition>const TimeGrid &amp; QuantLib::TrinomialTree::timeGrid</definition>
        <argsstring>() const</argsstring>
        <name>timeGrid</name>
        <qualifiedname>QuantLib::TrinomialTree::timeGrid</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/trinomialtree.hpp" line="49" column="24" bodyfile="ql/methods/lattices/trinomialtree.hpp" bodystart="49" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_trinomial_tree_1a2ec861d6680c293c2476b6dd0f503acf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::TrinomialTree::size</definition>
        <argsstring>(Size i) const</argsstring>
        <name>size</name>
        <qualifiedname>QuantLib::TrinomialTree::size</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/trinomialtree.hpp" line="51" column="14" bodyfile="ql/methods/lattices/trinomialtree.hpp" bodystart="84" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_trinomial_tree_1a57c4c2387e20d220703a34e0f4a8c381" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::TrinomialTree::underlying</definition>
        <argsstring>(Size i, Size index) const</argsstring>
        <name>underlying</name>
        <qualifiedname>QuantLib::TrinomialTree::underlying</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/trinomialtree.hpp" line="52" column="14" bodyfile="ql/methods/lattices/trinomialtree.hpp" bodystart="88" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_trinomial_tree_1a3b4e25367dd32adbfc4455d1e6f072d4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::TrinomialTree::descendant</definition>
        <argsstring>(Size i, Size index, Size branch) const</argsstring>
        <name>descendant</name>
        <qualifiedname>QuantLib::TrinomialTree::descendant</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>branch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/trinomialtree.hpp" line="53" column="14" bodyfile="ql/methods/lattices/trinomialtree.hpp" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_trinomial_tree_1ab2adae796e04038d1ee174718b41321c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::TrinomialTree::probability</definition>
        <argsstring>(Size i, Size index, Size branch) const</argsstring>
        <name>probability</name>
        <qualifiedname>QuantLib::TrinomialTree::probability</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>branch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/methods/lattices/trinomialtree.hpp" line="54" column="14" bodyfile="ql/methods/lattices/trinomialtree.hpp" bodystart="101" bodyend="103"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Recombining trinomial tree class. </para>
    </briefdescription>
    <detaileddescription>
<para>This class defines a recombining trinomial tree approximating a 1-D stochastic process. <simplesect kind="warning"><para>The diffusion term of the SDE must be independent of the underlying process. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>QuantLib::CuriouslyRecurringTemplate&lt; TrinomialTree &gt;</label>
        <link refid="class_quant_lib_1_1_curiously_recurring_template"/>
      </node>
      <node id="2">
        <label>QuantLib::Tree&lt; TrinomialTree &gt;</label>
        <link refid="class_quant_lib_1_1_tree"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::TrinomialTree</label>
        <link refid="class_quant_lib_1_1_trinomial_tree"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>QuantLib::CuriouslyRecurringTemplate&lt; TrinomialTree &gt;</label>
        <link refid="class_quant_lib_1_1_curiously_recurring_template"/>
      </node>
      <node id="4">
        <label>QuantLib::TimeGrid</label>
        <link refid="class_quant_lib_1_1_time_grid"/>
      </node>
      <node id="2">
        <label>QuantLib::Tree&lt; TrinomialTree &gt;</label>
        <link refid="class_quant_lib_1_1_tree"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::TrinomialTree</label>
        <link refid="class_quant_lib_1_1_trinomial_tree"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>timeGrid_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/methods/lattices/trinomialtree.hpp" line="41" column="5" bodyfile="ql/methods/lattices/trinomialtree.hpp" bodystart="41" bodyend="80"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_trinomial_tree_1accb41d064f2f5b6b40f633b76c3e9020" prot="public" virt="non-virtual"><scope>QuantLib::TrinomialTree</scope><name>Branches</name></member>
      <member refid="class_quant_lib_1_1_trinomial_tree_1accb41d064f2f5b6b40f633b76c3e9020a5fff19366cd0b5415f021caafa3d4279" prot="public" virt="non-virtual"><scope>QuantLib::TrinomialTree</scope><name>branches</name></member>
      <member refid="class_quant_lib_1_1_trinomial_tree_1a0ee96790f6a17f3c32d20dcba90968c3" prot="protected" virt="non-virtual"><scope>QuantLib::TrinomialTree</scope><name>branchings_</name></member>
      <member refid="class_quant_lib_1_1_tree_1ad67606506e0773cb697aa0826dd953b2" prot="public" virt="non-virtual"><scope>QuantLib::TrinomialTree</scope><name>columns</name></member>
      <member refid="class_quant_lib_1_1_curiously_recurring_template_1ac51e69d7c3e616686e8777fcabebf954" prot="protected" virt="non-virtual"><scope>QuantLib::TrinomialTree</scope><name>CuriouslyRecurringTemplate</name></member>
      <member refid="class_quant_lib_1_1_trinomial_tree_1a3b4e25367dd32adbfc4455d1e6f072d4" prot="public" virt="non-virtual"><scope>QuantLib::TrinomialTree</scope><name>descendant</name></member>
      <member refid="class_quant_lib_1_1_trinomial_tree_1a64f54aa60a593333eeb26e4705910326" prot="public" virt="non-virtual"><scope>QuantLib::TrinomialTree</scope><name>dx</name></member>
      <member refid="class_quant_lib_1_1_trinomial_tree_1af7c4a59ad6a03541b7d90f02135acbd6" prot="protected" virt="non-virtual"><scope>QuantLib::TrinomialTree</scope><name>dx_</name></member>
      <member refid="class_quant_lib_1_1_curiously_recurring_template_1a72c11590c74c9d0085fd43f17cdfe96e" prot="protected" virt="non-virtual"><scope>QuantLib::TrinomialTree</scope><name>impl</name></member>
      <member refid="class_quant_lib_1_1_curiously_recurring_template_1a9efaa4c38bfca1e148ed265a809ed220" prot="protected" virt="non-virtual"><scope>QuantLib::TrinomialTree</scope><name>impl</name></member>
      <member refid="class_quant_lib_1_1_trinomial_tree_1ab2adae796e04038d1ee174718b41321c" prot="public" virt="non-virtual"><scope>QuantLib::TrinomialTree</scope><name>probability</name></member>
      <member refid="class_quant_lib_1_1_trinomial_tree_1a2ec861d6680c293c2476b6dd0f503acf" prot="public" virt="non-virtual"><scope>QuantLib::TrinomialTree</scope><name>size</name></member>
      <member refid="class_quant_lib_1_1_trinomial_tree_1a8dffdc4580411a638f60cc7c9a933d32" prot="public" virt="non-virtual"><scope>QuantLib::TrinomialTree</scope><name>timeGrid</name></member>
      <member refid="class_quant_lib_1_1_trinomial_tree_1af7a2691ebe65cc42b02f196488952bff" prot="protected" virt="non-virtual"><scope>QuantLib::TrinomialTree</scope><name>timeGrid_</name></member>
      <member refid="class_quant_lib_1_1_tree_1a50c9a44fb22df3c7d5916a8ff80d79b9" prot="public" virt="non-virtual"><scope>QuantLib::TrinomialTree</scope><name>Tree</name></member>
      <member refid="class_quant_lib_1_1_trinomial_tree_1a2f06aa2df15d27ae413ddf854e639912" prot="public" virt="non-virtual"><scope>QuantLib::TrinomialTree</scope><name>TrinomialTree</name></member>
      <member refid="class_quant_lib_1_1_trinomial_tree_1a57c4c2387e20d220703a34e0f4a8c381" prot="public" virt="non-virtual"><scope>QuantLib::TrinomialTree</scope><name>underlying</name></member>
      <member refid="class_quant_lib_1_1_trinomial_tree_1a33b1175804dc2078fdd30b54a258daa1" prot="protected" virt="non-virtual"><scope>QuantLib::TrinomialTree</scope><name>x0_</name></member>
      <member refid="class_quant_lib_1_1_curiously_recurring_template_1ae22b4353d3c05a5aad5f5b8769392b05" prot="protected" virt="non-virtual"><scope>QuantLib::TrinomialTree</scope><name>~CuriouslyRecurringTemplate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

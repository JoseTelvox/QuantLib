<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_payment_term" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::PaymentTerm</compoundname>
    <innerclass refid="struct_quant_lib_1_1_payment_term_1_1_data" prot="protected">QuantLib::PaymentTerm::Data</innerclass>
    <sectiondef kind="user-defined">
      <header>Inspectors</header>
      <memberdef kind="variable" id="class_quant_lib_1_1_payment_term_1ae0f2a89846f80573c678c6d9d986b593" prot="protected" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="struct_quant_lib_1_1_payment_term_1_1_data" kindref="compound">Data</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;Data&gt; QuantLib::PaymentTerm::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <qualifiedname>QuantLib::PaymentTerm::data_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/paymentterm.hpp" line="55" column="25" bodyfile="ql/experimental/commodities/paymentterm.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_payment_term_1a7cc77ad186eb53dc1f65b58f95691762" prot="protected" static="yes" mutable="no">
        <type>std::map&lt; std::string, ext::shared_ptr&lt; <ref refid="struct_quant_lib_1_1_payment_term_1_1_data" kindref="compound">Data</ref> &gt; &gt;</type>
        <definition>std::map&lt; std::string, ext::shared_ptr&lt; PaymentTerm::Data &gt; &gt; QuantLib::PaymentTerm::paymentTerms_</definition>
        <argsstring></argsstring>
        <name>paymentTerms_</name>
        <qualifiedname>QuantLib::PaymentTerm::paymentTerms_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/paymentterm.hpp" line="66" column="25" bodyfile="ql/experimental/commodities/paymentterm.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_payment_term_1a8595ad01c0d62781b103dd9bb04e6a79" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string &amp; QuantLib::PaymentTerm::name</definition>
        <argsstring>() const</argsstring>
        <name>name</name>
        <qualifiedname>QuantLib::PaymentTerm::name</qualifiedname>
        <briefdescription>
<para>name, e.g, &quot;Pricing end + 5 days&quot; </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/paymentterm.hpp" line="45" column="27" bodyfile="ql/experimental/commodities/paymentterm.hpp" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_payment_term_1a0c6be43d487961c6871099c3db766ad1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>EventType</type>
        <definition>PaymentTerm::EventType QuantLib::PaymentTerm::eventType</definition>
        <argsstring>() const</argsstring>
        <name>eventType</name>
        <qualifiedname>QuantLib::PaymentTerm::eventType</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/paymentterm.hpp" line="46" column="19" bodyfile="ql/experimental/commodities/paymentterm.hpp" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_payment_term_1aee5025c3a7f257f62587e2163086153c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
        <definition>Integer QuantLib::PaymentTerm::offsetDays</definition>
        <argsstring>() const</argsstring>
        <name>offsetDays</name>
        <qualifiedname>QuantLib::PaymentTerm::offsetDays</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/paymentterm.hpp" line="47" column="17" bodyfile="ql/experimental/commodities/paymentterm.hpp" bodystart="97" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_payment_term_1af6456ca7efb3595723460e203921c948" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
        <definition>const Calendar &amp; QuantLib::PaymentTerm::calendar</definition>
        <argsstring>() const</argsstring>
        <name>calendar</name>
        <qualifiedname>QuantLib::PaymentTerm::calendar</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/paymentterm.hpp" line="48" column="24" bodyfile="ql/experimental/commodities/paymentterm.hpp" bodystart="101" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_payment_term_1a76036171b2d5140a649ca99b05c3df88" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::PaymentTerm::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <qualifiedname>QuantLib::PaymentTerm::empty</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/paymentterm.hpp" line="50" column="14" bodyfile="ql/experimental/commodities/paymentterm.hpp" bodystart="109" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_payment_term_1a09f7de153dbc6edf7d20a52492479a53" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::PaymentTerm::getPaymentDate</definition>
        <argsstring>(const Date &amp;date) const</argsstring>
        <name>getPaymentDate</name>
        <qualifiedname>QuantLib::PaymentTerm::getPaymentDate</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>date</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/paymentterm.hpp" line="52" column="14" bodyfile="ql/experimental/commodities/paymentterm.hpp" bodystart="105" bodyend="107"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_quant_lib_1_1_payment_term_1a31d0631b8dbb07ffb38c6bc56f54eee6" prot="public" static="no" strong="no">
        <type></type>
        <name>EventType</name>
        <qualifiedname>QuantLib::PaymentTerm::EventType</qualifiedname>
        <enumvalue id="class_quant_lib_1_1_payment_term_1a31d0631b8dbb07ffb38c6bc56f54eee6ac344d5fd2da25c9a2286527173418cf5" prot="public">
          <name>TradeDate</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_payment_term_1a31d0631b8dbb07ffb38c6bc56f54eee6adeb51f88f21dfed84b142d20dd21e19b" prot="public">
          <name>PricingDate</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/paymentterm.hpp" line="35" column="9" bodyfile="ql/experimental/commodities/paymentterm.hpp" bodystart="35" bodyend="35"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_payment_term_1a641c8180462574fd2cd4c49ff96473b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::PaymentTerm::PaymentTerm</definition>
        <argsstring>()=default</argsstring>
        <name>PaymentTerm</name>
        <qualifiedname>QuantLib::PaymentTerm::PaymentTerm</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/paymentterm.hpp" line="37" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_payment_term_1a23843b5a7bd591b9f6b4f8a2d4c6f0aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::PaymentTerm::PaymentTerm</definition>
        <argsstring>(const std::string &amp;name, EventType eventType, Integer offsetDays, const Calendar &amp;calendar)</argsstring>
        <name>PaymentTerm</name>
        <qualifiedname>QuantLib::PaymentTerm::PaymentTerm</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>EventType</type>
          <declname>eventType</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a8ac1a45a37d8d3dda438a2e59e222620" kindref="member">Integer</ref></type>
          <declname>offsetDays</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>calendar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/paymentterm.hpp" line="38" column="9" bodyfile="ql/experimental/commodities/paymentterm.cpp" bodystart="27" bodyend="40"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="related">
      <memberdef kind="function" id="class_quant_lib_1_1_payment_term_1ad0c696b905fd1f7d49b97806e7e28aa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const PaymentTerm &amp;, const PaymentTerm &amp;)</argsstring>
        <name>operator==</name>
        <qualifiedname>QuantLib::PaymentTerm::operator==</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_payment_term" kindref="compound">PaymentTerm</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_payment_term" kindref="compound">PaymentTerm</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/paymentterm.hpp" line="70" column="10" bodyfile="ql/experimental/commodities/paymentterm.hpp" bodystart="113" bodyend="115" declfile="ql/experimental/commodities/paymentterm.hpp" declline="70" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_payment_term_1a3a14cda29f7ea6b3b761303a887cf119" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const PaymentTerm &amp;, const PaymentTerm &amp;)</argsstring>
        <name>operator!=</name>
        <qualifiedname>QuantLib::PaymentTerm::operator!=</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_payment_term" kindref="compound">PaymentTerm</ref> &amp;</type>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_payment_term" kindref="compound">PaymentTerm</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/paymentterm.hpp" line="74" column="10" bodyfile="ql/experimental/commodities/paymentterm.hpp" bodystart="117" bodyend="119" declfile="ql/experimental/commodities/paymentterm.hpp" declline="74" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_payment_term_1a9f6412633af57189ba935181fe3b4065" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream &amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const PaymentTerm &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <qualifiedname>QuantLib::PaymentTerm::operator&lt;&lt;</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_payment_term" kindref="compound">PaymentTerm</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/commodities/paymentterm.hpp" line="78" column="5" bodyfile="ql/experimental/commodities/paymentterm.cpp" bodystart="42" bodyend="47" declfile="ql/experimental/commodities/paymentterm.hpp" declline="78" declcolumn="5"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/experimental/commodities/paymentterm.hpp" line="33" column="5" bodyfile="ql/experimental/commodities/paymentterm.hpp" bodystart="33" bodyend="67"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_payment_term_1af6456ca7efb3595723460e203921c948" prot="public" virt="non-virtual"><scope>QuantLib::PaymentTerm</scope><name>calendar</name></member>
      <member refid="class_quant_lib_1_1_payment_term_1ae0f2a89846f80573c678c6d9d986b593" prot="protected" virt="non-virtual"><scope>QuantLib::PaymentTerm</scope><name>data_</name></member>
      <member refid="class_quant_lib_1_1_payment_term_1a76036171b2d5140a649ca99b05c3df88" prot="public" virt="non-virtual"><scope>QuantLib::PaymentTerm</scope><name>empty</name></member>
      <member refid="class_quant_lib_1_1_payment_term_1a31d0631b8dbb07ffb38c6bc56f54eee6" prot="public" virt="non-virtual"><scope>QuantLib::PaymentTerm</scope><name>EventType</name></member>
      <member refid="class_quant_lib_1_1_payment_term_1a0c6be43d487961c6871099c3db766ad1" prot="public" virt="non-virtual"><scope>QuantLib::PaymentTerm</scope><name>eventType</name></member>
      <member refid="class_quant_lib_1_1_payment_term_1a09f7de153dbc6edf7d20a52492479a53" prot="public" virt="non-virtual"><scope>QuantLib::PaymentTerm</scope><name>getPaymentDate</name></member>
      <member refid="class_quant_lib_1_1_payment_term_1a8595ad01c0d62781b103dd9bb04e6a79" prot="public" virt="non-virtual"><scope>QuantLib::PaymentTerm</scope><name>name</name></member>
      <member refid="class_quant_lib_1_1_payment_term_1aee5025c3a7f257f62587e2163086153c" prot="public" virt="non-virtual"><scope>QuantLib::PaymentTerm</scope><name>offsetDays</name></member>
      <member refid="class_quant_lib_1_1_payment_term_1a3a14cda29f7ea6b3b761303a887cf119" prot="public" virt="non-virtual"><scope>QuantLib::PaymentTerm</scope><name>operator!=</name></member>
      <member refid="class_quant_lib_1_1_payment_term_1a9f6412633af57189ba935181fe3b4065" prot="public" virt="non-virtual"><scope>QuantLib::PaymentTerm</scope><name>operator&lt;&lt;</name></member>
      <member refid="class_quant_lib_1_1_payment_term_1ad0c696b905fd1f7d49b97806e7e28aa1" prot="public" virt="non-virtual"><scope>QuantLib::PaymentTerm</scope><name>operator==</name></member>
      <member refid="class_quant_lib_1_1_payment_term_1a641c8180462574fd2cd4c49ff96473b6" prot="public" virt="non-virtual"><scope>QuantLib::PaymentTerm</scope><name>PaymentTerm</name></member>
      <member refid="class_quant_lib_1_1_payment_term_1a23843b5a7bd591b9f6b4f8a2d4c6f0aa" prot="public" virt="non-virtual"><scope>QuantLib::PaymentTerm</scope><name>PaymentTerm</name></member>
      <member refid="class_quant_lib_1_1_payment_term_1a7cc77ad186eb53dc1f65b58f95691762" prot="protected" virt="non-virtual"><scope>QuantLib::PaymentTerm</scope><name>paymentTerms_</name></member>
      <member refid="class_quant_lib_1_1_payment_term_1a31d0631b8dbb07ffb38c6bc56f54eee6adeb51f88f21dfed84b142d20dd21e19b" prot="public" virt="non-virtual"><scope>QuantLib::PaymentTerm</scope><name>PricingDate</name></member>
      <member refid="class_quant_lib_1_1_payment_term_1a31d0631b8dbb07ffb38c6bc56f54eee6ac344d5fd2da25c9a2286527173418cf5" prot="public" virt="non-virtual"><scope>QuantLib::PaymentTerm</scope><name>TradeDate</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

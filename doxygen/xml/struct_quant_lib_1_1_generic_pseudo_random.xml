<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="struct_quant_lib_1_1_generic_pseudo_random" kind="struct" language="C++" prot="public">
    <compoundname>QuantLib::GenericPseudoRandom</compoundname>
    <templateparamlist>
      <param>
        <type>class URNG</type>
      </param>
      <param>
        <type>class IC</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="struct_quant_lib_1_1_generic_pseudo_random_1a8fd67cd33f2424e3250e16645dd9851c" prot="public" static="no" strong="no">
        <type></type>
        <name></name>
        <qualifiedname>QuantLib::GenericPseudoRandom</qualifiedname>
        <enumvalue id="struct_quant_lib_1_1_generic_pseudo_random_1a8fd67cd33f2424e3250e16645dd9851ca0480b713ba0db478bc05d34f1a563e0f" prot="public">
          <name>allowsErrorEstimate</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/rngtraits.hpp" line="50" column="9" bodyfile="ql/math/randomnumbers/rngtraits.hpp" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_quant_lib_1_1_generic_pseudo_random_1afd945036a901139a3628ca1f87e863c9" prot="public" static="no">
        <type>URNG</type>
        <definition>typedef URNG QuantLib::GenericPseudoRandom&lt; URNG, IC &gt;::urng_type</definition>
        <argsstring></argsstring>
        <name>urng_type</name>
        <qualifiedname>QuantLib::GenericPseudoRandom::urng_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/rngtraits.hpp" line="45" column="22" bodyfile="ql/math/randomnumbers/rngtraits.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_quant_lib_1_1_generic_pseudo_random_1aa13008710f86784de2780035fc113af2" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1_inverse_cumulative_rng" kindref="compound">InverseCumulativeRng</ref>&lt; urng_type, IC &gt;</type>
        <definition>typedef InverseCumulativeRng&lt;urng_type,IC&gt; QuantLib::GenericPseudoRandom&lt; URNG, IC &gt;::rng_type</definition>
        <argsstring></argsstring>
        <name>rng_type</name>
        <qualifiedname>QuantLib::GenericPseudoRandom::rng_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/rngtraits.hpp" line="46" column="38" bodyfile="ql/math/randomnumbers/rngtraits.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_quant_lib_1_1_generic_pseudo_random_1ace4755baa021dc6069a4de900697e7f4" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1_random_sequence_generator" kindref="compound">RandomSequenceGenerator</ref>&lt; urng_type &gt;</type>
        <definition>typedef RandomSequenceGenerator&lt;urng_type&gt; QuantLib::GenericPseudoRandom&lt; URNG, IC &gt;::ursg_type</definition>
        <argsstring></argsstring>
        <name>ursg_type</name>
        <qualifiedname>QuantLib::GenericPseudoRandom::ursg_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/rngtraits.hpp" line="47" column="41" bodyfile="ql/math/randomnumbers/rngtraits.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_quant_lib_1_1_generic_pseudo_random_1a4b0cb6e70b034993f94a8959bcc7a66d" prot="public" static="no">
        <type><ref refid="class_quant_lib_1_1_inverse_cumulative_rsg" kindref="compound">InverseCumulativeRsg</ref>&lt; <ref refid="class_quant_lib_1_1_random_sequence_generator" kindref="compound">ursg_type</ref>, IC &gt;</type>
        <definition>typedef InverseCumulativeRsg&lt;ursg_type,IC&gt; QuantLib::GenericPseudoRandom&lt; URNG, IC &gt;::rsg_type</definition>
        <argsstring></argsstring>
        <name>rsg_type</name>
        <qualifiedname>QuantLib::GenericPseudoRandom::rsg_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/rngtraits.hpp" line="48" column="38" bodyfile="ql/math/randomnumbers/rngtraits.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="struct_quant_lib_1_1_generic_pseudo_random_1ad23708402a19c75b470d1e2c32922e09" prot="public" static="yes" mutable="no">
        <type>ext::shared_ptr&lt; IC &gt;</type>
        <definition>ext::shared_ptr&lt;IC&gt; QuantLib::GenericPseudoRandom&lt; URNG, IC &gt;::icInstance</definition>
        <argsstring></argsstring>
        <name>icInstance</name>
        <qualifiedname>QuantLib::GenericPseudoRandom::icInstance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/rngtraits.hpp" line="58" column="32" bodyfile="ql/math/randomnumbers/rngtraits.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_quant_lib_1_1_generic_pseudo_random_1a6f078425b9f71b0594acb2ae0ca85809" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_quant_lib_1_1_inverse_cumulative_rsg" kindref="compound">rsg_type</ref></type>
        <definition>static rsg_type QuantLib::GenericPseudoRandom&lt; URNG, IC &gt;::make_sequence_generator</definition>
        <argsstring>(Size dimension, BigNatural seed)</argsstring>
        <name>make_sequence_generator</name>
        <qualifiedname>QuantLib::GenericPseudoRandom::make_sequence_generator</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>dimension</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/rngtraits.hpp" line="52" column="25" bodyfile="ql/math/randomnumbers/rngtraits.hpp" bodystart="52" bodyend="56"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/math/randomnumbers/rngtraits.hpp" line="43" column="5" bodyfile="ql/math/randomnumbers/rngtraits.hpp" bodystart="43" bodyend="59"/>
    <listofallmembers>
      <member refid="struct_quant_lib_1_1_generic_pseudo_random_1a8fd67cd33f2424e3250e16645dd9851ca0480b713ba0db478bc05d34f1a563e0f" prot="public" virt="non-virtual"><scope>QuantLib::GenericPseudoRandom</scope><name>allowsErrorEstimate</name></member>
      <member refid="struct_quant_lib_1_1_generic_pseudo_random_1ad23708402a19c75b470d1e2c32922e09" prot="public" virt="non-virtual"><scope>QuantLib::GenericPseudoRandom</scope><name>icInstance</name></member>
      <member refid="struct_quant_lib_1_1_generic_pseudo_random_1a6f078425b9f71b0594acb2ae0ca85809" prot="public" virt="non-virtual"><scope>QuantLib::GenericPseudoRandom</scope><name>make_sequence_generator</name></member>
      <member refid="struct_quant_lib_1_1_generic_pseudo_random_1aa13008710f86784de2780035fc113af2" prot="public" virt="non-virtual"><scope>QuantLib::GenericPseudoRandom</scope><name>rng_type</name></member>
      <member refid="struct_quant_lib_1_1_generic_pseudo_random_1a4b0cb6e70b034993f94a8959bcc7a66d" prot="public" virt="non-virtual"><scope>QuantLib::GenericPseudoRandom</scope><name>rsg_type</name></member>
      <member refid="struct_quant_lib_1_1_generic_pseudo_random_1afd945036a901139a3628ca1f87e863c9" prot="public" virt="non-virtual"><scope>QuantLib::GenericPseudoRandom</scope><name>urng_type</name></member>
      <member refid="struct_quant_lib_1_1_generic_pseudo_random_1ace4755baa021dc6069a4de900697e7f4" prot="public" virt="non-virtual"><scope>QuantLib::GenericPseudoRandom</scope><name>ursg_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

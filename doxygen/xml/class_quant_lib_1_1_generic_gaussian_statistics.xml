<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_generic_gaussian_statistics" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::GenericGaussianStatistics</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Stat</basecompoundref>
    <includes refid="gaussianstatistics_8hpp" local="no">gaussianstatistics.hpp</includes>
    <templateparamlist>
      <param>
        <type>class Stat</type>
      </param>
    </templateparamlist>
    <sectiondef kind="user-defined">
      <header>Gaussian risk measures</header>
      <memberdef kind="function" id="class_quant_lib_1_1_generic_gaussian_statistics_1ab892dd7e65ecb48d61c0d58b6245c34f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::GenericGaussianStatistics&lt; Stat &gt;::gaussianDownsideVariance</definition>
        <argsstring>() const</argsstring>
        <name>gaussianDownsideVariance</name>
        <qualifiedname>QuantLib::GenericGaussianStatistics::gaussianDownsideVariance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the downside variance, defined as  <formula id="346">\[ \frac{N}{N-1} \times \frac{ \sum_{i=1}^{N}
    \theta \times x_i^{2}}{ \sum_{i=1}^{N} w_i} \]</formula>, where <formula id="347">$ \theta $</formula> = 0 if x &gt; 0 and <formula id="347">$ \theta $</formula> =1 if x &lt;0 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/gaussianstatistics.hpp" line="53" column="14" bodyfile="ql/math/statistics/gaussianstatistics.hpp" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_generic_gaussian_statistics_1a4729266d9ffeb0133cc78a3e93d8549d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::GenericGaussianStatistics&lt; Stat &gt;::gaussianDownsideDeviation</definition>
        <argsstring>() const</argsstring>
        <name>gaussianDownsideDeviation</name>
        <qualifiedname>QuantLib::GenericGaussianStatistics::gaussianDownsideDeviation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the downside deviation, defined as the square root of the downside variance. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/gaussianstatistics.hpp" line="60" column="14" bodyfile="ql/math/statistics/gaussianstatistics.hpp" bodystart="60" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_generic_gaussian_statistics_1a89936829bf17a6107409e68da6a7ed3d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::GenericGaussianStatistics&lt; Stat &gt;::gaussianRegret</definition>
        <argsstring>(Real target) const</argsstring>
        <name>gaussianRegret</name>
        <qualifiedname>QuantLib::GenericGaussianStatistics::gaussianRegret</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>target</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the variance of observations below target <formula id="348">\[ \frac{\sum w_i (min(0, x_i-target))^2 }{\sum w_i}. \]</formula></para>
<para>See Dembo, Freeman &quot;The Rules Of Risk&quot;, Wiley (2001) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/gaussianstatistics.hpp" line="69" column="14" bodyfile="ql/math/statistics/gaussianstatistics.hpp" bodystart="132" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_generic_gaussian_statistics_1a2ceb46b984f4a2c37e9eb03aeb623f73" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::GenericGaussianStatistics&lt; Stat &gt;::gaussianPercentile</definition>
        <argsstring>(Real percentile) const</argsstring>
        <name>gaussianPercentile</name>
        <qualifiedname>QuantLib::GenericGaussianStatistics::gaussianPercentile</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>percentile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gaussian-assumption y-th percentile, defined as the value x such that  <formula id="349">\[ y = \frac{1}{\sqrt{2 \pi}}
                          \int_{-\infty}^{x} \exp (-u^2/2) du \]</formula></para>
<para><simplesect kind="pre"><para>percentile must be in range (0%-100%) extremes excluded </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/gaussianstatistics.hpp" line="76" column="14" bodyfile="ql/math/statistics/gaussianstatistics.hpp" bodystart="148" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_generic_gaussian_statistics_1ab045791dba95c9c51c271b2afa954c52" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::GenericGaussianStatistics&lt; Stat &gt;::gaussianTopPercentile</definition>
        <argsstring>(Real percentile) const</argsstring>
        <name>gaussianTopPercentile</name>
        <qualifiedname>QuantLib::GenericGaussianStatistics::gaussianTopPercentile</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>percentile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>percentile must be in range (0%-100%) extremes excluded </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/gaussianstatistics.hpp" line="77" column="14" bodyfile="ql/math/statistics/gaussianstatistics.hpp" bodystart="163" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_generic_gaussian_statistics_1ad44aa9e594c331ef2e4dd600ff71c3f8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::GenericGaussianStatistics&lt; Stat &gt;::gaussianPotentialUpside</definition>
        <argsstring>(Real percentile) const</argsstring>
        <name>gaussianPotentialUpside</name>
        <qualifiedname>QuantLib::GenericGaussianStatistics::gaussianPotentialUpside</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>percentile</declname>
        </param>
        <briefdescription>
<para>gaussian-assumption Potential-Upside at a given percentile </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>percentile must be in range [90%-100%) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/gaussianstatistics.hpp" line="80" column="14" bodyfile="ql/math/statistics/gaussianstatistics.hpp" bodystart="171" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_generic_gaussian_statistics_1a7f3803b5f206ae27bd45fbb96b6625c0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::GenericGaussianStatistics&lt; Stat &gt;::gaussianValueAtRisk</definition>
        <argsstring>(Real percentile) const</argsstring>
        <name>gaussianValueAtRisk</name>
        <qualifiedname>QuantLib::GenericGaussianStatistics::gaussianValueAtRisk</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>percentile</declname>
        </param>
        <briefdescription>
<para>gaussian-assumption Value-At-Risk at a given percentile </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>percentile must be in range [90%-100%) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/gaussianstatistics.hpp" line="83" column="14" bodyfile="ql/math/statistics/gaussianstatistics.hpp" bodystart="185" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_generic_gaussian_statistics_1a7b54356abeeb2dbab837e34f869c1b1f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::GenericGaussianStatistics&lt; Stat &gt;::gaussianExpectedShortfall</definition>
        <argsstring>(Real percentile) const</argsstring>
        <name>gaussianExpectedShortfall</name>
        <qualifiedname>QuantLib::GenericGaussianStatistics::gaussianExpectedShortfall</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>percentile</declname>
        </param>
        <briefdescription>
<para>gaussian-assumption Expected Shortfall at a given percentile </para>
        </briefdescription>
        <detaileddescription>
<para>Assuming a gaussian distribution it returns the expected loss in case that the loss exceeded a VaR threshold,</para>
<para><formula id="350">\[ \mathrm{E}\left[ x \;|\; x &lt; \mathrm{VaR}(p) \right], \]</formula></para>
<para>that is the average of observations below the given percentile <formula id="351">$ p $</formula>. Also know as conditional value-at-risk.</para>
<para>See Artzner, Delbaen, Eber and Heath, &quot;Coherent measures of risk&quot;, Mathematical Finance 9 (1999)</para>
<para><simplesect kind="pre"><para>percentile must be in range [90%-100%) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/gaussianstatistics.hpp" line="99" column="14" bodyfile="ql/math/statistics/gaussianstatistics.hpp" bodystart="201" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_generic_gaussian_statistics_1a08eb60f74c6f17c37efe7e2c52753604" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::GenericGaussianStatistics&lt; Stat &gt;::gaussianShortfall</definition>
        <argsstring>(Real target) const</argsstring>
        <name>gaussianShortfall</name>
        <qualifiedname>QuantLib::GenericGaussianStatistics::gaussianShortfall</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>target</declname>
        </param>
        <briefdescription>
<para>gaussian-assumption Shortfall (observations below target) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/gaussianstatistics.hpp" line="102" column="14" bodyfile="ql/math/statistics/gaussianstatistics.hpp" bodystart="220" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_generic_gaussian_statistics_1aaa5daf440b76a514306e7327e27da662" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::GenericGaussianStatistics&lt; Stat &gt;::gaussianAverageShortfall</definition>
        <argsstring>(Real target) const</argsstring>
        <name>gaussianAverageShortfall</name>
        <qualifiedname>QuantLib::GenericGaussianStatistics::gaussianAverageShortfall</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>target</declname>
        </param>
        <briefdescription>
<para>gaussian-assumption <ref refid="struct_quant_lib_1_1_average" kindref="compound">Average</ref> Shortfall (averaged shortfallness) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/gaussianstatistics.hpp" line="105" column="14" bodyfile="ql/math/statistics/gaussianstatistics.hpp" bodystart="229" bodyend="236"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_quant_lib_1_1_generic_gaussian_statistics_1ad353b57c5a959a795f16b7d8c09dc62b" prot="public" static="no">
        <type>Stat::value_type</type>
        <definition>typedef Stat::value_type QuantLib::GenericGaussianStatistics&lt; Stat &gt;::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>QuantLib::GenericGaussianStatistics::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/gaussianstatistics.hpp" line="42" column="43" bodyfile="ql/math/statistics/gaussianstatistics.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_generic_gaussian_statistics_1a16b313ece3ea737dbe9fb5b2a93c2118" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::GenericGaussianStatistics&lt; Stat &gt;::GenericGaussianStatistics</definition>
        <argsstring>()=default</argsstring>
        <name>GenericGaussianStatistics</name>
        <qualifiedname>QuantLib::GenericGaussianStatistics::GenericGaussianStatistics</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/gaussianstatistics.hpp" line="43" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_generic_gaussian_statistics_1abc515d306f6a99f1e10c092aabce3e37" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::GenericGaussianStatistics&lt; Stat &gt;::GenericGaussianStatistics</definition>
        <argsstring>(const Stat &amp;s)</argsstring>
        <name>GenericGaussianStatistics</name>
        <qualifiedname>QuantLib::GenericGaussianStatistics::GenericGaussianStatistics</qualifiedname>
        <param>
          <type>const Stat &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/gaussianstatistics.hpp" line="44" column="18" bodyfile="ql/math/statistics/gaussianstatistics.hpp" bodystart="44" bodyend="44"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para><ref refid="namespace_quant_lib_1ae2e788da35d2b866040a03b96227ee6e" kindref="member">Statistics</ref> tool for gaussian-assumption risk measures. </para>
    </briefdescription>
    <detaileddescription>
<para>This class wraps a somewhat generic statistic tool and adds a number of gaussian risk measures (e.g.: value-at-risk, expected shortfall, etc.) based on the mean and variance provided by the underlying statistic tool. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::GenericGaussianStatistics&lt; Stat &gt;</label>
        <link refid="class_quant_lib_1_1_generic_gaussian_statistics"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Stat</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::GenericGaussianStatistics&lt; Stat &gt;</label>
        <link refid="class_quant_lib_1_1_generic_gaussian_statistics"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>Stat</label>
      </node>
    </collaborationgraph>
    <location file="ql/math/statistics/gaussianstatistics.hpp" line="40" column="5" bodyfile="ql/math/statistics/gaussianstatistics.hpp" bodystart="40" bodyend="107"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_generic_gaussian_statistics_1aaa5daf440b76a514306e7327e27da662" prot="public" virt="non-virtual"><scope>QuantLib::GenericGaussianStatistics</scope><name>gaussianAverageShortfall</name></member>
      <member refid="class_quant_lib_1_1_generic_gaussian_statistics_1a4729266d9ffeb0133cc78a3e93d8549d" prot="public" virt="non-virtual"><scope>QuantLib::GenericGaussianStatistics</scope><name>gaussianDownsideDeviation</name></member>
      <member refid="class_quant_lib_1_1_generic_gaussian_statistics_1ab892dd7e65ecb48d61c0d58b6245c34f" prot="public" virt="non-virtual"><scope>QuantLib::GenericGaussianStatistics</scope><name>gaussianDownsideVariance</name></member>
      <member refid="class_quant_lib_1_1_generic_gaussian_statistics_1a7b54356abeeb2dbab837e34f869c1b1f" prot="public" virt="non-virtual"><scope>QuantLib::GenericGaussianStatistics</scope><name>gaussianExpectedShortfall</name></member>
      <member refid="class_quant_lib_1_1_generic_gaussian_statistics_1a2ceb46b984f4a2c37e9eb03aeb623f73" prot="public" virt="non-virtual"><scope>QuantLib::GenericGaussianStatistics</scope><name>gaussianPercentile</name></member>
      <member refid="class_quant_lib_1_1_generic_gaussian_statistics_1ad44aa9e594c331ef2e4dd600ff71c3f8" prot="public" virt="non-virtual"><scope>QuantLib::GenericGaussianStatistics</scope><name>gaussianPotentialUpside</name></member>
      <member refid="class_quant_lib_1_1_generic_gaussian_statistics_1a89936829bf17a6107409e68da6a7ed3d" prot="public" virt="non-virtual"><scope>QuantLib::GenericGaussianStatistics</scope><name>gaussianRegret</name></member>
      <member refid="class_quant_lib_1_1_generic_gaussian_statistics_1a08eb60f74c6f17c37efe7e2c52753604" prot="public" virt="non-virtual"><scope>QuantLib::GenericGaussianStatistics</scope><name>gaussianShortfall</name></member>
      <member refid="class_quant_lib_1_1_generic_gaussian_statistics_1ab045791dba95c9c51c271b2afa954c52" prot="public" virt="non-virtual"><scope>QuantLib::GenericGaussianStatistics</scope><name>gaussianTopPercentile</name></member>
      <member refid="class_quant_lib_1_1_generic_gaussian_statistics_1a7f3803b5f206ae27bd45fbb96b6625c0" prot="public" virt="non-virtual"><scope>QuantLib::GenericGaussianStatistics</scope><name>gaussianValueAtRisk</name></member>
      <member refid="class_quant_lib_1_1_generic_gaussian_statistics_1a16b313ece3ea737dbe9fb5b2a93c2118" prot="public" virt="non-virtual"><scope>QuantLib::GenericGaussianStatistics</scope><name>GenericGaussianStatistics</name></member>
      <member refid="class_quant_lib_1_1_generic_gaussian_statistics_1abc515d306f6a99f1e10c092aabce3e37" prot="public" virt="non-virtual"><scope>QuantLib::GenericGaussianStatistics</scope><name>GenericGaussianStatistics</name></member>
      <member refid="class_quant_lib_1_1_generic_gaussian_statistics_1ad353b57c5a959a795f16b7d8c09dc62b" prot="public" virt="non-virtual"><scope>QuantLib::GenericGaussianStatistics</scope><name>value_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

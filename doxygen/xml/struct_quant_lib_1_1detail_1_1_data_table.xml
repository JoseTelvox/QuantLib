<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="struct_quant_lib_1_1detail_1_1_data_table" kind="struct" language="C++" prot="public">
    <compoundname>QuantLib::detail::DataTable</compoundname>
    <templateparamlist>
      <param>
        <type>class X</type>
      </param>
    </templateparamlist>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_quant_lib_1_1detail_1_1_data_table_1a38ab5979e4cf96231c1068c308d603b8" prot="public" static="no" mutable="no">
        <type>std::vector&lt; X &gt;</type>
        <definition>std::vector&lt;X&gt; QuantLib::detail::DataTable&lt; X &gt;::data_table_</definition>
        <argsstring></argsstring>
        <name>data_table_</name>
        <qualifiedname>QuantLib::detail::DataTable::data_table_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="66" column="25" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_quant_lib_1_1detail_1_1_data_table_1af15e44efee0d2efc6ac70c90d4fe89fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::detail::DataTable&lt; X &gt;::DataTable</definition>
        <argsstring>(const std::vector&lt; Size &gt;::const_iterator &amp;i)</argsstring>
        <name>DataTable</name>
        <qualifiedname>QuantLib::detail::DataTable::DataTable</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &gt;::const_iterator &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="49" column="13" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1detail_1_1_data_table_1adb993ea3c171b792d6daea87a822629f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::detail::DataTable&lt; X &gt;::DataTable</definition>
        <argsstring>(const SplineGrid::const_iterator &amp;i)</argsstring>
        <name>DataTable</name>
        <qualifiedname>QuantLib::detail::DataTable::DataTable</qualifiedname>
        <param>
          <type>const SplineGrid::const_iterator &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="53" column="13" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1detail_1_1_data_table_1ad8133c190c702abe96637ee1ae9078ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class U</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>QuantLib::detail::DataTable&lt; X &gt;::DataTable</definition>
        <argsstring>(const std::vector&lt; U &gt; &amp;v)</argsstring>
        <name>DataTable</name>
        <qualifiedname>QuantLib::detail::DataTable::DataTable</qualifiedname>
        <param>
          <type>const std::vector&lt; U &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="57" column="24" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1detail_1_1_data_table_1a899c82d1eaffdb8be79126ef801e1076" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::detail::DataTable&lt; X &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>QuantLib::detail::DataTable::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="61" column="18" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1detail_1_1_data_table_1af72e9a0f03de476877138bfa49900296" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const X &amp;</type>
        <definition>const X &amp; QuantLib::detail::DataTable&lt; X &gt;::operator[]</definition>
        <argsstring>(Size n) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>QuantLib::detail::DataTable::operator[]</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="64" column="21" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="struct_quant_lib_1_1detail_1_1_data_table_1a42e03dcc0fbe9d32b6acf05fb569e58f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>X &amp;</type>
        <definition>X &amp; QuantLib::detail::DataTable&lt; X &gt;::operator[]</definition>
        <argsstring>(Size n)</argsstring>
        <name>operator[]</name>
        <qualifiedname>QuantLib::detail::DataTable::operator[]</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/interpolations/multicubicspline.hpp" line="65" column="15" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="65" bodyend="65"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/math/interpolations/multicubicspline.hpp" line="48" column="19" bodyfile="ql/math/interpolations/multicubicspline.hpp" bodystart="48" bodyend="67"/>
    <listofallmembers>
      <member refid="struct_quant_lib_1_1detail_1_1_data_table_1a38ab5979e4cf96231c1068c308d603b8" prot="public" virt="non-virtual"><scope>QuantLib::detail::DataTable</scope><name>data_table_</name></member>
      <member refid="struct_quant_lib_1_1detail_1_1_data_table_1af15e44efee0d2efc6ac70c90d4fe89fd" prot="public" virt="non-virtual"><scope>QuantLib::detail::DataTable</scope><name>DataTable</name></member>
      <member refid="struct_quant_lib_1_1detail_1_1_data_table_1adb993ea3c171b792d6daea87a822629f" prot="public" virt="non-virtual"><scope>QuantLib::detail::DataTable</scope><name>DataTable</name></member>
      <member refid="struct_quant_lib_1_1detail_1_1_data_table_1ad8133c190c702abe96637ee1ae9078ae" prot="public" virt="non-virtual"><scope>QuantLib::detail::DataTable</scope><name>DataTable</name></member>
      <member refid="struct_quant_lib_1_1detail_1_1_data_table_1af72e9a0f03de476877138bfa49900296" prot="public" virt="non-virtual"><scope>QuantLib::detail::DataTable</scope><name>operator[]</name></member>
      <member refid="struct_quant_lib_1_1detail_1_1_data_table_1a42e03dcc0fbe9d32b6acf05fb569e58f" prot="public" virt="non-virtual"><scope>QuantLib::detail::DataTable</scope><name>operator[]</name></member>
      <member refid="struct_quant_lib_1_1detail_1_1_data_table_1a899c82d1eaffdb8be79126ef801e1076" prot="public" virt="non-virtual"><scope>QuantLib::detail::DataTable</scope><name>size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

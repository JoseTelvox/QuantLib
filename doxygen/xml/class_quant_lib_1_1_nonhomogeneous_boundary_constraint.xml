<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_nonhomogeneous_boundary_constraint" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::NonhomogeneousBoundaryConstraint</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_constraint" prot="public" virt="non-virtual">QuantLib::Constraint</basecompoundref>
    <includes refid="constraint_8hpp" local="no">constraint.hpp</includes>
    <innerclass refid="class_quant_lib_1_1_nonhomogeneous_boundary_constraint_1_1_impl" prot="private">QuantLib::NonhomogeneousBoundaryConstraint::Impl</innerclass>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_nonhomogeneous_boundary_constraint_1a377b6e5ff3e4ce1a5e485e7b252ae72b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::NonhomogeneousBoundaryConstraint::NonhomogeneousBoundaryConstraint</definition>
        <argsstring>(const Array &amp;low, const Array &amp;high)</argsstring>
        <name>NonhomogeneousBoundaryConstraint</name>
        <qualifiedname>QuantLib::NonhomogeneousBoundaryConstraint::NonhomogeneousBoundaryConstraint</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>low</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_array" kindref="compound">Array</ref> &amp;</type>
          <declname>high</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/optimization/constraint.hpp" line="201" column="9" bodyfile="ql/math/optimization/constraint.hpp" bodystart="201" bodyend="203"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Constraint imposing i-th argument to be in [low_i,high_i] for all i </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::Constraint</label>
        <link refid="class_quant_lib_1_1_constraint"/>
      </node>
      <node id="1">
        <label>QuantLib::NonhomogeneousBoundaryConstraint</label>
        <link refid="class_quant_lib_1_1_nonhomogeneous_boundary_constraint"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>QuantLib::Constraint</label>
        <link refid="class_quant_lib_1_1_constraint"/>
      </node>
      <node id="1">
        <label>QuantLib::NonhomogeneousBoundaryConstraint</label>
        <link refid="class_quant_lib_1_1_nonhomogeneous_boundary_constraint"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/math/optimization/constraint.hpp" line="177" column="5" bodyfile="ql/math/optimization/constraint.hpp" bodystart="177" bodyend="204"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_constraint_1adc6726ff3c77b2d99626316465c88ba2" prot="public" virt="non-virtual"><scope>QuantLib::NonhomogeneousBoundaryConstraint</scope><name>Constraint</name></member>
      <member refid="class_quant_lib_1_1_constraint_1a1ca0c5c7fe2744ea5c73d72f6fc0be45" prot="public" virt="non-virtual"><scope>QuantLib::NonhomogeneousBoundaryConstraint</scope><name>empty</name></member>
      <member refid="class_quant_lib_1_1_constraint_1a12ef7bf25a92dcfa368b905d50157912" prot="protected" virt="non-virtual"><scope>QuantLib::NonhomogeneousBoundaryConstraint</scope><name>impl_</name></member>
      <member refid="class_quant_lib_1_1_constraint_1a7c8afc54c3f3edeb7acf2a53544aef4c" prot="public" virt="non-virtual"><scope>QuantLib::NonhomogeneousBoundaryConstraint</scope><name>lowerBound</name></member>
      <member refid="class_quant_lib_1_1_nonhomogeneous_boundary_constraint_1a377b6e5ff3e4ce1a5e485e7b252ae72b" prot="public" virt="non-virtual"><scope>QuantLib::NonhomogeneousBoundaryConstraint</scope><name>NonhomogeneousBoundaryConstraint</name></member>
      <member refid="class_quant_lib_1_1_constraint_1a4a80949ba440e69448cacb8712349a31" prot="public" virt="non-virtual"><scope>QuantLib::NonhomogeneousBoundaryConstraint</scope><name>test</name></member>
      <member refid="class_quant_lib_1_1_constraint_1a6e7fc1520bf6c5dcb54f2f3275959c03" prot="public" virt="non-virtual"><scope>QuantLib::NonhomogeneousBoundaryConstraint</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_constraint_1ab1a10d5f10304fa6bfe9d9bfce79fc26" prot="public" virt="non-virtual"><scope>QuantLib::NonhomogeneousBoundaryConstraint</scope><name>upperBound</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

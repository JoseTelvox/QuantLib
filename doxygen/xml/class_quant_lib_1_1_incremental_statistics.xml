<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_incremental_statistics" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::IncrementalStatistics</compoundname>
    <includes refid="incrementalstatistics_8hpp" local="no">incrementalstatistics.hpp</includes>
    <sectiondef kind="user-defined">
      <header>Modifiers</header>
      <memberdef kind="typedef" id="class_quant_lib_1_1_incremental_statistics_1ab2d9440132f782a2b6e7a527ea74173e" prot="private" static="no">
        <type>boost::accumulators::accumulator_set&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>, boost::accumulators::stats&lt; boost::accumulators::tag::count, boost::accumulators::tag::min, boost::accumulators::tag::max, boost::accumulators::tag::weighted_mean, boost::accumulators::tag::weighted_variance, boost::accumulators::tag::weighted_skewness, boost::accumulators::tag::weighted_kurtosis, boost::accumulators::tag::sum_of_weights &gt;, <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>typedef boost::accumulators::accumulator_set&lt; Real, boost::accumulators::stats&lt; boost::accumulators::tag::count, boost::accumulators::tag::min, boost::accumulators::tag::max, boost::accumulators::tag::weighted_mean, boost::accumulators::tag::weighted_variance, boost::accumulators::tag::weighted_skewness, boost::accumulators::tag::weighted_kurtosis, boost::accumulators::tag::sum_of_weights&gt;, Real&gt; QuantLib::IncrementalStatistics::accumulator_set</definition>
        <argsstring></argsstring>
        <name>accumulator_set</name>
        <qualifiedname>QuantLib::IncrementalStatistics::accumulator_set</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/incrementalstatistics.hpp" line="162" column="2" bodyfile="ql/math/statistics/incrementalstatistics.hpp" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_quant_lib_1_1_incremental_statistics_1a8f3646d26c7766f34877771c87228735" prot="private" static="no">
        <type>boost::accumulators::accumulator_set&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref>, boost::accumulators::stats&lt; boost::accumulators::tag::count, boost::accumulators::tag::weighted_moment&lt; 2 &gt;, boost::accumulators::tag::sum_of_weights &gt;, <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>typedef boost::accumulators::accumulator_set&lt; Real, boost::accumulators::stats&lt; boost::accumulators::tag::count, boost::accumulators::tag::weighted_moment&lt;2&gt;, boost::accumulators::tag::sum_of_weights&gt;, Real&gt; QuantLib::IncrementalStatistics::downside_accumulator_set</definition>
        <argsstring></argsstring>
        <name>downside_accumulator_set</name>
        <qualifiedname>QuantLib::IncrementalStatistics::downside_accumulator_set</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/incrementalstatistics.hpp" line="169" column="2" bodyfile="ql/math/statistics/incrementalstatistics.hpp" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_incremental_statistics_1afd1be7de2dca5e7ab33df158258df360" prot="private" static="no" mutable="no">
        <type>accumulator_set</type>
        <definition>accumulator_set QuantLib::IncrementalStatistics::acc_</definition>
        <argsstring></argsstring>
        <name>acc_</name>
        <qualifiedname>QuantLib::IncrementalStatistics::acc_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/incrementalstatistics.hpp" line="163" column="25" bodyfile="ql/math/statistics/incrementalstatistics.hpp" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_incremental_statistics_1a040647bb102a0901d28d17f978cffd56" prot="private" static="no" mutable="no">
        <type>downside_accumulator_set</type>
        <definition>downside_accumulator_set QuantLib::IncrementalStatistics::downsideAcc_</definition>
        <argsstring></argsstring>
        <name>downsideAcc_</name>
        <qualifiedname>QuantLib::IncrementalStatistics::downsideAcc_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/incrementalstatistics.hpp" line="170" column="34" bodyfile="ql/math/statistics/incrementalstatistics.hpp" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_incremental_statistics_1a0bb1a5281dfb311fb91e1c7114228dab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::IncrementalStatistics::add</definition>
        <argsstring>(Real value, Real weight=1.0)</argsstring>
        <name>add</name>
        <qualifiedname>QuantLib::IncrementalStatistics::add</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>weight</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
<para>adds a datum to the set, possibly with a weight </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>weight must be positive or null </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/incrementalstatistics.hpp" line="133" column="14" bodyfile="ql/math/statistics/incrementalstatistics.cpp" bodystart="126" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_incremental_statistics_1a572d8447ddaa0d17d4cd2b7351a22e78" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DataIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void QuantLib::IncrementalStatistics::addSequence</definition>
        <argsstring>(DataIterator begin, DataIterator end)</argsstring>
        <name>addSequence</name>
        <qualifiedname>QuantLib::IncrementalStatistics::addSequence</qualifiedname>
        <param>
          <type>DataIterator</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>DataIterator</type>
          <declname>end</declname>
        </param>
        <briefdescription>
<para>adds a sequence of data to the set, with default weight </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/incrementalstatistics.hpp" line="136" column="14" bodyfile="ql/math/statistics/incrementalstatistics.hpp" bodystart="136" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_incremental_statistics_1a488ce8f3c5a7ada953242d886f944189" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class DataIterator</type>
          </param>
          <param>
            <type>class WeightIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void QuantLib::IncrementalStatistics::addSequence</definition>
        <argsstring>(DataIterator begin, DataIterator end, WeightIterator wbegin)</argsstring>
        <name>addSequence</name>
        <qualifiedname>QuantLib::IncrementalStatistics::addSequence</qualifiedname>
        <param>
          <type>DataIterator</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>DataIterator</type>
          <declname>end</declname>
        </param>
        <param>
          <type>WeightIterator</type>
          <declname>wbegin</declname>
        </param>
        <briefdescription>
<para>adds a sequence of data to the set, each with its weight </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="pre"><para>weights must be positive or null </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/incrementalstatistics.hpp" line="143" column="14" bodyfile="ql/math/statistics/incrementalstatistics.hpp" bodystart="143" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_incremental_statistics_1a613e523827a45d2d29b8767ea5c93256" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::IncrementalStatistics::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <qualifiedname>QuantLib::IncrementalStatistics::reset</qualifiedname>
        <briefdescription>
<para>resets the data to a null set </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/incrementalstatistics.hpp" line="149" column="14" bodyfile="ql/math/statistics/incrementalstatistics.cpp" bodystart="134" bodyend="137"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="user-defined">
      <header>Inspectors</header>
      <memberdef kind="function" id="class_quant_lib_1_1_incremental_statistics_1aa082df5540c687850fe8136dba569c8b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::IncrementalStatistics::samples</definition>
        <argsstring>() const</argsstring>
        <name>samples</name>
        <qualifiedname>QuantLib::IncrementalStatistics::samples</qualifiedname>
        <briefdescription>
<para>number of samples collected </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/incrementalstatistics.hpp" line="60" column="14" bodyfile="ql/math/statistics/incrementalstatistics.cpp" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_incremental_statistics_1a3abe86e6b4b786e92a99a23e918ecd02" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::IncrementalStatistics::weightSum</definition>
        <argsstring>() const</argsstring>
        <name>weightSum</name>
        <qualifiedname>QuantLib::IncrementalStatistics::weightSum</qualifiedname>
        <briefdescription>
<para>sum of data weights </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/incrementalstatistics.hpp" line="63" column="14" bodyfile="ql/math/statistics/incrementalstatistics.cpp" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_incremental_statistics_1a501bc100d093201da0dc14ccab6b5f7b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::IncrementalStatistics::mean</definition>
        <argsstring>() const</argsstring>
        <name>mean</name>
        <qualifiedname>QuantLib::IncrementalStatistics::mean</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the mean, defined as <formula id="352">\[ \langle x \rangle = \frac{\sum w_i x_i}{\sum w_i}. \]</formula> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/incrementalstatistics.hpp" line="68" column="14" bodyfile="ql/math/statistics/incrementalstatistics.cpp" bodystart="41" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_incremental_statistics_1a258d432db38c9c76f92458f1e88442d1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::IncrementalStatistics::variance</definition>
        <argsstring>() const</argsstring>
        <name>variance</name>
        <qualifiedname>QuantLib::IncrementalStatistics::variance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the variance, defined as  <formula id="364">\[ \frac{N}{N-1} \left\langle \left(
    x-\langle x \rangle \right)^2 \right\rangle. \]</formula> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/incrementalstatistics.hpp" line="74" column="14" bodyfile="ql/math/statistics/incrementalstatistics.cpp" bodystart="47" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_incremental_statistics_1a04ad44cc6bb84939f0d1be92506cede2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::IncrementalStatistics::standardDeviation</definition>
        <argsstring>() const</argsstring>
        <name>standardDeviation</name>
        <qualifiedname>QuantLib::IncrementalStatistics::standardDeviation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the standard deviation <formula id="354">$ \sigma $</formula>, defined as the square root of the variance. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/incrementalstatistics.hpp" line="79" column="14" bodyfile="ql/math/statistics/incrementalstatistics.cpp" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_incremental_statistics_1a09bb9cc2204848803d52d4f575e882aa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::IncrementalStatistics::errorEstimate</definition>
        <argsstring>() const</argsstring>
        <name>errorEstimate</name>
        <qualifiedname>QuantLib::IncrementalStatistics::errorEstimate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the error estimate <formula id="274">$ \epsilon $</formula>, defined as the square root of the ratio of the variance to the number of samples. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/incrementalstatistics.hpp" line="85" column="14" bodyfile="ql/math/statistics/incrementalstatistics.cpp" bodystart="60" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_incremental_statistics_1ae89779b393695c418032de14bf475f2f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::IncrementalStatistics::skewness</definition>
        <argsstring>() const</argsstring>
        <name>skewness</name>
        <qualifiedname>QuantLib::IncrementalStatistics::skewness</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the skewness, defined as  <formula id="356">\[ \frac{N^2}{(N-1)(N-2)} \frac{\left\langle \left(
    x-\langle x \rangle \right)^3 \right\rangle}{\sigma^3}. \]</formula> The above evaluates to 0 for a Gaussian distribution. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/incrementalstatistics.hpp" line="92" column="14" bodyfile="ql/math/statistics/incrementalstatistics.cpp" bodystart="64" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_incremental_statistics_1ab633dcfb3d254ff018f8c8ea83070ee3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::IncrementalStatistics::kurtosis</definition>
        <argsstring>() const</argsstring>
        <name>kurtosis</name>
        <qualifiedname>QuantLib::IncrementalStatistics::kurtosis</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the excess kurtosis, defined as   <formula id="357">\[ \frac{N^2(N+1)}{(N-1)(N-2)(N-3)}
    \frac{\left\langle \left(x-\langle x \rangle \right)^4
    \right\rangle}{\sigma^4} - \frac{3(N-1)^2}{(N-2)(N-3)}. \]</formula> The above evaluates to 0 for a Gaussian distribution. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/incrementalstatistics.hpp" line="100" column="14" bodyfile="ql/math/statistics/incrementalstatistics.cpp" bodystart="74" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_incremental_statistics_1a551abdd92fb01f750e0b667381ca4f0c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::IncrementalStatistics::min</definition>
        <argsstring>() const</argsstring>
        <name>min</name>
        <qualifiedname>QuantLib::IncrementalStatistics::min</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the minimum sample value </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/incrementalstatistics.hpp" line="103" column="14" bodyfile="ql/math/statistics/incrementalstatistics.cpp" bodystart="90" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_incremental_statistics_1a1e4c6a79e21593b53ab0e3327a8a6d49" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::IncrementalStatistics::max</definition>
        <argsstring>() const</argsstring>
        <name>max</name>
        <qualifiedname>QuantLib::IncrementalStatistics::max</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the maximum sample value </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/incrementalstatistics.hpp" line="106" column="14" bodyfile="ql/math/statistics/incrementalstatistics.cpp" bodystart="96" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_incremental_statistics_1a817fba8cd454cfcc7f0fd1fd3bd27150" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::IncrementalStatistics::downsideSamples</definition>
        <argsstring>() const</argsstring>
        <name>downsideSamples</name>
        <qualifiedname>QuantLib::IncrementalStatistics::downsideSamples</qualifiedname>
        <briefdescription>
<para>number of negative samples collected </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/incrementalstatistics.hpp" line="109" column="14" bodyfile="ql/math/statistics/incrementalstatistics.cpp" bodystart="102" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_incremental_statistics_1a61ee9189b3e48dcd4858db6dc8dfeb57" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::IncrementalStatistics::downsideWeightSum</definition>
        <argsstring>() const</argsstring>
        <name>downsideWeightSum</name>
        <qualifiedname>QuantLib::IncrementalStatistics::downsideWeightSum</qualifiedname>
        <briefdescription>
<para>sum of data weights for negative samples </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/incrementalstatistics.hpp" line="112" column="14" bodyfile="ql/math/statistics/incrementalstatistics.cpp" bodystart="107" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_incremental_statistics_1a4b1c34bc24899ecd4f263610943bcebd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::IncrementalStatistics::downsideVariance</definition>
        <argsstring>() const</argsstring>
        <name>downsideVariance</name>
        <qualifiedname>QuantLib::IncrementalStatistics::downsideVariance</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the downside variance, defined as  <formula id="346">\[ \frac{N}{N-1} \times \frac{ \sum_{i=1}^{N}
    \theta \times x_i^{2}}{ \sum_{i=1}^{N} w_i} \]</formula>, where <formula id="347">$ \theta $</formula> = 0 if x &gt; 0 and <formula id="347">$ \theta $</formula> =1 if x &lt;0 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/incrementalstatistics.hpp" line="120" column="14" bodyfile="ql/math/statistics/incrementalstatistics.cpp" bodystart="112" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_incremental_statistics_1a70671b49f43d77fb910695bf999a23b6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::IncrementalStatistics::downsideDeviation</definition>
        <argsstring>() const</argsstring>
        <name>downsideDeviation</name>
        <qualifiedname>QuantLib::IncrementalStatistics::downsideDeviation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the downside deviation, defined as the square root of the downside variance. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/incrementalstatistics.hpp" line="125" column="14" bodyfile="ql/math/statistics/incrementalstatistics.cpp" bodystart="122" bodyend="124"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_quant_lib_1_1_incremental_statistics_1a92f49cc035d055318bf72fd174b8705c" prot="public" static="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>typedef Real QuantLib::IncrementalStatistics::value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <qualifiedname>QuantLib::IncrementalStatistics::value_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/incrementalstatistics.hpp" line="55" column="22" bodyfile="ql/math/statistics/incrementalstatistics.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_incremental_statistics_1a9f70c8d153cc13afeb40f03275a3fa2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::IncrementalStatistics::IncrementalStatistics</definition>
        <argsstring>()</argsstring>
        <name>IncrementalStatistics</name>
        <qualifiedname>QuantLib::IncrementalStatistics::IncrementalStatistics</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/statistics/incrementalstatistics.hpp" line="56" column="9" bodyfile="ql/math/statistics/incrementalstatistics.cpp" bodystart="27" bodyend="29"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para><ref refid="namespace_quant_lib_1ae2e788da35d2b866040a03b96227ee6e" kindref="member">Statistics</ref> tool based on incremental accumulation. </para>
    </briefdescription>
    <detaileddescription>
<para>It can accumulate a set of data and return statistics (e.g: mean, variance, skewness, kurtosis, error estimation, etc.). This class is a wrapper to the boost accumulator library. </para>
    </detaileddescription>
    <location file="ql/math/statistics/incrementalstatistics.hpp" line="53" column="5" bodyfile="ql/math/statistics/incrementalstatistics.hpp" bodystart="53" bodyend="171"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_incremental_statistics_1afd1be7de2dca5e7ab33df158258df360" prot="private" virt="non-virtual"><scope>QuantLib::IncrementalStatistics</scope><name>acc_</name></member>
      <member refid="class_quant_lib_1_1_incremental_statistics_1ab2d9440132f782a2b6e7a527ea74173e" prot="private" virt="non-virtual"><scope>QuantLib::IncrementalStatistics</scope><name>accumulator_set</name></member>
      <member refid="class_quant_lib_1_1_incremental_statistics_1a0bb1a5281dfb311fb91e1c7114228dab" prot="public" virt="non-virtual"><scope>QuantLib::IncrementalStatistics</scope><name>add</name></member>
      <member refid="class_quant_lib_1_1_incremental_statistics_1a572d8447ddaa0d17d4cd2b7351a22e78" prot="public" virt="non-virtual"><scope>QuantLib::IncrementalStatistics</scope><name>addSequence</name></member>
      <member refid="class_quant_lib_1_1_incremental_statistics_1a488ce8f3c5a7ada953242d886f944189" prot="public" virt="non-virtual"><scope>QuantLib::IncrementalStatistics</scope><name>addSequence</name></member>
      <member refid="class_quant_lib_1_1_incremental_statistics_1a8f3646d26c7766f34877771c87228735" prot="private" virt="non-virtual"><scope>QuantLib::IncrementalStatistics</scope><name>downside_accumulator_set</name></member>
      <member refid="class_quant_lib_1_1_incremental_statistics_1a040647bb102a0901d28d17f978cffd56" prot="private" virt="non-virtual"><scope>QuantLib::IncrementalStatistics</scope><name>downsideAcc_</name></member>
      <member refid="class_quant_lib_1_1_incremental_statistics_1a70671b49f43d77fb910695bf999a23b6" prot="public" virt="non-virtual"><scope>QuantLib::IncrementalStatistics</scope><name>downsideDeviation</name></member>
      <member refid="class_quant_lib_1_1_incremental_statistics_1a817fba8cd454cfcc7f0fd1fd3bd27150" prot="public" virt="non-virtual"><scope>QuantLib::IncrementalStatistics</scope><name>downsideSamples</name></member>
      <member refid="class_quant_lib_1_1_incremental_statistics_1a4b1c34bc24899ecd4f263610943bcebd" prot="public" virt="non-virtual"><scope>QuantLib::IncrementalStatistics</scope><name>downsideVariance</name></member>
      <member refid="class_quant_lib_1_1_incremental_statistics_1a61ee9189b3e48dcd4858db6dc8dfeb57" prot="public" virt="non-virtual"><scope>QuantLib::IncrementalStatistics</scope><name>downsideWeightSum</name></member>
      <member refid="class_quant_lib_1_1_incremental_statistics_1a09bb9cc2204848803d52d4f575e882aa" prot="public" virt="non-virtual"><scope>QuantLib::IncrementalStatistics</scope><name>errorEstimate</name></member>
      <member refid="class_quant_lib_1_1_incremental_statistics_1a9f70c8d153cc13afeb40f03275a3fa2c" prot="public" virt="non-virtual"><scope>QuantLib::IncrementalStatistics</scope><name>IncrementalStatistics</name></member>
      <member refid="class_quant_lib_1_1_incremental_statistics_1ab633dcfb3d254ff018f8c8ea83070ee3" prot="public" virt="non-virtual"><scope>QuantLib::IncrementalStatistics</scope><name>kurtosis</name></member>
      <member refid="class_quant_lib_1_1_incremental_statistics_1a1e4c6a79e21593b53ab0e3327a8a6d49" prot="public" virt="non-virtual"><scope>QuantLib::IncrementalStatistics</scope><name>max</name></member>
      <member refid="class_quant_lib_1_1_incremental_statistics_1a501bc100d093201da0dc14ccab6b5f7b" prot="public" virt="non-virtual"><scope>QuantLib::IncrementalStatistics</scope><name>mean</name></member>
      <member refid="class_quant_lib_1_1_incremental_statistics_1a551abdd92fb01f750e0b667381ca4f0c" prot="public" virt="non-virtual"><scope>QuantLib::IncrementalStatistics</scope><name>min</name></member>
      <member refid="class_quant_lib_1_1_incremental_statistics_1a613e523827a45d2d29b8767ea5c93256" prot="public" virt="non-virtual"><scope>QuantLib::IncrementalStatistics</scope><name>reset</name></member>
      <member refid="class_quant_lib_1_1_incremental_statistics_1aa082df5540c687850fe8136dba569c8b" prot="public" virt="non-virtual"><scope>QuantLib::IncrementalStatistics</scope><name>samples</name></member>
      <member refid="class_quant_lib_1_1_incremental_statistics_1ae89779b393695c418032de14bf475f2f" prot="public" virt="non-virtual"><scope>QuantLib::IncrementalStatistics</scope><name>skewness</name></member>
      <member refid="class_quant_lib_1_1_incremental_statistics_1a04ad44cc6bb84939f0d1be92506cede2" prot="public" virt="non-virtual"><scope>QuantLib::IncrementalStatistics</scope><name>standardDeviation</name></member>
      <member refid="class_quant_lib_1_1_incremental_statistics_1a92f49cc035d055318bf72fd174b8705c" prot="public" virt="non-virtual"><scope>QuantLib::IncrementalStatistics</scope><name>value_type</name></member>
      <member refid="class_quant_lib_1_1_incremental_statistics_1a258d432db38c9c76f92458f1e88442d1" prot="public" virt="non-virtual"><scope>QuantLib::IncrementalStatistics</scope><name>variance</name></member>
      <member refid="class_quant_lib_1_1_incremental_statistics_1a3abe86e6b4b786e92a99a23e918ecd02" prot="public" virt="non-virtual"><scope>QuantLib::IncrementalStatistics</scope><name>weightSum</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

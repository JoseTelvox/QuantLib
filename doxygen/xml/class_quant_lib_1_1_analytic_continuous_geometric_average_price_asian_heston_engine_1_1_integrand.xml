<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1_1_integrand" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::Integrand</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1_1_integrand_1add247a54f39d5c5cee4faf8d34b69573" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::Integrand::t_</definition>
        <argsstring></argsstring>
        <name>t_</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::Integrand::t_</qualifiedname>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.cpp" line="27" column="14" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.cpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1_1_integrand_1a2e8b18e211eaa3c9719cde77e3f128ac" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::Integrand::T_</definition>
        <argsstring></argsstring>
        <name>T_</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::Integrand::T_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.cpp" line="27" column="18" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.cpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1_1_integrand_1a00f6dba525547545834352893a81d852" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::Integrand::K_</definition>
        <argsstring></argsstring>
        <name>K_</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::Integrand::K_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.cpp" line="27" column="21" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.cpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1_1_integrand_1a19a0b3c64f3cc396e6d7c948028e2bb8" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::Integrand::logK_</definition>
        <argsstring></argsstring>
        <name>logK_</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::Integrand::logK_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.cpp" line="27" column="24" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.cpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1_1_integrand_1a6d3211f790bb0014923f1a2d19c9ea1c" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::Integrand::cutoff_</definition>
        <argsstring></argsstring>
        <name>cutoff_</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::Integrand::cutoff_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.cpp" line="28" column="14" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.cpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1_1_integrand_1ad23a0bef585e393ca5789a0ec6d83de6" prot="private" static="no" mutable="no">
        <type>const <ref refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine" kindref="compound">AnalyticContinuousGeometricAveragePriceAsianHestonEngine</ref> *const</type>
        <definition>const AnalyticContinuousGeometricAveragePriceAsianHestonEngine* const QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::Integrand::parent_</definition>
        <argsstring></argsstring>
        <name>parent_</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::Integrand::parent_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.cpp" line="29" column="78" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.cpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1_1_integrand_1a378f7031a741300c806674ae34e34f26" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::Integrand::xiRightLimit_</definition>
        <argsstring></argsstring>
        <name>xiRightLimit_</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::Integrand::xiRightLimit_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.cpp" line="30" column="14" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.cpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1_1_integrand_1a4f87aee9795c35acf80c38473caca6ff" prot="private" static="no" mutable="no">
        <type>std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::complex&lt;Real&gt; QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::Integrand::i_</definition>
        <argsstring></argsstring>
        <name>i_</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::Integrand::i_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.cpp" line="31" column="22" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.cpp" bodystart="31" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1_1_integrand_1adeeaad0188b78aadd9ba44ffff369c3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::Integrand::Integrand</definition>
        <argsstring>(Real T, Size cutoff, Real K, const AnalyticContinuousGeometricAveragePriceAsianHestonEngine *const parent, Real xiRightLimit)</argsstring>
        <name>Integrand</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::Integrand::Integrand</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>T</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>cutoff</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>K</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine" kindref="compound">AnalyticContinuousGeometricAveragePriceAsianHestonEngine</ref> *const</type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>xiRightLimit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.cpp" line="34" column="9" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.cpp" bodystart="34" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1_1_integrand_1a113d3f7e0e1b163f3acc43d68fc737e9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::Integrand::operator()</definition>
        <argsstring>(Real xi) const</argsstring>
        <name>operator()</name>
        <qualifiedname>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::Integrand::operator()</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>xi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.cpp" line="42" column="14" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.cpp" bodystart="42" bodyend="49"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/experimental/asian/analytic_cont_geom_av_price_heston.cpp" line="25" column="5" bodyfile="ql/experimental/asian/analytic_cont_geom_av_price_heston.cpp" bodystart="25" bodyend="50"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1_1_integrand_1a6d3211f790bb0014923f1a2d19c9ea1c" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::Integrand</scope><name>cutoff_</name></member>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1_1_integrand_1a4f87aee9795c35acf80c38473caca6ff" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::Integrand</scope><name>i_</name></member>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1_1_integrand_1adeeaad0188b78aadd9ba44ffff369c3f" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::Integrand</scope><name>Integrand</name></member>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1_1_integrand_1a00f6dba525547545834352893a81d852" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::Integrand</scope><name>K_</name></member>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1_1_integrand_1a19a0b3c64f3cc396e6d7c948028e2bb8" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::Integrand</scope><name>logK_</name></member>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1_1_integrand_1a113d3f7e0e1b163f3acc43d68fc737e9" prot="public" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::Integrand</scope><name>operator()</name></member>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1_1_integrand_1ad23a0bef585e393ca5789a0ec6d83de6" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::Integrand</scope><name>parent_</name></member>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1_1_integrand_1a2e8b18e211eaa3c9719cde77e3f128ac" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::Integrand</scope><name>T_</name></member>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1_1_integrand_1add247a54f39d5c5cee4faf8d34b69573" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::Integrand</scope><name>t_</name></member>
      <member refid="class_quant_lib_1_1_analytic_continuous_geometric_average_price_asian_heston_engine_1_1_integrand_1a378f7031a741300c806674ae34e34f26" prot="private" virt="non-virtual"><scope>QuantLib::AnalyticContinuousGeometricAveragePriceAsianHestonEngine::Integrand</scope><name>xiRightLimit_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_knuth_uniform_rng" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::KnuthUniformRng</compoundname>
    <includes refid="knuthuniformrng_8hpp" local="no">knuthuniformrng.hpp</includes>
    <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_quant_lib_1_1_knuth_uniform_rng_1a6723c7045d129e9f968c90bde915b006" prot="public" static="no">
        <type><ref refid="struct_quant_lib_1_1_sample" kindref="compound">Sample</ref>&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>typedef Sample&lt;Real&gt; QuantLib::KnuthUniformRng::sample_type</definition>
        <argsstring></argsstring>
        <name>sample_type</name>
        <qualifiedname>QuantLib::KnuthUniformRng::sample_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/knuthuniformrng.hpp" line="46" column="24" bodyfile="ql/math/randomnumbers/knuthuniformrng.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_knuth_uniform_rng_1aa88d4ea47c84d61270f540b0d6377e3c" prot="private" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int QuantLib::KnuthUniformRng::KK</definition>
        <argsstring></argsstring>
        <name>KK</name>
        <qualifiedname>QuantLib::KnuthUniformRng::KK</qualifiedname>
        <initializer>= 100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/knuthuniformrng.hpp" line="54" column="26" bodyfile="ql/math/randomnumbers/knuthuniformrng.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_knuth_uniform_rng_1a8904ffb48a4531b981c26d3b25e6bebb" prot="private" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int QuantLib::KnuthUniformRng::LL</definition>
        <argsstring></argsstring>
        <name>LL</name>
        <qualifiedname>QuantLib::KnuthUniformRng::LL</qualifiedname>
        <initializer>= 37</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/knuthuniformrng.hpp" line="54" column="29" bodyfile="ql/math/randomnumbers/knuthuniformrng.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_knuth_uniform_rng_1a7ffe8f4b6310c85105310a263d5f525c" prot="private" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int QuantLib::KnuthUniformRng::TT</definition>
        <argsstring></argsstring>
        <name>TT</name>
        <qualifiedname>QuantLib::KnuthUniformRng::TT</qualifiedname>
        <initializer>= 70</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/knuthuniformrng.hpp" line="54" column="32" bodyfile="ql/math/randomnumbers/knuthuniformrng.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_knuth_uniform_rng_1a4e3265643dd4e59f055cde4aa1d17bdf" prot="private" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int QuantLib::KnuthUniformRng::QUALITY</definition>
        <argsstring></argsstring>
        <name>QUALITY</name>
        <qualifiedname>QuantLib::KnuthUniformRng::QUALITY</qualifiedname>
        <initializer>= 1009</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/knuthuniformrng.hpp" line="54" column="35" bodyfile="ql/math/randomnumbers/knuthuniformrng.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_knuth_uniform_rng_1ab22b57f894bb82dfadb00040b13097b7" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; QuantLib::KnuthUniformRng::ranf_arr_buf</definition>
        <argsstring></argsstring>
        <name>ranf_arr_buf</name>
        <qualifiedname>QuantLib::KnuthUniformRng::ranf_arr_buf</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/knuthuniformrng.hpp" line="55" column="29" bodyfile="ql/math/randomnumbers/knuthuniformrng.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_knuth_uniform_rng_1a7b4f3686ae06aca65c78ec8b2dbed3f7" prot="private" static="no" mutable="yes">
        <type>size_t</type>
        <definition>size_t QuantLib::KnuthUniformRng::ranf_arr_ptr</definition>
        <argsstring></argsstring>
        <name>ranf_arr_ptr</name>
        <qualifiedname>QuantLib::KnuthUniformRng::ranf_arr_ptr</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/knuthuniformrng.hpp" line="56" column="24" bodyfile="ql/math/randomnumbers/knuthuniformrng.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_knuth_uniform_rng_1a4110c06a91f87fb3294a1f2adca73019" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t QuantLib::KnuthUniformRng::ranf_arr_sentinel</definition>
        <argsstring></argsstring>
        <name>ranf_arr_sentinel</name>
        <qualifiedname>QuantLib::KnuthUniformRng::ranf_arr_sentinel</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/knuthuniformrng.hpp" line="56" column="37" bodyfile="ql/math/randomnumbers/knuthuniformrng.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_knuth_uniform_rng_1af6efbe48f3abb89619ecdea8fb40472f" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; QuantLib::KnuthUniformRng::ran_u</definition>
        <argsstring></argsstring>
        <name>ran_u</name>
        <qualifiedname>QuantLib::KnuthUniformRng::ran_u</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/knuthuniformrng.hpp" line="57" column="29" bodyfile="ql/math/randomnumbers/knuthuniformrng.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_knuth_uniform_rng_1a33a00f1207a27f80e5e5d61496d2d016" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::KnuthUniformRng::KnuthUniformRng</definition>
        <argsstring>(long seed=0)</argsstring>
        <name>KnuthUniformRng</name>
        <qualifiedname>QuantLib::KnuthUniformRng::KnuthUniformRng</qualifiedname>
        <param>
          <type>long</type>
          <declname>seed</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>if the given seed is 0, a random seed will be chosen based on clock() </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/knuthuniformrng.hpp" line="49" column="18" bodyfile="ql/math/randomnumbers/knuthuniformrng.cpp" bodystart="30" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_knuth_uniform_rng_1a412c18dc412eb37234b45291be7e9d05" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_quant_lib_1_1_sample" kindref="compound">sample_type</ref></type>
        <definition>KnuthUniformRng::sample_type QuantLib::KnuthUniformRng::next</definition>
        <argsstring>() const</argsstring>
        <name>next</name>
        <qualifiedname>QuantLib::KnuthUniformRng::next</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns a sample with weight 1.0 containing a random number uniformly chosen from (0.0,1.0) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/knuthuniformrng.hpp" line="52" column="21" bodyfile="ql/math/randomnumbers/knuthuniformrng.hpp" bodystart="68" bodyend="73"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_knuth_uniform_rng_1a7a3fd21a25acb6e591e0a84c54cb252a" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double QuantLib::KnuthUniformRng::mod_sum</definition>
        <argsstring>(double x, double y) const</argsstring>
        <name>mod_sum</name>
        <qualifiedname>QuantLib::KnuthUniformRng::mod_sum</qualifiedname>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/knuthuniformrng.hpp" line="58" column="16" bodyfile="ql/math/randomnumbers/knuthuniformrng.hpp" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_knuth_uniform_rng_1ad1d8aadb44d0c73d1d8b16dc975f5fc2" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::KnuthUniformRng::is_odd</definition>
        <argsstring>(int s) const</argsstring>
        <name>is_odd</name>
        <qualifiedname>QuantLib::KnuthUniformRng::is_odd</qualifiedname>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/knuthuniformrng.hpp" line="59" column="14" bodyfile="ql/math/randomnumbers/knuthuniformrng.hpp" bodystart="79" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_knuth_uniform_rng_1afc8b1fdc74645f93f9000f5b5c78e957" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::KnuthUniformRng::ranf_start</definition>
        <argsstring>(long seed)</argsstring>
        <name>ranf_start</name>
        <qualifiedname>QuantLib::KnuthUniformRng::ranf_start</qualifiedname>
        <param>
          <type>long</type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/knuthuniformrng.hpp" line="60" column="14" bodyfile="ql/math/randomnumbers/knuthuniformrng.cpp" bodystart="36" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_knuth_uniform_rng_1a0af26cc081acf912c90877a6d28c28cf" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::KnuthUniformRng::ranf_array</definition>
        <argsstring>(std::vector&lt; double &gt; &amp;aa, int n) const</argsstring>
        <name>ranf_array</name>
        <qualifiedname>QuantLib::KnuthUniformRng::ranf_array</qualifiedname>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <declname>aa</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/knuthuniformrng.hpp" line="61" column="14" bodyfile="ql/math/randomnumbers/knuthuniformrng.cpp" bodystart="75" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_knuth_uniform_rng_1a6ea41f4965117507eac97a109b52a6e3" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double QuantLib::KnuthUniformRng::ranf_arr_cycle</definition>
        <argsstring>() const</argsstring>
        <name>ranf_arr_cycle</name>
        <qualifiedname>QuantLib::KnuthUniformRng::ranf_arr_cycle</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/randomnumbers/knuthuniformrng.hpp" line="62" column="16" bodyfile="ql/math/randomnumbers/knuthuniformrng.cpp" bodystart="84" bodyend="89"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Uniform random number generator. </para>
    </briefdescription>
    <detaileddescription>
<para>Random number generator by Knuth. For more details see Knuth, Seminumerical Algorithms, 3rd edition, Section 3.6. <simplesect kind="note"><para>This is <bold>not</bold> Knuth&apos;s original implementation which is available at <ulink url="http://www-cs-faculty.stanford.edu/~knuth/programs.html">http://www-cs-faculty.stanford.edu/~knuth/programs.html</ulink>, but rather a slightly modified version wrapped in a C++ class. Such modifications did not affect the code but only the data structures used, which were converted to their standard C++ equivalents. </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="ql/math/randomnumbers/knuthuniformrng.hpp" line="44" column="5" bodyfile="ql/math/randomnumbers/knuthuniformrng.hpp" bodystart="44" bodyend="63"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_knuth_uniform_rng_1ad1d8aadb44d0c73d1d8b16dc975f5fc2" prot="private" virt="non-virtual"><scope>QuantLib::KnuthUniformRng</scope><name>is_odd</name></member>
      <member refid="class_quant_lib_1_1_knuth_uniform_rng_1aa88d4ea47c84d61270f540b0d6377e3c" prot="private" virt="non-virtual"><scope>QuantLib::KnuthUniformRng</scope><name>KK</name></member>
      <member refid="class_quant_lib_1_1_knuth_uniform_rng_1a33a00f1207a27f80e5e5d61496d2d016" prot="public" virt="non-virtual"><scope>QuantLib::KnuthUniformRng</scope><name>KnuthUniformRng</name></member>
      <member refid="class_quant_lib_1_1_knuth_uniform_rng_1a8904ffb48a4531b981c26d3b25e6bebb" prot="private" virt="non-virtual"><scope>QuantLib::KnuthUniformRng</scope><name>LL</name></member>
      <member refid="class_quant_lib_1_1_knuth_uniform_rng_1a7a3fd21a25acb6e591e0a84c54cb252a" prot="private" virt="non-virtual"><scope>QuantLib::KnuthUniformRng</scope><name>mod_sum</name></member>
      <member refid="class_quant_lib_1_1_knuth_uniform_rng_1a412c18dc412eb37234b45291be7e9d05" prot="public" virt="non-virtual"><scope>QuantLib::KnuthUniformRng</scope><name>next</name></member>
      <member refid="class_quant_lib_1_1_knuth_uniform_rng_1a4e3265643dd4e59f055cde4aa1d17bdf" prot="private" virt="non-virtual"><scope>QuantLib::KnuthUniformRng</scope><name>QUALITY</name></member>
      <member refid="class_quant_lib_1_1_knuth_uniform_rng_1af6efbe48f3abb89619ecdea8fb40472f" prot="private" virt="non-virtual"><scope>QuantLib::KnuthUniformRng</scope><name>ran_u</name></member>
      <member refid="class_quant_lib_1_1_knuth_uniform_rng_1ab22b57f894bb82dfadb00040b13097b7" prot="private" virt="non-virtual"><scope>QuantLib::KnuthUniformRng</scope><name>ranf_arr_buf</name></member>
      <member refid="class_quant_lib_1_1_knuth_uniform_rng_1a6ea41f4965117507eac97a109b52a6e3" prot="private" virt="non-virtual"><scope>QuantLib::KnuthUniformRng</scope><name>ranf_arr_cycle</name></member>
      <member refid="class_quant_lib_1_1_knuth_uniform_rng_1a7b4f3686ae06aca65c78ec8b2dbed3f7" prot="private" virt="non-virtual"><scope>QuantLib::KnuthUniformRng</scope><name>ranf_arr_ptr</name></member>
      <member refid="class_quant_lib_1_1_knuth_uniform_rng_1a4110c06a91f87fb3294a1f2adca73019" prot="private" virt="non-virtual"><scope>QuantLib::KnuthUniformRng</scope><name>ranf_arr_sentinel</name></member>
      <member refid="class_quant_lib_1_1_knuth_uniform_rng_1a0af26cc081acf912c90877a6d28c28cf" prot="private" virt="non-virtual"><scope>QuantLib::KnuthUniformRng</scope><name>ranf_array</name></member>
      <member refid="class_quant_lib_1_1_knuth_uniform_rng_1afc8b1fdc74645f93f9000f5b5c78e957" prot="private" virt="non-virtual"><scope>QuantLib::KnuthUniformRng</scope><name>ranf_start</name></member>
      <member refid="class_quant_lib_1_1_knuth_uniform_rng_1a6723c7045d129e9f968c90bde915b006" prot="public" virt="non-virtual"><scope>QuantLib::KnuthUniformRng</scope><name>sample_type</name></member>
      <member refid="class_quant_lib_1_1_knuth_uniform_rng_1a7ffe8f4b6310c85105310a263d5f525c" prot="private" virt="non-virtual"><scope>QuantLib::KnuthUniformRng</scope><name>TT</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_m_c_vanilla_engine" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::MCVanillaEngine</compoundname>
    <basecompoundref prot="public" virt="non-virtual">VanillaOption::engine</basecompoundref>
    <basecompoundref refid="class_quant_lib_1_1_mc_simulation" prot="public" virt="non-virtual">QuantLib::McSimulation&lt; MC, RNG, Statistics &gt;</basecompoundref>
    <includes refid="mcvanillaengine_8hpp" local="no">mcvanillaengine.hpp</includes>
    <templateparamlist>
      <param>
        <type>template&lt; class &gt; class</type>
        <declname>MC</declname>
        <defname>MC</defname>
      </param>
      <param>
        <type>class RNG</type>
      </param>
      <param>
        <type>class S</type>
        <defval><ref refid="namespace_quant_lib_1ae2e788da35d2b866040a03b96227ee6e" kindref="member">Statistics</ref></defval>
      </param>
      <param>
        <type>class Inst</type>
        <defval><ref refid="class_quant_lib_1_1_vanilla_option" kindref="compound">VanillaOption</ref></defval>
      </param>
    </templateparamlist>
    <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="class_quant_lib_1_1_m_c_vanilla_engine_1a4828a21a4433d3e79e8c85155a1e9a44" prot="protected" static="no">
        <type><ref refid="class_quant_lib_1_1_mc_simulation" kindref="compound">McSimulation</ref>&lt; MC, RNG, S &gt;::path_generator_type</type>
        <definition>typedef McSimulation&lt;MC,RNG,S&gt;::path_generator_type QuantLib::MCVanillaEngine&lt; MC, RNG, S, Inst &gt;::path_generator_type</definition>
        <argsstring></argsstring>
        <name>path_generator_type</name>
        <qualifiedname>QuantLib::MCVanillaEngine::path_generator_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcvanillaengine.hpp" line="52" column="13" bodyfile="ql/pricingengines/vanilla/mcvanillaengine.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_quant_lib_1_1_m_c_vanilla_engine_1ac410441bd1273ebdb7d106b29a53edef" prot="protected" static="no">
        <type><ref refid="class_quant_lib_1_1_mc_simulation" kindref="compound">McSimulation</ref>&lt; MC, RNG, S &gt;::path_pricer_type</type>
        <definition>typedef McSimulation&lt;MC,RNG,S&gt;::path_pricer_type QuantLib::MCVanillaEngine&lt; MC, RNG, S, Inst &gt;::path_pricer_type</definition>
        <argsstring></argsstring>
        <name>path_pricer_type</name>
        <qualifiedname>QuantLib::MCVanillaEngine::path_pricer_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcvanillaengine.hpp" line="54" column="13" bodyfile="ql/pricingengines/vanilla/mcvanillaengine.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_quant_lib_1_1_m_c_vanilla_engine_1a7ef339c7e51c0fd49d672004cc62e61f" prot="protected" static="no">
        <type><ref refid="class_quant_lib_1_1_mc_simulation" kindref="compound">McSimulation</ref>&lt; MC, RNG, S &gt;::stats_type</type>
        <definition>typedef McSimulation&lt;MC,RNG,S&gt;::stats_type QuantLib::MCVanillaEngine&lt; MC, RNG, S, Inst &gt;::stats_type</definition>
        <argsstring></argsstring>
        <name>stats_type</name>
        <qualifiedname>QuantLib::MCVanillaEngine::stats_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcvanillaengine.hpp" line="56" column="13" bodyfile="ql/pricingengines/vanilla/mcvanillaengine.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_quant_lib_1_1_m_c_vanilla_engine_1ae8467aceaa70b1a7bb31b1985e7bedc0" prot="protected" static="no">
        <type><ref refid="class_quant_lib_1_1_mc_simulation" kindref="compound">McSimulation</ref>&lt; MC, RNG, S &gt;::result_type</type>
        <definition>typedef McSimulation&lt;MC,RNG,S&gt;::result_type QuantLib::MCVanillaEngine&lt; MC, RNG, S, Inst &gt;::result_type</definition>
        <argsstring></argsstring>
        <name>result_type</name>
        <qualifiedname>QuantLib::MCVanillaEngine::result_type</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcvanillaengine.hpp" line="58" column="13" bodyfile="ql/pricingengines/vanilla/mcvanillaengine.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_m_c_vanilla_engine_1a48e45e6119f7fe81565ccd27a90e69bc" prot="protected" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_stochastic_process" kindref="compound">StochasticProcess</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;StochasticProcess&gt; QuantLib::MCVanillaEngine&lt; MC, RNG, S, Inst &gt;::process_</definition>
        <argsstring></argsstring>
        <name>process_</name>
        <qualifiedname>QuantLib::MCVanillaEngine::process_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcvanillaengine.hpp" line="84" column="25" bodyfile="ql/pricingengines/vanilla/mcvanillaengine.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_m_c_vanilla_engine_1af1c36d911974082085bf4017ee24a8c0" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MCVanillaEngine&lt; MC, RNG, S, Inst &gt;::timeSteps_</definition>
        <argsstring></argsstring>
        <name>timeSteps_</name>
        <qualifiedname>QuantLib::MCVanillaEngine::timeSteps_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcvanillaengine.hpp" line="85" column="14" bodyfile="ql/pricingengines/vanilla/mcvanillaengine.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_m_c_vanilla_engine_1a8f49dec4cdb7429744822425438dcdc6" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MCVanillaEngine&lt; MC, RNG, S, Inst &gt;::timeStepsPerYear_</definition>
        <argsstring></argsstring>
        <name>timeStepsPerYear_</name>
        <qualifiedname>QuantLib::MCVanillaEngine::timeStepsPerYear_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcvanillaengine.hpp" line="85" column="25" bodyfile="ql/pricingengines/vanilla/mcvanillaengine.hpp" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_m_c_vanilla_engine_1a2fc6d9a617935d2802aee2a51af90d5d" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MCVanillaEngine&lt; MC, RNG, S, Inst &gt;::requiredSamples_</definition>
        <argsstring></argsstring>
        <name>requiredSamples_</name>
        <qualifiedname>QuantLib::MCVanillaEngine::requiredSamples_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcvanillaengine.hpp" line="86" column="14" bodyfile="ql/pricingengines/vanilla/mcvanillaengine.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_m_c_vanilla_engine_1a32b1d358361dec1b85c6a4085da5c73b" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::MCVanillaEngine&lt; MC, RNG, S, Inst &gt;::maxSamples_</definition>
        <argsstring></argsstring>
        <name>maxSamples_</name>
        <qualifiedname>QuantLib::MCVanillaEngine::maxSamples_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcvanillaengine.hpp" line="86" column="31" bodyfile="ql/pricingengines/vanilla/mcvanillaengine.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_m_c_vanilla_engine_1a94996af57128d0ae8b0ff8cc90e09a68" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::MCVanillaEngine&lt; MC, RNG, S, Inst &gt;::requiredTolerance_</definition>
        <argsstring></argsstring>
        <name>requiredTolerance_</name>
        <qualifiedname>QuantLib::MCVanillaEngine::requiredTolerance_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcvanillaengine.hpp" line="87" column="14" bodyfile="ql/pricingengines/vanilla/mcvanillaengine.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_m_c_vanilla_engine_1aa83929498aa10e44950b6ca09284cbe0" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::MCVanillaEngine&lt; MC, RNG, S, Inst &gt;::brownianBridge_</definition>
        <argsstring></argsstring>
        <name>brownianBridge_</name>
        <qualifiedname>QuantLib::MCVanillaEngine::brownianBridge_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcvanillaengine.hpp" line="88" column="14" bodyfile="ql/pricingengines/vanilla/mcvanillaengine.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_m_c_vanilla_engine_1a9e2a9433f99d100189f4a364536e7f81" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
        <definition>BigNatural QuantLib::MCVanillaEngine&lt; MC, RNG, S, Inst &gt;::seed_</definition>
        <argsstring></argsstring>
        <name>seed_</name>
        <qualifiedname>QuantLib::MCVanillaEngine::seed_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcvanillaengine.hpp" line="89" column="20" bodyfile="ql/pricingengines/vanilla/mcvanillaengine.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_m_c_vanilla_engine_1a7082c558a7a337ea5a3365430b740db4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::MCVanillaEngine&lt; MC, RNG, S, Inst &gt;::calculate</definition>
        <argsstring>() const override</argsstring>
        <name>calculate</name>
        <qualifiedname>QuantLib::MCVanillaEngine::calculate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcvanillaengine.hpp" line="40" column="14" bodyfile="ql/pricingengines/vanilla/mcvanillaengine.hpp" bodystart="40" bodyend="48"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_m_c_vanilla_engine_1a0da73f7e7964a61da3adc30fd168f2db" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::MCVanillaEngine&lt; MC, RNG, S, Inst &gt;::MCVanillaEngine</definition>
        <argsstring>(ext::shared_ptr&lt; StochasticProcess &gt;, Size timeSteps, Size timeStepsPerYear, bool brownianBridge, bool antitheticVariate, bool controlVariate, Size requiredSamples, Real requiredTolerance, Size maxSamples, BigNatural seed)</argsstring>
        <name>MCVanillaEngine</name>
        <qualifiedname>QuantLib::MCVanillaEngine::MCVanillaEngine</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_stochastic_process" kindref="compound">StochasticProcess</ref> &gt;</type>
          <defname>process</defname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>timeSteps</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>timeStepsPerYear</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>brownianBridge</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>antitheticVariate</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>controlVariate</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>requiredSamples</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>requiredTolerance</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>maxSamples</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a9fbc8c414c2b597d214cca2f9e914740" kindref="member">BigNatural</ref></type>
          <declname>seed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcvanillaengine.hpp" line="60" column="9" bodyfile="ql/pricingengines/vanilla/mcvanillaengine.hpp" bodystart="96" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_m_c_vanilla_engine_1a9860e354e46988f9fca156a8177ecf62" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_time_grid" kindref="compound">TimeGrid</ref></type>
        <definition>TimeGrid QuantLib::MCVanillaEngine&lt; MC, RNG, S, Inst &gt;::timeGrid</definition>
        <argsstring>() const override</argsstring>
        <name>timeGrid</name>
        <qualifiedname>QuantLib::MCVanillaEngine::timeGrid</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_mc_simulation_1a5b5c524a5e54a4f91ce6a6d6537e7ee3">timeGrid</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcvanillaengine.hpp" line="71" column="18" bodyfile="ql/pricingengines/vanilla/mcvanillaengine.hpp" bodystart="153" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_m_c_vanilla_engine_1af619e062350d6b7f5f8b5e09e435c0ff" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_multi_path_generator" kindref="compound">path_generator_type</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; path_generator_type &gt; QuantLib::MCVanillaEngine&lt; MC, RNG, S, Inst &gt;::pathGenerator</definition>
        <argsstring>() const override</argsstring>
        <name>pathGenerator</name>
        <qualifiedname>QuantLib::MCVanillaEngine::pathGenerator</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_mc_simulation_1a9618deed5bf4bdba261c1d68bebc3a6f">pathGenerator</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcvanillaengine.hpp" line="72" column="25" bodyfile="ql/pricingengines/vanilla/mcvanillaengine.hpp" bodystart="72" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_m_c_vanilla_engine_1ac1df3f9481ce47a70dfb4bef1eb393ea" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>result_type</type>
        <definition>MCVanillaEngine&lt; MC, RNG, S, Inst &gt;::result_type QuantLib::MCVanillaEngine&lt; MC, RNG, S, Inst &gt;::controlVariateValue</definition>
        <argsstring>() const override</argsstring>
        <name>controlVariateValue</name>
        <qualifiedname>QuantLib::MCVanillaEngine::controlVariateValue</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_mc_simulation_1a503ac4db5fa01aa75596c6b42d9d5832">controlVariateValue</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/pricingengines/vanilla/mcvanillaengine.hpp" line="82" column="21" bodyfile="ql/pricingengines/vanilla/mcvanillaengine.hpp" bodystart="128" bodyend="149"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Pricing engine for vanilla options using Monte Carlo simulation. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::MCVanillaEngine&lt; MC, RNG, S, Inst &gt;</label>
        <link refid="class_quant_lib_1_1_m_c_vanilla_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::McSimulation&lt; MC, RNG, Statistics &gt;</label>
        <link refid="class_quant_lib_1_1_mc_simulation"/>
      </node>
      <node id="2">
        <label>VanillaOption::engine</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::MCVanillaEngine&lt; MC, RNG, S, Inst &gt;</label>
        <link refid="class_quant_lib_1_1_m_c_vanilla_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::McSimulation&lt; MC, RNG, Statistics &gt;</label>
        <link refid="class_quant_lib_1_1_mc_simulation"/>
      </node>
      <node id="2">
        <label>VanillaOption::engine</label>
      </node>
    </collaborationgraph>
    <location file="ql/pricingengines/vanilla/mcvanillaengine.hpp" line="37" column="5" bodyfile="ql/pricingengines/vanilla/mcvanillaengine.hpp" bodystart="38" bodyend="90"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_mc_simulation_1a06f6de1952807cb9e689619d3f48450d" prot="protected" virt="non-virtual"><scope>QuantLib::MCVanillaEngine</scope><name>antitheticVariate_</name></member>
      <member refid="class_quant_lib_1_1_m_c_vanilla_engine_1aa83929498aa10e44950b6ca09284cbe0" prot="protected" virt="non-virtual"><scope>QuantLib::MCVanillaEngine</scope><name>brownianBridge_</name></member>
      <member refid="class_quant_lib_1_1_m_c_vanilla_engine_1a7082c558a7a337ea5a3365430b740db4" prot="public" virt="non-virtual"><scope>QuantLib::MCVanillaEngine</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1af5ccf2e30a050c14f9e30965855b4993" prot="public" virt="non-virtual" ambiguityscope="QuantLib::McSimulation&lt; MC, RNG, Statistics &gt;::"><scope>QuantLib::MCVanillaEngine</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a81f0b6c250bc8a1ba246faa3b7bbe70f" prot="protected" virt="virtual"><scope>QuantLib::MCVanillaEngine</scope><name>controlPathGenerator</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1ae3b7f6e12eaf228b5c65f70a721eb729" prot="protected" virt="virtual"><scope>QuantLib::MCVanillaEngine</scope><name>controlPathPricer</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1ad835a3988a983d55494f911f53b78408" prot="protected" virt="virtual"><scope>QuantLib::MCVanillaEngine</scope><name>controlPricingEngine</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a0c55429fb2a2d840cd8d358a5973cc40" prot="protected" virt="non-virtual"><scope>QuantLib::MCVanillaEngine</scope><name>controlVariate_</name></member>
      <member refid="class_quant_lib_1_1_m_c_vanilla_engine_1ac1df3f9481ce47a70dfb4bef1eb393ea" prot="protected" virt="virtual"><scope>QuantLib::MCVanillaEngine</scope><name>controlVariateValue</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1aa74e7e1891852e5c96da544b87af083c" prot="public" virt="non-virtual"><scope>QuantLib::MCVanillaEngine</scope><name>errorEstimate</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1ae21c92c6196d56c6a889389268ef2075" prot="protected" virt="non-virtual"><scope>QuantLib::MCVanillaEngine</scope><name>maxError</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a10d5e5d85cc108ab976899890055e061" prot="protected" virt="non-virtual"><scope>QuantLib::MCVanillaEngine</scope><name>maxError</name></member>
      <member refid="class_quant_lib_1_1_m_c_vanilla_engine_1a32b1d358361dec1b85c6a4085da5c73b" prot="protected" virt="non-virtual"><scope>QuantLib::MCVanillaEngine</scope><name>maxSamples_</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1afbdbf4a8ce56b1b6060c49ac91b1f55a" prot="protected" virt="non-virtual"><scope>QuantLib::MCVanillaEngine</scope><name>mcModel_</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a3242253b8262657e78739463a077c1d6" prot="protected" virt="non-virtual"><scope>QuantLib::MCVanillaEngine</scope><name>McSimulation</name></member>
      <member refid="class_quant_lib_1_1_m_c_vanilla_engine_1a0da73f7e7964a61da3adc30fd168f2db" prot="protected" virt="non-virtual"><scope>QuantLib::MCVanillaEngine</scope><name>MCVanillaEngine</name></member>
      <member refid="class_quant_lib_1_1_m_c_vanilla_engine_1a4828a21a4433d3e79e8c85155a1e9a44" prot="protected" virt="non-virtual"><scope>QuantLib::MCVanillaEngine</scope><name>path_generator_type</name></member>
      <member refid="class_quant_lib_1_1_m_c_vanilla_engine_1ac410441bd1273ebdb7d106b29a53edef" prot="protected" virt="non-virtual"><scope>QuantLib::MCVanillaEngine</scope><name>path_pricer_type</name></member>
      <member refid="class_quant_lib_1_1_m_c_vanilla_engine_1af619e062350d6b7f5f8b5e09e435c0ff" prot="protected" virt="virtual"><scope>QuantLib::MCVanillaEngine</scope><name>pathGenerator</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a0e142b20adbf77779877d3603f9fa9b5" prot="protected" virt="pure-virtual"><scope>QuantLib::MCVanillaEngine</scope><name>pathPricer</name></member>
      <member refid="class_quant_lib_1_1_m_c_vanilla_engine_1a48e45e6119f7fe81565ccd27a90e69bc" prot="protected" virt="non-virtual"><scope>QuantLib::MCVanillaEngine</scope><name>process_</name></member>
      <member refid="class_quant_lib_1_1_m_c_vanilla_engine_1a2fc6d9a617935d2802aee2a51af90d5d" prot="protected" virt="non-virtual"><scope>QuantLib::MCVanillaEngine</scope><name>requiredSamples_</name></member>
      <member refid="class_quant_lib_1_1_m_c_vanilla_engine_1a94996af57128d0ae8b0ff8cc90e09a68" prot="protected" virt="non-virtual"><scope>QuantLib::MCVanillaEngine</scope><name>requiredTolerance_</name></member>
      <member refid="class_quant_lib_1_1_m_c_vanilla_engine_1ae8467aceaa70b1a7bb31b1985e7bedc0" prot="protected" virt="non-virtual"><scope>QuantLib::MCVanillaEngine</scope><name>result_type</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1aada0200a7fb38c4bc94bbcb49464d35b" prot="public" virt="non-virtual"><scope>QuantLib::MCVanillaEngine</scope><name>sampleAccumulator</name></member>
      <member refid="class_quant_lib_1_1_m_c_vanilla_engine_1a9e2a9433f99d100189f4a364536e7f81" prot="protected" virt="non-virtual"><scope>QuantLib::MCVanillaEngine</scope><name>seed_</name></member>
      <member refid="class_quant_lib_1_1_m_c_vanilla_engine_1a7ef339c7e51c0fd49d672004cc62e61f" prot="protected" virt="non-virtual"><scope>QuantLib::MCVanillaEngine</scope><name>stats_type</name></member>
      <member refid="class_quant_lib_1_1_m_c_vanilla_engine_1a9860e354e46988f9fca156a8177ecf62" prot="protected" virt="virtual"><scope>QuantLib::MCVanillaEngine</scope><name>timeGrid</name></member>
      <member refid="class_quant_lib_1_1_m_c_vanilla_engine_1af1c36d911974082085bf4017ee24a8c0" prot="protected" virt="non-virtual"><scope>QuantLib::MCVanillaEngine</scope><name>timeSteps_</name></member>
      <member refid="class_quant_lib_1_1_m_c_vanilla_engine_1a8f49dec4cdb7429744822425438dcdc6" prot="protected" virt="non-virtual"><scope>QuantLib::MCVanillaEngine</scope><name>timeStepsPerYear_</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a1c903a9dd586755f55377b522d99ac16" prot="public" virt="non-virtual"><scope>QuantLib::MCVanillaEngine</scope><name>value</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a06e9db2fbd3d80e6358e8494f4b6b6ea" prot="public" virt="non-virtual"><scope>QuantLib::MCVanillaEngine</scope><name>valueWithSamples</name></member>
      <member refid="class_quant_lib_1_1_mc_simulation_1a11624b5e53889858d9189f85e27d653d" prot="public" virt="virtual"><scope>QuantLib::MCVanillaEngine</scope><name>~McSimulation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_l_m_m_normal_drift_calculator" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::LMMNormalDriftCalculator</compoundname>
    <includes refid="lmmnormaldriftcalculator_8hpp" local="no">lmmnormaldriftcalculator.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1a2074620e6a87acd8e6a28aabc10c5e9b" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::LMMNormalDriftCalculator::numberOfRates_</definition>
        <argsstring></argsstring>
        <name>numberOfRates_</name>
        <qualifiedname>QuantLib::LMMNormalDriftCalculator::numberOfRates_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp" line="70" column="14" bodyfile="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1a3029a7601f5cf72d92e3eceda7cab799" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::LMMNormalDriftCalculator::numberOfFactors_</definition>
        <argsstring></argsstring>
        <name>numberOfFactors_</name>
        <qualifiedname>QuantLib::LMMNormalDriftCalculator::numberOfFactors_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp" line="70" column="29" bodyfile="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1a931693f5aa7c7807c7086dd7346ce70b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::LMMNormalDriftCalculator::isFullFactor_</definition>
        <argsstring></argsstring>
        <name>isFullFactor_</name>
        <qualifiedname>QuantLib::LMMNormalDriftCalculator::isFullFactor_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp" line="71" column="14" bodyfile="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1a8e02b7348d553a6ae132f5b688dfc9cf" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::LMMNormalDriftCalculator::numeraire_</definition>
        <argsstring></argsstring>
        <name>numeraire_</name>
        <qualifiedname>QuantLib::LMMNormalDriftCalculator::numeraire_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp" line="72" column="14" bodyfile="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1a9fbd887014042ed91feeebc38b36d1f8" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::LMMNormalDriftCalculator::alive_</definition>
        <argsstring></argsstring>
        <name>alive_</name>
        <qualifiedname>QuantLib::LMMNormalDriftCalculator::alive_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp" line="72" column="25" bodyfile="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1a4182aead4eab5b1b33fa3498cc09af7c" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::LMMNormalDriftCalculator::oneOverTaus_</definition>
        <argsstring></argsstring>
        <name>oneOverTaus_</name>
        <qualifiedname>QuantLib::LMMNormalDriftCalculator::oneOverTaus_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp" line="73" column="21" bodyfile="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1ab70eda89e8ebb0c9de0bad46c1edf249" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::LMMNormalDriftCalculator::C_</definition>
        <argsstring></argsstring>
        <name>C_</name>
        <qualifiedname>QuantLib::LMMNormalDriftCalculator::C_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp" line="74" column="16" bodyfile="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1af737a8a06b013aed77ccaef2a5715c76" prot="private" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::LMMNormalDriftCalculator::pseudo_</definition>
        <argsstring></argsstring>
        <name>pseudo_</name>
        <qualifiedname>QuantLib::LMMNormalDriftCalculator::pseudo_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp" line="74" column="19" bodyfile="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1a86d6a7e6415ad4a3aeadc21ad89f89c3" prot="private" static="no" mutable="yes">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::LMMNormalDriftCalculator::tmp_</definition>
        <argsstring></argsstring>
        <name>tmp_</name>
        <qualifiedname>QuantLib::LMMNormalDriftCalculator::tmp_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp" line="76" column="29" bodyfile="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1a005ce94807fedbf485530349e88ff388" prot="private" static="no" mutable="yes">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::LMMNormalDriftCalculator::e_</definition>
        <argsstring></argsstring>
        <name>e_</name>
        <qualifiedname>QuantLib::LMMNormalDriftCalculator::e_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp" line="77" column="24" bodyfile="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1a7d085d79f0f35e1836ffd2f67c119840" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &gt;</type>
        <definition>std::vector&lt;Size&gt; QuantLib::LMMNormalDriftCalculator::downs_</definition>
        <argsstring></argsstring>
        <name>downs_</name>
        <qualifiedname>QuantLib::LMMNormalDriftCalculator::downs_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp" line="78" column="21" bodyfile="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1a3359e33995ebd250d1b3d21d6c6086b6" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref> &gt;</type>
        <definition>std::vector&lt;Size&gt; QuantLib::LMMNormalDriftCalculator::ups_</definition>
        <argsstring></argsstring>
        <name>ups_</name>
        <qualifiedname>QuantLib::LMMNormalDriftCalculator::ups_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp" line="78" column="28" bodyfile="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1a8d1f07e7678e791c4bd44fd26904fef8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::LMMNormalDriftCalculator::LMMNormalDriftCalculator</definition>
        <argsstring>(const Matrix &amp;pseudo, const std::vector&lt; Time &gt; &amp;taus, Size numeraire, Size alive)</argsstring>
        <name>LMMNormalDriftCalculator</name>
        <qualifiedname>QuantLib::LMMNormalDriftCalculator::LMMNormalDriftCalculator</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>pseudo</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt; &amp;</type>
          <declname>taus</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>numeraire</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>alive</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp" line="42" column="9" bodyfile="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.cpp" bodystart="25" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1a3c9371194a39e0b3d65d12c692f808a0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::LMMNormalDriftCalculator::compute</definition>
        <argsstring>(const LMMCurveState &amp;cs, std::vector&lt; Real &gt; &amp;drifts) const</argsstring>
        <name>compute</name>
        <qualifiedname>QuantLib::LMMNormalDriftCalculator::compute</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_l_m_m_curve_state" kindref="compound">LMMCurveState</ref> &amp;</type>
          <declname>cs</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>drifts</declname>
        </param>
        <briefdescription>
<para>Computes the drifts. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp" line="47" column="14" bodyfile="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.cpp" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1ab019ad5294f02e2a5d6c952f75c46f61" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::LMMNormalDriftCalculator::compute</definition>
        <argsstring>(const std::vector&lt; Rate &gt; &amp;fwds, std::vector&lt; Real &gt; &amp;drifts) const</argsstring>
        <name>compute</name>
        <qualifiedname>QuantLib::LMMNormalDriftCalculator::compute</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
          <declname>fwds</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>drifts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp" line="49" column="14" bodyfile="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.cpp" bodystart="64" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1a3a016bc5a895d1accda71e5054b1779c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::LMMNormalDriftCalculator::computePlain</definition>
        <argsstring>(const LMMCurveState &amp;cs, std::vector&lt; Real &gt; &amp;drifts) const</argsstring>
        <name>computePlain</name>
        <qualifiedname>QuantLib::LMMNormalDriftCalculator::computePlain</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_l_m_m_curve_state" kindref="compound">LMMCurveState</ref> &amp;</type>
          <declname>cs</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>drifts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computes the drifts without factor reduction as in eqs. 2, 4 of ref. [1], modified for normal forward rates dynamic (uses the covariance matrix directly). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp" line="55" column="14" bodyfile="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.cpp" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1a38817c92a656119aa4750e87da119785" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::LMMNormalDriftCalculator::computePlain</definition>
        <argsstring>(const std::vector&lt; Rate &gt; &amp;fwds, std::vector&lt; Real &gt; &amp;drifts) const</argsstring>
        <name>computePlain</name>
        <qualifiedname>QuantLib::LMMNormalDriftCalculator::computePlain</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
          <declname>fwds</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>drifts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp" line="57" column="14" bodyfile="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.cpp" bodystart="82" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1a71eb6591b1b9ebf0e00d41f92b33697f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::LMMNormalDriftCalculator::computeReduced</definition>
        <argsstring>(const LMMCurveState &amp;cs, std::vector&lt; Real &gt; &amp;drifts) const</argsstring>
        <name>computeReduced</name>
        <qualifiedname>QuantLib::LMMNormalDriftCalculator::computeReduced</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_l_m_m_curve_state" kindref="compound">LMMCurveState</ref> &amp;</type>
          <declname>cs</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>drifts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computes the drifts with factor reduction as in eq. 7 of ref. [1], modified for normal forward rates dynamic (uses pseudo square root of the covariance matrix). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp" line="63" column="14" bodyfile="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.cpp" bodystart="103" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1ad584c9eca66deda39baddcb845b6ccb5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::LMMNormalDriftCalculator::computeReduced</definition>
        <argsstring>(const std::vector&lt; Rate &gt; &amp;fwds, std::vector&lt; Real &gt; &amp;drifts) const</argsstring>
        <name>computeReduced</name>
        <qualifiedname>QuantLib::LMMNormalDriftCalculator::computeReduced</qualifiedname>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
          <declname>fwds</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt; &amp;</type>
          <declname>drifts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp" line="65" column="14" bodyfile="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.cpp" bodystart="108" bodyend="156"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Drift computation for normal Libor market models. </para>
    </briefdescription>
    <detaileddescription>
<para>Returns the drift <formula id="387">$ \mu \Delta t $</formula>. See Mark Joshi, <emphasis>Rapid Computation of Drifts in a Reduced Factor <ref refid="class_quant_lib_1_1_libor" kindref="compound">Libor</ref> Market Model</emphasis>, Wilmott Magazine, May 2003. </para>
    </detaileddescription>
    <location file="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp" line="40" column="5" bodyfile="ql/models/marketmodels/driftcomputation/lmmnormaldriftcalculator.hpp" bodystart="40" bodyend="79"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1a9fbd887014042ed91feeebc38b36d1f8" prot="private" virt="non-virtual"><scope>QuantLib::LMMNormalDriftCalculator</scope><name>alive_</name></member>
      <member refid="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1ab70eda89e8ebb0c9de0bad46c1edf249" prot="private" virt="non-virtual"><scope>QuantLib::LMMNormalDriftCalculator</scope><name>C_</name></member>
      <member refid="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1a3c9371194a39e0b3d65d12c692f808a0" prot="public" virt="non-virtual"><scope>QuantLib::LMMNormalDriftCalculator</scope><name>compute</name></member>
      <member refid="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1ab019ad5294f02e2a5d6c952f75c46f61" prot="public" virt="non-virtual"><scope>QuantLib::LMMNormalDriftCalculator</scope><name>compute</name></member>
      <member refid="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1a3a016bc5a895d1accda71e5054b1779c" prot="public" virt="non-virtual"><scope>QuantLib::LMMNormalDriftCalculator</scope><name>computePlain</name></member>
      <member refid="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1a38817c92a656119aa4750e87da119785" prot="public" virt="non-virtual"><scope>QuantLib::LMMNormalDriftCalculator</scope><name>computePlain</name></member>
      <member refid="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1a71eb6591b1b9ebf0e00d41f92b33697f" prot="public" virt="non-virtual"><scope>QuantLib::LMMNormalDriftCalculator</scope><name>computeReduced</name></member>
      <member refid="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1ad584c9eca66deda39baddcb845b6ccb5" prot="public" virt="non-virtual"><scope>QuantLib::LMMNormalDriftCalculator</scope><name>computeReduced</name></member>
      <member refid="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1a7d085d79f0f35e1836ffd2f67c119840" prot="private" virt="non-virtual"><scope>QuantLib::LMMNormalDriftCalculator</scope><name>downs_</name></member>
      <member refid="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1a005ce94807fedbf485530349e88ff388" prot="private" virt="non-virtual"><scope>QuantLib::LMMNormalDriftCalculator</scope><name>e_</name></member>
      <member refid="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1a931693f5aa7c7807c7086dd7346ce70b" prot="private" virt="non-virtual"><scope>QuantLib::LMMNormalDriftCalculator</scope><name>isFullFactor_</name></member>
      <member refid="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1a8d1f07e7678e791c4bd44fd26904fef8" prot="public" virt="non-virtual"><scope>QuantLib::LMMNormalDriftCalculator</scope><name>LMMNormalDriftCalculator</name></member>
      <member refid="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1a3029a7601f5cf72d92e3eceda7cab799" prot="private" virt="non-virtual"><scope>QuantLib::LMMNormalDriftCalculator</scope><name>numberOfFactors_</name></member>
      <member refid="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1a2074620e6a87acd8e6a28aabc10c5e9b" prot="private" virt="non-virtual"><scope>QuantLib::LMMNormalDriftCalculator</scope><name>numberOfRates_</name></member>
      <member refid="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1a8e02b7348d553a6ae132f5b688dfc9cf" prot="private" virt="non-virtual"><scope>QuantLib::LMMNormalDriftCalculator</scope><name>numeraire_</name></member>
      <member refid="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1a4182aead4eab5b1b33fa3498cc09af7c" prot="private" virt="non-virtual"><scope>QuantLib::LMMNormalDriftCalculator</scope><name>oneOverTaus_</name></member>
      <member refid="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1af737a8a06b013aed77ccaef2a5715c76" prot="private" virt="non-virtual"><scope>QuantLib::LMMNormalDriftCalculator</scope><name>pseudo_</name></member>
      <member refid="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1a86d6a7e6415ad4a3aeadc21ad89f89c3" prot="private" virt="non-virtual"><scope>QuantLib::LMMNormalDriftCalculator</scope><name>tmp_</name></member>
      <member refid="class_quant_lib_1_1_l_m_m_normal_drift_calculator_1a3359e33995ebd250d1b3d21d6c6086b6" prot="private" virt="non-virtual"><scope>QuantLib::LMMNormalDriftCalculator</scope><name>ups_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

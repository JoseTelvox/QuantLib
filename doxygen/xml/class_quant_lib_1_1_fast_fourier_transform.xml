<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_fast_fourier_transform" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::FastFourierTransform</compoundname>
    <includes refid="fastfouriertransform_8hpp" local="no">fastfouriertransform.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_fast_fourier_transform_1a297c54f2ff7f03dad9a5a03f7d06c732" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; QuantLib::FastFourierTransform::cs_</definition>
        <argsstring></argsstring>
        <name>cs_</name>
        <qualifiedname>QuantLib::FastFourierTransform::cs_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/fastfouriertransform.hpp" line="80" column="21" bodyfile="ql/math/fastfouriertransform.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_fast_fourier_transform_1a3e08130a2eb7be26375e7cd9453e2e10" prot="private" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; QuantLib::FastFourierTransform::sn_</definition>
        <argsstring></argsstring>
        <name>sn_</name>
        <qualifiedname>QuantLib::FastFourierTransform::sn_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/fastfouriertransform.hpp" line="80" column="25" bodyfile="ql/math/fastfouriertransform.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_quant_lib_1_1_fast_fourier_transform_1a6be08b6a4c0091059ccb13f98e52ead3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>static std::size_t QuantLib::FastFourierTransform::min_order</definition>
        <argsstring>(std::size_t inputSize)</argsstring>
        <name>min_order</name>
        <qualifiedname>QuantLib::FastFourierTransform::min_order</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>inputSize</declname>
        </param>
        <briefdescription>
<para>the minimum order required for the given input size </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/fastfouriertransform.hpp" line="42" column="28" bodyfile="ql/math/fastfouriertransform.hpp" bodystart="42" bodyend="45"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_fast_fourier_transform_1a27d794e8d4453305ed5fce563845e265" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FastFourierTransform::FastFourierTransform</definition>
        <argsstring>(std::size_t order)</argsstring>
        <name>FastFourierTransform</name>
        <qualifiedname>QuantLib::FastFourierTransform::FastFourierTransform</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>order</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/fastfouriertransform.hpp" line="47" column="9" bodyfile="ql/math/fastfouriertransform.hpp" bodystart="47" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fast_fourier_transform_1a8e369e27019b8cc959b22a11ea44d6c0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t QuantLib::FastFourierTransform::output_size</definition>
        <argsstring>() const</argsstring>
        <name>output_size</name>
        <qualifiedname>QuantLib::FastFourierTransform::output_size</qualifiedname>
        <briefdescription>
<para>The required size for the output vector. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/fastfouriertransform.hpp" line="59" column="21" bodyfile="ql/math/fastfouriertransform.hpp" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fast_fourier_transform_1ae3207dd126570281f6e52a3953016bea" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIterator</type>
          </param>
          <param>
            <type>typename RandomAccessIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void QuantLib::FastFourierTransform::transform</definition>
        <argsstring>(InputIterator inBegin, InputIterator inEnd, RandomAccessIterator out) const</argsstring>
        <name>transform</name>
        <qualifiedname>QuantLib::FastFourierTransform::transform</qualifiedname>
        <param>
          <type>InputIterator</type>
          <declname>inBegin</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>inEnd</declname>
        </param>
        <param>
          <type>RandomAccessIterator</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>FFT transform. </para>
        </briefdescription>
        <detaileddescription>
<para>The output sequence must be allocated by the user </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/fastfouriertransform.hpp" line="66" column="14" bodyfile="ql/math/fastfouriertransform.hpp" bodystart="66" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_fast_fourier_transform_1a19ec7deb8596197f4c958ae15d2a636a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIterator</type>
          </param>
          <param>
            <type>typename RandomAccessIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void QuantLib::FastFourierTransform::inverse_transform</definition>
        <argsstring>(InputIterator inBegin, InputIterator inEnd, RandomAccessIterator out) const</argsstring>
        <name>inverse_transform</name>
        <qualifiedname>QuantLib::FastFourierTransform::inverse_transform</qualifiedname>
        <param>
          <type>InputIterator</type>
          <declname>inBegin</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>inEnd</declname>
        </param>
        <param>
          <type>RandomAccessIterator</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Inverse FFT transform. </para>
        </briefdescription>
        <detaileddescription>
<para>The output sequence must be allocated by the user. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/fastfouriertransform.hpp" line="74" column="14" bodyfile="ql/math/fastfouriertransform.hpp" bodystart="74" bodyend="77"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_quant_lib_1_1_fast_fourier_transform_1a3bffed4daa953f0c77333dc97bf70151" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename InputIterator</type>
          </param>
          <param>
            <type>typename RandomAccessIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void QuantLib::FastFourierTransform::transform_impl</definition>
        <argsstring>(InputIterator inBegin, InputIterator inEnd, RandomAccessIterator out, bool inverse) const</argsstring>
        <name>transform_impl</name>
        <qualifiedname>QuantLib::FastFourierTransform::transform_impl</qualifiedname>
        <param>
          <type>InputIterator</type>
          <declname>inBegin</declname>
        </param>
        <param>
          <type>InputIterator</type>
          <declname>inEnd</declname>
        </param>
        <param>
          <type>RandomAccessIterator</type>
          <declname>out</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>inverse</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/fastfouriertransform.hpp" line="83" column="14" bodyfile="ql/math/fastfouriertransform.hpp" bodystart="83" bodyend="110"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_quant_lib_1_1_fast_fourier_transform_1af874be403fd548d13a896f5f7a965553" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>static std::size_t QuantLib::FastFourierTransform::bit_reverse</definition>
        <argsstring>(std::size_t x, std::size_t order)</argsstring>
        <name>bit_reverse</name>
        <qualifiedname>QuantLib::FastFourierTransform::bit_reverse</qualifiedname>
        <param>
          <type>std::size_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>order</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/math/fastfouriertransform.hpp" line="112" column="28" bodyfile="ql/math/fastfouriertransform.hpp" bodystart="112" bodyend="120"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>FFT implementation. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ql/math/fastfouriertransform.hpp" line="38" column="5" bodyfile="ql/math/fastfouriertransform.hpp" bodystart="38" bodyend="121"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_fast_fourier_transform_1af874be403fd548d13a896f5f7a965553" prot="private" virt="non-virtual"><scope>QuantLib::FastFourierTransform</scope><name>bit_reverse</name></member>
      <member refid="class_quant_lib_1_1_fast_fourier_transform_1a297c54f2ff7f03dad9a5a03f7d06c732" prot="private" virt="non-virtual"><scope>QuantLib::FastFourierTransform</scope><name>cs_</name></member>
      <member refid="class_quant_lib_1_1_fast_fourier_transform_1a27d794e8d4453305ed5fce563845e265" prot="public" virt="non-virtual"><scope>QuantLib::FastFourierTransform</scope><name>FastFourierTransform</name></member>
      <member refid="class_quant_lib_1_1_fast_fourier_transform_1a19ec7deb8596197f4c958ae15d2a636a" prot="public" virt="non-virtual"><scope>QuantLib::FastFourierTransform</scope><name>inverse_transform</name></member>
      <member refid="class_quant_lib_1_1_fast_fourier_transform_1a6be08b6a4c0091059ccb13f98e52ead3" prot="public" virt="non-virtual"><scope>QuantLib::FastFourierTransform</scope><name>min_order</name></member>
      <member refid="class_quant_lib_1_1_fast_fourier_transform_1a8e369e27019b8cc959b22a11ea44d6c0" prot="public" virt="non-virtual"><scope>QuantLib::FastFourierTransform</scope><name>output_size</name></member>
      <member refid="class_quant_lib_1_1_fast_fourier_transform_1a3e08130a2eb7be26375e7cd9453e2e10" prot="private" virt="non-virtual"><scope>QuantLib::FastFourierTransform</scope><name>sn_</name></member>
      <member refid="class_quant_lib_1_1_fast_fourier_transform_1ae3207dd126570281f6e52a3953016bea" prot="public" virt="non-virtual"><scope>QuantLib::FastFourierTransform</scope><name>transform</name></member>
      <member refid="class_quant_lib_1_1_fast_fourier_transform_1a3bffed4daa953f0c77333dc97bf70151" prot="private" virt="non-virtual"><scope>QuantLib::FastFourierTransform</scope><name>transform_impl</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_f_f_t_engine" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::FFTEngine</compoundname>
    <basecompoundref prot="public" virt="non-virtual">VanillaOption::engine</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_f_f_t_vanilla_engine" prot="public" virt="non-virtual">QuantLib::FFTVanillaEngine</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_f_f_t_variance_gamma_engine" prot="public" virt="non-virtual">QuantLib::FFTVarianceGammaEngine</derivedcompoundref>
    <includes refid="fftengine_8hpp" local="no">fftengine.hpp</includes>
    <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_quant_lib_1_1_f_f_t_engine_1a9257f5d1c01a9e6a447569faa3e9bd9a" prot="private" static="no">
        <type>std::map&lt; ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_striked_type_payoff" kindref="compound">StrikedTypePayoff</ref> &gt;, <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>typedef std::map&lt;ext::shared_ptr&lt;StrikedTypePayoff&gt;, Real&gt; QuantLib::FFTEngine::PayoffResultMap</definition>
        <argsstring></argsstring>
        <name>PayoffResultMap</name>
        <qualifiedname>QuantLib::FFTEngine::PayoffResultMap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/variancegamma/fftengine.hpp" line="68" column="26" bodyfile="ql/experimental/variancegamma/fftengine.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_quant_lib_1_1_f_f_t_engine_1a843f9d3218fbdb53f7f96b33bcf23623" prot="private" static="no">
        <type>std::map&lt; <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref>, PayoffResultMap &gt;</type>
        <definition>typedef std::map&lt;Date, PayoffResultMap&gt; QuantLib::FFTEngine::ResultMap</definition>
        <argsstring></argsstring>
        <name>ResultMap</name>
        <qualifiedname>QuantLib::FFTEngine::ResultMap</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/variancegamma/fftengine.hpp" line="69" column="26" bodyfile="ql/experimental/variancegamma/fftengine.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_f_f_t_engine_1a863a2d9e30235719d8e83c90ee1e799b" prot="protected" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_stochastic_process1_d" kindref="compound">StochasticProcess1D</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;StochasticProcess1D&gt; QuantLib::FFTEngine::process_</definition>
        <argsstring></argsstring>
        <name>process_</name>
        <qualifiedname>QuantLib::FFTEngine::process_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/variancegamma/fftengine.hpp" line="64" column="25" bodyfile="ql/experimental/variancegamma/fftengine.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_f_f_t_engine_1a068f3021b2dc404c08f28dc632e0c6d9" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::FFTEngine::lambda_</definition>
        <argsstring></argsstring>
        <name>lambda_</name>
        <qualifiedname>QuantLib::FFTEngine::lambda_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/variancegamma/fftengine.hpp" line="65" column="14" bodyfile="ql/experimental/variancegamma/fftengine.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_f_f_t_engine_1a1efcf3c0fe5e61b082640376743dadd8" prot="private" static="no" mutable="no">
        <type>ResultMap</type>
        <definition>ResultMap QuantLib::FFTEngine::resultMap_</definition>
        <argsstring></argsstring>
        <name>resultMap_</name>
        <qualifiedname>QuantLib::FFTEngine::resultMap_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/variancegamma/fftengine.hpp" line="70" column="19" bodyfile="ql/experimental/variancegamma/fftengine.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_f_f_t_engine_1a68abae4807208af68adf91717eaeff13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::FFTEngine::FFTEngine</definition>
        <argsstring>(ext::shared_ptr&lt; StochasticProcess1D &gt; process, Real logStrikeSpacing)</argsstring>
        <name>FFTEngine</name>
        <qualifiedname>QuantLib::FFTEngine::FFTEngine</qualifiedname>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_stochastic_process1_d" kindref="compound">StochasticProcess1D</ref> &gt;</type>
          <declname>process</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>logStrikeSpacing</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/variancegamma/fftengine.hpp" line="50" column="9" bodyfile="ql/experimental/variancegamma/fftengine.cpp" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_f_f_t_engine_1a306c062200d366bc554a71a675a7df7d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::FFTEngine::calculate</definition>
        <argsstring>() const override</argsstring>
        <name>calculate</name>
        <qualifiedname>QuantLib::FFTEngine::calculate</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/variancegamma/fftengine.hpp" line="51" column="14" bodyfile="ql/experimental/variancegamma/fftengine.cpp" bodystart="34" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_f_f_t_engine_1ace4b6bf7e5125c93236526dc668b35b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::FFTEngine::update</definition>
        <argsstring>() override</argsstring>
        <name>update</name>
        <qualifiedname>QuantLib::FFTEngine::update</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/variancegamma/fftengine.hpp" line="52" column="14" bodyfile="ql/experimental/variancegamma/fftengine.cpp" bodystart="58" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_f_f_t_engine_1a1ce4b2d8d99ab33b1add812b3a8683fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::FFTEngine::precalculate</definition>
        <argsstring>(const std::vector&lt; ext::shared_ptr&lt; Instrument &gt; &gt; &amp;optionList)</argsstring>
        <name>precalculate</name>
        <qualifiedname>QuantLib::FFTEngine::precalculate</qualifiedname>
        <param>
          <type>const std::vector&lt; ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_instrument" kindref="compound">Instrument</ref> &gt; &gt; &amp;</type>
          <declname>optionList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/variancegamma/fftengine.hpp" line="54" column="14" bodyfile="ql/experimental/variancegamma/fftengine.cpp" bodystart="79" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_f_f_t_engine_1ae1e8fb338b13f69afa959cd902b9d4ee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::unique_ptr&lt; <ref refid="class_quant_lib_1_1_f_f_t_engine" kindref="compound">FFTEngine</ref> &gt;</type>
        <definition>virtual std::unique_ptr&lt; FFTEngine &gt; QuantLib::FFTEngine::clone</definition>
        <argsstring>() const =0</argsstring>
        <name>clone</name>
        <qualifiedname>QuantLib::FFTEngine::clone</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_f_f_t_vanilla_engine_1ad3448eda0a26771862e122358123e192">clone</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_f_f_t_variance_gamma_engine_1a5f7fa0fb3334a3ca85abe11491ef145a">clone</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/variancegamma/fftengine.hpp" line="55" column="33"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_f_f_t_engine_1ab13c7571c9214ff6d19dcb5f90db945b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void QuantLib::FFTEngine::precalculateExpiry</definition>
        <argsstring>(Date d)=0</argsstring>
        <name>precalculateExpiry</name>
        <qualifiedname>QuantLib::FFTEngine::precalculateExpiry</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_f_f_t_vanilla_engine_1a38d7fa113574c0036b46896a43e136e2">precalculateExpiry</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_f_f_t_variance_gamma_engine_1ab3691d05af49123d4441878b5d2b8f56">precalculateExpiry</reimplementedby>
        <param>
          <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/variancegamma/fftengine.hpp" line="57" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_f_f_t_engine_1acf922dbfff02917655a238d2469ace94" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>virtual std::complex&lt; Real &gt; QuantLib::FFTEngine::complexFourierTransform</definition>
        <argsstring>(std::complex&lt; Real &gt; u) const =0</argsstring>
        <name>complexFourierTransform</name>
        <qualifiedname>QuantLib::FFTEngine::complexFourierTransform</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_f_f_t_vanilla_engine_1a539650ec5e243d258d426a431d0cf758">complexFourierTransform</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_f_f_t_variance_gamma_engine_1a649917912ce28379ff51ce4ff8c8bb3d">complexFourierTransform</reimplementedby>
        <param>
          <type>std::complex&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/variancegamma/fftengine.hpp" line="58" column="30"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_f_f_t_engine_1a008f6983155001cbf5639df30f748cf2" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::FFTEngine::discountFactor</definition>
        <argsstring>(Date d) const =0</argsstring>
        <name>discountFactor</name>
        <qualifiedname>QuantLib::FFTEngine::discountFactor</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_f_f_t_vanilla_engine_1a1c146dbb5b4a2129ba86683d859d277b">discountFactor</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_f_f_t_variance_gamma_engine_1ab25443cf592f15265e231e95e66f4efb">discountFactor</reimplementedby>
        <param>
          <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/variancegamma/fftengine.hpp" line="59" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_f_f_t_engine_1ace686239d7a442371215e8e72f4293c3" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::FFTEngine::dividendYield</definition>
        <argsstring>(Date d) const =0</argsstring>
        <name>dividendYield</name>
        <qualifiedname>QuantLib::FFTEngine::dividendYield</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_f_f_t_vanilla_engine_1aeb6d91d8257c299f6108a3279599fe94">dividendYield</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_f_f_t_variance_gamma_engine_1a1bbb07cc6037b5839062e3fa50ee1398">dividendYield</reimplementedby>
        <param>
          <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/variancegamma/fftengine.hpp" line="60" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_f_f_t_engine_1a58bca556f7a1bb701d528e99e21884fc" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void QuantLib::FFTEngine::calculateUncached</definition>
        <argsstring>(const ext::shared_ptr&lt; StrikedTypePayoff &gt; &amp;payoff, const ext::shared_ptr&lt; Exercise &gt; &amp;exercise) const</argsstring>
        <name>calculateUncached</name>
        <qualifiedname>QuantLib::FFTEngine::calculateUncached</qualifiedname>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_striked_type_payoff" kindref="compound">StrikedTypePayoff</ref> &gt; &amp;</type>
          <declname>payoff</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_exercise" kindref="compound">Exercise</ref> &gt; &amp;</type>
          <declname>exercise</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/variancegamma/fftengine.hpp" line="61" column="14" bodyfile="ql/experimental/variancegamma/fftengine.cpp" bodystart="67" bodyend="77"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Base class for FFT pricing engines for European vanilla options. </para>
    </briefdescription>
    <detaileddescription>
<para>The FFT engine calculates the values of all options with the same expiry at the same time. For that reason it is very inefficient to price options individually. When using this engine you should collect all the options you wish to price in a list and call the engine&apos;s precalculate method before calling the NPV method of the option.</para>
<para>References: Carr, P. and D. B. Madan (1998), &quot;Option Valuation using the fast Fourier transform,&quot; Journal of Computational Finance, 2, 61-73. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::FFTEngine</label>
        <link refid="class_quant_lib_1_1_f_f_t_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::FFTVanillaEngine</label>
        <link refid="class_quant_lib_1_1_f_f_t_vanilla_engine"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::FFTVarianceGammaEngine</label>
        <link refid="class_quant_lib_1_1_f_f_t_variance_gamma_engine"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>VanillaOption::engine</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::FFTEngine</label>
        <link refid="class_quant_lib_1_1_f_f_t_engine"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>VanillaOption::engine</label>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/variancegamma/fftengine.hpp" line="47" column="5" bodyfile="ql/experimental/variancegamma/fftengine.hpp" bodystart="48" bodyend="71"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_f_f_t_engine_1a306c062200d366bc554a71a675a7df7d" prot="public" virt="non-virtual"><scope>QuantLib::FFTEngine</scope><name>calculate</name></member>
      <member refid="class_quant_lib_1_1_f_f_t_engine_1a58bca556f7a1bb701d528e99e21884fc" prot="protected" virt="non-virtual"><scope>QuantLib::FFTEngine</scope><name>calculateUncached</name></member>
      <member refid="class_quant_lib_1_1_f_f_t_engine_1ae1e8fb338b13f69afa959cd902b9d4ee" prot="public" virt="pure-virtual"><scope>QuantLib::FFTEngine</scope><name>clone</name></member>
      <member refid="class_quant_lib_1_1_f_f_t_engine_1acf922dbfff02917655a238d2469ace94" prot="protected" virt="pure-virtual"><scope>QuantLib::FFTEngine</scope><name>complexFourierTransform</name></member>
      <member refid="class_quant_lib_1_1_f_f_t_engine_1a008f6983155001cbf5639df30f748cf2" prot="protected" virt="pure-virtual"><scope>QuantLib::FFTEngine</scope><name>discountFactor</name></member>
      <member refid="class_quant_lib_1_1_f_f_t_engine_1ace686239d7a442371215e8e72f4293c3" prot="protected" virt="pure-virtual"><scope>QuantLib::FFTEngine</scope><name>dividendYield</name></member>
      <member refid="class_quant_lib_1_1_f_f_t_engine_1a68abae4807208af68adf91717eaeff13" prot="public" virt="non-virtual"><scope>QuantLib::FFTEngine</scope><name>FFTEngine</name></member>
      <member refid="class_quant_lib_1_1_f_f_t_engine_1a068f3021b2dc404c08f28dc632e0c6d9" prot="protected" virt="non-virtual"><scope>QuantLib::FFTEngine</scope><name>lambda_</name></member>
      <member refid="class_quant_lib_1_1_f_f_t_engine_1a9257f5d1c01a9e6a447569faa3e9bd9a" prot="private" virt="non-virtual"><scope>QuantLib::FFTEngine</scope><name>PayoffResultMap</name></member>
      <member refid="class_quant_lib_1_1_f_f_t_engine_1a1ce4b2d8d99ab33b1add812b3a8683fe" prot="public" virt="non-virtual"><scope>QuantLib::FFTEngine</scope><name>precalculate</name></member>
      <member refid="class_quant_lib_1_1_f_f_t_engine_1ab13c7571c9214ff6d19dcb5f90db945b" prot="protected" virt="pure-virtual"><scope>QuantLib::FFTEngine</scope><name>precalculateExpiry</name></member>
      <member refid="class_quant_lib_1_1_f_f_t_engine_1a863a2d9e30235719d8e83c90ee1e799b" prot="protected" virt="non-virtual"><scope>QuantLib::FFTEngine</scope><name>process_</name></member>
      <member refid="class_quant_lib_1_1_f_f_t_engine_1a843f9d3218fbdb53f7f96b33bcf23623" prot="private" virt="non-virtual"><scope>QuantLib::FFTEngine</scope><name>ResultMap</name></member>
      <member refid="class_quant_lib_1_1_f_f_t_engine_1a1efcf3c0fe5e61b082640376743dadd8" prot="private" virt="non-virtual"><scope>QuantLib::FFTEngine</scope><name>resultMap_</name></member>
      <member refid="class_quant_lib_1_1_f_f_t_engine_1ace4b6bf7e5125c93236526dc668b35b4" prot="public" virt="non-virtual"><scope>QuantLib::FFTEngine</scope><name>update</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::YoYCapFloorTermPriceSurface</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_term_structure" prot="public" virt="non-virtual">QuantLib::TermStructure</basecompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface" prot="public" virt="non-virtual">QuantLib::InterpolatedYoYCapFloorTermPriceSurface&lt; Interpolator2D, Interpolator1D &gt;</derivedcompoundref>
    <includes refid="yoycapfloortermpricesurface_8hpp" local="no">yoycapfloortermpricesurface.hpp</includes>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a1d298dc5bea2e7e29fcebec407281768" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
        <definition>Natural QuantLib::YoYCapFloorTermPriceSurface::fixingDays_</definition>
        <argsstring></argsstring>
        <name>fixingDays_</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::fixingDays_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="145" column="17" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ab1d37e13f445b151f536167032cb0d5d" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
        <definition>BusinessDayConvention QuantLib::YoYCapFloorTermPriceSurface::bdc_</definition>
        <argsstring></argsstring>
        <name>bdc_</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::bdc_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="146" column="31" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ad97064c4c1fd7a02fe08f14e309ad7a0" prot="protected" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_yo_y_inflation_index" kindref="compound">YoYInflationIndex</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;YoYInflationIndex&gt; QuantLib::YoYCapFloorTermPriceSurface::yoyIndex_</definition>
        <argsstring></argsstring>
        <name>yoyIndex_</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::yoyIndex_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="147" column="25" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ac7be278078d051319670e7301d92cf18" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref></type>
        <definition>Period QuantLib::YoYCapFloorTermPriceSurface::observationLag_</definition>
        <argsstring></argsstring>
        <name>observationLag_</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::observationLag_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="148" column="16" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1af2e2f997857ea076570439cab910fe2e" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
        <definition>Handle&lt;YieldTermStructure&gt; QuantLib::YoYCapFloorTermPriceSurface::nominalTS_</definition>
        <argsstring></argsstring>
        <name>nominalTS_</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::nominalTS_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="149" column="16" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ae2d47154e4c3c1e455ae785ddc9d27c5" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>std::vector&lt;Rate&gt; QuantLib::YoYCapFloorTermPriceSurface::cStrikes_</definition>
        <argsstring></argsstring>
        <name>cStrikes_</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::cStrikes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="151" column="21" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a6366acb6650bf99c4f70968a9a8dc689" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>std::vector&lt;Rate&gt; QuantLib::YoYCapFloorTermPriceSurface::fStrikes_</definition>
        <argsstring></argsstring>
        <name>fStrikes_</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::fStrikes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="152" column="21" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ad2fdd7beefdc6813241a7113ca3947b8" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &gt;</type>
        <definition>std::vector&lt;Period&gt; QuantLib::YoYCapFloorTermPriceSurface::cfMaturities_</definition>
        <argsstring></argsstring>
        <name>cfMaturities_</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::cfMaturities_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="153" column="21" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a624ff607d930b488cc755fdb1eee5566" prot="protected" static="no" mutable="yes">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref> &gt;</type>
        <definition>std::vector&lt;Real&gt; QuantLib::YoYCapFloorTermPriceSurface::cfMaturityTimes_</definition>
        <argsstring></argsstring>
        <name>cfMaturityTimes_</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::cfMaturityTimes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="154" column="29" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a8683e6f0346728929bdf1febf4ed1f09" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::YoYCapFloorTermPriceSurface::cPrice_</definition>
        <argsstring></argsstring>
        <name>cPrice_</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::cPrice_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="155" column="16" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a2d8b33206b788fe940cf6f291433ad5d" prot="protected" static="no" mutable="no">
        <type><ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix QuantLib::YoYCapFloorTermPriceSurface::fPrice_</definition>
        <argsstring></argsstring>
        <name>fPrice_</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::fPrice_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="156" column="16" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a7caf9a79cc0b0c41162eb3608527dbae" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool QuantLib::YoYCapFloorTermPriceSurface::indexIsInterpolated_</definition>
        <argsstring></argsstring>
        <name>indexIsInterpolated_</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::indexIsInterpolated_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="157" column="14" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1aa837354b3b2cbe7c24329ea0abd951a0" prot="protected" static="no" mutable="yes">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>std::vector&lt;Rate&gt; QuantLib::YoYCapFloorTermPriceSurface::cfStrikes_</definition>
        <argsstring></argsstring>
        <name>cfStrikes_</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::cfStrikes_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="159" column="29" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a1beef9b99263609f9f384f7fac326414" prot="protected" static="no" mutable="yes">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_yo_y_inflation_term_structure" kindref="compound">YoYInflationTermStructure</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;YoYInflationTermStructure&gt; QuantLib::YoYCapFloorTermPriceSurface::yoy_</definition>
        <argsstring></argsstring>
        <name>yoy_</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::yoy_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="160" column="33" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ad02a86b60d917a323e3914d3a9493484" prot="protected" static="no" mutable="yes">
        <type>std::pair&lt; std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;, std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &gt;</type>
        <definition>std::pair&lt;std::vector&lt;Time&gt;, std::vector&lt;Rate&gt; &gt; QuantLib::YoYCapFloorTermPriceSurface::atmYoYSwapTimeRates_</definition>
        <argsstring></argsstring>
        <name>atmYoYSwapTimeRates_</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::atmYoYSwapTimeRates_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="161" column="27" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a0d828258b458c1056058ff919436915b" prot="protected" static="no" mutable="yes">
        <type>std::pair&lt; std::vector&lt; <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &gt;, std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &gt;</type>
        <definition>std::pair&lt;std::vector&lt;Date&gt;, std::vector&lt;Rate&gt; &gt; QuantLib::YoYCapFloorTermPriceSurface::atmYoYSwapDateRates_</definition>
        <argsstring></argsstring>
        <name>atmYoYSwapDateRates_</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::atmYoYSwapDateRates_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="162" column="27" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="162" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a4d7ab2efa3cb0aa3aa6d8c5aaf87b7b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::YoYCapFloorTermPriceSurface::YoYCapFloorTermPriceSurface</definition>
        <argsstring>(Natural fixingDays, const Period &amp;yyLag, const ext::shared_ptr&lt; YoYInflationIndex &gt; &amp;yii, CPI::InterpolationType interpolation, Handle&lt; YieldTermStructure &gt; nominal, const DayCounter &amp;dc, const Calendar &amp;cal, const BusinessDayConvention &amp;bdc, const std::vector&lt; Rate &gt; &amp;cStrikes, const std::vector&lt; Rate &gt; &amp;fStrikes, const std::vector&lt; Period &gt; &amp;cfMaturities, const Matrix &amp;cPrice, const Matrix &amp;fPrice)</argsstring>
        <name>YoYCapFloorTermPriceSurface</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::YoYCapFloorTermPriceSurface</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>fixingDays</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>yyLag</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_yo_y_inflation_index" kindref="compound">YoYInflationIndex</ref> &gt; &amp;</type>
          <declname>yii</declname>
        </param>
        <param>
          <type><ref refid="struct_quant_lib_1_1_c_p_i_1adaf018681fd1d9478c984348c82c9013" kindref="member">CPI::InterpolationType</ref></type>
          <declname>interpolation</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
          <declname>nominal</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>cal</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref> &amp;</type>
          <declname>bdc</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
          <declname>cStrikes</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
          <declname>fStrikes</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &gt; &amp;</type>
          <declname>cfMaturities</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>cPrice</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>fPrice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="44" column="9" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.cpp" bodystart="25" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a4db3e0b96218013e51a4f421dae0bbcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>QuantLib::YoYCapFloorTermPriceSurface::YoYCapFloorTermPriceSurface</definition>
        <argsstring>(Natural fixingDays, const Period &amp;yyLag, const ext::shared_ptr&lt; YoYInflationIndex &gt; &amp;yii, Rate baseRate, Handle&lt; YieldTermStructure &gt; nominal, const DayCounter &amp;dc, const Calendar &amp;cal, const BusinessDayConvention &amp;bdc, const std::vector&lt; Rate &gt; &amp;cStrikes, const std::vector&lt; Rate &gt; &amp;fStrikes, const std::vector&lt; Period &gt; &amp;cfMaturities, const Matrix &amp;cPrice, const Matrix &amp;fPrice)</argsstring>
        <name>YoYCapFloorTermPriceSurface</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::YoYCapFloorTermPriceSurface</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
          <declname>fixingDays</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>yyLag</declname>
        </param>
        <param>
          <type>const ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_yo_y_inflation_index" kindref="compound">YoYInflationIndex</ref> &gt; &amp;</type>
          <declname>yii</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>baseRate</declname>
        </param>
        <param>
          <type><ref refid="class_quant_lib_1_1_handle" kindref="compound">Handle</ref>&lt; <ref refid="class_quant_lib_1_1_yield_term_structure" kindref="compound">YieldTermStructure</ref> &gt;</type>
          <declname>nominal</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_day_counter" kindref="compound">DayCounter</ref> &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_calendar" kindref="compound">Calendar</ref> &amp;</type>
          <declname>cal</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref> &amp;</type>
          <declname>bdc</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
          <declname>cStrikes</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &amp;</type>
          <declname>fStrikes</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &gt; &amp;</type>
          <declname>cfMaturities</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>cPrice</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>fPrice</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000025"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use the overload that passes an interpolation type instead. Deprecated in version 1.36. </para>
</xrefdescription></xrefsect></para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="62" column="9" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.cpp" bodystart="103" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ac6a6a54cc01ddb8ee98f2f5335a705be" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool QuantLib::YoYCapFloorTermPriceSurface::indexIsInterpolated</definition>
        <argsstring>() const</argsstring>
        <name>indexIsInterpolated</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::indexIsInterpolated</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="76" column="14" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="277" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a77b7913c7c656ab4e6eb2095b09d4c52" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref></type>
        <definition>Period QuantLib::YoYCapFloorTermPriceSurface::observationLag</definition>
        <argsstring>() const</argsstring>
        <name>observationLag</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::observationLag</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="77" column="24" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="281" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a0a48453184823e7e399f7cc50afecad9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1abfa020992bcf412e2bc99f56d4381b4a" kindref="member">Frequency</ref></type>
        <definition>Frequency QuantLib::YoYCapFloorTermPriceSurface::frequency</definition>
        <argsstring>() const</argsstring>
        <name>frequency</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::frequency</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="78" column="27" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="285" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1aef310f4ec69b1364c68501333ea1c6ee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::pair&lt; std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt;, std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &gt;</type>
        <definition>virtual std::pair&lt; std::vector&lt; Time &gt;, std::vector&lt; Rate &gt; &gt; QuantLib::YoYCapFloorTermPriceSurface::atmYoYSwapTimeRates</definition>
        <argsstring>() const =0</argsstring>
        <name>atmYoYSwapTimeRates</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::atmYoYSwapTimeRates</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1aee5f4e6c8d7b8e8a776e00292dbb3953">atmYoYSwapTimeRates</reimplementedby>
        <briefdescription>
<para>atm yoy swaps from put-call parity on cap/floor data </para>
        </briefdescription>
        <detaileddescription>
<para>uses interpolation (on surface price data), yearly maturities. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="83" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ab78adaace10117aea3aeab530de83ad1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::pair&lt; std::vector&lt; <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &gt;, std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt; &gt;</type>
        <definition>virtual std::pair&lt; std::vector&lt; Date &gt;, std::vector&lt; Rate &gt; &gt; QuantLib::YoYCapFloorTermPriceSurface::atmYoYSwapDateRates</definition>
        <argsstring>() const =0</argsstring>
        <name>atmYoYSwapDateRates</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::atmYoYSwapDateRates</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1ae20d2a1bd7e443f806852ec02c598091">atmYoYSwapDateRates</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="85" column="9"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1aa06be0ebdaaaed36b7cf1e2297800cda" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_yo_y_inflation_term_structure" kindref="compound">YoYInflationTermStructure</ref> &gt;</type>
        <definition>virtual ext::shared_ptr&lt; YoYInflationTermStructure &gt; QuantLib::YoYCapFloorTermPriceSurface::YoYTS</definition>
        <argsstring>() const =0</argsstring>
        <name>YoYTS</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::YoYTS</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1aff7ce46d135d3cb48ed9a7bd0239ac26">YoYTS</reimplementedby>
        <briefdescription>
<para>derived from yoy swap rates </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="88" column="33"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a8a2f9a6dc1e752c18753293e01ef0e46" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_yo_y_inflation_index" kindref="compound">YoYInflationIndex</ref> &gt;</type>
        <definition>ext::shared_ptr&lt; YoYInflationIndex &gt; QuantLib::YoYCapFloorTermPriceSurface::yoyIndex</definition>
        <argsstring>() const</argsstring>
        <name>yoyIndex</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::yoyIndex</qualifiedname>
        <briefdescription>
<para>index yoy is based on </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="90" column="25" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a422661e1d21b9da38de256e8d2e7ecba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1ac95a4b5bc8017f1eb4ad0b54a9af3881" kindref="member">BusinessDayConvention</ref></type>
        <definition>virtual BusinessDayConvention QuantLib::YoYCapFloorTermPriceSurface::businessDayConvention</definition>
        <argsstring>() const</argsstring>
        <name>businessDayConvention</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::businessDayConvention</qualifiedname>
        <briefdescription>
<para>inspectors </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>you don&apos;t know if price() is a cap or a floor without checking the YoYSwapATM level. </para>
</simplesect>
<simplesect kind="note"><para>atm cap/floor prices are generally inaccurate because they are from extrapolation and intersection. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="100" column="39" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="100" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a03290b15ca837c886a5bc9223d1712cd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a9adc2615d630d6006896b3402b09b03b" kindref="member">Natural</ref></type>
        <definition>virtual Natural QuantLib::YoYCapFloorTermPriceSurface::fixingDays</definition>
        <argsstring>() const</argsstring>
        <name>fixingDays</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::fixingDays</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1adacf63b172e73313fd7fd70d8ad5ec5b">fixingDays</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="101" column="25" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a3e4ceb2947769d48236df2fe888e2c6c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>virtual Date QuantLib::YoYCapFloorTermPriceSurface::baseDate</definition>
        <argsstring>() const =0</argsstring>
        <name>baseDate</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::baseDate</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1a8787bed109978b1656b65d8b83c8f90a">baseDate</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="102" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a687ac3182f92bb03ba047b898efa072f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::YoYCapFloorTermPriceSurface::price</definition>
        <argsstring>(const Date &amp;d, Rate k) const =0</argsstring>
        <name>price</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::price</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1a17d4abd943a6fd5c768f4742907bd27d">price</reimplementedby>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="103" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a98f5274bc79bb3821fd689c66e869e11" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::YoYCapFloorTermPriceSurface::capPrice</definition>
        <argsstring>(const Date &amp;d, Rate k) const =0</argsstring>
        <name>capPrice</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::capPrice</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1a6207c7f642215c684484b331a5021e79">capPrice</reimplementedby>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="104" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ab736f3f43b63251307b2f26d4b86e878" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>virtual Real QuantLib::YoYCapFloorTermPriceSurface::floorPrice</definition>
        <argsstring>(const Date &amp;d, Rate k) const =0</argsstring>
        <name>floorPrice</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::floorPrice</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1a3edef885afa6d40291e3a48606880926">floorPrice</reimplementedby>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="105" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a8fe922da0599715ad2f359931074c06b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>virtual Rate QuantLib::YoYCapFloorTermPriceSurface::atmYoYSwapRate</definition>
        <argsstring>(const Date &amp;d, bool extrapolate=true) const =0</argsstring>
        <name>atmYoYSwapRate</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::atmYoYSwapRate</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1adc8f62fb7e797c81cc84e0dc534bf30e">atmYoYSwapRate</reimplementedby>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="106" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a4c9750ec74d53ffc4aef9ed035f50725" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>virtual Rate QuantLib::YoYCapFloorTermPriceSurface::atmYoYRate</definition>
        <argsstring>(const Date &amp;d, const Period &amp;obsLag=Period(-1, Days), bool extrapolate=true) const =0</argsstring>
        <name>atmYoYRate</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::atmYoYRate</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface_1ad5700e36bc90a2fbe970bacf9982af10">atmYoYRate</reimplementedby>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>obsLag</declname>
          <defval><ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref>(-1, Days)</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="108" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a021187f13183ac92b7ae0c5abe703919" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::YoYCapFloorTermPriceSurface::price</definition>
        <argsstring>(const Period &amp;d, Rate k) const</argsstring>
        <name>price</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::price</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="112" column="22" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.cpp" bodystart="125" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ab6c1ca261db01ef6cf0f6f6f255a7af5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::YoYCapFloorTermPriceSurface::capPrice</definition>
        <argsstring>(const Period &amp;d, Rate k) const</argsstring>
        <name>capPrice</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::capPrice</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="113" column="22" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.cpp" bodystart="129" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a6988d434e327a0f9c175ffecc6d459cd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::YoYCapFloorTermPriceSurface::floorPrice</definition>
        <argsstring>(const Period &amp;d, Rate k) const</argsstring>
        <name>floorPrice</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::floorPrice</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="114" column="22" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.cpp" bodystart="133" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1aa22e79c81fffd6dc254da7420e658230" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::YoYCapFloorTermPriceSurface::atmYoYSwapRate</definition>
        <argsstring>(const Period &amp;d, bool extrapolate=true) const</argsstring>
        <name>atmYoYSwapRate</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::atmYoYSwapRate</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="115" column="22" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.cpp" bodystart="137" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a09d2bd893f43f9a59468de77c8e4bdbd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>Rate QuantLib::YoYCapFloorTermPriceSurface::atmYoYRate</definition>
        <argsstring>(const Period &amp;d, const Period &amp;obsLag=Period(-1, Days), bool extrapolate=true) const</argsstring>
        <name>atmYoYRate</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::atmYoYRate</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>obsLag</declname>
          <defval><ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref>(-1, Days)</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>extrapolate</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="117" column="22" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.cpp" bodystart="142" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ac8e13fcb01eb6045c07af1ca0b936466" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>virtual std::vector&lt; Rate &gt; QuantLib::YoYCapFloorTermPriceSurface::strikes</definition>
        <argsstring>() const</argsstring>
        <name>strikes</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::strikes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="121" column="29" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="121" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ab67baf0496ed506f55da704441f43e0e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>virtual std::vector&lt; Rate &gt; QuantLib::YoYCapFloorTermPriceSurface::capStrikes</definition>
        <argsstring>() const</argsstring>
        <name>capStrikes</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::capStrikes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="122" column="29" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a1a5f5d1e32878f425d2149b21fd3bd03" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::vector&lt; <ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref> &gt;</type>
        <definition>virtual std::vector&lt; Rate &gt; QuantLib::YoYCapFloorTermPriceSurface::floorStrikes</definition>
        <argsstring>() const</argsstring>
        <name>floorStrikes</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::floorStrikes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="123" column="29" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="123" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a6d338491cff91ce601056e7f18ba784b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>std::vector&lt; <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &gt;</type>
        <definition>virtual std::vector&lt; Period &gt; QuantLib::YoYCapFloorTermPriceSurface::maturities</definition>
        <argsstring>() const</argsstring>
        <name>maturities</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::maturities</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="124" column="29" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1adab93ec44a525348df03edbda307591c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>virtual Rate QuantLib::YoYCapFloorTermPriceSurface::minStrike</definition>
        <argsstring>() const</argsstring>
        <name>minStrike</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::minStrike</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="125" column="22" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="125" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a405a9525fbe7822ef04b2b070422169a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
        <definition>virtual Rate QuantLib::YoYCapFloorTermPriceSurface::maxStrike</definition>
        <argsstring>() const</argsstring>
        <name>maxStrike</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::maxStrike</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="126" column="22" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1af6e62cea04af296a9d5ebc3c783136d0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>virtual Date QuantLib::YoYCapFloorTermPriceSurface::minMaturity</definition>
        <argsstring>() const</argsstring>
        <name>minMaturity</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::minMaturity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="127" column="22" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="127" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1adeb3680d5f39759b107c9f48af8d6410" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>virtual Date QuantLib::YoYCapFloorTermPriceSurface::maxMaturity</definition>
        <argsstring>() const</argsstring>
        <name>maxMaturity</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::maxMaturity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="128" column="22" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a1fd6fe13f04a258e75f6d7f59eadece8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref></type>
        <definition>Date QuantLib::YoYCapFloorTermPriceSurface::yoyOptionDateFromTenor</definition>
        <argsstring>(const Period &amp;p) const</argsstring>
        <name>yoyOptionDateFromTenor</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::yoyOptionDateFromTenor</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_period" kindref="compound">Period</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="131" column="22" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.cpp" bodystart="120" bodyend="123"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1aed24266e40b5d44696271c201993de75" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool QuantLib::YoYCapFloorTermPriceSurface::checkStrike</definition>
        <argsstring>(Rate K)</argsstring>
        <name>checkStrike</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::checkStrike</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1a919ba3567cc89fca373f8d6b8e80126b" kindref="member">Rate</ref></type>
          <declname>K</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="134" column="22" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="134" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1adb64a318d64e08fc6c87c307f86c59cd" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool QuantLib::YoYCapFloorTermPriceSurface::checkMaturity</definition>
        <argsstring>(const Date &amp;d)</argsstring>
        <name>checkMaturity</name>
        <qualifiedname>QuantLib::YoYCapFloorTermPriceSurface::checkMaturity</qualifiedname>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_date" kindref="compound">Date</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="137" column="22" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="137" bodyend="139"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Abstract base class, inheriting from <ref refid="class_quant_lib_1_1_inflation_term_structure" kindref="compound">InflationTermStructure</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>Since this can create a yoy term structure it does take a YoY index.</para>
<para><xrefsect id="todo_1_todo000027"><xreftitle>Todo</xreftitle><xrefdescription><para>deal with index interpolation. </para>
</xrefdescription></xrefsect></para>
    </detaileddescription>
    <inheritancegraph>
      <node id="5">
        <label>QuantLib::Extrapolator</label>
        <link refid="class_quant_lib_1_1_extrapolator"/>
      </node>
      <node id="6">
        <label>QuantLib::InterpolatedYoYCapFloorTermPriceSurface&lt; Interpolator2D, Interpolator1D &gt;</label>
        <link refid="class_quant_lib_1_1_interpolated_yo_y_cap_floor_term_price_surface"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="3">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="2">
        <label>QuantLib::TermStructure</label>
        <link refid="class_quant_lib_1_1_term_structure"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::YoYCapFloorTermPriceSurface</label>
        <link refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="6">
        <label>QuantLib::Calendar</label>
        <link refid="class_quant_lib_1_1_calendar"/>
      </node>
      <node id="5">
        <label>QuantLib::Extrapolator</label>
        <link refid="class_quant_lib_1_1_extrapolator"/>
      </node>
      <node id="8">
        <label>QuantLib::Handle&lt; QuantLib::YieldTermStructure &gt;</label>
        <link refid="class_quant_lib_1_1_handle"/>
      </node>
      <node id="9">
        <label>QuantLib::Matrix</label>
        <link refid="class_quant_lib_1_1_matrix"/>
      </node>
      <node id="4">
        <label>QuantLib::Observable</label>
        <link refid="class_quant_lib_1_1_observable"/>
      </node>
      <node id="3">
        <label>QuantLib::Observer</label>
        <link refid="class_quant_lib_1_1_observer"/>
      </node>
      <node id="7">
        <label>QuantLib::Period</label>
        <link refid="class_quant_lib_1_1_period"/>
      </node>
      <node id="2">
        <label>QuantLib::TermStructure</label>
        <link refid="class_quant_lib_1_1_term_structure"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>calendar_</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::YoYCapFloorTermPriceSurface</label>
        <link refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>observationLag_</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>nominalTS_</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>cPrice_</edgelabel>
          <edgelabel>fPrice_</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" line="42" column="5" bodyfile="ql/experimental/inflation/yoycapfloortermpricesurface.hpp" bodystart="42" bodyend="163"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_extrapolator_1ab3936a9b5b5c163d3e511437c16c1d9e" prot="public" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>allowsExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a4c9750ec74d53ffc4aef9ed035f50725" prot="public" virt="pure-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>atmYoYRate</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a09d2bd893f43f9a59468de77c8e4bdbd" prot="public" virt="virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>atmYoYRate</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ab78adaace10117aea3aeab530de83ad1" prot="public" virt="pure-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>atmYoYSwapDateRates</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a0d828258b458c1056058ff919436915b" prot="protected" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>atmYoYSwapDateRates_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a8fe922da0599715ad2f359931074c06b" prot="public" virt="pure-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>atmYoYSwapRate</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1aa22e79c81fffd6dc254da7420e658230" prot="public" virt="virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>atmYoYSwapRate</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1aef310f4ec69b1364c68501333ea1c6ee" prot="public" virt="pure-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>atmYoYSwapTimeRates</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ad02a86b60d917a323e3914d3a9493484" prot="protected" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>atmYoYSwapTimeRates_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a3e4ceb2947769d48236df2fe888e2c6c" prot="public" virt="pure-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>baseDate</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ab1d37e13f445b151f536167032cb0d5d" prot="protected" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>bdc_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a422661e1d21b9da38de256e8d2e7ecba" prot="public" virt="virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>businessDayConvention</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac4ea5cbce495c9a47a44eeaedf7a9d45" prot="public" virt="virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>calendar</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a0a09e3fa8cdfbc9aa9685da0c35ccb90" prot="protected" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>calendar_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a98f5274bc79bb3821fd689c66e869e11" prot="public" virt="pure-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>capPrice</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ab6c1ca261db01ef6cf0f6f6f255a7af5" prot="public" virt="virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>capPrice</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ab67baf0496ed506f55da704441f43e0e" prot="public" virt="virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>capStrikes</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ad2fdd7beefdc6813241a7113ca3947b8" prot="protected" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>cfMaturities_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a624ff607d930b488cc755fdb1eee5566" prot="protected" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>cfMaturityTimes_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1aa837354b3b2cbe7c24329ea0abd951a0" prot="protected" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>cfStrikes_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1adb64a318d64e08fc6c87c307f86c59cd" prot="protected" virt="virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>checkMaturity</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1aa7297742ffbeeb0c7611f90a0f7d15bf" prot="protected" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>checkRange</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a4d246bcb13b7518a75088bf7cf01ea75" prot="protected" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>checkRange</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1aed24266e40b5d44696271c201993de75" prot="protected" virt="virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>checkStrike</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a8683e6f0346728929bdf1febf4ed1f09" prot="protected" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>cPrice_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ae2d47154e4c3c1e455ae785ddc9d27c5" prot="protected" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>cStrikes_</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac03e725e4e0685b209caa626b00924ca" prot="public" virt="virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>dayCounter</name></member>
      <member refid="class_quant_lib_1_1_observer_1acfbf794db3e7d5cfdea2cd517a195183" prot="public" virt="virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>deepUpdate</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1a6af69387d5cae0fe84d6a0c858406218" prot="public" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>disableExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1a5f7b5650a44d6c63095bc739470c8bfb" prot="public" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>enableExtrapolation</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1af1c3adaccdfaf07d3d07edaa234444f7" prot="public" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>Extrapolator</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a03290b15ca837c886a5bc9223d1712cd" prot="public" virt="virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>fixingDays</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a1d298dc5bea2e7e29fcebec407281768" prot="protected" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>fixingDays_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ab736f3f43b63251307b2f26d4b86e878" prot="public" virt="pure-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>floorPrice</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a6988d434e327a0f9c175ffecc6d459cd" prot="public" virt="virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>floorPrice</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a1a5f5d1e32878f425d2149b21fd3bd03" prot="public" virt="virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>floorStrikes</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a2d8b33206b788fe940cf6f291433ad5d" prot="protected" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>fPrice_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a0a48453184823e7e399f7cc50afecad9" prot="public" virt="virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>frequency</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a6366acb6650bf99c4f70968a9a8dc689" prot="protected" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>fStrikes_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ac6a6a54cc01ddb8ee98f2f5335a705be" prot="public" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>indexIsInterpolated</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a7caf9a79cc0b0c41162eb3608527dbae" prot="protected" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>indexIsInterpolated_</name></member>
      <member refid="class_quant_lib_1_1_observer_1ad45fa6f7242ee763d17c714a3e8bb6d7" prot="public" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>iterator</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a6d338491cff91ce601056e7f18ba784b" prot="public" virt="virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>maturities</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ae9af756bbddc15962711f77f514f08fa" prot="public" virt="pure-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>maxDate</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1adeb3680d5f39759b107c9f48af8d6410" prot="public" virt="virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>maxMaturity</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a405a9525fbe7822ef04b2b070422169a" prot="public" virt="virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>maxStrike</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a2f820c32e198e1046d97ca3dd9a807c5" prot="public" virt="virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>maxTime</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1af6e62cea04af296a9d5ebc3c783136d0" prot="public" virt="virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>minMaturity</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1adab93ec44a525348df03edbda307591c" prot="public" virt="virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>minStrike</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a8319e5c2c37b09a825d61210c9cb8e2a" prot="protected" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>moving_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1af2e2f997857ea076570439cab910fe2e" prot="protected" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>nominalTS_</name></member>
      <member refid="class_quant_lib_1_1_observable_1afb67478418efdb94382ac9d7ae904b94" prot="public" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>notifyObservers</name></member>
      <member refid="class_quant_lib_1_1_observable_1ae0d19b21fab87a01f53586a6b5c15f85" prot="public" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a942cf6a572bd95341433a6772c70cb29" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_observable_1a6c35885ef344665ecdfac9b9f3a59c0e" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>Observable</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a77b7913c7c656ab4e6eb2095b09d4c52" prot="public" virt="virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>observationLag</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ac7be278078d051319670e7301d92cf18" prot="protected" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>observationLag_</name></member>
      <member refid="class_quant_lib_1_1_observer_1a246072080d37c0cd180013417251c70b" prot="public" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1ae6e892e237db5ffe7acbef54360ef0e3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>Observer</name></member>
      <member refid="class_quant_lib_1_1_observer_1a40ad1a8bfb71e32b2916b370f3f9392c" prot="public" virt="non-virtual" ambiguityscope="QuantLib::"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ad1e086da62f05b4bc5eafa698ef6fbc3" prot="public" virt="non-virtual" ambiguityscope="QuantLib::TermStructure::QuantLib::Observable::"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_observable_1ab45941c65068ab4c8d69a7d1a72beeb7" prot="public" virt="non-virtual" ambiguityscope="QuantLib::Observable::"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>operator=</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a687ac3182f92bb03ba047b898efa072f" prot="public" virt="pure-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>price</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a021187f13183ac92b7ae0c5abe703919" prot="public" virt="virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>price</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1accbf3d4af41db0333d456eb5616c4e1e" prot="public" virt="virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>referenceDate</name></member>
      <member refid="class_quant_lib_1_1_observer_1a312bbe4a5386f10a1584f3477b3c2709" prot="public" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>registerWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1a338928c4fe626f9ccf0b98ceb318853a" prot="public" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>registerWithObservables</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1abeb79eefda70a9414f206ca9e70ced0f" prot="public" virt="virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>settlementDays</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ac8e13fcb01eb6045c07af1ca0b936466" prot="public" virt="virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>strikes</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac8365997e6d41134b4e0998fe6b4e949" prot="public" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>TermStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a95764a49e0368b653eadbe619d9ef334" prot="public" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>TermStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1aab73d2acafdc8fbdf9336e7084bd88a1" prot="public" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>TermStructure</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ac8da61eb0f06ae07a35e8e4bbe7146b0" prot="public" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>timeFromReference</name></member>
      <member refid="class_quant_lib_1_1_observer_1a297d13afa77b0e7e6deae3bab777180f" prot="public" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>unregisterWith</name></member>
      <member refid="class_quant_lib_1_1_observer_1ab88925691aba7e7d96cc5188e94361ea" prot="public" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>unregisterWithAll</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a016528f1fe9cabca6472d8f4776351e2" prot="public" virt="virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>update</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1a2fcf1c78e57786ad5c123f52dbf619e8" prot="protected" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>updated_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a1beef9b99263609f9f384f7fac326414" prot="protected" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>yoy_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a4d7ab2efa3cb0aa3aa6d8c5aaf87b7b3" prot="public" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>YoYCapFloorTermPriceSurface</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a4db3e0b96218013e51a4f421dae0bbcd" prot="public" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>YoYCapFloorTermPriceSurface</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a8a2f9a6dc1e752c18753293e01ef0e46" prot="public" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>yoyIndex</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1ad97064c4c1fd7a02fe08f14e309ad7a0" prot="protected" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>yoyIndex_</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1a1fd6fe13f04a258e75f6d7f59eadece8" prot="public" virt="virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>yoyOptionDateFromTenor</name></member>
      <member refid="class_quant_lib_1_1_yo_y_cap_floor_term_price_surface_1aa06be0ebdaaaed36b7cf1e2297800cda" prot="public" virt="pure-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>YoYTS</name></member>
      <member refid="class_quant_lib_1_1_extrapolator_1af0ca0156436ffbce159183198eb27e2e" prot="public" virt="virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>~Extrapolator</name></member>
      <member refid="class_quant_lib_1_1_observable_1a32093a7038e9bd8d28e5d378eca9f4f7" prot="public" virt="virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>~Observable</name></member>
      <member refid="class_quant_lib_1_1_observer_1a6b5c15445bbe598d34871f5a5a3ed671" prot="public" virt="virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>~Observer</name></member>
      <member refid="class_quant_lib_1_1_term_structure_1ad202ddcc14fc4a6c16686d6164d7b36c" prot="public" virt="non-virtual"><scope>QuantLib::YoYCapFloorTermPriceSurface</scope><name>~TermStructure</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

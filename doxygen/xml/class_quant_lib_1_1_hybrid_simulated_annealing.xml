<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_hybrid_simulated_annealing" kind="class" language="C++" prot="public">
    <compoundname>QuantLib::HybridSimulatedAnnealing</compoundname>
    <basecompoundref refid="class_quant_lib_1_1_optimization_method" prot="public" virt="non-virtual">QuantLib::OptimizationMethod</basecompoundref>
    <includes refid="hybridsimulatedannealing_8hpp" local="no">hybridsimulatedannealing.hpp</includes>
    <templateparamlist>
      <param>
        <type>class Sampler</type>
      </param>
      <param>
        <type>class <ref refid="namespace_quant_lib_1ac41728dd3be3e1869bbb9aec06a89d60" kindref="member">Probability</ref></type>
      </param>
      <param>
        <type>class Temperature</type>
      </param>
      <param>
        <type>class Reannealing</type>
        <defval><ref refid="struct_quant_lib_1_1_reannealing_trivial" kindref="compound">ReannealingTrivial</ref></defval>
      </param>
    </templateparamlist>
    <sectiondef kind="public-type">
      <memberdef kind="enum" id="class_quant_lib_1_1_hybrid_simulated_annealing_1ae0d81c69dd4ac1003ed348409496064e" prot="public" static="no" strong="no">
        <type></type>
        <name>LocalOptimizeScheme</name>
        <qualifiedname>QuantLib::HybridSimulatedAnnealing::LocalOptimizeScheme</qualifiedname>
        <enumvalue id="class_quant_lib_1_1_hybrid_simulated_annealing_1ae0d81c69dd4ac1003ed348409496064eafa2b967460822be85dc70e4a1f2e8894" prot="public">
          <name>NoLocalOptimize</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_hybrid_simulated_annealing_1ae0d81c69dd4ac1003ed348409496064eacc88a469c6733f50cb5166143b81307f" prot="public">
          <name>EveryNewPoint</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_hybrid_simulated_annealing_1ae0d81c69dd4ac1003ed348409496064eae9ff205172c9c8a7e9aac413d75dd598" prot="public">
          <name>EveryBestPoint</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealing.hpp" line="70" column="9" bodyfile="ql/experimental/math/hybridsimulatedannealing.hpp" bodystart="70" bodyend="74"/>
      </memberdef>
      <memberdef kind="enum" id="class_quant_lib_1_1_hybrid_simulated_annealing_1a20b57c9b72eb62f45764352d3b224196" prot="public" static="no" strong="no">
        <type></type>
        <name>ResetScheme</name>
        <qualifiedname>QuantLib::HybridSimulatedAnnealing::ResetScheme</qualifiedname>
        <enumvalue id="class_quant_lib_1_1_hybrid_simulated_annealing_1a20b57c9b72eb62f45764352d3b224196a0d994d20a515caa852dfdbc74f5eebbb" prot="public">
          <name>NoResetScheme</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_hybrid_simulated_annealing_1a20b57c9b72eb62f45764352d3b224196a82c47fe0f030f580d250f3cb7d41f31d" prot="public">
          <name>ResetToBestPoint</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="class_quant_lib_1_1_hybrid_simulated_annealing_1a20b57c9b72eb62f45764352d3b224196a19c9979194e4de3d6971e30e092233fd" prot="public">
          <name>ResetToOrigin</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealing.hpp" line="75" column="9" bodyfile="ql/experimental/math/hybridsimulatedannealing.hpp" bodystart="75" bodyend="79"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_quant_lib_1_1_hybrid_simulated_annealing_1ae8ee10a86dd47a4a2936baaab5d623aa" prot="private" static="no" mutable="no">
        <type>Sampler</type>
        <definition>Sampler QuantLib::HybridSimulatedAnnealing&lt; Sampler, Probability, Temperature, Reannealing &gt;::sampler_</definition>
        <argsstring></argsstring>
        <name>sampler_</name>
        <qualifiedname>QuantLib::HybridSimulatedAnnealing::sampler_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealing.hpp" line="104" column="17" bodyfile="ql/experimental/math/hybridsimulatedannealing.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_hybrid_simulated_annealing_1a0e3d28986b00e4ccc6d53aa9534c8326" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1ac41728dd3be3e1869bbb9aec06a89d60" kindref="member">Probability</ref></type>
        <definition>Probability QuantLib::HybridSimulatedAnnealing&lt; Sampler, Probability, Temperature, Reannealing &gt;::probability_</definition>
        <argsstring></argsstring>
        <name>probability_</name>
        <qualifiedname>QuantLib::HybridSimulatedAnnealing::probability_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealing.hpp" line="105" column="21" bodyfile="ql/experimental/math/hybridsimulatedannealing.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_hybrid_simulated_annealing_1a61ce1c706fa84cf604fd7e7ee8ce194f" prot="private" static="no" mutable="no">
        <type>Temperature</type>
        <definition>Temperature QuantLib::HybridSimulatedAnnealing&lt; Sampler, Probability, Temperature, Reannealing &gt;::temperature_</definition>
        <argsstring></argsstring>
        <name>temperature_</name>
        <qualifiedname>QuantLib::HybridSimulatedAnnealing::temperature_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealing.hpp" line="106" column="21" bodyfile="ql/experimental/math/hybridsimulatedannealing.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_hybrid_simulated_annealing_1af04404b72a3872d14e400547d92a23c4" prot="private" static="no" mutable="no">
        <type>Reannealing</type>
        <definition>Reannealing QuantLib::HybridSimulatedAnnealing&lt; Sampler, Probability, Temperature, Reannealing &gt;::reannealing_</definition>
        <argsstring></argsstring>
        <name>reannealing_</name>
        <qualifiedname>QuantLib::HybridSimulatedAnnealing::reannealing_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealing.hpp" line="107" column="21" bodyfile="ql/experimental/math/hybridsimulatedannealing.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_hybrid_simulated_annealing_1a4d5044b3708d8fb9f21322e48b0917fd" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::HybridSimulatedAnnealing&lt; Sampler, Probability, Temperature, Reannealing &gt;::startTemperature_</definition>
        <argsstring></argsstring>
        <name>startTemperature_</name>
        <qualifiedname>QuantLib::HybridSimulatedAnnealing::startTemperature_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealing.hpp" line="108" column="14" bodyfile="ql/experimental/math/hybridsimulatedannealing.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_hybrid_simulated_annealing_1a5f0ec0060b6baccad4fc10499f40ea33" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
        <definition>Real QuantLib::HybridSimulatedAnnealing&lt; Sampler, Probability, Temperature, Reannealing &gt;::endTemperature_</definition>
        <argsstring></argsstring>
        <name>endTemperature_</name>
        <qualifiedname>QuantLib::HybridSimulatedAnnealing::endTemperature_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealing.hpp" line="109" column="14" bodyfile="ql/experimental/math/hybridsimulatedannealing.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_hybrid_simulated_annealing_1af2a82a105e1a2f5c6ec836464b7f952a" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::HybridSimulatedAnnealing&lt; Sampler, Probability, Temperature, Reannealing &gt;::reAnnealSteps_</definition>
        <argsstring></argsstring>
        <name>reAnnealSteps_</name>
        <qualifiedname>QuantLib::HybridSimulatedAnnealing::reAnnealSteps_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealing.hpp" line="110" column="14" bodyfile="ql/experimental/math/hybridsimulatedannealing.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_hybrid_simulated_annealing_1a7b6d6274cbb9988fb94d004f9f4145d2" prot="private" static="no" mutable="no">
        <type>ResetScheme</type>
        <definition>ResetScheme QuantLib::HybridSimulatedAnnealing&lt; Sampler, Probability, Temperature, Reannealing &gt;::resetScheme_</definition>
        <argsstring></argsstring>
        <name>resetScheme_</name>
        <qualifiedname>QuantLib::HybridSimulatedAnnealing::resetScheme_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealing.hpp" line="111" column="21" bodyfile="ql/experimental/math/hybridsimulatedannealing.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_hybrid_simulated_annealing_1a5b3263df844d7fefd847ba0752969523" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>Size QuantLib::HybridSimulatedAnnealing&lt; Sampler, Probability, Temperature, Reannealing &gt;::resetSteps_</definition>
        <argsstring></argsstring>
        <name>resetSteps_</name>
        <qualifiedname>QuantLib::HybridSimulatedAnnealing::resetSteps_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealing.hpp" line="112" column="14" bodyfile="ql/experimental/math/hybridsimulatedannealing.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_hybrid_simulated_annealing_1a0cb108a02e38020457691ba26d31e737" prot="private" static="no" mutable="no">
        <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_optimization_method" kindref="compound">OptimizationMethod</ref> &gt;</type>
        <definition>ext::shared_ptr&lt;OptimizationMethod&gt; QuantLib::HybridSimulatedAnnealing&lt; Sampler, Probability, Temperature, Reannealing &gt;::localOptimizer_</definition>
        <argsstring></argsstring>
        <name>localOptimizer_</name>
        <qualifiedname>QuantLib::HybridSimulatedAnnealing::localOptimizer_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealing.hpp" line="113" column="25" bodyfile="ql/experimental/math/hybridsimulatedannealing.hpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_quant_lib_1_1_hybrid_simulated_annealing_1aa91b7796758a87c9bd125d0159db7516" prot="private" static="no" mutable="no">
        <type>LocalOptimizeScheme</type>
        <definition>LocalOptimizeScheme QuantLib::HybridSimulatedAnnealing&lt; Sampler, Probability, Temperature, Reannealing &gt;::optimizeScheme_</definition>
        <argsstring></argsstring>
        <name>optimizeScheme_</name>
        <qualifiedname>QuantLib::HybridSimulatedAnnealing::optimizeScheme_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealing.hpp" line="114" column="29" bodyfile="ql/experimental/math/hybridsimulatedannealing.hpp" bodystart="114" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_hybrid_simulated_annealing_1a13c57cb7a8e0c5848e10b912ba723ebd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>QuantLib::HybridSimulatedAnnealing&lt; Sampler, Probability, Temperature, Reannealing &gt;::HybridSimulatedAnnealing</definition>
        <argsstring>(const Sampler &amp;sampler, const Probability &amp;probability, Temperature temperature, const Reannealing &amp;reannealing=ReannealingTrivial(), Real startTemperature=200.0, Real endTemperature=0.01, Size reAnnealSteps=50, ResetScheme resetScheme=ResetToBestPoint, Size resetSteps=150, ext::shared_ptr&lt; OptimizationMethod &gt; localOptimizer=ext::make_shared&lt; LevenbergMarquardt &gt;(), LocalOptimizeScheme optimizeScheme=EveryBestPoint)</argsstring>
        <name>HybridSimulatedAnnealing</name>
        <qualifiedname>QuantLib::HybridSimulatedAnnealing::HybridSimulatedAnnealing</qualifiedname>
        <param>
          <type>const Sampler &amp;</type>
          <declname>sampler</declname>
        </param>
        <param>
          <type>const <ref refid="namespace_quant_lib_1ac41728dd3be3e1869bbb9aec06a89d60" kindref="member">Probability</ref> &amp;</type>
          <declname>probability</declname>
        </param>
        <param>
          <type>Temperature</type>
          <declname>temperature</declname>
        </param>
        <param>
          <type>const Reannealing &amp;</type>
          <declname>reannealing</declname>
          <defval><ref refid="struct_quant_lib_1_1_reannealing_trivial" kindref="compound">ReannealingTrivial</ref>()</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>startTemperature</declname>
          <defval>200.0</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref></type>
          <declname>endTemperature</declname>
          <defval>0.01</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>reAnnealSteps</declname>
          <defval>50</defval>
        </param>
        <param>
          <type>ResetScheme</type>
          <declname>resetScheme</declname>
          <defval>ResetToBestPoint</defval>
        </param>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>resetSteps</declname>
          <defval>150</defval>
        </param>
        <param>
          <type>ext::shared_ptr&lt; <ref refid="class_quant_lib_1_1_optimization_method" kindref="compound">OptimizationMethod</ref> &gt;</type>
          <declname>localOptimizer</declname>
          <defval>ext::make_shared&lt; <ref refid="class_quant_lib_1_1_levenberg_marquardt" kindref="compound">LevenbergMarquardt</ref> &gt;()</defval>
        </param>
        <param>
          <type>LocalOptimizeScheme</type>
          <declname>optimizeScheme</declname>
          <defval>EveryBestPoint</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealing.hpp" line="81" column="9" bodyfile="ql/experimental/math/hybridsimulatedannealing.hpp" bodystart="81" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_hybrid_simulated_annealing_1a96c109b6479ed921f29f57b399c7518c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>EndCriteria::Type</type>
        <definition>EndCriteria::Type QuantLib::HybridSimulatedAnnealing&lt; Sampler, Probability, Temperature, Reannealing &gt;::minimize</definition>
        <argsstring>(Problem &amp;P, const EndCriteria &amp;endCriteria) override</argsstring>
        <name>minimize</name>
        <qualifiedname>QuantLib::HybridSimulatedAnnealing::minimize</qualifiedname>
        <reimplements refid="class_quant_lib_1_1_optimization_method_1a28097ae73d0d2a310938f51b72a48348">minimize</reimplements>
        <param>
          <type><ref refid="class_quant_lib_1_1_problem" kindref="compound">Problem</ref> &amp;</type>
          <declname>P</declname>
        </param>
        <param>
          <type>const <ref refid="class_quant_lib_1_1_end_criteria" kindref="compound">EndCriteria</ref> &amp;</type>
          <declname>endCriteria</declname>
        </param>
        <briefdescription>
<para>minimize the optimization problem P </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/experimental/math/hybridsimulatedannealing.hpp" line="101" column="27" bodyfile="ql/experimental/math/hybridsimulatedannealing.hpp" bodystart="118" bodyend="226"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Method is fairly straightforward: 1) Sampler provides a probability density (based on current value) for the parameters. Each iteration a new draw is made from it to find a new point 2) <ref refid="namespace_quant_lib_1ac41728dd3be3e1869bbb9aec06a89d60" kindref="member">Probability</ref> determines whether the new point, obtained from Sampler, is accepted or not 3) Temperature is a schedule T(k) for the iteration k, which affects the Sampler and <ref refid="namespace_quant_lib_1ac41728dd3be3e1869bbb9aec06a89d60" kindref="member">Probability</ref> 4) Reannealing is a departure from the traditional Boltzmann Annealing method: it rescales the iteration k independently for each dimension so as to improve convergence</para>
<para>The hybrid in the name is because one can provide it a local optimizer for use whenever any new best point is found or at every accepted point, in which case is used is chose by the user.</para>
<para>Class Sampler must implement the following interface: <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()(Array<sp/>&amp;newPoint,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array<sp/>&amp;currentPoint,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array<sp/>&amp;temp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
</programlisting> Class <ref refid="namespace_quant_lib_1ac41728dd3be3e1869bbb9aec06a89d60" kindref="member">Probability</ref> must implement the following interface: <programlisting><codeline><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator()(<ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>currentValue,<sp/><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>newValue,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array<sp/>&amp;temp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
</programlisting> Class Temperature must implement the following interface: <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()(Array<sp/>&amp;newTemp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array<sp/>&amp;currTemp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array<sp/>&amp;steps)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
</programlisting> Class Reannealing must implement the following interface: <programlisting><codeline><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()(Array<sp/>&amp;<sp/>steps,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array<sp/>&amp;currentPoint,</highlight></codeline>
<codeline><highlight class="normal"><ref refid="namespace_quant_lib_1a372ac5c1a422a6b276fe0552d4d83f50" kindref="member">Real</ref><sp/>aCurrentValue,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Array<sp/>&amp;<sp/>currTemp)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>QuantLib::HybridSimulatedAnnealing&lt; Sampler, Probability, Temperature, Reannealing &gt;</label>
        <link refid="class_quant_lib_1_1_hybrid_simulated_annealing"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::OptimizationMethod</label>
        <link refid="class_quant_lib_1_1_optimization_method"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>QuantLib::HybridSimulatedAnnealing&lt; Sampler, Probability, Temperature, Reannealing &gt;</label>
        <link refid="class_quant_lib_1_1_hybrid_simulated_annealing"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>QuantLib::OptimizationMethod</label>
        <link refid="class_quant_lib_1_1_optimization_method"/>
      </node>
    </collaborationgraph>
    <location file="ql/experimental/math/hybridsimulatedannealing.hpp" line="68" column="5" bodyfile="ql/experimental/math/hybridsimulatedannealing.hpp" bodystart="68" bodyend="115"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_hybrid_simulated_annealing_1a5f0ec0060b6baccad4fc10499f40ea33" prot="private" virt="non-virtual"><scope>QuantLib::HybridSimulatedAnnealing</scope><name>endTemperature_</name></member>
      <member refid="class_quant_lib_1_1_hybrid_simulated_annealing_1ae0d81c69dd4ac1003ed348409496064eae9ff205172c9c8a7e9aac413d75dd598" prot="public" virt="non-virtual"><scope>QuantLib::HybridSimulatedAnnealing</scope><name>EveryBestPoint</name></member>
      <member refid="class_quant_lib_1_1_hybrid_simulated_annealing_1ae0d81c69dd4ac1003ed348409496064eacc88a469c6733f50cb5166143b81307f" prot="public" virt="non-virtual"><scope>QuantLib::HybridSimulatedAnnealing</scope><name>EveryNewPoint</name></member>
      <member refid="class_quant_lib_1_1_hybrid_simulated_annealing_1a13c57cb7a8e0c5848e10b912ba723ebd" prot="public" virt="non-virtual"><scope>QuantLib::HybridSimulatedAnnealing</scope><name>HybridSimulatedAnnealing</name></member>
      <member refid="class_quant_lib_1_1_hybrid_simulated_annealing_1a0cb108a02e38020457691ba26d31e737" prot="private" virt="non-virtual"><scope>QuantLib::HybridSimulatedAnnealing</scope><name>localOptimizer_</name></member>
      <member refid="class_quant_lib_1_1_hybrid_simulated_annealing_1ae0d81c69dd4ac1003ed348409496064e" prot="public" virt="non-virtual"><scope>QuantLib::HybridSimulatedAnnealing</scope><name>LocalOptimizeScheme</name></member>
      <member refid="class_quant_lib_1_1_hybrid_simulated_annealing_1a96c109b6479ed921f29f57b399c7518c" prot="public" virt="virtual"><scope>QuantLib::HybridSimulatedAnnealing</scope><name>minimize</name></member>
      <member refid="class_quant_lib_1_1_hybrid_simulated_annealing_1ae0d81c69dd4ac1003ed348409496064eafa2b967460822be85dc70e4a1f2e8894" prot="public" virt="non-virtual"><scope>QuantLib::HybridSimulatedAnnealing</scope><name>NoLocalOptimize</name></member>
      <member refid="class_quant_lib_1_1_hybrid_simulated_annealing_1a20b57c9b72eb62f45764352d3b224196a0d994d20a515caa852dfdbc74f5eebbb" prot="public" virt="non-virtual"><scope>QuantLib::HybridSimulatedAnnealing</scope><name>NoResetScheme</name></member>
      <member refid="class_quant_lib_1_1_hybrid_simulated_annealing_1aa91b7796758a87c9bd125d0159db7516" prot="private" virt="non-virtual"><scope>QuantLib::HybridSimulatedAnnealing</scope><name>optimizeScheme_</name></member>
      <member refid="class_quant_lib_1_1_hybrid_simulated_annealing_1a0e3d28986b00e4ccc6d53aa9534c8326" prot="private" virt="non-virtual"><scope>QuantLib::HybridSimulatedAnnealing</scope><name>probability_</name></member>
      <member refid="class_quant_lib_1_1_hybrid_simulated_annealing_1af04404b72a3872d14e400547d92a23c4" prot="private" virt="non-virtual"><scope>QuantLib::HybridSimulatedAnnealing</scope><name>reannealing_</name></member>
      <member refid="class_quant_lib_1_1_hybrid_simulated_annealing_1af2a82a105e1a2f5c6ec836464b7f952a" prot="private" virt="non-virtual"><scope>QuantLib::HybridSimulatedAnnealing</scope><name>reAnnealSteps_</name></member>
      <member refid="class_quant_lib_1_1_hybrid_simulated_annealing_1a20b57c9b72eb62f45764352d3b224196" prot="public" virt="non-virtual"><scope>QuantLib::HybridSimulatedAnnealing</scope><name>ResetScheme</name></member>
      <member refid="class_quant_lib_1_1_hybrid_simulated_annealing_1a7b6d6274cbb9988fb94d004f9f4145d2" prot="private" virt="non-virtual"><scope>QuantLib::HybridSimulatedAnnealing</scope><name>resetScheme_</name></member>
      <member refid="class_quant_lib_1_1_hybrid_simulated_annealing_1a5b3263df844d7fefd847ba0752969523" prot="private" virt="non-virtual"><scope>QuantLib::HybridSimulatedAnnealing</scope><name>resetSteps_</name></member>
      <member refid="class_quant_lib_1_1_hybrid_simulated_annealing_1a20b57c9b72eb62f45764352d3b224196a82c47fe0f030f580d250f3cb7d41f31d" prot="public" virt="non-virtual"><scope>QuantLib::HybridSimulatedAnnealing</scope><name>ResetToBestPoint</name></member>
      <member refid="class_quant_lib_1_1_hybrid_simulated_annealing_1a20b57c9b72eb62f45764352d3b224196a19c9979194e4de3d6971e30e092233fd" prot="public" virt="non-virtual"><scope>QuantLib::HybridSimulatedAnnealing</scope><name>ResetToOrigin</name></member>
      <member refid="class_quant_lib_1_1_hybrid_simulated_annealing_1ae8ee10a86dd47a4a2936baaab5d623aa" prot="private" virt="non-virtual"><scope>QuantLib::HybridSimulatedAnnealing</scope><name>sampler_</name></member>
      <member refid="class_quant_lib_1_1_hybrid_simulated_annealing_1a4d5044b3708d8fb9f21322e48b0917fd" prot="private" virt="non-virtual"><scope>QuantLib::HybridSimulatedAnnealing</scope><name>startTemperature_</name></member>
      <member refid="class_quant_lib_1_1_hybrid_simulated_annealing_1a61ce1c706fa84cf604fd7e7ee8ce194f" prot="private" virt="non-virtual"><scope>QuantLib::HybridSimulatedAnnealing</scope><name>temperature_</name></member>
      <member refid="class_quant_lib_1_1_optimization_method_1a2e9a51f0954eaf649d075d565d43938c" prot="public" virt="virtual"><scope>QuantLib::HybridSimulatedAnnealing</scope><name>~OptimizationMethod</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

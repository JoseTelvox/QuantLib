<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="class_quant_lib_1_1_piecewise_constant_correlation" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>QuantLib::PiecewiseConstantCorrelation</compoundname>
    <derivedcompoundref refid="class_quant_lib_1_1_cot_swap_from_fwd_correlation" prot="public" virt="non-virtual">QuantLib::CotSwapFromFwdCorrelation</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_exponential_forward_correlation" prot="public" virt="non-virtual">QuantLib::ExponentialForwardCorrelation</derivedcompoundref>
    <derivedcompoundref refid="class_quant_lib_1_1_time_homogeneous_forward_correlation" prot="public" virt="non-virtual">QuantLib::TimeHomogeneousForwardCorrelation</derivedcompoundref>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_quant_lib_1_1_piecewise_constant_correlation_1a02fedd8d3906089478609f80c652db39" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual QuantLib::PiecewiseConstantCorrelation::~PiecewiseConstantCorrelation</definition>
        <argsstring>()=default</argsstring>
        <name>~PiecewiseConstantCorrelation</name>
        <qualifiedname>QuantLib::PiecewiseConstantCorrelation::~PiecewiseConstantCorrelation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/piecewiseconstantcorrelation.hpp" line="34" column="17"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_piecewise_constant_correlation_1a721541b0459aa089119bef22d9bdeb8d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt; &amp;</type>
        <definition>virtual const std::vector&lt; Time &gt; &amp; QuantLib::PiecewiseConstantCorrelation::times</definition>
        <argsstring>() const =0</argsstring>
        <name>times</name>
        <qualifiedname>QuantLib::PiecewiseConstantCorrelation::times</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_cot_swap_from_fwd_correlation_1a23be01e111a5a781d631123d7a2b1463">times</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_exponential_forward_correlation_1ae8de248ad3e89f650dd93afccd97d653">times</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_time_homogeneous_forward_correlation_1ab85a0aff99fe6f2ec73c93349d6c0725">times</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/piecewiseconstantcorrelation.hpp" line="35" column="35"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_piecewise_constant_correlation_1a76770ee07cae5e65f5f91d9e1eb85ca0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const std::vector&lt; <ref refid="namespace_quant_lib_1a4f78b18a4dd1a979eb78b4e1e8ac1503" kindref="member">Time</ref> &gt; &amp;</type>
        <definition>virtual const std::vector&lt; Time &gt; &amp; QuantLib::PiecewiseConstantCorrelation::rateTimes</definition>
        <argsstring>() const =0</argsstring>
        <name>rateTimes</name>
        <qualifiedname>QuantLib::PiecewiseConstantCorrelation::rateTimes</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_cot_swap_from_fwd_correlation_1a28e5926317b1b5179b80ebbd0ec67a2a">rateTimes</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_exponential_forward_correlation_1a8858aceb7715954131a10938b068f976">rateTimes</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_time_homogeneous_forward_correlation_1aa3b655e7c3bd00443a9d600686526051">rateTimes</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/piecewiseconstantcorrelation.hpp" line="36" column="35"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_piecewise_constant_correlation_1a7dad84039a1238f2f03a07e436d81edb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>const std::vector&lt; <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &gt; &amp;</type>
        <definition>virtual const std::vector&lt; Matrix &gt; &amp; QuantLib::PiecewiseConstantCorrelation::correlations</definition>
        <argsstring>() const =0</argsstring>
        <name>correlations</name>
        <qualifiedname>QuantLib::PiecewiseConstantCorrelation::correlations</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_cot_swap_from_fwd_correlation_1ab5562edea52e64a9218fef5a12782213">correlations</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_exponential_forward_correlation_1ace5211b283b8b4062f997c5a104be994">correlations</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_time_homogeneous_forward_correlation_1afabaabb76b94462648ecb9ea860e38d9">correlations</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/piecewiseconstantcorrelation.hpp" line="37" column="35"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_piecewise_constant_correlation_1a1000b91a8e6075d2fd2bcee30b2d0c7e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>const <ref refid="class_quant_lib_1_1_matrix" kindref="compound">Matrix</ref> &amp;</type>
        <definition>const Matrix &amp; QuantLib::PiecewiseConstantCorrelation::correlation</definition>
        <argsstring>(Size i) const</argsstring>
        <name>correlation</name>
        <qualifiedname>QuantLib::PiecewiseConstantCorrelation::correlation</qualifiedname>
        <param>
          <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/piecewiseconstantcorrelation.hpp" line="38" column="30" bodyfile="ql/models/marketmodels/piecewiseconstantcorrelation.hpp" bodystart="43" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="class_quant_lib_1_1_piecewise_constant_correlation_1a327120ba2908115cc3eee40ba2250334" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_quant_lib_1af4cc4ef40b52c17cc455ead2a97aedb3" kindref="member">Size</ref></type>
        <definition>virtual Size QuantLib::PiecewiseConstantCorrelation::numberOfRates</definition>
        <argsstring>() const =0</argsstring>
        <name>numberOfRates</name>
        <qualifiedname>QuantLib::PiecewiseConstantCorrelation::numberOfRates</qualifiedname>
        <reimplementedby refid="class_quant_lib_1_1_cot_swap_from_fwd_correlation_1aab8c8efb791c5f898a0337a34850c68d">numberOfRates</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_exponential_forward_correlation_1a1915519def48df2cf4eea0aa08c2724e">numberOfRates</reimplementedby>
        <reimplementedby refid="class_quant_lib_1_1_time_homogeneous_forward_correlation_1ad38cc279ef59c85e76bf82de757c972b">numberOfRates</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ql/models/marketmodels/piecewiseconstantcorrelation.hpp" line="39" column="22"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>QuantLib::CotSwapFromFwdCorrelation</label>
        <link refid="class_quant_lib_1_1_cot_swap_from_fwd_correlation"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QuantLib::ExponentialForwardCorrelation</label>
        <link refid="class_quant_lib_1_1_exponential_forward_correlation"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>QuantLib::PiecewiseConstantCorrelation</label>
        <link refid="class_quant_lib_1_1_piecewise_constant_correlation"/>
      </node>
      <node id="4">
        <label>QuantLib::TimeHomogeneousForwardCorrelation</label>
        <link refid="class_quant_lib_1_1_time_homogeneous_forward_correlation"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="ql/models/marketmodels/piecewiseconstantcorrelation.hpp" line="32" column="5" bodyfile="ql/models/marketmodels/piecewiseconstantcorrelation.hpp" bodystart="32" bodyend="40"/>
    <listofallmembers>
      <member refid="class_quant_lib_1_1_piecewise_constant_correlation_1a1000b91a8e6075d2fd2bcee30b2d0c7e" prot="public" virt="virtual"><scope>QuantLib::PiecewiseConstantCorrelation</scope><name>correlation</name></member>
      <member refid="class_quant_lib_1_1_piecewise_constant_correlation_1a7dad84039a1238f2f03a07e436d81edb" prot="public" virt="pure-virtual"><scope>QuantLib::PiecewiseConstantCorrelation</scope><name>correlations</name></member>
      <member refid="class_quant_lib_1_1_piecewise_constant_correlation_1a327120ba2908115cc3eee40ba2250334" prot="public" virt="pure-virtual"><scope>QuantLib::PiecewiseConstantCorrelation</scope><name>numberOfRates</name></member>
      <member refid="class_quant_lib_1_1_piecewise_constant_correlation_1a76770ee07cae5e65f5f91d9e1eb85ca0" prot="public" virt="pure-virtual"><scope>QuantLib::PiecewiseConstantCorrelation</scope><name>rateTimes</name></member>
      <member refid="class_quant_lib_1_1_piecewise_constant_correlation_1a721541b0459aa089119bef22d9bdeb8d" prot="public" virt="pure-virtual"><scope>QuantLib::PiecewiseConstantCorrelation</scope><name>times</name></member>
      <member refid="class_quant_lib_1_1_piecewise_constant_correlation_1a02fedd8d3906089478609f80c652db39" prot="public" virt="virtual"><scope>QuantLib::PiecewiseConstantCorrelation</scope><name>~PiecewiseConstantCorrelation</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
